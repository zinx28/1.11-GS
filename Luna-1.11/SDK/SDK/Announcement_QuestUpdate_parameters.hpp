#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Announcement_QuestUpdate

#include "Basic.hpp"


namespace SDK::Params
{

// Function Announcement_QuestUpdate.Announcement_QuestUpdate_C.ExecuteUbergraph_Announcement_QuestUpdate
// 0x0038 (0x0038 - 0x0000)
struct Announcement_QuestUpdate_C_ExecuteUbergraph_Announcement_QuestUpdate final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestUpdateEntry_C*                    K2Node_CustomEvent_UpdateWidget;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UQuestUpdateEntry_C* UpdateWidget)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class AFortClientAnnouncement*                K2Node_Event_Announcement;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAnnounce_QuestUpdate_C*                K2Node_DynamicCast_AsAnnounce_Quest_Update;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnReceiveQuestUpdate_Success;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Announcement_QuestUpdate_C_ExecuteUbergraph_Announcement_QuestUpdate) == 0x000008, "Wrong alignment on Announcement_QuestUpdate_C_ExecuteUbergraph_Announcement_QuestUpdate");
static_assert(sizeof(Announcement_QuestUpdate_C_ExecuteUbergraph_Announcement_QuestUpdate) == 0x000038, "Wrong size on Announcement_QuestUpdate_C_ExecuteUbergraph_Announcement_QuestUpdate");
static_assert(offsetof(Announcement_QuestUpdate_C_ExecuteUbergraph_Announcement_QuestUpdate, EntryPoint) == 0x000000, "Member 'Announcement_QuestUpdate_C_ExecuteUbergraph_Announcement_QuestUpdate::EntryPoint' has a wrong offset!");
static_assert(offsetof(Announcement_QuestUpdate_C_ExecuteUbergraph_Announcement_QuestUpdate, K2Node_CustomEvent_UpdateWidget) == 0x000008, "Member 'Announcement_QuestUpdate_C_ExecuteUbergraph_Announcement_QuestUpdate::K2Node_CustomEvent_UpdateWidget' has a wrong offset!");
static_assert(offsetof(Announcement_QuestUpdate_C_ExecuteUbergraph_Announcement_QuestUpdate, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Announcement_QuestUpdate_C_ExecuteUbergraph_Announcement_QuestUpdate::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Announcement_QuestUpdate_C_ExecuteUbergraph_Announcement_QuestUpdate, K2Node_Event_Announcement) == 0x000020, "Member 'Announcement_QuestUpdate_C_ExecuteUbergraph_Announcement_QuestUpdate::K2Node_Event_Announcement' has a wrong offset!");
static_assert(offsetof(Announcement_QuestUpdate_C_ExecuteUbergraph_Announcement_QuestUpdate, K2Node_DynamicCast_AsAnnounce_Quest_Update) == 0x000028, "Member 'Announcement_QuestUpdate_C_ExecuteUbergraph_Announcement_QuestUpdate::K2Node_DynamicCast_AsAnnounce_Quest_Update' has a wrong offset!");
static_assert(offsetof(Announcement_QuestUpdate_C_ExecuteUbergraph_Announcement_QuestUpdate, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'Announcement_QuestUpdate_C_ExecuteUbergraph_Announcement_QuestUpdate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Announcement_QuestUpdate_C_ExecuteUbergraph_Announcement_QuestUpdate, CallFunc_OnReceiveQuestUpdate_Success) == 0x000031, "Member 'Announcement_QuestUpdate_C_ExecuteUbergraph_Announcement_QuestUpdate::CallFunc_OnReceiveQuestUpdate_Success' has a wrong offset!");

// Function Announcement_QuestUpdate.Announcement_QuestUpdate_C.AllUpdatesFinished
// 0x0008 (0x0008 - 0x0000)
struct Announcement_QuestUpdate_C_AllUpdatesFinished final
{
public:
	class UQuestUpdateEntry_C*                    UpdateWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Announcement_QuestUpdate_C_AllUpdatesFinished) == 0x000008, "Wrong alignment on Announcement_QuestUpdate_C_AllUpdatesFinished");
static_assert(sizeof(Announcement_QuestUpdate_C_AllUpdatesFinished) == 0x000008, "Wrong size on Announcement_QuestUpdate_C_AllUpdatesFinished");
static_assert(offsetof(Announcement_QuestUpdate_C_AllUpdatesFinished, UpdateWidget) == 0x000000, "Member 'Announcement_QuestUpdate_C_AllUpdatesFinished::UpdateWidget' has a wrong offset!");

// Function Announcement_QuestUpdate.Announcement_QuestUpdate_C.UpdateWidgetData
// 0x0008 (0x0008 - 0x0000)
struct Announcement_QuestUpdate_C_UpdateWidgetData final
{
public:
	class AFortClientAnnouncement*                Announcement;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Announcement_QuestUpdate_C_UpdateWidgetData) == 0x000008, "Wrong alignment on Announcement_QuestUpdate_C_UpdateWidgetData");
static_assert(sizeof(Announcement_QuestUpdate_C_UpdateWidgetData) == 0x000008, "Wrong size on Announcement_QuestUpdate_C_UpdateWidgetData");
static_assert(offsetof(Announcement_QuestUpdate_C_UpdateWidgetData, Announcement) == 0x000000, "Member 'Announcement_QuestUpdate_C_UpdateWidgetData::Announcement' has a wrong offset!");

}

