#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaHitPointBar

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ProgressBarType_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function AthenaHitPointBar.AthenaHitPointBar_C.ExecuteUbergraph_AthenaHitPointBar
// 0x00E8 (0x00E8 - 0x0000)
struct AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float HitPointValue, EFortHitPointModificationReason ModificationReason)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float HitPointStat)>           K2Node_CreateDelegate_OutputDelegate2;             // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxStamina_ReturnValue;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float HitPointStat)>           K2Node_CreateDelegate_OutputDelegate3;             // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetStamina_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxHealth_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetShield_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxShield_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaHUDContext*                      CallFunc_GetContext_ReturnValue;                   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0088(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaHUDContext*                      CallFunc_GetContext_ReturnValue2;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bIsDBNO)>                 K2Node_CreateDelegate_OutputDelegate4;             // 0x00D0(0x0010)(ZeroConstructor, NoDestructor)
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue3;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar) == 0x000008, "Wrong alignment on AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar");
static_assert(sizeof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar) == 0x0000E8, "Wrong size on AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, EntryPoint) == 0x000000, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, K2Node_CreateDelegate_OutputDelegate2) == 0x000018, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, K2Node_Event_IsDesignTime) == 0x000028, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, CallFunc_GetPlayerController_ReturnValue) == 0x000030, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, CallFunc_GetViewTarget_ReturnValue) == 0x000038, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000048, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, CallFunc_GetMaxStamina_ReturnValue) == 0x000054, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::CallFunc_GetMaxStamina_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, K2Node_CreateDelegate_OutputDelegate3) == 0x000058, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, CallFunc_GetStamina_ReturnValue) == 0x000068, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::CallFunc_GetStamina_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, CallFunc_GetMaxHealth_ReturnValue) == 0x00006C, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::CallFunc_GetMaxHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, CallFunc_GetHealth_ReturnValue) == 0x000070, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, CallFunc_GetShield_ReturnValue) == 0x000074, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::CallFunc_GetShield_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, CallFunc_GetMaxShield_ReturnValue) == 0x000078, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::CallFunc_GetMaxShield_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, CallFunc_GetContext_ReturnValue) == 0x000080, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, K2Node_Event_MyGeometry) == 0x000088, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, K2Node_Event_InDeltaTime) == 0x0000C0, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, K2Node_SwitchEnum2_CmpSuccess) == 0x0000C4, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, CallFunc_GetContext_ReturnValue2) == 0x0000C8, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, K2Node_CreateDelegate_OutputDelegate4) == 0x0000D0, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar, CallFunc_GetContext_ReturnValue3) == 0x0000E0, "Member 'AthenaHitPointBar_C_ExecuteUbergraph_AthenaHitPointBar::CallFunc_GetContext_ReturnValue3' has a wrong offset!");

// Function AthenaHitPointBar.AthenaHitPointBar_C.Tick
// 0x003C (0x003C - 0x0000)
struct AthenaHitPointBar_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaHitPointBar_C_Tick) == 0x000004, "Wrong alignment on AthenaHitPointBar_C_Tick");
static_assert(sizeof(AthenaHitPointBar_C_Tick) == 0x00003C, "Wrong size on AthenaHitPointBar_C_Tick");
static_assert(offsetof(AthenaHitPointBar_C_Tick, MyGeometry) == 0x000000, "Member 'AthenaHitPointBar_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Tick, InDeltaTime) == 0x000038, "Member 'AthenaHitPointBar_C_Tick::InDeltaTime' has a wrong offset!");

// Function AthenaHitPointBar.AthenaHitPointBar_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct AthenaHitPointBar_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaHitPointBar_C_PreConstruct) == 0x000001, "Wrong alignment on AthenaHitPointBar_C_PreConstruct");
static_assert(sizeof(AthenaHitPointBar_C_PreConstruct) == 0x000001, "Wrong size on AthenaHitPointBar_C_PreConstruct");
static_assert(offsetof(AthenaHitPointBar_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'AthenaHitPointBar_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function AthenaHitPointBar.AthenaHitPointBar_C.UpdateMaxValue
// 0x0020 (0x0020 - 0x0000)
struct AthenaHitPointBar_C_UpdateMaxValue final
{
public:
	float                                         Max;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0008(0x0018)()
};
static_assert(alignof(AthenaHitPointBar_C_UpdateMaxValue) == 0x000008, "Wrong alignment on AthenaHitPointBar_C_UpdateMaxValue");
static_assert(sizeof(AthenaHitPointBar_C_UpdateMaxValue) == 0x000020, "Wrong size on AthenaHitPointBar_C_UpdateMaxValue");
static_assert(offsetof(AthenaHitPointBar_C_UpdateMaxValue, Max) == 0x000000, "Member 'AthenaHitPointBar_C_UpdateMaxValue::Max' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_UpdateMaxValue, CallFunc_Conv_FloatToText_ReturnValue) == 0x000008, "Member 'AthenaHitPointBar_C_UpdateMaxValue::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function AthenaHitPointBar.AthenaHitPointBar_C.UpdateCurrentValue
// 0x0028 (0x0028 - 0x0000)
struct AthenaHitPointBar_C_UpdateCurrentValue final
{
public:
	float                                         Current;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortHitPointModificationReason               Reason;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0010(0x0018)()
};
static_assert(alignof(AthenaHitPointBar_C_UpdateCurrentValue) == 0x000008, "Wrong alignment on AthenaHitPointBar_C_UpdateCurrentValue");
static_assert(sizeof(AthenaHitPointBar_C_UpdateCurrentValue) == 0x000028, "Wrong size on AthenaHitPointBar_C_UpdateCurrentValue");
static_assert(offsetof(AthenaHitPointBar_C_UpdateCurrentValue, Current) == 0x000000, "Member 'AthenaHitPointBar_C_UpdateCurrentValue::Current' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_UpdateCurrentValue, Reason) == 0x000004, "Member 'AthenaHitPointBar_C_UpdateCurrentValue::Reason' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_UpdateCurrentValue, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'AthenaHitPointBar_C_UpdateCurrentValue::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_UpdateCurrentValue, CallFunc_FMax_ReturnValue) == 0x000008, "Member 'AthenaHitPointBar_C_UpdateCurrentValue::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_UpdateCurrentValue, CallFunc_Conv_FloatToText_ReturnValue) == 0x000010, "Member 'AthenaHitPointBar_C_UpdateCurrentValue::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");

// Function AthenaHitPointBar.AthenaHitPointBar_C.Update Fill Bar
// 0x0060 (0x0060 - 0x0000)
struct AthenaHitPointBar_C_Update_Fill_Bar final
{
public:
	float                                         Temp_float_Variable;                               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeX_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USizeBoxSlot*                           K2Node_DynamicCast_AsSize_Box_Slot;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue2;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0050(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaHitPointBar_C_Update_Fill_Bar) == 0x000008, "Wrong alignment on AthenaHitPointBar_C_Update_Fill_Bar");
static_assert(sizeof(AthenaHitPointBar_C_Update_Fill_Bar) == 0x000060, "Wrong size on AthenaHitPointBar_C_Update_Fill_Bar");
static_assert(offsetof(AthenaHitPointBar_C_Update_Fill_Bar, Temp_float_Variable) == 0x000000, "Member 'AthenaHitPointBar_C_Update_Fill_Bar::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Update_Fill_Bar, CallFunc_Blueprint_GetSizeX_ReturnValue) == 0x000004, "Member 'AthenaHitPointBar_C_Update_Fill_Bar::CallFunc_Blueprint_GetSizeX_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Update_Fill_Bar, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'AthenaHitPointBar_C_Update_Fill_Bar::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Update_Fill_Bar, Temp_bool_Variable) == 0x00000C, "Member 'AthenaHitPointBar_C_Update_Fill_Bar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Update_Fill_Bar, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'AthenaHitPointBar_C_Update_Fill_Bar::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Update_Fill_Bar, K2Node_DynamicCast_AsSize_Box_Slot) == 0x000018, "Member 'AthenaHitPointBar_C_Update_Fill_Bar::K2Node_DynamicCast_AsSize_Box_Slot' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Update_Fill_Bar, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AthenaHitPointBar_C_Update_Fill_Bar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Update_Fill_Bar, CallFunc_BreakVector2D_X) == 0x000024, "Member 'AthenaHitPointBar_C_Update_Fill_Bar::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Update_Fill_Bar, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'AthenaHitPointBar_C_Update_Fill_Bar::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Update_Fill_Bar, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x00002C, "Member 'AthenaHitPointBar_C_Update_Fill_Bar::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Update_Fill_Bar, CallFunc_FMax_ReturnValue) == 0x000030, "Member 'AthenaHitPointBar_C_Update_Fill_Bar::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Update_Fill_Bar, CallFunc_FMax_ReturnValue2) == 0x000034, "Member 'AthenaHitPointBar_C_Update_Fill_Bar::CallFunc_FMax_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Update_Fill_Bar, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000038, "Member 'AthenaHitPointBar_C_Update_Fill_Bar::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Update_Fill_Bar, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x00003C, "Member 'AthenaHitPointBar_C_Update_Fill_Bar::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Update_Fill_Bar, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'AthenaHitPointBar_C_Update_Fill_Bar::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Update_Fill_Bar, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x000044, "Member 'AthenaHitPointBar_C_Update_Fill_Bar::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Update_Fill_Bar, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000048, "Member 'AthenaHitPointBar_C_Update_Fill_Bar::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Update_Fill_Bar, K2Node_Select_Default) == 0x00004C, "Member 'AthenaHitPointBar_C_Update_Fill_Bar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Update_Fill_Bar, K2Node_MakeStruct_LinearColor) == 0x000050, "Member 'AthenaHitPointBar_C_Update_Fill_Bar::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function AthenaHitPointBar.AthenaHitPointBar_C.UpdateCurrentValueWithoutReason
// 0x0004 (0x0004 - 0x0000)
struct AthenaHitPointBar_C_UpdateCurrentValueWithoutReason final
{
public:
	float                                         Current;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaHitPointBar_C_UpdateCurrentValueWithoutReason) == 0x000004, "Wrong alignment on AthenaHitPointBar_C_UpdateCurrentValueWithoutReason");
static_assert(sizeof(AthenaHitPointBar_C_UpdateCurrentValueWithoutReason) == 0x000004, "Wrong size on AthenaHitPointBar_C_UpdateCurrentValueWithoutReason");
static_assert(offsetof(AthenaHitPointBar_C_UpdateCurrentValueWithoutReason, Current) == 0x000000, "Member 'AthenaHitPointBar_C_UpdateCurrentValueWithoutReason::Current' has a wrong offset!");

// Function AthenaHitPointBar.AthenaHitPointBar_C.Initialize Bar
// 0x01E8 (0x01E8 - 0x0000)
struct AthenaHitPointBar_C_Initialize_Bar final
{
public:
	EProgressBarType                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable2;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable3;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProgressBarType                              Temp_byte_Variable2;                               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0024(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable2;                             // 0x0034(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable3;                             // 0x0044(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProgressBarType                              Temp_byte_Variable3;                               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable4;                             // 0x0058(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable5;                             // 0x0068(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable6;                             // 0x0078(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProgressBarType                              Temp_byte_Variable4;                               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable7;                             // 0x008C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable8;                             // 0x009C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable9;                             // 0x00AC(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00BC(0x0010)(NoDestructor)
	struct FLinearColor                           Temp_struct_Variable10;                            // 0x00CC(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable11;                            // 0x00E8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable12;                            // 0x00F8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProgressBarType                              Temp_byte_Variable5;                               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable13;                            // 0x010C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable14;                            // 0x011C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable15;                            // 0x012C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProgressBarType                              Temp_byte_Variable6;                               // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable2;                              // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable3;                              // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EProgressBarType                              Temp_byte_Variable7;                               // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Blueprint_GetSizeX_ReturnValue;           // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue2;          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeY_ReturnValue;           // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select2_Default;                            // 0x0190(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select3_Default;                            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select4_Default;                            // 0x01A8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select5_Default;                            // 0x01B8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select6_Default;                            // 0x01C8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select7_Default;                            // 0x01D8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaHitPointBar_C_Initialize_Bar) == 0x000008, "Wrong alignment on AthenaHitPointBar_C_Initialize_Bar");
static_assert(sizeof(AthenaHitPointBar_C_Initialize_Bar) == 0x0001E8, "Wrong size on AthenaHitPointBar_C_Initialize_Bar");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_byte_Variable) == 0x000000, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_object_Variable) == 0x000008, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_object_Variable2) == 0x000010, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_object_Variable3) == 0x000018, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_byte_Variable2) == 0x000020, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_struct_Variable) == 0x000024, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_struct_Variable2) == 0x000034, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_struct_Variable3) == 0x000044, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_byte_Variable3) == 0x000054, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_struct_Variable4) == 0x000058, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_struct_Variable5) == 0x000068, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_struct_Variable5' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_struct_Variable6) == 0x000078, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_struct_Variable6' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_byte_Variable4) == 0x000088, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_struct_Variable7) == 0x00008C, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_struct_Variable7' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_struct_Variable8) == 0x00009C, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_struct_Variable8' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_struct_Variable9) == 0x0000AC, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_struct_Variable9' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, K2Node_MakeStruct_Margin) == 0x0000BC, "Member 'AthenaHitPointBar_C_Initialize_Bar::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_struct_Variable10) == 0x0000CC, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_struct_Variable10' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x0000E0, "Member 'AthenaHitPointBar_C_Initialize_Bar::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_struct_Variable11) == 0x0000E8, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_struct_Variable11' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_struct_Variable12) == 0x0000F8, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_struct_Variable12' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_byte_Variable5) == 0x000108, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_struct_Variable13) == 0x00010C, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_struct_Variable13' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_struct_Variable14) == 0x00011C, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_struct_Variable14' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_struct_Variable15) == 0x00012C, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_struct_Variable15' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_byte_Variable6) == 0x00013C, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_byte_Variable6' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_class_Variable) == 0x000140, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_class_Variable2) == 0x000148, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_class_Variable2' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_class_Variable3) == 0x000150, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_class_Variable3' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000158, "Member 'AthenaHitPointBar_C_Initialize_Bar::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, Temp_byte_Variable7) == 0x000160, "Member 'AthenaHitPointBar_C_Initialize_Bar::Temp_byte_Variable7' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, CallFunc_Blueprint_GetSizeX_ReturnValue) == 0x000164, "Member 'AthenaHitPointBar_C_Initialize_Bar::CallFunc_Blueprint_GetSizeX_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000168, "Member 'AthenaHitPointBar_C_Initialize_Bar::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, CallFunc_GetDynamicMaterial_ReturnValue2) == 0x000170, "Member 'AthenaHitPointBar_C_Initialize_Bar::CallFunc_GetDynamicMaterial_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000178, "Member 'AthenaHitPointBar_C_Initialize_Bar::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, CallFunc_Blueprint_GetSizeY_ReturnValue) == 0x00017C, "Member 'AthenaHitPointBar_C_Initialize_Bar::CallFunc_Blueprint_GetSizeY_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000180, "Member 'AthenaHitPointBar_C_Initialize_Bar::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, K2Node_Select_Default) == 0x000188, "Member 'AthenaHitPointBar_C_Initialize_Bar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, K2Node_Select2_Default) == 0x000190, "Member 'AthenaHitPointBar_C_Initialize_Bar::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, K2Node_Select3_Default) == 0x0001A0, "Member 'AthenaHitPointBar_C_Initialize_Bar::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, K2Node_Select4_Default) == 0x0001A8, "Member 'AthenaHitPointBar_C_Initialize_Bar::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, K2Node_Select5_Default) == 0x0001B8, "Member 'AthenaHitPointBar_C_Initialize_Bar::K2Node_Select5_Default' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, K2Node_Select6_Default) == 0x0001C8, "Member 'AthenaHitPointBar_C_Initialize_Bar::K2Node_Select6_Default' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Initialize_Bar, K2Node_Select7_Default) == 0x0001D8, "Member 'AthenaHitPointBar_C_Initialize_Bar::K2Node_Select7_Default' has a wrong offset!");

// Function AthenaHitPointBar.AthenaHitPointBar_C.Update Delta Bar
// 0x0008 (0x0008 - 0x0000)
struct AthenaHitPointBar_C_Update_Delta_Bar final
{
public:
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaHitPointBar_C_Update_Delta_Bar) == 0x000004, "Wrong alignment on AthenaHitPointBar_C_Update_Delta_Bar");
static_assert(sizeof(AthenaHitPointBar_C_Update_Delta_Bar) == 0x000008, "Wrong size on AthenaHitPointBar_C_Update_Delta_Bar");
static_assert(offsetof(AthenaHitPointBar_C_Update_Delta_Bar, CallFunc_FMax_ReturnValue) == 0x000000, "Member 'AthenaHitPointBar_C_Update_Delta_Bar::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Update_Delta_Bar, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'AthenaHitPointBar_C_Update_Delta_Bar::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function AthenaHitPointBar.AthenaHitPointBar_C.Update
// 0x0008 (0x0008 - 0x0000)
struct AthenaHitPointBar_C_Update final
{
public:
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaHitPointBar_C_Update) == 0x000004, "Wrong alignment on AthenaHitPointBar_C_Update");
static_assert(sizeof(AthenaHitPointBar_C_Update) == 0x000008, "Wrong size on AthenaHitPointBar_C_Update");
static_assert(offsetof(AthenaHitPointBar_C_Update, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000000, "Member 'AthenaHitPointBar_C_Update::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_Update, CallFunc_Lerp_ReturnValue) == 0x000004, "Member 'AthenaHitPointBar_C_Update::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function AthenaHitPointBar.AthenaHitPointBar_C.UpdateVolatileForUpdate
// 0x000C (0x000C - 0x0000)
struct AthenaHitPointBar_C_UpdateVolatileForUpdate final
{
public:
	bool                                          NewVolatile;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EProgressBarType                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaHitPointBar_C_UpdateVolatileForUpdate) == 0x000004, "Wrong alignment on AthenaHitPointBar_C_UpdateVolatileForUpdate");
static_assert(sizeof(AthenaHitPointBar_C_UpdateVolatileForUpdate) == 0x00000C, "Wrong size on AthenaHitPointBar_C_UpdateVolatileForUpdate");
static_assert(offsetof(AthenaHitPointBar_C_UpdateVolatileForUpdate, NewVolatile) == 0x000000, "Member 'AthenaHitPointBar_C_UpdateVolatileForUpdate::NewVolatile' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_UpdateVolatileForUpdate, Temp_byte_Variable) == 0x000001, "Member 'AthenaHitPointBar_C_UpdateVolatileForUpdate::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_UpdateVolatileForUpdate, K2Node_Select_Default) == 0x000004, "Member 'AthenaHitPointBar_C_UpdateVolatileForUpdate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_UpdateVolatileForUpdate, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'AthenaHitPointBar_C_UpdateVolatileForUpdate::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_UpdateVolatileForUpdate, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000009, "Member 'AthenaHitPointBar_C_UpdateVolatileForUpdate::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function AthenaHitPointBar.AthenaHitPointBar_C.UpdateHealthType
// 0x0018 (0x0018 - 0x0000)
struct AthenaHitPointBar_C_UpdateHealthType final
{
public:
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDBNO_ReturnValue;                       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaHitPointBar_C_UpdateHealthType) == 0x000008, "Wrong alignment on AthenaHitPointBar_C_UpdateHealthType");
static_assert(sizeof(AthenaHitPointBar_C_UpdateHealthType) == 0x000018, "Wrong size on AthenaHitPointBar_C_UpdateHealthType");
static_assert(offsetof(AthenaHitPointBar_C_UpdateHealthType, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000000, "Member 'AthenaHitPointBar_C_UpdateHealthType::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_UpdateHealthType, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x000008, "Member 'AthenaHitPointBar_C_UpdateHealthType::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_UpdateHealthType, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'AthenaHitPointBar_C_UpdateHealthType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_UpdateHealthType, CallFunc_IsDBNO_ReturnValue) == 0x000011, "Member 'AthenaHitPointBar_C_UpdateHealthType::CallFunc_IsDBNO_ReturnValue' has a wrong offset!");

// Function AthenaHitPointBar.AthenaHitPointBar_C.UpdateDBNOState
// 0x0018 (0x0018 - 0x0000)
struct AthenaHitPointBar_C_UpdateDBNOState final
{
public:
	bool                                          bIsDBNO;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaHitPointBar_C_UpdateDBNOState) == 0x000008, "Wrong alignment on AthenaHitPointBar_C_UpdateDBNOState");
static_assert(sizeof(AthenaHitPointBar_C_UpdateDBNOState) == 0x000018, "Wrong size on AthenaHitPointBar_C_UpdateDBNOState");
static_assert(offsetof(AthenaHitPointBar_C_UpdateDBNOState, bIsDBNO) == 0x000000, "Member 'AthenaHitPointBar_C_UpdateDBNOState::bIsDBNO' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_UpdateDBNOState, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000001, "Member 'AthenaHitPointBar_C_UpdateDBNOState::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_UpdateDBNOState, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'AthenaHitPointBar_C_UpdateDBNOState::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaHitPointBar_C_UpdateDBNOState, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'AthenaHitPointBar_C_UpdateDBNOState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

