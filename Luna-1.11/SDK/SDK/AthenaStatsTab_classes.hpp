#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaStatsTab

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaStatsTab.AthenaStatsTab_C
// 0x0100 (0x0590 - 0x0490)
class UAthenaStatsTab_C final : public UAthenaStatsScreenBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0490(0x0008)(Transient, DuplicateTransient)
	class UCommonTextBlock*                       AccountLevelLabel;                                 // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UComingSoonPlaceholderWidget_C*         ComingSoonPlaceholderWidget;                       // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  CommonWidgetSwitcher_0;                            // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Divider;                                           // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Divider1;                                          // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Divider2;                                          // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       FriendMatchXpBoostPointsLabel;                     // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  HiddenSwitcher;                                    // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaStatsRow_C*                      KillsRow;                                          // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       LastUpdatedTime;                                   // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         LastUpdatedTimeBox;                                // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaStatsRow_C*                      MatchesPlayedRow;                                  // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       MatchXpBoostPointsLabel;                           // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPlayerRankEmblem_C*                    PlayerRankEmblem;                                  // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ProgressSpinner;                                   // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       SeasonLabel;                                       // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaMainStatTile_C*                  SecondTierTile;                                    // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaMainStatTile_C*                  ThirdTierTile;                                     // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaStatsRow_C*                      TimePlayedRow;                                     // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         UpdatingBox;                                       // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAthenaMainStatTile_C*                  WinsTile;                                          // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<class FString, class FText>              TagToDisplayName;                                  // 0x0540(0x0050)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_AthenaStatsTab(int32 EntryPoint);
	void OnDeactivated();
	void OnQueryStarted();
	void BndEvt__StatsTabList_K2Node_ComponentBoundEvent_0_OnTabSelected__DelegateSignature(class FName TabId);
	void OnQueryFinished(bool bWasSuccessful);
	void OnActivated();
	void Construct();
	void UpdateStats();
	void UpdateLastUpdatedTime();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaStatsTab_C">();
	}
	static class UAthenaStatsTab_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaStatsTab_C>();
	}
};
static_assert(alignof(UAthenaStatsTab_C) == 0x000008, "Wrong alignment on UAthenaStatsTab_C");
static_assert(sizeof(UAthenaStatsTab_C) == 0x000590, "Wrong size on UAthenaStatsTab_C");
static_assert(offsetof(UAthenaStatsTab_C, UberGraphFrame) == 0x000490, "Member 'UAthenaStatsTab_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, AccountLevelLabel) == 0x000498, "Member 'UAthenaStatsTab_C::AccountLevelLabel' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, ComingSoonPlaceholderWidget) == 0x0004A0, "Member 'UAthenaStatsTab_C::ComingSoonPlaceholderWidget' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, CommonWidgetSwitcher_0) == 0x0004A8, "Member 'UAthenaStatsTab_C::CommonWidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, Divider) == 0x0004B0, "Member 'UAthenaStatsTab_C::Divider' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, Divider1) == 0x0004B8, "Member 'UAthenaStatsTab_C::Divider1' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, Divider2) == 0x0004C0, "Member 'UAthenaStatsTab_C::Divider2' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, FriendMatchXpBoostPointsLabel) == 0x0004C8, "Member 'UAthenaStatsTab_C::FriendMatchXpBoostPointsLabel' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, HiddenSwitcher) == 0x0004D0, "Member 'UAthenaStatsTab_C::HiddenSwitcher' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, KillsRow) == 0x0004D8, "Member 'UAthenaStatsTab_C::KillsRow' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, LastUpdatedTime) == 0x0004E0, "Member 'UAthenaStatsTab_C::LastUpdatedTime' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, LastUpdatedTimeBox) == 0x0004E8, "Member 'UAthenaStatsTab_C::LastUpdatedTimeBox' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, MatchesPlayedRow) == 0x0004F0, "Member 'UAthenaStatsTab_C::MatchesPlayedRow' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, MatchXpBoostPointsLabel) == 0x0004F8, "Member 'UAthenaStatsTab_C::MatchXpBoostPointsLabel' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, PlayerRankEmblem) == 0x000500, "Member 'UAthenaStatsTab_C::PlayerRankEmblem' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, ProgressSpinner) == 0x000508, "Member 'UAthenaStatsTab_C::ProgressSpinner' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, SeasonLabel) == 0x000510, "Member 'UAthenaStatsTab_C::SeasonLabel' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, SecondTierTile) == 0x000518, "Member 'UAthenaStatsTab_C::SecondTierTile' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, ThirdTierTile) == 0x000520, "Member 'UAthenaStatsTab_C::ThirdTierTile' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, TimePlayedRow) == 0x000528, "Member 'UAthenaStatsTab_C::TimePlayedRow' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, UpdatingBox) == 0x000530, "Member 'UAthenaStatsTab_C::UpdatingBox' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, WinsTile) == 0x000538, "Member 'UAthenaStatsTab_C::WinsTile' has a wrong offset!");
static_assert(offsetof(UAthenaStatsTab_C, TagToDisplayName) == 0x000540, "Member 'UAthenaStatsTab_C::TagToDisplayName' has a wrong offset!");

}

