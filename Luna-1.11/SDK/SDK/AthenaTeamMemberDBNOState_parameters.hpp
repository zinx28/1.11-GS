#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaTeamMemberDBNOState

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function AthenaTeamMemberDBNOState.AthenaTeamMemberDBNOState_C.ExecuteUbergraph_AthenaTeamMemberDBNOState
// 0x0008 (0x0008 - 0x0000)
struct AthenaTeamMemberDBNOState_C_ExecuteUbergraph_AthenaTeamMemberDBNOState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaTeamMemberDBNOState_C_ExecuteUbergraph_AthenaTeamMemberDBNOState) == 0x000004, "Wrong alignment on AthenaTeamMemberDBNOState_C_ExecuteUbergraph_AthenaTeamMemberDBNOState");
static_assert(sizeof(AthenaTeamMemberDBNOState_C_ExecuteUbergraph_AthenaTeamMemberDBNOState) == 0x000008, "Wrong size on AthenaTeamMemberDBNOState_C_ExecuteUbergraph_AthenaTeamMemberDBNOState");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_ExecuteUbergraph_AthenaTeamMemberDBNOState, EntryPoint) == 0x000000, "Member 'AthenaTeamMemberDBNOState_C_ExecuteUbergraph_AthenaTeamMemberDBNOState::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_ExecuteUbergraph_AthenaTeamMemberDBNOState, K2Node_Event_IsDesignTime) == 0x000004, "Member 'AthenaTeamMemberDBNOState_C_ExecuteUbergraph_AthenaTeamMemberDBNOState::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function AthenaTeamMemberDBNOState.AthenaTeamMemberDBNOState_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct AthenaTeamMemberDBNOState_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaTeamMemberDBNOState_C_PreConstruct) == 0x000001, "Wrong alignment on AthenaTeamMemberDBNOState_C_PreConstruct");
static_assert(sizeof(AthenaTeamMemberDBNOState_C_PreConstruct) == 0x000001, "Wrong size on AthenaTeamMemberDBNOState_C_PreConstruct");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'AthenaTeamMemberDBNOState_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function AthenaTeamMemberDBNOState.AthenaTeamMemberDBNOState_C.Set DBNO
// 0x0002 (0x0002 - 0x0000)
struct AthenaTeamMemberDBNOState_C_Set_DBNO final
{
public:
	bool                                          Is_DBNO;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaTeamMemberDBNOState_C_Set_DBNO) == 0x000001, "Wrong alignment on AthenaTeamMemberDBNOState_C_Set_DBNO");
static_assert(sizeof(AthenaTeamMemberDBNOState_C_Set_DBNO) == 0x000002, "Wrong size on AthenaTeamMemberDBNOState_C_Set_DBNO");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_Set_DBNO, Is_DBNO) == 0x000000, "Member 'AthenaTeamMemberDBNOState_C_Set_DBNO::Is_DBNO' has a wrong offset!");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_Set_DBNO, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'AthenaTeamMemberDBNOState_C_Set_DBNO::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function AthenaTeamMemberDBNOState.AthenaTeamMemberDBNOState_C.Set Reviving
// 0x0028 (0x0028 - 0x0000)
struct AthenaTeamMemberDBNOState_C_Set_Reviving final
{
public:
	bool                                          Is_Reviving;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAccurateRealTime_Seconds;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAccurateRealTime_PartialSeconds;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaTeamMemberDBNOState_C_Set_Reviving) == 0x000008, "Wrong alignment on AthenaTeamMemberDBNOState_C_Set_Reviving");
static_assert(sizeof(AthenaTeamMemberDBNOState_C_Set_Reviving) == 0x000028, "Wrong size on AthenaTeamMemberDBNOState_C_Set_Reviving");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_Set_Reviving, Is_Reviving) == 0x000000, "Member 'AthenaTeamMemberDBNOState_C_Set_Reviving::Is_Reviving' has a wrong offset!");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_Set_Reviving, CallFunc_GetAccurateRealTime_Seconds) == 0x000004, "Member 'AthenaTeamMemberDBNOState_C_Set_Reviving::CallFunc_GetAccurateRealTime_Seconds' has a wrong offset!");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_Set_Reviving, CallFunc_GetAccurateRealTime_PartialSeconds) == 0x000008, "Member 'AthenaTeamMemberDBNOState_C_Set_Reviving::CallFunc_GetAccurateRealTime_PartialSeconds' has a wrong offset!");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_Set_Reviving, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'AthenaTeamMemberDBNOState_C_Set_Reviving::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_Set_Reviving, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'AthenaTeamMemberDBNOState_C_Set_Reviving::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_Set_Reviving, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'AthenaTeamMemberDBNOState_C_Set_Reviving::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_Set_Reviving, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000020, "Member 'AthenaTeamMemberDBNOState_C_Set_Reviving::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function AthenaTeamMemberDBNOState.AthenaTeamMemberDBNOState_C.RefreshVisuals
// 0x0028 (0x0028 - 0x0000)
struct AthenaTeamMemberDBNOState_C_RefreshVisuals final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable3;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable2;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select2_Default;                            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select3_Default;                            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaTeamMemberDBNOState_C_RefreshVisuals) == 0x000008, "Wrong alignment on AthenaTeamMemberDBNOState_C_RefreshVisuals");
static_assert(sizeof(AthenaTeamMemberDBNOState_C_RefreshVisuals) == 0x000028, "Wrong size on AthenaTeamMemberDBNOState_C_RefreshVisuals");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_RefreshVisuals, Temp_bool_Variable) == 0x000000, "Member 'AthenaTeamMemberDBNOState_C_RefreshVisuals::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_RefreshVisuals, Temp_byte_Variable) == 0x000001, "Member 'AthenaTeamMemberDBNOState_C_RefreshVisuals::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_RefreshVisuals, Temp_bool_Variable2) == 0x000002, "Member 'AthenaTeamMemberDBNOState_C_RefreshVisuals::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_RefreshVisuals, Temp_byte_Variable2) == 0x000003, "Member 'AthenaTeamMemberDBNOState_C_RefreshVisuals::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_RefreshVisuals, Temp_byte_Variable3) == 0x000004, "Member 'AthenaTeamMemberDBNOState_C_RefreshVisuals::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_RefreshVisuals, Temp_bool_Variable3) == 0x000005, "Member 'AthenaTeamMemberDBNOState_C_RefreshVisuals::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_RefreshVisuals, Temp_object_Variable) == 0x000008, "Member 'AthenaTeamMemberDBNOState_C_RefreshVisuals::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_RefreshVisuals, Temp_object_Variable2) == 0x000010, "Member 'AthenaTeamMemberDBNOState_C_RefreshVisuals::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_RefreshVisuals, K2Node_Select_Default) == 0x000018, "Member 'AthenaTeamMemberDBNOState_C_RefreshVisuals::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_RefreshVisuals, K2Node_Select2_Default) == 0x000020, "Member 'AthenaTeamMemberDBNOState_C_RefreshVisuals::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(AthenaTeamMemberDBNOState_C_RefreshVisuals, K2Node_Select3_Default) == 0x000021, "Member 'AthenaTeamMemberDBNOState_C_RefreshVisuals::K2Node_Select3_Default' has a wrong offset!");

}

