#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FortExpeditionBuildSquadWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CommonUI_structs.hpp"


namespace SDK::Params
{

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget
// 0x0298 (0x0298 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Handle_Close_Picker_Action_PassThrough;   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortDialogResult                             Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             Temp_byte_Variable2;                               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             Temp_byte_Variable3;                               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortExpeditionItem*                    K2Node_Event_InItem;                               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_SquadId;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartExpedition_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              K2Node_ComponentBoundEvent_SelectedItem2;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FConfirmationDialogAction              K2Node_MakeStruct_ConfirmationDialogAction;        // 0x0040(0x00B8)()
	TArray<struct FConfirmationDialogAction>      K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ZeroConstructor, ReferenceParm)
	class UFortAsyncAction_ShowAdvancedLatentConfirmation_NUI* CallFunc_ShowAdvancedLatentActionConfirmation_ReturnValue; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsExpeditionValidToStart_ReturnValue;     // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemTileView*                      CallFunc_Get_Picker_List_View_PickerTileView;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemTileView*                      CallFunc_Get_Picker_List_View_PickerTileView2;     // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Get_Selected_Item_ReturnValue;            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetSelectedItem_ReturnValue;              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x2];                                      // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortDialogExternalLatentActionHandle  Temp_struct_Variable;                              // 0x013C(0x0004)(NoDestructor)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInfoWindow_C*                          CallFunc_Create_ReturnValue;                       // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDialogResult                             K2Node_CustomEvent_Result;                         // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_ResultName;                     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWaitingForLatentActionCompletion; // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortDialogExternalLatentActionHandle  K2Node_CustomEvent_WaitingDialogHandle;            // 0x0174(0x0004)(NoDestructor)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0178(0x0018)()
	class UFortExpeditionItemDefinition*          CallFunc_Get_Expedition_Item_Definition_ItemDef;   // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0198(0x0040)(HasGetValueTypeHash)
	TArray<class UFortCardPackItemDefinition*>    CallFunc_GetAllRewards_OutRewards;                 // 0x01D8(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array2;                           // 0x01E8(0x0010)(ZeroConstructor, ReferenceParm)
	class UFortItem*                              K2Node_ComponentBoundEvent_SelectedItem;           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0200(0x0018)()
	int32                                         K2Node_ComponentBoundEvent_SquadSlotIndex;         // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EFortDialogResult Result, class FName ResultName, bool bWaitingForLatentActionCompletion, const struct FFortDialogExternalLatentActionHandle& WaitingDialogHandle)> K2Node_CreateDelegate_OutputDelegate;              // 0x0220(0x0010)(ZeroConstructor, NoDestructor)
	EInputActionState                             CallFunc_Get_Slot_Item_State_ReturnValue;          // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bUsingGamepad;                  // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             CallFunc_Get_Slot_Item_State_ReturnValue2;         // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_233[0x5];                                      // 0x0233(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bUsingGamepad)>           K2Node_CreateDelegate_OutputDelegate2;             // 0x0238(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Handle_Back_PassThrough;                  // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             CallFunc_Get_Purchase_Slot_State_ReturnValue;      // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             CallFunc_Get_Purchase_Slot_State_ReturnValue2;     // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             CallFunc_Get_Purchase_Slot_State_ReturnValue3;     // 0x024B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonUIContext*                       CallFunc_GetContext_ReturnValue2;                  // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25D[0x3];                                      // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              CallFunc_GetSelectedItem_ReturnValue;              // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_ComponentBoundEvent_ActiveWidget;           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_ActiveWidgetIndex;      // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue2;             // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_276[0x2];                                      // 0x0276(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ExpeditionSquadSlotsView_C*         K2Node_DynamicCast_AsBP_Expedition_Squad_Slots_View; // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USquadSlotItemPicker_C*                 K2Node_DynamicCast_AsSquad_Slot_Item_Picker;       // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget) == 0x000298, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, EntryPoint) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_Handle_Close_Picker_Action_PassThrough) == 0x000004, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_Handle_Close_Picker_Action_PassThrough' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, Temp_byte_Variable) == 0x000005, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, Temp_bool_Variable) == 0x000006, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_SwitchEnum_CmpSuccess) == 0x000007, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, Temp_byte_Variable2) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, Temp_byte_Variable3) == 0x000009, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_Select_Default) == 0x000019, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_Event_InItem) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_Event_InItem' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_CustomEvent_SquadId) == 0x000028, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_CustomEvent_SquadId' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_StartExpedition_ReturnValue) == 0x000030, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_StartExpedition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_ComponentBoundEvent_SelectedItem2) == 0x000038, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_ComponentBoundEvent_SelectedItem2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_MakeStruct_ConfirmationDialogAction) == 0x000040, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_MakeStruct_ConfirmationDialogAction' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_MakeArray_Array) == 0x0000F8, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_ShowAdvancedLatentActionConfirmation_ReturnValue) == 0x000108, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_ShowAdvancedLatentActionConfirmation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_IsValid_ReturnValue2) == 0x000110, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_IsExpeditionValidToStart_ReturnValue) == 0x000111, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_IsExpeditionValidToStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_Get_Picker_List_View_PickerTileView) == 0x000118, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_Get_Picker_List_View_PickerTileView' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_Get_Picker_List_View_PickerTileView2) == 0x000120, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_Get_Picker_List_View_PickerTileView2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_Get_Selected_Item_ReturnValue) == 0x000128, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_Get_Selected_Item_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, Temp_name_Variable) == 0x000130, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_SetSelectedItem_ReturnValue) == 0x000138, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_SetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, Temp_bool_Variable2) == 0x000139, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, Temp_struct_Variable) == 0x00013C, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_ComponentBoundEvent_Button) == 0x000140, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_GetPlayerController_ReturnValue) == 0x000148, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000150, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_Create_ReturnValue) == 0x000158, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_CustomEvent_Result) == 0x000160, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_CustomEvent_ResultName) == 0x000168, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_CustomEvent_ResultName' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_CustomEvent_bWaitingForLatentActionCompletion) == 0x000170, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_CustomEvent_bWaitingForLatentActionCompletion' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_CustomEvent_WaitingDialogHandle) == 0x000174, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_CustomEvent_WaitingDialogHandle' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_GetText_ReturnValue) == 0x000178, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_Get_Expedition_Item_Definition_ItemDef) == 0x000190, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_Get_Expedition_Item_Definition_ItemDef' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_MakeStruct_FormatArgumentData) == 0x000198, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_GetAllRewards_OutRewards) == 0x0001D8, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_GetAllRewards_OutRewards' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_MakeArray_Array2) == 0x0001E8, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_ComponentBoundEvent_SelectedItem) == 0x0001F8, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_ComponentBoundEvent_SelectedItem' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_Format_ReturnValue) == 0x000200, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_ComponentBoundEvent_SquadSlotIndex) == 0x000218, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_ComponentBoundEvent_SquadSlotIndex' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00021C, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000220, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_Get_Slot_Item_State_ReturnValue) == 0x000230, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_Get_Slot_Item_State_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_CustomEvent_bUsingGamepad) == 0x000231, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_CustomEvent_bUsingGamepad' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_Get_Slot_Item_State_ReturnValue2) == 0x000232, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_Get_Slot_Item_State_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_CreateDelegate_OutputDelegate2) == 0x000238, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_Handle_Back_PassThrough) == 0x000248, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_Handle_Back_PassThrough' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_Get_Purchase_Slot_State_ReturnValue) == 0x000249, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_Get_Purchase_Slot_State_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_Get_Purchase_Slot_State_ReturnValue2) == 0x00024A, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_Get_Purchase_Slot_State_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_Get_Purchase_Slot_State_ReturnValue3) == 0x00024B, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_Get_Purchase_Slot_State_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_GetContext_ReturnValue2) == 0x000250, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000258, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00025C, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_GetSelectedItem_ReturnValue) == 0x000260, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_GetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_ComponentBoundEvent_ActiveWidget) == 0x000268, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_ComponentBoundEvent_ActiveWidget' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_ComponentBoundEvent_ActiveWidgetIndex) == 0x000270, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_ComponentBoundEvent_ActiveWidgetIndex' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x000274, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, CallFunc_NotEqual_IntInt_ReturnValue2) == 0x000275, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::CallFunc_NotEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_DynamicCast_AsBP_Expedition_Squad_Slots_View) == 0x000278, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_DynamicCast_AsBP_Expedition_Squad_Slots_View' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_DynamicCast_bSuccess) == 0x000280, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_DynamicCast_AsSquad_Slot_Item_Picker) == 0x000288, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_DynamicCast_AsSquad_Slot_Item_Picker' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget, K2Node_DynamicCast_bSuccess2) == 0x000290, "Member 'BP_FortExpeditionBuildSquadWidget_C_ExecuteUbergraph_BP_FortExpeditionBuildSquadWidget::K2Node_DynamicCast_bSuccess2' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.BndEvt__CommonWidgetSwitcher_0_K2Node_ComponentBoundEvent_20_OnActiveWidgetChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_BndEvt__CommonWidgetSwitcher_0_K2Node_ComponentBoundEvent_20_OnActiveWidgetChanged__DelegateSignature final
{
public:
	class UWidget*                                ActiveWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActiveWidgetIndex;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_BndEvt__CommonWidgetSwitcher_0_K2Node_ComponentBoundEvent_20_OnActiveWidgetChanged__DelegateSignature) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_BndEvt__CommonWidgetSwitcher_0_K2Node_ComponentBoundEvent_20_OnActiveWidgetChanged__DelegateSignature");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_BndEvt__CommonWidgetSwitcher_0_K2Node_ComponentBoundEvent_20_OnActiveWidgetChanged__DelegateSignature) == 0x000010, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_BndEvt__CommonWidgetSwitcher_0_K2Node_ComponentBoundEvent_20_OnActiveWidgetChanged__DelegateSignature");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_BndEvt__CommonWidgetSwitcher_0_K2Node_ComponentBoundEvent_20_OnActiveWidgetChanged__DelegateSignature, ActiveWidget) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_BndEvt__CommonWidgetSwitcher_0_K2Node_ComponentBoundEvent_20_OnActiveWidgetChanged__DelegateSignature::ActiveWidget' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_BndEvt__CommonWidgetSwitcher_0_K2Node_ComponentBoundEvent_20_OnActiveWidgetChanged__DelegateSignature, ActiveWidgetIndex) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_BndEvt__CommonWidgetSwitcher_0_K2Node_ComponentBoundEvent_20_OnActiveWidgetChanged__DelegateSignature::ActiveWidgetIndex' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.OnGamepadStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_OnGamepadStateChanged final
{
public:
	bool                                          bUsingGamepad;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_OnGamepadStateChanged) == 0x000001, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_OnGamepadStateChanged");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_OnGamepadStateChanged) == 0x000001, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_OnGamepadStateChanged");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_OnGamepadStateChanged, bUsingGamepad) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_OnGamepadStateChanged::bUsingGamepad' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.BndEvt__ExpeditionSquadSlotsView_K2Node_ComponentBoundEvent_77_OnSquadSlotSelected__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_BndEvt__ExpeditionSquadSlotsView_K2Node_ComponentBoundEvent_77_OnSquadSlotSelected__DelegateSignature final
{
public:
	int32                                         SquadSlotIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_BndEvt__ExpeditionSquadSlotsView_K2Node_ComponentBoundEvent_77_OnSquadSlotSelected__DelegateSignature) == 0x000004, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_BndEvt__ExpeditionSquadSlotsView_K2Node_ComponentBoundEvent_77_OnSquadSlotSelected__DelegateSignature");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_BndEvt__ExpeditionSquadSlotsView_K2Node_ComponentBoundEvent_77_OnSquadSlotSelected__DelegateSignature) == 0x000004, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_BndEvt__ExpeditionSquadSlotsView_K2Node_ComponentBoundEvent_77_OnSquadSlotSelected__DelegateSignature");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_BndEvt__ExpeditionSquadSlotsView_K2Node_ComponentBoundEvent_77_OnSquadSlotSelected__DelegateSignature, SquadSlotIndex) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_BndEvt__ExpeditionSquadSlotsView_K2Node_ComponentBoundEvent_77_OnSquadSlotSelected__DelegateSignature::SquadSlotIndex' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.BndEvt__SquadSlotItemPicker_K2Node_ComponentBoundEvent_20_OnItemSelectionEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_BndEvt__SquadSlotItemPicker_K2Node_ComponentBoundEvent_20_OnItemSelectionEvent__DelegateSignature final
{
public:
	class UFortItem*                              SelectedItem;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_BndEvt__SquadSlotItemPicker_K2Node_ComponentBoundEvent_20_OnItemSelectionEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_BndEvt__SquadSlotItemPicker_K2Node_ComponentBoundEvent_20_OnItemSelectionEvent__DelegateSignature");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_BndEvt__SquadSlotItemPicker_K2Node_ComponentBoundEvent_20_OnItemSelectionEvent__DelegateSignature) == 0x000008, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_BndEvt__SquadSlotItemPicker_K2Node_ComponentBoundEvent_20_OnItemSelectionEvent__DelegateSignature");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_BndEvt__SquadSlotItemPicker_K2Node_ComponentBoundEvent_20_OnItemSelectionEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_BndEvt__SquadSlotItemPicker_K2Node_ComponentBoundEvent_20_OnItemSelectionEvent__DelegateSignature::SelectedItem' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.BndEvt__ViewInfoButton_NoText_K2Node_ComponentBoundEvent_35_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_BndEvt__ViewInfoButton_NoText_K2Node_ComponentBoundEvent_35_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_BndEvt__ViewInfoButton_NoText_K2Node_ComponentBoundEvent_35_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_BndEvt__ViewInfoButton_NoText_K2Node_ComponentBoundEvent_35_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_BndEvt__ViewInfoButton_NoText_K2Node_ComponentBoundEvent_35_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_BndEvt__ViewInfoButton_NoText_K2Node_ComponentBoundEvent_35_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_BndEvt__ViewInfoButton_NoText_K2Node_ComponentBoundEvent_35_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_BndEvt__ViewInfoButton_NoText_K2Node_ComponentBoundEvent_35_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.BndEvt__SquadSlotItemPicker_K2Node_ComponentBoundEvent_9_OnSelectionCommitted__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_BndEvt__SquadSlotItemPicker_K2Node_ComponentBoundEvent_9_OnSelectionCommitted__DelegateSignature final
{
public:
	class UFortItem*                              SelectedItem;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_BndEvt__SquadSlotItemPicker_K2Node_ComponentBoundEvent_9_OnSelectionCommitted__DelegateSignature) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_BndEvt__SquadSlotItemPicker_K2Node_ComponentBoundEvent_9_OnSelectionCommitted__DelegateSignature");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_BndEvt__SquadSlotItemPicker_K2Node_ComponentBoundEvent_9_OnSelectionCommitted__DelegateSignature) == 0x000008, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_BndEvt__SquadSlotItemPicker_K2Node_ComponentBoundEvent_9_OnSelectionCommitted__DelegateSignature");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_BndEvt__SquadSlotItemPicker_K2Node_ComponentBoundEvent_9_OnSelectionCommitted__DelegateSignature, SelectedItem) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_BndEvt__SquadSlotItemPicker_K2Node_ComponentBoundEvent_9_OnSelectionCommitted__DelegateSignature::SelectedItem' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.HandleVechicleSelected
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) BP_FortExpeditionBuildSquadWidget_C_HandleVechicleSelected final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_HandleVechicleSelected) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_HandleVechicleSelected");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_HandleVechicleSelected) == 0x000008, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_HandleVechicleSelected");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_HandleVechicleSelected, SquadId) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_HandleVechicleSelected::SquadId' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.SetData
// 0x0008 (0x0008 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_SetData final
{
public:
	class UFortExpeditionItem*                    InItem;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_SetData) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_SetData");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_SetData) == 0x000008, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_SetData");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_SetData, InItem) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_SetData::InItem' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.DialogResult_B738291040F33B805332A7B633B3ACBD
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) BP_FortExpeditionBuildSquadWidget_C_DialogResult_B738291040F33B805332A7B633B3ACBD final
{
public:
	EFortDialogResult                             Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ResultName;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWaitingForLatentActionCompletion;                 // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortDialogExternalLatentActionHandle  WaitingDialogHandle;                               // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_DialogResult_B738291040F33B805332A7B633B3ACBD) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_DialogResult_B738291040F33B805332A7B633B3ACBD");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_DialogResult_B738291040F33B805332A7B633B3ACBD) == 0x000018, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_DialogResult_B738291040F33B805332A7B633B3ACBD");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_DialogResult_B738291040F33B805332A7B633B3ACBD, Result) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_DialogResult_B738291040F33B805332A7B633B3ACBD::Result' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_DialogResult_B738291040F33B805332A7B633B3ACBD, ResultName) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_DialogResult_B738291040F33B805332A7B633B3ACBD::ResultName' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_DialogResult_B738291040F33B805332A7B633B3ACBD, bWaitingForLatentActionCompletion) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_DialogResult_B738291040F33B805332A7B633B3ACBD::bWaitingForLatentActionCompletion' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_DialogResult_B738291040F33B805332A7B633B3ACBD, WaitingDialogHandle) == 0x000014, "Member 'BP_FortExpeditionBuildSquadWidget_C_DialogResult_B738291040F33B805332A7B633B3ACBD::WaitingDialogHandle' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Handle Back
// 0x0010 (0x0010 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Handle_Back final
{
public:
	bool                                          Passthrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Handle_Back) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Handle_Back");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Handle_Back) == 0x000010, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Handle_Back");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Back, Passthrough) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Back::Passthrough' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Back, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Back::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Setup Input Action Handlers
// 0x0070 (0x0070 - 0x0000)
struct alignas(0x08) BP_FortExpeditionBuildSquadWidget_C_Setup_Input_Action_Handlers final
{
public:
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate2;             // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate3;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate4;             // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate5;             // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate6;             // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate7;             // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Setup_Input_Action_Handlers) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Setup_Input_Action_Handlers");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Setup_Input_Action_Handlers) == 0x000070, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Setup_Input_Action_Handlers");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Setup_Input_Action_Handlers, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Setup_Input_Action_Handlers::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Setup_Input_Action_Handlers, K2Node_CreateDelegate_OutputDelegate2) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Setup_Input_Action_Handlers::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Setup_Input_Action_Handlers, K2Node_CreateDelegate_OutputDelegate3) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_Setup_Input_Action_Handlers::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Setup_Input_Action_Handlers, K2Node_CreateDelegate_OutputDelegate4) == 0x000030, "Member 'BP_FortExpeditionBuildSquadWidget_C_Setup_Input_Action_Handlers::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Setup_Input_Action_Handlers, K2Node_CreateDelegate_OutputDelegate5) == 0x000040, "Member 'BP_FortExpeditionBuildSquadWidget_C_Setup_Input_Action_Handlers::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Setup_Input_Action_Handlers, K2Node_CreateDelegate_OutputDelegate6) == 0x000050, "Member 'BP_FortExpeditionBuildSquadWidget_C_Setup_Input_Action_Handlers::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Setup_Input_Action_Handlers, K2Node_CreateDelegate_OutputDelegate7) == 0x000060, "Member 'BP_FortExpeditionBuildSquadWidget_C_Setup_Input_Action_Handlers::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Set Name
// 0x0020 (0x0020 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Set_Name final
{
public:
	class UFortItem*                              Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Set_Name) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Set_Name");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Set_Name) == 0x000020, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Set_Name");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Name, Param_Item) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Name::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Name, CallFunc_GetDisplayName_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Name::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Set Description
// 0x0020 (0x0020 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Set_Description final
{
public:
	class UFortItem*                              Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDescription_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Set_Description) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Set_Description");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Set_Description) == 0x000020, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Set_Description");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Description, Param_Item) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Description::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Description, CallFunc_GetDescription_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Description::CallFunc_GetDescription_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Set Rating
// 0x0010 (0x0010 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Set_Rating final
{
public:
	class UFortExpeditionItem*                    Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetPowerLevel_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Set_Rating) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Set_Rating");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Set_Rating) == 0x000010, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Set_Rating");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Rating, Param_Item) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Rating::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Rating, CallFunc_GetTargetPowerLevel_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Rating::CallFunc_GetTargetPowerLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Rating, CallFunc_FTrunc_ReturnValue) == 0x00000C, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Rating::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Refresh Item Data
// 0x0020 (0x0020 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Refresh_Item_Data final
{
public:
	class UFortHomebaseUIContext*                 CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortItem*>                      CallFunc_GetItemsInSquad_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	class UFortExpeditionItemDefinition*          CallFunc_Get_Expedition_Item_Definition_ItemDef;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Refresh_Item_Data) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Refresh_Item_Data");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Refresh_Item_Data) == 0x000020, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Refresh_Item_Data");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Refresh_Item_Data, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Refresh_Item_Data::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Refresh_Item_Data, CallFunc_GetItemsInSquad_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Refresh_Item_Data::CallFunc_GetItemsInSquad_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Refresh_Item_Data, CallFunc_Get_Expedition_Item_Definition_ItemDef) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Refresh_Item_Data::CallFunc_Get_Expedition_Item_Definition_ItemDef' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Get Expedition Item Definition
// 0x0028 (0x0028 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Get_Expedition_Item_Definition final
{
public:
	class UFortExpeditionItem*                    Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortExpeditionItemDefinition*          ItemDef;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemDefinition*                    CallFunc_GetItemDefinitionBP_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortExpeditionItemDefinition*          K2Node_DynamicCast_AsFort_Expedition_Item_Definition; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Get_Expedition_Item_Definition) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Get_Expedition_Item_Definition");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Get_Expedition_Item_Definition) == 0x000028, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Get_Expedition_Item_Definition");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Expedition_Item_Definition, Param_Item) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Expedition_Item_Definition::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Expedition_Item_Definition, ItemDef) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Expedition_Item_Definition::ItemDef' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Expedition_Item_Definition, CallFunc_GetItemDefinitionBP_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Expedition_Item_Definition::CallFunc_GetItemDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Expedition_Item_Definition, K2Node_DynamicCast_AsFort_Expedition_Item_Definition) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Expedition_Item_Definition::K2Node_DynamicCast_AsFort_Expedition_Item_Definition' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Expedition_Item_Definition, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Expedition_Item_Definition::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Set Duration
// 0x0050 (0x0050 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Set_Duration final
{
public:
	class UFortExpeditionItemDefinition*          ItemDef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	struct FTimespan                              CallFunc_FromMinutes_ReturnValue;                  // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTimespanAsText_ReturnValue;            // 0x0020(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0038(0x0018)()
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Set_Duration) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Set_Duration");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Set_Duration) == 0x000050, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Set_Duration");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Duration, ItemDef) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Duration::ItemDef' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Duration, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Duration::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Duration, CallFunc_FromMinutes_ReturnValue) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Duration::CallFunc_FromMinutes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Duration, CallFunc_GetTimespanAsText_ReturnValue) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Duration::CallFunc_GetTimespanAsText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Duration, CallFunc_Format_ReturnValue) == 0x000038, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Duration::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Set Rarity
// 0x0098 (0x0098 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Set_Rarity final
{
public:
	class UFortItem*                              Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortRarity                                   CallFunc_GetRarity_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue;              // 0x0018(0x0080)()
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Set_Rarity) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Set_Rarity");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Set_Rarity) == 0x000098, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Set_Rarity");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Rarity, Param_Item) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Rarity::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Rarity, CallFunc_GetRarity_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Rarity::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Rarity, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Rarity::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Rarity, CallFunc_BPGetRarityData_ReturnValue) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Rarity::CallFunc_BPGetRarityData_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Set Rewards
// 0x0060 (0x0060 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Set_Rewards final
{
public:
	class UFortExpeditionItemDefinition*          ItemDef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortCardPackItemDefinition*>    CallFunc_GetAllRewards_OutRewards;                 // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortCardPackItemDefinition*            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              CallFunc_CreateTemporaryItemInstanceBP_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URewardsListEntry_C*                    CallFunc_Create_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Set_Rewards) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Set_Rewards");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Set_Rewards) == 0x000060, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Set_Rewards");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Rewards, ItemDef) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Rewards::ItemDef' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Rewards, CallFunc_GetAllRewards_OutRewards) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Rewards::CallFunc_GetAllRewards_OutRewards' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Rewards, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Rewards::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Rewards, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Rewards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Rewards, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Rewards::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Rewards, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Rewards::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Rewards, CallFunc_CreateTemporaryItemInstanceBP_ReturnValue) == 0x000030, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Rewards::CallFunc_CreateTemporaryItemInstanceBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Rewards, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Rewards::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Rewards, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Rewards::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Rewards, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Rewards::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Rewards, CallFunc_GetOwningPlayer_ReturnValue) == 0x000048, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Rewards::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Rewards, CallFunc_Create_ReturnValue) == 0x000050, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Rewards::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Rewards, CallFunc_AddChild_ReturnValue) == 0x000058, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Rewards::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Handle Change Vehicle
// 0x0040 (0x0040 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Handle_Change_Vehicle final
{
public:
	bool                                          Passthrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName SquadId)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetCachedWidget_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_FortExpeditionPickVehicleWidget_C*  K2Node_DynamicCast_AsBP_Fort_Expedition_Pick_Vehicle_Widget; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Handle_Change_Vehicle) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Handle_Change_Vehicle");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Handle_Change_Vehicle) == 0x000040, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Handle_Change_Vehicle");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Change_Vehicle, Passthrough) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Change_Vehicle::Passthrough' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Change_Vehicle, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Change_Vehicle::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Change_Vehicle, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Change_Vehicle::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Change_Vehicle, CallFunc_IsValidClass_ReturnValue) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Change_Vehicle::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Change_Vehicle, CallFunc_GetCachedWidget_ReturnValue) == 0x000028, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Change_Vehicle::CallFunc_GetCachedWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Change_Vehicle, K2Node_DynamicCast_AsBP_Fort_Expedition_Pick_Vehicle_Widget) == 0x000030, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Change_Vehicle::K2Node_DynamicCast_AsBP_Fort_Expedition_Pick_Vehicle_Widget' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Change_Vehicle, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Change_Vehicle::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Refresh Squad Widgets
// 0x0378 (0x0378 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Refresh_Squad_Widgets final
{
public:
	bool                                          NewLocalVar_0;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHomeBaseContext*                       CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHomebaseSquad                         CallFunc_TryGetHomebaseSquadData_OutHomebaseSquad; // 0x0010(0x0088)()
	bool                                          CallFunc_TryGetHomebaseSquadData_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHomebaseUIContext*                 CallFunc_GetContext_ReturnValue2;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortMultiSizeBrush                    CallFunc_GetSquadIcon_ReturnValue;                 // 0x00A8(0x02D0)()
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Refresh_Squad_Widgets) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Refresh_Squad_Widgets");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Refresh_Squad_Widgets) == 0x000378, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Refresh_Squad_Widgets");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Refresh_Squad_Widgets, NewLocalVar_0) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Refresh_Squad_Widgets::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Refresh_Squad_Widgets, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Refresh_Squad_Widgets::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Refresh_Squad_Widgets, CallFunc_TryGetHomebaseSquadData_OutHomebaseSquad) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Refresh_Squad_Widgets::CallFunc_TryGetHomebaseSquadData_OutHomebaseSquad' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Refresh_Squad_Widgets, CallFunc_TryGetHomebaseSquadData_ReturnValue) == 0x000098, "Member 'BP_FortExpeditionBuildSquadWidget_C_Refresh_Squad_Widgets::CallFunc_TryGetHomebaseSquadData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Refresh_Squad_Widgets, CallFunc_GetContext_ReturnValue2) == 0x0000A0, "Member 'BP_FortExpeditionBuildSquadWidget_C_Refresh_Squad_Widgets::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Refresh_Squad_Widgets, CallFunc_GetSquadIcon_ReturnValue) == 0x0000A8, "Member 'BP_FortExpeditionBuildSquadWidget_C_Refresh_Squad_Widgets::CallFunc_GetSquadIcon_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Set Vehicle Name
// 0x0088 (0x0088 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Set_Vehicle_Name final
{
public:
	struct FHomebaseSquad                         HomebaseSquad;                                     // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Set_Vehicle_Name) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Set_Vehicle_Name");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Set_Vehicle_Name) == 0x000088, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Set_Vehicle_Name");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Vehicle_Name, HomebaseSquad) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Vehicle_Name::HomebaseSquad' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Set Remaining Expiration Time
// 0x0008 (0x0008 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Set_Remaining_Expiration_Time final
{
public:
	class UFortExpeditionItem*                    Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Set_Remaining_Expiration_Time) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Set_Remaining_Expiration_Time");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Set_Remaining_Expiration_Time) == 0x000008, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Set_Remaining_Expiration_Time");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Remaining_Expiration_Time, Param_Item) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Remaining_Expiration_Time::Param_Item' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Set Requirements
// 0x0388 (0x0388 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Set_Requirements final
{
public:
	class UFortExpeditionItemDefinition*          ItemDef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortTooltipUIContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetRequiredTags_ReturnValue;              // 0x0010(0x0020)()
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FFortTagUIData                         CallFunc_GetUIDataForTag_OutData;                  // 0x0050(0x0308)()
	bool                                          CallFunc_GetUIDataForTag_ReturnValue;              // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UIconAndNameWidget_C*                   CallFunc_Create_ReturnValue;                       // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0378(0x0010)(NoDestructor)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Set_Requirements) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Set_Requirements");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Set_Requirements) == 0x000388, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Set_Requirements");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Requirements, ItemDef) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Requirements::ItemDef' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Requirements, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Requirements::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Requirements, CallFunc_GetRequiredTags_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Requirements::CallFunc_GetRequiredTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Requirements, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000030, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Requirements::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Requirements, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Requirements::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Requirements, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Requirements::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Requirements, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Requirements::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Requirements, CallFunc_GetUIDataForTag_OutData) == 0x000050, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Requirements::CallFunc_GetUIDataForTag_OutData' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Requirements, CallFunc_GetUIDataForTag_ReturnValue) == 0x000358, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Requirements::CallFunc_GetUIDataForTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Requirements, Temp_int_Loop_Counter_Variable) == 0x00035C, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Requirements::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Requirements, CallFunc_Less_IntInt_ReturnValue) == 0x000360, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Requirements::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Requirements, CallFunc_Add_IntInt_ReturnValue) == 0x000364, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Requirements::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Requirements, CallFunc_Create_ReturnValue) == 0x000368, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Requirements::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Requirements, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000370, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Requirements::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Requirements, K2Node_MakeStruct_Margin) == 0x000378, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Requirements::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Set Expedition Costs
// 0x0068 (0x0068 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs final
{
public:
	class UFortExpeditionItemDefinition*          ItemDef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FItemAndCount>                  CallFunc_GetExpeditionCosts_OutExpeditionCosts;    // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	struct FItemAndCount                          CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0048(0x0010)(NoDestructor)
	class UItemCountOverCost_C*                   CallFunc_Create_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs) == 0x000068, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs, ItemDef) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs::ItemDef' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs, CallFunc_GetExpeditionCosts_OutExpeditionCosts) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs::CallFunc_GetExpeditionCosts_OutExpeditionCosts' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs, CallFunc_GetOwningPlayer_ReturnValue) == 0x000040, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs, K2Node_MakeStruct_Margin) == 0x000048, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs, CallFunc_Create_ReturnValue) == 0x000058, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000060, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Expedition_Costs::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Update Squad Slot Pickers
// 0x0010 (0x0010 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Update_Squad_Slot_Pickers final
{
public:
	int32                                         SelectedSquadIndex;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSquadSlotLocked_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Update_Squad_Slot_Pickers) == 0x000004, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Update_Squad_Slot_Pickers");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Update_Squad_Slot_Pickers) == 0x000010, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Update_Squad_Slot_Pickers");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Squad_Slot_Pickers, SelectedSquadIndex) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Squad_Slot_Pickers::SelectedSquadIndex' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Squad_Slot_Pickers, CallFunc_IsSquadSlotLocked_ReturnValue) == 0x000004, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Squad_Slot_Pickers::CallFunc_IsSquadSlotLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Squad_Slot_Pickers, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Squad_Slot_Pickers::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Squad_Slot_Pickers, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Squad_Slot_Pickers::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Squad_Slot_Pickers, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Squad_Slot_Pickers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Update Expedition Power
// 0x0048 (0x0048 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHomebaseUIContext*                 CallFunc_GetContext_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortItem*>                      CallFunc_GetItemsInSquad_ReturnValue;              // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_CalculateTotalPower_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateExpeditionPercentageChanceForSuccess_ReturnValue; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power) == 0x000048, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power, CallFunc_GetContext_ReturnValue) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power, CallFunc_NotEqual_NameName_ReturnValue) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power, CallFunc_GetItemsInSquad_ReturnValue) == 0x000028, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power::CallFunc_GetItemsInSquad_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power, CallFunc_CalculateTotalPower_ReturnValue) == 0x000038, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power::CallFunc_CalculateTotalPower_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power, CallFunc_FTrunc_ReturnValue) == 0x00003C, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power, CallFunc_CalculateExpeditionPercentageChanceForSuccess_ReturnValue) == 0x000040, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Expedition_Power::CallFunc_CalculateExpeditionPercentageChanceForSuccess_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Set Bonus Criteria
// 0x0180 (0x0180 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria final
{
public:
	class UFortExpeditionItem*                    Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortItem*>                      SlottedItems;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FGameplayTag                           LoopCriteriaTag;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	int32                                         FoundIndex;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   MatchedCriteriaTags;                               // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_GetMatchedCriteriaTags_OutMatchedCriteria; // 0x0040(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FFortCriteriaRequirementData>   CallFunc_GetBonusCriteriaBP_OutBonusCriteria;      // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	struct FFortCriteriaRequirementData           CallFunc_Array_Get_Item;                           // 0x0060(0x0020)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UIconAndNameWidget_C*                   CallFunc_Create_ReturnValue;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue2;         // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x00A8(0x0008)(NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00B0(0x0010)(NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_Get_Bonus_Display_Name_and_Brush_OutBrush_Brush_M; // 0x00C8(0x0078)()
	class FText                                   CallFunc_Get_Bonus_Display_Name_and_Brush_OutDisplayName; // 0x0140(0x0018)()
	struct FLinearColor                           CallFunc_Get_Bonus_Display_Name_and_Brush_OutRarityColor; // 0x0158(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria) == 0x000180, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, Param_Item) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, SlottedItems) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::SlottedItems' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, LoopCriteriaTag) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::LoopCriteriaTag' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, FoundIndex) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::FoundIndex' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, MatchedCriteriaTags) == 0x000028, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::MatchedCriteriaTags' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, CallFunc_GetMatchedCriteriaTags_OutMatchedCriteria) == 0x000040, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::CallFunc_GetMatchedCriteriaTags_OutMatchedCriteria' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, CallFunc_GetBonusCriteriaBP_OutBonusCriteria) == 0x000050, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::CallFunc_GetBonusCriteriaBP_OutBonusCriteria' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, CallFunc_Array_Length_ReturnValue2) == 0x000084, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, CallFunc_Greater_IntInt_ReturnValue) == 0x000088, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, CallFunc_Create_ReturnValue) == 0x000090, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, CallFunc_GreaterEqual_IntInt_ReturnValue2) == 0x0000A1, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::CallFunc_GreaterEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, CallFunc_Array_Find_ReturnValue) == 0x0000A4, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, K2Node_MakeStruct_SlateChildSize) == 0x0000A8, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, K2Node_MakeStruct_Margin) == 0x0000B0, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, Temp_byte_Variable) == 0x0000C0, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, CallFunc_Get_Bonus_Display_Name_and_Brush_OutBrush_Brush_M) == 0x0000C8, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::CallFunc_Get_Bonus_Display_Name_and_Brush_OutBrush_Brush_M' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, CallFunc_Get_Bonus_Display_Name_and_Brush_OutDisplayName) == 0x000140, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::CallFunc_Get_Bonus_Display_Name_and_Brush_OutDisplayName' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, CallFunc_Get_Bonus_Display_Name_and_Brush_OutRarityColor) == 0x000158, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::CallFunc_Get_Bonus_Display_Name_and_Brush_OutRarityColor' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, Temp_byte_Variable2) == 0x000168, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000170, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, Temp_bool_Variable) == 0x000178, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria, K2Node_Select_Default) == 0x000179, "Member 'BP_FortExpeditionBuildSquadWidget_C_Set_Bonus_Criteria::K2Node_Select_Default' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.HACK_SetCursorToSquadSlotSlotted
// 0x0028 (0x0028 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadSlotSlotted final
{
public:
	int32                                         CallFunc_Get_Selected_Slot__SAFE__ReturnValue;     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Selected_Slot__SAFE__ReturnValue2;    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UExpeditionSquadSlotButton_C*           K2Node_DynamicCast_AsExpedition_Squad_Slot_Button; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadSlotSlotted) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadSlotSlotted");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadSlotSlotted) == 0x000028, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadSlotSlotted");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadSlotSlotted, CallFunc_Get_Selected_Slot__SAFE__ReturnValue) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadSlotSlotted::CallFunc_Get_Selected_Slot__SAFE__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadSlotSlotted, CallFunc_Get_Selected_Slot__SAFE__ReturnValue2) == 0x000004, "Member 'BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadSlotSlotted::CallFunc_Get_Selected_Slot__SAFE__ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadSlotSlotted, CallFunc_GetChildAt_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadSlotSlotted::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadSlotSlotted, K2Node_DynamicCast_AsExpedition_Squad_Slot_Button) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadSlotSlotted::K2Node_DynamicCast_AsExpedition_Squad_Slot_Button' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadSlotSlotted, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadSlotSlotted::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadSlotSlotted, CallFunc_NotEqual_NameName_ReturnValue) == 0x000019, "Member 'BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadSlotSlotted::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadSlotSlotted, CallFunc_GetUINavigationManager_ReturnValue) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadSlotSlotted::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Get Picker List View
// 0x0008 (0x0008 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Get_Picker_List_View final
{
public:
	class UFortItemTileView*                      PickerTileView;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Get_Picker_List_View) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Get_Picker_List_View");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Get_Picker_List_View) == 0x000008, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Get_Picker_List_View");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Picker_List_View, PickerTileView) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Picker_List_View::PickerTileView' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Get Selected Item
// 0x0028 (0x0028 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Item final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                SelectedItem;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              CallFunc_Get_Item_In_Selected_Squad_Slot_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetItemAt_ReturnValue;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Item) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Item");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Item) == 0x000028, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Item");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Item, ReturnValue) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Item::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Item, SelectedItem) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Item::SelectedItem' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Item, CallFunc_Get_Item_In_Selected_Squad_Slot_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Item::CallFunc_Get_Item_In_Selected_Squad_Slot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Item, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Item::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Item, CallFunc_GetItemAt_ReturnValue) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Item::CallFunc_GetItemAt_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Try to Auto Select First Vehicle
// 0x0080 (0x0080 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortExpeditionItemDefinition*          CallFunc_Get_Expedition_Item_Definition_ItemDef;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetRequiredTags_ReturnValue;              // 0x0030(0x0020)()
	TArray<class FName>                           CallFunc_GetExpeditionSquadsThatMatchRequirements_OutExpeditionSquadIds; // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_GetExpeditionSquadsThatMatchRequirements_ReturnValue; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSquadOnExpedition_ReturnValue;          // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x1];                                       // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle) == 0x000080, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle, Temp_bool_True_if_break_was_hit_Variable) == 0x00000C, "Member 'BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle, CallFunc_Get_Expedition_Item_Definition_ItemDef) == 0x000028, "Member 'BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle::CallFunc_Get_Expedition_Item_Definition_ItemDef' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle, CallFunc_GetRequiredTags_ReturnValue) == 0x000030, "Member 'BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle::CallFunc_GetRequiredTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle, CallFunc_GetExpeditionSquadsThatMatchRequirements_OutExpeditionSquadIds) == 0x000050, "Member 'BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle::CallFunc_GetExpeditionSquadsThatMatchRequirements_OutExpeditionSquadIds' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle, CallFunc_GetExpeditionSquadsThatMatchRequirements_ReturnValue) == 0x000060, "Member 'BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle::CallFunc_GetExpeditionSquadsThatMatchRequirements_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle, CallFunc_Greater_IntInt_ReturnValue) == 0x000070, "Member 'BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle, CallFunc_IsSquadOnExpedition_ReturnValue) == 0x000072, "Member 'BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle::CallFunc_IsSquadOnExpedition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle, CallFunc_Array_Length_ReturnValue2) == 0x000074, "Member 'BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle, CallFunc_BooleanAND_ReturnValue2) == 0x000079, "Member 'BP_FortExpeditionBuildSquadWidget_C_Try_to_Auto_Select_First_Vehicle::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Handle Expedition Expired
// 0x0010 (0x0010 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Handle_Expedition_Expired final
{
public:
	struct FDateTime                              CallFunc_Get_Mcp_Relative_Utc_Now_UtcNow;          // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Handle_Back_with_Squad_Clear_PassThrough; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasExpeditionExpired_ReturnValue;         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Handle_Expedition_Expired) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Handle_Expedition_Expired");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Handle_Expedition_Expired) == 0x000010, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Handle_Expedition_Expired");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Expedition_Expired, CallFunc_Get_Mcp_Relative_Utc_Now_UtcNow) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Expedition_Expired::CallFunc_Get_Mcp_Relative_Utc_Now_UtcNow' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Expedition_Expired, CallFunc_Handle_Back_with_Squad_Clear_PassThrough) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Expedition_Expired::CallFunc_Handle_Back_with_Squad_Clear_PassThrough' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Expedition_Expired, CallFunc_HasExpeditionExpired_ReturnValue) == 0x000009, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Expedition_Expired::CallFunc_HasExpeditionExpired_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Expedition_Expired, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Expedition_Expired::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Expedition_Expired, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Expedition_Expired::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Expedition_Expired, CallFunc_BooleanOR_ReturnValue) == 0x00000C, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Expedition_Expired::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Update Start Expedition Widget State
// 0x0005 (0x0005 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Update_Start_Expedition_Widget_State final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             Temp_byte_Variable2;                               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExpeditionValidToStart_ReturnValue;     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Update_Start_Expedition_Widget_State) == 0x000001, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Update_Start_Expedition_Widget_State");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Update_Start_Expedition_Widget_State) == 0x000005, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Update_Start_Expedition_Widget_State");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Start_Expedition_Widget_State, Temp_bool_Variable) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Start_Expedition_Widget_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Start_Expedition_Widget_State, Temp_byte_Variable) == 0x000001, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Start_Expedition_Widget_State::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Start_Expedition_Widget_State, Temp_byte_Variable2) == 0x000002, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Start_Expedition_Widget_State::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Start_Expedition_Widget_State, CallFunc_IsExpeditionValidToStart_ReturnValue) == 0x000003, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Start_Expedition_Widget_State::CallFunc_IsExpeditionValidToStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Start_Expedition_Widget_State, K2Node_Select_Default) == 0x000004, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Start_Expedition_Widget_State::K2Node_Select_Default' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Handle Slot Item Action
// 0x0002 (0x0002 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Handle_Slot_Item_Action final
{
public:
	bool                                          Passthrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryCommitSelectedItem_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Handle_Slot_Item_Action) == 0x000001, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Handle_Slot_Item_Action");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Handle_Slot_Item_Action) == 0x000002, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Handle_Slot_Item_Action");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Slot_Item_Action, Passthrough) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Slot_Item_Action::Passthrough' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Slot_Item_Action, CallFunc_TryCommitSelectedItem_ReturnValue) == 0x000001, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Slot_Item_Action::CallFunc_TryCommitSelectedItem_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Handle Close Picker Action
// 0x0020 (0x0020 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Handle_Close_Picker_Action final
{
public:
	bool                                          Passthrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHomebaseUIContext*                 CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortItem*>                      CallFunc_GetItemsInSquad_ReturnValue;              // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Handle_Close_Picker_Action) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Handle_Close_Picker_Action");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Handle_Close_Picker_Action) == 0x000020, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Handle_Close_Picker_Action");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Close_Picker_Action, Passthrough) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Close_Picker_Action::Passthrough' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Close_Picker_Action, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Close_Picker_Action::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Close_Picker_Action, CallFunc_GetItemsInSquad_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Close_Picker_Action::CallFunc_GetItemsInSquad_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Handle Selected Item Committed
// 0x0018 (0x0018 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Handle_Selected_Item_Committed final
{
public:
	class UFortHomebaseUIContext*                 CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortItem*>                      CallFunc_GetItemsInSquad_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Handle_Selected_Item_Committed) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Handle_Selected_Item_Committed");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Handle_Selected_Item_Committed) == 0x000018, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Handle_Selected_Item_Committed");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Selected_Item_Committed, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Selected_Item_Committed::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Selected_Item_Committed, CallFunc_GetItemsInSquad_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Selected_Item_Committed::CallFunc_GetItemsInSquad_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Handle Squad Slot Selected
// 0x0020 (0x0020 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Slot_Selected final
{
public:
	EInputActionState                             CallFunc_Get_Slot_Item_State_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Slot_Selected) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Slot_Selected");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Slot_Selected) == 0x000020, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Slot_Selected");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Slot_Selected, CallFunc_Get_Slot_Item_State_ReturnValue) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Slot_Selected::CallFunc_Get_Slot_Item_State_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Slot_Selected, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Slot_Selected::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Slot_Selected, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Slot_Selected::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Handle Squad Picker Closed
// 0x0006 (0x0006 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Picker_Closed final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             Temp_byte_Variable2;                               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             CallFunc_Get_Purchase_Slot_State_ReturnValue;      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExpeditionValidToStart_ReturnValue;     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Picker_Closed) == 0x000001, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Picker_Closed");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Picker_Closed) == 0x000006, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Picker_Closed");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Picker_Closed, Temp_bool_Variable) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Picker_Closed::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Picker_Closed, Temp_byte_Variable) == 0x000001, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Picker_Closed::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Picker_Closed, Temp_byte_Variable2) == 0x000002, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Picker_Closed::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Picker_Closed, CallFunc_Get_Purchase_Slot_State_ReturnValue) == 0x000003, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Picker_Closed::CallFunc_Get_Purchase_Slot_State_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Picker_Closed, CallFunc_IsExpeditionValidToStart_ReturnValue) == 0x000004, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Picker_Closed::CallFunc_IsExpeditionValidToStart_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Picker_Closed, K2Node_Select_Default) == 0x000005, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Squad_Picker_Closed::K2Node_Select_Default' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Handle Start Expedition
// 0x0001 (0x0001 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Handle_Start_Expedition final
{
public:
	bool                                          Passthrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Handle_Start_Expedition) == 0x000001, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Handle_Start_Expedition");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Handle_Start_Expedition) == 0x000001, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Handle_Start_Expedition");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Start_Expedition, Passthrough) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Start_Expedition::Passthrough' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Handle Open Picker
// 0x0001 (0x0001 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Handle_Open_Picker final
{
public:
	bool                                          Passthrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Handle_Open_Picker) == 0x000001, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Handle_Open_Picker");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Handle_Open_Picker) == 0x000001, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Handle_Open_Picker");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Open_Picker, Passthrough) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Open_Picker::Passthrough' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Update Vehicle Selected
// 0x0028 (0x0028 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Update_Vehicle_Selected final
{
public:
	class FName                                   Param_CurrentSquadId;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Selected_Slot__SAFE__ReturnValue;     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Selected_Slot__SAFE__ReturnValue2;    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Handle_Close_Picker_Action_PassThrough;   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Update_Vehicle_Selected) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Update_Vehicle_Selected");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Update_Vehicle_Selected) == 0x000028, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Update_Vehicle_Selected");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Vehicle_Selected, Param_CurrentSquadId) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Vehicle_Selected::Param_CurrentSquadId' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Vehicle_Selected, CallFunc_Get_Selected_Slot__SAFE__ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Vehicle_Selected::CallFunc_Get_Selected_Slot__SAFE__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Vehicle_Selected, CallFunc_Get_Selected_Slot__SAFE__ReturnValue2) == 0x00000C, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Vehicle_Selected::CallFunc_Get_Selected_Slot__SAFE__ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Vehicle_Selected, CallFunc_GetChildAt_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Vehicle_Selected::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Vehicle_Selected, CallFunc_NotEqual_NameName_ReturnValue) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Vehicle_Selected::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Vehicle_Selected, CallFunc_Handle_Close_Picker_Action_PassThrough) == 0x000019, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Vehicle_Selected::CallFunc_Handle_Close_Picker_Action_PassThrough' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Vehicle_Selected, CallFunc_GetUINavigationManager_ReturnValue) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Vehicle_Selected::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Get Slot Item State
// 0x0030 (0x0030 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State final
{
public:
	EInputActionState                             ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             Temp_byte_Variable2;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             Temp_byte_Variable3;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonUIContext*                       CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingGamepad_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              CallFunc_GetSelectedItem_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanItemBeComitted_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             K2Node_Select_Default;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             K2Node_Select2_Default;                            // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State) == 0x000030, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State, ReturnValue) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State, Temp_bool_Variable) == 0x000001, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State, Temp_byte_Variable) == 0x000002, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State, Temp_byte_Variable2) == 0x000003, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State, Temp_bool_Variable2) == 0x000004, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State, Temp_byte_Variable3) == 0x000005, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State, CallFunc_IsUsingGamepad_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State::CallFunc_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State, CallFunc_GetSelectedItem_ReturnValue) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State::CallFunc_GetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State, CallFunc_CanItemBeComitted_ReturnValue) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State::CallFunc_CanItemBeComitted_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000024, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State, K2Node_Select_Default) == 0x000029, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State, CallFunc_BooleanOR_ReturnValue) == 0x00002A, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State, K2Node_Select2_Default) == 0x00002B, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Slot_Item_State::K2Node_Select2_Default' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Handle Back with Squad Clear
// 0x0002 (0x0002 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Handle_Back_with_Squad_Clear final
{
public:
	bool                                          Passthrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Handle_Back_PassThrough;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Handle_Back_with_Squad_Clear) == 0x000001, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Handle_Back_with_Squad_Clear");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Handle_Back_with_Squad_Clear) == 0x000002, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Handle_Back_with_Squad_Clear");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Back_with_Squad_Clear, Passthrough) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Back_with_Squad_Clear::Passthrough' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Back_with_Squad_Clear, CallFunc_Handle_Back_PassThrough) == 0x000001, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Back_with_Squad_Clear::CallFunc_Handle_Back_PassThrough' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Update For Preview
// 0x0018 (0x0018 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Update_For_Preview final
{
public:
	class UFortItem*                              Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortItem*>                      CallFunc_Update_Power_and_Rating_for_Preview_SlottedItems1; // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Update_For_Preview) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Update_For_Preview");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Update_For_Preview) == 0x000018, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Update_For_Preview");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_For_Preview, Param_Item) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_For_Preview::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_For_Preview, CallFunc_Update_Power_and_Rating_for_Preview_SlottedItems1) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_For_Preview::CallFunc_Update_Power_and_Rating_for_Preview_SlottedItems1' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Determine Preview State
// 0x000C (0x000C - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Determine_Preview_State final
{
public:
	float                                         Preview;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Current;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuffState                                State;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Determine_Preview_State) == 0x000004, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Determine_Preview_State");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Determine_Preview_State) == 0x00000C, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Determine_Preview_State");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Preview_State, Preview) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Preview_State::Preview' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Preview_State, Current) == 0x000004, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Preview_State::Current' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Preview_State, State) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Preview_State::State' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Preview_State, CallFunc_Less_FloatFloat_ReturnValue) == 0x000009, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Preview_State::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Preview_State, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000A, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Preview_State::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Update Power and Rating for Preview
// 0x00C0 (0x00C0 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview final
{
public:
	class UFortItem*                              Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortItem*>                      SlottedItems1;                                     // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor)
	class UFortItem*                              NullItem;                                          // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortItem*>                      SlottedItems;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	float                                         PreviewRating;                                     // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreviewChance;                                     // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentRating;                                     // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentChance;                                     // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              CurrentItem;                                       // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuffState                                CallFunc_Determine_Preview_State_State;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Determine_Text_Style_from_Preview_State_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue2;                      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuffState                                CallFunc_Determine_Preview_State_State2;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Determine_Text_Style_from_Preview_State_ReturnValue2; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateExpeditionPercentageChanceForSuccess_ReturnValue; // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHomebaseUIContext*                 CallFunc_GetContext_ReturnValue;                   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalculateTotalPower_ReturnValue;          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortItem*>                      CallFunc_GetItemsInSquad_ReturnValue;              // 0x00A8(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_Get_Current_Rating_CurrentNumericValue;   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview) == 0x0000C0, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, Param_Item) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, SlottedItems1) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::SlottedItems1' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, NullItem) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::NullItem' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, SlottedItems) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::SlottedItems' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, PreviewRating) == 0x000030, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::PreviewRating' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, PreviewChance) == 0x000034, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::PreviewChance' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, CurrentRating) == 0x000038, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::CurrentRating' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, CurrentChance) == 0x00003C, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::CurrentChance' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, CurrentItem) == 0x000040, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::CurrentItem' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, CallFunc_Determine_Preview_State_State) == 0x000048, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::CallFunc_Determine_Preview_State_State' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, CallFunc_Determine_Text_Style_from_Preview_State_ReturnValue) == 0x000050, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::CallFunc_Determine_Text_Style_from_Preview_State_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, CallFunc_FFloor_ReturnValue) == 0x000058, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, CallFunc_FFloor_ReturnValue2) == 0x00005C, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::CallFunc_FFloor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000060, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000064, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, CallFunc_Determine_Preview_State_State2) == 0x000068, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::CallFunc_Determine_Preview_State_State2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, CallFunc_Determine_Text_Style_from_Preview_State_ReturnValue2) == 0x000070, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::CallFunc_Determine_Text_Style_from_Preview_State_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, CallFunc_FTrunc_ReturnValue) == 0x000078, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, CallFunc_CalculateExpeditionPercentageChanceForSuccess_ReturnValue) == 0x00007C, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::CallFunc_CalculateExpeditionPercentageChanceForSuccess_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, CallFunc_Array_Find_ReturnValue) == 0x000080, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000084, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, CallFunc_GetContext_ReturnValue) == 0x000088, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, CallFunc_GetOwningPlayer_ReturnValue) == 0x000090, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000098, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, CallFunc_CalculateTotalPower_ReturnValue) == 0x0000A4, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::CallFunc_CalculateTotalPower_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, CallFunc_GetItemsInSquad_ReturnValue) == 0x0000A8, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::CallFunc_GetItemsInSquad_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview, CallFunc_Get_Current_Rating_CurrentNumericValue) == 0x0000B8, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Power_and_Rating_for_Preview::CallFunc_Get_Current_Rating_CurrentNumericValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Determine Text Style from Preview State
// 0x0038 (0x0038 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Determine_Text_Style_from_Preview_State final
{
public:
	EFortBuffState                                Param_Index;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuffState                                Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable2;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable3;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Determine_Text_Style_from_Preview_State) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Determine_Text_Style_from_Preview_State");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Determine_Text_Style_from_Preview_State) == 0x000038, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Determine_Text_Style_from_Preview_State");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Text_Style_from_Preview_State, Param_Index) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Text_Style_from_Preview_State::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Text_Style_from_Preview_State, ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Text_Style_from_Preview_State::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Text_Style_from_Preview_State, Temp_byte_Variable) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Text_Style_from_Preview_State::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Text_Style_from_Preview_State, Temp_class_Variable) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Text_Style_from_Preview_State::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Text_Style_from_Preview_State, Temp_class_Variable2) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Text_Style_from_Preview_State::Temp_class_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Text_Style_from_Preview_State, Temp_class_Variable3) == 0x000028, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Text_Style_from_Preview_State::Temp_class_Variable3' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Text_Style_from_Preview_State, K2Node_Select_Default) == 0x000030, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Text_Style_from_Preview_State::K2Node_Select_Default' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Determine Buff Arrow Visiblity From Preview State
// 0x0007 (0x0007 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Visiblity_From_Preview_State final
{
public:
	EFortBuffState                                Param_Index;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuffState                                Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable4;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Visiblity_From_Preview_State) == 0x000001, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Visiblity_From_Preview_State");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Visiblity_From_Preview_State) == 0x000007, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Visiblity_From_Preview_State");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Visiblity_From_Preview_State, Param_Index) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Visiblity_From_Preview_State::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Visiblity_From_Preview_State, ReturnValue) == 0x000001, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Visiblity_From_Preview_State::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Visiblity_From_Preview_State, Temp_byte_Variable) == 0x000002, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Visiblity_From_Preview_State::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Visiblity_From_Preview_State, Temp_byte_Variable2) == 0x000003, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Visiblity_From_Preview_State::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Visiblity_From_Preview_State, Temp_byte_Variable3) == 0x000004, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Visiblity_From_Preview_State::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Visiblity_From_Preview_State, Temp_byte_Variable4) == 0x000005, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Visiblity_From_Preview_State::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Visiblity_From_Preview_State, K2Node_Select_Default) == 0x000006, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Visiblity_From_Preview_State::K2Node_Select_Default' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Update Rating Buff Arrow for Preview
// 0x001C (0x001C - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Update_Rating_Buff_Arrow_for_Preview final
{
public:
	EFortBuffState                                Param_Index;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Determine_Buff_Arrow_Angle_for_Preview_State_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Determine_Buff_Arrow_Color_for_Preview_State_ReturnValue; // 0x0008(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_Determine_Buff_Arrow_Visiblity_From_Preview_State_ReturnValue; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Update_Rating_Buff_Arrow_for_Preview) == 0x000004, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Update_Rating_Buff_Arrow_for_Preview");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Update_Rating_Buff_Arrow_for_Preview) == 0x00001C, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Update_Rating_Buff_Arrow_for_Preview");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Rating_Buff_Arrow_for_Preview, Param_Index) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Rating_Buff_Arrow_for_Preview::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Rating_Buff_Arrow_for_Preview, CallFunc_Determine_Buff_Arrow_Angle_for_Preview_State_ReturnValue) == 0x000004, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Rating_Buff_Arrow_for_Preview::CallFunc_Determine_Buff_Arrow_Angle_for_Preview_State_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Rating_Buff_Arrow_for_Preview, CallFunc_Determine_Buff_Arrow_Color_for_Preview_State_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Rating_Buff_Arrow_for_Preview::CallFunc_Determine_Buff_Arrow_Color_for_Preview_State_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Rating_Buff_Arrow_for_Preview, CallFunc_Determine_Buff_Arrow_Visiblity_From_Preview_State_ReturnValue) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Rating_Buff_Arrow_for_Preview::CallFunc_Determine_Buff_Arrow_Visiblity_From_Preview_State_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Update Chance Buff Arrow for Preview
// 0x001C (0x001C - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Update_Chance_Buff_Arrow_for_Preview final
{
public:
	EFortBuffState                                Param_Index;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Determine_Buff_Arrow_Angle_for_Preview_State_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Determine_Buff_Arrow_Color_for_Preview_State_ReturnValue; // 0x0008(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_Determine_Buff_Arrow_Visiblity_From_Preview_State_ReturnValue; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Update_Chance_Buff_Arrow_for_Preview) == 0x000004, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Update_Chance_Buff_Arrow_for_Preview");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Update_Chance_Buff_Arrow_for_Preview) == 0x00001C, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Update_Chance_Buff_Arrow_for_Preview");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Chance_Buff_Arrow_for_Preview, Param_Index) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Chance_Buff_Arrow_for_Preview::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Chance_Buff_Arrow_for_Preview, CallFunc_Determine_Buff_Arrow_Angle_for_Preview_State_ReturnValue) == 0x000004, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Chance_Buff_Arrow_for_Preview::CallFunc_Determine_Buff_Arrow_Angle_for_Preview_State_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Chance_Buff_Arrow_for_Preview, CallFunc_Determine_Buff_Arrow_Color_for_Preview_State_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Chance_Buff_Arrow_for_Preview::CallFunc_Determine_Buff_Arrow_Color_for_Preview_State_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Update_Chance_Buff_Arrow_for_Preview, CallFunc_Determine_Buff_Arrow_Visiblity_From_Preview_State_ReturnValue) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Update_Chance_Buff_Arrow_for_Preview::CallFunc_Determine_Buff_Arrow_Visiblity_From_Preview_State_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Determine Buff Arrow Color for Preview State
// 0x0038 (0x0038 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Color_for_Preview_State final
{
public:
	EFortBuffState                                Param_Index;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ReturnValue;                                       // 0x0004(0x0010)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuffState                                Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0018(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0028(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Color_for_Preview_State) == 0x000004, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Color_for_Preview_State");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Color_for_Preview_State) == 0x000038, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Color_for_Preview_State");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Color_for_Preview_State, Param_Index) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Color_for_Preview_State::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Color_for_Preview_State, ReturnValue) == 0x000004, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Color_for_Preview_State::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Color_for_Preview_State, Temp_byte_Variable) == 0x000014, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Color_for_Preview_State::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Color_for_Preview_State, Temp_struct_Variable) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Color_for_Preview_State::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Color_for_Preview_State, K2Node_Select_Default) == 0x000028, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Color_for_Preview_State::K2Node_Select_Default' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Determine Buff Arrow Angle for Preview State
// 0x001C (0x001C - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Angle_for_Preview_State final
{
public:
	EFortBuffState                                Param_Index;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuffState                                Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable2;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable3;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Angle_for_Preview_State) == 0x000004, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Angle_for_Preview_State");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Angle_for_Preview_State) == 0x00001C, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Angle_for_Preview_State");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Angle_for_Preview_State, Param_Index) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Angle_for_Preview_State::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Angle_for_Preview_State, ReturnValue) == 0x000004, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Angle_for_Preview_State::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Angle_for_Preview_State, Temp_byte_Variable) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Angle_for_Preview_State::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Angle_for_Preview_State, Temp_float_Variable) == 0x00000C, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Angle_for_Preview_State::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Angle_for_Preview_State, Temp_float_Variable2) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Angle_for_Preview_State::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Angle_for_Preview_State, Temp_float_Variable3) == 0x000014, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Angle_for_Preview_State::Temp_float_Variable3' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Angle_for_Preview_State, K2Node_Select_Default) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Buff_Arrow_Angle_for_Preview_State::K2Node_Select_Default' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Handle Purchase Slot
// 0x0028 (0x0028 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Handle_Purchase_Slot final
{
public:
	bool                                          Passthrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHomeBaseContext*                       CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSquadSlotLocked_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetUnlockingHomebaseNodeIdForSquadSlot_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Handle_Purchase_Slot) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Handle_Purchase_Slot");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Handle_Purchase_Slot) == 0x000028, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Handle_Purchase_Slot");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Purchase_Slot, Passthrough) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Purchase_Slot::Passthrough' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Purchase_Slot, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Purchase_Slot::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Purchase_Slot, CallFunc_IsSquadSlotLocked_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Purchase_Slot::CallFunc_IsSquadSlotLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Purchase_Slot, CallFunc_GetUnlockingHomebaseNodeIdForSquadSlot_ReturnValue) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Purchase_Slot::CallFunc_GetUnlockingHomebaseNodeIdForSquadSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Purchase_Slot, CallFunc_GetUINavigationManager_ReturnValue) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Purchase_Slot::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Get Purchase Slot State
// 0x0020 (0x0020 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State final
{
public:
	EInputActionState                             ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             Temp_byte_Variable2;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonUIContext*                       CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingGamepad_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSquadSlotLocked_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue3;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             K2Node_Select_Default;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State) == 0x000020, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State, ReturnValue) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State, Temp_bool_Variable) == 0x000001, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State, Temp_byte_Variable) == 0x000002, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State, Temp_byte_Variable2) == 0x000003, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State, CallFunc_IsUsingGamepad_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State::CallFunc_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State, CallFunc_IsSquadSlotLocked_ReturnValue) == 0x000011, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State::CallFunc_IsSquadSlotLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000014, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x000019, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State, CallFunc_BooleanOR_ReturnValue) == 0x00001A, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State, CallFunc_BooleanOR_ReturnValue2) == 0x00001B, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State, CallFunc_BooleanOR_ReturnValue3) == 0x00001C, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State::CallFunc_BooleanOR_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State, K2Node_Select_Default) == 0x00001D, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Purchase_Slot_State::K2Node_Select_Default' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Get Selected Slot (SAFE)
// 0x0008 (0x0008 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Slot__SAFE_ final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Slot__SAFE_) == 0x000004, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Slot__SAFE_");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Slot__SAFE_) == 0x000008, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Slot__SAFE_");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Slot__SAFE_, ReturnValue) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Slot__SAFE_::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Slot__SAFE_, CallFunc_Max_ReturnValue) == 0x000004, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Selected_Slot__SAFE_::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Handle Inspect
// 0x0018 (0x0018 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Handle_Inspect final
{
public:
	bool                                          Passthrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Handle_Inspect) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Handle_Inspect");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Handle_Inspect) == 0x000018, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Handle_Inspect");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Inspect, Passthrough) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Inspect::Passthrough' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Inspect, CallFunc_GetUINavigationManager_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Inspect::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Handle_Inspect, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Handle_Inspect::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Determine Inspect Item for Squad Slot
// 0x0018 (0x0018 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Determine_Inspect_Item_for_Squad_Slot final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EInputActionState                             Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             Temp_byte_Variable2;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              CallFunc_Get_Item_In_Selected_Squad_Slot_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputActionState                             K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Determine_Inspect_Item_for_Squad_Slot) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Determine_Inspect_Item_for_Squad_Slot");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Determine_Inspect_Item_for_Squad_Slot) == 0x000018, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Determine_Inspect_Item_for_Squad_Slot");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Inspect_Item_for_Squad_Slot, Temp_bool_Variable) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Inspect_Item_for_Squad_Slot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Inspect_Item_for_Squad_Slot, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Inspect_Item_for_Squad_Slot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Inspect_Item_for_Squad_Slot, Temp_byte_Variable) == 0x000002, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Inspect_Item_for_Squad_Slot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Inspect_Item_for_Squad_Slot, Temp_byte_Variable2) == 0x000003, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Inspect_Item_for_Squad_Slot::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Inspect_Item_for_Squad_Slot, CallFunc_Get_Item_In_Selected_Squad_Slot_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Inspect_Item_for_Squad_Slot::CallFunc_Get_Item_In_Selected_Squad_Slot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Determine_Inspect_Item_for_Squad_Slot, K2Node_Select_Default) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Determine_Inspect_Item_for_Squad_Slot::K2Node_Select_Default' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.HACK_SetCursorToSquadPicker
// 0x0010 (0x0010 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadPicker final
{
public:
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadPicker) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadPicker");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadPicker) == 0x000010, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadPicker");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadPicker, CallFunc_NotEqual_NameName_ReturnValue) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadPicker::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadPicker, CallFunc_GetUINavigationManager_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_HACK_SetCursorToSquadPicker::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Get Item In Selected Squad Slot
// 0x0038 (0x0038 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Get_Item_In_Selected_Squad_Slot final
{
public:
	class UFortItem*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULocalPlayer*                           CallFunc_GetOwningLocalPlayer_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Selected_Slot__SAFE__ReturnValue;     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UExpeditionSquadSlotButton_C*           K2Node_DynamicCast_AsExpedition_Squad_Slot_Button; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              CallFunc_GetItemInSquadSlotBP_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Get_Item_In_Selected_Squad_Slot) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Get_Item_In_Selected_Squad_Slot");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Get_Item_In_Selected_Squad_Slot) == 0x000038, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Get_Item_In_Selected_Squad_Slot");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Item_In_Selected_Squad_Slot, ReturnValue) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Item_In_Selected_Squad_Slot::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Item_In_Selected_Squad_Slot, CallFunc_GetOwningLocalPlayer_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Item_In_Selected_Squad_Slot::CallFunc_GetOwningLocalPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Item_In_Selected_Squad_Slot, CallFunc_Get_Selected_Slot__SAFE__ReturnValue) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Item_In_Selected_Squad_Slot::CallFunc_Get_Selected_Slot__SAFE__ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Item_In_Selected_Squad_Slot, CallFunc_GetChildAt_ReturnValue) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Item_In_Selected_Squad_Slot::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Item_In_Selected_Squad_Slot, K2Node_DynamicCast_AsExpedition_Squad_Slot_Button) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Item_In_Selected_Squad_Slot::K2Node_DynamicCast_AsExpedition_Squad_Slot_Button' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Item_In_Selected_Squad_Slot, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Item_In_Selected_Squad_Slot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Item_In_Selected_Squad_Slot, CallFunc_GetItemInSquadSlotBP_ReturnValue) == 0x000030, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Item_In_Selected_Squad_Slot::CallFunc_GetItemInSquadSlotBP_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Get Bonus Display Name and Brush
// 0x0570 (0x0570 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortRarity                                   Rarity;                                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            OutBrush_Brush_M;                                  // 0x0010(0x0078)(Parm, OutParm)
	class FText                                   OutDisplayName;                                    // 0x0088(0x0018)(Parm, OutParm)
	struct FLinearColor                           OutRarityColor;                                    // 0x00A0(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RarityColor;                                       // 0x00B0(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            TagBrush;                                          // 0x00C0(0x0078)(Edit, BlueprintVisible)
	class FText                                   DisplayName;                                       // 0x0138(0x0018)(Edit, BlueprintVisible)
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue;              // 0x0150(0x0080)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01D0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x0210(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0250(0x0010)(ZeroConstructor, ReferenceParm)
	class UFortTooltipUIContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0268(0x0018)()
	class FText                                   CallFunc_GetDisplayNameAndMultiBrushForTag_OutDisplayName; // 0x0280(0x0018)()
	struct FFortMultiSizeBrush                    CallFunc_GetDisplayNameAndMultiBrushForTag_OutBrush; // 0x0298(0x02D0)()
	bool                                          CallFunc_GetDisplayNameAndMultiBrushForTag_ReturnValue; // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush) == 0x000570, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush, Tag) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush::Tag' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush, Condition) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush::Condition' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush, Rarity) == 0x000009, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush::Rarity' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush, OutBrush_Brush_M) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush::OutBrush_Brush_M' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush, OutDisplayName) == 0x000088, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush::OutDisplayName' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush, OutRarityColor) == 0x0000A0, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush::OutRarityColor' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush, RarityColor) == 0x0000B0, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush::RarityColor' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush, TagBrush) == 0x0000C0, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush::TagBrush' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush, DisplayName) == 0x000138, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush::DisplayName' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush, CallFunc_BPGetRarityData_ReturnValue) == 0x000150, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush::CallFunc_BPGetRarityData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush, K2Node_MakeStruct_FormatArgumentData) == 0x0001D0, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush, K2Node_MakeStruct_FormatArgumentData2) == 0x000210, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush, K2Node_MakeArray_Array) == 0x000250, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush, CallFunc_GetContext_ReturnValue) == 0x000260, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush, CallFunc_Format_ReturnValue) == 0x000268, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush, CallFunc_GetDisplayNameAndMultiBrushForTag_OutDisplayName) == 0x000280, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush::CallFunc_GetDisplayNameAndMultiBrushForTag_OutDisplayName' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush, CallFunc_GetDisplayNameAndMultiBrushForTag_OutBrush) == 0x000298, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush::CallFunc_GetDisplayNameAndMultiBrushForTag_OutBrush' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush, CallFunc_GetDisplayNameAndMultiBrushForTag_ReturnValue) == 0x000568, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Bonus_Display_Name_and_Brush::CallFunc_GetDisplayNameAndMultiBrushForTag_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.GetSquadRatingTooltipWidget
// 0x0068 (0x0068 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonUIContext*                       CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsUsingGamepad_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0028(0x0018)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0048(0x0018)()
	class UUserWidget*                            CallFunc_Create_Basic_Tooltip_Output;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget) == 0x000068, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget, ReturnValue) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget, CallFunc_IsUsingGamepad_ReturnValue) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget::CallFunc_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget, CallFunc_Format_ReturnValue) == 0x000028, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000040, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget, CallFunc_MakeLiteralText_ReturnValue) == 0x000048, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget, CallFunc_Create_Basic_Tooltip_Output) == 0x000060, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSquadRatingTooltipWidget::CallFunc_Create_Basic_Tooltip_Output' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.GetSuccessChanceTooltipWidget
// 0x00E8 (0x00E8 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class UCommonUIContext*                       CallFunc_GetContext_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingGamepad_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0030(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0060(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0018)()
	class UUserWidget*                            CallFunc_Create_Basic_Tooltip_Output;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget) == 0x0000E8, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget, ReturnValue) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget, Temp_text_Variable) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget, CallFunc_GetContext_ReturnValue) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget, CallFunc_IsUsingGamepad_ReturnValue) == 0x000028, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget::CallFunc_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget, CallFunc_MakeLiteralText_ReturnValue) == 0x000030, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget, Temp_bool_Variable) == 0x000048, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000050, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget, CallFunc_Less_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget, K2Node_Select_Default) == 0x000060, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget, CallFunc_Create_Basic_Tooltip_Output) == 0x0000E0, "Member 'BP_FortExpeditionBuildSquadWidget_C_GetSuccessChanceTooltipWidget::CallFunc_Create_Basic_Tooltip_Output' has a wrong offset!");

// Function BP_FortExpeditionBuildSquadWidget.BP_FortExpeditionBuildSquadWidget_C.Get Mcp Relative Utc Now
// 0x0028 (0x0028 - 0x0000)
struct BP_FortExpeditionBuildSquadWidget_C_Get_Mcp_Relative_Utc_Now final
{
public:
	struct FDateTime                              UtcNow;                                            // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_GetMcpRelativeUtcNow_ReturnValue;         // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionBuildSquadWidget_C_Get_Mcp_Relative_Utc_Now) == 0x000008, "Wrong alignment on BP_FortExpeditionBuildSquadWidget_C_Get_Mcp_Relative_Utc_Now");
static_assert(sizeof(BP_FortExpeditionBuildSquadWidget_C_Get_Mcp_Relative_Utc_Now) == 0x000028, "Wrong size on BP_FortExpeditionBuildSquadWidget_C_Get_Mcp_Relative_Utc_Now");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Mcp_Relative_Utc_Now, UtcNow) == 0x000000, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Mcp_Relative_Utc_Now::UtcNow' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Mcp_Relative_Utc_Now, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Mcp_Relative_Utc_Now::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Mcp_Relative_Utc_Now, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000010, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Mcp_Relative_Utc_Now::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Mcp_Relative_Utc_Now, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Mcp_Relative_Utc_Now::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionBuildSquadWidget_C_Get_Mcp_Relative_Utc_Now, CallFunc_GetMcpRelativeUtcNow_ReturnValue) == 0x000020, "Member 'BP_FortExpeditionBuildSquadWidget_C_Get_Mcp_Relative_Utc_Now::CallFunc_GetMcpRelativeUtcNow_ReturnValue' has a wrong offset!");

}

