#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FortExpeditionDetailsWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function BP_FortExpeditionDetailsWidget.BP_FortExpeditionDetailsWidget_C.ExecuteUbergraph_BP_FortExpeditionDetailsWidget
// 0x01E8 (0x01E8 - 0x0000)
struct BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDialogResult                             K2Node_CustomEvent_Result;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_ResultName;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWaitingForLatentActionCompletion; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortDialogExternalLatentActionHandle  K2Node_CustomEvent_WaitingDialogHandle;            // 0x0014(0x0004)(NoDestructor)
	TDelegate<void(EFortDialogResult Result, class FName ResultName, bool bWaitingForLatentActionCompletion, const struct FFortDialogExternalLatentActionHandle& WaitingDialogHandle)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	struct FFortDialogExternalLatentActionHandle  Temp_struct_Variable;                              // 0x0028(0x0004)(NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDialogResult                             Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortExpeditionItem*                    K2Node_Event_InItem;                               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortExpeditionItem*                    K2Node_CustomEvent_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInfoWindow_C*                          CallFunc_Create_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortExpeditionItemDefinition*          CallFunc_Get_Expedition_Item_Definition_Item_Def;  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortCardPackItemDefinition*>    CallFunc_GetAllRewards_OutRewards;                 // 0x0080(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0090(0x0018)()
	struct FConfirmationDialogAction              K2Node_MakeStruct_ConfirmationDialogAction;        // 0x00A8(0x00B8)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0160(0x0040)(HasGetValueTypeHash)
	TArray<struct FConfirmationDialogAction>      K2Node_MakeArray_Array;                            // 0x01A0(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array2;                           // 0x01B0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01C0(0x0018)()
	class UFortAsyncAction_ShowAdvancedLatentConfirmation_NUI* CallFunc_ShowAdvancedLatentActionConfirmation_ReturnValue; // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget) == 0x000008, "Wrong alignment on BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget");
static_assert(sizeof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget) == 0x0001E8, "Wrong size on BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, EntryPoint) == 0x000000, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, K2Node_CustomEvent_Result) == 0x000004, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::K2Node_CustomEvent_Result' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, K2Node_CustomEvent_ResultName) == 0x000008, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::K2Node_CustomEvent_ResultName' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, K2Node_CustomEvent_bWaitingForLatentActionCompletion) == 0x000010, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::K2Node_CustomEvent_bWaitingForLatentActionCompletion' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, K2Node_CustomEvent_WaitingDialogHandle) == 0x000014, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::K2Node_CustomEvent_WaitingDialogHandle' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, Temp_struct_Variable) == 0x000028, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, Temp_bool_Variable) == 0x00002C, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, Temp_name_Variable) == 0x000030, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, Temp_byte_Variable) == 0x000038, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, K2Node_SwitchEnum_CmpSuccess) == 0x000039, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, K2Node_Event_InItem) == 0x000040, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::K2Node_Event_InItem' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, K2Node_CustomEvent_Item) == 0x000048, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000050, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, K2Node_ComponentBoundEvent_Button) == 0x000058, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, CallFunc_GetPlayerController_ReturnValue) == 0x000060, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000068, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, CallFunc_Create_ReturnValue) == 0x000070, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, CallFunc_Get_Expedition_Item_Definition_Item_Def) == 0x000078, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::CallFunc_Get_Expedition_Item_Definition_Item_Def' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, CallFunc_GetAllRewards_OutRewards) == 0x000080, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::CallFunc_GetAllRewards_OutRewards' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, CallFunc_GetText_ReturnValue) == 0x000090, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, K2Node_MakeStruct_ConfirmationDialogAction) == 0x0000A8, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::K2Node_MakeStruct_ConfirmationDialogAction' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, K2Node_MakeStruct_FormatArgumentData) == 0x000160, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, K2Node_MakeArray_Array) == 0x0001A0, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, K2Node_MakeArray_Array2) == 0x0001B0, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, CallFunc_Format_ReturnValue) == 0x0001C0, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, CallFunc_ShowAdvancedLatentActionConfirmation_ReturnValue) == 0x0001D8, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::CallFunc_ShowAdvancedLatentActionConfirmation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget, CallFunc_IsValid_ReturnValue) == 0x0001E0, "Member 'BP_FortExpeditionDetailsWidget_C_ExecuteUbergraph_BP_FortExpeditionDetailsWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionDetailsWidget.BP_FortExpeditionDetailsWidget_C.BndEvt__ViewInfoButton_NoText_K2Node_ComponentBoundEvent_223_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_FortExpeditionDetailsWidget_C_BndEvt__ViewInfoButton_NoText_K2Node_ComponentBoundEvent_223_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionDetailsWidget_C_BndEvt__ViewInfoButton_NoText_K2Node_ComponentBoundEvent_223_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on BP_FortExpeditionDetailsWidget_C_BndEvt__ViewInfoButton_NoText_K2Node_ComponentBoundEvent_223_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(BP_FortExpeditionDetailsWidget_C_BndEvt__ViewInfoButton_NoText_K2Node_ComponentBoundEvent_223_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on BP_FortExpeditionDetailsWidget_C_BndEvt__ViewInfoButton_NoText_K2Node_ComponentBoundEvent_223_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_BndEvt__ViewInfoButton_NoText_K2Node_ComponentBoundEvent_223_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'BP_FortExpeditionDetailsWidget_C_BndEvt__ViewInfoButton_NoText_K2Node_ComponentBoundEvent_223_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function BP_FortExpeditionDetailsWidget.BP_FortExpeditionDetailsWidget_C.HandleOnExpeditionCompleted
// 0x0008 (0x0008 - 0x0000)
struct BP_FortExpeditionDetailsWidget_C_HandleOnExpeditionCompleted final
{
public:
	class UFortExpeditionItem*                    Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionDetailsWidget_C_HandleOnExpeditionCompleted) == 0x000008, "Wrong alignment on BP_FortExpeditionDetailsWidget_C_HandleOnExpeditionCompleted");
static_assert(sizeof(BP_FortExpeditionDetailsWidget_C_HandleOnExpeditionCompleted) == 0x000008, "Wrong size on BP_FortExpeditionDetailsWidget_C_HandleOnExpeditionCompleted");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_HandleOnExpeditionCompleted, Param_Item) == 0x000000, "Member 'BP_FortExpeditionDetailsWidget_C_HandleOnExpeditionCompleted::Param_Item' has a wrong offset!");

// Function BP_FortExpeditionDetailsWidget.BP_FortExpeditionDetailsWidget_C.SetData
// 0x0008 (0x0008 - 0x0000)
struct BP_FortExpeditionDetailsWidget_C_SetData final
{
public:
	class UFortExpeditionItem*                    InItem;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionDetailsWidget_C_SetData) == 0x000008, "Wrong alignment on BP_FortExpeditionDetailsWidget_C_SetData");
static_assert(sizeof(BP_FortExpeditionDetailsWidget_C_SetData) == 0x000008, "Wrong size on BP_FortExpeditionDetailsWidget_C_SetData");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_SetData, InItem) == 0x000000, "Member 'BP_FortExpeditionDetailsWidget_C_SetData::InItem' has a wrong offset!");

// Function BP_FortExpeditionDetailsWidget.BP_FortExpeditionDetailsWidget_C.DialogResult_11B7688B48FDD9A59A2D55A7B4F60124
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) BP_FortExpeditionDetailsWidget_C_DialogResult_11B7688B48FDD9A59A2D55A7B4F60124 final
{
public:
	EFortDialogResult                             Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ResultName;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWaitingForLatentActionCompletion;                 // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortDialogExternalLatentActionHandle  WaitingDialogHandle;                               // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionDetailsWidget_C_DialogResult_11B7688B48FDD9A59A2D55A7B4F60124) == 0x000008, "Wrong alignment on BP_FortExpeditionDetailsWidget_C_DialogResult_11B7688B48FDD9A59A2D55A7B4F60124");
static_assert(sizeof(BP_FortExpeditionDetailsWidget_C_DialogResult_11B7688B48FDD9A59A2D55A7B4F60124) == 0x000018, "Wrong size on BP_FortExpeditionDetailsWidget_C_DialogResult_11B7688B48FDD9A59A2D55A7B4F60124");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_DialogResult_11B7688B48FDD9A59A2D55A7B4F60124, Result) == 0x000000, "Member 'BP_FortExpeditionDetailsWidget_C_DialogResult_11B7688B48FDD9A59A2D55A7B4F60124::Result' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_DialogResult_11B7688B48FDD9A59A2D55A7B4F60124, ResultName) == 0x000008, "Member 'BP_FortExpeditionDetailsWidget_C_DialogResult_11B7688B48FDD9A59A2D55A7B4F60124::ResultName' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_DialogResult_11B7688B48FDD9A59A2D55A7B4F60124, bWaitingForLatentActionCompletion) == 0x000010, "Member 'BP_FortExpeditionDetailsWidget_C_DialogResult_11B7688B48FDD9A59A2D55A7B4F60124::bWaitingForLatentActionCompletion' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_DialogResult_11B7688B48FDD9A59A2D55A7B4F60124, WaitingDialogHandle) == 0x000014, "Member 'BP_FortExpeditionDetailsWidget_C_DialogResult_11B7688B48FDD9A59A2D55A7B4F60124::WaitingDialogHandle' has a wrong offset!");

// Function BP_FortExpeditionDetailsWidget.BP_FortExpeditionDetailsWidget_C.Refresh Item Data
// 0x0010 (0x0010 - 0x0000)
struct BP_FortExpeditionDetailsWidget_C_Refresh_Item_Data final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortExpeditionItemDefinition*          CallFunc_Get_Expedition_Item_Definition_Item_Def;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionDetailsWidget_C_Refresh_Item_Data) == 0x000008, "Wrong alignment on BP_FortExpeditionDetailsWidget_C_Refresh_Item_Data");
static_assert(sizeof(BP_FortExpeditionDetailsWidget_C_Refresh_Item_Data) == 0x000010, "Wrong size on BP_FortExpeditionDetailsWidget_C_Refresh_Item_Data");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Refresh_Item_Data, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_FortExpeditionDetailsWidget_C_Refresh_Item_Data::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Refresh_Item_Data, CallFunc_Get_Expedition_Item_Definition_Item_Def) == 0x000008, "Member 'BP_FortExpeditionDetailsWidget_C_Refresh_Item_Data::CallFunc_Get_Expedition_Item_Definition_Item_Def' has a wrong offset!");

// Function BP_FortExpeditionDetailsWidget.BP_FortExpeditionDetailsWidget_C.Set Name
// 0x0020 (0x0020 - 0x0000)
struct BP_FortExpeditionDetailsWidget_C_Set_Name final
{
public:
	class UFortItem*                              Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(BP_FortExpeditionDetailsWidget_C_Set_Name) == 0x000008, "Wrong alignment on BP_FortExpeditionDetailsWidget_C_Set_Name");
static_assert(sizeof(BP_FortExpeditionDetailsWidget_C_Set_Name) == 0x000020, "Wrong size on BP_FortExpeditionDetailsWidget_C_Set_Name");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Name, Param_Item) == 0x000000, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Name::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Name, CallFunc_GetDisplayName_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Name::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionDetailsWidget.BP_FortExpeditionDetailsWidget_C.Set Rarity
// 0x0098 (0x0098 - 0x0000)
struct BP_FortExpeditionDetailsWidget_C_Set_Rarity final
{
public:
	class UFortItem*                              Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortRarity                                   CallFunc_GetRarity_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue;              // 0x0018(0x0080)()
};
static_assert(alignof(BP_FortExpeditionDetailsWidget_C_Set_Rarity) == 0x000008, "Wrong alignment on BP_FortExpeditionDetailsWidget_C_Set_Rarity");
static_assert(sizeof(BP_FortExpeditionDetailsWidget_C_Set_Rarity) == 0x000098, "Wrong size on BP_FortExpeditionDetailsWidget_C_Set_Rarity");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Rarity, Param_Item) == 0x000000, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Rarity::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Rarity, CallFunc_GetRarity_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Rarity::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Rarity, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Rarity::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Rarity, CallFunc_BPGetRarityData_ReturnValue) == 0x000018, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Rarity::CallFunc_BPGetRarityData_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionDetailsWidget.BP_FortExpeditionDetailsWidget_C.Set Description
// 0x0020 (0x0020 - 0x0000)
struct BP_FortExpeditionDetailsWidget_C_Set_Description final
{
public:
	class UFortItem*                              Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDescription_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(BP_FortExpeditionDetailsWidget_C_Set_Description) == 0x000008, "Wrong alignment on BP_FortExpeditionDetailsWidget_C_Set_Description");
static_assert(sizeof(BP_FortExpeditionDetailsWidget_C_Set_Description) == 0x000020, "Wrong size on BP_FortExpeditionDetailsWidget_C_Set_Description");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Description, Param_Item) == 0x000000, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Description::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Description, CallFunc_GetDescription_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Description::CallFunc_GetDescription_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionDetailsWidget.BP_FortExpeditionDetailsWidget_C.Get Expedition Item Definition
// 0x0028 (0x0028 - 0x0000)
struct BP_FortExpeditionDetailsWidget_C_Get_Expedition_Item_Definition final
{
public:
	class UFortItem*                              Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortExpeditionItemDefinition*          Item_Def;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemDefinition*                    CallFunc_GetItemDefinitionBP_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortExpeditionItemDefinition*          K2Node_DynamicCast_AsFort_Expedition_Item_Definition; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionDetailsWidget_C_Get_Expedition_Item_Definition) == 0x000008, "Wrong alignment on BP_FortExpeditionDetailsWidget_C_Get_Expedition_Item_Definition");
static_assert(sizeof(BP_FortExpeditionDetailsWidget_C_Get_Expedition_Item_Definition) == 0x000028, "Wrong size on BP_FortExpeditionDetailsWidget_C_Get_Expedition_Item_Definition");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Expedition_Item_Definition, Param_Item) == 0x000000, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Expedition_Item_Definition::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Expedition_Item_Definition, Item_Def) == 0x000008, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Expedition_Item_Definition::Item_Def' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Expedition_Item_Definition, CallFunc_GetItemDefinitionBP_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Expedition_Item_Definition::CallFunc_GetItemDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Expedition_Item_Definition, K2Node_DynamicCast_AsFort_Expedition_Item_Definition) == 0x000018, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Expedition_Item_Definition::K2Node_DynamicCast_AsFort_Expedition_Item_Definition' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Expedition_Item_Definition, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Expedition_Item_Definition::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_FortExpeditionDetailsWidget.BP_FortExpeditionDetailsWidget_C.Set Expedition Duration
// 0x0098 (0x0098 - 0x0000)
struct BP_FortExpeditionDetailsWidget_C_Set_Expedition_Duration final
{
public:
	class UFortExpeditionItemDefinition*          Item_Def;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_FromMinutes_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTimespanAsText_ReturnValue;            // 0x0018(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0018)()
};
static_assert(alignof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Duration) == 0x000008, "Wrong alignment on BP_FortExpeditionDetailsWidget_C_Set_Expedition_Duration");
static_assert(sizeof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Duration) == 0x000098, "Wrong size on BP_FortExpeditionDetailsWidget_C_Set_Expedition_Duration");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Duration, Item_Def) == 0x000000, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Duration::Item_Def' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Duration, CallFunc_FromMinutes_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Duration::CallFunc_FromMinutes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Duration, CallFunc_Less_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Duration::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Duration, CallFunc_GetTimespanAsText_ReturnValue) == 0x000018, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Duration::CallFunc_GetTimespanAsText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Duration, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Duration::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Duration, K2Node_MakeArray_Array) == 0x000070, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Duration::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Duration, CallFunc_Format_ReturnValue) == 0x000080, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Duration::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionDetailsWidget.BP_FortExpeditionDetailsWidget_C.Set Rewards
// 0x0060 (0x0060 - 0x0000)
struct BP_FortExpeditionDetailsWidget_C_Set_Rewards final
{
public:
	class UFortExpeditionItemDefinition*          Item_Def;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortCardPackItemDefinition*>    CallFunc_GetAllRewards_OutRewards;                 // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	class UFortCardPackItemDefinition*            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              CallFunc_CreateTemporaryItemInstanceBP_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URewardsListEntry_C*                    CallFunc_Create_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionDetailsWidget_C_Set_Rewards) == 0x000008, "Wrong alignment on BP_FortExpeditionDetailsWidget_C_Set_Rewards");
static_assert(sizeof(BP_FortExpeditionDetailsWidget_C_Set_Rewards) == 0x000060, "Wrong size on BP_FortExpeditionDetailsWidget_C_Set_Rewards");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Rewards, Item_Def) == 0x000000, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Rewards::Item_Def' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Rewards, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Rewards::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Rewards, CallFunc_GetAllRewards_OutRewards) == 0x000010, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Rewards::CallFunc_GetAllRewards_OutRewards' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Rewards, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Rewards::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Rewards, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Rewards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Rewards, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Rewards::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Rewards, CallFunc_CreateTemporaryItemInstanceBP_ReturnValue) == 0x000030, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Rewards::CallFunc_CreateTemporaryItemInstanceBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Rewards, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Rewards::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Rewards, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Rewards::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Rewards, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Rewards::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Rewards, CallFunc_GetOwningPlayer_ReturnValue) == 0x000048, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Rewards::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Rewards, CallFunc_Create_ReturnValue) == 0x000050, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Rewards::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Rewards, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000058, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Rewards::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionDetailsWidget.BP_FortExpeditionDetailsWidget_C.Set Rating
// 0x0010 (0x0010 - 0x0000)
struct BP_FortExpeditionDetailsWidget_C_Set_Rating final
{
public:
	class UFortExpeditionItem*                    Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetPowerLevel_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionDetailsWidget_C_Set_Rating) == 0x000008, "Wrong alignment on BP_FortExpeditionDetailsWidget_C_Set_Rating");
static_assert(sizeof(BP_FortExpeditionDetailsWidget_C_Set_Rating) == 0x000010, "Wrong size on BP_FortExpeditionDetailsWidget_C_Set_Rating");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Rating, Param_Item) == 0x000000, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Rating::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Rating, CallFunc_GetTargetPowerLevel_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Rating::CallFunc_GetTargetPowerLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Rating, CallFunc_FTrunc_ReturnValue) == 0x00000C, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Rating::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionDetailsWidget.BP_FortExpeditionDetailsWidget_C.Open Build Expedition Squad
// 0x0028 (0x0028 - 0x0000)
struct BP_FortExpeditionDetailsWidget_C_Open_Build_Expedition_Squad final
{
public:
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetCachedWidget_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortExpeditionBuildSquadWidget*        K2Node_DynamicCast_AsFort_Expedition_Build_Squad_Widget; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionDetailsWidget_C_Open_Build_Expedition_Squad) == 0x000008, "Wrong alignment on BP_FortExpeditionDetailsWidget_C_Open_Build_Expedition_Squad");
static_assert(sizeof(BP_FortExpeditionDetailsWidget_C_Open_Build_Expedition_Squad) == 0x000028, "Wrong size on BP_FortExpeditionDetailsWidget_C_Open_Build_Expedition_Squad");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Open_Build_Expedition_Squad, CallFunc_IsValidClass_ReturnValue) == 0x000000, "Member 'BP_FortExpeditionDetailsWidget_C_Open_Build_Expedition_Squad::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Open_Build_Expedition_Squad, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionDetailsWidget_C_Open_Build_Expedition_Squad::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Open_Build_Expedition_Squad, CallFunc_GetCachedWidget_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionDetailsWidget_C_Open_Build_Expedition_Squad::CallFunc_GetCachedWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Open_Build_Expedition_Squad, K2Node_DynamicCast_AsFort_Expedition_Build_Squad_Widget) == 0x000018, "Member 'BP_FortExpeditionDetailsWidget_C_Open_Build_Expedition_Squad::K2Node_DynamicCast_AsFort_Expedition_Build_Squad_Widget' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Open_Build_Expedition_Squad, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_FortExpeditionDetailsWidget_C_Open_Build_Expedition_Squad::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_FortExpeditionDetailsWidget.BP_FortExpeditionDetailsWidget_C.Set Requirements
// 0x0388 (0x0388 - 0x0000)
struct BP_FortExpeditionDetailsWidget_C_Set_Requirements final
{
public:
	class UFortExpeditionItemDefinition*          ItemDef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortTooltipUIContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetRequiredTags_ReturnValue;              // 0x0010(0x0020)()
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FFortTagUIData                         CallFunc_GetUIDataForTag_OutData;                  // 0x0050(0x0308)()
	bool                                          CallFunc_GetUIDataForTag_ReturnValue;              // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UIconAndNameWidget_C*                   CallFunc_Create_ReturnValue;                       // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0378(0x0008)(NoDestructor)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionDetailsWidget_C_Set_Requirements) == 0x000008, "Wrong alignment on BP_FortExpeditionDetailsWidget_C_Set_Requirements");
static_assert(sizeof(BP_FortExpeditionDetailsWidget_C_Set_Requirements) == 0x000388, "Wrong size on BP_FortExpeditionDetailsWidget_C_Set_Requirements");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Requirements, ItemDef) == 0x000000, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Requirements::ItemDef' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Requirements, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Requirements::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Requirements, CallFunc_GetRequiredTags_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Requirements::CallFunc_GetRequiredTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Requirements, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000030, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Requirements::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Requirements, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Requirements::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Requirements, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Requirements::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Requirements, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Requirements::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Requirements, CallFunc_GetUIDataForTag_OutData) == 0x000050, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Requirements::CallFunc_GetUIDataForTag_OutData' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Requirements, CallFunc_GetUIDataForTag_ReturnValue) == 0x000358, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Requirements::CallFunc_GetUIDataForTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Requirements, Temp_int_Loop_Counter_Variable) == 0x00035C, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Requirements::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Requirements, CallFunc_Less_IntInt_ReturnValue) == 0x000360, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Requirements::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Requirements, CallFunc_Add_IntInt_ReturnValue) == 0x000364, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Requirements::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Requirements, CallFunc_GetOwningPlayer_ReturnValue) == 0x000368, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Requirements::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Requirements, CallFunc_Create_ReturnValue) == 0x000370, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Requirements::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Requirements, K2Node_MakeStruct_SlateChildSize) == 0x000378, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Requirements::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Requirements, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x000380, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Requirements::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionDetailsWidget.BP_FortExpeditionDetailsWidget_C.Set Remaining Expiration Time
// 0x0008 (0x0008 - 0x0000)
struct BP_FortExpeditionDetailsWidget_C_Set_Remaining_Expiration_Time final
{
public:
	class UFortExpeditionItem*                    Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionDetailsWidget_C_Set_Remaining_Expiration_Time) == 0x000008, "Wrong alignment on BP_FortExpeditionDetailsWidget_C_Set_Remaining_Expiration_Time");
static_assert(sizeof(BP_FortExpeditionDetailsWidget_C_Set_Remaining_Expiration_Time) == 0x000008, "Wrong size on BP_FortExpeditionDetailsWidget_C_Set_Remaining_Expiration_Time");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Remaining_Expiration_Time, Param_Item) == 0x000000, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Remaining_Expiration_Time::Param_Item' has a wrong offset!");

// Function BP_FortExpeditionDetailsWidget.BP_FortExpeditionDetailsWidget_C.Set In Progress State
// 0x0018 (0x0018 - 0x0000)
struct BP_FortExpeditionDetailsWidget_C_Set_In_Progress_State final
{
public:
	class UFortExpeditionItem*                    Self2;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsExpeditionInProgress_ReturnValue;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionDetailsWidget_C_Set_In_Progress_State) == 0x000008, "Wrong alignment on BP_FortExpeditionDetailsWidget_C_Set_In_Progress_State");
static_assert(sizeof(BP_FortExpeditionDetailsWidget_C_Set_In_Progress_State) == 0x000018, "Wrong size on BP_FortExpeditionDetailsWidget_C_Set_In_Progress_State");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_In_Progress_State, Self2) == 0x000000, "Member 'BP_FortExpeditionDetailsWidget_C_Set_In_Progress_State::Self2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_In_Progress_State, Temp_bool_Variable) == 0x000008, "Member 'BP_FortExpeditionDetailsWidget_C_Set_In_Progress_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_In_Progress_State, CallFunc_IsExpeditionInProgress_ReturnValue) == 0x000009, "Member 'BP_FortExpeditionDetailsWidget_C_Set_In_Progress_State::CallFunc_IsExpeditionInProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_In_Progress_State, Temp_int_Variable) == 0x00000C, "Member 'BP_FortExpeditionDetailsWidget_C_Set_In_Progress_State::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_In_Progress_State, Temp_int_Variable2) == 0x000010, "Member 'BP_FortExpeditionDetailsWidget_C_Set_In_Progress_State::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_In_Progress_State, K2Node_Select_Default) == 0x000014, "Member 'BP_FortExpeditionDetailsWidget_C_Set_In_Progress_State::K2Node_Select_Default' has a wrong offset!");

// Function BP_FortExpeditionDetailsWidget.BP_FortExpeditionDetailsWidget_C.Set Expedition Returns Data
// 0x0390 (0x0390 - 0x0000)
struct BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data final
{
public:
	class UFortExpeditionItem*                    Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetExpeditionSquadId_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExpeditionInProgress_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetVehicleTagFromSquadId_OutFoundVehicleTag; // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetVehicleTagFromSquadId_ReturnValue;     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UFortExpeditionItem* Item)> K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	class UFortTooltipUIContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortTagUIData                         CallFunc_GetUIDataForTag_OutData;                  // 0x0058(0x0308)()
	bool                                          CallFunc_GetUIDataForTag_ReturnValue;              // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHomeBaseContext*                       CallFunc_GetContext_ReturnValue2;                  // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortItem*>                      CallFunc_GetItemsInSquad_ReturnValue;              // 0x0370(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_CalculateTotalPower_ReturnValue;          // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateExpeditionPercentageChanceForSuccess_ReturnValue; // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data) == 0x000008, "Wrong alignment on BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data");
static_assert(sizeof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data) == 0x000390, "Wrong size on BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data, Param_Item) == 0x000000, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data, CallFunc_GetExpeditionSquadId_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data::CallFunc_GetExpeditionSquadId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data, CallFunc_IsExpeditionInProgress_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data::CallFunc_IsExpeditionInProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data, CallFunc_GetVehicleTagFromSquadId_OutFoundVehicleTag) == 0x000018, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data::CallFunc_GetVehicleTagFromSquadId_OutFoundVehicleTag' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data, CallFunc_GetVehicleTagFromSquadId_ReturnValue) == 0x000020, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data::CallFunc_GetVehicleTagFromSquadId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000030, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data, CallFunc_GetContext_ReturnValue) == 0x000050, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data, CallFunc_GetUIDataForTag_OutData) == 0x000058, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data::CallFunc_GetUIDataForTag_OutData' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data, CallFunc_GetUIDataForTag_ReturnValue) == 0x000360, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data::CallFunc_GetUIDataForTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data, CallFunc_GetContext_ReturnValue2) == 0x000368, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data, CallFunc_GetItemsInSquad_ReturnValue) == 0x000370, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data::CallFunc_GetItemsInSquad_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data, CallFunc_CalculateTotalPower_ReturnValue) == 0x000380, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data::CallFunc_CalculateTotalPower_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data, CallFunc_FTrunc_ReturnValue) == 0x000384, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data, CallFunc_CalculateExpeditionPercentageChanceForSuccess_ReturnValue) == 0x000388, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Expedition_Returns_Data::CallFunc_CalculateExpeditionPercentageChanceForSuccess_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionDetailsWidget.BP_FortExpeditionDetailsWidget_C.Set Bonus Criteria
// 0x0140 (0x0140 - 0x0000)
struct BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria final
{
public:
	class UFortExpeditionItem*                    Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFortCriteriaRequirementData>   CallFunc_GetBonusCriteriaBP_OutBonusCriteria;      // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortCriteriaRequirementData           CallFunc_Array_Get_Item;                           // 0x0020(0x0020)()
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_Get_Bonus_Display_Name_and_Brush_OutBrush_Brush_M; // 0x0048(0x0078)()
	class FText                                   CallFunc_Get_Bonus_Display_Name_and_Brush_OutDisplayName; // 0x00C0(0x0018)()
	struct FLinearColor                           CallFunc_Get_Bonus_Display_Name_and_Brush_OutRarityColor; // 0x00D8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UIconAndNameWidget_C*                   CallFunc_Create_ReturnValue;                       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0100(0x0008)(NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0108(0x0010)(NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria) == 0x000008, "Wrong alignment on BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria");
static_assert(sizeof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria) == 0x000140, "Wrong size on BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, Param_Item) == 0x000000, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, CallFunc_GetBonusCriteriaBP_OutBonusCriteria) == 0x000008, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::CallFunc_GetBonusCriteriaBP_OutBonusCriteria' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, CallFunc_Array_Length_ReturnValue2) == 0x000040, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, CallFunc_Get_Bonus_Display_Name_and_Brush_OutBrush_Brush_M) == 0x000048, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::CallFunc_Get_Bonus_Display_Name_and_Brush_OutBrush_Brush_M' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, CallFunc_Get_Bonus_Display_Name_and_Brush_OutDisplayName) == 0x0000C0, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::CallFunc_Get_Bonus_Display_Name_and_Brush_OutDisplayName' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, CallFunc_Get_Bonus_Display_Name_and_Brush_OutRarityColor) == 0x0000D8, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::CallFunc_Get_Bonus_Display_Name_and_Brush_OutRarityColor' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000F0, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, CallFunc_Create_ReturnValue) == 0x0000F8, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, K2Node_MakeStruct_SlateChildSize) == 0x000100, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, K2Node_MakeStruct_Margin) == 0x000108, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, Temp_byte_Variable) == 0x000118, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, Temp_int_Loop_Counter_Variable) == 0x00011C, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, CallFunc_Less_IntInt_ReturnValue) == 0x000120, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, CallFunc_Add_IntInt_ReturnValue) == 0x000124, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, Temp_byte_Variable2) == 0x000128, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, Temp_bool_Variable) == 0x000129, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000130, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria, K2Node_Select_Default) == 0x000138, "Member 'BP_FortExpeditionDetailsWidget_C_Set_Bonus_Criteria::K2Node_Select_Default' has a wrong offset!");

// Function BP_FortExpeditionDetailsWidget.BP_FortExpeditionDetailsWidget_C.Get Bonus Display Name and Brush
// 0x0570 (0x0570 - 0x0000)
struct BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortRarity                                   Rarity;                                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            OutBrush_Brush_M;                                  // 0x0010(0x0078)(Parm, OutParm)
	class FText                                   OutDisplayName;                                    // 0x0088(0x0018)(Parm, OutParm)
	struct FLinearColor                           OutRarityColor;                                    // 0x00A0(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RarityColor;                                       // 0x00B0(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            TagBrush;                                          // 0x00C0(0x0078)(Edit, BlueprintVisible)
	class FText                                   DisplayName;                                       // 0x0138(0x0018)(Edit, BlueprintVisible)
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue;              // 0x0150(0x0080)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01D0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x0210(0x0040)(HasGetValueTypeHash)
	class UFortTooltipUIContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0258(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_GetDisplayNameAndMultiBrushForTag_OutDisplayName; // 0x0268(0x0018)()
	struct FFortMultiSizeBrush                    CallFunc_GetDisplayNameAndMultiBrushForTag_OutBrush; // 0x0280(0x02D0)()
	bool                                          CallFunc_GetDisplayNameAndMultiBrushForTag_ReturnValue; // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0558(0x0018)()
};
static_assert(alignof(BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush) == 0x000008, "Wrong alignment on BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush");
static_assert(sizeof(BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush) == 0x000570, "Wrong size on BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush, Tag) == 0x000000, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush::Tag' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush, Condition) == 0x000008, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush::Condition' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush, Rarity) == 0x000009, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush::Rarity' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush, OutBrush_Brush_M) == 0x000010, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush::OutBrush_Brush_M' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush, OutDisplayName) == 0x000088, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush::OutDisplayName' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush, OutRarityColor) == 0x0000A0, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush::OutRarityColor' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush, RarityColor) == 0x0000B0, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush::RarityColor' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush, TagBrush) == 0x0000C0, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush::TagBrush' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush, DisplayName) == 0x000138, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush::DisplayName' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush, CallFunc_BPGetRarityData_ReturnValue) == 0x000150, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush::CallFunc_BPGetRarityData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush, K2Node_MakeStruct_FormatArgumentData) == 0x0001D0, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush, K2Node_MakeStruct_FormatArgumentData2) == 0x000210, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush, CallFunc_GetContext_ReturnValue) == 0x000250, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush, K2Node_MakeArray_Array) == 0x000258, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush, CallFunc_GetDisplayNameAndMultiBrushForTag_OutDisplayName) == 0x000268, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush::CallFunc_GetDisplayNameAndMultiBrushForTag_OutDisplayName' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush, CallFunc_GetDisplayNameAndMultiBrushForTag_OutBrush) == 0x000280, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush::CallFunc_GetDisplayNameAndMultiBrushForTag_OutBrush' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush, CallFunc_GetDisplayNameAndMultiBrushForTag_ReturnValue) == 0x000550, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush::CallFunc_GetDisplayNameAndMultiBrushForTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush, CallFunc_Format_ReturnValue) == 0x000558, "Member 'BP_FortExpeditionDetailsWidget_C_Get_Bonus_Display_Name_and_Brush::CallFunc_Format_ReturnValue' has a wrong offset!");

}

