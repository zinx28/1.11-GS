#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FortExpeditionExpiresWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FortExpeditionExpiresWidget.BP_FortExpeditionExpiresWidget_C.ExecuteUbergraph_BP_FortExpeditionExpiresWidget
// 0x0018 (0x0018 - 0x0000)
struct BP_FortExpeditionExpiresWidget_C_ExecuteUbergraph_BP_FortExpeditionExpiresWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortExpeditionItem*                    K2Node_Event_InItem;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionExpiresWidget_C_ExecuteUbergraph_BP_FortExpeditionExpiresWidget) == 0x000008, "Wrong alignment on BP_FortExpeditionExpiresWidget_C_ExecuteUbergraph_BP_FortExpeditionExpiresWidget");
static_assert(sizeof(BP_FortExpeditionExpiresWidget_C_ExecuteUbergraph_BP_FortExpeditionExpiresWidget) == 0x000018, "Wrong size on BP_FortExpeditionExpiresWidget_C_ExecuteUbergraph_BP_FortExpeditionExpiresWidget");
static_assert(offsetof(BP_FortExpeditionExpiresWidget_C_ExecuteUbergraph_BP_FortExpeditionExpiresWidget, EntryPoint) == 0x000000, "Member 'BP_FortExpeditionExpiresWidget_C_ExecuteUbergraph_BP_FortExpeditionExpiresWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionExpiresWidget_C_ExecuteUbergraph_BP_FortExpeditionExpiresWidget, K2Node_Event_InItem) == 0x000008, "Member 'BP_FortExpeditionExpiresWidget_C_ExecuteUbergraph_BP_FortExpeditionExpiresWidget::K2Node_Event_InItem' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionExpiresWidget_C_ExecuteUbergraph_BP_FortExpeditionExpiresWidget, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionExpiresWidget_C_ExecuteUbergraph_BP_FortExpeditionExpiresWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionExpiresWidget_C_ExecuteUbergraph_BP_FortExpeditionExpiresWidget, K2Node_Event_IsDesignTime) == 0x000011, "Member 'BP_FortExpeditionExpiresWidget_C_ExecuteUbergraph_BP_FortExpeditionExpiresWidget::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function BP_FortExpeditionExpiresWidget.BP_FortExpeditionExpiresWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_FortExpeditionExpiresWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionExpiresWidget_C_PreConstruct) == 0x000001, "Wrong alignment on BP_FortExpeditionExpiresWidget_C_PreConstruct");
static_assert(sizeof(BP_FortExpeditionExpiresWidget_C_PreConstruct) == 0x000001, "Wrong size on BP_FortExpeditionExpiresWidget_C_PreConstruct");
static_assert(offsetof(BP_FortExpeditionExpiresWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_FortExpeditionExpiresWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_FortExpeditionExpiresWidget.BP_FortExpeditionExpiresWidget_C.SetData
// 0x0008 (0x0008 - 0x0000)
struct BP_FortExpeditionExpiresWidget_C_SetData final
{
public:
	class UFortExpeditionItem*                    InItem;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionExpiresWidget_C_SetData) == 0x000008, "Wrong alignment on BP_FortExpeditionExpiresWidget_C_SetData");
static_assert(sizeof(BP_FortExpeditionExpiresWidget_C_SetData) == 0x000008, "Wrong size on BP_FortExpeditionExpiresWidget_C_SetData");
static_assert(offsetof(BP_FortExpeditionExpiresWidget_C_SetData, InItem) == 0x000000, "Member 'BP_FortExpeditionExpiresWidget_C_SetData::InItem' has a wrong offset!");

// Function BP_FortExpeditionExpiresWidget.BP_FortExpeditionExpiresWidget_C.Refresh Expiration Timer
// 0x0098 (0x0098 - 0x0000)
struct BP_FortExpeditionExpiresWidget_C_Refresh_Expiration_Timer final
{
public:
	class UFortExpeditionItem*                    Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Get_Mcp_Relative_Utc_Now_UtcNow;          // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_GetRemainingExpeditionExpirationDuration_ReturnValue; // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTimespanAsText_ReturnValue;            // 0x0018(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0018)()
};
static_assert(alignof(BP_FortExpeditionExpiresWidget_C_Refresh_Expiration_Timer) == 0x000008, "Wrong alignment on BP_FortExpeditionExpiresWidget_C_Refresh_Expiration_Timer");
static_assert(sizeof(BP_FortExpeditionExpiresWidget_C_Refresh_Expiration_Timer) == 0x000098, "Wrong size on BP_FortExpeditionExpiresWidget_C_Refresh_Expiration_Timer");
static_assert(offsetof(BP_FortExpeditionExpiresWidget_C_Refresh_Expiration_Timer, Param_Item) == 0x000000, "Member 'BP_FortExpeditionExpiresWidget_C_Refresh_Expiration_Timer::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionExpiresWidget_C_Refresh_Expiration_Timer, CallFunc_Get_Mcp_Relative_Utc_Now_UtcNow) == 0x000008, "Member 'BP_FortExpeditionExpiresWidget_C_Refresh_Expiration_Timer::CallFunc_Get_Mcp_Relative_Utc_Now_UtcNow' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionExpiresWidget_C_Refresh_Expiration_Timer, CallFunc_GetRemainingExpeditionExpirationDuration_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionExpiresWidget_C_Refresh_Expiration_Timer::CallFunc_GetRemainingExpeditionExpirationDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionExpiresWidget_C_Refresh_Expiration_Timer, CallFunc_GetTimespanAsText_ReturnValue) == 0x000018, "Member 'BP_FortExpeditionExpiresWidget_C_Refresh_Expiration_Timer::CallFunc_GetTimespanAsText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionExpiresWidget_C_Refresh_Expiration_Timer, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'BP_FortExpeditionExpiresWidget_C_Refresh_Expiration_Timer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionExpiresWidget_C_Refresh_Expiration_Timer, K2Node_MakeArray_Array) == 0x000070, "Member 'BP_FortExpeditionExpiresWidget_C_Refresh_Expiration_Timer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionExpiresWidget_C_Refresh_Expiration_Timer, CallFunc_Format_ReturnValue) == 0x000080, "Member 'BP_FortExpeditionExpiresWidget_C_Refresh_Expiration_Timer::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionExpiresWidget.BP_FortExpeditionExpiresWidget_C.Get Mcp Relative Utc Now
// 0x0028 (0x0028 - 0x0000)
struct BP_FortExpeditionExpiresWidget_C_Get_Mcp_Relative_Utc_Now final
{
public:
	struct FDateTime                              UtcNow;                                            // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_GetMcpRelativeUtcNow_ReturnValue;         // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionExpiresWidget_C_Get_Mcp_Relative_Utc_Now) == 0x000008, "Wrong alignment on BP_FortExpeditionExpiresWidget_C_Get_Mcp_Relative_Utc_Now");
static_assert(sizeof(BP_FortExpeditionExpiresWidget_C_Get_Mcp_Relative_Utc_Now) == 0x000028, "Wrong size on BP_FortExpeditionExpiresWidget_C_Get_Mcp_Relative_Utc_Now");
static_assert(offsetof(BP_FortExpeditionExpiresWidget_C_Get_Mcp_Relative_Utc_Now, UtcNow) == 0x000000, "Member 'BP_FortExpeditionExpiresWidget_C_Get_Mcp_Relative_Utc_Now::UtcNow' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionExpiresWidget_C_Get_Mcp_Relative_Utc_Now, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionExpiresWidget_C_Get_Mcp_Relative_Utc_Now::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionExpiresWidget_C_Get_Mcp_Relative_Utc_Now, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000010, "Member 'BP_FortExpeditionExpiresWidget_C_Get_Mcp_Relative_Utc_Now::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionExpiresWidget_C_Get_Mcp_Relative_Utc_Now, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_FortExpeditionExpiresWidget_C_Get_Mcp_Relative_Utc_Now::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionExpiresWidget_C_Get_Mcp_Relative_Utc_Now, CallFunc_GetMcpRelativeUtcNow_ReturnValue) == 0x000020, "Member 'BP_FortExpeditionExpiresWidget_C_Get_Mcp_Relative_Utc_Now::CallFunc_GetMcpRelativeUtcNow_ReturnValue' has a wrong offset!");

}

