#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SupplyDropPlacement

#include "Basic.hpp"

#include "SupplyDropUnlocks_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_SupplyDropPlacement.B_SupplyDropPlacement_C
// 0x01A0 (0x0980 - 0x07E0)
class AB_SupplyDropPlacement_C final : public ABuildingGameplayActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07E0(0x0008)(Transient, DuplicateTransient)
	class UBoxComponent*                          ActiveFloorCollision;                              // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x07F0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Reticle;                                         // 0x07F8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_SupplydropCrate_Explosion;                       // 0x0800(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        SupplyDropBeep;                                    // 0x0808(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Collision;                                         // 0x0810(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        NewIncoming;                                       // 0x0818(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SupplyDrop_Mesh_Open;                              // 0x0820(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Trail;                                             // 0x0828(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SupplyDrop_Mesh;                                   // 0x0830(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortMiniMapComponent*                  FortMiniMap1;                                      // 0x0838(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         FallingTimeline_FallCurve_A2643A72491D3A745741F8A24DC189B4; // 0x0840(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FallingTimeline__Direction_A2643A72491D3A745741F8A24DC189B4; // 0x0844(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_845[0x3];                                      // 0x0845(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FallingTimeline;                                   // 0x0848(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Allow_SupplyDrop_Interact;                         // 0x0850(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_851[0x7];                                      // 0x0851(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Activate_Sound;                                    // 0x0858(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Impact_Sound;                                      // 0x0860(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Loot_Sound;                                        // 0x0868(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EventHit;                                          // 0x0870(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0878(0x00A8)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         DelayForSelfDestruct;                              // 0x0920(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LootSpawnOffset;                                   // 0x0924(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FallHeight;                                        // 0x0930(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSupplyDropUnlocks                     Unlocks;                                           // 0x0934(0x0005)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	uint8                                         Pad_939[0x7];                                      // 0x0939(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           LootTableNames;                                    // 0x0940(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FTimerHandle                           SelfDestructTimerHandle;                           // 0x0950(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class ABuildingFloor*                         Floor;                                             // 0x0958(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewLocation;                                       // 0x0960(0x000C)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         FallTime;                                          // 0x096C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           SecondaryFallingTimerHandle;                       // 0x0970(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	bool                                          bLooted;                                           // 0x0978(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)

public:
	void ExecuteUbergraph_B_SupplyDropPlacement(int32 EntryPoint);
	void ReceiveBeginPlay();
	void SecondaryFallTick();
	void PlayDropNewTime();
	void SpawnLootDestroyActor();
	void StopFallingTimeline();
	void PlayDrop();
	void BlueprintOnInteract(const class AFortPawn* InteractingPawn);
	void SelfDestruction();
	void OverlappingDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void BndEvt__ActiveFloorCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ImpactFX();
	void FallingTimeline__Impact__EventFunc();
	void FallingTimeline__StartTrail__EventFunc();
	void FallingTimeline__UpdateFunc();
	void FallingTimeline__FinishedFunc();
	void UserConstructionScript();
	void SpawnLoot();
	void TurnOnInteract(bool bNewActorEnableCollision);
	void UpdateLocation(float Time);
	void Landed();
	void InitDrop(const struct FSupplyDropUnlocks& InUnlocks);
	void LootSpawnPosition(struct FVector* OutPos);
	void SpawnTierDrops(int32 LootTableIndex);
	void ClientPlayDropFX();
	void ToggleFallingFX(bool bToggleOn);
	struct FVector GetImpactLocation();
	struct FVector GetFallLocation();
	void OnRep_NewLocation();
	void OnRep_bLooted();

	bool BlueprintCanInteract(class AFortPawn* InteractingPawn) const;
	bool IsAcceptablePositionForPlacement(struct FVector& InLocation, struct FRotator& InRotation, class AFortDecoTool* DecoTool, bool bIsCDO, class FText* OutFailureReason) const;
	class FText BlueprintGetInteractionString(class AFortPawn* InteractingPawn) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_SupplyDropPlacement_C">();
	}
	static class AB_SupplyDropPlacement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_SupplyDropPlacement_C>();
	}
};
static_assert(alignof(AB_SupplyDropPlacement_C) == 0x000010, "Wrong alignment on AB_SupplyDropPlacement_C");
static_assert(sizeof(AB_SupplyDropPlacement_C) == 0x000980, "Wrong size on AB_SupplyDropPlacement_C");
static_assert(offsetof(AB_SupplyDropPlacement_C, UberGraphFrame) == 0x0007E0, "Member 'AB_SupplyDropPlacement_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, ActiveFloorCollision) == 0x0007E8, "Member 'AB_SupplyDropPlacement_C::ActiveFloorCollision' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, Scene) == 0x0007F0, "Member 'AB_SupplyDropPlacement_C::Scene' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, P_Reticle) == 0x0007F8, "Member 'AB_SupplyDropPlacement_C::P_Reticle' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, P_SupplydropCrate_Explosion) == 0x000800, "Member 'AB_SupplyDropPlacement_C::P_SupplydropCrate_Explosion' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, SupplyDropBeep) == 0x000808, "Member 'AB_SupplyDropPlacement_C::SupplyDropBeep' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, Collision) == 0x000810, "Member 'AB_SupplyDropPlacement_C::Collision' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, NewIncoming) == 0x000818, "Member 'AB_SupplyDropPlacement_C::NewIncoming' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, SupplyDrop_Mesh_Open) == 0x000820, "Member 'AB_SupplyDropPlacement_C::SupplyDrop_Mesh_Open' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, Trail) == 0x000828, "Member 'AB_SupplyDropPlacement_C::Trail' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, SupplyDrop_Mesh) == 0x000830, "Member 'AB_SupplyDropPlacement_C::SupplyDrop_Mesh' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, FortMiniMap1) == 0x000838, "Member 'AB_SupplyDropPlacement_C::FortMiniMap1' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, FallingTimeline_FallCurve_A2643A72491D3A745741F8A24DC189B4) == 0x000840, "Member 'AB_SupplyDropPlacement_C::FallingTimeline_FallCurve_A2643A72491D3A745741F8A24DC189B4' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, FallingTimeline__Direction_A2643A72491D3A745741F8A24DC189B4) == 0x000844, "Member 'AB_SupplyDropPlacement_C::FallingTimeline__Direction_A2643A72491D3A745741F8A24DC189B4' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, FallingTimeline) == 0x000848, "Member 'AB_SupplyDropPlacement_C::FallingTimeline' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, Allow_SupplyDrop_Interact) == 0x000850, "Member 'AB_SupplyDropPlacement_C::Allow_SupplyDrop_Interact' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, Activate_Sound) == 0x000858, "Member 'AB_SupplyDropPlacement_C::Activate_Sound' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, Impact_Sound) == 0x000860, "Member 'AB_SupplyDropPlacement_C::Impact_Sound' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, Loot_Sound) == 0x000868, "Member 'AB_SupplyDropPlacement_C::Loot_Sound' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, EventHit) == 0x000870, "Member 'AB_SupplyDropPlacement_C::EventHit' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, EventData) == 0x000878, "Member 'AB_SupplyDropPlacement_C::EventData' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, DelayForSelfDestruct) == 0x000920, "Member 'AB_SupplyDropPlacement_C::DelayForSelfDestruct' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, LootSpawnOffset) == 0x000924, "Member 'AB_SupplyDropPlacement_C::LootSpawnOffset' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, FallHeight) == 0x000930, "Member 'AB_SupplyDropPlacement_C::FallHeight' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, Unlocks) == 0x000934, "Member 'AB_SupplyDropPlacement_C::Unlocks' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, LootTableNames) == 0x000940, "Member 'AB_SupplyDropPlacement_C::LootTableNames' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, SelfDestructTimerHandle) == 0x000950, "Member 'AB_SupplyDropPlacement_C::SelfDestructTimerHandle' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, Floor) == 0x000958, "Member 'AB_SupplyDropPlacement_C::Floor' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, NewLocation) == 0x000960, "Member 'AB_SupplyDropPlacement_C::NewLocation' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, FallTime) == 0x00096C, "Member 'AB_SupplyDropPlacement_C::FallTime' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, SecondaryFallingTimerHandle) == 0x000970, "Member 'AB_SupplyDropPlacement_C::SecondaryFallingTimerHandle' has a wrong offset!");
static_assert(offsetof(AB_SupplyDropPlacement_C, bLooted) == 0x000978, "Member 'AB_SupplyDropPlacement_C::bLooted' has a wrong offset!");

}

