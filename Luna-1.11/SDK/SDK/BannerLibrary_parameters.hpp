#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BannerLibrary

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BannerLibrary.BannerLibrary_C.GenericUpdateMaterial
// 0x0040 (0x0040 - 0x0000)
struct BannerLibrary_C_GenericUpdateMaterial final
{
public:
	class UMaterialInstanceDynamic*               Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               BannerIcon;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BG_PrimaryColor;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BG_SecondaryColor;                                 // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               ShapeIcon;                                         // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BannerLibrary_C_GenericUpdateMaterial) == 0x000008, "Wrong alignment on BannerLibrary_C_GenericUpdateMaterial");
static_assert(sizeof(BannerLibrary_C_GenericUpdateMaterial) == 0x000040, "Wrong size on BannerLibrary_C_GenericUpdateMaterial");
static_assert(offsetof(BannerLibrary_C_GenericUpdateMaterial, Target) == 0x000000, "Member 'BannerLibrary_C_GenericUpdateMaterial::Target' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_GenericUpdateMaterial, BannerIcon) == 0x000008, "Member 'BannerLibrary_C_GenericUpdateMaterial::BannerIcon' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_GenericUpdateMaterial, BG_PrimaryColor) == 0x000010, "Member 'BannerLibrary_C_GenericUpdateMaterial::BG_PrimaryColor' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_GenericUpdateMaterial, BG_SecondaryColor) == 0x000020, "Member 'BannerLibrary_C_GenericUpdateMaterial::BG_SecondaryColor' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_GenericUpdateMaterial, ShapeIcon) == 0x000030, "Member 'BannerLibrary_C_GenericUpdateMaterial::ShapeIcon' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_GenericUpdateMaterial, __WorldContext) == 0x000038, "Member 'BannerLibrary_C_GenericUpdateMaterial::__WorldContext' has a wrong offset!");

// Function BannerLibrary.BannerLibrary_C.UpdateBannerColorOnMaterial
// 0x0030 (0x0030 - 0x0000)
struct BannerLibrary_C_UpdateBannerColorOnMaterial final
{
public:
	class UMaterialInstanceDynamic*               Material;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           PrimaryBGColor;                                    // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SecondaryBGColor;                                  // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BannerLibrary_C_UpdateBannerColorOnMaterial) == 0x000008, "Wrong alignment on BannerLibrary_C_UpdateBannerColorOnMaterial");
static_assert(sizeof(BannerLibrary_C_UpdateBannerColorOnMaterial) == 0x000030, "Wrong size on BannerLibrary_C_UpdateBannerColorOnMaterial");
static_assert(offsetof(BannerLibrary_C_UpdateBannerColorOnMaterial, Material) == 0x000000, "Member 'BannerLibrary_C_UpdateBannerColorOnMaterial::Material' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerColorOnMaterial, PrimaryBGColor) == 0x000008, "Member 'BannerLibrary_C_UpdateBannerColorOnMaterial::PrimaryBGColor' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerColorOnMaterial, SecondaryBGColor) == 0x000018, "Member 'BannerLibrary_C_UpdateBannerColorOnMaterial::SecondaryBGColor' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerColorOnMaterial, __WorldContext) == 0x000028, "Member 'BannerLibrary_C_UpdateBannerColorOnMaterial::__WorldContext' has a wrong offset!");

// Function BannerLibrary.BannerLibrary_C.UpdateBannerIconOnMaterial
// 0x0018 (0x0018 - 0x0000)
struct BannerLibrary_C_UpdateBannerIconOnMaterial final
{
public:
	class UMaterialInstanceDynamic*               Material;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Icon;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BannerLibrary_C_UpdateBannerIconOnMaterial) == 0x000008, "Wrong alignment on BannerLibrary_C_UpdateBannerIconOnMaterial");
static_assert(sizeof(BannerLibrary_C_UpdateBannerIconOnMaterial) == 0x000018, "Wrong size on BannerLibrary_C_UpdateBannerIconOnMaterial");
static_assert(offsetof(BannerLibrary_C_UpdateBannerIconOnMaterial, Material) == 0x000000, "Member 'BannerLibrary_C_UpdateBannerIconOnMaterial::Material' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerIconOnMaterial, Icon) == 0x000008, "Member 'BannerLibrary_C_UpdateBannerIconOnMaterial::Icon' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerIconOnMaterial, __WorldContext) == 0x000010, "Member 'BannerLibrary_C_UpdateBannerIconOnMaterial::__WorldContext' has a wrong offset!");

// Function BannerLibrary.BannerLibrary_C.UpdateBannerMeshMaterial_New
// 0x00E0 (0x00E0 - 0x0000)
struct BannerLibrary_C_UpdateBannerMeshMaterial_New final
{
public:
	class UMaterialInstanceDynamic*               Material_Instance_Dynamic;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseIconMask;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerState*                       InstigatorPlayerState;                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       CallFunc_GetUniqueID_ReturnValue;                  // 0x0038(0x0028)(HasGetValueTypeHash)
	struct FFortHomeBaseInfo                      CallFunc_GetHomeBaseInfoForPlayer_Result;          // 0x0060(0x0040)()
	class UTexture*                               Temp_object_Variable2;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_Get_Icon_Texture_and_Colors_Icon;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Icon_Texture_and_Colors_PrimaryColor; // 0x00B0(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Icon_Texture_and_Colors_Secondary_Color; // 0x00C0(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default;                             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BannerLibrary_C_UpdateBannerMeshMaterial_New) == 0x000008, "Wrong alignment on BannerLibrary_C_UpdateBannerMeshMaterial_New");
static_assert(sizeof(BannerLibrary_C_UpdateBannerMeshMaterial_New) == 0x0000E0, "Wrong size on BannerLibrary_C_UpdateBannerMeshMaterial_New");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterial_New, Material_Instance_Dynamic) == 0x000000, "Member 'BannerLibrary_C_UpdateBannerMeshMaterial_New::Material_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterial_New, UseIconMask) == 0x000008, "Member 'BannerLibrary_C_UpdateBannerMeshMaterial_New::UseIconMask' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterial_New, InstigatorPlayerState) == 0x000010, "Member 'BannerLibrary_C_UpdateBannerMeshMaterial_New::InstigatorPlayerState' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterial_New, __WorldContext) == 0x000018, "Member 'BannerLibrary_C_UpdateBannerMeshMaterial_New::__WorldContext' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterial_New, Temp_object_Variable) == 0x000020, "Member 'BannerLibrary_C_UpdateBannerMeshMaterial_New::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterial_New, CallFunc_GetContext_ReturnValue) == 0x000028, "Member 'BannerLibrary_C_UpdateBannerMeshMaterial_New::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterial_New, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BannerLibrary_C_UpdateBannerMeshMaterial_New::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterial_New, CallFunc_GetUniqueID_ReturnValue) == 0x000038, "Member 'BannerLibrary_C_UpdateBannerMeshMaterial_New::CallFunc_GetUniqueID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterial_New, CallFunc_GetHomeBaseInfoForPlayer_Result) == 0x000060, "Member 'BannerLibrary_C_UpdateBannerMeshMaterial_New::CallFunc_GetHomeBaseInfoForPlayer_Result' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterial_New, Temp_object_Variable2) == 0x0000A0, "Member 'BannerLibrary_C_UpdateBannerMeshMaterial_New::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterial_New, CallFunc_Get_Icon_Texture_and_Colors_Icon) == 0x0000A8, "Member 'BannerLibrary_C_UpdateBannerMeshMaterial_New::CallFunc_Get_Icon_Texture_and_Colors_Icon' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterial_New, CallFunc_Get_Icon_Texture_and_Colors_PrimaryColor) == 0x0000B0, "Member 'BannerLibrary_C_UpdateBannerMeshMaterial_New::CallFunc_Get_Icon_Texture_and_Colors_PrimaryColor' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterial_New, CallFunc_Get_Icon_Texture_and_Colors_Secondary_Color) == 0x0000C0, "Member 'BannerLibrary_C_UpdateBannerMeshMaterial_New::CallFunc_Get_Icon_Texture_and_Colors_Secondary_Color' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterial_New, Temp_bool_Variable) == 0x0000D0, "Member 'BannerLibrary_C_UpdateBannerMeshMaterial_New::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterial_New, K2Node_Select_Default) == 0x0000D8, "Member 'BannerLibrary_C_UpdateBannerMeshMaterial_New::K2Node_Select_Default' has a wrong offset!");

// Function BannerLibrary.BannerLibrary_C.UpdateMaterial_New
// 0x00A8 (0x00A8 - 0x0000)
struct BannerLibrary_C_UpdateMaterial_New final
{
public:
	class UImage*                                 Banner_material;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortHomeBaseInfo                      Image_info;                                        // 0x0008(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Is_Icon;                                           // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_Get_Icon_Texture_and_Colors_Icon;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Icon_Texture_and_Colors_PrimaryColor; // 0x0070(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Icon_Texture_and_Colors_Secondary_Color; // 0x0080(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable2;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BannerLibrary_C_UpdateMaterial_New) == 0x000008, "Wrong alignment on BannerLibrary_C_UpdateMaterial_New");
static_assert(sizeof(BannerLibrary_C_UpdateMaterial_New) == 0x0000A8, "Wrong size on BannerLibrary_C_UpdateMaterial_New");
static_assert(offsetof(BannerLibrary_C_UpdateMaterial_New, Banner_material) == 0x000000, "Member 'BannerLibrary_C_UpdateMaterial_New::Banner_material' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateMaterial_New, Image_info) == 0x000008, "Member 'BannerLibrary_C_UpdateMaterial_New::Image_info' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateMaterial_New, Is_Icon) == 0x000048, "Member 'BannerLibrary_C_UpdateMaterial_New::Is_Icon' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateMaterial_New, __WorldContext) == 0x000050, "Member 'BannerLibrary_C_UpdateMaterial_New::__WorldContext' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateMaterial_New, Temp_object_Variable) == 0x000058, "Member 'BannerLibrary_C_UpdateMaterial_New::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateMaterial_New, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000060, "Member 'BannerLibrary_C_UpdateMaterial_New::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateMaterial_New, CallFunc_Get_Icon_Texture_and_Colors_Icon) == 0x000068, "Member 'BannerLibrary_C_UpdateMaterial_New::CallFunc_Get_Icon_Texture_and_Colors_Icon' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateMaterial_New, CallFunc_Get_Icon_Texture_and_Colors_PrimaryColor) == 0x000070, "Member 'BannerLibrary_C_UpdateMaterial_New::CallFunc_Get_Icon_Texture_and_Colors_PrimaryColor' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateMaterial_New, CallFunc_Get_Icon_Texture_and_Colors_Secondary_Color) == 0x000080, "Member 'BannerLibrary_C_UpdateMaterial_New::CallFunc_Get_Icon_Texture_and_Colors_Secondary_Color' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateMaterial_New, Temp_object_Variable2) == 0x000090, "Member 'BannerLibrary_C_UpdateMaterial_New::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateMaterial_New, Temp_bool_Variable) == 0x000098, "Member 'BannerLibrary_C_UpdateMaterial_New::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateMaterial_New, K2Node_Select_Default) == 0x0000A0, "Member 'BannerLibrary_C_UpdateMaterial_New::K2Node_Select_Default' has a wrong offset!");

// Function BannerLibrary.BannerLibrary_C.Get Icon Texture and Colors
// 0x0088 (0x0088 - 0x0000)
struct BannerLibrary_C_Get_Icon_Texture_and_Colors final
{
public:
	class FString                                 BannerIconId;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 BannerColorId;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Icon;                                              // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           PrimaryColor;                                      // 0x0030(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Secondary_Color;                                   // 0x0040(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue2;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_LoadAndGetBannerLargeIconFromRowName_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetBannerColorPrimaryColorFromRowName_ReturnValue; // 0x0068(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetBannerColorSecondaryColorFromRowName_ReturnValue; // 0x0078(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BannerLibrary_C_Get_Icon_Texture_and_Colors) == 0x000008, "Wrong alignment on BannerLibrary_C_Get_Icon_Texture_and_Colors");
static_assert(sizeof(BannerLibrary_C_Get_Icon_Texture_and_Colors) == 0x000088, "Wrong size on BannerLibrary_C_Get_Icon_Texture_and_Colors");
static_assert(offsetof(BannerLibrary_C_Get_Icon_Texture_and_Colors, BannerIconId) == 0x000000, "Member 'BannerLibrary_C_Get_Icon_Texture_and_Colors::BannerIconId' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_Get_Icon_Texture_and_Colors, BannerColorId) == 0x000010, "Member 'BannerLibrary_C_Get_Icon_Texture_and_Colors::BannerColorId' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_Get_Icon_Texture_and_Colors, __WorldContext) == 0x000020, "Member 'BannerLibrary_C_Get_Icon_Texture_and_Colors::__WorldContext' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_Get_Icon_Texture_and_Colors, Icon) == 0x000028, "Member 'BannerLibrary_C_Get_Icon_Texture_and_Colors::Icon' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_Get_Icon_Texture_and_Colors, PrimaryColor) == 0x000030, "Member 'BannerLibrary_C_Get_Icon_Texture_and_Colors::PrimaryColor' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_Get_Icon_Texture_and_Colors, Secondary_Color) == 0x000040, "Member 'BannerLibrary_C_Get_Icon_Texture_and_Colors::Secondary_Color' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_Get_Icon_Texture_and_Colors, CallFunc_Conv_StringToName_ReturnValue) == 0x000050, "Member 'BannerLibrary_C_Get_Icon_Texture_and_Colors::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_Get_Icon_Texture_and_Colors, CallFunc_Conv_StringToName_ReturnValue2) == 0x000058, "Member 'BannerLibrary_C_Get_Icon_Texture_and_Colors::CallFunc_Conv_StringToName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_Get_Icon_Texture_and_Colors, CallFunc_LoadAndGetBannerLargeIconFromRowName_ReturnValue) == 0x000060, "Member 'BannerLibrary_C_Get_Icon_Texture_and_Colors::CallFunc_LoadAndGetBannerLargeIconFromRowName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_Get_Icon_Texture_and_Colors, CallFunc_GetBannerColorPrimaryColorFromRowName_ReturnValue) == 0x000068, "Member 'BannerLibrary_C_Get_Icon_Texture_and_Colors::CallFunc_GetBannerColorPrimaryColorFromRowName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_Get_Icon_Texture_and_Colors, CallFunc_GetBannerColorSecondaryColorFromRowName_ReturnValue) == 0x000078, "Member 'BannerLibrary_C_Get_Icon_Texture_and_Colors::CallFunc_GetBannerColorSecondaryColorFromRowName_ReturnValue' has a wrong offset!");

// Function BannerLibrary.BannerLibrary_C.UpdateBannerMeshMaterialForUniqueId_New
// 0x00D8 (0x00D8 - 0x0000)
struct BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New final
{
public:
	class UMaterialInstanceDynamic*               Material_Instance_Dynamic;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseIconMask;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       UniqueId;                                          // 0x0010(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortHomeBaseInfo                      CallFunc_GetHomeBaseInfoForPlayer_Result;          // 0x0058(0x0040)()
	class UTexture2D*                             CallFunc_Get_Icon_Texture_and_Colors_Icon;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Icon_Texture_and_Colors_PrimaryColor; // 0x00A0(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Icon_Texture_and_Colors_Secondary_Color; // 0x00B0(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable2;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default;                             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New) == 0x000008, "Wrong alignment on BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New");
static_assert(sizeof(BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New) == 0x0000D8, "Wrong size on BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New, Material_Instance_Dynamic) == 0x000000, "Member 'BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New::Material_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New, UseIconMask) == 0x000008, "Member 'BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New::UseIconMask' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New, UniqueId) == 0x000010, "Member 'BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New::UniqueId' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New, __WorldContext) == 0x000038, "Member 'BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New::__WorldContext' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New, Temp_object_Variable) == 0x000040, "Member 'BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New, CallFunc_GetContext_ReturnValue) == 0x000048, "Member 'BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New, CallFunc_GetHomeBaseInfoForPlayer_Result) == 0x000058, "Member 'BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New::CallFunc_GetHomeBaseInfoForPlayer_Result' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New, CallFunc_Get_Icon_Texture_and_Colors_Icon) == 0x000098, "Member 'BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New::CallFunc_Get_Icon_Texture_and_Colors_Icon' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New, CallFunc_Get_Icon_Texture_and_Colors_PrimaryColor) == 0x0000A0, "Member 'BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New::CallFunc_Get_Icon_Texture_and_Colors_PrimaryColor' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New, CallFunc_Get_Icon_Texture_and_Colors_Secondary_Color) == 0x0000B0, "Member 'BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New::CallFunc_Get_Icon_Texture_and_Colors_Secondary_Color' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New, Temp_object_Variable2) == 0x0000C0, "Member 'BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New, Temp_bool_Variable) == 0x0000C8, "Member 'BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New, K2Node_Select_Default) == 0x0000D0, "Member 'BannerLibrary_C_UpdateBannerMeshMaterialForUniqueId_New::K2Node_Select_Default' has a wrong offset!");

}

