#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Car_Copper

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Car_Copper.Car_Copper_C
// 0x01D8 (0x0F40 - 0x0D68)
class ACar_Copper_C final : public ABuildingProp
{
public:
	uint8                                         Pad_D68[0x8];                                      // 0x0D68(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D70(0x0008)(Transient, DuplicateTransient)
	float                                         Timeline_2_SirenLightMultiplier_0FF34BB7440D69B151AEB98B69DAACB9; // 0x0D78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_2__Direction_0FF34BB7440D69B151AEB98B69DAACB9; // 0x0D7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D7D[0x3];                                      // 0x0D7D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_2;                                        // 0x0D80(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BounceCar_Vertical_Bounce_Component_05733C554001D77C015F47B548F45A12; // 0x0D88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            BounceCar__Direction_05733C554001D77C015F47B548F45A12; // 0x0D8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8D[0x3];                                      // 0x0D8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BounceCar;                                         // 0x0D90(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_AlarmLightMultiplier_0249B75D481A6B889F74E6BC52A3E21B; // 0x0D98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_0249B75D481A6B889F74E6BC52A3E21B; // 0x0D9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9D[0x3];                                      // 0x0D9D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0DA0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverallAlarmCycleFinished;                         // 0x0DA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA9[0x3];                                      // 0x0DA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           InitialEmissiveMultiplier;                         // 0x0DAC(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InitialEmissiveMultiplier2;                        // 0x0DBC(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AlarmLightCounter;                                 // 0x0DCC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SoundIsRetriggerable;                              // 0x0DD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CurrentFlashAnimationCycleFinished;                // 0x0DD1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD2[0x2];                                      // 0x0DD2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumberOfTimesTheLightsFlashWhenHit;                // 0x0DD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SirenLightEmissiveMultiplier;                      // 0x0DD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SirenLightOn;                                      // 0x0DDC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DDD[0x3];                                      // 0x0DDD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Emissive_Multiplier_2;                             // 0x0DE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Emissive_Multiplier;                               // 0x0DE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Minus_HitAlarm;                              // 0x0DF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Emissive_2;                                    // 0x0DF8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DF9[0x7];                                      // 0x0DF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound_Minus_Jump_on_Car;                           // 0x0E00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SuspensionMovementAmount;                          // 0x0E08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ParticleEffectHas_NOT_AlreadyBeenTriggered;        // 0x0E0C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E0D[0x3];                                      // 0x0E0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               EngineSteamParticleEffect;                         // 0x0E10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Minus_Hit_AutoBody;                          // 0x0E18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanMakeJumpingNoiseAgain;                          // 0x0E20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CarAlarmIsCurrentlyMakingNoise;                    // 0x0E21(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CarAlarmEnabled;                                   // 0x0E22(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RandomlyDisableSomeCarAlarms;                      // 0x0E23(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         PercentageChanceOfCarAlarmsBeingDisabled;          // 0x0E24(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   HLight1;                                           // 0x0E28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HLight1SocketLocation;                             // 0x0E30(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HLight2SocketLocation;                             // 0x0E3C(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       AnimatingMIDArray;                                 // 0x0E48(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UAudioComponent*                        AudibleAlarmSound;                                 // 0x0E58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseCarBounce;                                      // 0x0E60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          UseCarAlarm;                                       // 0x0E61(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E62[0x2];                                      // 0x0E62(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Headlight_Emissive_Brightness;                     // 0x0E64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCarAlarmEnabledInitialized;                      // 0x0E68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugWind;                                         // 0x0E69(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E6A[0x6];                                      // 0x0E6A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             OriginalMaterials;                                 // 0x0E70(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UMaterialInterface*>             IntenseWindMaterialsForPreview;                    // 0x0E80(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               Debug_TempMaterial;                                // 0x0E90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Debug_Wind_Intensity;                              // 0x0E98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9C[0x4];                                      // 0x0E9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   Wind_Intensity_Debug_Mesh;                         // 0x0EA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanDropOilDecal;                                   // 0x0EA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA9[0x3];                                      // 0x0EA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Wind_Yaw_Rotation;                                 // 0x0EAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Taillight1;                                        // 0x0EB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Taillight2;                                        // 0x0EB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TailLightBrightness;                               // 0x0EC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TailLightsExist;                                   // 0x0EC4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HeadLightsExist;                                   // 0x0EC5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EC6[0x2];                                      // 0x0EC6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    HLight2;                                           // 0x0EC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeadLightLightBrightness;                          // 0x0ED0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TLight1SocketLocation;                             // 0x0ED4(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TLight2SocketLocation;                             // 0x0EE0(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Bounce_Offset;                                     // 0x0EEC(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Hlight2_Minus_impact_bounce_light_location;        // 0x0EF8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Tlight2_Minus_impact_bounce_light_location;        // 0x0F04(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Car_Currently_Bouncing_From_Jump;                  // 0x0F10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F11[0x3];                                      // 0x0F11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Hlight1_Minus_impact_bounce_light_location;        // 0x0F14(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Tlight1_Minus_impact_bounce_light_location;        // 0x0F20(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Randomly_start_with_some_cars_lights_on;           // 0x0F2C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2D[0x3];                                      // 0x0F2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Percentage_chance_of_lights_being_left_off;        // 0x0F30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Final_Random_Light_Intensity_Variance;             // 0x0F34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          This_Car_s_Lights_Have_Been_Randomly_Enabled;      // 0x0F38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TurnHeadLightsOn;                                  // 0x0F39(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_Car_Copper(int32 EntryPoint);
	void Player_jump_based_bounce_();
	void Hit_Bounce_Finished();
	void OnBounceAnimationUpdate(const struct FFortBounceData& Data);
	void FireOffCarAlarm();
	void OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void TriggerLowHealthParticleEffect();
	void FadeSirenLight();
	void StartSirenLight();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void Timeline_2__FireOffNoise__EventFunc();
	void Timeline_2__UpdateFunc();
	void Timeline_2__FinishedFunc();
	void BounceCar__UpdateFunc();
	void BounceCar__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void UserConstructionScript();
	void StopCarAlarmFromPlaying();
	void Setcanmakebouncingnoisetrue();
	float SetCarAlarmEnabledBasedOnLocation(const struct FVector& Location, bool* NewParam);
	float MaterialEditorSine(float Look_up_value, float Period);
	void Set_Light_Brightness(float ZeroMinus1_Intensity, bool Include_Second_Emissive_Channel);
	void Randomize_the_target_brightness_levels();
	void Toggle_light_visibility(bool bNewVisibility);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Car_Copper_C">();
	}
	static class ACar_Copper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACar_Copper_C>();
	}
};
static_assert(alignof(ACar_Copper_C) == 0x000008, "Wrong alignment on ACar_Copper_C");
static_assert(sizeof(ACar_Copper_C) == 0x000F40, "Wrong size on ACar_Copper_C");
static_assert(offsetof(ACar_Copper_C, UberGraphFrame) == 0x000D70, "Member 'ACar_Copper_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Timeline_2_SirenLightMultiplier_0FF34BB7440D69B151AEB98B69DAACB9) == 0x000D78, "Member 'ACar_Copper_C::Timeline_2_SirenLightMultiplier_0FF34BB7440D69B151AEB98B69DAACB9' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Timeline_2__Direction_0FF34BB7440D69B151AEB98B69DAACB9) == 0x000D7C, "Member 'ACar_Copper_C::Timeline_2__Direction_0FF34BB7440D69B151AEB98B69DAACB9' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Timeline_2) == 0x000D80, "Member 'ACar_Copper_C::Timeline_2' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, BounceCar_Vertical_Bounce_Component_05733C554001D77C015F47B548F45A12) == 0x000D88, "Member 'ACar_Copper_C::BounceCar_Vertical_Bounce_Component_05733C554001D77C015F47B548F45A12' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, BounceCar__Direction_05733C554001D77C015F47B548F45A12) == 0x000D8C, "Member 'ACar_Copper_C::BounceCar__Direction_05733C554001D77C015F47B548F45A12' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, BounceCar) == 0x000D90, "Member 'ACar_Copper_C::BounceCar' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Timeline_0_AlarmLightMultiplier_0249B75D481A6B889F74E6BC52A3E21B) == 0x000D98, "Member 'ACar_Copper_C::Timeline_0_AlarmLightMultiplier_0249B75D481A6B889F74E6BC52A3E21B' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Timeline_0__Direction_0249B75D481A6B889F74E6BC52A3E21B) == 0x000D9C, "Member 'ACar_Copper_C::Timeline_0__Direction_0249B75D481A6B889F74E6BC52A3E21B' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Timeline_0) == 0x000DA0, "Member 'ACar_Copper_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, OverallAlarmCycleFinished) == 0x000DA8, "Member 'ACar_Copper_C::OverallAlarmCycleFinished' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, InitialEmissiveMultiplier) == 0x000DAC, "Member 'ACar_Copper_C::InitialEmissiveMultiplier' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, InitialEmissiveMultiplier2) == 0x000DBC, "Member 'ACar_Copper_C::InitialEmissiveMultiplier2' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, AlarmLightCounter) == 0x000DCC, "Member 'ACar_Copper_C::AlarmLightCounter' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, SoundIsRetriggerable) == 0x000DD0, "Member 'ACar_Copper_C::SoundIsRetriggerable' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, CurrentFlashAnimationCycleFinished) == 0x000DD1, "Member 'ACar_Copper_C::CurrentFlashAnimationCycleFinished' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, NumberOfTimesTheLightsFlashWhenHit) == 0x000DD4, "Member 'ACar_Copper_C::NumberOfTimesTheLightsFlashWhenHit' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, SirenLightEmissiveMultiplier) == 0x000DD8, "Member 'ACar_Copper_C::SirenLightEmissiveMultiplier' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, SirenLightOn) == 0x000DDC, "Member 'ACar_Copper_C::SirenLightOn' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Emissive_Multiplier_2) == 0x000DE0, "Member 'ACar_Copper_C::Emissive_Multiplier_2' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Emissive_Multiplier) == 0x000DE8, "Member 'ACar_Copper_C::Emissive_Multiplier' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Sound_Minus_HitAlarm) == 0x000DF0, "Member 'ACar_Copper_C::Sound_Minus_HitAlarm' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Use_Emissive_2) == 0x000DF8, "Member 'ACar_Copper_C::Use_Emissive_2' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Sound_Minus_Jump_on_Car) == 0x000E00, "Member 'ACar_Copper_C::Sound_Minus_Jump_on_Car' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, SuspensionMovementAmount) == 0x000E08, "Member 'ACar_Copper_C::SuspensionMovementAmount' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, ParticleEffectHas_NOT_AlreadyBeenTriggered) == 0x000E0C, "Member 'ACar_Copper_C::ParticleEffectHas_NOT_AlreadyBeenTriggered' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, EngineSteamParticleEffect) == 0x000E10, "Member 'ACar_Copper_C::EngineSteamParticleEffect' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Sound_Minus_Hit_AutoBody) == 0x000E18, "Member 'ACar_Copper_C::Sound_Minus_Hit_AutoBody' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, CanMakeJumpingNoiseAgain) == 0x000E20, "Member 'ACar_Copper_C::CanMakeJumpingNoiseAgain' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, CarAlarmIsCurrentlyMakingNoise) == 0x000E21, "Member 'ACar_Copper_C::CarAlarmIsCurrentlyMakingNoise' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, CarAlarmEnabled) == 0x000E22, "Member 'ACar_Copper_C::CarAlarmEnabled' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, RandomlyDisableSomeCarAlarms) == 0x000E23, "Member 'ACar_Copper_C::RandomlyDisableSomeCarAlarms' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, PercentageChanceOfCarAlarmsBeingDisabled) == 0x000E24, "Member 'ACar_Copper_C::PercentageChanceOfCarAlarmsBeingDisabled' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, HLight1) == 0x000E28, "Member 'ACar_Copper_C::HLight1' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, HLight1SocketLocation) == 0x000E30, "Member 'ACar_Copper_C::HLight1SocketLocation' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, HLight2SocketLocation) == 0x000E3C, "Member 'ACar_Copper_C::HLight2SocketLocation' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, AnimatingMIDArray) == 0x000E48, "Member 'ACar_Copper_C::AnimatingMIDArray' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, AudibleAlarmSound) == 0x000E58, "Member 'ACar_Copper_C::AudibleAlarmSound' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, UseCarBounce) == 0x000E60, "Member 'ACar_Copper_C::UseCarBounce' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, UseCarAlarm) == 0x000E61, "Member 'ACar_Copper_C::UseCarAlarm' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Headlight_Emissive_Brightness) == 0x000E64, "Member 'ACar_Copper_C::Headlight_Emissive_Brightness' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, IsCarAlarmEnabledInitialized) == 0x000E68, "Member 'ACar_Copper_C::IsCarAlarmEnabledInitialized' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, DebugWind) == 0x000E69, "Member 'ACar_Copper_C::DebugWind' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, OriginalMaterials) == 0x000E70, "Member 'ACar_Copper_C::OriginalMaterials' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, IntenseWindMaterialsForPreview) == 0x000E80, "Member 'ACar_Copper_C::IntenseWindMaterialsForPreview' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Debug_TempMaterial) == 0x000E90, "Member 'ACar_Copper_C::Debug_TempMaterial' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Debug_Wind_Intensity) == 0x000E98, "Member 'ACar_Copper_C::Debug_Wind_Intensity' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Wind_Intensity_Debug_Mesh) == 0x000EA0, "Member 'ACar_Copper_C::Wind_Intensity_Debug_Mesh' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, CanDropOilDecal) == 0x000EA8, "Member 'ACar_Copper_C::CanDropOilDecal' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Wind_Yaw_Rotation) == 0x000EAC, "Member 'ACar_Copper_C::Wind_Yaw_Rotation' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Taillight1) == 0x000EB0, "Member 'ACar_Copper_C::Taillight1' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Taillight2) == 0x000EB8, "Member 'ACar_Copper_C::Taillight2' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, TailLightBrightness) == 0x000EC0, "Member 'ACar_Copper_C::TailLightBrightness' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, TailLightsExist) == 0x000EC4, "Member 'ACar_Copper_C::TailLightsExist' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, HeadLightsExist) == 0x000EC5, "Member 'ACar_Copper_C::HeadLightsExist' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, HLight2) == 0x000EC8, "Member 'ACar_Copper_C::HLight2' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, HeadLightLightBrightness) == 0x000ED0, "Member 'ACar_Copper_C::HeadLightLightBrightness' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, TLight1SocketLocation) == 0x000ED4, "Member 'ACar_Copper_C::TLight1SocketLocation' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, TLight2SocketLocation) == 0x000EE0, "Member 'ACar_Copper_C::TLight2SocketLocation' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Bounce_Offset) == 0x000EEC, "Member 'ACar_Copper_C::Bounce_Offset' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Hlight2_Minus_impact_bounce_light_location) == 0x000EF8, "Member 'ACar_Copper_C::Hlight2_Minus_impact_bounce_light_location' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Tlight2_Minus_impact_bounce_light_location) == 0x000F04, "Member 'ACar_Copper_C::Tlight2_Minus_impact_bounce_light_location' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Car_Currently_Bouncing_From_Jump) == 0x000F10, "Member 'ACar_Copper_C::Car_Currently_Bouncing_From_Jump' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Hlight1_Minus_impact_bounce_light_location) == 0x000F14, "Member 'ACar_Copper_C::Hlight1_Minus_impact_bounce_light_location' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Tlight1_Minus_impact_bounce_light_location) == 0x000F20, "Member 'ACar_Copper_C::Tlight1_Minus_impact_bounce_light_location' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Randomly_start_with_some_cars_lights_on) == 0x000F2C, "Member 'ACar_Copper_C::Randomly_start_with_some_cars_lights_on' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Percentage_chance_of_lights_being_left_off) == 0x000F30, "Member 'ACar_Copper_C::Percentage_chance_of_lights_being_left_off' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, Final_Random_Light_Intensity_Variance) == 0x000F34, "Member 'ACar_Copper_C::Final_Random_Light_Intensity_Variance' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, This_Car_s_Lights_Have_Been_Randomly_Enabled) == 0x000F38, "Member 'ACar_Copper_C::This_Car_s_Lights_Have_Been_Randomly_Enabled' has a wrong offset!");
static_assert(offsetof(ACar_Copper_C, TurnHeadLightsOn) == 0x000F39, "Member 'ACar_Copper_C::TurnHeadLightsOn' has a wrong offset!");

}

