#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EarnedBadgeTile

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function EarnedBadgeTile.EarnedBadgeTile_C.ExecuteUbergraph_EarnedBadgeTile
// 0x0040 (0x0040 - 0x0000)
struct EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0008(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0020(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile) == 0x000008, "Wrong alignment on EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile");
static_assert(sizeof(EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile) == 0x000040, "Wrong size on EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile");
static_assert(offsetof(EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile, EntryPoint) == 0x000000, "Member 'EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile::EntryPoint' has a wrong offset!");
static_assert(offsetof(EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile, Temp_byte_Variable) == 0x000004, "Member 'EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile, K2Node_Event_IsDesignTime) == 0x000005, "Member 'EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile, Temp_byte_Variable2) == 0x000006, "Member 'EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile, CallFunc_GetDisplayName_ReturnValue) == 0x000008, "Member 'EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile, CallFunc_TextToUpper_ReturnValue) == 0x000020, "Member 'EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile, Temp_bool_Variable) == 0x000039, "Member 'EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile, K2Node_Select_Default) == 0x00003A, "Member 'EarnedBadgeTile_C_ExecuteUbergraph_EarnedBadgeTile::K2Node_Select_Default' has a wrong offset!");

// Function EarnedBadgeTile.EarnedBadgeTile_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct EarnedBadgeTile_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EarnedBadgeTile_C_PreConstruct) == 0x000001, "Wrong alignment on EarnedBadgeTile_C_PreConstruct");
static_assert(sizeof(EarnedBadgeTile_C_PreConstruct) == 0x000001, "Wrong size on EarnedBadgeTile_C_PreConstruct");
static_assert(offsetof(EarnedBadgeTile_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'EarnedBadgeTile_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

