#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EliminatedOverlay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass EliminatedOverlay.EliminatedOverlay_C
// 0x00D0 (0x02D8 - 0x0208)
class UEliminatedOverlay_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0208(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       EliminatedToSpectating;                            // 0x0210(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       EliminatedByIntro;                                 // 0x0218(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             EliminatedByText;                                  // 0x0220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PlaceText;                                         // 0x0228(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         PlayerNameBox;                                     // 0x0230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPlayerRankEmblem_C*                    PlayerRankEmblem;                                  // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SpectatorName;                                     // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         WinnerBox;                                         // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       WinnerPlayerName;                                  // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         YouPlacedBox;                                      // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             YouPlacedText;                                     // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FFortPlayerDeathReport                 DeathReport;                                       // 0x0268(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Place;                                             // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWaitingForTeamEliminationForPlacement;           // 0x02BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BD[0x3];                                      // 0x02BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TargetState;                                       // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentState;                                      // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpectatorChanged;                                  // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SpectatingIntroPlayed;                             // 0x02D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_EliminatedOverlay(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnPawnDied(struct FFortPlayerDeathReport& Param_DeathReport);
	void UpdatePlace();
	void UpdateViewTarget();
	void HideExtraStuffForSpectating();
	void Winner_Announced(const class FString& InString);
	void UpdateYouPlacedBoxVisibility();
	void OnKillFeedUpdated();
	void AnySquadMembersStillAlive(class AFortPlayerControllerAthena* Player, bool* AnyAlive);
	void ProcessDeathReport(struct FFortPlayerDeathReport& FortPlayerDeathReport, class AFortPawn** KillerPawn, bool* DidPlayerKillThemselves, class FText* KillerName);
	void SetBannerForKiller(struct FFortPlayerDeathReport& FortPlayerDeathReport);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EliminatedOverlay_C">();
	}
	static class UEliminatedOverlay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEliminatedOverlay_C>();
	}
};
static_assert(alignof(UEliminatedOverlay_C) == 0x000008, "Wrong alignment on UEliminatedOverlay_C");
static_assert(sizeof(UEliminatedOverlay_C) == 0x0002D8, "Wrong size on UEliminatedOverlay_C");
static_assert(offsetof(UEliminatedOverlay_C, UberGraphFrame) == 0x000208, "Member 'UEliminatedOverlay_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UEliminatedOverlay_C, EliminatedToSpectating) == 0x000210, "Member 'UEliminatedOverlay_C::EliminatedToSpectating' has a wrong offset!");
static_assert(offsetof(UEliminatedOverlay_C, EliminatedByIntro) == 0x000218, "Member 'UEliminatedOverlay_C::EliminatedByIntro' has a wrong offset!");
static_assert(offsetof(UEliminatedOverlay_C, EliminatedByText) == 0x000220, "Member 'UEliminatedOverlay_C::EliminatedByText' has a wrong offset!");
static_assert(offsetof(UEliminatedOverlay_C, PlaceText) == 0x000228, "Member 'UEliminatedOverlay_C::PlaceText' has a wrong offset!");
static_assert(offsetof(UEliminatedOverlay_C, PlayerNameBox) == 0x000230, "Member 'UEliminatedOverlay_C::PlayerNameBox' has a wrong offset!");
static_assert(offsetof(UEliminatedOverlay_C, PlayerRankEmblem) == 0x000238, "Member 'UEliminatedOverlay_C::PlayerRankEmblem' has a wrong offset!");
static_assert(offsetof(UEliminatedOverlay_C, SpectatorName) == 0x000240, "Member 'UEliminatedOverlay_C::SpectatorName' has a wrong offset!");
static_assert(offsetof(UEliminatedOverlay_C, WinnerBox) == 0x000248, "Member 'UEliminatedOverlay_C::WinnerBox' has a wrong offset!");
static_assert(offsetof(UEliminatedOverlay_C, WinnerPlayerName) == 0x000250, "Member 'UEliminatedOverlay_C::WinnerPlayerName' has a wrong offset!");
static_assert(offsetof(UEliminatedOverlay_C, YouPlacedBox) == 0x000258, "Member 'UEliminatedOverlay_C::YouPlacedBox' has a wrong offset!");
static_assert(offsetof(UEliminatedOverlay_C, YouPlacedText) == 0x000260, "Member 'UEliminatedOverlay_C::YouPlacedText' has a wrong offset!");
static_assert(offsetof(UEliminatedOverlay_C, DeathReport) == 0x000268, "Member 'UEliminatedOverlay_C::DeathReport' has a wrong offset!");
static_assert(offsetof(UEliminatedOverlay_C, Place) == 0x0002B8, "Member 'UEliminatedOverlay_C::Place' has a wrong offset!");
static_assert(offsetof(UEliminatedOverlay_C, IsWaitingForTeamEliminationForPlacement) == 0x0002BC, "Member 'UEliminatedOverlay_C::IsWaitingForTeamEliminationForPlacement' has a wrong offset!");
static_assert(offsetof(UEliminatedOverlay_C, TargetState) == 0x0002C0, "Member 'UEliminatedOverlay_C::TargetState' has a wrong offset!");
static_assert(offsetof(UEliminatedOverlay_C, CurrentState) == 0x0002C8, "Member 'UEliminatedOverlay_C::CurrentState' has a wrong offset!");
static_assert(offsetof(UEliminatedOverlay_C, SpectatorChanged) == 0x0002D0, "Member 'UEliminatedOverlay_C::SpectatorChanged' has a wrong offset!");
static_assert(offsetof(UEliminatedOverlay_C, SpectatingIntroPlayed) == 0x0002D1, "Member 'UEliminatedOverlay_C::SpectatingIntroPlayed' has a wrong offset!");

}

