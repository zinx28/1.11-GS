#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EquippedItemWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function EquippedItemWidget.EquippedItemWidget_C.ExecuteUbergraph_EquippedItemWidget
// 0x00A8 (0x00A8 - 0x0000)
struct EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            K2Node_CustomEvent_NewWeapon;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            K2Node_CustomEvent_PrevWeapon;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeaponRanged*                      K2Node_DynamicCast_AsFort_Weapon_Ranged;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeap_BuildingToolBase*             K2Node_DynamicCast_AsFort_Weap_Building_Tool_Base; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldDisplayAmmoCounter_ReturnValue;     // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_LocalCount;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_LocalRemaining;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon)> K2Node_CreateDelegate_OutputDelegate3;             // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x0080(0x0010)(ZeroConstructor, NoDestructor)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue2;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 LocalCount, int32 LocalRemaining)> K2Node_CreateDelegate_OutputDelegate5;             // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget) == 0x000008, "Wrong alignment on EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget");
static_assert(sizeof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget) == 0x0000A8, "Wrong size on EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget");
static_assert(offsetof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget, EntryPoint) == 0x000000, "Member 'EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget, K2Node_CustomEvent_NewWeapon) == 0x000010, "Member 'EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget::K2Node_CustomEvent_NewWeapon' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget, K2Node_CustomEvent_PrevWeapon) == 0x000018, "Member 'EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget::K2Node_CustomEvent_PrevWeapon' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget, CallFunc_IsValid_ReturnValue2) == 0x000021, "Member 'EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget, K2Node_DynamicCast_AsFort_Weapon_Ranged) == 0x000028, "Member 'EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget::K2Node_DynamicCast_AsFort_Weapon_Ranged' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget, K2Node_DynamicCast_AsFort_Weap_Building_Tool_Base) == 0x000038, "Member 'EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget::K2Node_DynamicCast_AsFort_Weap_Building_Tool_Base' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget, K2Node_DynamicCast_bSuccess2) == 0x000040, "Member 'EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget, CallFunc_ShouldDisplayAmmoCounter_ReturnValue) == 0x000041, "Member 'EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget::CallFunc_ShouldDisplayAmmoCounter_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000048, "Member 'EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget, K2Node_CreateDelegate_OutputDelegate2) == 0x000058, "Member 'EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget, K2Node_CustomEvent_LocalCount) == 0x000068, "Member 'EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget::K2Node_CustomEvent_LocalCount' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget, K2Node_CustomEvent_LocalRemaining) == 0x00006C, "Member 'EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget::K2Node_CustomEvent_LocalRemaining' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget, K2Node_CreateDelegate_OutputDelegate3) == 0x000070, "Member 'EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget, K2Node_CreateDelegate_OutputDelegate4) == 0x000080, "Member 'EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget, CallFunc_GetContext_ReturnValue2) == 0x000090, "Member 'EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget, K2Node_CreateDelegate_OutputDelegate5) == 0x000098, "Member 'EquippedItemWidget_C_ExecuteUbergraph_EquippedItemWidget::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");

// Function EquippedItemWidget.EquippedItemWidget_C.OnLocalAmmoChanged
// 0x0008 (0x0008 - 0x0000)
struct EquippedItemWidget_C_OnLocalAmmoChanged final
{
public:
	int32                                         LocalCount;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalRemaining;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EquippedItemWidget_C_OnLocalAmmoChanged) == 0x000004, "Wrong alignment on EquippedItemWidget_C_OnLocalAmmoChanged");
static_assert(sizeof(EquippedItemWidget_C_OnLocalAmmoChanged) == 0x000008, "Wrong size on EquippedItemWidget_C_OnLocalAmmoChanged");
static_assert(offsetof(EquippedItemWidget_C_OnLocalAmmoChanged, LocalCount) == 0x000000, "Member 'EquippedItemWidget_C_OnLocalAmmoChanged::LocalCount' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_OnLocalAmmoChanged, LocalRemaining) == 0x000004, "Member 'EquippedItemWidget_C_OnLocalAmmoChanged::LocalRemaining' has a wrong offset!");

// Function EquippedItemWidget.EquippedItemWidget_C.OnWeaponEquipped
// 0x0010 (0x0010 - 0x0000)
struct EquippedItemWidget_C_OnWeaponEquipped final
{
public:
	class AFortWeapon*                            NewWeapon;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            PrevWeapon;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EquippedItemWidget_C_OnWeaponEquipped) == 0x000008, "Wrong alignment on EquippedItemWidget_C_OnWeaponEquipped");
static_assert(sizeof(EquippedItemWidget_C_OnWeaponEquipped) == 0x000010, "Wrong size on EquippedItemWidget_C_OnWeaponEquipped");
static_assert(offsetof(EquippedItemWidget_C_OnWeaponEquipped, NewWeapon) == 0x000000, "Member 'EquippedItemWidget_C_OnWeaponEquipped::NewWeapon' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_OnWeaponEquipped, PrevWeapon) == 0x000008, "Member 'EquippedItemWidget_C_OnWeaponEquipped::PrevWeapon' has a wrong offset!");

// Function EquippedItemWidget.EquippedItemWidget_C.FullUpdateAmmoDisplay
// 0x0018 (0x0018 - 0x0000)
struct EquippedItemWidget_C_FullUpdateAmmoDisplay final
{
public:
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            CallFunc_GetEquippedWeapon_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLocalMagazineAmmoCount_ReturnValue;    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLocalRemainingAmmo_ReturnValue;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EquippedItemWidget_C_FullUpdateAmmoDisplay) == 0x000008, "Wrong alignment on EquippedItemWidget_C_FullUpdateAmmoDisplay");
static_assert(sizeof(EquippedItemWidget_C_FullUpdateAmmoDisplay) == 0x000018, "Wrong size on EquippedItemWidget_C_FullUpdateAmmoDisplay");
static_assert(offsetof(EquippedItemWidget_C_FullUpdateAmmoDisplay, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'EquippedItemWidget_C_FullUpdateAmmoDisplay::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_FullUpdateAmmoDisplay, CallFunc_GetEquippedWeapon_ReturnValue) == 0x000008, "Member 'EquippedItemWidget_C_FullUpdateAmmoDisplay::CallFunc_GetEquippedWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_FullUpdateAmmoDisplay, CallFunc_GetLocalMagazineAmmoCount_ReturnValue) == 0x000010, "Member 'EquippedItemWidget_C_FullUpdateAmmoDisplay::CallFunc_GetLocalMagazineAmmoCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_FullUpdateAmmoDisplay, CallFunc_GetLocalRemainingAmmo_ReturnValue) == 0x000014, "Member 'EquippedItemWidget_C_FullUpdateAmmoDisplay::CallFunc_GetLocalRemainingAmmo_ReturnValue' has a wrong offset!");

// Function EquippedItemWidget.EquippedItemWidget_C.FullUpdateResourceDisplay
// 0x00A8 (0x00A8 - 0x0000)
struct EquippedItemWidget_C_FullUpdateResourceDisplay final
{
public:
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortResourceItemDefinition*            CallFunc_GetCurrentResourceItemDefinition_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentResourceCount_ReturnValue;      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue; // 0x0018(0x0078)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0090(0x0018)()
};
static_assert(alignof(EquippedItemWidget_C_FullUpdateResourceDisplay) == 0x000008, "Wrong alignment on EquippedItemWidget_C_FullUpdateResourceDisplay");
static_assert(sizeof(EquippedItemWidget_C_FullUpdateResourceDisplay) == 0x0000A8, "Wrong size on EquippedItemWidget_C_FullUpdateResourceDisplay");
static_assert(offsetof(EquippedItemWidget_C_FullUpdateResourceDisplay, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'EquippedItemWidget_C_FullUpdateResourceDisplay::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_FullUpdateResourceDisplay, CallFunc_GetCurrentResourceItemDefinition_ReturnValue) == 0x000008, "Member 'EquippedItemWidget_C_FullUpdateResourceDisplay::CallFunc_GetCurrentResourceItemDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_FullUpdateResourceDisplay, CallFunc_GetCurrentResourceCount_ReturnValue) == 0x000010, "Member 'EquippedItemWidget_C_FullUpdateResourceDisplay::CallFunc_GetCurrentResourceCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_FullUpdateResourceDisplay, CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue) == 0x000018, "Member 'EquippedItemWidget_C_FullUpdateResourceDisplay::CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_FullUpdateResourceDisplay, CallFunc_Conv_IntToText_ReturnValue) == 0x000090, "Member 'EquippedItemWidget_C_FullUpdateResourceDisplay::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function EquippedItemWidget.EquippedItemWidget_C.UpdateVisibility
// 0x0030 (0x0030 - 0x0000)
struct EquippedItemWidget_C_UpdateVisibility final
{
public:
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            CallFunc_GetEquippedWeapon_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeaponRanged*                      K2Node_DynamicCast_AsFort_Weapon_Ranged;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeap_BuildingToolBase*             K2Node_DynamicCast_AsFort_Weap_Building_Tool_Base; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldDisplayAmmoCounter_ReturnValue;     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EquippedItemWidget_C_UpdateVisibility) == 0x000008, "Wrong alignment on EquippedItemWidget_C_UpdateVisibility");
static_assert(sizeof(EquippedItemWidget_C_UpdateVisibility) == 0x000030, "Wrong size on EquippedItemWidget_C_UpdateVisibility");
static_assert(offsetof(EquippedItemWidget_C_UpdateVisibility, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'EquippedItemWidget_C_UpdateVisibility::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateVisibility, CallFunc_GetEquippedWeapon_ReturnValue) == 0x000008, "Member 'EquippedItemWidget_C_UpdateVisibility::CallFunc_GetEquippedWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateVisibility, K2Node_DynamicCast_AsFort_Weapon_Ranged) == 0x000010, "Member 'EquippedItemWidget_C_UpdateVisibility::K2Node_DynamicCast_AsFort_Weapon_Ranged' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateVisibility, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'EquippedItemWidget_C_UpdateVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateVisibility, K2Node_DynamicCast_AsFort_Weap_Building_Tool_Base) == 0x000020, "Member 'EquippedItemWidget_C_UpdateVisibility::K2Node_DynamicCast_AsFort_Weap_Building_Tool_Base' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateVisibility, K2Node_DynamicCast_bSuccess2) == 0x000028, "Member 'EquippedItemWidget_C_UpdateVisibility::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateVisibility, CallFunc_ShouldDisplayAmmoCounter_ReturnValue) == 0x000029, "Member 'EquippedItemWidget_C_UpdateVisibility::CallFunc_ShouldDisplayAmmoCounter_ReturnValue' has a wrong offset!");

// Function EquippedItemWidget.EquippedItemWidget_C.UpdateWidgetColor
// 0x00B8 (0x00B8 - 0x0000)
struct EquippedItemWidget_C_UpdateWidgetColor final
{
public:
	bool                                          HasAmmo;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable3;                               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0008(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0020(0x0028)()
	struct FLinearColor                           CallFunc_Get_Debuff_Color_Color;                   // 0x0048(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select2_Default;                            // 0x0058(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor2;                     // 0x0068(0x0028)()
	struct FSlateColor                            K2Node_Select3_Default;                            // 0x0090(0x0028)()
};
static_assert(alignof(EquippedItemWidget_C_UpdateWidgetColor) == 0x000008, "Wrong alignment on EquippedItemWidget_C_UpdateWidgetColor");
static_assert(sizeof(EquippedItemWidget_C_UpdateWidgetColor) == 0x0000B8, "Wrong size on EquippedItemWidget_C_UpdateWidgetColor");
static_assert(offsetof(EquippedItemWidget_C_UpdateWidgetColor, HasAmmo) == 0x000000, "Member 'EquippedItemWidget_C_UpdateWidgetColor::HasAmmo' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateWidgetColor, Temp_byte_Variable) == 0x000001, "Member 'EquippedItemWidget_C_UpdateWidgetColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateWidgetColor, Temp_bool_Variable) == 0x000002, "Member 'EquippedItemWidget_C_UpdateWidgetColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateWidgetColor, Temp_bool_Variable2) == 0x000003, "Member 'EquippedItemWidget_C_UpdateWidgetColor::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateWidgetColor, Temp_byte_Variable2) == 0x000004, "Member 'EquippedItemWidget_C_UpdateWidgetColor::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateWidgetColor, Temp_bool_Variable3) == 0x000005, "Member 'EquippedItemWidget_C_UpdateWidgetColor::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateWidgetColor, K2Node_MakeStruct_LinearColor) == 0x000008, "Member 'EquippedItemWidget_C_UpdateWidgetColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateWidgetColor, K2Node_Select_Default) == 0x000018, "Member 'EquippedItemWidget_C_UpdateWidgetColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateWidgetColor, K2Node_MakeStruct_SlateColor) == 0x000020, "Member 'EquippedItemWidget_C_UpdateWidgetColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateWidgetColor, CallFunc_Get_Debuff_Color_Color) == 0x000048, "Member 'EquippedItemWidget_C_UpdateWidgetColor::CallFunc_Get_Debuff_Color_Color' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateWidgetColor, K2Node_Select2_Default) == 0x000058, "Member 'EquippedItemWidget_C_UpdateWidgetColor::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateWidgetColor, K2Node_MakeStruct_SlateColor2) == 0x000068, "Member 'EquippedItemWidget_C_UpdateWidgetColor::K2Node_MakeStruct_SlateColor2' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateWidgetColor, K2Node_Select3_Default) == 0x000090, "Member 'EquippedItemWidget_C_UpdateWidgetColor::K2Node_Select3_Default' has a wrong offset!");

// Function EquippedItemWidget.EquippedItemWidget_C.UpdateAmmoCapacity
// 0x0028 (0x0028 - 0x0000)
struct EquippedItemWidget_C_UpdateAmmoCapacity final
{
public:
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWorldItemDefinition*               CallFunc_GetCurrentAmmoItemDefinition_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            CallFunc_GetEquippedWeapon_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortAmmoItemDefinition*                K2Node_DynamicCast_AsFort_Ammo_Item_Definition;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBulletsPerClip_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EquippedItemWidget_C_UpdateAmmoCapacity) == 0x000008, "Wrong alignment on EquippedItemWidget_C_UpdateAmmoCapacity");
static_assert(sizeof(EquippedItemWidget_C_UpdateAmmoCapacity) == 0x000028, "Wrong size on EquippedItemWidget_C_UpdateAmmoCapacity");
static_assert(offsetof(EquippedItemWidget_C_UpdateAmmoCapacity, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'EquippedItemWidget_C_UpdateAmmoCapacity::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateAmmoCapacity, CallFunc_GetCurrentAmmoItemDefinition_ReturnValue) == 0x000008, "Member 'EquippedItemWidget_C_UpdateAmmoCapacity::CallFunc_GetCurrentAmmoItemDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateAmmoCapacity, CallFunc_GetEquippedWeapon_ReturnValue) == 0x000010, "Member 'EquippedItemWidget_C_UpdateAmmoCapacity::CallFunc_GetEquippedWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateAmmoCapacity, K2Node_DynamicCast_AsFort_Ammo_Item_Definition) == 0x000018, "Member 'EquippedItemWidget_C_UpdateAmmoCapacity::K2Node_DynamicCast_AsFort_Ammo_Item_Definition' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateAmmoCapacity, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'EquippedItemWidget_C_UpdateAmmoCapacity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateAmmoCapacity, CallFunc_GetBulletsPerClip_ReturnValue) == 0x000024, "Member 'EquippedItemWidget_C_UpdateAmmoCapacity::CallFunc_GetBulletsPerClip_ReturnValue' has a wrong offset!");

// Function EquippedItemWidget.EquippedItemWidget_C.UpdateCurrentAmmo
// 0x0148 (0x0148 - 0x0000)
struct EquippedItemWidget_C_UpdateCurrentAmmo final
{
public:
	int32                                         LocalCount;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalRemaining;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue2;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue3;              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue4;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetCurrentAmmoText_CurrentAmmoText;       // 0x0038(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue5;              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue6;              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWorldItemDefinition*               CallFunc_GetCurrentAmmoItemDefinition_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0068(0x0018)()
	class UFortAmmoItemDefinition*                K2Node_DynamicCast_AsFort_Ammo_Item_Definition;    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue; // 0x0090(0x0078)()
	bool                                          Temp_bool_Variable;                                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0110(0x0018)()
	float                                         Temp_float_Variable2;                              // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable3;                              // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select2_Default;                            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable4;                              // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable3;                               // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select3_Default;                            // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EquippedItemWidget_C_UpdateCurrentAmmo) == 0x000008, "Wrong alignment on EquippedItemWidget_C_UpdateCurrentAmmo");
static_assert(sizeof(EquippedItemWidget_C_UpdateCurrentAmmo) == 0x000148, "Wrong size on EquippedItemWidget_C_UpdateCurrentAmmo");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, LocalCount) == 0x000000, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::LocalCount' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, LocalRemaining) == 0x000004, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::LocalRemaining' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, CallFunc_Max_ReturnValue) == 0x000010, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, CallFunc_Greater_IntInt_ReturnValue2) == 0x000014, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::CallFunc_Greater_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, CallFunc_Greater_IntInt_ReturnValue3) == 0x000015, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::CallFunc_Greater_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, CallFunc_Greater_IntInt_ReturnValue4) == 0x000030, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::CallFunc_Greater_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, CallFunc_GetCurrentAmmoText_CurrentAmmoText) == 0x000038, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::CallFunc_GetCurrentAmmoText_CurrentAmmoText' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, CallFunc_BooleanAND_ReturnValue) == 0x000050, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, CallFunc_Greater_IntInt_ReturnValue5) == 0x000051, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::CallFunc_Greater_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, CallFunc_Greater_IntInt_ReturnValue6) == 0x000052, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::CallFunc_Greater_IntInt_ReturnValue6' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, CallFunc_GetContext_ReturnValue) == 0x000058, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, CallFunc_GetCurrentAmmoItemDefinition_ReturnValue) == 0x000060, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::CallFunc_GetCurrentAmmoItemDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, Temp_text_Variable) == 0x000068, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, K2Node_DynamicCast_AsFort_Ammo_Item_Definition) == 0x000080, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::K2Node_DynamicCast_AsFort_Ammo_Item_Definition' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue) == 0x000090, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, Temp_bool_Variable) == 0x000108, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, Temp_float_Variable) == 0x00010C, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, K2Node_Select_Default) == 0x000110, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, Temp_float_Variable2) == 0x000128, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, Temp_bool_Variable2) == 0x00012C, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, Temp_float_Variable3) == 0x000130, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::Temp_float_Variable3' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, K2Node_Select2_Default) == 0x000134, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, Temp_float_Variable4) == 0x000138, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::Temp_float_Variable4' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, Temp_bool_Variable3) == 0x00013C, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateCurrentAmmo, K2Node_Select3_Default) == 0x000140, "Member 'EquippedItemWidget_C_UpdateCurrentAmmo::K2Node_Select3_Default' has a wrong offset!");

// Function EquippedItemWidget.EquippedItemWidget_C.UpdateResourceCount
// 0x0028 (0x0028 - 0x0000)
struct EquippedItemWidget_C_UpdateResourceCount final
{
public:
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentResourceCount_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
};
static_assert(alignof(EquippedItemWidget_C_UpdateResourceCount) == 0x000008, "Wrong alignment on EquippedItemWidget_C_UpdateResourceCount");
static_assert(sizeof(EquippedItemWidget_C_UpdateResourceCount) == 0x000028, "Wrong size on EquippedItemWidget_C_UpdateResourceCount");
static_assert(offsetof(EquippedItemWidget_C_UpdateResourceCount, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'EquippedItemWidget_C_UpdateResourceCount::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateResourceCount, CallFunc_GetCurrentResourceCount_ReturnValue) == 0x000008, "Member 'EquippedItemWidget_C_UpdateResourceCount::CallFunc_GetCurrentResourceCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_UpdateResourceCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'EquippedItemWidget_C_UpdateResourceCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function EquippedItemWidget.EquippedItemWidget_C.GetCurrentAmmoText
// 0x0118 (0x0118 - 0x0000)
struct EquippedItemWidget_C_GetCurrentAmmoText final
{
public:
	int32                                         CurrentAmmoCount;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CurrentAmmoText;                                   // 0x0008(0x0018)(Parm, OutParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ZeroConstructor, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x0078(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array2;                           // 0x00D0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue2;                      // 0x00E0(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00F8(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EquippedItemWidget_C_GetCurrentAmmoText) == 0x000008, "Wrong alignment on EquippedItemWidget_C_GetCurrentAmmoText");
static_assert(sizeof(EquippedItemWidget_C_GetCurrentAmmoText) == 0x000118, "Wrong size on EquippedItemWidget_C_GetCurrentAmmoText");
static_assert(offsetof(EquippedItemWidget_C_GetCurrentAmmoText, CurrentAmmoCount) == 0x000000, "Member 'EquippedItemWidget_C_GetCurrentAmmoText::CurrentAmmoCount' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_GetCurrentAmmoText, CurrentAmmoText) == 0x000008, "Member 'EquippedItemWidget_C_GetCurrentAmmoText::CurrentAmmoText' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_GetCurrentAmmoText, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'EquippedItemWidget_C_GetCurrentAmmoText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_GetCurrentAmmoText, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'EquippedItemWidget_C_GetCurrentAmmoText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_GetCurrentAmmoText, K2Node_MakeArray_Array) == 0x000068, "Member 'EquippedItemWidget_C_GetCurrentAmmoText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_GetCurrentAmmoText, K2Node_MakeStruct_FormatArgumentData2) == 0x000078, "Member 'EquippedItemWidget_C_GetCurrentAmmoText::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_GetCurrentAmmoText, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'EquippedItemWidget_C_GetCurrentAmmoText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_GetCurrentAmmoText, K2Node_MakeArray_Array2) == 0x0000D0, "Member 'EquippedItemWidget_C_GetCurrentAmmoText::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_GetCurrentAmmoText, CallFunc_Format_ReturnValue2) == 0x0000E0, "Member 'EquippedItemWidget_C_GetCurrentAmmoText::CallFunc_Format_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_GetCurrentAmmoText, CallFunc_Conv_IntToText_ReturnValue) == 0x0000F8, "Member 'EquippedItemWidget_C_GetCurrentAmmoText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemWidget_C_GetCurrentAmmoText, CallFunc_Less_IntInt_ReturnValue2) == 0x000110, "Member 'EquippedItemWidget_C_GetCurrentAmmoText::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");

}

