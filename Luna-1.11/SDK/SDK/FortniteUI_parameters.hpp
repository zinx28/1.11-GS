#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortniteUI

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "Slate_structs.hpp"
#include "Party_structs.hpp"
#include "CommonUI_structs.hpp"


namespace SDK::Params
{

// Function FortniteUI.FortSquadSlotsView.CreateAndAddSquadSlotButton
// 0x0078 (0x0078 - 0x0000)
struct FortSquadSlotsView_CreateAndAddSquadSlotButton final
{
public:
	int32                                         SquadSlotIndex;                                    // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHomebaseSquadSlot                     SquadSlotDefinition;                               // 0x0008(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UWidget*                                OutSquadSlotButtonHost;                            // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortSquadSlotSelectorButton*           ReturnValue;                                       // 0x0070(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotsView_CreateAndAddSquadSlotButton) == 0x000008, "Wrong alignment on FortSquadSlotsView_CreateAndAddSquadSlotButton");
static_assert(sizeof(FortSquadSlotsView_CreateAndAddSquadSlotButton) == 0x000078, "Wrong size on FortSquadSlotsView_CreateAndAddSquadSlotButton");
static_assert(offsetof(FortSquadSlotsView_CreateAndAddSquadSlotButton, SquadSlotIndex) == 0x000000, "Member 'FortSquadSlotsView_CreateAndAddSquadSlotButton::SquadSlotIndex' has a wrong offset!");
static_assert(offsetof(FortSquadSlotsView_CreateAndAddSquadSlotButton, SquadSlotDefinition) == 0x000008, "Member 'FortSquadSlotsView_CreateAndAddSquadSlotButton::SquadSlotDefinition' has a wrong offset!");
static_assert(offsetof(FortSquadSlotsView_CreateAndAddSquadSlotButton, OutSquadSlotButtonHost) == 0x000068, "Member 'FortSquadSlotsView_CreateAndAddSquadSlotButton::OutSquadSlotButtonHost' has a wrong offset!");
static_assert(offsetof(FortSquadSlotsView_CreateAndAddSquadSlotButton, ReturnValue) == 0x000070, "Member 'FortSquadSlotsView_CreateAndAddSquadSlotButton::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadSlotsView.HandleButtonClicked
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotsView_HandleButtonClicked final
{
public:
	class UCommonButton*                          CommittedButton;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ButtonIndex;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadSlotsView_HandleButtonClicked) == 0x000008, "Wrong alignment on FortSquadSlotsView_HandleButtonClicked");
static_assert(sizeof(FortSquadSlotsView_HandleButtonClicked) == 0x000010, "Wrong size on FortSquadSlotsView_HandleButtonClicked");
static_assert(offsetof(FortSquadSlotsView_HandleButtonClicked, CommittedButton) == 0x000000, "Member 'FortSquadSlotsView_HandleButtonClicked::CommittedButton' has a wrong offset!");
static_assert(offsetof(FortSquadSlotsView_HandleButtonClicked, ButtonIndex) == 0x000008, "Member 'FortSquadSlotsView_HandleButtonClicked::ButtonIndex' has a wrong offset!");

// Function FortniteUI.FortSquadSlotsView.HandleHoveredButtonChanged
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotsView_HandleHoveredButtonChanged final
{
public:
	class UCommonButton*                          HoveredButton;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ButtonIndex;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadSlotsView_HandleHoveredButtonChanged) == 0x000008, "Wrong alignment on FortSquadSlotsView_HandleHoveredButtonChanged");
static_assert(sizeof(FortSquadSlotsView_HandleHoveredButtonChanged) == 0x000010, "Wrong size on FortSquadSlotsView_HandleHoveredButtonChanged");
static_assert(offsetof(FortSquadSlotsView_HandleHoveredButtonChanged, HoveredButton) == 0x000000, "Member 'FortSquadSlotsView_HandleHoveredButtonChanged::HoveredButton' has a wrong offset!");
static_assert(offsetof(FortSquadSlotsView_HandleHoveredButtonChanged, ButtonIndex) == 0x000008, "Member 'FortSquadSlotsView_HandleHoveredButtonChanged::ButtonIndex' has a wrong offset!");

// Function FortniteUI.FortSquadSlotsView.HandleSelectedButtonChanged
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotsView_HandleSelectedButtonChanged final
{
public:
	class UCommonButton*                          SelectedButton;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ButtonIndex;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadSlotsView_HandleSelectedButtonChanged) == 0x000008, "Wrong alignment on FortSquadSlotsView_HandleSelectedButtonChanged");
static_assert(sizeof(FortSquadSlotsView_HandleSelectedButtonChanged) == 0x000010, "Wrong size on FortSquadSlotsView_HandleSelectedButtonChanged");
static_assert(offsetof(FortSquadSlotsView_HandleSelectedButtonChanged, SelectedButton) == 0x000000, "Member 'FortSquadSlotsView_HandleSelectedButtonChanged::SelectedButton' has a wrong offset!");
static_assert(offsetof(FortSquadSlotsView_HandleSelectedButtonChanged, ButtonIndex) == 0x000008, "Member 'FortSquadSlotsView_HandleSelectedButtonChanged::ButtonIndex' has a wrong offset!");

// DelegateFunction FortniteUI.FortSquadSlotsView.OnDifferentSquadSlotSelected__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct FortSquadSlotsView_OnDifferentSquadSlotSelected__DelegateSignature final
{
public:
	int32                                         SquadSlotIndex;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotsView_OnDifferentSquadSlotSelected__DelegateSignature) == 0x000004, "Wrong alignment on FortSquadSlotsView_OnDifferentSquadSlotSelected__DelegateSignature");
static_assert(sizeof(FortSquadSlotsView_OnDifferentSquadSlotSelected__DelegateSignature) == 0x000004, "Wrong size on FortSquadSlotsView_OnDifferentSquadSlotSelected__DelegateSignature");
static_assert(offsetof(FortSquadSlotsView_OnDifferentSquadSlotSelected__DelegateSignature, SquadSlotIndex) == 0x000000, "Member 'FortSquadSlotsView_OnDifferentSquadSlotSelected__DelegateSignature::SquadSlotIndex' has a wrong offset!");

// DelegateFunction FortniteUI.FortSquadSlotsView.OnRequestOpenSquadSlot__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct FortSquadSlotsView_OnRequestOpenSquadSlot__DelegateSignature final
{
public:
	int32                                         SquadSlotIndex;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotsView_OnRequestOpenSquadSlot__DelegateSignature) == 0x000004, "Wrong alignment on FortSquadSlotsView_OnRequestOpenSquadSlot__DelegateSignature");
static_assert(sizeof(FortSquadSlotsView_OnRequestOpenSquadSlot__DelegateSignature) == 0x000004, "Wrong size on FortSquadSlotsView_OnRequestOpenSquadSlot__DelegateSignature");
static_assert(offsetof(FortSquadSlotsView_OnRequestOpenSquadSlot__DelegateSignature, SquadSlotIndex) == 0x000000, "Member 'FortSquadSlotsView_OnRequestOpenSquadSlot__DelegateSignature::SquadSlotIndex' has a wrong offset!");

// Function FortniteUI.FortSquadSlotsView.SelectSlot
// 0x0004 (0x0004 - 0x0000)
struct FortSquadSlotsView_SelectSlot final
{
public:
	int32                                         SquadSlotIndex;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotsView_SelectSlot) == 0x000004, "Wrong alignment on FortSquadSlotsView_SelectSlot");
static_assert(sizeof(FortSquadSlotsView_SelectSlot) == 0x000004, "Wrong size on FortSquadSlotsView_SelectSlot");
static_assert(offsetof(FortSquadSlotsView_SelectSlot, SquadSlotIndex) == 0x000000, "Member 'FortSquadSlotsView_SelectSlot::SquadSlotIndex' has a wrong offset!");

// Function FortniteUI.FortSquadSlotsView.SetIdOfSquadToManageBP
// 0x0008 (0x0008 - 0x0000)
struct FortSquadSlotsView_SetIdOfSquadToManageBP final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotsView_SetIdOfSquadToManageBP) == 0x000004, "Wrong alignment on FortSquadSlotsView_SetIdOfSquadToManageBP");
static_assert(sizeof(FortSquadSlotsView_SetIdOfSquadToManageBP) == 0x000008, "Wrong size on FortSquadSlotsView_SetIdOfSquadToManageBP");
static_assert(offsetof(FortSquadSlotsView_SetIdOfSquadToManageBP, SquadId) == 0x000000, "Member 'FortSquadSlotsView_SetIdOfSquadToManageBP::SquadId' has a wrong offset!");

// Function FortniteUI.FortSquadSlotsView.SetInPreviewMode
// 0x0001 (0x0001 - 0x0000)
struct FortSquadSlotsView_SetInPreviewMode final
{
public:
	bool                                          bPreview;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotsView_SetInPreviewMode) == 0x000001, "Wrong alignment on FortSquadSlotsView_SetInPreviewMode");
static_assert(sizeof(FortSquadSlotsView_SetInPreviewMode) == 0x000001, "Wrong size on FortSquadSlotsView_SetInPreviewMode");
static_assert(offsetof(FortSquadSlotsView_SetInPreviewMode, bPreview) == 0x000000, "Member 'FortSquadSlotsView_SetInPreviewMode::bPreview' has a wrong offset!");

// Function FortniteUI.FortSquadSlotsView.SetIsSelectionLocked
// 0x0001 (0x0001 - 0x0000)
struct FortSquadSlotsView_SetIsSelectionLocked final
{
public:
	bool                                          ShouldSelectionBeLocked;                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotsView_SetIsSelectionLocked) == 0x000001, "Wrong alignment on FortSquadSlotsView_SetIsSelectionLocked");
static_assert(sizeof(FortSquadSlotsView_SetIsSelectionLocked) == 0x000001, "Wrong size on FortSquadSlotsView_SetIsSelectionLocked");
static_assert(offsetof(FortSquadSlotsView_SetIsSelectionLocked, ShouldSelectionBeLocked) == 0x000000, "Member 'FortSquadSlotsView_SetIsSelectionLocked::ShouldSelectionBeLocked' has a wrong offset!");

// Function FortniteUI.FortSquadSlotsView.GetIdOfSquadToManageBP
// 0x0008 (0x0008 - 0x0000)
struct FortSquadSlotsView_GetIdOfSquadToManageBP final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotsView_GetIdOfSquadToManageBP) == 0x000004, "Wrong alignment on FortSquadSlotsView_GetIdOfSquadToManageBP");
static_assert(sizeof(FortSquadSlotsView_GetIdOfSquadToManageBP) == 0x000008, "Wrong size on FortSquadSlotsView_GetIdOfSquadToManageBP");
static_assert(offsetof(FortSquadSlotsView_GetIdOfSquadToManageBP, ReturnValue) == 0x000000, "Member 'FortSquadSlotsView_GetIdOfSquadToManageBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadSlotsView.GetIndexOfSelectedSquadSlot
// 0x0004 (0x0004 - 0x0000)
struct FortSquadSlotsView_GetIndexOfSelectedSquadSlot final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotsView_GetIndexOfSelectedSquadSlot) == 0x000004, "Wrong alignment on FortSquadSlotsView_GetIndexOfSelectedSquadSlot");
static_assert(sizeof(FortSquadSlotsView_GetIndexOfSelectedSquadSlot) == 0x000004, "Wrong size on FortSquadSlotsView_GetIndexOfSelectedSquadSlot");
static_assert(offsetof(FortSquadSlotsView_GetIndexOfSelectedSquadSlot, ReturnValue) == 0x000000, "Member 'FortSquadSlotsView_GetIndexOfSelectedSquadSlot::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadSlotsView.TryGetStaticSquadDataBP
// 0x0090 (0x0090 - 0x0000)
struct FortSquadSlotsView_TryGetStaticSquadDataBP final
{
public:
	struct FHomebaseSquad                         OutSquadData;                                      // 0x0000(0x0088)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadSlotsView_TryGetStaticSquadDataBP) == 0x000008, "Wrong alignment on FortSquadSlotsView_TryGetStaticSquadDataBP");
static_assert(sizeof(FortSquadSlotsView_TryGetStaticSquadDataBP) == 0x000090, "Wrong size on FortSquadSlotsView_TryGetStaticSquadDataBP");
static_assert(offsetof(FortSquadSlotsView_TryGetStaticSquadDataBP, OutSquadData) == 0x000000, "Member 'FortSquadSlotsView_TryGetStaticSquadDataBP::OutSquadData' has a wrong offset!");
static_assert(offsetof(FortSquadSlotsView_TryGetStaticSquadDataBP, ReturnValue) == 0x000088, "Member 'FortSquadSlotsView_TryGetStaticSquadDataBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemPickerBase.CanItemBeComitted
// 0x0010 (0x0010 - 0x0000)
struct FortItemPickerBase_CanItemBeComitted final
{
public:
	const class UFortItem*                        ItemToCommit;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemPickerBase_CanItemBeComitted) == 0x000008, "Wrong alignment on FortItemPickerBase_CanItemBeComitted");
static_assert(sizeof(FortItemPickerBase_CanItemBeComitted) == 0x000010, "Wrong size on FortItemPickerBase_CanItemBeComitted");
static_assert(offsetof(FortItemPickerBase_CanItemBeComitted, ItemToCommit) == 0x000000, "Member 'FortItemPickerBase_CanItemBeComitted::ItemToCommit' has a wrong offset!");
static_assert(offsetof(FortItemPickerBase_CanItemBeComitted, ReturnValue) == 0x000008, "Member 'FortItemPickerBase_CanItemBeComitted::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemPickerBase.HandlePickerItemClicked
// 0x0008 (0x0008 - 0x0000)
struct FortItemPickerBase_HandlePickerItemClicked final
{
public:
	const class UObject*                          ObjectOfClickedTile;                               // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemPickerBase_HandlePickerItemClicked) == 0x000008, "Wrong alignment on FortItemPickerBase_HandlePickerItemClicked");
static_assert(sizeof(FortItemPickerBase_HandlePickerItemClicked) == 0x000008, "Wrong size on FortItemPickerBase_HandlePickerItemClicked");
static_assert(offsetof(FortItemPickerBase_HandlePickerItemClicked, ObjectOfClickedTile) == 0x000000, "Member 'FortItemPickerBase_HandlePickerItemClicked::ObjectOfClickedTile' has a wrong offset!");

// Function FortniteUI.FortItemPickerBase.HandlePickerItemDoubleClicked
// 0x0008 (0x0008 - 0x0000)
struct FortItemPickerBase_HandlePickerItemDoubleClicked final
{
public:
	const class UObject*                          ObjectOfClickedTile;                               // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemPickerBase_HandlePickerItemDoubleClicked) == 0x000008, "Wrong alignment on FortItemPickerBase_HandlePickerItemDoubleClicked");
static_assert(sizeof(FortItemPickerBase_HandlePickerItemDoubleClicked) == 0x000008, "Wrong size on FortItemPickerBase_HandlePickerItemDoubleClicked");
static_assert(offsetof(FortItemPickerBase_HandlePickerItemDoubleClicked, ObjectOfClickedTile) == 0x000000, "Member 'FortItemPickerBase_HandlePickerItemDoubleClicked::ObjectOfClickedTile' has a wrong offset!");

// Function FortniteUI.FortItemPickerBase.HandlePickerItemHovered
// 0x0008 (0x0008 - 0x0000)
struct FortItemPickerBase_HandlePickerItemHovered final
{
public:
	const class UObject*                          ObjectOfHoveredTile;                               // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemPickerBase_HandlePickerItemHovered) == 0x000008, "Wrong alignment on FortItemPickerBase_HandlePickerItemHovered");
static_assert(sizeof(FortItemPickerBase_HandlePickerItemHovered) == 0x000008, "Wrong size on FortItemPickerBase_HandlePickerItemHovered");
static_assert(offsetof(FortItemPickerBase_HandlePickerItemHovered, ObjectOfHoveredTile) == 0x000000, "Member 'FortItemPickerBase_HandlePickerItemHovered::ObjectOfHoveredTile' has a wrong offset!");

// Function FortniteUI.FortItemPickerBase.HandlePickerItemSelected
// 0x0010 (0x0010 - 0x0000)
struct FortItemPickerBase_HandlePickerItemSelected final
{
public:
	const class UObject*                          ObjectWhoseSelectionChanged;                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSelected;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemPickerBase_HandlePickerItemSelected) == 0x000008, "Wrong alignment on FortItemPickerBase_HandlePickerItemSelected");
static_assert(sizeof(FortItemPickerBase_HandlePickerItemSelected) == 0x000010, "Wrong size on FortItemPickerBase_HandlePickerItemSelected");
static_assert(offsetof(FortItemPickerBase_HandlePickerItemSelected, ObjectWhoseSelectionChanged) == 0x000000, "Member 'FortItemPickerBase_HandlePickerItemSelected::ObjectWhoseSelectionChanged' has a wrong offset!");
static_assert(offsetof(FortItemPickerBase_HandlePickerItemSelected, bIsSelected) == 0x000008, "Member 'FortItemPickerBase_HandlePickerItemSelected::bIsSelected' has a wrong offset!");

// Function FortniteUI.FortItemPickerBase.HandlePickerTileCreated
// 0x0008 (0x0008 - 0x0000)
struct FortItemPickerBase_HandlePickerTileCreated final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemPickerBase_HandlePickerTileCreated) == 0x000008, "Wrong alignment on FortItemPickerBase_HandlePickerTileCreated");
static_assert(sizeof(FortItemPickerBase_HandlePickerTileCreated) == 0x000008, "Wrong size on FortItemPickerBase_HandlePickerTileCreated");
static_assert(offsetof(FortItemPickerBase_HandlePickerTileCreated, Widget) == 0x000000, "Member 'FortItemPickerBase_HandlePickerTileCreated::Widget' has a wrong offset!");

// Function FortniteUI.FortItemPickerBase.HandlePickerTileDestroyed
// 0x0008 (0x0008 - 0x0000)
struct FortItemPickerBase_HandlePickerTileDestroyed final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemPickerBase_HandlePickerTileDestroyed) == 0x000008, "Wrong alignment on FortItemPickerBase_HandlePickerTileDestroyed");
static_assert(sizeof(FortItemPickerBase_HandlePickerTileDestroyed) == 0x000008, "Wrong size on FortItemPickerBase_HandlePickerTileDestroyed");
static_assert(offsetof(FortItemPickerBase_HandlePickerTileDestroyed, Widget) == 0x000000, "Member 'FortItemPickerBase_HandlePickerTileDestroyed::Widget' has a wrong offset!");

// DelegateFunction FortniteUI.FortItemPickerBase.OnItemSelectionEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortItemPickerBase_OnItemSelectionEvent__DelegateSignature final
{
public:
	class UFortItem*                              SelectedItem;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemPickerBase_OnItemSelectionEvent__DelegateSignature) == 0x000008, "Wrong alignment on FortItemPickerBase_OnItemSelectionEvent__DelegateSignature");
static_assert(sizeof(FortItemPickerBase_OnItemSelectionEvent__DelegateSignature) == 0x000008, "Wrong size on FortItemPickerBase_OnItemSelectionEvent__DelegateSignature");
static_assert(offsetof(FortItemPickerBase_OnItemSelectionEvent__DelegateSignature, SelectedItem) == 0x000000, "Member 'FortItemPickerBase_OnItemSelectionEvent__DelegateSignature::SelectedItem' has a wrong offset!");

// Function FortniteUI.FortItemPickerBase.SetSelectedIndex
// 0x0008 (0x0008 - 0x0000)
struct FortItemPickerBase_SetSelectedIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemPickerBase_SetSelectedIndex) == 0x000004, "Wrong alignment on FortItemPickerBase_SetSelectedIndex");
static_assert(sizeof(FortItemPickerBase_SetSelectedIndex) == 0x000008, "Wrong size on FortItemPickerBase_SetSelectedIndex");
static_assert(offsetof(FortItemPickerBase_SetSelectedIndex, Param_Index) == 0x000000, "Member 'FortItemPickerBase_SetSelectedIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(FortItemPickerBase_SetSelectedIndex, ReturnValue) == 0x000004, "Member 'FortItemPickerBase_SetSelectedIndex::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemPickerBase.SetSelectedItem
// 0x0008 (0x0008 - 0x0000)
struct FortItemPickerBase_SetSelectedItem final
{
public:
	const class UFortItem*                        ItemToSelect;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemPickerBase_SetSelectedItem) == 0x000008, "Wrong alignment on FortItemPickerBase_SetSelectedItem");
static_assert(sizeof(FortItemPickerBase_SetSelectedItem) == 0x000008, "Wrong size on FortItemPickerBase_SetSelectedItem");
static_assert(offsetof(FortItemPickerBase_SetSelectedItem, ItemToSelect) == 0x000000, "Member 'FortItemPickerBase_SetSelectedItem::ItemToSelect' has a wrong offset!");

// Function FortniteUI.FortItemPickerBase.TryCommitSelectedItem
// 0x0001 (0x0001 - 0x0000)
struct FortItemPickerBase_TryCommitSelectedItem final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemPickerBase_TryCommitSelectedItem) == 0x000001, "Wrong alignment on FortItemPickerBase_TryCommitSelectedItem");
static_assert(sizeof(FortItemPickerBase_TryCommitSelectedItem) == 0x000001, "Wrong size on FortItemPickerBase_TryCommitSelectedItem");
static_assert(offsetof(FortItemPickerBase_TryCommitSelectedItem, ReturnValue) == 0x000000, "Member 'FortItemPickerBase_TryCommitSelectedItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemPickerBase.GetIndexForItem
// 0x0010 (0x0010 - 0x0000)
struct FortItemPickerBase_GetIndexForItem final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemPickerBase_GetIndexForItem) == 0x000008, "Wrong alignment on FortItemPickerBase_GetIndexForItem");
static_assert(sizeof(FortItemPickerBase_GetIndexForItem) == 0x000010, "Wrong size on FortItemPickerBase_GetIndexForItem");
static_assert(offsetof(FortItemPickerBase_GetIndexForItem, Item) == 0x000000, "Member 'FortItemPickerBase_GetIndexForItem::Item' has a wrong offset!");
static_assert(offsetof(FortItemPickerBase_GetIndexForItem, ReturnValue) == 0x000008, "Member 'FortItemPickerBase_GetIndexForItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemPickerBase.GetSelectedItem
// 0x0008 (0x0008 - 0x0000)
struct FortItemPickerBase_GetSelectedItem final
{
public:
	class UFortItem*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemPickerBase_GetSelectedItem) == 0x000008, "Wrong alignment on FortItemPickerBase_GetSelectedItem");
static_assert(sizeof(FortItemPickerBase_GetSelectedItem) == 0x000008, "Wrong size on FortItemPickerBase_GetSelectedItem");
static_assert(offsetof(FortItemPickerBase_GetSelectedItem, ReturnValue) == 0x000000, "Member 'FortItemPickerBase_GetSelectedItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAsyncAction_ShowConfirmation.ShowConfirmationDialog
// 0x0080 (0x0080 - 0x0000)
struct FortAsyncAction_ShowConfirmation_ShowConfirmationDialog final
{
public:
	class UObject*                                InWorldContextObject;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Title;                                             // 0x0008(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FText                                   MESSAGE;                                           // 0x0020(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FText                                   ConfirmButtonText;                                 // 0x0038(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FText                                   DeclineButtonText;                                 // 0x0050(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UFortUserWidget*                        InAdditionalContent;                               // 0x0068(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InDisplayTime;                                     // 0x0070(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_ShowConfirmation*      ReturnValue;                                       // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAsyncAction_ShowConfirmation_ShowConfirmationDialog) == 0x000008, "Wrong alignment on FortAsyncAction_ShowConfirmation_ShowConfirmationDialog");
static_assert(sizeof(FortAsyncAction_ShowConfirmation_ShowConfirmationDialog) == 0x000080, "Wrong size on FortAsyncAction_ShowConfirmation_ShowConfirmationDialog");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_ShowConfirmationDialog, InWorldContextObject) == 0x000000, "Member 'FortAsyncAction_ShowConfirmation_ShowConfirmationDialog::InWorldContextObject' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_ShowConfirmationDialog, Title) == 0x000008, "Member 'FortAsyncAction_ShowConfirmation_ShowConfirmationDialog::Title' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_ShowConfirmationDialog, MESSAGE) == 0x000020, "Member 'FortAsyncAction_ShowConfirmation_ShowConfirmationDialog::MESSAGE' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_ShowConfirmationDialog, ConfirmButtonText) == 0x000038, "Member 'FortAsyncAction_ShowConfirmation_ShowConfirmationDialog::ConfirmButtonText' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_ShowConfirmationDialog, DeclineButtonText) == 0x000050, "Member 'FortAsyncAction_ShowConfirmation_ShowConfirmationDialog::DeclineButtonText' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_ShowConfirmationDialog, InAdditionalContent) == 0x000068, "Member 'FortAsyncAction_ShowConfirmation_ShowConfirmationDialog::InAdditionalContent' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_ShowConfirmationDialog, InDisplayTime) == 0x000070, "Member 'FortAsyncAction_ShowConfirmation_ShowConfirmationDialog::InDisplayTime' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_ShowConfirmationDialog, ReturnValue) == 0x000078, "Member 'FortAsyncAction_ShowConfirmation_ShowConfirmationDialog::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_NUI.OnEnterState
// 0x0001 (0x0001 - 0x0000)
struct FortUIStateWidget_NUI_OnEnterState final
{
public:
	EFortUIState                                  PreviousUIState;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_NUI_OnEnterState) == 0x000001, "Wrong alignment on FortUIStateWidget_NUI_OnEnterState");
static_assert(sizeof(FortUIStateWidget_NUI_OnEnterState) == 0x000001, "Wrong size on FortUIStateWidget_NUI_OnEnterState");
static_assert(offsetof(FortUIStateWidget_NUI_OnEnterState, PreviousUIState) == 0x000000, "Member 'FortUIStateWidget_NUI_OnEnterState::PreviousUIState' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_NUI.OnExitState
// 0x0001 (0x0001 - 0x0000)
struct FortUIStateWidget_NUI_OnExitState final
{
public:
	EFortUIState                                  NextUIState;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_NUI_OnExitState) == 0x000001, "Wrong alignment on FortUIStateWidget_NUI_OnExitState");
static_assert(sizeof(FortUIStateWidget_NUI_OnExitState) == 0x000001, "Wrong size on FortUIStateWidget_NUI_OnExitState");
static_assert(offsetof(FortUIStateWidget_NUI_OnExitState, NextUIState) == 0x000000, "Member 'FortUIStateWidget_NUI_OnExitState::NextUIState' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_NUI.OnFrontEndVisibilityUpdated
// 0x0003 (0x0003 - 0x0000)
struct FortUIStateWidget_NUI_OnFrontEndVisibilityUpdated final
{
public:
	bool                                          bHideHeader;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideFooter;                                       // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideChatWidget;                                   // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_NUI_OnFrontEndVisibilityUpdated) == 0x000001, "Wrong alignment on FortUIStateWidget_NUI_OnFrontEndVisibilityUpdated");
static_assert(sizeof(FortUIStateWidget_NUI_OnFrontEndVisibilityUpdated) == 0x000003, "Wrong size on FortUIStateWidget_NUI_OnFrontEndVisibilityUpdated");
static_assert(offsetof(FortUIStateWidget_NUI_OnFrontEndVisibilityUpdated, bHideHeader) == 0x000000, "Member 'FortUIStateWidget_NUI_OnFrontEndVisibilityUpdated::bHideHeader' has a wrong offset!");
static_assert(offsetof(FortUIStateWidget_NUI_OnFrontEndVisibilityUpdated, bHideFooter) == 0x000001, "Member 'FortUIStateWidget_NUI_OnFrontEndVisibilityUpdated::bHideFooter' has a wrong offset!");
static_assert(offsetof(FortUIStateWidget_NUI_OnFrontEndVisibilityUpdated, bHideChatWidget) == 0x000002, "Member 'FortUIStateWidget_NUI_OnFrontEndVisibilityUpdated::bHideChatWidget' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_NUI.PopContentWidget
// 0x0008 (0x0008 - 0x0000)
struct FortUIStateWidget_NUI_PopContentWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_NUI_PopContentWidget) == 0x000008, "Wrong alignment on FortUIStateWidget_NUI_PopContentWidget");
static_assert(sizeof(FortUIStateWidget_NUI_PopContentWidget) == 0x000008, "Wrong size on FortUIStateWidget_NUI_PopContentWidget");
static_assert(offsetof(FortUIStateWidget_NUI_PopContentWidget, ReturnValue) == 0x000000, "Member 'FortUIStateWidget_NUI_PopContentWidget::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_NUI.PopContentWidgetInternal
// 0x0010 (0x0010 - 0x0000)
struct FortUIStateWidget_NUI_PopContentWidgetInternal final
{
public:
	struct FContentPushState                      State;                                             // 0x0000(0x0003)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_NUI_PopContentWidgetInternal) == 0x000008, "Wrong alignment on FortUIStateWidget_NUI_PopContentWidgetInternal");
static_assert(sizeof(FortUIStateWidget_NUI_PopContentWidgetInternal) == 0x000010, "Wrong size on FortUIStateWidget_NUI_PopContentWidgetInternal");
static_assert(offsetof(FortUIStateWidget_NUI_PopContentWidgetInternal, State) == 0x000000, "Member 'FortUIStateWidget_NUI_PopContentWidgetInternal::State' has a wrong offset!");
static_assert(offsetof(FortUIStateWidget_NUI_PopContentWidgetInternal, ReturnValue) == 0x000008, "Member 'FortUIStateWidget_NUI_PopContentWidgetInternal::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_NUI.PushContentWidget
// 0x0008 (0x0008 - 0x0000)
struct FortUIStateWidget_NUI_PushContentWidget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_NUI_PushContentWidget) == 0x000008, "Wrong alignment on FortUIStateWidget_NUI_PushContentWidget");
static_assert(sizeof(FortUIStateWidget_NUI_PushContentWidget) == 0x000008, "Wrong size on FortUIStateWidget_NUI_PushContentWidget");
static_assert(offsetof(FortUIStateWidget_NUI_PushContentWidget, Widget) == 0x000000, "Member 'FortUIStateWidget_NUI_PushContentWidget::Widget' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_NUI.PushContentWidgetAdvanced
// 0x0010 (0x0010 - 0x0000)
struct FortUIStateWidget_NUI_PushContentWidgetAdvanced final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideHeader;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideFooter;                                       // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideChatWidget;                                   // 0x000A(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortUIStateWidget_NUI_PushContentWidgetAdvanced) == 0x000008, "Wrong alignment on FortUIStateWidget_NUI_PushContentWidgetAdvanced");
static_assert(sizeof(FortUIStateWidget_NUI_PushContentWidgetAdvanced) == 0x000010, "Wrong size on FortUIStateWidget_NUI_PushContentWidgetAdvanced");
static_assert(offsetof(FortUIStateWidget_NUI_PushContentWidgetAdvanced, Widget) == 0x000000, "Member 'FortUIStateWidget_NUI_PushContentWidgetAdvanced::Widget' has a wrong offset!");
static_assert(offsetof(FortUIStateWidget_NUI_PushContentWidgetAdvanced, bHideHeader) == 0x000008, "Member 'FortUIStateWidget_NUI_PushContentWidgetAdvanced::bHideHeader' has a wrong offset!");
static_assert(offsetof(FortUIStateWidget_NUI_PushContentWidgetAdvanced, bHideFooter) == 0x000009, "Member 'FortUIStateWidget_NUI_PushContentWidgetAdvanced::bHideFooter' has a wrong offset!");
static_assert(offsetof(FortUIStateWidget_NUI_PushContentWidgetAdvanced, bHideChatWidget) == 0x00000A, "Member 'FortUIStateWidget_NUI_PushContentWidgetAdvanced::bHideChatWidget' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_NUI.PushContentWidgetInternal
// 0x0010 (0x0010 - 0x0000)
struct FortUIStateWidget_NUI_PushContentWidgetInternal final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FContentPushState                      State;                                             // 0x0008(0x0003)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortUIStateWidget_NUI_PushContentWidgetInternal) == 0x000008, "Wrong alignment on FortUIStateWidget_NUI_PushContentWidgetInternal");
static_assert(sizeof(FortUIStateWidget_NUI_PushContentWidgetInternal) == 0x000010, "Wrong size on FortUIStateWidget_NUI_PushContentWidgetInternal");
static_assert(offsetof(FortUIStateWidget_NUI_PushContentWidgetInternal, Widget) == 0x000000, "Member 'FortUIStateWidget_NUI_PushContentWidgetInternal::Widget' has a wrong offset!");
static_assert(offsetof(FortUIStateWidget_NUI_PushContentWidgetInternal, State) == 0x000008, "Member 'FortUIStateWidget_NUI_PushContentWidgetInternal::State' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_NUI.SetFrontEndVisibility
// 0x0003 (0x0003 - 0x0000)
struct FortUIStateWidget_NUI_SetFrontEndVisibility final
{
public:
	bool                                          bHideHeader;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideFooter;                                       // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideChatWidget;                                   // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_NUI_SetFrontEndVisibility) == 0x000001, "Wrong alignment on FortUIStateWidget_NUI_SetFrontEndVisibility");
static_assert(sizeof(FortUIStateWidget_NUI_SetFrontEndVisibility) == 0x000003, "Wrong size on FortUIStateWidget_NUI_SetFrontEndVisibility");
static_assert(offsetof(FortUIStateWidget_NUI_SetFrontEndVisibility, bHideHeader) == 0x000000, "Member 'FortUIStateWidget_NUI_SetFrontEndVisibility::bHideHeader' has a wrong offset!");
static_assert(offsetof(FortUIStateWidget_NUI_SetFrontEndVisibility, bHideFooter) == 0x000001, "Member 'FortUIStateWidget_NUI_SetFrontEndVisibility::bHideFooter' has a wrong offset!");
static_assert(offsetof(FortUIStateWidget_NUI_SetFrontEndVisibility, bHideChatWidget) == 0x000002, "Member 'FortUIStateWidget_NUI_SetFrontEndVisibility::bHideChatWidget' has a wrong offset!");

// Function FortniteUI.AthenaAccountContext.GetBattleBookPurchaseLimit
// 0x0008 (0x0008 - 0x0000)
struct AthenaAccountContext_GetBattleBookPurchaseLimit final
{
public:
	int32                                         MaxNumLevelsPossibleToPurchase;                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BonusLevelsGranted;                                // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaAccountContext_GetBattleBookPurchaseLimit) == 0x000004, "Wrong alignment on AthenaAccountContext_GetBattleBookPurchaseLimit");
static_assert(sizeof(AthenaAccountContext_GetBattleBookPurchaseLimit) == 0x000008, "Wrong size on AthenaAccountContext_GetBattleBookPurchaseLimit");
static_assert(offsetof(AthenaAccountContext_GetBattleBookPurchaseLimit, MaxNumLevelsPossibleToPurchase) == 0x000000, "Member 'AthenaAccountContext_GetBattleBookPurchaseLimit::MaxNumLevelsPossibleToPurchase' has a wrong offset!");
static_assert(offsetof(AthenaAccountContext_GetBattleBookPurchaseLimit, BonusLevelsGranted) == 0x000004, "Member 'AthenaAccountContext_GetBattleBookPurchaseLimit::BonusLevelsGranted' has a wrong offset!");

// Function FortniteUI.AthenaAccountContext.SimulateBattleBookPurchase
// 0x000C (0x000C - 0x0000)
struct AthenaAccountContext_SimulateBattleBookPurchase final
{
public:
	int32                                         NumLevelsToPurchase;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BonusLevelsGranted;                                // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverLimit;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AthenaAccountContext_SimulateBattleBookPurchase) == 0x000004, "Wrong alignment on AthenaAccountContext_SimulateBattleBookPurchase");
static_assert(sizeof(AthenaAccountContext_SimulateBattleBookPurchase) == 0x00000C, "Wrong size on AthenaAccountContext_SimulateBattleBookPurchase");
static_assert(offsetof(AthenaAccountContext_SimulateBattleBookPurchase, NumLevelsToPurchase) == 0x000000, "Member 'AthenaAccountContext_SimulateBattleBookPurchase::NumLevelsToPurchase' has a wrong offset!");
static_assert(offsetof(AthenaAccountContext_SimulateBattleBookPurchase, BonusLevelsGranted) == 0x000004, "Member 'AthenaAccountContext_SimulateBattleBookPurchase::BonusLevelsGranted' has a wrong offset!");
static_assert(offsetof(AthenaAccountContext_SimulateBattleBookPurchase, bOverLimit) == 0x000008, "Member 'AthenaAccountContext_SimulateBattleBookPurchase::bOverLimit' has a wrong offset!");

// Function FortniteUI.AthenaAccountContext.GetCurrentSeasonName
// 0x0018 (0x0018 - 0x0000)
struct AthenaAccountContext_GetCurrentSeasonName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaAccountContext_GetCurrentSeasonName) == 0x000008, "Wrong alignment on AthenaAccountContext_GetCurrentSeasonName");
static_assert(sizeof(AthenaAccountContext_GetCurrentSeasonName) == 0x000018, "Wrong size on AthenaAccountContext_GetCurrentSeasonName");
static_assert(offsetof(AthenaAccountContext_GetCurrentSeasonName, ReturnValue) == 0x000000, "Member 'AthenaAccountContext_GetCurrentSeasonName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAthenaMatchmakingWidget.GetActivePlaylists
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaMatchmakingWidget_GetActivePlaylists final
{
public:
	TArray<EFortAthenaPlaylist>                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMatchmakingWidget_GetActivePlaylists) == 0x000008, "Wrong alignment on FortAthenaMatchmakingWidget_GetActivePlaylists");
static_assert(sizeof(FortAthenaMatchmakingWidget_GetActivePlaylists) == 0x000010, "Wrong size on FortAthenaMatchmakingWidget_GetActivePlaylists");
static_assert(offsetof(FortAthenaMatchmakingWidget_GetActivePlaylists, ReturnValue) == 0x000000, "Member 'FortAthenaMatchmakingWidget_GetActivePlaylists::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAthenaMatchmakingWidget.OnChangeTeamFillChanged
// 0x0001 (0x0001 - 0x0000)
struct FortAthenaMatchmakingWidget_OnChangeTeamFillChanged final
{
public:
	bool                                          bFill;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMatchmakingWidget_OnChangeTeamFillChanged) == 0x000001, "Wrong alignment on FortAthenaMatchmakingWidget_OnChangeTeamFillChanged");
static_assert(sizeof(FortAthenaMatchmakingWidget_OnChangeTeamFillChanged) == 0x000001, "Wrong size on FortAthenaMatchmakingWidget_OnChangeTeamFillChanged");
static_assert(offsetof(FortAthenaMatchmakingWidget_OnChangeTeamFillChanged, bFill) == 0x000000, "Member 'FortAthenaMatchmakingWidget_OnChangeTeamFillChanged::bFill' has a wrong offset!");

// Function FortniteUI.FortAthenaMatchmakingWidget.OnPlayButtonUpdated
// 0x0001 (0x0001 - 0x0000)
struct FortAthenaMatchmakingWidget_OnPlayButtonUpdated final
{
public:
	bool                                          bShowPlayButton;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMatchmakingWidget_OnPlayButtonUpdated) == 0x000001, "Wrong alignment on FortAthenaMatchmakingWidget_OnPlayButtonUpdated");
static_assert(sizeof(FortAthenaMatchmakingWidget_OnPlayButtonUpdated) == 0x000001, "Wrong size on FortAthenaMatchmakingWidget_OnPlayButtonUpdated");
static_assert(offsetof(FortAthenaMatchmakingWidget_OnPlayButtonUpdated, bShowPlayButton) == 0x000000, "Member 'FortAthenaMatchmakingWidget_OnPlayButtonUpdated::bShowPlayButton' has a wrong offset!");

// Function FortniteUI.FortAthenaMatchmakingWidget.OnPlaylistRotatorChanged
// 0x0004 (0x0004 - 0x0000)
struct FortAthenaMatchmakingWidget_OnPlaylistRotatorChanged final
{
public:
	int32                                         PlaylistIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMatchmakingWidget_OnPlaylistRotatorChanged) == 0x000004, "Wrong alignment on FortAthenaMatchmakingWidget_OnPlaylistRotatorChanged");
static_assert(sizeof(FortAthenaMatchmakingWidget_OnPlaylistRotatorChanged) == 0x000004, "Wrong size on FortAthenaMatchmakingWidget_OnPlaylistRotatorChanged");
static_assert(offsetof(FortAthenaMatchmakingWidget_OnPlaylistRotatorChanged, PlaylistIndex) == 0x000000, "Member 'FortAthenaMatchmakingWidget_OnPlaylistRotatorChanged::PlaylistIndex' has a wrong offset!");

// Function FortniteUI.FortAthenaMatchmakingWidget.SetCancelButtonState
// 0x0001 (0x0001 - 0x0000)
struct FortAthenaMatchmakingWidget_SetCancelButtonState final
{
public:
	bool                                          bIsMatchmaking;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMatchmakingWidget_SetCancelButtonState) == 0x000001, "Wrong alignment on FortAthenaMatchmakingWidget_SetCancelButtonState");
static_assert(sizeof(FortAthenaMatchmakingWidget_SetCancelButtonState) == 0x000001, "Wrong size on FortAthenaMatchmakingWidget_SetCancelButtonState");
static_assert(offsetof(FortAthenaMatchmakingWidget_SetCancelButtonState, bIsMatchmaking) == 0x000000, "Member 'FortAthenaMatchmakingWidget_SetCancelButtonState::bIsMatchmaking' has a wrong offset!");

// Function FortniteUI.FortAthenaMatchmakingWidget.SetCurrentPlaylist
// 0x0002 (0x0002 - 0x0000)
struct FortAthenaMatchmakingWidget_SetCurrentPlaylist final
{
public:
	EFortAthenaPlaylist                           NewPlaylist;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMatchmakingWidget_SetCurrentPlaylist) == 0x000001, "Wrong alignment on FortAthenaMatchmakingWidget_SetCurrentPlaylist");
static_assert(sizeof(FortAthenaMatchmakingWidget_SetCurrentPlaylist) == 0x000002, "Wrong size on FortAthenaMatchmakingWidget_SetCurrentPlaylist");
static_assert(offsetof(FortAthenaMatchmakingWidget_SetCurrentPlaylist, NewPlaylist) == 0x000000, "Member 'FortAthenaMatchmakingWidget_SetCurrentPlaylist::NewPlaylist' has a wrong offset!");
static_assert(offsetof(FortAthenaMatchmakingWidget_SetCurrentPlaylist, ReturnValue) == 0x000001, "Member 'FortAthenaMatchmakingWidget_SetCurrentPlaylist::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAthenaMatchmakingWidget.SetPlayButtonState
// 0x0001 (0x0001 - 0x0000)
struct FortAthenaMatchmakingWidget_SetPlayButtonState final
{
public:
	bool                                          bCanMatchmake;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaMatchmakingWidget_SetPlayButtonState) == 0x000001, "Wrong alignment on FortAthenaMatchmakingWidget_SetPlayButtonState");
static_assert(sizeof(FortAthenaMatchmakingWidget_SetPlayButtonState) == 0x000001, "Wrong size on FortAthenaMatchmakingWidget_SetPlayButtonState");
static_assert(offsetof(FortAthenaMatchmakingWidget_SetPlayButtonState, bCanMatchmake) == 0x000000, "Member 'FortAthenaMatchmakingWidget_SetPlayButtonState::bCanMatchmake' has a wrong offset!");

// Function FortniteUI.FortHUDElementWidget.HandleOnHUDElementVisibilityChanged
// 0x0020 (0x0020 - 0x0000)
struct FortHUDElementWidget_HandleOnHUDElementVisibilityChanged final
{
public:
	struct FGameplayTagContainer                  HiddenHUDElementTags;                              // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDElementWidget_HandleOnHUDElementVisibilityChanged) == 0x000008, "Wrong alignment on FortHUDElementWidget_HandleOnHUDElementVisibilityChanged");
static_assert(sizeof(FortHUDElementWidget_HandleOnHUDElementVisibilityChanged) == 0x000020, "Wrong size on FortHUDElementWidget_HandleOnHUDElementVisibilityChanged");
static_assert(offsetof(FortHUDElementWidget_HandleOnHUDElementVisibilityChanged, HiddenHUDElementTags) == 0x000000, "Member 'FortHUDElementWidget_HandleOnHUDElementVisibilityChanged::HiddenHUDElementTags' has a wrong offset!");

// Function FortniteUI.FortHUDElementWidget.OnVisibilitySetEvent
// 0x0001 (0x0001 - 0x0000)
struct FortHUDElementWidget_OnVisibilitySetEvent final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDElementWidget_OnVisibilitySetEvent) == 0x000001, "Wrong alignment on FortHUDElementWidget_OnVisibilitySetEvent");
static_assert(sizeof(FortHUDElementWidget_OnVisibilitySetEvent) == 0x000001, "Wrong size on FortHUDElementWidget_OnVisibilitySetEvent");
static_assert(offsetof(FortHUDElementWidget_OnVisibilitySetEvent, InVisibility) == 0x000000, "Member 'FortHUDElementWidget_OnVisibilitySetEvent::InVisibility' has a wrong offset!");

// Function FortniteUI.UINavigationManager.GetDisplayName
// 0x0020 (0x0020 - 0x0000)
struct UINavigationManager_GetDisplayName final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UINavigationManager_GetDisplayName) == 0x000008, "Wrong alignment on UINavigationManager_GetDisplayName");
static_assert(sizeof(UINavigationManager_GetDisplayName) == 0x000020, "Wrong size on UINavigationManager_GetDisplayName");
static_assert(offsetof(UINavigationManager_GetDisplayName, Param_Index) == 0x000000, "Member 'UINavigationManager_GetDisplayName::Param_Index' has a wrong offset!");
static_assert(offsetof(UINavigationManager_GetDisplayName, ReturnValue) == 0x000008, "Member 'UINavigationManager_GetDisplayName::ReturnValue' has a wrong offset!");

// Function FortniteUI.UINavigationManager.GetStackSize
// 0x0004 (0x0004 - 0x0000)
struct UINavigationManager_GetStackSize final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UINavigationManager_GetStackSize) == 0x000004, "Wrong alignment on UINavigationManager_GetStackSize");
static_assert(sizeof(UINavigationManager_GetStackSize) == 0x000004, "Wrong size on UINavigationManager_GetStackSize");
static_assert(offsetof(UINavigationManager_GetStackSize, ReturnValue) == 0x000000, "Member 'UINavigationManager_GetStackSize::ReturnValue' has a wrong offset!");

// Function FortniteUI.UINavigationManager.NavigationToIndex
// 0x0004 (0x0004 - 0x0000)
struct UINavigationManager_NavigationToIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UINavigationManager_NavigationToIndex) == 0x000004, "Wrong alignment on UINavigationManager_NavigationToIndex");
static_assert(sizeof(UINavigationManager_NavigationToIndex) == 0x000004, "Wrong size on UINavigationManager_NavigationToIndex");
static_assert(offsetof(UINavigationManager_NavigationToIndex, Param_Index) == 0x000000, "Member 'UINavigationManager_NavigationToIndex::Param_Index' has a wrong offset!");

// Function FortniteUI.UINavigationManager.PushNavigation
// 0x0050 (0x0050 - 0x0000)
struct UINavigationManager_PushNavigation final
{
public:
	class FText                                   DisplayName;                                       // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UObject*                                ObjectData;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   IdData;                                            // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         IntData;                                           // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FUINavigationData& Data)> OnNavigateTo;                                      // 0x0030(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FUINavigationData& Data)> OnNavigateFrom;                                    // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(UINavigationManager_PushNavigation) == 0x000008, "Wrong alignment on UINavigationManager_PushNavigation");
static_assert(sizeof(UINavigationManager_PushNavigation) == 0x000050, "Wrong size on UINavigationManager_PushNavigation");
static_assert(offsetof(UINavigationManager_PushNavigation, DisplayName) == 0x000000, "Member 'UINavigationManager_PushNavigation::DisplayName' has a wrong offset!");
static_assert(offsetof(UINavigationManager_PushNavigation, ObjectData) == 0x000018, "Member 'UINavigationManager_PushNavigation::ObjectData' has a wrong offset!");
static_assert(offsetof(UINavigationManager_PushNavigation, IdData) == 0x000020, "Member 'UINavigationManager_PushNavigation::IdData' has a wrong offset!");
static_assert(offsetof(UINavigationManager_PushNavigation, IntData) == 0x000028, "Member 'UINavigationManager_PushNavigation::IntData' has a wrong offset!");
static_assert(offsetof(UINavigationManager_PushNavigation, OnNavigateTo) == 0x000030, "Member 'UINavigationManager_PushNavigation::OnNavigateTo' has a wrong offset!");
static_assert(offsetof(UINavigationManager_PushNavigation, OnNavigateFrom) == 0x000040, "Member 'UINavigationManager_PushNavigation::OnNavigateFrom' has a wrong offset!");

// Function FortniteUI.FortUIStateTrigger.EvalBP
// 0x0001 (0x0001 - 0x0000)
struct FortUIStateTrigger_EvalBP final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateTrigger_EvalBP) == 0x000001, "Wrong alignment on FortUIStateTrigger_EvalBP");
static_assert(sizeof(FortUIStateTrigger_EvalBP) == 0x000001, "Wrong size on FortUIStateTrigger_EvalBP");
static_assert(offsetof(FortUIStateTrigger_EvalBP, ReturnValue) == 0x000000, "Member 'FortUIStateTrigger_EvalBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIStateTrigger.IsLoggedIn
// 0x0001 (0x0001 - 0x0000)
struct FortUIStateTrigger_IsLoggedIn final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateTrigger_IsLoggedIn) == 0x000001, "Wrong alignment on FortUIStateTrigger_IsLoggedIn");
static_assert(sizeof(FortUIStateTrigger_IsLoggedIn) == 0x000001, "Wrong size on FortUIStateTrigger_IsLoggedIn");
static_assert(offsetof(FortUIStateTrigger_IsLoggedIn, ReturnValue) == 0x000000, "Member 'FortUIStateTrigger_IsLoggedIn::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortActivatablePanel.RestoreCenterWidget
// 0x0008 (0x0008 - 0x0000)
struct FortActivatablePanel_RestoreCenterWidget final
{
public:
	class UWidget*                                FallbackWidget;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortActivatablePanel_RestoreCenterWidget) == 0x000008, "Wrong alignment on FortActivatablePanel_RestoreCenterWidget");
static_assert(sizeof(FortActivatablePanel_RestoreCenterWidget) == 0x000008, "Wrong size on FortActivatablePanel_RestoreCenterWidget");
static_assert(offsetof(FortActivatablePanel_RestoreCenterWidget, FallbackWidget) == 0x000000, "Member 'FortActivatablePanel_RestoreCenterWidget::FallbackWidget' has a wrong offset!");

// Function FortniteUI.FortActivatablePanel.RestoreScrollWidget
// 0x0008 (0x0008 - 0x0000)
struct FortActivatablePanel_RestoreScrollWidget final
{
public:
	class UWidget*                                FallbackWidget;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortActivatablePanel_RestoreScrollWidget) == 0x000008, "Wrong alignment on FortActivatablePanel_RestoreScrollWidget");
static_assert(sizeof(FortActivatablePanel_RestoreScrollWidget) == 0x000008, "Wrong size on FortActivatablePanel_RestoreScrollWidget");
static_assert(offsetof(FortActivatablePanel_RestoreScrollWidget, FallbackWidget) == 0x000000, "Member 'FortActivatablePanel_RestoreScrollWidget::FallbackWidget' has a wrong offset!");

// Function FortniteUI.AthenaCompendiumScreenBase.GetCompendiumBundles
// 0x0020 (0x0020 - 0x0000)
struct AthenaCompendiumScreenBase_GetCompendiumBundles final
{
public:
	TArray<class UFortCompendiumBundle*>          OutActiveBundles;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UFortCompendiumBundleDefinition*> OutUnlockableBundles;                              // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaCompendiumScreenBase_GetCompendiumBundles) == 0x000008, "Wrong alignment on AthenaCompendiumScreenBase_GetCompendiumBundles");
static_assert(sizeof(AthenaCompendiumScreenBase_GetCompendiumBundles) == 0x000020, "Wrong size on AthenaCompendiumScreenBase_GetCompendiumBundles");
static_assert(offsetof(AthenaCompendiumScreenBase_GetCompendiumBundles, OutActiveBundles) == 0x000000, "Member 'AthenaCompendiumScreenBase_GetCompendiumBundles::OutActiveBundles' has a wrong offset!");
static_assert(offsetof(AthenaCompendiumScreenBase_GetCompendiumBundles, OutUnlockableBundles) == 0x000010, "Member 'AthenaCompendiumScreenBase_GetCompendiumBundles::OutUnlockableBundles' has a wrong offset!");

// Function FortniteUI.AthenaCompendiumScreenBase.GetCompendiumItems
// 0x0028 (0x0028 - 0x0000)
struct AthenaCompendiumScreenBase_GetCompendiumItems final
{
public:
	class UFortCompendiumBundle*                  Bundle;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortCompendiumItem*>            OutActiveItems;                                    // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UFortCompendiumItemDefinition*>  OutUnlockableItems;                                // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaCompendiumScreenBase_GetCompendiumItems) == 0x000008, "Wrong alignment on AthenaCompendiumScreenBase_GetCompendiumItems");
static_assert(sizeof(AthenaCompendiumScreenBase_GetCompendiumItems) == 0x000028, "Wrong size on AthenaCompendiumScreenBase_GetCompendiumItems");
static_assert(offsetof(AthenaCompendiumScreenBase_GetCompendiumItems, Bundle) == 0x000000, "Member 'AthenaCompendiumScreenBase_GetCompendiumItems::Bundle' has a wrong offset!");
static_assert(offsetof(AthenaCompendiumScreenBase_GetCompendiumItems, OutActiveItems) == 0x000008, "Member 'AthenaCompendiumScreenBase_GetCompendiumItems::OutActiveItems' has a wrong offset!");
static_assert(offsetof(AthenaCompendiumScreenBase_GetCompendiumItems, OutUnlockableItems) == 0x000018, "Member 'AthenaCompendiumScreenBase_GetCompendiumItems::OutUnlockableItems' has a wrong offset!");

// Function FortniteUI.AthenaCustomizationPicker.BeginCustomizationCategory
// 0x0008 (0x0008 - 0x0000)
struct AthenaCustomizationPicker_BeginCustomizationCategory final
{
public:
	EAthenaCustomizationCategory                  Category;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SubslotToEdit;                                     // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaCustomizationPicker_BeginCustomizationCategory) == 0x000004, "Wrong alignment on AthenaCustomizationPicker_BeginCustomizationCategory");
static_assert(sizeof(AthenaCustomizationPicker_BeginCustomizationCategory) == 0x000008, "Wrong size on AthenaCustomizationPicker_BeginCustomizationCategory");
static_assert(offsetof(AthenaCustomizationPicker_BeginCustomizationCategory, Category) == 0x000000, "Member 'AthenaCustomizationPicker_BeginCustomizationCategory::Category' has a wrong offset!");
static_assert(offsetof(AthenaCustomizationPicker_BeginCustomizationCategory, SubslotToEdit) == 0x000004, "Member 'AthenaCustomizationPicker_BeginCustomizationCategory::SubslotToEdit' has a wrong offset!");

// Function FortniteUI.FortSquadSlotItemDetailElementWidget.SetIdOfSquadSlotToManageBP
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotItemDetailElementWidget_SetIdOfSquadSlotToManageBP final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SquadSlotIndex;                                    // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadSlotItemDetailElementWidget_SetIdOfSquadSlotToManageBP) == 0x000004, "Wrong alignment on FortSquadSlotItemDetailElementWidget_SetIdOfSquadSlotToManageBP");
static_assert(sizeof(FortSquadSlotItemDetailElementWidget_SetIdOfSquadSlotToManageBP) == 0x000010, "Wrong size on FortSquadSlotItemDetailElementWidget_SetIdOfSquadSlotToManageBP");
static_assert(offsetof(FortSquadSlotItemDetailElementWidget_SetIdOfSquadSlotToManageBP, SquadId) == 0x000000, "Member 'FortSquadSlotItemDetailElementWidget_SetIdOfSquadSlotToManageBP::SquadId' has a wrong offset!");
static_assert(offsetof(FortSquadSlotItemDetailElementWidget_SetIdOfSquadSlotToManageBP, SquadSlotIndex) == 0x000008, "Member 'FortSquadSlotItemDetailElementWidget_SetIdOfSquadSlotToManageBP::SquadSlotIndex' has a wrong offset!");

// Function FortniteUI.FortSquadSlotItemDetailElementWidget.GetIdOfSquadSlotToManageBP
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotItemDetailElementWidget_GetIdOfSquadSlotToManageBP final
{
public:
	class FName                                   OutSquadId;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSquadSlotIndex;                                 // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadSlotItemDetailElementWidget_GetIdOfSquadSlotToManageBP) == 0x000004, "Wrong alignment on FortSquadSlotItemDetailElementWidget_GetIdOfSquadSlotToManageBP");
static_assert(sizeof(FortSquadSlotItemDetailElementWidget_GetIdOfSquadSlotToManageBP) == 0x000010, "Wrong size on FortSquadSlotItemDetailElementWidget_GetIdOfSquadSlotToManageBP");
static_assert(offsetof(FortSquadSlotItemDetailElementWidget_GetIdOfSquadSlotToManageBP, OutSquadId) == 0x000000, "Member 'FortSquadSlotItemDetailElementWidget_GetIdOfSquadSlotToManageBP::OutSquadId' has a wrong offset!");
static_assert(offsetof(FortSquadSlotItemDetailElementWidget_GetIdOfSquadSlotToManageBP, OutSquadSlotIndex) == 0x000008, "Member 'FortSquadSlotItemDetailElementWidget_GetIdOfSquadSlotToManageBP::OutSquadSlotIndex' has a wrong offset!");

// Function FortniteUI.FortSquadSlotItemDetailElementWidget.GetItemInSquadSlotBP
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotItemDetailElementWidget_GetItemInSquadSlotBP final
{
public:
	const class ULocalPlayer*                     LocalPlayer;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItem*                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotItemDetailElementWidget_GetItemInSquadSlotBP) == 0x000008, "Wrong alignment on FortSquadSlotItemDetailElementWidget_GetItemInSquadSlotBP");
static_assert(sizeof(FortSquadSlotItemDetailElementWidget_GetItemInSquadSlotBP) == 0x000010, "Wrong size on FortSquadSlotItemDetailElementWidget_GetItemInSquadSlotBP");
static_assert(offsetof(FortSquadSlotItemDetailElementWidget_GetItemInSquadSlotBP, LocalPlayer) == 0x000000, "Member 'FortSquadSlotItemDetailElementWidget_GetItemInSquadSlotBP::LocalPlayer' has a wrong offset!");
static_assert(offsetof(FortSquadSlotItemDetailElementWidget_GetItemInSquadSlotBP, ReturnValue) == 0x000008, "Member 'FortSquadSlotItemDetailElementWidget_GetItemInSquadSlotBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadSlotItemDetailElementWidget.IsSquadSlotLockedBP
// 0x0001 (0x0001 - 0x0000)
struct FortSquadSlotItemDetailElementWidget_IsSquadSlotLockedBP final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotItemDetailElementWidget_IsSquadSlotLockedBP) == 0x000001, "Wrong alignment on FortSquadSlotItemDetailElementWidget_IsSquadSlotLockedBP");
static_assert(sizeof(FortSquadSlotItemDetailElementWidget_IsSquadSlotLockedBP) == 0x000001, "Wrong size on FortSquadSlotItemDetailElementWidget_IsSquadSlotLockedBP");
static_assert(offsetof(FortSquadSlotItemDetailElementWidget_IsSquadSlotLockedBP, ReturnValue) == 0x000000, "Member 'FortSquadSlotItemDetailElementWidget_IsSquadSlotLockedBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.AthenaCustomizationScreenBase.CanShowSlotType
// 0x0002 (0x0002 - 0x0000)
struct AthenaCustomizationScreenBase_CanShowSlotType final
{
public:
	EAthenaCustomizationCategory                  SlotType;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaCustomizationScreenBase_CanShowSlotType) == 0x000001, "Wrong alignment on AthenaCustomizationScreenBase_CanShowSlotType");
static_assert(sizeof(AthenaCustomizationScreenBase_CanShowSlotType) == 0x000002, "Wrong size on AthenaCustomizationScreenBase_CanShowSlotType");
static_assert(offsetof(AthenaCustomizationScreenBase_CanShowSlotType, SlotType) == 0x000000, "Member 'AthenaCustomizationScreenBase_CanShowSlotType::SlotType' has a wrong offset!");
static_assert(offsetof(AthenaCustomizationScreenBase_CanShowSlotType, ReturnValue) == 0x000001, "Member 'AthenaCustomizationScreenBase_CanShowSlotType::ReturnValue' has a wrong offset!");

// Function FortniteUI.AthenaCustomizationScreenBase.GetFavoriteItemForCategory
// 0x0010 (0x0010 - 0x0000)
struct AthenaCustomizationScreenBase_GetFavoriteItemForCategory final
{
public:
	EAthenaCustomizationCategory                  CustomizationType;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SubslotIndex;                                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItem*                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaCustomizationScreenBase_GetFavoriteItemForCategory) == 0x000008, "Wrong alignment on AthenaCustomizationScreenBase_GetFavoriteItemForCategory");
static_assert(sizeof(AthenaCustomizationScreenBase_GetFavoriteItemForCategory) == 0x000010, "Wrong size on AthenaCustomizationScreenBase_GetFavoriteItemForCategory");
static_assert(offsetof(AthenaCustomizationScreenBase_GetFavoriteItemForCategory, CustomizationType) == 0x000000, "Member 'AthenaCustomizationScreenBase_GetFavoriteItemForCategory::CustomizationType' has a wrong offset!");
static_assert(offsetof(AthenaCustomizationScreenBase_GetFavoriteItemForCategory, SubslotIndex) == 0x000004, "Member 'AthenaCustomizationScreenBase_GetFavoriteItemForCategory::SubslotIndex' has a wrong offset!");
static_assert(offsetof(AthenaCustomizationScreenBase_GetFavoriteItemForCategory, ReturnValue) == 0x000008, "Member 'AthenaCustomizationScreenBase_GetFavoriteItemForCategory::ReturnValue' has a wrong offset!");

// Function FortniteUI.AthenaCustomizationSlotSelectorButton.SetCustomizationType
// 0x0008 (0x0008 - 0x0000)
struct AthenaCustomizationSlotSelectorButton_SetCustomizationType final
{
public:
	EAthenaCustomizationCategory                  NewType;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InSubslotIndex;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaCustomizationSlotSelectorButton_SetCustomizationType) == 0x000004, "Wrong alignment on AthenaCustomizationSlotSelectorButton_SetCustomizationType");
static_assert(sizeof(AthenaCustomizationSlotSelectorButton_SetCustomizationType) == 0x000008, "Wrong size on AthenaCustomizationSlotSelectorButton_SetCustomizationType");
static_assert(offsetof(AthenaCustomizationSlotSelectorButton_SetCustomizationType, NewType) == 0x000000, "Member 'AthenaCustomizationSlotSelectorButton_SetCustomizationType::NewType' has a wrong offset!");
static_assert(offsetof(AthenaCustomizationSlotSelectorButton_SetCustomizationType, InSubslotIndex) == 0x000004, "Member 'AthenaCustomizationSlotSelectorButton_SetCustomizationType::InSubslotIndex' has a wrong offset!");

// Function FortniteUI.AthenaGamePhaseWidgetBase.HandleGamePhaseStepChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaGamePhaseWidgetBase_HandleGamePhaseStepChanged final
{
public:
	EAthenaGamePhaseStep                          GamePhaseStep;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaGamePhaseWidgetBase_HandleGamePhaseStepChanged) == 0x000001, "Wrong alignment on AthenaGamePhaseWidgetBase_HandleGamePhaseStepChanged");
static_assert(sizeof(AthenaGamePhaseWidgetBase_HandleGamePhaseStepChanged) == 0x000001, "Wrong size on AthenaGamePhaseWidgetBase_HandleGamePhaseStepChanged");
static_assert(offsetof(AthenaGamePhaseWidgetBase_HandleGamePhaseStepChanged, GamePhaseStep) == 0x000000, "Member 'AthenaGamePhaseWidgetBase_HandleGamePhaseStepChanged::GamePhaseStep' has a wrong offset!");

// Function FortniteUI.AthenaGamePhaseWidgetBase.OnGamePhaseStepChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaGamePhaseWidgetBase_OnGamePhaseStepChanged final
{
public:
	EAthenaGamePhaseStep                          GamePhaseStep;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaGamePhaseWidgetBase_OnGamePhaseStepChanged) == 0x000001, "Wrong alignment on AthenaGamePhaseWidgetBase_OnGamePhaseStepChanged");
static_assert(sizeof(AthenaGamePhaseWidgetBase_OnGamePhaseStepChanged) == 0x000001, "Wrong size on AthenaGamePhaseWidgetBase_OnGamePhaseStepChanged");
static_assert(offsetof(AthenaGamePhaseWidgetBase_OnGamePhaseStepChanged, GamePhaseStep) == 0x000000, "Member 'AthenaGamePhaseWidgetBase_OnGamePhaseStepChanged::GamePhaseStep' has a wrong offset!");

// Function FortniteUI.FortExpeditionPickVehicleWidget.SetData
// 0x0008 (0x0008 - 0x0000)
struct FortExpeditionPickVehicleWidget_SetData final
{
public:
	class UFortExpeditionItem*                    InItem;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionPickVehicleWidget_SetData) == 0x000008, "Wrong alignment on FortExpeditionPickVehicleWidget_SetData");
static_assert(sizeof(FortExpeditionPickVehicleWidget_SetData) == 0x000008, "Wrong size on FortExpeditionPickVehicleWidget_SetData");
static_assert(offsetof(FortExpeditionPickVehicleWidget_SetData, InItem) == 0x000000, "Member 'FortExpeditionPickVehicleWidget_SetData::InItem' has a wrong offset!");

// Function FortniteUI.AthenaHUDContext.HandleLocalPlayerDBNOStateChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaHUDContext_HandleLocalPlayerDBNOStateChanged final
{
public:
	bool                                          bIsDBNO;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaHUDContext_HandleLocalPlayerDBNOStateChanged) == 0x000001, "Wrong alignment on AthenaHUDContext_HandleLocalPlayerDBNOStateChanged");
static_assert(sizeof(AthenaHUDContext_HandleLocalPlayerDBNOStateChanged) == 0x000001, "Wrong size on AthenaHUDContext_HandleLocalPlayerDBNOStateChanged");
static_assert(offsetof(AthenaHUDContext_HandleLocalPlayerDBNOStateChanged, bIsDBNO) == 0x000000, "Member 'AthenaHUDContext_HandleLocalPlayerDBNOStateChanged::bIsDBNO' has a wrong offset!");

// Function FortniteUI.AthenaHUDContext.HandleUIGameplayCue
// 0x00C8 (0x00C8 - 0x0000)
struct AthenaHUDContext_HandleUIGameplayCue final
{
public:
	class FName                                   CueName;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EGameplayCueEvent                             EventType;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0010(0x00B8)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaHUDContext_HandleUIGameplayCue) == 0x000008, "Wrong alignment on AthenaHUDContext_HandleUIGameplayCue");
static_assert(sizeof(AthenaHUDContext_HandleUIGameplayCue) == 0x0000C8, "Wrong size on AthenaHUDContext_HandleUIGameplayCue");
static_assert(offsetof(AthenaHUDContext_HandleUIGameplayCue, CueName) == 0x000000, "Member 'AthenaHUDContext_HandleUIGameplayCue::CueName' has a wrong offset!");
static_assert(offsetof(AthenaHUDContext_HandleUIGameplayCue, EventType) == 0x000008, "Member 'AthenaHUDContext_HandleUIGameplayCue::EventType' has a wrong offset!");
static_assert(offsetof(AthenaHUDContext_HandleUIGameplayCue, Parameters) == 0x000010, "Member 'AthenaHUDContext_HandleUIGameplayCue::Parameters' has a wrong offset!");

// Function FortniteUI.AthenaHUDContext.SetSelectedInventoryItem
// 0x0008 (0x0008 - 0x0000)
struct AthenaHUDContext_SetSelectedInventoryItem final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaHUDContext_SetSelectedInventoryItem) == 0x000008, "Wrong alignment on AthenaHUDContext_SetSelectedInventoryItem");
static_assert(sizeof(AthenaHUDContext_SetSelectedInventoryItem) == 0x000008, "Wrong size on AthenaHUDContext_SetSelectedInventoryItem");
static_assert(offsetof(AthenaHUDContext_SetSelectedInventoryItem, Item) == 0x000000, "Member 'AthenaHUDContext_SetSelectedInventoryItem::Item' has a wrong offset!");

// Function FortniteUI.AthenaHUDContext.StartOrFinishSwap
// 0x0004 (0x0004 - 0x0000)
struct AthenaHUDContext_StartOrFinishSwap final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaHUDContext_StartOrFinishSwap) == 0x000004, "Wrong alignment on AthenaHUDContext_StartOrFinishSwap");
static_assert(sizeof(AthenaHUDContext_StartOrFinishSwap) == 0x000004, "Wrong size on AthenaHUDContext_StartOrFinishSwap");
static_assert(offsetof(AthenaHUDContext_StartOrFinishSwap, SlotIndex) == 0x000000, "Member 'AthenaHUDContext_StartOrFinishSwap::SlotIndex' has a wrong offset!");

// Function FortniteUI.AthenaHUDContext.GetSelectedInventoryItem
// 0x0008 (0x0008 - 0x0000)
struct AthenaHUDContext_GetSelectedInventoryItem final
{
public:
	class UFortItem*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaHUDContext_GetSelectedInventoryItem) == 0x000008, "Wrong alignment on AthenaHUDContext_GetSelectedInventoryItem");
static_assert(sizeof(AthenaHUDContext_GetSelectedInventoryItem) == 0x000008, "Wrong size on AthenaHUDContext_GetSelectedInventoryItem");
static_assert(offsetof(AthenaHUDContext_GetSelectedInventoryItem, ReturnValue) == 0x000000, "Member 'AthenaHUDContext_GetSelectedInventoryItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.AthenaHUDContext.IsSwapping
// 0x0001 (0x0001 - 0x0000)
struct AthenaHUDContext_IsSwapping final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaHUDContext_IsSwapping) == 0x000001, "Wrong alignment on AthenaHUDContext_IsSwapping");
static_assert(sizeof(AthenaHUDContext_IsSwapping) == 0x000001, "Wrong size on AthenaHUDContext_IsSwapping");
static_assert(offsetof(AthenaHUDContext_IsSwapping, ReturnValue) == 0x000000, "Member 'AthenaHUDContext_IsSwapping::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemDisplayNameText.SetItemToRepresent
// 0x0008 (0x0008 - 0x0000)
struct FortItemDisplayNameText_SetItemToRepresent final
{
public:
	class UFortItem*                              Param_ItemToRepresent;                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemDisplayNameText_SetItemToRepresent) == 0x000008, "Wrong alignment on FortItemDisplayNameText_SetItemToRepresent");
static_assert(sizeof(FortItemDisplayNameText_SetItemToRepresent) == 0x000008, "Wrong size on FortItemDisplayNameText_SetItemToRepresent");
static_assert(offsetof(FortItemDisplayNameText_SetItemToRepresent, Param_ItemToRepresent) == 0x000000, "Member 'FortItemDisplayNameText_SetItemToRepresent::Param_ItemToRepresent' has a wrong offset!");

// Function FortniteUI.AthenaHUDGamePhaseChangingBase.GamePhaseStepChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaHUDGamePhaseChangingBase_GamePhaseStepChanged final
{
public:
	EAthenaGamePhaseStep                          Step;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaHUDGamePhaseChangingBase_GamePhaseStepChanged) == 0x000001, "Wrong alignment on AthenaHUDGamePhaseChangingBase_GamePhaseStepChanged");
static_assert(sizeof(AthenaHUDGamePhaseChangingBase_GamePhaseStepChanged) == 0x000001, "Wrong size on AthenaHUDGamePhaseChangingBase_GamePhaseStepChanged");
static_assert(offsetof(AthenaHUDGamePhaseChangingBase_GamePhaseStepChanged, Step) == 0x000000, "Member 'AthenaHUDGamePhaseChangingBase_GamePhaseStepChanged::Step' has a wrong offset!");

// Function FortniteUI.AthenaHUDGamePhaseChangingBase.HandleGamePhaseStepChanged
// 0x0001 (0x0001 - 0x0000)
struct AthenaHUDGamePhaseChangingBase_HandleGamePhaseStepChanged final
{
public:
	EAthenaGamePhaseStep                          Step;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaHUDGamePhaseChangingBase_HandleGamePhaseStepChanged) == 0x000001, "Wrong alignment on AthenaHUDGamePhaseChangingBase_HandleGamePhaseStepChanged");
static_assert(sizeof(AthenaHUDGamePhaseChangingBase_HandleGamePhaseStepChanged) == 0x000001, "Wrong size on AthenaHUDGamePhaseChangingBase_HandleGamePhaseStepChanged");
static_assert(offsetof(AthenaHUDGamePhaseChangingBase_HandleGamePhaseStepChanged, Step) == 0x000000, "Member 'AthenaHUDGamePhaseChangingBase_HandleGamePhaseStepChanged::Step' has a wrong offset!");

// Function FortniteUI.AthenaHUDGamePhaseChangingBase.UpdateMessaging
// 0x0038 (0x0038 - 0x0000)
struct AthenaHUDGamePhaseChangingBase_UpdateMessaging final
{
public:
	EAthenaGamePhaseStep                          Step;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   MESSAGE;                                           // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   TimeText;                                          // 0x0020(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaHUDGamePhaseChangingBase_UpdateMessaging) == 0x000008, "Wrong alignment on AthenaHUDGamePhaseChangingBase_UpdateMessaging");
static_assert(sizeof(AthenaHUDGamePhaseChangingBase_UpdateMessaging) == 0x000038, "Wrong size on AthenaHUDGamePhaseChangingBase_UpdateMessaging");
static_assert(offsetof(AthenaHUDGamePhaseChangingBase_UpdateMessaging, Step) == 0x000000, "Member 'AthenaHUDGamePhaseChangingBase_UpdateMessaging::Step' has a wrong offset!");
static_assert(offsetof(AthenaHUDGamePhaseChangingBase_UpdateMessaging, MESSAGE) == 0x000008, "Member 'AthenaHUDGamePhaseChangingBase_UpdateMessaging::MESSAGE' has a wrong offset!");
static_assert(offsetof(AthenaHUDGamePhaseChangingBase_UpdateMessaging, TimeText) == 0x000020, "Member 'AthenaHUDGamePhaseChangingBase_UpdateMessaging::TimeText' has a wrong offset!");

// Function FortniteUI.AthenaHUDPlayerActionAlertBase.AlertPlayer
// 0x0020 (0x0020 - 0x0000)
struct AthenaHUDPlayerActionAlertBase_AlertPlayer final
{
public:
	EAthenaPlayerActionAlert                      Alert;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DetailText;                                        // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaHUDPlayerActionAlertBase_AlertPlayer) == 0x000008, "Wrong alignment on AthenaHUDPlayerActionAlertBase_AlertPlayer");
static_assert(sizeof(AthenaHUDPlayerActionAlertBase_AlertPlayer) == 0x000020, "Wrong size on AthenaHUDPlayerActionAlertBase_AlertPlayer");
static_assert(offsetof(AthenaHUDPlayerActionAlertBase_AlertPlayer, Alert) == 0x000000, "Member 'AthenaHUDPlayerActionAlertBase_AlertPlayer::Alert' has a wrong offset!");
static_assert(offsetof(AthenaHUDPlayerActionAlertBase_AlertPlayer, DetailText) == 0x000008, "Member 'AthenaHUDPlayerActionAlertBase_AlertPlayer::DetailText' has a wrong offset!");

// Function FortniteUI.FortItemDetailsModeActivatablePanel.HandleOnActiveWidgetChanged
// 0x0010 (0x0010 - 0x0000)
struct FortItemDetailsModeActivatablePanel_HandleOnActiveWidgetChanged final
{
public:
	class UWidget*                                ActiveWidget;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ActiveWidgetIndex;                                 // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemDetailsModeActivatablePanel_HandleOnActiveWidgetChanged) == 0x000008, "Wrong alignment on FortItemDetailsModeActivatablePanel_HandleOnActiveWidgetChanged");
static_assert(sizeof(FortItemDetailsModeActivatablePanel_HandleOnActiveWidgetChanged) == 0x000010, "Wrong size on FortItemDetailsModeActivatablePanel_HandleOnActiveWidgetChanged");
static_assert(offsetof(FortItemDetailsModeActivatablePanel_HandleOnActiveWidgetChanged, ActiveWidget) == 0x000000, "Member 'FortItemDetailsModeActivatablePanel_HandleOnActiveWidgetChanged::ActiveWidget' has a wrong offset!");
static_assert(offsetof(FortItemDetailsModeActivatablePanel_HandleOnActiveWidgetChanged, ActiveWidgetIndex) == 0x000008, "Member 'FortItemDetailsModeActivatablePanel_HandleOnActiveWidgetChanged::ActiveWidgetIndex' has a wrong offset!");

// Function FortniteUI.AthenaInventoryPanelBase.AdvanceSelection
// 0x0008 (0x0008 - 0x0000)
struct AthenaInventoryPanelBase_AdvanceSelection final
{
public:
	class UFortItemTileView*                      TileView;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaInventoryPanelBase_AdvanceSelection) == 0x000008, "Wrong alignment on AthenaInventoryPanelBase_AdvanceSelection");
static_assert(sizeof(AthenaInventoryPanelBase_AdvanceSelection) == 0x000008, "Wrong size on AthenaInventoryPanelBase_AdvanceSelection");
static_assert(offsetof(AthenaInventoryPanelBase_AdvanceSelection, TileView) == 0x000000, "Member 'AthenaInventoryPanelBase_AdvanceSelection::TileView' has a wrong offset!");

// Function FortniteUI.AthenaInventoryPanelBase.FocusTileView
// 0x0008 (0x0008 - 0x0000)
struct AthenaInventoryPanelBase_FocusTileView final
{
public:
	class UFortItemTileView*                      TileView;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaInventoryPanelBase_FocusTileView) == 0x000008, "Wrong alignment on AthenaInventoryPanelBase_FocusTileView");
static_assert(sizeof(AthenaInventoryPanelBase_FocusTileView) == 0x000008, "Wrong size on AthenaInventoryPanelBase_FocusTileView");
static_assert(offsetof(AthenaInventoryPanelBase_FocusTileView, TileView) == 0x000000, "Member 'AthenaInventoryPanelBase_FocusTileView::TileView' has a wrong offset!");

// Function FortniteUI.AthenaInventoryPanelBase.GetTileViewForItem
// 0x0010 (0x0010 - 0x0000)
struct AthenaInventoryPanelBase_GetTileViewForItem final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItemTileView*                      ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaInventoryPanelBase_GetTileViewForItem) == 0x000008, "Wrong alignment on AthenaInventoryPanelBase_GetTileViewForItem");
static_assert(sizeof(AthenaInventoryPanelBase_GetTileViewForItem) == 0x000010, "Wrong size on AthenaInventoryPanelBase_GetTileViewForItem");
static_assert(offsetof(AthenaInventoryPanelBase_GetTileViewForItem, Item) == 0x000000, "Member 'AthenaInventoryPanelBase_GetTileViewForItem::Item' has a wrong offset!");
static_assert(offsetof(AthenaInventoryPanelBase_GetTileViewForItem, ReturnValue) == 0x000008, "Member 'AthenaInventoryPanelBase_GetTileViewForItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.AthenaInventoryPanelBase.HandleCursorModeChanged
// 0x0018 (0x0018 - 0x0000)
struct AthenaInventoryPanelBase_HandleCursorModeChanged final
{
public:
	bool                                          bCursorModeEnabled;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ActionName;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            CursorModeContentWidget;                           // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaInventoryPanelBase_HandleCursorModeChanged) == 0x000008, "Wrong alignment on AthenaInventoryPanelBase_HandleCursorModeChanged");
static_assert(sizeof(AthenaInventoryPanelBase_HandleCursorModeChanged) == 0x000018, "Wrong size on AthenaInventoryPanelBase_HandleCursorModeChanged");
static_assert(offsetof(AthenaInventoryPanelBase_HandleCursorModeChanged, bCursorModeEnabled) == 0x000000, "Member 'AthenaInventoryPanelBase_HandleCursorModeChanged::bCursorModeEnabled' has a wrong offset!");
static_assert(offsetof(AthenaInventoryPanelBase_HandleCursorModeChanged, ActionName) == 0x000008, "Member 'AthenaInventoryPanelBase_HandleCursorModeChanged::ActionName' has a wrong offset!");
static_assert(offsetof(AthenaInventoryPanelBase_HandleCursorModeChanged, CursorModeContentWidget) == 0x000010, "Member 'AthenaInventoryPanelBase_HandleCursorModeChanged::CursorModeContentWidget' has a wrong offset!");

// Function FortniteUI.AthenaInventoryPanelBase.HandleCursorModeChangedBP
// 0x0018 (0x0018 - 0x0000)
struct AthenaInventoryPanelBase_HandleCursorModeChangedBP final
{
public:
	bool                                          bCursorModeEnabled;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ActionName;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            CursorModeContentWidget;                           // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaInventoryPanelBase_HandleCursorModeChangedBP) == 0x000008, "Wrong alignment on AthenaInventoryPanelBase_HandleCursorModeChangedBP");
static_assert(sizeof(AthenaInventoryPanelBase_HandleCursorModeChangedBP) == 0x000018, "Wrong size on AthenaInventoryPanelBase_HandleCursorModeChangedBP");
static_assert(offsetof(AthenaInventoryPanelBase_HandleCursorModeChangedBP, bCursorModeEnabled) == 0x000000, "Member 'AthenaInventoryPanelBase_HandleCursorModeChangedBP::bCursorModeEnabled' has a wrong offset!");
static_assert(offsetof(AthenaInventoryPanelBase_HandleCursorModeChangedBP, ActionName) == 0x000008, "Member 'AthenaInventoryPanelBase_HandleCursorModeChangedBP::ActionName' has a wrong offset!");
static_assert(offsetof(AthenaInventoryPanelBase_HandleCursorModeChangedBP, CursorModeContentWidget) == 0x000010, "Member 'AthenaInventoryPanelBase_HandleCursorModeChangedBP::CursorModeContentWidget' has a wrong offset!");

// Function FortniteUI.AthenaInventoryPanelBase.HandleInventoryItemClicked
// 0x0008 (0x0008 - 0x0000)
struct AthenaInventoryPanelBase_HandleInventoryItemClicked final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaInventoryPanelBase_HandleInventoryItemClicked) == 0x000008, "Wrong alignment on AthenaInventoryPanelBase_HandleInventoryItemClicked");
static_assert(sizeof(AthenaInventoryPanelBase_HandleInventoryItemClicked) == 0x000008, "Wrong size on AthenaInventoryPanelBase_HandleInventoryItemClicked");
static_assert(offsetof(AthenaInventoryPanelBase_HandleInventoryItemClicked, Item) == 0x000000, "Member 'AthenaInventoryPanelBase_HandleInventoryItemClicked::Item' has a wrong offset!");

// Function FortniteUI.AthenaInventoryPanelBase.HandleInventoryItemDoubleClicked
// 0x0008 (0x0008 - 0x0000)
struct AthenaInventoryPanelBase_HandleInventoryItemDoubleClicked final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaInventoryPanelBase_HandleInventoryItemDoubleClicked) == 0x000008, "Wrong alignment on AthenaInventoryPanelBase_HandleInventoryItemDoubleClicked");
static_assert(sizeof(AthenaInventoryPanelBase_HandleInventoryItemDoubleClicked) == 0x000008, "Wrong size on AthenaInventoryPanelBase_HandleInventoryItemDoubleClicked");
static_assert(offsetof(AthenaInventoryPanelBase_HandleInventoryItemDoubleClicked, Item) == 0x000000, "Member 'AthenaInventoryPanelBase_HandleInventoryItemDoubleClicked::Item' has a wrong offset!");

// Function FortniteUI.AthenaInventoryPanelBase.HandleInventoryItemHovered
// 0x0008 (0x0008 - 0x0000)
struct AthenaInventoryPanelBase_HandleInventoryItemHovered final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaInventoryPanelBase_HandleInventoryItemHovered) == 0x000008, "Wrong alignment on AthenaInventoryPanelBase_HandleInventoryItemHovered");
static_assert(sizeof(AthenaInventoryPanelBase_HandleInventoryItemHovered) == 0x000008, "Wrong size on AthenaInventoryPanelBase_HandleInventoryItemHovered");
static_assert(offsetof(AthenaInventoryPanelBase_HandleInventoryItemHovered, Item) == 0x000000, "Member 'AthenaInventoryPanelBase_HandleInventoryItemHovered::Item' has a wrong offset!");

// Function FortniteUI.AthenaInventoryPanelBase.HandleInventoryItemSelected
// 0x0008 (0x0008 - 0x0000)
struct AthenaInventoryPanelBase_HandleInventoryItemSelected final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaInventoryPanelBase_HandleInventoryItemSelected) == 0x000008, "Wrong alignment on AthenaInventoryPanelBase_HandleInventoryItemSelected");
static_assert(sizeof(AthenaInventoryPanelBase_HandleInventoryItemSelected) == 0x000008, "Wrong size on AthenaInventoryPanelBase_HandleInventoryItemSelected");
static_assert(offsetof(AthenaInventoryPanelBase_HandleInventoryItemSelected, Item) == 0x000000, "Member 'AthenaInventoryPanelBase_HandleInventoryItemSelected::Item' has a wrong offset!");

// Function FortniteUI.AthenaInventoryPanelBase.HandleQuickBarChangedBP
// 0x0001 (0x0001 - 0x0000)
struct AthenaInventoryPanelBase_HandleQuickBarChangedBP final
{
public:
	EFortQuickBars                                QuickBarType;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaInventoryPanelBase_HandleQuickBarChangedBP) == 0x000001, "Wrong alignment on AthenaInventoryPanelBase_HandleQuickBarChangedBP");
static_assert(sizeof(AthenaInventoryPanelBase_HandleQuickBarChangedBP) == 0x000001, "Wrong size on AthenaInventoryPanelBase_HandleQuickBarChangedBP");
static_assert(offsetof(AthenaInventoryPanelBase_HandleQuickBarChangedBP, QuickBarType) == 0x000000, "Member 'AthenaInventoryPanelBase_HandleQuickBarChangedBP::QuickBarType' has a wrong offset!");

// Function FortniteUI.AthenaInventoryPanelBase.HandleTileViewItemSelected
// 0x0010 (0x0010 - 0x0000)
struct AthenaInventoryPanelBase_HandleTileViewItemSelected final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSelected;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AthenaInventoryPanelBase_HandleTileViewItemSelected) == 0x000008, "Wrong alignment on AthenaInventoryPanelBase_HandleTileViewItemSelected");
static_assert(sizeof(AthenaInventoryPanelBase_HandleTileViewItemSelected) == 0x000010, "Wrong size on AthenaInventoryPanelBase_HandleTileViewItemSelected");
static_assert(offsetof(AthenaInventoryPanelBase_HandleTileViewItemSelected, Item) == 0x000000, "Member 'AthenaInventoryPanelBase_HandleTileViewItemSelected::Item' has a wrong offset!");
static_assert(offsetof(AthenaInventoryPanelBase_HandleTileViewItemSelected, bIsSelected) == 0x000008, "Member 'AthenaInventoryPanelBase_HandleTileViewItemSelected::bIsSelected' has a wrong offset!");

// Function FortniteUI.AthenaInventoryPanelBase.RequestEquip
// 0x0008 (0x0008 - 0x0000)
struct AthenaInventoryPanelBase_RequestEquip final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaInventoryPanelBase_RequestEquip) == 0x000008, "Wrong alignment on AthenaInventoryPanelBase_RequestEquip");
static_assert(sizeof(AthenaInventoryPanelBase_RequestEquip) == 0x000008, "Wrong size on AthenaInventoryPanelBase_RequestEquip");
static_assert(offsetof(AthenaInventoryPanelBase_RequestEquip, Item) == 0x000000, "Member 'AthenaInventoryPanelBase_RequestEquip::Item' has a wrong offset!");

// Function FortniteUI.FortGameFeedbackBase.AddButtonWithFeedbackType
// 0x0010 (0x0010 - 0x0000)
struct FortGameFeedbackBase_AddButtonWithFeedbackType final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortUIGameFeedbackType                       GameFeedbackType;                                  // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGameFeedbackBase_AddButtonWithFeedbackType) == 0x000008, "Wrong alignment on FortGameFeedbackBase_AddButtonWithFeedbackType");
static_assert(sizeof(FortGameFeedbackBase_AddButtonWithFeedbackType) == 0x000010, "Wrong size on FortGameFeedbackBase_AddButtonWithFeedbackType");
static_assert(offsetof(FortGameFeedbackBase_AddButtonWithFeedbackType, Button) == 0x000000, "Member 'FortGameFeedbackBase_AddButtonWithFeedbackType::Button' has a wrong offset!");
static_assert(offsetof(FortGameFeedbackBase_AddButtonWithFeedbackType, GameFeedbackType) == 0x000008, "Member 'FortGameFeedbackBase_AddButtonWithFeedbackType::GameFeedbackType' has a wrong offset!");

// Function FortniteUI.FortGameFeedbackBase.OnSelectionButtonChanged
// 0x0010 (0x0010 - 0x0000)
struct FortGameFeedbackBase_OnSelectionButtonChanged final
{
public:
	class UCommonButton*                          SelectedButton;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ButtonIndex;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGameFeedbackBase_OnSelectionButtonChanged) == 0x000008, "Wrong alignment on FortGameFeedbackBase_OnSelectionButtonChanged");
static_assert(sizeof(FortGameFeedbackBase_OnSelectionButtonChanged) == 0x000010, "Wrong size on FortGameFeedbackBase_OnSelectionButtonChanged");
static_assert(offsetof(FortGameFeedbackBase_OnSelectionButtonChanged, SelectedButton) == 0x000000, "Member 'FortGameFeedbackBase_OnSelectionButtonChanged::SelectedButton' has a wrong offset!");
static_assert(offsetof(FortGameFeedbackBase_OnSelectionButtonChanged, ButtonIndex) == 0x000008, "Member 'FortGameFeedbackBase_OnSelectionButtonChanged::ButtonIndex' has a wrong offset!");

// Function FortniteUI.AthenaLeaderboardScreenBase.OnActiveLeaderboardTabChanged
// 0x0004 (0x0004 - 0x0000)
struct AthenaLeaderboardScreenBase_OnActiveLeaderboardTabChanged final
{
public:
	int32                                         ActiveWidgetIndex;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaLeaderboardScreenBase_OnActiveLeaderboardTabChanged) == 0x000004, "Wrong alignment on AthenaLeaderboardScreenBase_OnActiveLeaderboardTabChanged");
static_assert(sizeof(AthenaLeaderboardScreenBase_OnActiveLeaderboardTabChanged) == 0x000004, "Wrong size on AthenaLeaderboardScreenBase_OnActiveLeaderboardTabChanged");
static_assert(offsetof(AthenaLeaderboardScreenBase_OnActiveLeaderboardTabChanged, ActiveWidgetIndex) == 0x000000, "Member 'AthenaLeaderboardScreenBase_OnActiveLeaderboardTabChanged::ActiveWidgetIndex' has a wrong offset!");

// Function FortniteUI.AthenaLeaderboardScreenBase.OnFriendsFilterChanged
// 0x0004 (0x0004 - 0x0000)
struct AthenaLeaderboardScreenBase_OnFriendsFilterChanged final
{
public:
	int32                                         FriendsFilterIndex;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaLeaderboardScreenBase_OnFriendsFilterChanged) == 0x000004, "Wrong alignment on AthenaLeaderboardScreenBase_OnFriendsFilterChanged");
static_assert(sizeof(AthenaLeaderboardScreenBase_OnFriendsFilterChanged) == 0x000004, "Wrong size on AthenaLeaderboardScreenBase_OnFriendsFilterChanged");
static_assert(offsetof(AthenaLeaderboardScreenBase_OnFriendsFilterChanged, FriendsFilterIndex) == 0x000000, "Member 'AthenaLeaderboardScreenBase_OnFriendsFilterChanged::FriendsFilterIndex' has a wrong offset!");

// Function FortniteUI.AthenaLeaderboardScreenBase.OnMatchTypeChanged
// 0x0004 (0x0004 - 0x0000)
struct AthenaLeaderboardScreenBase_OnMatchTypeChanged final
{
public:
	int32                                         MatchTypeIndex;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaLeaderboardScreenBase_OnMatchTypeChanged) == 0x000004, "Wrong alignment on AthenaLeaderboardScreenBase_OnMatchTypeChanged");
static_assert(sizeof(AthenaLeaderboardScreenBase_OnMatchTypeChanged) == 0x000004, "Wrong size on AthenaLeaderboardScreenBase_OnMatchTypeChanged");
static_assert(offsetof(AthenaLeaderboardScreenBase_OnMatchTypeChanged, MatchTypeIndex) == 0x000000, "Member 'AthenaLeaderboardScreenBase_OnMatchTypeChanged::MatchTypeIndex' has a wrong offset!");

// Function FortniteUI.AthenaLeaderboardScreenBase.OnUpdateLeaderboardListUI
// 0x0028 (0x0028 - 0x0000)
struct AthenaLeaderboardScreenBase_OnUpdateLeaderboardListUI final
{
public:
	bool                                          bWasSuccessful;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortLeaderboardRowProxyInstance*       LocalUserRow;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   QueryErrorStr;                                     // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaLeaderboardScreenBase_OnUpdateLeaderboardListUI) == 0x000008, "Wrong alignment on AthenaLeaderboardScreenBase_OnUpdateLeaderboardListUI");
static_assert(sizeof(AthenaLeaderboardScreenBase_OnUpdateLeaderboardListUI) == 0x000028, "Wrong size on AthenaLeaderboardScreenBase_OnUpdateLeaderboardListUI");
static_assert(offsetof(AthenaLeaderboardScreenBase_OnUpdateLeaderboardListUI, bWasSuccessful) == 0x000000, "Member 'AthenaLeaderboardScreenBase_OnUpdateLeaderboardListUI::bWasSuccessful' has a wrong offset!");
static_assert(offsetof(AthenaLeaderboardScreenBase_OnUpdateLeaderboardListUI, LocalUserRow) == 0x000008, "Member 'AthenaLeaderboardScreenBase_OnUpdateLeaderboardListUI::LocalUserRow' has a wrong offset!");
static_assert(offsetof(AthenaLeaderboardScreenBase_OnUpdateLeaderboardListUI, QueryErrorStr) == 0x000010, "Member 'AthenaLeaderboardScreenBase_OnUpdateLeaderboardListUI::QueryErrorStr' has a wrong offset!");

// Function FortniteUI.AthenaLeaderboardScreenBase.OnUpdateListHeader
// 0x0050 (0x0050 - 0x0000)
struct AthenaLeaderboardScreenBase_OnUpdateListHeader final
{
public:
	struct FAthenaPlaylistLeaderboardData         PlaylistTabData;                                   // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaLeaderboardScreenBase_OnUpdateListHeader) == 0x000008, "Wrong alignment on AthenaLeaderboardScreenBase_OnUpdateListHeader");
static_assert(sizeof(AthenaLeaderboardScreenBase_OnUpdateListHeader) == 0x000050, "Wrong size on AthenaLeaderboardScreenBase_OnUpdateListHeader");
static_assert(offsetof(AthenaLeaderboardScreenBase_OnUpdateListHeader, PlaylistTabData) == 0x000000, "Member 'AthenaLeaderboardScreenBase_OnUpdateListHeader::PlaylistTabData' has a wrong offset!");

// Function FortniteUI.AthenaLeaderboardScreenBase.OnUpdateTabButtonText
// 0x0058 (0x0058 - 0x0000)
struct AthenaLeaderboardScreenBase_OnUpdateTabButtonText final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAthenaPlaylistLeaderboardData         PlaylistTabData;                                   // 0x0008(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaLeaderboardScreenBase_OnUpdateTabButtonText) == 0x000008, "Wrong alignment on AthenaLeaderboardScreenBase_OnUpdateTabButtonText");
static_assert(sizeof(AthenaLeaderboardScreenBase_OnUpdateTabButtonText) == 0x000058, "Wrong size on AthenaLeaderboardScreenBase_OnUpdateTabButtonText");
static_assert(offsetof(AthenaLeaderboardScreenBase_OnUpdateTabButtonText, Button) == 0x000000, "Member 'AthenaLeaderboardScreenBase_OnUpdateTabButtonText::Button' has a wrong offset!");
static_assert(offsetof(AthenaLeaderboardScreenBase_OnUpdateTabButtonText, PlaylistTabData) == 0x000008, "Member 'AthenaLeaderboardScreenBase_OnUpdateTabButtonText::PlaylistTabData' has a wrong offset!");

// Function FortniteUI.AthenaLeaderboardScreenBase.CanShowFriendsOnlyLeaderboard
// 0x0001 (0x0001 - 0x0000)
struct AthenaLeaderboardScreenBase_CanShowFriendsOnlyLeaderboard final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaLeaderboardScreenBase_CanShowFriendsOnlyLeaderboard) == 0x000001, "Wrong alignment on AthenaLeaderboardScreenBase_CanShowFriendsOnlyLeaderboard");
static_assert(sizeof(AthenaLeaderboardScreenBase_CanShowFriendsOnlyLeaderboard) == 0x000001, "Wrong size on AthenaLeaderboardScreenBase_CanShowFriendsOnlyLeaderboard");
static_assert(offsetof(AthenaLeaderboardScreenBase_CanShowFriendsOnlyLeaderboard, ReturnValue) == 0x000000, "Member 'AthenaLeaderboardScreenBase_CanShowFriendsOnlyLeaderboard::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortExpeditionRewardsWidget.HandleCollectionExpeditionCompleted
// 0x0028 (0x0028 - 0x0000)
struct FortExpeditionRewardsWidget_HandleCollectionExpeditionCompleted final
{
public:
	bool                                          bMcpSuccess;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortExpeditionItem*              Expedition;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExpeditionSuccess;                                // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortItemInstanceQuantityPair>  Rewards;                                           // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionRewardsWidget_HandleCollectionExpeditionCompleted) == 0x000008, "Wrong alignment on FortExpeditionRewardsWidget_HandleCollectionExpeditionCompleted");
static_assert(sizeof(FortExpeditionRewardsWidget_HandleCollectionExpeditionCompleted) == 0x000028, "Wrong size on FortExpeditionRewardsWidget_HandleCollectionExpeditionCompleted");
static_assert(offsetof(FortExpeditionRewardsWidget_HandleCollectionExpeditionCompleted, bMcpSuccess) == 0x000000, "Member 'FortExpeditionRewardsWidget_HandleCollectionExpeditionCompleted::bMcpSuccess' has a wrong offset!");
static_assert(offsetof(FortExpeditionRewardsWidget_HandleCollectionExpeditionCompleted, Expedition) == 0x000008, "Member 'FortExpeditionRewardsWidget_HandleCollectionExpeditionCompleted::Expedition' has a wrong offset!");
static_assert(offsetof(FortExpeditionRewardsWidget_HandleCollectionExpeditionCompleted, bExpeditionSuccess) == 0x000010, "Member 'FortExpeditionRewardsWidget_HandleCollectionExpeditionCompleted::bExpeditionSuccess' has a wrong offset!");
static_assert(offsetof(FortExpeditionRewardsWidget_HandleCollectionExpeditionCompleted, Rewards) == 0x000018, "Member 'FortExpeditionRewardsWidget_HandleCollectionExpeditionCompleted::Rewards' has a wrong offset!");

// Function FortniteUI.FortExpeditionRewardsWidget.RefreshRewardsUI
// 0x0020 (0x0020 - 0x0000)
struct FortExpeditionRewardsWidget_RefreshRewardsUI final
{
public:
	const class UFortExpeditionItem*              Expedition;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExpeditionSucceeded;                              // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortItemInstanceQuantityPair>  Rewards;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionRewardsWidget_RefreshRewardsUI) == 0x000008, "Wrong alignment on FortExpeditionRewardsWidget_RefreshRewardsUI");
static_assert(sizeof(FortExpeditionRewardsWidget_RefreshRewardsUI) == 0x000020, "Wrong size on FortExpeditionRewardsWidget_RefreshRewardsUI");
static_assert(offsetof(FortExpeditionRewardsWidget_RefreshRewardsUI, Expedition) == 0x000000, "Member 'FortExpeditionRewardsWidget_RefreshRewardsUI::Expedition' has a wrong offset!");
static_assert(offsetof(FortExpeditionRewardsWidget_RefreshRewardsUI, bExpeditionSucceeded) == 0x000008, "Member 'FortExpeditionRewardsWidget_RefreshRewardsUI::bExpeditionSucceeded' has a wrong offset!");
static_assert(offsetof(FortExpeditionRewardsWidget_RefreshRewardsUI, Rewards) == 0x000010, "Member 'FortExpeditionRewardsWidget_RefreshRewardsUI::Rewards' has a wrong offset!");

// Function FortniteUI.AthenaLobbyBase.OnBeginCursorOverPlayer
// 0x0004 (0x0004 - 0x0000)
struct AthenaLobbyBase_OnBeginCursorOverPlayer final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaLobbyBase_OnBeginCursorOverPlayer) == 0x000004, "Wrong alignment on AthenaLobbyBase_OnBeginCursorOverPlayer");
static_assert(sizeof(AthenaLobbyBase_OnBeginCursorOverPlayer) == 0x000004, "Wrong size on AthenaLobbyBase_OnBeginCursorOverPlayer");
static_assert(offsetof(AthenaLobbyBase_OnBeginCursorOverPlayer, PlayerIndex) == 0x000000, "Member 'AthenaLobbyBase_OnBeginCursorOverPlayer::PlayerIndex' has a wrong offset!");

// Function FortniteUI.AthenaLobbyBase.OnEndCursorOverPlayer
// 0x0004 (0x0004 - 0x0000)
struct AthenaLobbyBase_OnEndCursorOverPlayer final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaLobbyBase_OnEndCursorOverPlayer) == 0x000004, "Wrong alignment on AthenaLobbyBase_OnEndCursorOverPlayer");
static_assert(sizeof(AthenaLobbyBase_OnEndCursorOverPlayer) == 0x000004, "Wrong size on AthenaLobbyBase_OnEndCursorOverPlayer");
static_assert(offsetof(AthenaLobbyBase_OnEndCursorOverPlayer, PlayerIndex) == 0x000000, "Member 'AthenaLobbyBase_OnEndCursorOverPlayer::PlayerIndex' has a wrong offset!");

// Function FortniteUI.AthenaLobbyBase.OnPlayerClicked
// 0x0004 (0x0004 - 0x0000)
struct AthenaLobbyBase_OnPlayerClicked final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaLobbyBase_OnPlayerClicked) == 0x000004, "Wrong alignment on AthenaLobbyBase_OnPlayerClicked");
static_assert(sizeof(AthenaLobbyBase_OnPlayerClicked) == 0x000004, "Wrong size on AthenaLobbyBase_OnPlayerClicked");
static_assert(offsetof(AthenaLobbyBase_OnPlayerClicked, PlayerIndex) == 0x000000, "Member 'AthenaLobbyBase_OnPlayerClicked::PlayerIndex' has a wrong offset!");

// Function FortniteUI.AthenaMatchReadyDesktopPopup.UserDismissedDialog
// 0x0001 (0x0001 - 0x0000)
struct AthenaMatchReadyDesktopPopup_UserDismissedDialog final
{
public:
	bool                                          bBringToFront;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaMatchReadyDesktopPopup_UserDismissedDialog) == 0x000001, "Wrong alignment on AthenaMatchReadyDesktopPopup_UserDismissedDialog");
static_assert(sizeof(AthenaMatchReadyDesktopPopup_UserDismissedDialog) == 0x000001, "Wrong size on AthenaMatchReadyDesktopPopup_UserDismissedDialog");
static_assert(offsetof(AthenaMatchReadyDesktopPopup_UserDismissedDialog, bBringToFront) == 0x000000, "Member 'AthenaMatchReadyDesktopPopup_UserDismissedDialog::bBringToFront' has a wrong offset!");

// Function FortniteUI.FortMultiSizeImage.SetBrushSize
// 0x0001 (0x0001 - 0x0000)
struct FortMultiSizeImage_SetBrushSize final
{
public:
	EFortBrushSize                                Param_BrushSize;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMultiSizeImage_SetBrushSize) == 0x000001, "Wrong alignment on FortMultiSizeImage_SetBrushSize");
static_assert(sizeof(FortMultiSizeImage_SetBrushSize) == 0x000001, "Wrong size on FortMultiSizeImage_SetBrushSize");
static_assert(offsetof(FortMultiSizeImage_SetBrushSize, Param_BrushSize) == 0x000000, "Member 'FortMultiSizeImage_SetBrushSize::Param_BrushSize' has a wrong offset!");

// Function FortniteUI.FortMultiSizeImage.SetColorAndOpacity
// 0x0010 (0x0010 - 0x0000)
struct FortMultiSizeImage_SetColorAndOpacity final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMultiSizeImage_SetColorAndOpacity) == 0x000004, "Wrong alignment on FortMultiSizeImage_SetColorAndOpacity");
static_assert(sizeof(FortMultiSizeImage_SetColorAndOpacity) == 0x000010, "Wrong size on FortMultiSizeImage_SetColorAndOpacity");
static_assert(offsetof(FortMultiSizeImage_SetColorAndOpacity, Color) == 0x000000, "Member 'FortMultiSizeImage_SetColorAndOpacity::Color' has a wrong offset!");

// Function FortniteUI.FortMultiSizeImage.SetMultiSizeBrush
// 0x02D0 (0x02D0 - 0x0000)
struct FortMultiSizeImage_SetMultiSizeBrush final
{
public:
	struct FFortMultiSizeBrush                    Param_MultiSizeBrush;                              // 0x0000(0x02D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMultiSizeImage_SetMultiSizeBrush) == 0x000008, "Wrong alignment on FortMultiSizeImage_SetMultiSizeBrush");
static_assert(sizeof(FortMultiSizeImage_SetMultiSizeBrush) == 0x0002D0, "Wrong size on FortMultiSizeImage_SetMultiSizeBrush");
static_assert(offsetof(FortMultiSizeImage_SetMultiSizeBrush, Param_MultiSizeBrush) == 0x000000, "Member 'FortMultiSizeImage_SetMultiSizeBrush::Param_MultiSizeBrush' has a wrong offset!");

// Function FortniteUI.FortSimpleItemConditionIconIndicator.SetItemToRepresent
// 0x0008 (0x0008 - 0x0000)
struct FortSimpleItemConditionIconIndicator_SetItemToRepresent final
{
public:
	class UFortItem*                              ItemToRepresent;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSimpleItemConditionIconIndicator_SetItemToRepresent) == 0x000008, "Wrong alignment on FortSimpleItemConditionIconIndicator_SetItemToRepresent");
static_assert(sizeof(FortSimpleItemConditionIconIndicator_SetItemToRepresent) == 0x000008, "Wrong size on FortSimpleItemConditionIconIndicator_SetItemToRepresent");
static_assert(offsetof(FortSimpleItemConditionIconIndicator_SetItemToRepresent, ItemToRepresent) == 0x000000, "Member 'FortSimpleItemConditionIconIndicator_SetItemToRepresent::ItemToRepresent' has a wrong offset!");

// Function FortniteUI.FortSimpleItemConditionIconIndicator.ShouldCollapseWhenConditionIsFalse
// 0x0001 (0x0001 - 0x0000)
struct FortSimpleItemConditionIconIndicator_ShouldCollapseWhenConditionIsFalse final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSimpleItemConditionIconIndicator_ShouldCollapseWhenConditionIsFalse) == 0x000001, "Wrong alignment on FortSimpleItemConditionIconIndicator_ShouldCollapseWhenConditionIsFalse");
static_assert(sizeof(FortSimpleItemConditionIconIndicator_ShouldCollapseWhenConditionIsFalse) == 0x000001, "Wrong size on FortSimpleItemConditionIconIndicator_ShouldCollapseWhenConditionIsFalse");
static_assert(offsetof(FortSimpleItemConditionIconIndicator_ShouldCollapseWhenConditionIsFalse, Value) == 0x000000, "Member 'FortSimpleItemConditionIconIndicator_ShouldCollapseWhenConditionIsFalse::Value' has a wrong offset!");

// Function FortniteUI.FortSimpleItemConditionIconIndicator.GetItemToRepresent
// 0x0008 (0x0008 - 0x0000)
struct FortSimpleItemConditionIconIndicator_GetItemToRepresent final
{
public:
	class UFortItem*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSimpleItemConditionIconIndicator_GetItemToRepresent) == 0x000008, "Wrong alignment on FortSimpleItemConditionIconIndicator_GetItemToRepresent");
static_assert(sizeof(FortSimpleItemConditionIconIndicator_GetItemToRepresent) == 0x000008, "Wrong size on FortSimpleItemConditionIconIndicator_GetItemToRepresent");
static_assert(offsetof(FortSimpleItemConditionIconIndicator_GetItemToRepresent, ReturnValue) == 0x000000, "Member 'FortSimpleItemConditionIconIndicator_GetItemToRepresent::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHealthWarningBase.AddIconToScreen
// 0x0008 (0x0008 - 0x0000)
struct FortHealthWarningBase_AddIconToScreen final
{
public:
	class UCommonLazyImage*                       Image;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHealthWarningBase_AddIconToScreen) == 0x000008, "Wrong alignment on FortHealthWarningBase_AddIconToScreen");
static_assert(sizeof(FortHealthWarningBase_AddIconToScreen) == 0x000008, "Wrong size on FortHealthWarningBase_AddIconToScreen");
static_assert(offsetof(FortHealthWarningBase_AddIconToScreen, Image) == 0x000000, "Member 'FortHealthWarningBase_AddIconToScreen::Image' has a wrong offset!");

// Function FortniteUI.FortHealthWarningBase.GetHealthWarningText
// 0x0018 (0x0018 - 0x0000)
struct FortHealthWarningBase_GetHealthWarningText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHealthWarningBase_GetHealthWarningText) == 0x000008, "Wrong alignment on FortHealthWarningBase_GetHealthWarningText");
static_assert(sizeof(FortHealthWarningBase_GetHealthWarningText) == 0x000018, "Wrong size on FortHealthWarningBase_GetHealthWarningText");
static_assert(offsetof(FortHealthWarningBase_GetHealthWarningText, ReturnValue) == 0x000000, "Member 'FortHealthWarningBase_GetHealthWarningText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.CheckFlag
// 0x0018 (0x0018 - 0x0000)
struct FortGlobalUIContext_CheckFlag final
{
public:
	class FString                                 FlagName;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFlagStatus                                   OutStatus;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGlobalUIContext_CheckFlag) == 0x000008, "Wrong alignment on FortGlobalUIContext_CheckFlag");
static_assert(sizeof(FortGlobalUIContext_CheckFlag) == 0x000018, "Wrong size on FortGlobalUIContext_CheckFlag");
static_assert(offsetof(FortGlobalUIContext_CheckFlag, FlagName) == 0x000000, "Member 'FortGlobalUIContext_CheckFlag::FlagName' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_CheckFlag, OutStatus) == 0x000010, "Member 'FortGlobalUIContext_CheckFlag::OutStatus' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.AutoSelectSubGame
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_AutoSelectSubGame final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_AutoSelectSubGame) == 0x000001, "Wrong alignment on FortGlobalUIContext_AutoSelectSubGame");
static_assert(sizeof(FortGlobalUIContext_AutoSelectSubGame) == 0x000001, "Wrong size on FortGlobalUIContext_AutoSelectSubGame");
static_assert(offsetof(FortGlobalUIContext_AutoSelectSubGame, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_AutoSelectSubGame::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.BindToFeatureStateAndInitialize
// 0x0018 (0x0018 - 0x0000)
struct FortGlobalUIContext_BindToFeatureStateAndInitialize final
{
public:
	EFortUIFeature                                Feature;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EFortUIFeature ChangedFeature, EFortUIFeatureState NewState, EFortUIFeatureStateReason StateReason)> Delegate;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_BindToFeatureStateAndInitialize) == 0x000004, "Wrong alignment on FortGlobalUIContext_BindToFeatureStateAndInitialize");
static_assert(sizeof(FortGlobalUIContext_BindToFeatureStateAndInitialize) == 0x000018, "Wrong size on FortGlobalUIContext_BindToFeatureStateAndInitialize");
static_assert(offsetof(FortGlobalUIContext_BindToFeatureStateAndInitialize, Feature) == 0x000000, "Member 'FortGlobalUIContext_BindToFeatureStateAndInitialize::Feature' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_BindToFeatureStateAndInitialize, Delegate) == 0x000008, "Member 'FortGlobalUIContext_BindToFeatureStateAndInitialize::Delegate' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.ClearForceSetFeatureState
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_ClearForceSetFeatureState final
{
public:
	EFortUIFeature                                Feature;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_ClearForceSetFeatureState) == 0x000001, "Wrong alignment on FortGlobalUIContext_ClearForceSetFeatureState");
static_assert(sizeof(FortGlobalUIContext_ClearForceSetFeatureState) == 0x000001, "Wrong size on FortGlobalUIContext_ClearForceSetFeatureState");
static_assert(offsetof(FortGlobalUIContext_ClearForceSetFeatureState, Feature) == 0x000000, "Member 'FortGlobalUIContext_ClearForceSetFeatureState::Feature' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.ClearSelectionGroup
// 0x0008 (0x0008 - 0x0000)
struct FortGlobalUIContext_ClearSelectionGroup final
{
public:
	class FName                                   SelectionGroup;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_ClearSelectionGroup) == 0x000004, "Wrong alignment on FortGlobalUIContext_ClearSelectionGroup");
static_assert(sizeof(FortGlobalUIContext_ClearSelectionGroup) == 0x000008, "Wrong size on FortGlobalUIContext_ClearSelectionGroup");
static_assert(offsetof(FortGlobalUIContext_ClearSelectionGroup, SelectionGroup) == 0x000000, "Member 'FortGlobalUIContext_ClearSelectionGroup::SelectionGroup' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.CopyToClipboard
// 0x0010 (0x0010 - 0x0000)
struct FortGlobalUIContext_CopyToClipboard final
{
public:
	class FString                                 ClipboardText;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_CopyToClipboard) == 0x000008, "Wrong alignment on FortGlobalUIContext_CopyToClipboard");
static_assert(sizeof(FortGlobalUIContext_CopyToClipboard) == 0x000010, "Wrong size on FortGlobalUIContext_CopyToClipboard");
static_assert(offsetof(FortGlobalUIContext_CopyToClipboard, ClipboardText) == 0x000000, "Member 'FortGlobalUIContext_CopyToClipboard::ClipboardText' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.DisplayStateContent
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_DisplayStateContent final
{
public:
	bool                                          bDisplay;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_DisplayStateContent) == 0x000001, "Wrong alignment on FortGlobalUIContext_DisplayStateContent");
static_assert(sizeof(FortGlobalUIContext_DisplayStateContent) == 0x000001, "Wrong size on FortGlobalUIContext_DisplayStateContent");
static_assert(offsetof(FortGlobalUIContext_DisplayStateContent, bDisplay) == 0x000000, "Member 'FortGlobalUIContext_DisplayStateContent::bDisplay' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.ForceSetFeatureState
// 0x0003 (0x0003 - 0x0000)
struct FortGlobalUIContext_ForceSetFeatureState final
{
public:
	EFortUIFeature                                Feature;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortUIFeatureState                           ForcedState;                                       // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortUIFeatureStateReason                     Reason;                                            // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_ForceSetFeatureState) == 0x000001, "Wrong alignment on FortGlobalUIContext_ForceSetFeatureState");
static_assert(sizeof(FortGlobalUIContext_ForceSetFeatureState) == 0x000003, "Wrong size on FortGlobalUIContext_ForceSetFeatureState");
static_assert(offsetof(FortGlobalUIContext_ForceSetFeatureState, Feature) == 0x000000, "Member 'FortGlobalUIContext_ForceSetFeatureState::Feature' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_ForceSetFeatureState, ForcedState) == 0x000001, "Member 'FortGlobalUIContext_ForceSetFeatureState::ForcedState' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_ForceSetFeatureState, Reason) == 0x000002, "Member 'FortGlobalUIContext_ForceSetFeatureState::Reason' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetBackendName
// 0x0010 (0x0010 - 0x0000)
struct FortGlobalUIContext_GetBackendName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetBackendName) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetBackendName");
static_assert(sizeof(FortGlobalUIContext_GetBackendName) == 0x000010, "Wrong size on FortGlobalUIContext_GetBackendName");
static_assert(offsetof(FortGlobalUIContext_GetBackendName, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_GetBackendName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetConningDifficultyXpModifier
// 0x000C (0x000C - 0x0000)
struct FortGlobalUIContext_GetConningDifficultyXpModifier final
{
public:
	int32                                         TotalSkillPoints;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ContentDifficulty;                                 // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetConningDifficultyXpModifier) == 0x000004, "Wrong alignment on FortGlobalUIContext_GetConningDifficultyXpModifier");
static_assert(sizeof(FortGlobalUIContext_GetConningDifficultyXpModifier) == 0x00000C, "Wrong size on FortGlobalUIContext_GetConningDifficultyXpModifier");
static_assert(offsetof(FortGlobalUIContext_GetConningDifficultyXpModifier, TotalSkillPoints) == 0x000000, "Member 'FortGlobalUIContext_GetConningDifficultyXpModifier::TotalSkillPoints' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetConningDifficultyXpModifier, ContentDifficulty) == 0x000004, "Member 'FortGlobalUIContext_GetConningDifficultyXpModifier::ContentDifficulty' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetConningDifficultyXpModifier, ReturnValue) == 0x000008, "Member 'FortGlobalUIContext_GetConningDifficultyXpModifier::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetConningXpModifierMessage
// 0x0020 (0x0020 - 0x0000)
struct FortGlobalUIContext_GetConningXpModifierMessage final
{
public:
	int32                                         TotalSkillPoints;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ContentDifficulty;                                 // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetConningXpModifierMessage) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetConningXpModifierMessage");
static_assert(sizeof(FortGlobalUIContext_GetConningXpModifierMessage) == 0x000020, "Wrong size on FortGlobalUIContext_GetConningXpModifierMessage");
static_assert(offsetof(FortGlobalUIContext_GetConningXpModifierMessage, TotalSkillPoints) == 0x000000, "Member 'FortGlobalUIContext_GetConningXpModifierMessage::TotalSkillPoints' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetConningXpModifierMessage, ContentDifficulty) == 0x000004, "Member 'FortGlobalUIContext_GetConningXpModifierMessage::ContentDifficulty' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetConningXpModifierMessage, ReturnValue) == 0x000008, "Member 'FortGlobalUIContext_GetConningXpModifierMessage::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetDisplayXpValue
// 0x000C (0x000C - 0x0000)
struct FortGlobalUIContext_GetDisplayXpValue final
{
public:
	int32                                         StartingRealXp;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EndingRealXp;                                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetDisplayXpValue) == 0x000004, "Wrong alignment on FortGlobalUIContext_GetDisplayXpValue");
static_assert(sizeof(FortGlobalUIContext_GetDisplayXpValue) == 0x00000C, "Wrong size on FortGlobalUIContext_GetDisplayXpValue");
static_assert(offsetof(FortGlobalUIContext_GetDisplayXpValue, StartingRealXp) == 0x000000, "Member 'FortGlobalUIContext_GetDisplayXpValue::StartingRealXp' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetDisplayXpValue, EndingRealXp) == 0x000004, "Member 'FortGlobalUIContext_GetDisplayXpValue::EndingRealXp' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetDisplayXpValue, ReturnValue) == 0x000008, "Member 'FortGlobalUIContext_GetDisplayXpValue::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetLastMissionRewardReport
// 0x0008 (0x0008 - 0x0000)
struct FortGlobalUIContext_GetLastMissionRewardReport final
{
public:
	class UFortUIRewardReport*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetLastMissionRewardReport) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetLastMissionRewardReport");
static_assert(sizeof(FortGlobalUIContext_GetLastMissionRewardReport) == 0x000008, "Wrong size on FortGlobalUIContext_GetLastMissionRewardReport");
static_assert(offsetof(FortGlobalUIContext_GetLastMissionRewardReport, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_GetLastMissionRewardReport::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetMessageManager
// 0x0018 (0x0018 - 0x0000)
struct FortGlobalUIContext_GetMessageManager final
{
public:
	class FName                                   ManagerName;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCreatedNew;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUIMessageManager*                  ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetMessageManager) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetMessageManager");
static_assert(sizeof(FortGlobalUIContext_GetMessageManager) == 0x000018, "Wrong size on FortGlobalUIContext_GetMessageManager");
static_assert(offsetof(FortGlobalUIContext_GetMessageManager, ManagerName) == 0x000000, "Member 'FortGlobalUIContext_GetMessageManager::ManagerName' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetMessageManager, bCreatedNew) == 0x000008, "Member 'FortGlobalUIContext_GetMessageManager::bCreatedNew' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetMessageManager, ReturnValue) == 0x000010, "Member 'FortGlobalUIContext_GetMessageManager::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetNextNotification
// 0x0170 (0x0170 - 0x0000)
struct FortGlobalUIContext_GetNextNotification final
{
public:
	EFortNotificationQueueType                    NotificationQueueType;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortDialogDescription                 NotificationDescription;                           // 0x0010(0x0150)(Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0160(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_161[0xF];                                      // 0x0161(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGlobalUIContext_GetNextNotification) == 0x000010, "Wrong alignment on FortGlobalUIContext_GetNextNotification");
static_assert(sizeof(FortGlobalUIContext_GetNextNotification) == 0x000170, "Wrong size on FortGlobalUIContext_GetNextNotification");
static_assert(offsetof(FortGlobalUIContext_GetNextNotification, NotificationQueueType) == 0x000000, "Member 'FortGlobalUIContext_GetNextNotification::NotificationQueueType' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetNextNotification, NotificationDescription) == 0x000010, "Member 'FortGlobalUIContext_GetNextNotification::NotificationDescription' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetNextNotification, ReturnValue) == 0x000160, "Member 'FortGlobalUIContext_GetNextNotification::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetScoreReport
// 0x0008 (0x0008 - 0x0000)
struct FortGlobalUIContext_GetScoreReport final
{
public:
	class UFortUIScoreReport*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetScoreReport) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetScoreReport");
static_assert(sizeof(FortGlobalUIContext_GetScoreReport) == 0x000008, "Wrong size on FortGlobalUIContext_GetScoreReport");
static_assert(offsetof(FortGlobalUIContext_GetScoreReport, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_GetScoreReport::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetWatermark
// 0x0010 (0x0010 - 0x0000)
struct FortGlobalUIContext_GetWatermark final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetWatermark) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetWatermark");
static_assert(sizeof(FortGlobalUIContext_GetWatermark) == 0x000010, "Wrong size on FortGlobalUIContext_GetWatermark");
static_assert(offsetof(FortGlobalUIContext_GetWatermark, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_GetWatermark::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.HideBang
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_HideBang final
{
public:
	EFortBangType                                 Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_HideBang) == 0x000001, "Wrong alignment on FortGlobalUIContext_HideBang");
static_assert(sizeof(FortGlobalUIContext_HideBang) == 0x000001, "Wrong size on FortGlobalUIContext_HideBang");
static_assert(offsetof(FortGlobalUIContext_HideBang, Type) == 0x000000, "Member 'FortGlobalUIContext_HideBang::Type' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.InputActionHoldStarted
// 0x0010 (0x0010 - 0x0000)
struct FortGlobalUIContext_InputActionHoldStarted final
{
public:
	class FName                                   InputActionName;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HoldDuration;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGlobalUIContext_InputActionHoldStarted) == 0x000004, "Wrong alignment on FortGlobalUIContext_InputActionHoldStarted");
static_assert(sizeof(FortGlobalUIContext_InputActionHoldStarted) == 0x000010, "Wrong size on FortGlobalUIContext_InputActionHoldStarted");
static_assert(offsetof(FortGlobalUIContext_InputActionHoldStarted, InputActionName) == 0x000000, "Member 'FortGlobalUIContext_InputActionHoldStarted::InputActionName' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_InputActionHoldStarted, HoldDuration) == 0x000008, "Member 'FortGlobalUIContext_InputActionHoldStarted::HoldDuration' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.InputActionHoldStopped
// 0x0010 (0x0010 - 0x0000)
struct FortGlobalUIContext_InputActionHoldStopped final
{
public:
	class FName                                   InputActionName;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCompletedSuccessfully;                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGlobalUIContext_InputActionHoldStopped) == 0x000004, "Wrong alignment on FortGlobalUIContext_InputActionHoldStopped");
static_assert(sizeof(FortGlobalUIContext_InputActionHoldStopped) == 0x000010, "Wrong size on FortGlobalUIContext_InputActionHoldStopped");
static_assert(offsetof(FortGlobalUIContext_InputActionHoldStopped, InputActionName) == 0x000000, "Member 'FortGlobalUIContext_InputActionHoldStopped::InputActionName' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_InputActionHoldStopped, bCompletedSuccessfully) == 0x000008, "Member 'FortGlobalUIContext_InputActionHoldStopped::bCompletedSuccessfully' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsBluGloEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsBluGloEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsBluGloEnabled) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsBluGloEnabled");
static_assert(sizeof(FortGlobalUIContext_IsBluGloEnabled) == 0x000001, "Wrong size on FortGlobalUIContext_IsBluGloEnabled");
static_assert(offsetof(FortGlobalUIContext_IsBluGloEnabled, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsBluGloEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsDesktopPlatform
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsDesktopPlatform final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsDesktopPlatform) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsDesktopPlatform");
static_assert(sizeof(FortGlobalUIContext_IsDesktopPlatform) == 0x000001, "Wrong size on FortGlobalUIContext_IsDesktopPlatform");
static_assert(offsetof(FortGlobalUIContext_IsDesktopPlatform, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsDesktopPlatform::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsHUDVisible
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsHUDVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsHUDVisible) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsHUDVisible");
static_assert(sizeof(FortGlobalUIContext_IsHUDVisible) == 0x000001, "Wrong size on FortGlobalUIContext_IsHUDVisible");
static_assert(offsetof(FortGlobalUIContext_IsHUDVisible, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsHUDVisible::ReturnValue' has a wrong offset!");

// DelegateFunction FortniteUI.FortGlobalUIContext.OnLoadingScreenVisibilityChangedDelegate__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_OnLoadingScreenVisibilityChangedDelegate__DelegateSignature final
{
public:
	bool                                          IsVisible;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_OnLoadingScreenVisibilityChangedDelegate__DelegateSignature) == 0x000001, "Wrong alignment on FortGlobalUIContext_OnLoadingScreenVisibilityChangedDelegate__DelegateSignature");
static_assert(sizeof(FortGlobalUIContext_OnLoadingScreenVisibilityChangedDelegate__DelegateSignature) == 0x000001, "Wrong size on FortGlobalUIContext_OnLoadingScreenVisibilityChangedDelegate__DelegateSignature");
static_assert(offsetof(FortGlobalUIContext_OnLoadingScreenVisibilityChangedDelegate__DelegateSignature, IsVisible) == 0x000000, "Member 'FortGlobalUIContext_OnLoadingScreenVisibilityChangedDelegate__DelegateSignature::IsVisible' has a wrong offset!");

// DelegateFunction FortniteUI.FortGlobalUIContext.OnLocalPlayerControllerConnectionChangedDelegate__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_OnLocalPlayerControllerConnectionChangedDelegate__DelegateSignature final
{
public:
	bool                                          bConnected;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_OnLocalPlayerControllerConnectionChangedDelegate__DelegateSignature) == 0x000001, "Wrong alignment on FortGlobalUIContext_OnLocalPlayerControllerConnectionChangedDelegate__DelegateSignature");
static_assert(sizeof(FortGlobalUIContext_OnLocalPlayerControllerConnectionChangedDelegate__DelegateSignature) == 0x000001, "Wrong size on FortGlobalUIContext_OnLocalPlayerControllerConnectionChangedDelegate__DelegateSignature");
static_assert(offsetof(FortGlobalUIContext_OnLocalPlayerControllerConnectionChangedDelegate__DelegateSignature, bConnected) == 0x000000, "Member 'FortGlobalUIContext_OnLocalPlayerControllerConnectionChangedDelegate__DelegateSignature::bConnected' has a wrong offset!");

// DelegateFunction FortniteUI.FortGlobalUIContext.OnQueryFortBackendVersionDelegate__DelegateSignature
// 0x0098 (0x0098 - 0x0000)
struct FortGlobalUIContext_OnQueryFortBackendVersionDelegate__DelegateSignature final
{
public:
	struct FFortBackendVersion                    FortBackendVersion;                                // 0x0000(0x0098)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_OnQueryFortBackendVersionDelegate__DelegateSignature) == 0x000008, "Wrong alignment on FortGlobalUIContext_OnQueryFortBackendVersionDelegate__DelegateSignature");
static_assert(sizeof(FortGlobalUIContext_OnQueryFortBackendVersionDelegate__DelegateSignature) == 0x000098, "Wrong size on FortGlobalUIContext_OnQueryFortBackendVersionDelegate__DelegateSignature");
static_assert(offsetof(FortGlobalUIContext_OnQueryFortBackendVersionDelegate__DelegateSignature, FortBackendVersion) == 0x000000, "Member 'FortGlobalUIContext_OnQueryFortBackendVersionDelegate__DelegateSignature::FortBackendVersion' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.ProcessConfirmationResult
// 0x0190 (0x0190 - 0x0000)
struct FortGlobalUIContext_ProcessConfirmationResult final
{
public:
	EFortDialogResult                             InResult;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   InResultName;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortDialogDescription_NUI             ConfirmationDescription;                           // 0x0010(0x0170)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          bWaitingForLatentAction;                           // 0x0180(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortDialogExternalLatentActionHandle  WaitingDialogHandle;                               // 0x0184(0x0004)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_188[0x8];                                      // 0x0188(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGlobalUIContext_ProcessConfirmationResult) == 0x000010, "Wrong alignment on FortGlobalUIContext_ProcessConfirmationResult");
static_assert(sizeof(FortGlobalUIContext_ProcessConfirmationResult) == 0x000190, "Wrong size on FortGlobalUIContext_ProcessConfirmationResult");
static_assert(offsetof(FortGlobalUIContext_ProcessConfirmationResult, InResult) == 0x000000, "Member 'FortGlobalUIContext_ProcessConfirmationResult::InResult' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_ProcessConfirmationResult, InResultName) == 0x000008, "Member 'FortGlobalUIContext_ProcessConfirmationResult::InResultName' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_ProcessConfirmationResult, ConfirmationDescription) == 0x000010, "Member 'FortGlobalUIContext_ProcessConfirmationResult::ConfirmationDescription' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_ProcessConfirmationResult, bWaitingForLatentAction) == 0x000180, "Member 'FortGlobalUIContext_ProcessConfirmationResult::bWaitingForLatentAction' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_ProcessConfirmationResult, WaitingDialogHandle) == 0x000184, "Member 'FortGlobalUIContext_ProcessConfirmationResult::WaitingDialogHandle' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.ProcessNotificationResult
// 0x0160 (0x0160 - 0x0000)
struct FortGlobalUIContext_ProcessNotificationResult final
{
public:
	EFortDialogResult                             InResult;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortDialogDescription                 NotificationDescription;                           // 0x0010(0x0150)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_ProcessNotificationResult) == 0x000010, "Wrong alignment on FortGlobalUIContext_ProcessNotificationResult");
static_assert(sizeof(FortGlobalUIContext_ProcessNotificationResult) == 0x000160, "Wrong size on FortGlobalUIContext_ProcessNotificationResult");
static_assert(offsetof(FortGlobalUIContext_ProcessNotificationResult, InResult) == 0x000000, "Member 'FortGlobalUIContext_ProcessNotificationResult::InResult' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_ProcessNotificationResult, NotificationDescription) == 0x000010, "Member 'FortGlobalUIContext_ProcessNotificationResult::NotificationDescription' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.RegisterScriptedAction
// 0x0008 (0x0008 - 0x0000)
struct FortGlobalUIContext_RegisterScriptedAction final
{
public:
	TSubclassOf<class AFortScriptedAction>        ScriptedAction;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_RegisterScriptedAction) == 0x000008, "Wrong alignment on FortGlobalUIContext_RegisterScriptedAction");
static_assert(sizeof(FortGlobalUIContext_RegisterScriptedAction) == 0x000008, "Wrong size on FortGlobalUIContext_RegisterScriptedAction");
static_assert(offsetof(FortGlobalUIContext_RegisterScriptedAction, ScriptedAction) == 0x000000, "Member 'FortGlobalUIContext_RegisterScriptedAction::ScriptedAction' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.RegisterScriptedActions
// 0x0010 (0x0010 - 0x0000)
struct FortGlobalUIContext_RegisterScriptedActions final
{
public:
	TArray<TSubclassOf<class AFortScriptedAction>> ScriptedActions;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_RegisterScriptedActions) == 0x000008, "Wrong alignment on FortGlobalUIContext_RegisterScriptedActions");
static_assert(sizeof(FortGlobalUIContext_RegisterScriptedActions) == 0x000010, "Wrong size on FortGlobalUIContext_RegisterScriptedActions");
static_assert(offsetof(FortGlobalUIContext_RegisterScriptedActions, ScriptedActions) == 0x000000, "Member 'FortGlobalUIContext_RegisterScriptedActions::ScriptedActions' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.RegisterToReceiveNotifications
// 0x0018 (0x0018 - 0x0000)
struct FortGlobalUIContext_RegisterToReceiveNotifications final
{
public:
	EFortNotificationQueueType                    NotificationQueueType;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             InOnNotificationAvailable;                         // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_RegisterToReceiveNotifications) == 0x000004, "Wrong alignment on FortGlobalUIContext_RegisterToReceiveNotifications");
static_assert(sizeof(FortGlobalUIContext_RegisterToReceiveNotifications) == 0x000018, "Wrong size on FortGlobalUIContext_RegisterToReceiveNotifications");
static_assert(offsetof(FortGlobalUIContext_RegisterToReceiveNotifications, NotificationQueueType) == 0x000000, "Member 'FortGlobalUIContext_RegisterToReceiveNotifications::NotificationQueueType' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_RegisterToReceiveNotifications, InOnNotificationAvailable) == 0x000008, "Member 'FortGlobalUIContext_RegisterToReceiveNotifications::InOnNotificationAvailable' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.RemoveNotification
// 0x0160 (0x0160 - 0x0000)
struct FortGlobalUIContext_RemoveNotification final
{
public:
	EFortNotificationQueueType                    NotificationQueueType;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortDialogDescription                 NotificationDescription;                           // 0x0010(0x0150)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_RemoveNotification) == 0x000010, "Wrong alignment on FortGlobalUIContext_RemoveNotification");
static_assert(sizeof(FortGlobalUIContext_RemoveNotification) == 0x000160, "Wrong size on FortGlobalUIContext_RemoveNotification");
static_assert(offsetof(FortGlobalUIContext_RemoveNotification, NotificationQueueType) == 0x000000, "Member 'FortGlobalUIContext_RemoveNotification::NotificationQueueType' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_RemoveNotification, NotificationDescription) == 0x000010, "Member 'FortGlobalUIContext_RemoveNotification::NotificationDescription' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.SendExperienceRatingAnalytic
// 0x0060 (0x0060 - 0x0000)
struct FortGlobalUIContext_SendExperienceRatingAnalytic final
{
public:
	class FString                                 RatingType;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FeedbackSentBy;                                    // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   RatingQuestion;                                    // 0x0020(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         StarCount;                                         // 0x0038(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 GameSessionID;                                     // 0x0040(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Comment;                                           // 0x0050(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_SendExperienceRatingAnalytic) == 0x000008, "Wrong alignment on FortGlobalUIContext_SendExperienceRatingAnalytic");
static_assert(sizeof(FortGlobalUIContext_SendExperienceRatingAnalytic) == 0x000060, "Wrong size on FortGlobalUIContext_SendExperienceRatingAnalytic");
static_assert(offsetof(FortGlobalUIContext_SendExperienceRatingAnalytic, RatingType) == 0x000000, "Member 'FortGlobalUIContext_SendExperienceRatingAnalytic::RatingType' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_SendExperienceRatingAnalytic, FeedbackSentBy) == 0x000010, "Member 'FortGlobalUIContext_SendExperienceRatingAnalytic::FeedbackSentBy' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_SendExperienceRatingAnalytic, RatingQuestion) == 0x000020, "Member 'FortGlobalUIContext_SendExperienceRatingAnalytic::RatingQuestion' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_SendExperienceRatingAnalytic, StarCount) == 0x000038, "Member 'FortGlobalUIContext_SendExperienceRatingAnalytic::StarCount' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_SendExperienceRatingAnalytic, GameSessionID) == 0x000040, "Member 'FortGlobalUIContext_SendExperienceRatingAnalytic::GameSessionID' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_SendExperienceRatingAnalytic, Comment) == 0x000050, "Member 'FortGlobalUIContext_SendExperienceRatingAnalytic::Comment' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.SendUINavigationAnalytic
// 0x0018 (0x0018 - 0x0000)
struct FortGlobalUIContext_SendUINavigationAnalytic final
{
public:
	class FString                                 Destination;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUserInitiated;                                    // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGlobalUIContext_SendUINavigationAnalytic) == 0x000008, "Wrong alignment on FortGlobalUIContext_SendUINavigationAnalytic");
static_assert(sizeof(FortGlobalUIContext_SendUINavigationAnalytic) == 0x000018, "Wrong size on FortGlobalUIContext_SendUINavigationAnalytic");
static_assert(offsetof(FortGlobalUIContext_SendUINavigationAnalytic, Destination) == 0x000000, "Member 'FortGlobalUIContext_SendUINavigationAnalytic::Destination' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_SendUINavigationAnalytic, bUserInitiated) == 0x000010, "Member 'FortGlobalUIContext_SendUINavigationAnalytic::bUserInitiated' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.SetBangFromCount
// 0x0008 (0x0008 - 0x0000)
struct FortGlobalUIContext_SetBangFromCount final
{
public:
	EFortBangType                                 Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_SetBangFromCount) == 0x000004, "Wrong alignment on FortGlobalUIContext_SetBangFromCount");
static_assert(sizeof(FortGlobalUIContext_SetBangFromCount) == 0x000008, "Wrong size on FortGlobalUIContext_SetBangFromCount");
static_assert(offsetof(FortGlobalUIContext_SetBangFromCount, Type) == 0x000000, "Member 'FortGlobalUIContext_SetBangFromCount::Type' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_SetBangFromCount, Count) == 0x000004, "Member 'FortGlobalUIContext_SetBangFromCount::Count' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.SetCurrentInputPresetName
// 0x0010 (0x0010 - 0x0000)
struct FortGlobalUIContext_SetCurrentInputPresetName final
{
public:
	class FString                                 InputPresetName;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_SetCurrentInputPresetName) == 0x000008, "Wrong alignment on FortGlobalUIContext_SetCurrentInputPresetName");
static_assert(sizeof(FortGlobalUIContext_SetCurrentInputPresetName) == 0x000010, "Wrong size on FortGlobalUIContext_SetCurrentInputPresetName");
static_assert(offsetof(FortGlobalUIContext_SetCurrentInputPresetName, InputPresetName) == 0x000000, "Member 'FortGlobalUIContext_SetCurrentInputPresetName::InputPresetName' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.SetInputMode
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_SetInputMode final
{
public:
	EFortInputMode                                InMode;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_SetInputMode) == 0x000001, "Wrong alignment on FortGlobalUIContext_SetInputMode");
static_assert(sizeof(FortGlobalUIContext_SetInputMode) == 0x000001, "Wrong size on FortGlobalUIContext_SetInputMode");
static_assert(offsetof(FortGlobalUIContext_SetInputMode, InMode) == 0x000000, "Member 'FortGlobalUIContext_SetInputMode::InMode' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.SetRatingWidgetFeedbackTitle
// 0x0018 (0x0018 - 0x0000)
struct FortGlobalUIContext_SetRatingWidgetFeedbackTitle final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_SetRatingWidgetFeedbackTitle) == 0x000008, "Wrong alignment on FortGlobalUIContext_SetRatingWidgetFeedbackTitle");
static_assert(sizeof(FortGlobalUIContext_SetRatingWidgetFeedbackTitle) == 0x000018, "Wrong size on FortGlobalUIContext_SetRatingWidgetFeedbackTitle");
static_assert(offsetof(FortGlobalUIContext_SetRatingWidgetFeedbackTitle, Title) == 0x000000, "Member 'FortGlobalUIContext_SetRatingWidgetFeedbackTitle::Title' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.SetSubGame
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_SetSubGame final
{
public:
	ESubGame                                      SubGame;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_SetSubGame) == 0x000001, "Wrong alignment on FortGlobalUIContext_SetSubGame");
static_assert(sizeof(FortGlobalUIContext_SetSubGame) == 0x000001, "Wrong size on FortGlobalUIContext_SetSubGame");
static_assert(offsetof(FortGlobalUIContext_SetSubGame, SubGame) == 0x000000, "Member 'FortGlobalUIContext_SetSubGame::SubGame' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.ShowBang
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_ShowBang final
{
public:
	EFortBangType                                 Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_ShowBang) == 0x000001, "Wrong alignment on FortGlobalUIContext_ShowBang");
static_assert(sizeof(FortGlobalUIContext_ShowBang) == 0x000001, "Wrong size on FortGlobalUIContext_ShowBang");
static_assert(offsetof(FortGlobalUIContext_ShowBang, Type) == 0x000000, "Member 'FortGlobalUIContext_ShowBang::Type' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.ShowConsoleAccountPicker
// 0x0018 (0x0018 - 0x0000)
struct FortGlobalUIContext_ShowConsoleAccountPicker final
{
public:
	int32                                         ControllerIndex;                                   // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 ControllerIndex, bool bUserSwitched)> CompletionDelegate;                                // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_ShowConsoleAccountPicker) == 0x000004, "Wrong alignment on FortGlobalUIContext_ShowConsoleAccountPicker");
static_assert(sizeof(FortGlobalUIContext_ShowConsoleAccountPicker) == 0x000018, "Wrong size on FortGlobalUIContext_ShowConsoleAccountPicker");
static_assert(offsetof(FortGlobalUIContext_ShowConsoleAccountPicker, ControllerIndex) == 0x000000, "Member 'FortGlobalUIContext_ShowConsoleAccountPicker::ControllerIndex' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_ShowConsoleAccountPicker, CompletionDelegate) == 0x000008, "Member 'FortGlobalUIContext_ShowConsoleAccountPicker::CompletionDelegate' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.ShowWebURL
// 0x0018 (0x0018 - 0x0000)
struct FortGlobalUIContext_ShowWebURL final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortUrlType                                  URLType;                                           // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGlobalUIContext_ShowWebURL) == 0x000008, "Wrong alignment on FortGlobalUIContext_ShowWebURL");
static_assert(sizeof(FortGlobalUIContext_ShowWebURL) == 0x000018, "Wrong size on FortGlobalUIContext_ShowWebURL");
static_assert(offsetof(FortGlobalUIContext_ShowWebURL, URL) == 0x000000, "Member 'FortGlobalUIContext_ShowWebURL::URL' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_ShowWebURL, URLType) == 0x000010, "Member 'FortGlobalUIContext_ShowWebURL::URLType' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_ShowWebURL, ReturnValue) == 0x000011, "Member 'FortGlobalUIContext_ShowWebURL::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.UnbindToFeatureState
// 0x0018 (0x0018 - 0x0000)
struct FortGlobalUIContext_UnbindToFeatureState final
{
public:
	EFortUIFeature                                Feature;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EFortUIFeature ChangedFeature, EFortUIFeatureState NewState, EFortUIFeatureStateReason StateReason)> Delegate;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_UnbindToFeatureState) == 0x000004, "Wrong alignment on FortGlobalUIContext_UnbindToFeatureState");
static_assert(sizeof(FortGlobalUIContext_UnbindToFeatureState) == 0x000018, "Wrong size on FortGlobalUIContext_UnbindToFeatureState");
static_assert(offsetof(FortGlobalUIContext_UnbindToFeatureState, Feature) == 0x000000, "Member 'FortGlobalUIContext_UnbindToFeatureState::Feature' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_UnbindToFeatureState, Delegate) == 0x000008, "Member 'FortGlobalUIContext_UnbindToFeatureState::Delegate' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.UnregisterScriptedAction
// 0x0008 (0x0008 - 0x0000)
struct FortGlobalUIContext_UnregisterScriptedAction final
{
public:
	TSubclassOf<class AFortScriptedAction>        ScriptedAction;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_UnregisterScriptedAction) == 0x000008, "Wrong alignment on FortGlobalUIContext_UnregisterScriptedAction");
static_assert(sizeof(FortGlobalUIContext_UnregisterScriptedAction) == 0x000008, "Wrong size on FortGlobalUIContext_UnregisterScriptedAction");
static_assert(offsetof(FortGlobalUIContext_UnregisterScriptedAction, ScriptedAction) == 0x000000, "Member 'FortGlobalUIContext_UnregisterScriptedAction::ScriptedAction' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.UnregisterToReceiveNotifications
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_UnregisterToReceiveNotifications final
{
public:
	EFortNotificationQueueType                    NotificationQueueType;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_UnregisterToReceiveNotifications) == 0x000001, "Wrong alignment on FortGlobalUIContext_UnregisterToReceiveNotifications");
static_assert(sizeof(FortGlobalUIContext_UnregisterToReceiveNotifications) == 0x000001, "Wrong size on FortGlobalUIContext_UnregisterToReceiveNotifications");
static_assert(offsetof(FortGlobalUIContext_UnregisterToReceiveNotifications, NotificationQueueType) == 0x000000, "Member 'FortGlobalUIContext_UnregisterToReceiveNotifications::NotificationQueueType' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.AllowLogout
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_AllowLogout final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_AllowLogout) == 0x000001, "Wrong alignment on FortGlobalUIContext_AllowLogout");
static_assert(sizeof(FortGlobalUIContext_AllowLogout) == 0x000001, "Wrong size on FortGlobalUIContext_AllowLogout");
static_assert(offsetof(FortGlobalUIContext_AllowLogout, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_AllowLogout::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.AllowQuit
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_AllowQuit final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_AllowQuit) == 0x000001, "Wrong alignment on FortGlobalUIContext_AllowQuit");
static_assert(sizeof(FortGlobalUIContext_AllowQuit) == 0x000001, "Wrong size on FortGlobalUIContext_AllowQuit");
static_assert(offsetof(FortGlobalUIContext_AllowQuit, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_AllowQuit::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.CanMatchmake
// 0x0028 (0x0028 - 0x0000)
struct FortGlobalUIContext_CanMatchmake final
{
public:
	ESubGame                                      SubGame;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DenialReason;                                      // 0x0008(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGlobalUIContext_CanMatchmake) == 0x000008, "Wrong alignment on FortGlobalUIContext_CanMatchmake");
static_assert(sizeof(FortGlobalUIContext_CanMatchmake) == 0x000028, "Wrong size on FortGlobalUIContext_CanMatchmake");
static_assert(offsetof(FortGlobalUIContext_CanMatchmake, SubGame) == 0x000000, "Member 'FortGlobalUIContext_CanMatchmake::SubGame' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_CanMatchmake, DenialReason) == 0x000008, "Member 'FortGlobalUIContext_CanMatchmake::DenialReason' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_CanMatchmake, ReturnValue) == 0x000020, "Member 'FortGlobalUIContext_CanMatchmake::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.CanPlay
// 0x0028 (0x0028 - 0x0000)
struct FortGlobalUIContext_CanPlay final
{
public:
	ESubGame                                      SubGame;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DenialReason;                                      // 0x0008(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGlobalUIContext_CanPlay) == 0x000008, "Wrong alignment on FortGlobalUIContext_CanPlay");
static_assert(sizeof(FortGlobalUIContext_CanPlay) == 0x000028, "Wrong size on FortGlobalUIContext_CanPlay");
static_assert(offsetof(FortGlobalUIContext_CanPlay, SubGame) == 0x000000, "Member 'FortGlobalUIContext_CanPlay::SubGame' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_CanPlay, DenialReason) == 0x000008, "Member 'FortGlobalUIContext_CanPlay::DenialReason' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_CanPlay, ReturnValue) == 0x000020, "Member 'FortGlobalUIContext_CanPlay::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.ContentInstallationProgress
// 0x0004 (0x0004 - 0x0000)
struct FortGlobalUIContext_ContentInstallationProgress final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_ContentInstallationProgress) == 0x000004, "Wrong alignment on FortGlobalUIContext_ContentInstallationProgress");
static_assert(sizeof(FortGlobalUIContext_ContentInstallationProgress) == 0x000004, "Wrong size on FortGlobalUIContext_ContentInstallationProgress");
static_assert(offsetof(FortGlobalUIContext_ContentInstallationProgress, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_ContentInstallationProgress::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetAllPlayerInputPresetNames
// 0x0020 (0x0020 - 0x0000)
struct FortGlobalUIContext_GetAllPlayerInputPresetNames final
{
public:
	TArray<class FString>                         InputPresetNames;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                           InputPresetFriendlyNames;                          // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetAllPlayerInputPresetNames) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetAllPlayerInputPresetNames");
static_assert(sizeof(FortGlobalUIContext_GetAllPlayerInputPresetNames) == 0x000020, "Wrong size on FortGlobalUIContext_GetAllPlayerInputPresetNames");
static_assert(offsetof(FortGlobalUIContext_GetAllPlayerInputPresetNames, InputPresetNames) == 0x000000, "Member 'FortGlobalUIContext_GetAllPlayerInputPresetNames::InputPresetNames' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetAllPlayerInputPresetNames, InputPresetFriendlyNames) == 0x000010, "Member 'FortGlobalUIContext_GetAllPlayerInputPresetNames::InputPresetFriendlyNames' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetAllPlayerInputPresetNamesForSubGame
// 0x0028 (0x0028 - 0x0000)
struct FortGlobalUIContext_GetAllPlayerInputPresetNamesForSubGame final
{
public:
	ESubGame                                      SubGame;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         InputPresetNames;                                  // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FText>                           InputPresetFriendlyNames;                          // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetAllPlayerInputPresetNamesForSubGame) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetAllPlayerInputPresetNamesForSubGame");
static_assert(sizeof(FortGlobalUIContext_GetAllPlayerInputPresetNamesForSubGame) == 0x000028, "Wrong size on FortGlobalUIContext_GetAllPlayerInputPresetNamesForSubGame");
static_assert(offsetof(FortGlobalUIContext_GetAllPlayerInputPresetNamesForSubGame, SubGame) == 0x000000, "Member 'FortGlobalUIContext_GetAllPlayerInputPresetNamesForSubGame::SubGame' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetAllPlayerInputPresetNamesForSubGame, InputPresetNames) == 0x000008, "Member 'FortGlobalUIContext_GetAllPlayerInputPresetNamesForSubGame::InputPresetNames' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetAllPlayerInputPresetNamesForSubGame, InputPresetFriendlyNames) == 0x000018, "Member 'FortGlobalUIContext_GetAllPlayerInputPresetNamesForSubGame::InputPresetFriendlyNames' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetAthenaCodeOfConductURL
// 0x0010 (0x0010 - 0x0000)
struct FortGlobalUIContext_GetAthenaCodeOfConductURL final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetAthenaCodeOfConductURL) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetAthenaCodeOfConductURL");
static_assert(sizeof(FortGlobalUIContext_GetAthenaCodeOfConductURL) == 0x000010, "Wrong size on FortGlobalUIContext_GetAthenaCodeOfConductURL");
static_assert(offsetof(FortGlobalUIContext_GetAthenaCodeOfConductURL, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_GetAthenaCodeOfConductURL::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetCollectionBookManager
// 0x0008 (0x0008 - 0x0000)
struct FortGlobalUIContext_GetCollectionBookManager final
{
public:
	class UFortCollectionBookManager*             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetCollectionBookManager) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetCollectionBookManager");
static_assert(sizeof(FortGlobalUIContext_GetCollectionBookManager) == 0x000008, "Wrong size on FortGlobalUIContext_GetCollectionBookManager");
static_assert(offsetof(FortGlobalUIContext_GetCollectionBookManager, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_GetCollectionBookManager::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetCurrentInputPresetName
// 0x0010 (0x0010 - 0x0000)
struct FortGlobalUIContext_GetCurrentInputPresetName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetCurrentInputPresetName) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetCurrentInputPresetName");
static_assert(sizeof(FortGlobalUIContext_GetCurrentInputPresetName) == 0x000010, "Wrong size on FortGlobalUIContext_GetCurrentInputPresetName");
static_assert(offsetof(FortGlobalUIContext_GetCurrentInputPresetName, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_GetCurrentInputPresetName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetFeatureState
// 0x0003 (0x0003 - 0x0000)
struct FortGlobalUIContext_GetFeatureState final
{
public:
	EFortUIFeature                                Feature;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortUIFeatureState                           OutFeatureState;                                   // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortUIFeatureStateReason                     OutReason;                                         // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetFeatureState) == 0x000001, "Wrong alignment on FortGlobalUIContext_GetFeatureState");
static_assert(sizeof(FortGlobalUIContext_GetFeatureState) == 0x000003, "Wrong size on FortGlobalUIContext_GetFeatureState");
static_assert(offsetof(FortGlobalUIContext_GetFeatureState, Feature) == 0x000000, "Member 'FortGlobalUIContext_GetFeatureState::Feature' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetFeatureState, OutFeatureState) == 0x000001, "Member 'FortGlobalUIContext_GetFeatureState::OutFeatureState' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetFeatureState, OutReason) == 0x000002, "Member 'FortGlobalUIContext_GetFeatureState::OutReason' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetFeatureStateReasonText
// 0x0020 (0x0020 - 0x0000)
struct FortGlobalUIContext_GetFeatureStateReasonText final
{
public:
	EFortUIFeatureStateReason                     Reason;                                            // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetFeatureStateReasonText) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetFeatureStateReasonText");
static_assert(sizeof(FortGlobalUIContext_GetFeatureStateReasonText) == 0x000020, "Wrong size on FortGlobalUIContext_GetFeatureStateReasonText");
static_assert(offsetof(FortGlobalUIContext_GetFeatureStateReasonText, Reason) == 0x000000, "Member 'FortGlobalUIContext_GetFeatureStateReasonText::Reason' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetFeatureStateReasonText, ReturnValue) == 0x000008, "Member 'FortGlobalUIContext_GetFeatureStateReasonText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetFeedbackTitle
// 0x0018 (0x0018 - 0x0000)
struct FortGlobalUIContext_GetFeedbackTitle final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetFeedbackTitle) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetFeedbackTitle");
static_assert(sizeof(FortGlobalUIContext_GetFeedbackTitle) == 0x000018, "Wrong size on FortGlobalUIContext_GetFeedbackTitle");
static_assert(offsetof(FortGlobalUIContext_GetFeedbackTitle, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_GetFeedbackTitle::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetInputDetailsForAction
// 0x0030 (0x0030 - 0x0000)
struct FortGlobalUIContext_GetInputDetailsForAction final
{
public:
	class FName                                   Action;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortInputActionDetails                InputActionDetails;                                // 0x0008(0x0020)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGlobalUIContext_GetInputDetailsForAction) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetInputDetailsForAction");
static_assert(sizeof(FortGlobalUIContext_GetInputDetailsForAction) == 0x000030, "Wrong size on FortGlobalUIContext_GetInputDetailsForAction");
static_assert(offsetof(FortGlobalUIContext_GetInputDetailsForAction, Action) == 0x000000, "Member 'FortGlobalUIContext_GetInputDetailsForAction::Action' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetInputDetailsForAction, InputActionDetails) == 0x000008, "Member 'FortGlobalUIContext_GetInputDetailsForAction::InputActionDetails' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetInputDetailsForAction, ReturnValue) == 0x000028, "Member 'FortGlobalUIContext_GetInputDetailsForAction::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetInputPriority
// 0x0008 (0x0008 - 0x0000)
struct FortGlobalUIContext_GetInputPriority final
{
public:
	EInputPriority                                Priority;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetInputPriority) == 0x000004, "Wrong alignment on FortGlobalUIContext_GetInputPriority");
static_assert(sizeof(FortGlobalUIContext_GetInputPriority) == 0x000008, "Wrong size on FortGlobalUIContext_GetInputPriority");
static_assert(offsetof(FortGlobalUIContext_GetInputPriority, Priority) == 0x000000, "Member 'FortGlobalUIContext_GetInputPriority::Priority' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetInputPriority, ReturnValue) == 0x000004, "Member 'FortGlobalUIContext_GetInputPriority::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetKeyForAction
// 0x0020 (0x0020 - 0x0000)
struct FortGlobalUIContext_GetKeyForAction final
{
public:
	class FName                                   Action;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetKeyForAction) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetKeyForAction");
static_assert(sizeof(FortGlobalUIContext_GetKeyForAction) == 0x000020, "Wrong size on FortGlobalUIContext_GetKeyForAction");
static_assert(offsetof(FortGlobalUIContext_GetKeyForAction, Action) == 0x000000, "Member 'FortGlobalUIContext_GetKeyForAction::Action' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetKeyForAction, ReturnValue) == 0x000008, "Member 'FortGlobalUIContext_GetKeyForAction::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetKeyTextForAction
// 0x0040 (0x0040 - 0x0000)
struct FortGlobalUIContext_GetKeyTextForAction final
{
public:
	class FName                                   Action;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ButtonActionType;                                  // 0x0008(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          bUseAbbreviatedText;                               // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0028(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetKeyTextForAction) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetKeyTextForAction");
static_assert(sizeof(FortGlobalUIContext_GetKeyTextForAction) == 0x000040, "Wrong size on FortGlobalUIContext_GetKeyTextForAction");
static_assert(offsetof(FortGlobalUIContext_GetKeyTextForAction, Action) == 0x000000, "Member 'FortGlobalUIContext_GetKeyTextForAction::Action' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetKeyTextForAction, ButtonActionType) == 0x000008, "Member 'FortGlobalUIContext_GetKeyTextForAction::ButtonActionType' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetKeyTextForAction, bUseAbbreviatedText) == 0x000020, "Member 'FortGlobalUIContext_GetKeyTextForAction::bUseAbbreviatedText' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetKeyTextForAction, ReturnValue) == 0x000028, "Member 'FortGlobalUIContext_GetKeyTextForAction::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetLastGameSummaryInfo
// 0x0018 (0x0018 - 0x0000)
struct FortGlobalUIContext_GetLastGameSummaryInfo final
{
public:
	struct FGameSummaryInfo                       ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetLastGameSummaryInfo) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetLastGameSummaryInfo");
static_assert(sizeof(FortGlobalUIContext_GetLastGameSummaryInfo) == 0x000018, "Wrong size on FortGlobalUIContext_GetLastGameSummaryInfo");
static_assert(offsetof(FortGlobalUIContext_GetLastGameSummaryInfo, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_GetLastGameSummaryInfo::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetLastMissionInfo
// 0x0048 (0x0048 - 0x0000)
struct FortGlobalUIContext_GetLastMissionInfo final
{
public:
	struct FFortLastMissionInfo                   LastMissionInfo;                                   // 0x0000(0x0048)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetLastMissionInfo) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetLastMissionInfo");
static_assert(sizeof(FortGlobalUIContext_GetLastMissionInfo) == 0x000048, "Wrong size on FortGlobalUIContext_GetLastMissionInfo");
static_assert(offsetof(FortGlobalUIContext_GetLastMissionInfo, LastMissionInfo) == 0x000000, "Member 'FortGlobalUIContext_GetLastMissionInfo::LastMissionInfo' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetPlatformDisplayName
// 0x0018 (0x0018 - 0x0000)
struct FortGlobalUIContext_GetPlatformDisplayName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetPlatformDisplayName) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetPlatformDisplayName");
static_assert(sizeof(FortGlobalUIContext_GetPlatformDisplayName) == 0x000018, "Wrong size on FortGlobalUIContext_GetPlatformDisplayName");
static_assert(offsetof(FortGlobalUIContext_GetPlatformDisplayName, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_GetPlatformDisplayName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetQuestManager
// 0x0010 (0x0010 - 0x0000)
struct FortGlobalUIContext_GetQuestManager final
{
public:
	ESubGame                                      SubGame;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestManager*                      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetQuestManager) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetQuestManager");
static_assert(sizeof(FortGlobalUIContext_GetQuestManager) == 0x000010, "Wrong size on FortGlobalUIContext_GetQuestManager");
static_assert(offsetof(FortGlobalUIContext_GetQuestManager, SubGame) == 0x000000, "Member 'FortGlobalUIContext_GetQuestManager::SubGame' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetQuestManager, ReturnValue) == 0x000008, "Member 'FortGlobalUIContext_GetQuestManager::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetSeasonalEventManager
// 0x0008 (0x0008 - 0x0000)
struct FortGlobalUIContext_GetSeasonalEventManager final
{
public:
	class UFortSeasonalEventManager*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetSeasonalEventManager) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetSeasonalEventManager");
static_assert(sizeof(FortGlobalUIContext_GetSeasonalEventManager) == 0x000008, "Wrong size on FortGlobalUIContext_GetSeasonalEventManager");
static_assert(offsetof(FortGlobalUIContext_GetSeasonalEventManager, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_GetSeasonalEventManager::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetSessionId
// 0x0010 (0x0010 - 0x0000)
struct FortGlobalUIContext_GetSessionId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetSessionId) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetSessionId");
static_assert(sizeof(FortGlobalUIContext_GetSessionId) == 0x000010, "Wrong size on FortGlobalUIContext_GetSessionId");
static_assert(offsetof(FortGlobalUIContext_GetSessionId, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_GetSessionId::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetStringNameOfEventPlaylist
// 0x0018 (0x0018 - 0x0000)
struct FortGlobalUIContext_GetStringNameOfEventPlaylist final
{
public:
	EFortAthenaPlaylist                           Playlist;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetStringNameOfEventPlaylist) == 0x000008, "Wrong alignment on FortGlobalUIContext_GetStringNameOfEventPlaylist");
static_assert(sizeof(FortGlobalUIContext_GetStringNameOfEventPlaylist) == 0x000018, "Wrong size on FortGlobalUIContext_GetStringNameOfEventPlaylist");
static_assert(offsetof(FortGlobalUIContext_GetStringNameOfEventPlaylist, Playlist) == 0x000000, "Member 'FortGlobalUIContext_GetStringNameOfEventPlaylist::Playlist' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_GetStringNameOfEventPlaylist, ReturnValue) == 0x000008, "Member 'FortGlobalUIContext_GetStringNameOfEventPlaylist::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.GetSubGame
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_GetSubGame final
{
public:
	ESubGame                                      ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_GetSubGame) == 0x000001, "Wrong alignment on FortGlobalUIContext_GetSubGame");
static_assert(sizeof(FortGlobalUIContext_GetSubGame) == 0x000001, "Wrong size on FortGlobalUIContext_GetSubGame");
static_assert(offsetof(FortGlobalUIContext_GetSubGame, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_GetSubGame::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.HasAccesstoMultipleSubGames
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_HasAccesstoMultipleSubGames final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_HasAccesstoMultipleSubGames) == 0x000001, "Wrong alignment on FortGlobalUIContext_HasAccesstoMultipleSubGames");
static_assert(sizeof(FortGlobalUIContext_HasAccesstoMultipleSubGames) == 0x000001, "Wrong size on FortGlobalUIContext_HasAccesstoMultipleSubGames");
static_assert(offsetof(FortGlobalUIContext_HasAccesstoMultipleSubGames, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_HasAccesstoMultipleSubGames::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.HasCompletedOnboardingObjective
// 0x0018 (0x0018 - 0x0000)
struct FortGlobalUIContext_HasCompletedOnboardingObjective final
{
public:
	struct FDataTableRowHandle                    Objective;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGlobalUIContext_HasCompletedOnboardingObjective) == 0x000008, "Wrong alignment on FortGlobalUIContext_HasCompletedOnboardingObjective");
static_assert(sizeof(FortGlobalUIContext_HasCompletedOnboardingObjective) == 0x000018, "Wrong size on FortGlobalUIContext_HasCompletedOnboardingObjective");
static_assert(offsetof(FortGlobalUIContext_HasCompletedOnboardingObjective, Objective) == 0x000000, "Member 'FortGlobalUIContext_HasCompletedOnboardingObjective::Objective' has a wrong offset!");
static_assert(offsetof(FortGlobalUIContext_HasCompletedOnboardingObjective, ReturnValue) == 0x000010, "Member 'FortGlobalUIContext_HasCompletedOnboardingObjective::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsAllContentInstalled
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsAllContentInstalled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsAllContentInstalled) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsAllContentInstalled");
static_assert(sizeof(FortGlobalUIContext_IsAllContentInstalled) == 0x000001, "Wrong size on FortGlobalUIContext_IsAllContentInstalled");
static_assert(offsetof(FortGlobalUIContext_IsAllContentInstalled, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsAllContentInstalled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsBattleRoyaleMatchmakingEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsBattleRoyaleMatchmakingEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsBattleRoyaleMatchmakingEnabled) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsBattleRoyaleMatchmakingEnabled");
static_assert(sizeof(FortGlobalUIContext_IsBattleRoyaleMatchmakingEnabled) == 0x000001, "Wrong size on FortGlobalUIContext_IsBattleRoyaleMatchmakingEnabled");
static_assert(offsetof(FortGlobalUIContext_IsBattleRoyaleMatchmakingEnabled, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsBattleRoyaleMatchmakingEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsDuoQueueEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsDuoQueueEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsDuoQueueEnabled) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsDuoQueueEnabled");
static_assert(sizeof(FortGlobalUIContext_IsDuoQueueEnabled) == 0x000001, "Wrong size on FortGlobalUIContext_IsDuoQueueEnabled");
static_assert(offsetof(FortGlobalUIContext_IsDuoQueueEnabled, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsDuoQueueEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsEvent1QueueEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsEvent1QueueEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsEvent1QueueEnabled) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsEvent1QueueEnabled");
static_assert(sizeof(FortGlobalUIContext_IsEvent1QueueEnabled) == 0x000001, "Wrong size on FortGlobalUIContext_IsEvent1QueueEnabled");
static_assert(offsetof(FortGlobalUIContext_IsEvent1QueueEnabled, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsEvent1QueueEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsEvent2QueueEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsEvent2QueueEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsEvent2QueueEnabled) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsEvent2QueueEnabled");
static_assert(sizeof(FortGlobalUIContext_IsEvent2QueueEnabled) == 0x000001, "Wrong size on FortGlobalUIContext_IsEvent2QueueEnabled");
static_assert(offsetof(FortGlobalUIContext_IsEvent2QueueEnabled, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsEvent2QueueEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsEvent3QueueEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsEvent3QueueEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsEvent3QueueEnabled) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsEvent3QueueEnabled");
static_assert(sizeof(FortGlobalUIContext_IsEvent3QueueEnabled) == 0x000001, "Wrong size on FortGlobalUIContext_IsEvent3QueueEnabled");
static_assert(offsetof(FortGlobalUIContext_IsEvent3QueueEnabled, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsEvent3QueueEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsEvent4QueueEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsEvent4QueueEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsEvent4QueueEnabled) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsEvent4QueueEnabled");
static_assert(sizeof(FortGlobalUIContext_IsEvent4QueueEnabled) == 0x000001, "Wrong size on FortGlobalUIContext_IsEvent4QueueEnabled");
static_assert(offsetof(FortGlobalUIContext_IsEvent4QueueEnabled, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsEvent4QueueEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsEvent5QueueEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsEvent5QueueEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsEvent5QueueEnabled) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsEvent5QueueEnabled");
static_assert(sizeof(FortGlobalUIContext_IsEvent5QueueEnabled) == 0x000001, "Wrong size on FortGlobalUIContext_IsEvent5QueueEnabled");
static_assert(offsetof(FortGlobalUIContext_IsEvent5QueueEnabled, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsEvent5QueueEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsEvent6QueueEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsEvent6QueueEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsEvent6QueueEnabled) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsEvent6QueueEnabled");
static_assert(sizeof(FortGlobalUIContext_IsEvent6QueueEnabled) == 0x000001, "Wrong size on FortGlobalUIContext_IsEvent6QueueEnabled");
static_assert(offsetof(FortGlobalUIContext_IsEvent6QueueEnabled, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsEvent6QueueEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsEvent7QueueEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsEvent7QueueEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsEvent7QueueEnabled) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsEvent7QueueEnabled");
static_assert(sizeof(FortGlobalUIContext_IsEvent7QueueEnabled) == 0x000001, "Wrong size on FortGlobalUIContext_IsEvent7QueueEnabled");
static_assert(offsetof(FortGlobalUIContext_IsEvent7QueueEnabled, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsEvent7QueueEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsEvent8QueueEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsEvent8QueueEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsEvent8QueueEnabled) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsEvent8QueueEnabled");
static_assert(sizeof(FortGlobalUIContext_IsEvent8QueueEnabled) == 0x000001, "Wrong size on FortGlobalUIContext_IsEvent8QueueEnabled");
static_assert(offsetof(FortGlobalUIContext_IsEvent8QueueEnabled, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsEvent8QueueEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsFiftyFiftyQueueEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsFiftyFiftyQueueEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsFiftyFiftyQueueEnabled) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsFiftyFiftyQueueEnabled");
static_assert(sizeof(FortGlobalUIContext_IsFiftyFiftyQueueEnabled) == 0x000001, "Wrong size on FortGlobalUIContext_IsFiftyFiftyQueueEnabled");
static_assert(offsetof(FortGlobalUIContext_IsFiftyFiftyQueueEnabled, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsFiftyFiftyQueueEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsGamepadAttached
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsGamepadAttached final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsGamepadAttached) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsGamepadAttached");
static_assert(sizeof(FortGlobalUIContext_IsGamepadAttached) == 0x000001, "Wrong size on FortGlobalUIContext_IsGamepadAttached");
static_assert(offsetof(FortGlobalUIContext_IsGamepadAttached, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsGamepadAttached::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsInOutpostZone
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsInOutpostZone final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsInOutpostZone) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsInOutpostZone");
static_assert(sizeof(FortGlobalUIContext_IsInOutpostZone) == 0x000001, "Wrong size on FortGlobalUIContext_IsInOutpostZone");
static_assert(offsetof(FortGlobalUIContext_IsInOutpostZone, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsInOutpostZone::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsInZone
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsInZone final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsInZone) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsInZone");
static_assert(sizeof(FortGlobalUIContext_IsInZone) == 0x000001, "Wrong size on FortGlobalUIContext_IsInZone");
static_assert(offsetof(FortGlobalUIContext_IsInZone, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsInZone::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsMobileApp
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsMobileApp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsMobileApp) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsMobileApp");
static_assert(sizeof(FortGlobalUIContext_IsMobileApp) == 0x000001, "Wrong size on FortGlobalUIContext_IsMobileApp");
static_assert(offsetof(FortGlobalUIContext_IsMobileApp, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsMobileApp::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsPendingLogout
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsPendingLogout final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsPendingLogout) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsPendingLogout");
static_assert(sizeof(FortGlobalUIContext_IsPendingLogout) == 0x000001, "Wrong size on FortGlobalUIContext_IsPendingLogout");
static_assert(offsetof(FortGlobalUIContext_IsPendingLogout, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsPendingLogout::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsSquadQueueEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsSquadQueueEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsSquadQueueEnabled) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsSquadQueueEnabled");
static_assert(sizeof(FortGlobalUIContext_IsSquadQueueEnabled) == 0x000001, "Wrong size on FortGlobalUIContext_IsSquadQueueEnabled");
static_assert(offsetof(FortGlobalUIContext_IsSquadQueueEnabled, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsSquadQueueEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsUIVisible
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsUIVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsUIVisible) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsUIVisible");
static_assert(sizeof(FortGlobalUIContext_IsUIVisible) == 0x000001, "Wrong size on FortGlobalUIContext_IsUIVisible");
static_assert(offsetof(FortGlobalUIContext_IsUIVisible, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsUIVisible::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.IsUsingGamepad
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_IsUsingGamepad final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_IsUsingGamepad) == 0x000001, "Wrong alignment on FortGlobalUIContext_IsUsingGamepad");
static_assert(sizeof(FortGlobalUIContext_IsUsingGamepad) == 0x000001, "Wrong size on FortGlobalUIContext_IsUsingGamepad");
static_assert(offsetof(FortGlobalUIContext_IsUsingGamepad, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_IsUsingGamepad::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.ShouldCloseMenuOnEscape
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_ShouldCloseMenuOnEscape final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_ShouldCloseMenuOnEscape) == 0x000001, "Wrong alignment on FortGlobalUIContext_ShouldCloseMenuOnEscape");
static_assert(sizeof(FortGlobalUIContext_ShouldCloseMenuOnEscape) == 0x000001, "Wrong size on FortGlobalUIContext_ShouldCloseMenuOnEscape");
static_assert(offsetof(FortGlobalUIContext_ShouldCloseMenuOnEscape, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_ShouldCloseMenuOnEscape::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.ShouldShowRateWidget
// 0x0001 (0x0001 - 0x0000)
struct FortGlobalUIContext_ShouldShowRateWidget final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_ShouldShowRateWidget) == 0x000001, "Wrong alignment on FortGlobalUIContext_ShouldShowRateWidget");
static_assert(sizeof(FortGlobalUIContext_ShouldShowRateWidget) == 0x000001, "Wrong size on FortGlobalUIContext_ShouldShowRateWidget");
static_assert(offsetof(FortGlobalUIContext_ShouldShowRateWidget, ReturnValue) == 0x000000, "Member 'FortGlobalUIContext_ShouldShowRateWidget::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGlobalUIContext.TriggerUIFeedbackEvent
// 0x0008 (0x0008 - 0x0000)
struct FortGlobalUIContext_TriggerUIFeedbackEvent final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGlobalUIContext_TriggerUIFeedbackEvent) == 0x000004, "Wrong alignment on FortGlobalUIContext_TriggerUIFeedbackEvent");
static_assert(sizeof(FortGlobalUIContext_TriggerUIFeedbackEvent) == 0x000008, "Wrong size on FortGlobalUIContext_TriggerUIFeedbackEvent");
static_assert(offsetof(FortGlobalUIContext_TriggerUIFeedbackEvent, EventName) == 0x000000, "Member 'FortGlobalUIContext_TriggerUIFeedbackEvent::EventName' has a wrong offset!");

// Function FortniteUI.AthenaStatsScreenBase.FormatStatValueAsElapsedTime
// 0x0020 (0x0020 - 0x0000)
struct AthenaStatsScreenBase_FormatStatValueAsElapsedTime final
{
public:
	struct FTimespan                              ValueAsTimespan;                                   // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaStatsScreenBase_FormatStatValueAsElapsedTime) == 0x000008, "Wrong alignment on AthenaStatsScreenBase_FormatStatValueAsElapsedTime");
static_assert(sizeof(AthenaStatsScreenBase_FormatStatValueAsElapsedTime) == 0x000020, "Wrong size on AthenaStatsScreenBase_FormatStatValueAsElapsedTime");
static_assert(offsetof(AthenaStatsScreenBase_FormatStatValueAsElapsedTime, ValueAsTimespan) == 0x000000, "Member 'AthenaStatsScreenBase_FormatStatValueAsElapsedTime::ValueAsTimespan' has a wrong offset!");
static_assert(offsetof(AthenaStatsScreenBase_FormatStatValueAsElapsedTime, ReturnValue) == 0x000008, "Member 'AthenaStatsScreenBase_FormatStatValueAsElapsedTime::ReturnValue' has a wrong offset!");

// Function FortniteUI.AthenaStatsScreenBase.GetLastUpdateTime
// 0x0018 (0x0018 - 0x0000)
struct AthenaStatsScreenBase_GetLastUpdateTime final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaStatsScreenBase_GetLastUpdateTime) == 0x000008, "Wrong alignment on AthenaStatsScreenBase_GetLastUpdateTime");
static_assert(sizeof(AthenaStatsScreenBase_GetLastUpdateTime) == 0x000018, "Wrong size on AthenaStatsScreenBase_GetLastUpdateTime");
static_assert(offsetof(AthenaStatsScreenBase_GetLastUpdateTime, ReturnValue) == 0x000000, "Member 'AthenaStatsScreenBase_GetLastUpdateTime::ReturnValue' has a wrong offset!");

// Function FortniteUI.AthenaStatsScreenBase.GetStatValue
// 0x0018 (0x0018 - 0x0000)
struct AthenaStatsScreenBase_GetStatValue final
{
public:
	class FString                                 BaseGameplayTag;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AthenaStatsScreenBase_GetStatValue) == 0x000008, "Wrong alignment on AthenaStatsScreenBase_GetStatValue");
static_assert(sizeof(AthenaStatsScreenBase_GetStatValue) == 0x000018, "Wrong size on AthenaStatsScreenBase_GetStatValue");
static_assert(offsetof(AthenaStatsScreenBase_GetStatValue, BaseGameplayTag) == 0x000000, "Member 'AthenaStatsScreenBase_GetStatValue::BaseGameplayTag' has a wrong offset!");
static_assert(offsetof(AthenaStatsScreenBase_GetStatValue, ReturnValue) == 0x000010, "Member 'AthenaStatsScreenBase_GetStatValue::ReturnValue' has a wrong offset!");

// Function FortniteUI.AthenaStatsScreenBase.OnQueryFinished
// 0x0001 (0x0001 - 0x0000)
struct AthenaStatsScreenBase_OnQueryFinished final
{
public:
	bool                                          bWasSuccessful;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaStatsScreenBase_OnQueryFinished) == 0x000001, "Wrong alignment on AthenaStatsScreenBase_OnQueryFinished");
static_assert(sizeof(AthenaStatsScreenBase_OnQueryFinished) == 0x000001, "Wrong size on AthenaStatsScreenBase_OnQueryFinished");
static_assert(offsetof(AthenaStatsScreenBase_OnQueryFinished, bWasSuccessful) == 0x000000, "Member 'AthenaStatsScreenBase_OnQueryFinished::bWasSuccessful' has a wrong offset!");

// Function FortniteUI.AthenaStatsScreenBase.OnTabSelected
// 0x0008 (0x0008 - 0x0000)
struct AthenaStatsScreenBase_OnTabSelected final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaStatsScreenBase_OnTabSelected) == 0x000004, "Wrong alignment on AthenaStatsScreenBase_OnTabSelected");
static_assert(sizeof(AthenaStatsScreenBase_OnTabSelected) == 0x000008, "Wrong size on AthenaStatsScreenBase_OnTabSelected");
static_assert(offsetof(AthenaStatsScreenBase_OnTabSelected, TabName) == 0x000000, "Member 'AthenaStatsScreenBase_OnTabSelected::TabName' has a wrong offset!");

// Function FortniteUI.AthenaStatsScreenBase.GetSecondTierPlaceTag
// 0x0010 (0x0010 - 0x0000)
struct AthenaStatsScreenBase_GetSecondTierPlaceTag final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaStatsScreenBase_GetSecondTierPlaceTag) == 0x000008, "Wrong alignment on AthenaStatsScreenBase_GetSecondTierPlaceTag");
static_assert(sizeof(AthenaStatsScreenBase_GetSecondTierPlaceTag) == 0x000010, "Wrong size on AthenaStatsScreenBase_GetSecondTierPlaceTag");
static_assert(offsetof(AthenaStatsScreenBase_GetSecondTierPlaceTag, ReturnValue) == 0x000000, "Member 'AthenaStatsScreenBase_GetSecondTierPlaceTag::ReturnValue' has a wrong offset!");

// Function FortniteUI.AthenaStatsScreenBase.GetStatGameplayTag
// 0x0020 (0x0020 - 0x0000)
struct AthenaStatsScreenBase_GetStatGameplayTag final
{
public:
	class FString                                 BaseStatName;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaStatsScreenBase_GetStatGameplayTag) == 0x000008, "Wrong alignment on AthenaStatsScreenBase_GetStatGameplayTag");
static_assert(sizeof(AthenaStatsScreenBase_GetStatGameplayTag) == 0x000020, "Wrong size on AthenaStatsScreenBase_GetStatGameplayTag");
static_assert(offsetof(AthenaStatsScreenBase_GetStatGameplayTag, BaseStatName) == 0x000000, "Member 'AthenaStatsScreenBase_GetStatGameplayTag::BaseStatName' has a wrong offset!");
static_assert(offsetof(AthenaStatsScreenBase_GetStatGameplayTag, ReturnValue) == 0x000010, "Member 'AthenaStatsScreenBase_GetStatGameplayTag::ReturnValue' has a wrong offset!");

// Function FortniteUI.AthenaStatsScreenBase.GetThirdTierPlaceTag
// 0x0010 (0x0010 - 0x0000)
struct AthenaStatsScreenBase_GetThirdTierPlaceTag final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaStatsScreenBase_GetThirdTierPlaceTag) == 0x000008, "Wrong alignment on AthenaStatsScreenBase_GetThirdTierPlaceTag");
static_assert(sizeof(AthenaStatsScreenBase_GetThirdTierPlaceTag) == 0x000010, "Wrong size on AthenaStatsScreenBase_GetThirdTierPlaceTag");
static_assert(offsetof(AthenaStatsScreenBase_GetThirdTierPlaceTag, ReturnValue) == 0x000000, "Member 'AthenaStatsScreenBase_GetThirdTierPlaceTag::ReturnValue' has a wrong offset!");

// Function FortniteUI.AthenaStatsScreenBase.GetWinsTag
// 0x0010 (0x0010 - 0x0000)
struct AthenaStatsScreenBase_GetWinsTag final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AthenaStatsScreenBase_GetWinsTag) == 0x000008, "Wrong alignment on AthenaStatsScreenBase_GetWinsTag");
static_assert(sizeof(AthenaStatsScreenBase_GetWinsTag) == 0x000010, "Wrong size on AthenaStatsScreenBase_GetWinsTag");
static_assert(offsetof(AthenaStatsScreenBase_GetWinsTag, ReturnValue) == 0x000000, "Member 'AthenaStatsScreenBase_GetWinsTag::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortExpeditionUtilities.AreAnyExpeditionsComplete
// 0x0010 (0x0010 - 0x0000)
struct FortExpeditionUtilities_AreAnyExpeditionsComplete final
{
public:
	const class UWidget*                          Widget;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortExpeditionUtilities_AreAnyExpeditionsComplete) == 0x000008, "Wrong alignment on FortExpeditionUtilities_AreAnyExpeditionsComplete");
static_assert(sizeof(FortExpeditionUtilities_AreAnyExpeditionsComplete) == 0x000010, "Wrong size on FortExpeditionUtilities_AreAnyExpeditionsComplete");
static_assert(offsetof(FortExpeditionUtilities_AreAnyExpeditionsComplete, Widget) == 0x000000, "Member 'FortExpeditionUtilities_AreAnyExpeditionsComplete::Widget' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_AreAnyExpeditionsComplete, ReturnValue) == 0x000008, "Member 'FortExpeditionUtilities_AreAnyExpeditionsComplete::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortExpeditionUtilities.AreExpeditionsUnlocked
// 0x0038 (0x0038 - 0x0000)
struct FortExpeditionUtilities_AreExpeditionsUnlocked final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                       UniqueId;                                          // 0x0008(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortExpeditionUtilities_AreExpeditionsUnlocked) == 0x000008, "Wrong alignment on FortExpeditionUtilities_AreExpeditionsUnlocked");
static_assert(sizeof(FortExpeditionUtilities_AreExpeditionsUnlocked) == 0x000038, "Wrong size on FortExpeditionUtilities_AreExpeditionsUnlocked");
static_assert(offsetof(FortExpeditionUtilities_AreExpeditionsUnlocked, WorldContextObject) == 0x000000, "Member 'FortExpeditionUtilities_AreExpeditionsUnlocked::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_AreExpeditionsUnlocked, UniqueId) == 0x000008, "Member 'FortExpeditionUtilities_AreExpeditionsUnlocked::UniqueId' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_AreExpeditionsUnlocked, ReturnValue) == 0x000030, "Member 'FortExpeditionUtilities_AreExpeditionsUnlocked::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortExpeditionUtilities.CalculateExpeditionPercentageChanceForSuccess
// 0x0010 (0x0010 - 0x0000)
struct FortExpeditionUtilities_CalculateExpeditionPercentageChanceForSuccess final
{
public:
	const class UFortExpeditionItem*              Expedition;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TotalPower;                                        // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionUtilities_CalculateExpeditionPercentageChanceForSuccess) == 0x000008, "Wrong alignment on FortExpeditionUtilities_CalculateExpeditionPercentageChanceForSuccess");
static_assert(sizeof(FortExpeditionUtilities_CalculateExpeditionPercentageChanceForSuccess) == 0x000010, "Wrong size on FortExpeditionUtilities_CalculateExpeditionPercentageChanceForSuccess");
static_assert(offsetof(FortExpeditionUtilities_CalculateExpeditionPercentageChanceForSuccess, Expedition) == 0x000000, "Member 'FortExpeditionUtilities_CalculateExpeditionPercentageChanceForSuccess::Expedition' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_CalculateExpeditionPercentageChanceForSuccess, TotalPower) == 0x000008, "Member 'FortExpeditionUtilities_CalculateExpeditionPercentageChanceForSuccess::TotalPower' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_CalculateExpeditionPercentageChanceForSuccess, ReturnValue) == 0x00000C, "Member 'FortExpeditionUtilities_CalculateExpeditionPercentageChanceForSuccess::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortExpeditionUtilities.CalculateGlobalAndItemRatingModValuesBP
// 0x0030 (0x0030 - 0x0000)
struct FortExpeditionUtilities_CalculateGlobalAndItemRatingModValuesBP final
{
public:
	const class UFortExpeditionItem*              Expedition;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortItem*>                      SlottedItems;                                      // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         GlobalPowerMod;                                    // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 SlottedItemMods;                                   // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionUtilities_CalculateGlobalAndItemRatingModValuesBP) == 0x000008, "Wrong alignment on FortExpeditionUtilities_CalculateGlobalAndItemRatingModValuesBP");
static_assert(sizeof(FortExpeditionUtilities_CalculateGlobalAndItemRatingModValuesBP) == 0x000030, "Wrong size on FortExpeditionUtilities_CalculateGlobalAndItemRatingModValuesBP");
static_assert(offsetof(FortExpeditionUtilities_CalculateGlobalAndItemRatingModValuesBP, Expedition) == 0x000000, "Member 'FortExpeditionUtilities_CalculateGlobalAndItemRatingModValuesBP::Expedition' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_CalculateGlobalAndItemRatingModValuesBP, SlottedItems) == 0x000008, "Member 'FortExpeditionUtilities_CalculateGlobalAndItemRatingModValuesBP::SlottedItems' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_CalculateGlobalAndItemRatingModValuesBP, GlobalPowerMod) == 0x000018, "Member 'FortExpeditionUtilities_CalculateGlobalAndItemRatingModValuesBP::GlobalPowerMod' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_CalculateGlobalAndItemRatingModValuesBP, SlottedItemMods) == 0x000020, "Member 'FortExpeditionUtilities_CalculateGlobalAndItemRatingModValuesBP::SlottedItemMods' has a wrong offset!");

// Function FortniteUI.FortExpeditionUtilities.CalculateTotalPower
// 0x0030 (0x0030 - 0x0000)
struct FortExpeditionUtilities_CalculateTotalPower final
{
public:
	class AFortPlayerController*                  FortPC;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFortExpeditionItem*              Expedition;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SquadId;                                           // 0x0010(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortItem*>                      SlottedItems;                                      // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortExpeditionUtilities_CalculateTotalPower) == 0x000008, "Wrong alignment on FortExpeditionUtilities_CalculateTotalPower");
static_assert(sizeof(FortExpeditionUtilities_CalculateTotalPower) == 0x000030, "Wrong size on FortExpeditionUtilities_CalculateTotalPower");
static_assert(offsetof(FortExpeditionUtilities_CalculateTotalPower, FortPC) == 0x000000, "Member 'FortExpeditionUtilities_CalculateTotalPower::FortPC' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_CalculateTotalPower, Expedition) == 0x000008, "Member 'FortExpeditionUtilities_CalculateTotalPower::Expedition' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_CalculateTotalPower, SquadId) == 0x000010, "Member 'FortExpeditionUtilities_CalculateTotalPower::SquadId' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_CalculateTotalPower, SlottedItems) == 0x000018, "Member 'FortExpeditionUtilities_CalculateTotalPower::SlottedItems' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_CalculateTotalPower, ReturnValue) == 0x000028, "Member 'FortExpeditionUtilities_CalculateTotalPower::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortExpeditionUtilities.GetAllExpeditionSquadIds
// 0x0010 (0x0010 - 0x0000)
struct FortExpeditionUtilities_GetAllExpeditionSquadIds final
{
public:
	TArray<class FName>                           OutExpeditionSquadIds;                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionUtilities_GetAllExpeditionSquadIds) == 0x000008, "Wrong alignment on FortExpeditionUtilities_GetAllExpeditionSquadIds");
static_assert(sizeof(FortExpeditionUtilities_GetAllExpeditionSquadIds) == 0x000010, "Wrong size on FortExpeditionUtilities_GetAllExpeditionSquadIds");
static_assert(offsetof(FortExpeditionUtilities_GetAllExpeditionSquadIds, OutExpeditionSquadIds) == 0x000000, "Member 'FortExpeditionUtilities_GetAllExpeditionSquadIds::OutExpeditionSquadIds' has a wrong offset!");

// Function FortniteUI.FortExpeditionUtilities.GetExpeditionSquadPower
// 0x0018 (0x0018 - 0x0000)
struct FortExpeditionUtilities_GetExpeditionSquadPower final
{
public:
	class AFortPlayerController*                  FortPC;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SquadId;                                           // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortExpeditionUtilities_GetExpeditionSquadPower) == 0x000008, "Wrong alignment on FortExpeditionUtilities_GetExpeditionSquadPower");
static_assert(sizeof(FortExpeditionUtilities_GetExpeditionSquadPower) == 0x000018, "Wrong size on FortExpeditionUtilities_GetExpeditionSquadPower");
static_assert(offsetof(FortExpeditionUtilities_GetExpeditionSquadPower, FortPC) == 0x000000, "Member 'FortExpeditionUtilities_GetExpeditionSquadPower::FortPC' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_GetExpeditionSquadPower, SquadId) == 0x000008, "Member 'FortExpeditionUtilities_GetExpeditionSquadPower::SquadId' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_GetExpeditionSquadPower, ReturnValue) == 0x000010, "Member 'FortExpeditionUtilities_GetExpeditionSquadPower::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortExpeditionUtilities.GetExpeditionSquadsThatMatchRequirements
// 0x0040 (0x0040 - 0x0000)
struct FortExpeditionUtilities_GetExpeditionSquadsThatMatchRequirements final
{
public:
	struct FGameplayTagContainer                  RequirementTags;                                   // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class AFortPlayerController*                  FortPC;                                            // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           OutExpeditionSquadIds;                             // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortExpeditionUtilities_GetExpeditionSquadsThatMatchRequirements) == 0x000008, "Wrong alignment on FortExpeditionUtilities_GetExpeditionSquadsThatMatchRequirements");
static_assert(sizeof(FortExpeditionUtilities_GetExpeditionSquadsThatMatchRequirements) == 0x000040, "Wrong size on FortExpeditionUtilities_GetExpeditionSquadsThatMatchRequirements");
static_assert(offsetof(FortExpeditionUtilities_GetExpeditionSquadsThatMatchRequirements, RequirementTags) == 0x000000, "Member 'FortExpeditionUtilities_GetExpeditionSquadsThatMatchRequirements::RequirementTags' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_GetExpeditionSquadsThatMatchRequirements, FortPC) == 0x000020, "Member 'FortExpeditionUtilities_GetExpeditionSquadsThatMatchRequirements::FortPC' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_GetExpeditionSquadsThatMatchRequirements, OutExpeditionSquadIds) == 0x000028, "Member 'FortExpeditionUtilities_GetExpeditionSquadsThatMatchRequirements::OutExpeditionSquadIds' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_GetExpeditionSquadsThatMatchRequirements, ReturnValue) == 0x000038, "Member 'FortExpeditionUtilities_GetExpeditionSquadsThatMatchRequirements::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortExpeditionUtilities.GetMatchedCriteriaTags
// 0x0028 (0x0028 - 0x0000)
struct FortExpeditionUtilities_GetMatchedCriteriaTags final
{
public:
	class UFortExpeditionItem*                    Expedition;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortItem*>                      SlottedItems;                                      // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                   OutMatchedCriteria;                                // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionUtilities_GetMatchedCriteriaTags) == 0x000008, "Wrong alignment on FortExpeditionUtilities_GetMatchedCriteriaTags");
static_assert(sizeof(FortExpeditionUtilities_GetMatchedCriteriaTags) == 0x000028, "Wrong size on FortExpeditionUtilities_GetMatchedCriteriaTags");
static_assert(offsetof(FortExpeditionUtilities_GetMatchedCriteriaTags, Expedition) == 0x000000, "Member 'FortExpeditionUtilities_GetMatchedCriteriaTags::Expedition' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_GetMatchedCriteriaTags, SlottedItems) == 0x000008, "Member 'FortExpeditionUtilities_GetMatchedCriteriaTags::SlottedItems' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_GetMatchedCriteriaTags, OutMatchedCriteria) == 0x000018, "Member 'FortExpeditionUtilities_GetMatchedCriteriaTags::OutMatchedCriteria' has a wrong offset!");

// Function FortniteUI.FortExpeditionUtilities.GetTotalExpeditionVehiclesAvailable
// 0x0028 (0x0028 - 0x0000)
struct FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable final
{
public:
	const class UWidget*                          Widget;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortPlayerController*                  FortPC;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutLandVehicles;                                   // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutLandVehiclesAvailable;                          // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSeaVehicles;                                    // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSeaVehiclesAvailable;                           // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutAirVehicles;                                    // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutAirVehiclesAvailable;                           // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable) == 0x000008, "Wrong alignment on FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable");
static_assert(sizeof(FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable) == 0x000028, "Wrong size on FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable");
static_assert(offsetof(FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable, Widget) == 0x000000, "Member 'FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable::Widget' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable, FortPC) == 0x000008, "Member 'FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable::FortPC' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable, OutLandVehicles) == 0x000010, "Member 'FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable::OutLandVehicles' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable, OutLandVehiclesAvailable) == 0x000014, "Member 'FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable::OutLandVehiclesAvailable' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable, OutSeaVehicles) == 0x000018, "Member 'FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable::OutSeaVehicles' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable, OutSeaVehiclesAvailable) == 0x00001C, "Member 'FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable::OutSeaVehiclesAvailable' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable, OutAirVehicles) == 0x000020, "Member 'FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable::OutAirVehicles' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable, OutAirVehiclesAvailable) == 0x000024, "Member 'FortExpeditionUtilities_GetTotalExpeditionVehiclesAvailable::OutAirVehiclesAvailable' has a wrong offset!");

// Function FortniteUI.FortExpeditionUtilities.GetVehicleTagFromSquadId
// 0x0018 (0x0018 - 0x0000)
struct FortExpeditionUtilities_GetVehicleTagFromSquadId final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           OutFoundVehicleTag;                                // 0x0008(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortExpeditionUtilities_GetVehicleTagFromSquadId) == 0x000008, "Wrong alignment on FortExpeditionUtilities_GetVehicleTagFromSquadId");
static_assert(sizeof(FortExpeditionUtilities_GetVehicleTagFromSquadId) == 0x000018, "Wrong size on FortExpeditionUtilities_GetVehicleTagFromSquadId");
static_assert(offsetof(FortExpeditionUtilities_GetVehicleTagFromSquadId, SquadId) == 0x000000, "Member 'FortExpeditionUtilities_GetVehicleTagFromSquadId::SquadId' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_GetVehicleTagFromSquadId, OutFoundVehicleTag) == 0x000008, "Member 'FortExpeditionUtilities_GetVehicleTagFromSquadId::OutFoundVehicleTag' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_GetVehicleTagFromSquadId, ReturnValue) == 0x000010, "Member 'FortExpeditionUtilities_GetVehicleTagFromSquadId::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortExpeditionUtilities.GetVehicleTagRequiredForExpedition
// 0x0010 (0x0010 - 0x0000)
struct FortExpeditionUtilities_GetVehicleTagRequiredForExpedition final
{
public:
	const class UFortExpeditionItem*              Expedition;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionUtilities_GetVehicleTagRequiredForExpedition) == 0x000008, "Wrong alignment on FortExpeditionUtilities_GetVehicleTagRequiredForExpedition");
static_assert(sizeof(FortExpeditionUtilities_GetVehicleTagRequiredForExpedition) == 0x000010, "Wrong size on FortExpeditionUtilities_GetVehicleTagRequiredForExpedition");
static_assert(offsetof(FortExpeditionUtilities_GetVehicleTagRequiredForExpedition, Expedition) == 0x000000, "Member 'FortExpeditionUtilities_GetVehicleTagRequiredForExpedition::Expedition' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_GetVehicleTagRequiredForExpedition, ReturnValue) == 0x000008, "Member 'FortExpeditionUtilities_GetVehicleTagRequiredForExpedition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortExpeditionUtilities.IsSquadOnExpedition
// 0x0018 (0x0018 - 0x0000)
struct FortExpeditionUtilities_IsSquadOnExpedition final
{
public:
	const class UWidget*                          Widget;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SquadId;                                           // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortExpeditionUtilities_IsSquadOnExpedition) == 0x000008, "Wrong alignment on FortExpeditionUtilities_IsSquadOnExpedition");
static_assert(sizeof(FortExpeditionUtilities_IsSquadOnExpedition) == 0x000018, "Wrong size on FortExpeditionUtilities_IsSquadOnExpedition");
static_assert(offsetof(FortExpeditionUtilities_IsSquadOnExpedition, Widget) == 0x000000, "Member 'FortExpeditionUtilities_IsSquadOnExpedition::Widget' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_IsSquadOnExpedition, SquadId) == 0x000008, "Member 'FortExpeditionUtilities_IsSquadOnExpedition::SquadId' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_IsSquadOnExpedition, ReturnValue) == 0x000010, "Member 'FortExpeditionUtilities_IsSquadOnExpedition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortExpeditionUtilities.TotalUnseenExpeditionsForTab
// 0x0018 (0x0018 - 0x0000)
struct FortExpeditionUtilities_TotalUnseenExpeditionsForTab final
{
public:
	const class UWidget*                          Widget;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   TabNameID;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortExpeditionUtilities_TotalUnseenExpeditionsForTab) == 0x000008, "Wrong alignment on FortExpeditionUtilities_TotalUnseenExpeditionsForTab");
static_assert(sizeof(FortExpeditionUtilities_TotalUnseenExpeditionsForTab) == 0x000018, "Wrong size on FortExpeditionUtilities_TotalUnseenExpeditionsForTab");
static_assert(offsetof(FortExpeditionUtilities_TotalUnseenExpeditionsForTab, Widget) == 0x000000, "Member 'FortExpeditionUtilities_TotalUnseenExpeditionsForTab::Widget' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_TotalUnseenExpeditionsForTab, TabNameID) == 0x000008, "Member 'FortExpeditionUtilities_TotalUnseenExpeditionsForTab::TabNameID' has a wrong offset!");
static_assert(offsetof(FortExpeditionUtilities_TotalUnseenExpeditionsForTab, ReturnValue) == 0x000010, "Member 'FortExpeditionUtilities_TotalUnseenExpeditionsForTab::ReturnValue' has a wrong offset!");

// Function FortniteUI.CMSContext.GetLatestNews
// 0x0010 (0x0010 - 0x0000)
struct CMSContext_GetLatestNews final
{
public:
	struct FAthenaNews                            ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CMSContext_GetLatestNews) == 0x000008, "Wrong alignment on CMSContext_GetLatestNews");
static_assert(sizeof(CMSContext_GetLatestNews) == 0x000010, "Wrong size on CMSContext_GetLatestNews");
static_assert(offsetof(CMSContext_GetLatestNews, ReturnValue) == 0x000000, "Member 'CMSContext_GetLatestNews::ReturnValue' has a wrong offset!");

// Function FortniteUI.CMSContext.IsNewNewsAvailable
// 0x0001 (0x0001 - 0x0000)
struct CMSContext_IsNewNewsAvailable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CMSContext_IsNewNewsAvailable) == 0x000001, "Wrong alignment on CMSContext_IsNewNewsAvailable");
static_assert(sizeof(CMSContext_IsNewNewsAvailable) == 0x000001, "Wrong size on CMSContext_IsNewNewsAvailable");
static_assert(offsetof(CMSContext_IsNewNewsAvailable, ReturnValue) == 0x000000, "Member 'CMSContext_IsNewNewsAvailable::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAbilitySystemContext.RegisterForAttributeChanged
// 0x0040 (0x0040 - 0x0000)
struct FortAbilitySystemContext_RegisterForAttributeChanged final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAbilitySystemComponent*                ASC;                                               // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                     Attribute;                                         // 0x0010(0x0020)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             Callback;                                          // 0x0030(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAbilitySystemContext_RegisterForAttributeChanged) == 0x000008, "Wrong alignment on FortAbilitySystemContext_RegisterForAttributeChanged");
static_assert(sizeof(FortAbilitySystemContext_RegisterForAttributeChanged) == 0x000040, "Wrong size on FortAbilitySystemContext_RegisterForAttributeChanged");
static_assert(offsetof(FortAbilitySystemContext_RegisterForAttributeChanged, Widget) == 0x000000, "Member 'FortAbilitySystemContext_RegisterForAttributeChanged::Widget' has a wrong offset!");
static_assert(offsetof(FortAbilitySystemContext_RegisterForAttributeChanged, ASC) == 0x000008, "Member 'FortAbilitySystemContext_RegisterForAttributeChanged::ASC' has a wrong offset!");
static_assert(offsetof(FortAbilitySystemContext_RegisterForAttributeChanged, Attribute) == 0x000010, "Member 'FortAbilitySystemContext_RegisterForAttributeChanged::Attribute' has a wrong offset!");
static_assert(offsetof(FortAbilitySystemContext_RegisterForAttributeChanged, Callback) == 0x000030, "Member 'FortAbilitySystemContext_RegisterForAttributeChanged::Callback' has a wrong offset!");

// Function FortniteUI.FortAbilitySystemContext.RemoveDelegatesFromWidget
// 0x0008 (0x0008 - 0x0000)
struct FortAbilitySystemContext_RemoveDelegatesFromWidget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAbilitySystemContext_RemoveDelegatesFromWidget) == 0x000008, "Wrong alignment on FortAbilitySystemContext_RemoveDelegatesFromWidget");
static_assert(sizeof(FortAbilitySystemContext_RemoveDelegatesFromWidget) == 0x000008, "Wrong size on FortAbilitySystemContext_RemoveDelegatesFromWidget");
static_assert(offsetof(FortAbilitySystemContext_RemoveDelegatesFromWidget, Widget) == 0x000000, "Member 'FortAbilitySystemContext_RemoveDelegatesFromWidget::Widget' has a wrong offset!");

// Function FortniteUI.FortUserWidget.AddGrantCheatMenu
// 0x0020 (0x0020 - 0x0000)
struct FortUserWidget_AddGrantCheatMenu final
{
public:
	class FString                                 TemplateId;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InstanceId;                                        // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUserWidget_AddGrantCheatMenu) == 0x000008, "Wrong alignment on FortUserWidget_AddGrantCheatMenu");
static_assert(sizeof(FortUserWidget_AddGrantCheatMenu) == 0x000020, "Wrong size on FortUserWidget_AddGrantCheatMenu");
static_assert(offsetof(FortUserWidget_AddGrantCheatMenu, TemplateId) == 0x000000, "Member 'FortUserWidget_AddGrantCheatMenu::TemplateId' has a wrong offset!");
static_assert(offsetof(FortUserWidget_AddGrantCheatMenu, InstanceId) == 0x000010, "Member 'FortUserWidget_AddGrantCheatMenu::InstanceId' has a wrong offset!");

// Function FortniteUI.FortGridPickerTile.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct FortGridPickerTile_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridPickerTile_OnMouseEnter) == 0x000008, "Wrong alignment on FortGridPickerTile_OnMouseEnter");
static_assert(sizeof(FortGridPickerTile_OnMouseEnter) == 0x0000A8, "Wrong size on FortGridPickerTile_OnMouseEnter");
static_assert(offsetof(FortGridPickerTile_OnMouseEnter, MyGeometry) == 0x000000, "Member 'FortGridPickerTile_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(FortGridPickerTile_OnMouseEnter, MouseEvent) == 0x000038, "Member 'FortGridPickerTile_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function FortniteUI.FortGridPickerTile.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct FortGridPickerTile_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridPickerTile_OnMouseLeave) == 0x000008, "Wrong alignment on FortGridPickerTile_OnMouseLeave");
static_assert(sizeof(FortGridPickerTile_OnMouseLeave) == 0x000070, "Wrong size on FortGridPickerTile_OnMouseLeave");
static_assert(offsetof(FortGridPickerTile_OnMouseLeave, MouseEvent) == 0x000000, "Member 'FortGridPickerTile_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function FortniteUI.FortGridPickerTile.SetData
// 0x0008 (0x0008 - 0x0000)
struct FortGridPickerTile_SetData final
{
public:
	class UObject*                                InData;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridPickerTile_SetData) == 0x000008, "Wrong alignment on FortGridPickerTile_SetData");
static_assert(sizeof(FortGridPickerTile_SetData) == 0x000008, "Wrong size on FortGridPickerTile_SetData");
static_assert(offsetof(FortGridPickerTile_SetData, InData) == 0x000000, "Member 'FortGridPickerTile_SetData::InData' has a wrong offset!");

// Function FortniteUI.FortAccountLinkingWindow.IsPurchaseFree
// 0x0001 (0x0001 - 0x0000)
struct FortAccountLinkingWindow_IsPurchaseFree final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAccountLinkingWindow_IsPurchaseFree) == 0x000001, "Wrong alignment on FortAccountLinkingWindow_IsPurchaseFree");
static_assert(sizeof(FortAccountLinkingWindow_IsPurchaseFree) == 0x000001, "Wrong size on FortAccountLinkingWindow_IsPurchaseFree");
static_assert(offsetof(FortAccountLinkingWindow_IsPurchaseFree, ReturnValue) == 0x000000, "Member 'FortAccountLinkingWindow_IsPurchaseFree::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAsyncAction_CheckHasRedeemForAccess.CheckHasRedeemForAccess
// 0x0010 (0x0010 - 0x0000)
struct FortAsyncAction_CheckHasRedeemForAccess_CheckHasRedeemForAccess final
{
public:
	class UObject*                                InWorldContextObject;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAsyncAction_CheckHasRedeemForAccess* ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAsyncAction_CheckHasRedeemForAccess_CheckHasRedeemForAccess) == 0x000008, "Wrong alignment on FortAsyncAction_CheckHasRedeemForAccess_CheckHasRedeemForAccess");
static_assert(sizeof(FortAsyncAction_CheckHasRedeemForAccess_CheckHasRedeemForAccess) == 0x000010, "Wrong size on FortAsyncAction_CheckHasRedeemForAccess_CheckHasRedeemForAccess");
static_assert(offsetof(FortAsyncAction_CheckHasRedeemForAccess_CheckHasRedeemForAccess, InWorldContextObject) == 0x000000, "Member 'FortAsyncAction_CheckHasRedeemForAccess_CheckHasRedeemForAccess::InWorldContextObject' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_CheckHasRedeemForAccess_CheckHasRedeemForAccess, ReturnValue) == 0x000008, "Member 'FortAsyncAction_CheckHasRedeemForAccess_CheckHasRedeemForAccess::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroSupportPerkIndicator.SetItemToRepresent
// 0x0008 (0x0008 - 0x0000)
struct FortHeroSupportPerkIndicator_SetItemToRepresent final
{
public:
	const class UFortItem*                        Param_ItemToRepresent;                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroSupportPerkIndicator_SetItemToRepresent) == 0x000008, "Wrong alignment on FortHeroSupportPerkIndicator_SetItemToRepresent");
static_assert(sizeof(FortHeroSupportPerkIndicator_SetItemToRepresent) == 0x000008, "Wrong size on FortHeroSupportPerkIndicator_SetItemToRepresent");
static_assert(offsetof(FortHeroSupportPerkIndicator_SetItemToRepresent, Param_ItemToRepresent) == 0x000000, "Member 'FortHeroSupportPerkIndicator_SetItemToRepresent::Param_ItemToRepresent' has a wrong offset!");

// Function FortniteUI.FortHeroSupportPerkIndicator.SetSupportTypeToRepresent
// 0x0001 (0x0001 - 0x0000)
struct FortHeroSupportPerkIndicator_SetSupportTypeToRepresent final
{
public:
	EFortSupportBonusType                         Param_SupportTypeToRepresent;                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroSupportPerkIndicator_SetSupportTypeToRepresent) == 0x000001, "Wrong alignment on FortHeroSupportPerkIndicator_SetSupportTypeToRepresent");
static_assert(sizeof(FortHeroSupportPerkIndicator_SetSupportTypeToRepresent) == 0x000001, "Wrong size on FortHeroSupportPerkIndicator_SetSupportTypeToRepresent");
static_assert(offsetof(FortHeroSupportPerkIndicator_SetSupportTypeToRepresent, Param_SupportTypeToRepresent) == 0x000000, "Member 'FortHeroSupportPerkIndicator_SetSupportTypeToRepresent::Param_SupportTypeToRepresent' has a wrong offset!");

// Function FortniteUI.FortAsyncAction_ShowPlatformStoreForPurchase.ShowPlatformStoreForPurchase
// 0x0010 (0x0010 - 0x0000)
struct FortAsyncAction_ShowPlatformStoreForPurchase_ShowPlatformStoreForPurchase final
{
public:
	class UObject*                                InWorldContextObject;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAsyncAction_ShowPlatformStoreForPurchase* ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAsyncAction_ShowPlatformStoreForPurchase_ShowPlatformStoreForPurchase) == 0x000008, "Wrong alignment on FortAsyncAction_ShowPlatformStoreForPurchase_ShowPlatformStoreForPurchase");
static_assert(sizeof(FortAsyncAction_ShowPlatformStoreForPurchase_ShowPlatformStoreForPurchase) == 0x000010, "Wrong size on FortAsyncAction_ShowPlatformStoreForPurchase_ShowPlatformStoreForPurchase");
static_assert(offsetof(FortAsyncAction_ShowPlatformStoreForPurchase_ShowPlatformStoreForPurchase, InWorldContextObject) == 0x000000, "Member 'FortAsyncAction_ShowPlatformStoreForPurchase_ShowPlatformStoreForPurchase::InWorldContextObject' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowPlatformStoreForPurchase_ShowPlatformStoreForPurchase, ReturnValue) == 0x000008, "Member 'FortAsyncAction_ShowPlatformStoreForPurchase_ShowPlatformStoreForPurchase::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAsyncAction_ShowPlatformRedeemCode.ShowPlatformRedeemCode
// 0x0010 (0x0010 - 0x0000)
struct FortAsyncAction_ShowPlatformRedeemCode_ShowPlatformRedeemCode final
{
public:
	class UObject*                                InWorldContextObject;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAsyncAction_ShowPlatformRedeemCode* ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAsyncAction_ShowPlatformRedeemCode_ShowPlatformRedeemCode) == 0x000008, "Wrong alignment on FortAsyncAction_ShowPlatformRedeemCode_ShowPlatformRedeemCode");
static_assert(sizeof(FortAsyncAction_ShowPlatformRedeemCode_ShowPlatformRedeemCode) == 0x000010, "Wrong size on FortAsyncAction_ShowPlatformRedeemCode_ShowPlatformRedeemCode");
static_assert(offsetof(FortAsyncAction_ShowPlatformRedeemCode_ShowPlatformRedeemCode, InWorldContextObject) == 0x000000, "Member 'FortAsyncAction_ShowPlatformRedeemCode_ShowPlatformRedeemCode::InWorldContextObject' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowPlatformRedeemCode_ShowPlatformRedeemCode, ReturnValue) == 0x000008, "Member 'FortAsyncAction_ShowPlatformRedeemCode_ShowPlatformRedeemCode::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroNotificationHandler.OnFortItemUpdated
// 0x0003 (0x0003 - 0x0000)
struct FortHeroNotificationHandler_OnFortItemUpdated final
{
public:
	bool                                          bItemChanged;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAmmoChanged;                                      // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIngredientsChanged;                               // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroNotificationHandler_OnFortItemUpdated) == 0x000001, "Wrong alignment on FortHeroNotificationHandler_OnFortItemUpdated");
static_assert(sizeof(FortHeroNotificationHandler_OnFortItemUpdated) == 0x000003, "Wrong size on FortHeroNotificationHandler_OnFortItemUpdated");
static_assert(offsetof(FortHeroNotificationHandler_OnFortItemUpdated, bItemChanged) == 0x000000, "Member 'FortHeroNotificationHandler_OnFortItemUpdated::bItemChanged' has a wrong offset!");
static_assert(offsetof(FortHeroNotificationHandler_OnFortItemUpdated, bAmmoChanged) == 0x000001, "Member 'FortHeroNotificationHandler_OnFortItemUpdated::bAmmoChanged' has a wrong offset!");
static_assert(offsetof(FortHeroNotificationHandler_OnFortItemUpdated, bIngredientsChanged) == 0x000002, "Member 'FortHeroNotificationHandler_OnFortItemUpdated::bIngredientsChanged' has a wrong offset!");

// Function FortniteUI.FortAsyncAction_WebCreateEpicAccountAndLink.WebCreateEpicAccountAndLink
// 0x0010 (0x0010 - 0x0000)
struct FortAsyncAction_WebCreateEpicAccountAndLink_WebCreateEpicAccountAndLink final
{
public:
	class UObject*                                InWorldContextObject;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAsyncAction_WebCreateEpicAccountAndLink* ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAsyncAction_WebCreateEpicAccountAndLink_WebCreateEpicAccountAndLink) == 0x000008, "Wrong alignment on FortAsyncAction_WebCreateEpicAccountAndLink_WebCreateEpicAccountAndLink");
static_assert(sizeof(FortAsyncAction_WebCreateEpicAccountAndLink_WebCreateEpicAccountAndLink) == 0x000010, "Wrong size on FortAsyncAction_WebCreateEpicAccountAndLink_WebCreateEpicAccountAndLink");
static_assert(offsetof(FortAsyncAction_WebCreateEpicAccountAndLink_WebCreateEpicAccountAndLink, InWorldContextObject) == 0x000000, "Member 'FortAsyncAction_WebCreateEpicAccountAndLink_WebCreateEpicAccountAndLink::InWorldContextObject' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_WebCreateEpicAccountAndLink_WebCreateEpicAccountAndLink, ReturnValue) == 0x000008, "Member 'FortAsyncAction_WebCreateEpicAccountAndLink_WebCreateEpicAccountAndLink::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAsyncAction_CreateHeadlessAccount.CreateHeadlessAccount
// 0x0010 (0x0010 - 0x0000)
struct FortAsyncAction_CreateHeadlessAccount_CreateHeadlessAccount final
{
public:
	class UObject*                                InWorldContextObject;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAsyncAction_CreateHeadlessAccount* ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAsyncAction_CreateHeadlessAccount_CreateHeadlessAccount) == 0x000008, "Wrong alignment on FortAsyncAction_CreateHeadlessAccount_CreateHeadlessAccount");
static_assert(sizeof(FortAsyncAction_CreateHeadlessAccount_CreateHeadlessAccount) == 0x000010, "Wrong size on FortAsyncAction_CreateHeadlessAccount_CreateHeadlessAccount");
static_assert(offsetof(FortAsyncAction_CreateHeadlessAccount_CreateHeadlessAccount, InWorldContextObject) == 0x000000, "Member 'FortAsyncAction_CreateHeadlessAccount_CreateHeadlessAccount::InWorldContextObject' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_CreateHeadlessAccount_CreateHeadlessAccount, ReturnValue) == 0x000008, "Member 'FortAsyncAction_CreateHeadlessAccount_CreateHeadlessAccount::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGridWidgetBase.GetTileForObject
// 0x0010 (0x0010 - 0x0000)
struct FortGridWidgetBase_GetTileForObject final
{
public:
	const class UObject*                          Object;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortGridPickerTile*                    ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridWidgetBase_GetTileForObject) == 0x000008, "Wrong alignment on FortGridWidgetBase_GetTileForObject");
static_assert(sizeof(FortGridWidgetBase_GetTileForObject) == 0x000010, "Wrong size on FortGridWidgetBase_GetTileForObject");
static_assert(offsetof(FortGridWidgetBase_GetTileForObject, Object) == 0x000000, "Member 'FortGridWidgetBase_GetTileForObject::Object' has a wrong offset!");
static_assert(offsetof(FortGridWidgetBase_GetTileForObject, ReturnValue) == 0x000008, "Member 'FortGridWidgetBase_GetTileForObject::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGridWidgetBase.GetTiles
// 0x0010 (0x0010 - 0x0000)
struct FortGridWidgetBase_GetTiles final
{
public:
	TArray<class UFortGridPickerTile*>            ReturnValue;                                       // 0x0000(0x0010)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridWidgetBase_GetTiles) == 0x000008, "Wrong alignment on FortGridWidgetBase_GetTiles");
static_assert(sizeof(FortGridWidgetBase_GetTiles) == 0x000010, "Wrong size on FortGridWidgetBase_GetTiles");
static_assert(offsetof(FortGridWidgetBase_GetTiles, ReturnValue) == 0x000000, "Member 'FortGridWidgetBase_GetTiles::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGridWidgetBase.SetClearWidgetType
// 0x0008 (0x0008 - 0x0000)
struct FortGridWidgetBase_SetClearWidgetType final
{
public:
	TSubclassOf<class UFortGridPickerTile>        InClearWidgetType;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridWidgetBase_SetClearWidgetType) == 0x000008, "Wrong alignment on FortGridWidgetBase_SetClearWidgetType");
static_assert(sizeof(FortGridWidgetBase_SetClearWidgetType) == 0x000008, "Wrong size on FortGridWidgetBase_SetClearWidgetType");
static_assert(offsetof(FortGridWidgetBase_SetClearWidgetType, InClearWidgetType) == 0x000000, "Member 'FortGridWidgetBase_SetClearWidgetType::InClearWidgetType' has a wrong offset!");

// Function FortniteUI.FortGridWidgetBase.SetDataProvider
// 0x0010 (0x0010 - 0x0000)
struct FortGridWidgetBase_SetDataProvider final
{
public:
	TArray<class UObject*>                        Data;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridWidgetBase_SetDataProvider) == 0x000008, "Wrong alignment on FortGridWidgetBase_SetDataProvider");
static_assert(sizeof(FortGridWidgetBase_SetDataProvider) == 0x000010, "Wrong size on FortGridWidgetBase_SetDataProvider");
static_assert(offsetof(FortGridWidgetBase_SetDataProvider, Data) == 0x000000, "Member 'FortGridWidgetBase_SetDataProvider::Data' has a wrong offset!");

// Function FortniteUI.FortGridWidgetBase.SetPeekOverflowTilePercentage
// 0x0004 (0x0004 - 0x0000)
struct FortGridWidgetBase_SetPeekOverflowTilePercentage final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridWidgetBase_SetPeekOverflowTilePercentage) == 0x000004, "Wrong alignment on FortGridWidgetBase_SetPeekOverflowTilePercentage");
static_assert(sizeof(FortGridWidgetBase_SetPeekOverflowTilePercentage) == 0x000004, "Wrong size on FortGridWidgetBase_SetPeekOverflowTilePercentage");
static_assert(offsetof(FortGridWidgetBase_SetPeekOverflowTilePercentage, Percent) == 0x000000, "Member 'FortGridWidgetBase_SetPeekOverflowTilePercentage::Percent' has a wrong offset!");

// Function FortniteUI.FortGridWidgetBase.SetTileHeight
// 0x0004 (0x0004 - 0x0000)
struct FortGridWidgetBase_SetTileHeight final
{
public:
	float                                         Height;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridWidgetBase_SetTileHeight) == 0x000004, "Wrong alignment on FortGridWidgetBase_SetTileHeight");
static_assert(sizeof(FortGridWidgetBase_SetTileHeight) == 0x000004, "Wrong size on FortGridWidgetBase_SetTileHeight");
static_assert(offsetof(FortGridWidgetBase_SetTileHeight, Height) == 0x000000, "Member 'FortGridWidgetBase_SetTileHeight::Height' has a wrong offset!");

// Function FortniteUI.FortGridWidgetBase.SetTilePadding
// 0x0010 (0x0010 - 0x0000)
struct FortGridWidgetBase_SetTilePadding final
{
public:
	struct FMargin                                Padding;                                           // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridWidgetBase_SetTilePadding) == 0x000004, "Wrong alignment on FortGridWidgetBase_SetTilePadding");
static_assert(sizeof(FortGridWidgetBase_SetTilePadding) == 0x000010, "Wrong size on FortGridWidgetBase_SetTilePadding");
static_assert(offsetof(FortGridWidgetBase_SetTilePadding, Padding) == 0x000000, "Member 'FortGridWidgetBase_SetTilePadding::Padding' has a wrong offset!");

// Function FortniteUI.FortGridWidgetBase.SetTilesAcross
// 0x0004 (0x0004 - 0x0000)
struct FortGridWidgetBase_SetTilesAcross final
{
public:
	int32                                         Across;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridWidgetBase_SetTilesAcross) == 0x000004, "Wrong alignment on FortGridWidgetBase_SetTilesAcross");
static_assert(sizeof(FortGridWidgetBase_SetTilesAcross) == 0x000004, "Wrong size on FortGridWidgetBase_SetTilesAcross");
static_assert(offsetof(FortGridWidgetBase_SetTilesAcross, Across) == 0x000000, "Member 'FortGridWidgetBase_SetTilesAcross::Across' has a wrong offset!");

// Function FortniteUI.FortGridWidgetBase.SetTilesDown
// 0x0004 (0x0004 - 0x0000)
struct FortGridWidgetBase_SetTilesDown final
{
public:
	int32                                         Down;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridWidgetBase_SetTilesDown) == 0x000004, "Wrong alignment on FortGridWidgetBase_SetTilesDown");
static_assert(sizeof(FortGridWidgetBase_SetTilesDown) == 0x000004, "Wrong size on FortGridWidgetBase_SetTilesDown");
static_assert(offsetof(FortGridWidgetBase_SetTilesDown, Down) == 0x000000, "Member 'FortGridWidgetBase_SetTilesDown::Down' has a wrong offset!");

// Function FortniteUI.FortGridWidgetBase.SetTileWidth
// 0x0004 (0x0004 - 0x0000)
struct FortGridWidgetBase_SetTileWidth final
{
public:
	float                                         Width;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridWidgetBase_SetTileWidth) == 0x000004, "Wrong alignment on FortGridWidgetBase_SetTileWidth");
static_assert(sizeof(FortGridWidgetBase_SetTileWidth) == 0x000004, "Wrong size on FortGridWidgetBase_SetTileWidth");
static_assert(offsetof(FortGridWidgetBase_SetTileWidth, Width) == 0x000000, "Member 'FortGridWidgetBase_SetTileWidth::Width' has a wrong offset!");

// DelegateFunction FortniteUI.FortGridPickerButton.CreateGridWidget__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortGridPickerButton_CreateGridWidget__DelegateSignature final
{
public:
	class UFortGridPickerGrid*                    ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridPickerButton_CreateGridWidget__DelegateSignature) == 0x000008, "Wrong alignment on FortGridPickerButton_CreateGridWidget__DelegateSignature");
static_assert(sizeof(FortGridPickerButton_CreateGridWidget__DelegateSignature) == 0x000008, "Wrong size on FortGridPickerButton_CreateGridWidget__DelegateSignature");
static_assert(offsetof(FortGridPickerButton_CreateGridWidget__DelegateSignature, ReturnValue) == 0x000000, "Member 'FortGridPickerButton_CreateGridWidget__DelegateSignature::ReturnValue' has a wrong offset!");

// DelegateFunction FortniteUI.FortGridPickerButton.OnIsGridPickerOpenChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct FortGridPickerButton_OnIsGridPickerOpenChanged__DelegateSignature final
{
public:
	bool                                          IsOpen;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridPickerButton_OnIsGridPickerOpenChanged__DelegateSignature) == 0x000001, "Wrong alignment on FortGridPickerButton_OnIsGridPickerOpenChanged__DelegateSignature");
static_assert(sizeof(FortGridPickerButton_OnIsGridPickerOpenChanged__DelegateSignature) == 0x000001, "Wrong size on FortGridPickerButton_OnIsGridPickerOpenChanged__DelegateSignature");
static_assert(offsetof(FortGridPickerButton_OnIsGridPickerOpenChanged__DelegateSignature, IsOpen) == 0x000000, "Member 'FortGridPickerButton_OnIsGridPickerOpenChanged__DelegateSignature::IsOpen' has a wrong offset!");

// Function FortniteUI.FortGridPickerButton.SetIsOpen
// 0x0001 (0x0001 - 0x0000)
struct FortGridPickerButton_SetIsOpen final
{
public:
	bool                                          ShouldBeOpen;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGridPickerButton_SetIsOpen) == 0x000001, "Wrong alignment on FortGridPickerButton_SetIsOpen");
static_assert(sizeof(FortGridPickerButton_SetIsOpen) == 0x000001, "Wrong size on FortGridPickerButton_SetIsOpen");
static_assert(offsetof(FortGridPickerButton_SetIsOpen, ShouldBeOpen) == 0x000000, "Member 'FortGridPickerButton_SetIsOpen::ShouldBeOpen' has a wrong offset!");

// Function FortniteUI.FortOptionsTab.IsAthena
// 0x0001 (0x0001 - 0x0000)
struct FortOptionsTab_IsAthena final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortOptionsTab_IsAthena) == 0x000001, "Wrong alignment on FortOptionsTab_IsAthena");
static_assert(sizeof(FortOptionsTab_IsAthena) == 0x000001, "Wrong size on FortOptionsTab_IsAthena");
static_assert(offsetof(FortOptionsTab_IsAthena, ReturnValue) == 0x000000, "Member 'FortOptionsTab_IsAthena::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortOptionsTab.IsPS4Platform
// 0x0001 (0x0001 - 0x0000)
struct FortOptionsTab_IsPS4Platform final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortOptionsTab_IsPS4Platform) == 0x000001, "Wrong alignment on FortOptionsTab_IsPS4Platform");
static_assert(sizeof(FortOptionsTab_IsPS4Platform) == 0x000001, "Wrong size on FortOptionsTab_IsPS4Platform");
static_assert(offsetof(FortOptionsTab_IsPS4Platform, ReturnValue) == 0x000000, "Member 'FortOptionsTab_IsPS4Platform::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortOptionsTab.IsXboxPlatform
// 0x0001 (0x0001 - 0x0000)
struct FortOptionsTab_IsXboxPlatform final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortOptionsTab_IsXboxPlatform) == 0x000001, "Wrong alignment on FortOptionsTab_IsXboxPlatform");
static_assert(sizeof(FortOptionsTab_IsXboxPlatform) == 0x000001, "Wrong size on FortOptionsTab_IsXboxPlatform");
static_assert(offsetof(FortOptionsTab_IsXboxPlatform, ReturnValue) == 0x000000, "Member 'FortOptionsTab_IsXboxPlatform::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAccountStatsContext.CanShowAccountStats
// 0x0001 (0x0001 - 0x0000)
struct FortAccountStatsContext_CanShowAccountStats final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAccountStatsContext_CanShowAccountStats) == 0x000001, "Wrong alignment on FortAccountStatsContext_CanShowAccountStats");
static_assert(sizeof(FortAccountStatsContext_CanShowAccountStats) == 0x000001, "Wrong size on FortAccountStatsContext_CanShowAccountStats");
static_assert(offsetof(FortAccountStatsContext_CanShowAccountStats, ReturnValue) == 0x000000, "Member 'FortAccountStatsContext_CanShowAccountStats::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAccountWidgetBase.HandleCurrentlyViewedAccountInfoChanged
// 0x0034 (0x0034 - 0x0000)
struct FortAccountWidgetBase_HandleCurrentlyViewedAccountInfoChanged final
{
public:
	struct FFortPublicAccountInfo                 NewInfo;                                           // 0x0000(0x0034)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAccountWidgetBase_HandleCurrentlyViewedAccountInfoChanged) == 0x000004, "Wrong alignment on FortAccountWidgetBase_HandleCurrentlyViewedAccountInfoChanged");
static_assert(sizeof(FortAccountWidgetBase_HandleCurrentlyViewedAccountInfoChanged) == 0x000034, "Wrong size on FortAccountWidgetBase_HandleCurrentlyViewedAccountInfoChanged");
static_assert(offsetof(FortAccountWidgetBase_HandleCurrentlyViewedAccountInfoChanged, NewInfo) == 0x000000, "Member 'FortAccountWidgetBase_HandleCurrentlyViewedAccountInfoChanged::NewInfo' has a wrong offset!");

// Function FortniteUI.FortAccountWidgetBase.OnAccountInfoChanged
// 0x0034 (0x0034 - 0x0000)
struct FortAccountWidgetBase_OnAccountInfoChanged final
{
public:
	struct FFortPublicAccountInfo                 Result;                                            // 0x0000(0x0034)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAccountWidgetBase_OnAccountInfoChanged) == 0x000004, "Wrong alignment on FortAccountWidgetBase_OnAccountInfoChanged");
static_assert(sizeof(FortAccountWidgetBase_OnAccountInfoChanged) == 0x000034, "Wrong size on FortAccountWidgetBase_OnAccountInfoChanged");
static_assert(offsetof(FortAccountWidgetBase_OnAccountInfoChanged, Result) == 0x000000, "Member 'FortAccountWidgetBase_OnAccountInfoChanged::Result' has a wrong offset!");

// Function FortniteUI.FortAccountWidgetBase.GetNextSeasonChaseReward
// 0x0020 (0x0020 - 0x0000)
struct FortAccountWidgetBase_GetNextSeasonChaseReward final
{
public:
	struct FFortItemInstanceQuantityPair          Reward;                                            // 0x0000(0x0010)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         RewardLevel;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StartingLevel;                                     // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAccountWidgetBase_GetNextSeasonChaseReward) == 0x000008, "Wrong alignment on FortAccountWidgetBase_GetNextSeasonChaseReward");
static_assert(sizeof(FortAccountWidgetBase_GetNextSeasonChaseReward) == 0x000020, "Wrong size on FortAccountWidgetBase_GetNextSeasonChaseReward");
static_assert(offsetof(FortAccountWidgetBase_GetNextSeasonChaseReward, Reward) == 0x000000, "Member 'FortAccountWidgetBase_GetNextSeasonChaseReward::Reward' has a wrong offset!");
static_assert(offsetof(FortAccountWidgetBase_GetNextSeasonChaseReward, RewardLevel) == 0x000010, "Member 'FortAccountWidgetBase_GetNextSeasonChaseReward::RewardLevel' has a wrong offset!");
static_assert(offsetof(FortAccountWidgetBase_GetNextSeasonChaseReward, StartingLevel) == 0x000014, "Member 'FortAccountWidgetBase_GetNextSeasonChaseReward::StartingLevel' has a wrong offset!");
static_assert(offsetof(FortAccountWidgetBase_GetNextSeasonChaseReward, ReturnValue) == 0x000018, "Member 'FortAccountWidgetBase_GetNextSeasonChaseReward::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAccountWidgetBase.GetNextSeasonReward
// 0x0018 (0x0018 - 0x0000)
struct FortAccountWidgetBase_GetNextSeasonReward final
{
public:
	struct FFortItemInstanceQuantityPair          Reward;                                            // 0x0000(0x0010)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         RewardLevel;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAccountWidgetBase_GetNextSeasonReward) == 0x000008, "Wrong alignment on FortAccountWidgetBase_GetNextSeasonReward");
static_assert(sizeof(FortAccountWidgetBase_GetNextSeasonReward) == 0x000018, "Wrong size on FortAccountWidgetBase_GetNextSeasonReward");
static_assert(offsetof(FortAccountWidgetBase_GetNextSeasonReward, Reward) == 0x000000, "Member 'FortAccountWidgetBase_GetNextSeasonReward::Reward' has a wrong offset!");
static_assert(offsetof(FortAccountWidgetBase_GetNextSeasonReward, RewardLevel) == 0x000010, "Member 'FortAccountWidgetBase_GetNextSeasonReward::RewardLevel' has a wrong offset!");
static_assert(offsetof(FortAccountWidgetBase_GetNextSeasonReward, ReturnValue) == 0x000014, "Member 'FortAccountWidgetBase_GetNextSeasonReward::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAccountWidgetBase.GetSeasonBannerInfo
// 0x0058 (0x0058 - 0x0000)
struct FortAccountWidgetBase_GetSeasonBannerInfo final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAthenaSeasonBannerLevel               ReturnValue;                                       // 0x0008(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAccountWidgetBase_GetSeasonBannerInfo) == 0x000008, "Wrong alignment on FortAccountWidgetBase_GetSeasonBannerInfo");
static_assert(sizeof(FortAccountWidgetBase_GetSeasonBannerInfo) == 0x000058, "Wrong size on FortAccountWidgetBase_GetSeasonBannerInfo");
static_assert(offsetof(FortAccountWidgetBase_GetSeasonBannerInfo, Level) == 0x000000, "Member 'FortAccountWidgetBase_GetSeasonBannerInfo::Level' has a wrong offset!");
static_assert(offsetof(FortAccountWidgetBase_GetSeasonBannerInfo, ReturnValue) == 0x000008, "Member 'FortAccountWidgetBase_GetSeasonBannerInfo::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.AddPointOfInterest
// 0x0028 (0x0028 - 0x0000)
struct FortHUDContext_AddPointOfInterest final
{
public:
	class AActor*                                 PointOfInterest;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   DisplayText;                                       // 0x0008(0x0018)(Parm, NativeAccessSpecifierPublic)
	class UTexture2D*                             DisplayImage;                                      // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_AddPointOfInterest) == 0x000008, "Wrong alignment on FortHUDContext_AddPointOfInterest");
static_assert(sizeof(FortHUDContext_AddPointOfInterest) == 0x000028, "Wrong size on FortHUDContext_AddPointOfInterest");
static_assert(offsetof(FortHUDContext_AddPointOfInterest, PointOfInterest) == 0x000000, "Member 'FortHUDContext_AddPointOfInterest::PointOfInterest' has a wrong offset!");
static_assert(offsetof(FortHUDContext_AddPointOfInterest, DisplayText) == 0x000008, "Member 'FortHUDContext_AddPointOfInterest::DisplayText' has a wrong offset!");
static_assert(offsetof(FortHUDContext_AddPointOfInterest, DisplayImage) == 0x000020, "Member 'FortHUDContext_AddPointOfInterest::DisplayImage' has a wrong offset!");

// Function FortniteUI.FortHUDContext.EnterCursorMode
// 0x0010 (0x0010 - 0x0000)
struct FortHUDContext_EnterCursorMode final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            CursorModeWidget;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_EnterCursorMode) == 0x000008, "Wrong alignment on FortHUDContext_EnterCursorMode");
static_assert(sizeof(FortHUDContext_EnterCursorMode) == 0x000010, "Wrong size on FortHUDContext_EnterCursorMode");
static_assert(offsetof(FortHUDContext_EnterCursorMode, ActionName) == 0x000000, "Member 'FortHUDContext_EnterCursorMode::ActionName' has a wrong offset!");
static_assert(offsetof(FortHUDContext_EnterCursorMode, CursorModeWidget) == 0x000008, "Member 'FortHUDContext_EnterCursorMode::CursorModeWidget' has a wrong offset!");

// Function FortniteUI.FortHUDContext.ForwardOnNumSurvivorsRescuedChanged
// 0x0004 (0x0004 - 0x0000)
struct FortHUDContext_ForwardOnNumSurvivorsRescuedChanged final
{
public:
	int32                                         NumSurvivorsRescued;                               // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_ForwardOnNumSurvivorsRescuedChanged) == 0x000004, "Wrong alignment on FortHUDContext_ForwardOnNumSurvivorsRescuedChanged");
static_assert(sizeof(FortHUDContext_ForwardOnNumSurvivorsRescuedChanged) == 0x000004, "Wrong size on FortHUDContext_ForwardOnNumSurvivorsRescuedChanged");
static_assert(offsetof(FortHUDContext_ForwardOnNumSurvivorsRescuedChanged, NumSurvivorsRescued) == 0x000000, "Member 'FortHUDContext_ForwardOnNumSurvivorsRescuedChanged::NumSurvivorsRescued' has a wrong offset!");

// Function FortniteUI.FortHUDContext.ForwardOnWeaponEquipped
// 0x0010 (0x0010 - 0x0000)
struct FortHUDContext_ForwardOnWeaponEquipped final
{
public:
	class AFortWeapon*                            NewWeapon;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWeapon*                            PrevWeapon;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_ForwardOnWeaponEquipped) == 0x000008, "Wrong alignment on FortHUDContext_ForwardOnWeaponEquipped");
static_assert(sizeof(FortHUDContext_ForwardOnWeaponEquipped) == 0x000010, "Wrong size on FortHUDContext_ForwardOnWeaponEquipped");
static_assert(offsetof(FortHUDContext_ForwardOnWeaponEquipped, NewWeapon) == 0x000000, "Member 'FortHUDContext_ForwardOnWeaponEquipped::NewWeapon' has a wrong offset!");
static_assert(offsetof(FortHUDContext_ForwardOnWeaponEquipped, PrevWeapon) == 0x000008, "Member 'FortHUDContext_ForwardOnWeaponEquipped::PrevWeapon' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetKillerVisualInfoFromDeathReport
// 0x00E0 (0x00E0 - 0x0000)
struct FortHUDContext_GetKillerVisualInfoFromDeathReport final
{
public:
	struct FFortPlayerDeathReport                 DeathReport;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFortKillerVisualInfo                  ReturnValue;                                       // 0x0050(0x0090)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetKillerVisualInfoFromDeathReport) == 0x000008, "Wrong alignment on FortHUDContext_GetKillerVisualInfoFromDeathReport");
static_assert(sizeof(FortHUDContext_GetKillerVisualInfoFromDeathReport) == 0x0000E0, "Wrong size on FortHUDContext_GetKillerVisualInfoFromDeathReport");
static_assert(offsetof(FortHUDContext_GetKillerVisualInfoFromDeathReport, DeathReport) == 0x000000, "Member 'FortHUDContext_GetKillerVisualInfoFromDeathReport::DeathReport' has a wrong offset!");
static_assert(offsetof(FortHUDContext_GetKillerVisualInfoFromDeathReport, ReturnValue) == 0x000050, "Member 'FortHUDContext_GetKillerVisualInfoFromDeathReport::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.HandleLocalPawnDied
// 0x0050 (0x0050 - 0x0000)
struct FortHUDContext_HandleLocalPawnDied final
{
public:
	struct FFortPlayerDeathReport                 DeathReport;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_HandleLocalPawnDied) == 0x000008, "Wrong alignment on FortHUDContext_HandleLocalPawnDied");
static_assert(sizeof(FortHUDContext_HandleLocalPawnDied) == 0x000050, "Wrong size on FortHUDContext_HandleLocalPawnDied");
static_assert(offsetof(FortHUDContext_HandleLocalPawnDied, DeathReport) == 0x000000, "Member 'FortHUDContext_HandleLocalPawnDied::DeathReport' has a wrong offset!");

// Function FortniteUI.FortHUDContext.RemovePointOfInterest
// 0x0008 (0x0008 - 0x0000)
struct FortHUDContext_RemovePointOfInterest final
{
public:
	class AActor*                                 PointOfInterest;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_RemovePointOfInterest) == 0x000008, "Wrong alignment on FortHUDContext_RemovePointOfInterest");
static_assert(sizeof(FortHUDContext_RemovePointOfInterest) == 0x000008, "Wrong size on FortHUDContext_RemovePointOfInterest");
static_assert(offsetof(FortHUDContext_RemovePointOfInterest, PointOfInterest) == 0x000000, "Member 'FortHUDContext_RemovePointOfInterest::PointOfInterest' has a wrong offset!");

// Function FortniteUI.FortHUDContext.RequestMgmtMenuTab
// 0x0008 (0x0008 - 0x0000)
struct FortHUDContext_RequestMgmtMenuTab final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_RequestMgmtMenuTab) == 0x000004, "Wrong alignment on FortHUDContext_RequestMgmtMenuTab");
static_assert(sizeof(FortHUDContext_RequestMgmtMenuTab) == 0x000008, "Wrong size on FortHUDContext_RequestMgmtMenuTab");
static_assert(offsetof(FortHUDContext_RequestMgmtMenuTab, TabName) == 0x000000, "Member 'FortHUDContext_RequestMgmtMenuTab::TabName' has a wrong offset!");

// Function FortniteUI.FortHUDContext.SetCursorModeLocked
// 0x0001 (0x0001 - 0x0000)
struct FortHUDContext_SetCursorModeLocked final
{
public:
	bool                                          bLocked;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_SetCursorModeLocked) == 0x000001, "Wrong alignment on FortHUDContext_SetCursorModeLocked");
static_assert(sizeof(FortHUDContext_SetCursorModeLocked) == 0x000001, "Wrong size on FortHUDContext_SetCursorModeLocked");
static_assert(offsetof(FortHUDContext_SetCursorModeLocked, bLocked) == 0x000000, "Member 'FortHUDContext_SetCursorModeLocked::bLocked' has a wrong offset!");

// Function FortniteUI.FortHUDContext.SetHUDElementVisibility
// 0x0028 (0x0028 - 0x0000)
struct FortHUDContext_SetHUDElementVisibility final
{
public:
	struct FGameplayTagContainer                  HUDElementTags;                                    // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bHideElements;                                     // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHUDContext_SetHUDElementVisibility) == 0x000008, "Wrong alignment on FortHUDContext_SetHUDElementVisibility");
static_assert(sizeof(FortHUDContext_SetHUDElementVisibility) == 0x000028, "Wrong size on FortHUDContext_SetHUDElementVisibility");
static_assert(offsetof(FortHUDContext_SetHUDElementVisibility, HUDElementTags) == 0x000000, "Member 'FortHUDContext_SetHUDElementVisibility::HUDElementTags' has a wrong offset!");
static_assert(offsetof(FortHUDContext_SetHUDElementVisibility, bHideElements) == 0x000020, "Member 'FortHUDContext_SetHUDElementVisibility::bHideElements' has a wrong offset!");

// Function FortniteUI.FortHUDContext.SetIndicatorsAllowed
// 0x0001 (0x0001 - 0x0000)
struct FortHUDContext_SetIndicatorsAllowed final
{
public:
	bool                                          bIndicatorsAllowed;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_SetIndicatorsAllowed) == 0x000001, "Wrong alignment on FortHUDContext_SetIndicatorsAllowed");
static_assert(sizeof(FortHUDContext_SetIndicatorsAllowed) == 0x000001, "Wrong size on FortHUDContext_SetIndicatorsAllowed");
static_assert(offsetof(FortHUDContext_SetIndicatorsAllowed, bIndicatorsAllowed) == 0x000000, "Member 'FortHUDContext_SetIndicatorsAllowed::bIndicatorsAllowed' has a wrong offset!");

// Function FortniteUI.FortHUDContext.SetIndicatorsState
// 0x0001 (0x0001 - 0x0000)
struct FortHUDContext_SetIndicatorsState final
{
public:
	EFortIndicatorState                           NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_SetIndicatorsState) == 0x000001, "Wrong alignment on FortHUDContext_SetIndicatorsState");
static_assert(sizeof(FortHUDContext_SetIndicatorsState) == 0x000001, "Wrong size on FortHUDContext_SetIndicatorsState");
static_assert(offsetof(FortHUDContext_SetIndicatorsState, NewState) == 0x000000, "Member 'FortHUDContext_SetIndicatorsState::NewState' has a wrong offset!");

// Function FortniteUI.FortHUDContext.SetPreparingMgmtMenu
// 0x0001 (0x0001 - 0x0000)
struct FortHUDContext_SetPreparingMgmtMenu final
{
public:
	bool                                          bPreparing;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_SetPreparingMgmtMenu) == 0x000001, "Wrong alignment on FortHUDContext_SetPreparingMgmtMenu");
static_assert(sizeof(FortHUDContext_SetPreparingMgmtMenu) == 0x000001, "Wrong size on FortHUDContext_SetPreparingMgmtMenu");
static_assert(offsetof(FortHUDContext_SetPreparingMgmtMenu, bPreparing) == 0x000000, "Member 'FortHUDContext_SetPreparingMgmtMenu::bPreparing' has a wrong offset!");

// Function FortniteUI.FortHUDContext.AreHUDElementsVisible
// 0x0028 (0x0028 - 0x0000)
struct FortHUDContext_AreHUDElementsVisible final
{
public:
	struct FGameplayTagContainer                  HUDElementTags;                                    // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHUDContext_AreHUDElementsVisible) == 0x000008, "Wrong alignment on FortHUDContext_AreHUDElementsVisible");
static_assert(sizeof(FortHUDContext_AreHUDElementsVisible) == 0x000028, "Wrong size on FortHUDContext_AreHUDElementsVisible");
static_assert(offsetof(FortHUDContext_AreHUDElementsVisible, HUDElementTags) == 0x000000, "Member 'FortHUDContext_AreHUDElementsVisible::HUDElementTags' has a wrong offset!");
static_assert(offsetof(FortHUDContext_AreHUDElementsVisible, ReturnValue) == 0x000020, "Member 'FortHUDContext_AreHUDElementsVisible::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.AreIndicatorsEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortHUDContext_AreIndicatorsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_AreIndicatorsEnabled) == 0x000001, "Wrong alignment on FortHUDContext_AreIndicatorsEnabled");
static_assert(sizeof(FortHUDContext_AreIndicatorsEnabled) == 0x000001, "Wrong size on FortHUDContext_AreIndicatorsEnabled");
static_assert(offsetof(FortHUDContext_AreIndicatorsEnabled, ReturnValue) == 0x000000, "Member 'FortHUDContext_AreIndicatorsEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetBluGloManager
// 0x0008 (0x0008 - 0x0000)
struct FortHUDContext_GetBluGloManager final
{
public:
	class AFortBluGloManager*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetBluGloManager) == 0x000008, "Wrong alignment on FortHUDContext_GetBluGloManager");
static_assert(sizeof(FortHUDContext_GetBluGloManager) == 0x000008, "Wrong size on FortHUDContext_GetBluGloManager");
static_assert(offsetof(FortHUDContext_GetBluGloManager, ReturnValue) == 0x000000, "Member 'FortHUDContext_GetBluGloManager::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetCurrentBasicMissionInfo
// 0x0330 (0x0330 - 0x0000)
struct FortHUDContext_GetCurrentBasicMissionInfo final
{
public:
	struct FFortBasicMissionInfo                  BasicMissionInfo;                                  // 0x0000(0x0328)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0328(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHUDContext_GetCurrentBasicMissionInfo) == 0x000008, "Wrong alignment on FortHUDContext_GetCurrentBasicMissionInfo");
static_assert(sizeof(FortHUDContext_GetCurrentBasicMissionInfo) == 0x000330, "Wrong size on FortHUDContext_GetCurrentBasicMissionInfo");
static_assert(offsetof(FortHUDContext_GetCurrentBasicMissionInfo, BasicMissionInfo) == 0x000000, "Member 'FortHUDContext_GetCurrentBasicMissionInfo::BasicMissionInfo' has a wrong offset!");
static_assert(offsetof(FortHUDContext_GetCurrentBasicMissionInfo, ReturnValue) == 0x000328, "Member 'FortHUDContext_GetCurrentBasicMissionInfo::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetCurrentHero
// 0x0008 (0x0008 - 0x0000)
struct FortHUDContext_GetCurrentHero final
{
public:
	class UFortHero*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetCurrentHero) == 0x000008, "Wrong alignment on FortHUDContext_GetCurrentHero");
static_assert(sizeof(FortHUDContext_GetCurrentHero) == 0x000008, "Wrong size on FortHUDContext_GetCurrentHero");
static_assert(offsetof(FortHUDContext_GetCurrentHero, ReturnValue) == 0x000000, "Member 'FortHUDContext_GetCurrentHero::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetEarnedBadges
// 0x0010 (0x0010 - 0x0000)
struct FortHUDContext_GetEarnedBadges final
{
public:
	TArray<struct FEarnedBadgeEntry>              ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetEarnedBadges) == 0x000008, "Wrong alignment on FortHUDContext_GetEarnedBadges");
static_assert(sizeof(FortHUDContext_GetEarnedBadges) == 0x000010, "Wrong size on FortHUDContext_GetEarnedBadges");
static_assert(offsetof(FortHUDContext_GetEarnedBadges, ReturnValue) == 0x000000, "Member 'FortHUDContext_GetEarnedBadges::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetFocusedBuildingInfo
// 0x0058 (0x0058 - 0x0000)
struct FortHUDContext_GetFocusedBuildingInfo final
{
public:
	struct FFortFocusedBuildingInfo               OutBuildingInfo;                                   // 0x0000(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHUDContext_GetFocusedBuildingInfo) == 0x000008, "Wrong alignment on FortHUDContext_GetFocusedBuildingInfo");
static_assert(sizeof(FortHUDContext_GetFocusedBuildingInfo) == 0x000058, "Wrong size on FortHUDContext_GetFocusedBuildingInfo");
static_assert(offsetof(FortHUDContext_GetFocusedBuildingInfo, OutBuildingInfo) == 0x000000, "Member 'FortHUDContext_GetFocusedBuildingInfo::OutBuildingInfo' has a wrong offset!");
static_assert(offsetof(FortHUDContext_GetFocusedBuildingInfo, ReturnValue) == 0x000050, "Member 'FortHUDContext_GetFocusedBuildingInfo::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetFocusedMission
// 0x0008 (0x0008 - 0x0000)
struct FortHUDContext_GetFocusedMission final
{
public:
	class AFortMission*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetFocusedMission) == 0x000008, "Wrong alignment on FortHUDContext_GetFocusedMission");
static_assert(sizeof(FortHUDContext_GetFocusedMission) == 0x000008, "Wrong size on FortHUDContext_GetFocusedMission");
static_assert(offsetof(FortHUDContext_GetFocusedMission, ReturnValue) == 0x000000, "Member 'FortHUDContext_GetFocusedMission::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetGameStateZone
// 0x0008 (0x0008 - 0x0000)
struct FortHUDContext_GetGameStateZone final
{
public:
	class AFortGameStateZone*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetGameStateZone) == 0x000008, "Wrong alignment on FortHUDContext_GetGameStateZone");
static_assert(sizeof(FortHUDContext_GetGameStateZone) == 0x000008, "Wrong size on FortHUDContext_GetGameStateZone");
static_assert(offsetof(FortHUDContext_GetGameStateZone, ReturnValue) == 0x000000, "Member 'FortHUDContext_GetGameStateZone::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetIndicatorsState
// 0x0001 (0x0001 - 0x0000)
struct FortHUDContext_GetIndicatorsState final
{
public:
	EFortIndicatorState                           ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetIndicatorsState) == 0x000001, "Wrong alignment on FortHUDContext_GetIndicatorsState");
static_assert(sizeof(FortHUDContext_GetIndicatorsState) == 0x000001, "Wrong size on FortHUDContext_GetIndicatorsState");
static_assert(offsetof(FortHUDContext_GetIndicatorsState, ReturnValue) == 0x000000, "Member 'FortHUDContext_GetIndicatorsState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetMissionManager
// 0x0008 (0x0008 - 0x0000)
struct FortHUDContext_GetMissionManager final
{
public:
	class AFortMissionManager*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetMissionManager) == 0x000008, "Wrong alignment on FortHUDContext_GetMissionManager");
static_assert(sizeof(FortHUDContext_GetMissionManager) == 0x000008, "Wrong size on FortHUDContext_GetMissionManager");
static_assert(offsetof(FortHUDContext_GetMissionManager, ReturnValue) == 0x000000, "Member 'FortHUDContext_GetMissionManager::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetMissionOverviewObjectives
// 0x0010 (0x0010 - 0x0000)
struct FortHUDContext_GetMissionOverviewObjectives final
{
public:
	TArray<struct FZoneLoadingScreenHeadingConfig> ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetMissionOverviewObjectives) == 0x000008, "Wrong alignment on FortHUDContext_GetMissionOverviewObjectives");
static_assert(sizeof(FortHUDContext_GetMissionOverviewObjectives) == 0x000010, "Wrong size on FortHUDContext_GetMissionOverviewObjectives");
static_assert(offsetof(FortHUDContext_GetMissionOverviewObjectives, ReturnValue) == 0x000000, "Member 'FortHUDContext_GetMissionOverviewObjectives::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetMissionRewards
// 0x0020 (0x0020 - 0x0000)
struct FortHUDContext_GetMissionRewards final
{
public:
	TArray<class UFortItem*>                      MissionRewards;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UFortItem*>                      MissionAlertRewards;                               // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetMissionRewards) == 0x000008, "Wrong alignment on FortHUDContext_GetMissionRewards");
static_assert(sizeof(FortHUDContext_GetMissionRewards) == 0x000020, "Wrong size on FortHUDContext_GetMissionRewards");
static_assert(offsetof(FortHUDContext_GetMissionRewards, MissionRewards) == 0x000000, "Member 'FortHUDContext_GetMissionRewards::MissionRewards' has a wrong offset!");
static_assert(offsetof(FortHUDContext_GetMissionRewards, MissionAlertRewards) == 0x000010, "Member 'FortHUDContext_GetMissionRewards::MissionAlertRewards' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetPlayerStateZone
// 0x0008 (0x0008 - 0x0000)
struct FortHUDContext_GetPlayerStateZone final
{
public:
	class AFortPlayerStateZone*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetPlayerStateZone) == 0x000008, "Wrong alignment on FortHUDContext_GetPlayerStateZone");
static_assert(sizeof(FortHUDContext_GetPlayerStateZone) == 0x000008, "Wrong size on FortHUDContext_GetPlayerStateZone");
static_assert(offsetof(FortHUDContext_GetPlayerStateZone, ReturnValue) == 0x000000, "Member 'FortHUDContext_GetPlayerStateZone::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetPotentialBadges
// 0x0010 (0x0010 - 0x0000)
struct FortHUDContext_GetPotentialBadges final
{
public:
	TArray<struct FFortBadgeCount>                ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetPotentialBadges) == 0x000008, "Wrong alignment on FortHUDContext_GetPotentialBadges");
static_assert(sizeof(FortHUDContext_GetPotentialBadges) == 0x000010, "Wrong size on FortHUDContext_GetPotentialBadges");
static_assert(offsetof(FortHUDContext_GetPotentialBadges, ReturnValue) == 0x000000, "Member 'FortHUDContext_GetPotentialBadges::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetScoreDisplayFactor
// 0x0004 (0x0004 - 0x0000)
struct FortHUDContext_GetScoreDisplayFactor final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetScoreDisplayFactor) == 0x000004, "Wrong alignment on FortHUDContext_GetScoreDisplayFactor");
static_assert(sizeof(FortHUDContext_GetScoreDisplayFactor) == 0x000004, "Wrong size on FortHUDContext_GetScoreDisplayFactor");
static_assert(offsetof(FortHUDContext_GetScoreDisplayFactor, ReturnValue) == 0x000000, "Member 'FortHUDContext_GetScoreDisplayFactor::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetTeamCornerstone
// 0x0010 (0x0010 - 0x0000)
struct FortHUDContext_GetTeamCornerstone final
{
public:
	EFortTeam                                     Team;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPvPBaseCornerstone*                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetTeamCornerstone) == 0x000008, "Wrong alignment on FortHUDContext_GetTeamCornerstone");
static_assert(sizeof(FortHUDContext_GetTeamCornerstone) == 0x000010, "Wrong size on FortHUDContext_GetTeamCornerstone");
static_assert(offsetof(FortHUDContext_GetTeamCornerstone, Team) == 0x000000, "Member 'FortHUDContext_GetTeamCornerstone::Team' has a wrong offset!");
static_assert(offsetof(FortHUDContext_GetTeamCornerstone, ReturnValue) == 0x000008, "Member 'FortHUDContext_GetTeamCornerstone::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.GetTimeToDelayEndOfDayZoneWidgetDisplay
// 0x0004 (0x0004 - 0x0000)
struct FortHUDContext_GetTimeToDelayEndOfDayZoneWidgetDisplay final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_GetTimeToDelayEndOfDayZoneWidgetDisplay) == 0x000004, "Wrong alignment on FortHUDContext_GetTimeToDelayEndOfDayZoneWidgetDisplay");
static_assert(sizeof(FortHUDContext_GetTimeToDelayEndOfDayZoneWidgetDisplay) == 0x000004, "Wrong size on FortHUDContext_GetTimeToDelayEndOfDayZoneWidgetDisplay");
static_assert(offsetof(FortHUDContext_GetTimeToDelayEndOfDayZoneWidgetDisplay, ReturnValue) == 0x000000, "Member 'FortHUDContext_GetTimeToDelayEndOfDayZoneWidgetDisplay::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.IsInCursorMode
// 0x0001 (0x0001 - 0x0000)
struct FortHUDContext_IsInCursorMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_IsInCursorMode) == 0x000001, "Wrong alignment on FortHUDContext_IsInCursorMode");
static_assert(sizeof(FortHUDContext_IsInCursorMode) == 0x000001, "Wrong size on FortHUDContext_IsInCursorMode");
static_assert(offsetof(FortHUDContext_IsInCursorMode, ReturnValue) == 0x000000, "Member 'FortHUDContext_IsInCursorMode::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.IsPreparingMgmtMenu
// 0x0001 (0x0001 - 0x0000)
struct FortHUDContext_IsPreparingMgmtMenu final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_IsPreparingMgmtMenu) == 0x000001, "Wrong alignment on FortHUDContext_IsPreparingMgmtMenu");
static_assert(sizeof(FortHUDContext_IsPreparingMgmtMenu) == 0x000001, "Wrong size on FortHUDContext_IsPreparingMgmtMenu");
static_assert(offsetof(FortHUDContext_IsPreparingMgmtMenu, ReturnValue) == 0x000000, "Member 'FortHUDContext_IsPreparingMgmtMenu::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDContext.ShouldOnlyShowNextPrevBuildingSlotKeybinds
// 0x0001 (0x0001 - 0x0000)
struct FortHUDContext_ShouldOnlyShowNextPrevBuildingSlotKeybinds final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDContext_ShouldOnlyShowNextPrevBuildingSlotKeybinds) == 0x000001, "Wrong alignment on FortHUDContext_ShouldOnlyShowNextPrevBuildingSlotKeybinds");
static_assert(sizeof(FortHUDContext_ShouldOnlyShowNextPrevBuildingSlotKeybinds) == 0x000001, "Wrong size on FortHUDContext_ShouldOnlyShowNextPrevBuildingSlotKeybinds");
static_assert(offsetof(FortHUDContext_ShouldOnlyShowNextPrevBuildingSlotKeybinds, ReturnValue) == 0x000000, "Member 'FortHUDContext_ShouldOnlyShowNextPrevBuildingSlotKeybinds::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortActionHandlerPanel.OnHandleAction
// 0x00C0 (0x00C0 - 0x0000)
struct FortActionHandlerPanel_OnHandleAction final
{
public:
	struct FEventReply                            Result;                                            // 0x0000(0x00B8)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          bPassThrough;                                      // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortActionHandlerPanel_OnHandleAction) == 0x000008, "Wrong alignment on FortActionHandlerPanel_OnHandleAction");
static_assert(sizeof(FortActionHandlerPanel_OnHandleAction) == 0x0000C0, "Wrong size on FortActionHandlerPanel_OnHandleAction");
static_assert(offsetof(FortActionHandlerPanel_OnHandleAction, Result) == 0x000000, "Member 'FortActionHandlerPanel_OnHandleAction::Result' has a wrong offset!");
static_assert(offsetof(FortActionHandlerPanel_OnHandleAction, bPassThrough) == 0x0000B8, "Member 'FortActionHandlerPanel_OnHandleAction::bPassThrough' has a wrong offset!");

// Function FortniteUI.FortActionHandlerPanel.RemoveOnPanelDeactivated
// 0x0008 (0x0008 - 0x0000)
struct FortActionHandlerPanel_RemoveOnPanelDeactivated final
{
public:
	class UObject*                                BoundObject;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortActionHandlerPanel_RemoveOnPanelDeactivated) == 0x000008, "Wrong alignment on FortActionHandlerPanel_RemoveOnPanelDeactivated");
static_assert(sizeof(FortActionHandlerPanel_RemoveOnPanelDeactivated) == 0x000008, "Wrong size on FortActionHandlerPanel_RemoveOnPanelDeactivated");
static_assert(offsetof(FortActionHandlerPanel_RemoveOnPanelDeactivated, BoundObject) == 0x000000, "Member 'FortActionHandlerPanel_RemoveOnPanelDeactivated::BoundObject' has a wrong offset!");

// Function FortniteUI.FortActionHandlerPanel.SetOnPanelActivated
// 0x0010 (0x0010 - 0x0000)
struct FortActionHandlerPanel_SetOnPanelActivated final
{
public:
	TDelegate<void()>                             OnActivatedHandler;                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortActionHandlerPanel_SetOnPanelActivated) == 0x000004, "Wrong alignment on FortActionHandlerPanel_SetOnPanelActivated");
static_assert(sizeof(FortActionHandlerPanel_SetOnPanelActivated) == 0x000010, "Wrong size on FortActionHandlerPanel_SetOnPanelActivated");
static_assert(offsetof(FortActionHandlerPanel_SetOnPanelActivated, OnActivatedHandler) == 0x000000, "Member 'FortActionHandlerPanel_SetOnPanelActivated::OnActivatedHandler' has a wrong offset!");

// Function FortniteUI.FortActionHandlerPanel.SetOnPanelDeactivated
// 0x0010 (0x0010 - 0x0000)
struct FortActionHandlerPanel_SetOnPanelDeactivated final
{
public:
	TDelegate<void()>                             OnDeactivatedHandler;                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortActionHandlerPanel_SetOnPanelDeactivated) == 0x000004, "Wrong alignment on FortActionHandlerPanel_SetOnPanelDeactivated");
static_assert(sizeof(FortActionHandlerPanel_SetOnPanelDeactivated) == 0x000010, "Wrong size on FortActionHandlerPanel_SetOnPanelDeactivated");
static_assert(offsetof(FortActionHandlerPanel_SetOnPanelDeactivated, OnDeactivatedHandler) == 0x000000, "Member 'FortActionHandlerPanel_SetOnPanelDeactivated::OnDeactivatedHandler' has a wrong offset!");

// Function FortniteUI.FortActorCanvas.AddActorIndicator
// 0x0010 (0x0010 - 0x0000)
struct FortActorCanvas_AddActorIndicator final
{
public:
	class UFortActorIndicatorWidget*              Indicator;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortActorCanvasSlot*                   ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortActorCanvas_AddActorIndicator) == 0x000008, "Wrong alignment on FortActorCanvas_AddActorIndicator");
static_assert(sizeof(FortActorCanvas_AddActorIndicator) == 0x000010, "Wrong size on FortActorCanvas_AddActorIndicator");
static_assert(offsetof(FortActorCanvas_AddActorIndicator, Indicator) == 0x000000, "Member 'FortActorCanvas_AddActorIndicator::Indicator' has a wrong offset!");
static_assert(offsetof(FortActorCanvas_AddActorIndicator, ReturnValue) == 0x000008, "Member 'FortActorCanvas_AddActorIndicator::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortActorCanvas.OnHUDElementVisibilityChanged
// 0x0020 (0x0020 - 0x0000)
struct FortActorCanvas_OnHUDElementVisibilityChanged final
{
public:
	struct FGameplayTagContainer                  HiddenHUDElementTags;                              // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortActorCanvas_OnHUDElementVisibilityChanged) == 0x000008, "Wrong alignment on FortActorCanvas_OnHUDElementVisibilityChanged");
static_assert(sizeof(FortActorCanvas_OnHUDElementVisibilityChanged) == 0x000020, "Wrong size on FortActorCanvas_OnHUDElementVisibilityChanged");
static_assert(offsetof(FortActorCanvas_OnHUDElementVisibilityChanged, HiddenHUDElementTags) == 0x000000, "Member 'FortActorCanvas_OnHUDElementVisibilityChanged::HiddenHUDElementTags' has a wrong offset!");

// Function FortniteUI.FortActorCanvasSlot.SetCanAutoRemove
// 0x0001 (0x0001 - 0x0000)
struct FortActorCanvasSlot_SetCanAutoRemove final
{
public:
	bool                                          bAllowAutoRemove;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortActorCanvasSlot_SetCanAutoRemove) == 0x000001, "Wrong alignment on FortActorCanvasSlot_SetCanAutoRemove");
static_assert(sizeof(FortActorCanvasSlot_SetCanAutoRemove) == 0x000001, "Wrong size on FortActorCanvasSlot_SetCanAutoRemove");
static_assert(offsetof(FortActorCanvasSlot_SetCanAutoRemove, bAllowAutoRemove) == 0x000000, "Member 'FortActorCanvasSlot_SetCanAutoRemove::bAllowAutoRemove' has a wrong offset!");

// Function FortniteUI.FortActorCanvasSlot.SetHorizontalAlignment
// 0x0001 (0x0001 - 0x0000)
struct FortActorCanvasSlot_SetHorizontalAlignment final
{
public:
	EHorizontalAlignment                          InHorizontalAlignment;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortActorCanvasSlot_SetHorizontalAlignment) == 0x000001, "Wrong alignment on FortActorCanvasSlot_SetHorizontalAlignment");
static_assert(sizeof(FortActorCanvasSlot_SetHorizontalAlignment) == 0x000001, "Wrong size on FortActorCanvasSlot_SetHorizontalAlignment");
static_assert(offsetof(FortActorCanvasSlot_SetHorizontalAlignment, InHorizontalAlignment) == 0x000000, "Member 'FortActorCanvasSlot_SetHorizontalAlignment::InHorizontalAlignment' has a wrong offset!");

// Function FortniteUI.FortActorCanvasSlot.SetVerticalAlignment
// 0x0001 (0x0001 - 0x0000)
struct FortActorCanvasSlot_SetVerticalAlignment final
{
public:
	EVerticalAlignment                            InVerticalAlignment;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortActorCanvasSlot_SetVerticalAlignment) == 0x000001, "Wrong alignment on FortActorCanvasSlot_SetVerticalAlignment");
static_assert(sizeof(FortActorCanvasSlot_SetVerticalAlignment) == 0x000001, "Wrong size on FortActorCanvasSlot_SetVerticalAlignment");
static_assert(offsetof(FortActorCanvasSlot_SetVerticalAlignment, InVerticalAlignment) == 0x000000, "Member 'FortActorCanvasSlot_SetVerticalAlignment::InVerticalAlignment' has a wrong offset!");

// Function FortniteUI.FortAlterationsWidget.OnGenerateAlteration
// 0x0018 (0x0018 - 0x0000)
struct FortAlterationsWidget_OnGenerateAlteration final
{
public:
	struct FFortUIAlteration                      AlterationInfo;                                    // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAlterationsWidget_OnGenerateAlteration) == 0x000008, "Wrong alignment on FortAlterationsWidget_OnGenerateAlteration");
static_assert(sizeof(FortAlterationsWidget_OnGenerateAlteration) == 0x000018, "Wrong size on FortAlterationsWidget_OnGenerateAlteration");
static_assert(offsetof(FortAlterationsWidget_OnGenerateAlteration, AlterationInfo) == 0x000000, "Member 'FortAlterationsWidget_OnGenerateAlteration::AlterationInfo' has a wrong offset!");

// Function FortniteUI.FortAlterationsWidget_NUI.OnGenerateAlteration
// 0x0018 (0x0018 - 0x0000)
struct FortAlterationsWidget_NUI_OnGenerateAlteration final
{
public:
	struct FFortUIAlteration                      AlterationInfo;                                    // 0x0000(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAlterationsWidget_NUI_OnGenerateAlteration) == 0x000008, "Wrong alignment on FortAlterationsWidget_NUI_OnGenerateAlteration");
static_assert(sizeof(FortAlterationsWidget_NUI_OnGenerateAlteration) == 0x000018, "Wrong size on FortAlterationsWidget_NUI_OnGenerateAlteration");
static_assert(offsetof(FortAlterationsWidget_NUI_OnGenerateAlteration, AlterationInfo) == 0x000000, "Member 'FortAlterationsWidget_NUI_OnGenerateAlteration::AlterationInfo' has a wrong offset!");

// Function FortniteUI.FortAlterationsWidget_NUI.SetItem
// 0x0008 (0x0008 - 0x0000)
struct FortAlterationsWidget_NUI_SetItem final
{
public:
	class UFortItem*                              InItem;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAlterationsWidget_NUI_SetItem) == 0x000008, "Wrong alignment on FortAlterationsWidget_NUI_SetItem");
static_assert(sizeof(FortAlterationsWidget_NUI_SetItem) == 0x000008, "Wrong size on FortAlterationsWidget_NUI_SetItem");
static_assert(offsetof(FortAlterationsWidget_NUI_SetItem, InItem) == 0x000000, "Member 'FortAlterationsWidget_NUI_SetItem::InItem' has a wrong offset!");

// Function FortniteUI.FortAlterationsWidget_NUI.SetItemToCompareWith
// 0x0008 (0x0008 - 0x0000)
struct FortAlterationsWidget_NUI_SetItemToCompareWith final
{
public:
	class UFortItem*                              InItem;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAlterationsWidget_NUI_SetItemToCompareWith) == 0x000008, "Wrong alignment on FortAlterationsWidget_NUI_SetItemToCompareWith");
static_assert(sizeof(FortAlterationsWidget_NUI_SetItemToCompareWith) == 0x000008, "Wrong size on FortAlterationsWidget_NUI_SetItemToCompareWith");
static_assert(offsetof(FortAlterationsWidget_NUI_SetItemToCompareWith, InItem) == 0x000000, "Member 'FortAlterationsWidget_NUI_SetItemToCompareWith::InItem' has a wrong offset!");

// Function FortniteUI.FortAlterationsWidget_NUI.SetState
// 0x0001 (0x0001 - 0x0000)
struct FortAlterationsWidget_NUI_SetState final
{
public:
	EFortAlterationWidgetState                    InState;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAlterationsWidget_NUI_SetState) == 0x000001, "Wrong alignment on FortAlterationsWidget_NUI_SetState");
static_assert(sizeof(FortAlterationsWidget_NUI_SetState) == 0x000001, "Wrong size on FortAlterationsWidget_NUI_SetState");
static_assert(offsetof(FortAlterationsWidget_NUI_SetState, InState) == 0x000000, "Member 'FortAlterationsWidget_NUI_SetState::InState' has a wrong offset!");

// Function FortniteUI.FortHomeCMSScreenBase.AreTilesLoaded
// 0x0001 (0x0001 - 0x0000)
struct FortHomeCMSScreenBase_AreTilesLoaded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomeCMSScreenBase_AreTilesLoaded) == 0x000001, "Wrong alignment on FortHomeCMSScreenBase_AreTilesLoaded");
static_assert(sizeof(FortHomeCMSScreenBase_AreTilesLoaded) == 0x000001, "Wrong size on FortHomeCMSScreenBase_AreTilesLoaded");
static_assert(offsetof(FortHomeCMSScreenBase_AreTilesLoaded, ReturnValue) == 0x000000, "Member 'FortHomeCMSScreenBase_AreTilesLoaded::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAlterationWidget.GetAlterationDefintion
// 0x0008 (0x0008 - 0x0000)
struct FortAlterationWidget_GetAlterationDefintion final
{
public:
	class UFortAlterationItemDefinition*          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAlterationWidget_GetAlterationDefintion) == 0x000008, "Wrong alignment on FortAlterationWidget_GetAlterationDefintion");
static_assert(sizeof(FortAlterationWidget_GetAlterationDefintion) == 0x000008, "Wrong size on FortAlterationWidget_GetAlterationDefintion");
static_assert(offsetof(FortAlterationWidget_GetAlterationDefintion, ReturnValue) == 0x000000, "Member 'FortAlterationWidget_GetAlterationDefintion::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAlterationWidget.GetRequiredLevel
// 0x0004 (0x0004 - 0x0000)
struct FortAlterationWidget_GetRequiredLevel final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAlterationWidget_GetRequiredLevel) == 0x000004, "Wrong alignment on FortAlterationWidget_GetRequiredLevel");
static_assert(sizeof(FortAlterationWidget_GetRequiredLevel) == 0x000004, "Wrong size on FortAlterationWidget_GetRequiredLevel");
static_assert(offsetof(FortAlterationWidget_GetRequiredLevel, ReturnValue) == 0x000000, "Member 'FortAlterationWidget_GetRequiredLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAlterationWidget.IsAlterationHighlighted
// 0x0001 (0x0001 - 0x0000)
struct FortAlterationWidget_IsAlterationHighlighted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAlterationWidget_IsAlterationHighlighted) == 0x000001, "Wrong alignment on FortAlterationWidget_IsAlterationHighlighted");
static_assert(sizeof(FortAlterationWidget_IsAlterationHighlighted) == 0x000001, "Wrong size on FortAlterationWidget_IsAlterationHighlighted");
static_assert(offsetof(FortAlterationWidget_IsAlterationHighlighted, ReturnValue) == 0x000000, "Member 'FortAlterationWidget_IsAlterationHighlighted::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAlterationWidget.IsAlterationUnlocked
// 0x0001 (0x0001 - 0x0000)
struct FortAlterationWidget_IsAlterationUnlocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAlterationWidget_IsAlterationUnlocked) == 0x000001, "Wrong alignment on FortAlterationWidget_IsAlterationUnlocked");
static_assert(sizeof(FortAlterationWidget_IsAlterationUnlocked) == 0x000001, "Wrong size on FortAlterationWidget_IsAlterationUnlocked");
static_assert(offsetof(FortAlterationWidget_IsAlterationUnlocked, ReturnValue) == 0x000000, "Member 'FortAlterationWidget_IsAlterationUnlocked::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAlterationWidget_NUI.GetAlterationDefintion
// 0x0008 (0x0008 - 0x0000)
struct FortAlterationWidget_NUI_GetAlterationDefintion final
{
public:
	class UFortAlterationItemDefinition*          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAlterationWidget_NUI_GetAlterationDefintion) == 0x000008, "Wrong alignment on FortAlterationWidget_NUI_GetAlterationDefintion");
static_assert(sizeof(FortAlterationWidget_NUI_GetAlterationDefintion) == 0x000008, "Wrong size on FortAlterationWidget_NUI_GetAlterationDefintion");
static_assert(offsetof(FortAlterationWidget_NUI_GetAlterationDefintion, ReturnValue) == 0x000000, "Member 'FortAlterationWidget_NUI_GetAlterationDefintion::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAlterationWidget_NUI.GetRequiredLevel
// 0x0004 (0x0004 - 0x0000)
struct FortAlterationWidget_NUI_GetRequiredLevel final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAlterationWidget_NUI_GetRequiredLevel) == 0x000004, "Wrong alignment on FortAlterationWidget_NUI_GetRequiredLevel");
static_assert(sizeof(FortAlterationWidget_NUI_GetRequiredLevel) == 0x000004, "Wrong size on FortAlterationWidget_NUI_GetRequiredLevel");
static_assert(offsetof(FortAlterationWidget_NUI_GetRequiredLevel, ReturnValue) == 0x000000, "Member 'FortAlterationWidget_NUI_GetRequiredLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAlterationWidget_NUI.IsAlterationHighlighted
// 0x0001 (0x0001 - 0x0000)
struct FortAlterationWidget_NUI_IsAlterationHighlighted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAlterationWidget_NUI_IsAlterationHighlighted) == 0x000001, "Wrong alignment on FortAlterationWidget_NUI_IsAlterationHighlighted");
static_assert(sizeof(FortAlterationWidget_NUI_IsAlterationHighlighted) == 0x000001, "Wrong size on FortAlterationWidget_NUI_IsAlterationHighlighted");
static_assert(offsetof(FortAlterationWidget_NUI_IsAlterationHighlighted, ReturnValue) == 0x000000, "Member 'FortAlterationWidget_NUI_IsAlterationHighlighted::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAlterationWidget_NUI.IsAlterationUnlocked
// 0x0001 (0x0001 - 0x0000)
struct FortAlterationWidget_NUI_IsAlterationUnlocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAlterationWidget_NUI_IsAlterationUnlocked) == 0x000001, "Wrong alignment on FortAlterationWidget_NUI_IsAlterationUnlocked");
static_assert(sizeof(FortAlterationWidget_NUI_IsAlterationUnlocked) == 0x000001, "Wrong size on FortAlterationWidget_NUI_IsAlterationUnlocked");
static_assert(offsetof(FortAlterationWidget_NUI_IsAlterationUnlocked, ReturnValue) == 0x000000, "Member 'FortAlterationWidget_NUI_IsAlterationUnlocked::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAnnouncementWidget.AnnouncementStopped
// 0x0008 (0x0008 - 0x0000)
struct FortAnnouncementWidget_AnnouncementStopped final
{
public:
	class AFortClientAnnouncement*                Announcement;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAnnouncementWidget_AnnouncementStopped) == 0x000008, "Wrong alignment on FortAnnouncementWidget_AnnouncementStopped");
static_assert(sizeof(FortAnnouncementWidget_AnnouncementStopped) == 0x000008, "Wrong size on FortAnnouncementWidget_AnnouncementStopped");
static_assert(offsetof(FortAnnouncementWidget_AnnouncementStopped, Announcement) == 0x000000, "Member 'FortAnnouncementWidget_AnnouncementStopped::Announcement' has a wrong offset!");

// Function FortniteUI.FortAnnouncementWidget.BindUpdateEvents
// 0x0008 (0x0008 - 0x0000)
struct FortAnnouncementWidget_BindUpdateEvents final
{
public:
	class AFortClientAnnouncement*                Announcement;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAnnouncementWidget_BindUpdateEvents) == 0x000008, "Wrong alignment on FortAnnouncementWidget_BindUpdateEvents");
static_assert(sizeof(FortAnnouncementWidget_BindUpdateEvents) == 0x000008, "Wrong size on FortAnnouncementWidget_BindUpdateEvents");
static_assert(offsetof(FortAnnouncementWidget_BindUpdateEvents, Announcement) == 0x000000, "Member 'FortAnnouncementWidget_BindUpdateEvents::Announcement' has a wrong offset!");

// Function FortniteUI.FortAnnouncementWidget.UpdateWidgetData
// 0x0008 (0x0008 - 0x0000)
struct FortAnnouncementWidget_UpdateWidgetData final
{
public:
	class AFortClientAnnouncement*                Announcement;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAnnouncementWidget_UpdateWidgetData) == 0x000008, "Wrong alignment on FortAnnouncementWidget_UpdateWidgetData");
static_assert(sizeof(FortAnnouncementWidget_UpdateWidgetData) == 0x000008, "Wrong size on FortAnnouncementWidget_UpdateWidgetData");
static_assert(offsetof(FortAnnouncementWidget_UpdateWidgetData, Announcement) == 0x000000, "Member 'FortAnnouncementWidget_UpdateWidgetData::Announcement' has a wrong offset!");

// Function FortniteUI.FortHUDObjectiveSizeInterface.GetHeightEstimate
// 0x0004 (0x0004 - 0x0000)
struct FortHUDObjectiveSizeInterface_GetHeightEstimate final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDObjectiveSizeInterface_GetHeightEstimate) == 0x000004, "Wrong alignment on FortHUDObjectiveSizeInterface_GetHeightEstimate");
static_assert(sizeof(FortHUDObjectiveSizeInterface_GetHeightEstimate) == 0x000004, "Wrong size on FortHUDObjectiveSizeInterface_GetHeightEstimate");
static_assert(offsetof(FortHUDObjectiveSizeInterface_GetHeightEstimate, ReturnValue) == 0x000000, "Member 'FortHUDObjectiveSizeInterface_GetHeightEstimate::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAsyncAction_LoadCampaignProfiles.LoadCampaignProfiles
// 0x0010 (0x0010 - 0x0000)
struct FortAsyncAction_LoadCampaignProfiles_LoadCampaignProfiles final
{
public:
	class AFortPlayerController*                  Param_PlayerController;                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAsyncAction_LoadCampaignProfiles*  ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAsyncAction_LoadCampaignProfiles_LoadCampaignProfiles) == 0x000008, "Wrong alignment on FortAsyncAction_LoadCampaignProfiles_LoadCampaignProfiles");
static_assert(sizeof(FortAsyncAction_LoadCampaignProfiles_LoadCampaignProfiles) == 0x000010, "Wrong size on FortAsyncAction_LoadCampaignProfiles_LoadCampaignProfiles");
static_assert(offsetof(FortAsyncAction_LoadCampaignProfiles_LoadCampaignProfiles, Param_PlayerController) == 0x000000, "Member 'FortAsyncAction_LoadCampaignProfiles_LoadCampaignProfiles::Param_PlayerController' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_LoadCampaignProfiles_LoadCampaignProfiles, ReturnValue) == 0x000008, "Member 'FortAsyncAction_LoadCampaignProfiles_LoadCampaignProfiles::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAsyncAction_SetUIState.SetUIState
// 0x0018 (0x0018 - 0x0000)
struct FortAsyncAction_SetUIState_SetUIState final
{
public:
	class UObject*                                InWorldContextObject;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortUIState                                  DesiredState;                                      // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAsyncAction_SetUIState*            ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAsyncAction_SetUIState_SetUIState) == 0x000008, "Wrong alignment on FortAsyncAction_SetUIState_SetUIState");
static_assert(sizeof(FortAsyncAction_SetUIState_SetUIState) == 0x000018, "Wrong size on FortAsyncAction_SetUIState_SetUIState");
static_assert(offsetof(FortAsyncAction_SetUIState_SetUIState, InWorldContextObject) == 0x000000, "Member 'FortAsyncAction_SetUIState_SetUIState::InWorldContextObject' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_SetUIState_SetUIState, DesiredState) == 0x000008, "Member 'FortAsyncAction_SetUIState_SetUIState::DesiredState' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_SetUIState_SetUIState, ReturnValue) == 0x000010, "Member 'FortAsyncAction_SetUIState_SetUIState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAsyncAction_ShowAdvancedLatentConfirmation_NUI.ShowAdvancedLatentActionConfirmation
// 0x00E0 (0x00E0 - 0x0000)
struct FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation final
{
public:
	class UObject*                                InWorldContextObject;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                            Icon;                                              // 0x0008(0x0078)(Parm, NativeAccessSpecifierPublic)
	class FText                                   Title;                                             // 0x0080(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FText                                   MESSAGE;                                           // 0x0098(0x0018)(Parm, NativeAccessSpecifierPublic)
	TArray<struct FConfirmationDialogAction>      ConfirmButtonInputActions;                         // 0x00B0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FName                                   DeclineButtonInputAction;                          // 0x00C0(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                AdditionalContent;                                 // 0x00C8(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                LeftAdditionalContent;                             // 0x00D0(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAsyncAction_ShowAdvancedLatentConfirmation_NUI* ReturnValue;                                       // 0x00D8(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation) == 0x000008, "Wrong alignment on FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation");
static_assert(sizeof(FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation) == 0x0000E0, "Wrong size on FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation");
static_assert(offsetof(FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation, InWorldContextObject) == 0x000000, "Member 'FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation::InWorldContextObject' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation, Icon) == 0x000008, "Member 'FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation::Icon' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation, Title) == 0x000080, "Member 'FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation::Title' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation, MESSAGE) == 0x000098, "Member 'FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation::MESSAGE' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation, ConfirmButtonInputActions) == 0x0000B0, "Member 'FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation::ConfirmButtonInputActions' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation, DeclineButtonInputAction) == 0x0000C0, "Member 'FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation::DeclineButtonInputAction' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation, AdditionalContent) == 0x0000C8, "Member 'FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation::AdditionalContent' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation, LeftAdditionalContent) == 0x0000D0, "Member 'FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation::LeftAdditionalContent' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation, ReturnValue) == 0x0000D8, "Member 'FortAsyncAction_ShowAdvancedLatentConfirmation_NUI_ShowAdvancedLatentActionConfirmation::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInputOptions.ChangeBinding
// 0x0020 (0x0020 - 0x0000)
struct FortInputOptions_ChangeBinding final
{
public:
	bool                                          IsPrimarySlot;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Input;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FKey                                   NewKey;                                            // 0x0008(0x0018)(Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInputOptions_ChangeBinding) == 0x000008, "Wrong alignment on FortInputOptions_ChangeBinding");
static_assert(sizeof(FortInputOptions_ChangeBinding) == 0x000020, "Wrong size on FortInputOptions_ChangeBinding");
static_assert(offsetof(FortInputOptions_ChangeBinding, IsPrimarySlot) == 0x000000, "Member 'FortInputOptions_ChangeBinding::IsPrimarySlot' has a wrong offset!");
static_assert(offsetof(FortInputOptions_ChangeBinding, Input) == 0x000004, "Member 'FortInputOptions_ChangeBinding::Input' has a wrong offset!");
static_assert(offsetof(FortInputOptions_ChangeBinding, NewKey) == 0x000008, "Member 'FortInputOptions_ChangeBinding::NewKey' has a wrong offset!");

// Function FortniteUI.FortInputOptions.GetListWidget
// 0x0010 (0x0010 - 0x0000)
struct FortInputOptions_GetListWidget final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInputOptions_GetListWidget) == 0x000008, "Wrong alignment on FortInputOptions_GetListWidget");
static_assert(sizeof(FortInputOptions_GetListWidget) == 0x000010, "Wrong size on FortInputOptions_GetListWidget");
static_assert(offsetof(FortInputOptions_GetListWidget, Item) == 0x000000, "Member 'FortInputOptions_GetListWidget::Item' has a wrong offset!");
static_assert(offsetof(FortInputOptions_GetListWidget, ReturnValue) == 0x000008, "Member 'FortInputOptions_GetListWidget::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInputOptions.HandleUsingGamepadChanged
// 0x0001 (0x0001 - 0x0000)
struct FortInputOptions_HandleUsingGamepadChanged final
{
public:
	bool                                          bUsingGamepad;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInputOptions_HandleUsingGamepadChanged) == 0x000001, "Wrong alignment on FortInputOptions_HandleUsingGamepadChanged");
static_assert(sizeof(FortInputOptions_HandleUsingGamepadChanged) == 0x000001, "Wrong size on FortInputOptions_HandleUsingGamepadChanged");
static_assert(offsetof(FortInputOptions_HandleUsingGamepadChanged, bUsingGamepad) == 0x000000, "Member 'FortInputOptions_HandleUsingGamepadChanged::bUsingGamepad' has a wrong offset!");

// Function FortniteUI.FortInputOptions.GetBindedKeyNameBP
// 0x0020 (0x0020 - 0x0000)
struct FortInputOptions_GetBindedKeyNameBP final
{
public:
	int32                                         KeyBind;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsPrimary;                                         // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInputOptions_GetBindedKeyNameBP) == 0x000008, "Wrong alignment on FortInputOptions_GetBindedKeyNameBP");
static_assert(sizeof(FortInputOptions_GetBindedKeyNameBP) == 0x000020, "Wrong size on FortInputOptions_GetBindedKeyNameBP");
static_assert(offsetof(FortInputOptions_GetBindedKeyNameBP, KeyBind) == 0x000000, "Member 'FortInputOptions_GetBindedKeyNameBP::KeyBind' has a wrong offset!");
static_assert(offsetof(FortInputOptions_GetBindedKeyNameBP, IsPrimary) == 0x000004, "Member 'FortInputOptions_GetBindedKeyNameBP::IsPrimary' has a wrong offset!");
static_assert(offsetof(FortInputOptions_GetBindedKeyNameBP, ReturnValue) == 0x000008, "Member 'FortInputOptions_GetBindedKeyNameBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAsyncAction_ShowConfirmation_NUI.ShowConfirmationDialog_NUI
// 0x00E0 (0x00E0 - 0x0000)
struct FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI final
{
public:
	class UObject*                                InWorldContextObject;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                            Icon;                                              // 0x0008(0x0078)(Parm, NativeAccessSpecifierPublic)
	class FText                                   Title;                                             // 0x0080(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FText                                   MESSAGE;                                           // 0x0098(0x0018)(Parm, NativeAccessSpecifierPublic)
	TArray<struct FConfirmationDialogAction>      ConfirmButtonInputActions;                         // 0x00B0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FName                                   DeclineButtonInputAction;                          // 0x00C0(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                AdditionalContent;                                 // 0x00C8(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                LeftAdditionalContent;                             // 0x00D0(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAsyncAction_ShowConfirmation_NUI*  ReturnValue;                                       // 0x00D8(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI) == 0x000008, "Wrong alignment on FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI");
static_assert(sizeof(FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI) == 0x0000E0, "Wrong size on FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI, InWorldContextObject) == 0x000000, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI::InWorldContextObject' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI, Icon) == 0x000008, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI::Icon' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI, Title) == 0x000080, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI::Title' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI, MESSAGE) == 0x000098, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI::MESSAGE' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI, ConfirmButtonInputActions) == 0x0000B0, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI::ConfirmButtonInputActions' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI, DeclineButtonInputAction) == 0x0000C0, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI::DeclineButtonInputAction' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI, AdditionalContent) == 0x0000C8, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI::AdditionalContent' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI, LeftAdditionalContent) == 0x0000D0, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI::LeftAdditionalContent' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI, ReturnValue) == 0x0000D8, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowConfirmationDialog_NUI::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAsyncAction_ShowConfirmation_NUI.ShowSimpleConfirmationDialog_CustomInput
// 0x00D8 (0x00D8 - 0x0000)
struct FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput final
{
public:
	class UObject*                                InWorldContextObject;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                            Icon;                                              // 0x0008(0x0078)(Parm, NativeAccessSpecifierPublic)
	class FText                                   Title;                                             // 0x0080(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FText                                   MESSAGE;                                           // 0x0098(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FName                                   ConfirmAction;                                     // 0x00B0(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DeclineAction;                                     // 0x00B8(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                AdditionalContent;                                 // 0x00C0(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                LeftAdditionalContent;                             // 0x00C8(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAsyncAction_ShowConfirmation_NUI*  ReturnValue;                                       // 0x00D0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput) == 0x000008, "Wrong alignment on FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput");
static_assert(sizeof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput) == 0x0000D8, "Wrong size on FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput, InWorldContextObject) == 0x000000, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput::InWorldContextObject' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput, Icon) == 0x000008, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput::Icon' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput, Title) == 0x000080, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput::Title' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput, MESSAGE) == 0x000098, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput::MESSAGE' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput, ConfirmAction) == 0x0000B0, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput::ConfirmAction' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput, DeclineAction) == 0x0000B8, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput::DeclineAction' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput, AdditionalContent) == 0x0000C0, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput::AdditionalContent' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput, LeftAdditionalContent) == 0x0000C8, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput::LeftAdditionalContent' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput, ReturnValue) == 0x0000D0, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_CustomInput::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAsyncAction_ShowConfirmation_NUI.ShowSimpleConfirmationDialog_NUI
// 0x00D0 (0x00D0 - 0x0000)
struct FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI final
{
public:
	class UObject*                                InWorldContextObject;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                            Icon;                                              // 0x0008(0x0078)(Parm, NativeAccessSpecifierPublic)
	class FText                                   Title;                                             // 0x0080(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FText                                   MESSAGE;                                           // 0x0098(0x0018)(Parm, NativeAccessSpecifierPublic)
	bool                                          bShowConfirm;                                      // 0x00B0(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowDecline;                                      // 0x00B1(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                AdditionalContent;                                 // 0x00B8(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                LeftAdditionalContent;                             // 0x00C0(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAsyncAction_ShowConfirmation_NUI*  ReturnValue;                                       // 0x00C8(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI) == 0x000008, "Wrong alignment on FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI");
static_assert(sizeof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI) == 0x0000D0, "Wrong size on FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI, InWorldContextObject) == 0x000000, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI::InWorldContextObject' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI, Icon) == 0x000008, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI::Icon' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI, Title) == 0x000080, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI::Title' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI, MESSAGE) == 0x000098, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI::MESSAGE' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI, bShowConfirm) == 0x0000B0, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI::bShowConfirm' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI, bShowDecline) == 0x0000B1, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI::bShowDecline' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI, AdditionalContent) == 0x0000B8, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI::AdditionalContent' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI, LeftAdditionalContent) == 0x0000C0, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI::LeftAdditionalContent' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI, ReturnValue) == 0x0000C8, "Member 'FortAsyncAction_ShowConfirmation_NUI_ShowSimpleConfirmationDialog_NUI::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAsyncAction_ShowPartyDialog.ShowPartyLeaderManageDialog
// 0x01C8 (0x01C8 - 0x0000)
struct FortAsyncAction_ShowPartyDialog_ShowPartyLeaderManageDialog final
{
public:
	class UObject*                                InWorldContextObject;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortTeamMemberInfo                    Param_TeamMemberInfo;                              // 0x0008(0x01A8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class ULocalPlayer*                           Param_LocalPlayer;                                 // 0x01B0(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            LeftAdditionalContent;                             // 0x01B8(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAsyncAction_ShowPartyDialog*       ReturnValue;                                       // 0x01C0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAsyncAction_ShowPartyDialog_ShowPartyLeaderManageDialog) == 0x000008, "Wrong alignment on FortAsyncAction_ShowPartyDialog_ShowPartyLeaderManageDialog");
static_assert(sizeof(FortAsyncAction_ShowPartyDialog_ShowPartyLeaderManageDialog) == 0x0001C8, "Wrong size on FortAsyncAction_ShowPartyDialog_ShowPartyLeaderManageDialog");
static_assert(offsetof(FortAsyncAction_ShowPartyDialog_ShowPartyLeaderManageDialog, InWorldContextObject) == 0x000000, "Member 'FortAsyncAction_ShowPartyDialog_ShowPartyLeaderManageDialog::InWorldContextObject' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowPartyDialog_ShowPartyLeaderManageDialog, Param_TeamMemberInfo) == 0x000008, "Member 'FortAsyncAction_ShowPartyDialog_ShowPartyLeaderManageDialog::Param_TeamMemberInfo' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowPartyDialog_ShowPartyLeaderManageDialog, Param_LocalPlayer) == 0x0001B0, "Member 'FortAsyncAction_ShowPartyDialog_ShowPartyLeaderManageDialog::Param_LocalPlayer' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowPartyDialog_ShowPartyLeaderManageDialog, LeftAdditionalContent) == 0x0001B8, "Member 'FortAsyncAction_ShowPartyDialog_ShowPartyLeaderManageDialog::LeftAdditionalContent' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowPartyDialog_ShowPartyLeaderManageDialog, ReturnValue) == 0x0001C0, "Member 'FortAsyncAction_ShowPartyDialog_ShowPartyLeaderManageDialog::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAsyncAction_ShowPartyDialog.ShowPartyMemberManageDialog
// 0x01C8 (0x01C8 - 0x0000)
struct FortAsyncAction_ShowPartyDialog_ShowPartyMemberManageDialog final
{
public:
	class UObject*                                InWorldContextObject;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortTeamMemberInfo                    Param_TeamMemberInfo;                              // 0x0008(0x01A8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class ULocalPlayer*                           Param_LocalPlayer;                                 // 0x01B0(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            LeftAdditionalContent;                             // 0x01B8(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAsyncAction_ShowPartyDialog*       ReturnValue;                                       // 0x01C0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAsyncAction_ShowPartyDialog_ShowPartyMemberManageDialog) == 0x000008, "Wrong alignment on FortAsyncAction_ShowPartyDialog_ShowPartyMemberManageDialog");
static_assert(sizeof(FortAsyncAction_ShowPartyDialog_ShowPartyMemberManageDialog) == 0x0001C8, "Wrong size on FortAsyncAction_ShowPartyDialog_ShowPartyMemberManageDialog");
static_assert(offsetof(FortAsyncAction_ShowPartyDialog_ShowPartyMemberManageDialog, InWorldContextObject) == 0x000000, "Member 'FortAsyncAction_ShowPartyDialog_ShowPartyMemberManageDialog::InWorldContextObject' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowPartyDialog_ShowPartyMemberManageDialog, Param_TeamMemberInfo) == 0x000008, "Member 'FortAsyncAction_ShowPartyDialog_ShowPartyMemberManageDialog::Param_TeamMemberInfo' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowPartyDialog_ShowPartyMemberManageDialog, Param_LocalPlayer) == 0x0001B0, "Member 'FortAsyncAction_ShowPartyDialog_ShowPartyMemberManageDialog::Param_LocalPlayer' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowPartyDialog_ShowPartyMemberManageDialog, LeftAdditionalContent) == 0x0001B8, "Member 'FortAsyncAction_ShowPartyDialog_ShowPartyMemberManageDialog::LeftAdditionalContent' has a wrong offset!");
static_assert(offsetof(FortAsyncAction_ShowPartyDialog_ShowPartyMemberManageDialog, ReturnValue) == 0x0001C0, "Member 'FortAsyncAction_ShowPartyDialog_ShowPartyMemberManageDialog::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget_NUI.SetItemToRepresent
// 0x0008 (0x0008 - 0x0000)
struct FortItemWidget_NUI_SetItemToRepresent final
{
public:
	const class UFortItem*                        Param_ItemToRepresent;                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_NUI_SetItemToRepresent) == 0x000008, "Wrong alignment on FortItemWidget_NUI_SetItemToRepresent");
static_assert(sizeof(FortItemWidget_NUI_SetItemToRepresent) == 0x000008, "Wrong size on FortItemWidget_NUI_SetItemToRepresent");
static_assert(offsetof(FortItemWidget_NUI_SetItemToRepresent, Param_ItemToRepresent) == 0x000000, "Member 'FortItemWidget_NUI_SetItemToRepresent::Param_ItemToRepresent' has a wrong offset!");

// Function FortniteUI.FortItemWidget_NUI.SetItemViewContext
// 0x0010 (0x0010 - 0x0000)
struct FortItemWidget_NUI_SetItemViewContext final
{
public:
	TScriptInterface<class IFortItemViewContextInterface> Param_ItemViewContext;                             // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_NUI_SetItemViewContext) == 0x000008, "Wrong alignment on FortItemWidget_NUI_SetItemViewContext");
static_assert(sizeof(FortItemWidget_NUI_SetItemViewContext) == 0x000010, "Wrong size on FortItemWidget_NUI_SetItemViewContext");
static_assert(offsetof(FortItemWidget_NUI_SetItemViewContext, Param_ItemViewContext) == 0x000000, "Member 'FortItemWidget_NUI_SetItemViewContext::Param_ItemViewContext' has a wrong offset!");

// Function FortniteUI.FortItemCardBase.PortBrushSize
// 0x0002 (0x0002 - 0x0000)
struct FortItemCardBase_PortBrushSize final
{
public:
	EFortBrushSize                                BrushSize;                                         // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortItemCardSize                             ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemCardBase_PortBrushSize) == 0x000001, "Wrong alignment on FortItemCardBase_PortBrushSize");
static_assert(sizeof(FortItemCardBase_PortBrushSize) == 0x000002, "Wrong size on FortItemCardBase_PortBrushSize");
static_assert(offsetof(FortItemCardBase_PortBrushSize, BrushSize) == 0x000000, "Member 'FortItemCardBase_PortBrushSize::BrushSize' has a wrong offset!");
static_assert(offsetof(FortItemCardBase_PortBrushSize, ReturnValue) == 0x000001, "Member 'FortItemCardBase_PortBrushSize::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAthenaTabsScreenBase.HandleFeatureNavigateRequest
// 0x0001 (0x0001 - 0x0000)
struct FortAthenaTabsScreenBase_HandleFeatureNavigateRequest final
{
public:
	EFortUIFeature                                Feature;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaTabsScreenBase_HandleFeatureNavigateRequest) == 0x000001, "Wrong alignment on FortAthenaTabsScreenBase_HandleFeatureNavigateRequest");
static_assert(sizeof(FortAthenaTabsScreenBase_HandleFeatureNavigateRequest) == 0x000001, "Wrong size on FortAthenaTabsScreenBase_HandleFeatureNavigateRequest");
static_assert(offsetof(FortAthenaTabsScreenBase_HandleFeatureNavigateRequest, Feature) == 0x000000, "Member 'FortAthenaTabsScreenBase_HandleFeatureNavigateRequest::Feature' has a wrong offset!");

// Function FortniteUI.FortAthenaTabsScreenBase.HandleFeatureStateChanged
// 0x0003 (0x0003 - 0x0000)
struct FortAthenaTabsScreenBase_HandleFeatureStateChanged final
{
public:
	EFortUIFeature                                ChangedFeature;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortUIFeatureState                           NewState;                                          // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortUIFeatureStateReason                     Reason;                                            // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaTabsScreenBase_HandleFeatureStateChanged) == 0x000001, "Wrong alignment on FortAthenaTabsScreenBase_HandleFeatureStateChanged");
static_assert(sizeof(FortAthenaTabsScreenBase_HandleFeatureStateChanged) == 0x000003, "Wrong size on FortAthenaTabsScreenBase_HandleFeatureStateChanged");
static_assert(offsetof(FortAthenaTabsScreenBase_HandleFeatureStateChanged, ChangedFeature) == 0x000000, "Member 'FortAthenaTabsScreenBase_HandleFeatureStateChanged::ChangedFeature' has a wrong offset!");
static_assert(offsetof(FortAthenaTabsScreenBase_HandleFeatureStateChanged, NewState) == 0x000001, "Member 'FortAthenaTabsScreenBase_HandleFeatureStateChanged::NewState' has a wrong offset!");
static_assert(offsetof(FortAthenaTabsScreenBase_HandleFeatureStateChanged, Reason) == 0x000002, "Member 'FortAthenaTabsScreenBase_HandleFeatureStateChanged::Reason' has a wrong offset!");

// Function FortniteUI.FortAthenaTabsScreenBase.CanShowPrototypeTab
// 0x0010 (0x0010 - 0x0000)
struct FortAthenaTabsScreenBase_CanShowPrototypeTab final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAthenaTabsScreenBase_CanShowPrototypeTab) == 0x000004, "Wrong alignment on FortAthenaTabsScreenBase_CanShowPrototypeTab");
static_assert(sizeof(FortAthenaTabsScreenBase_CanShowPrototypeTab) == 0x000010, "Wrong size on FortAthenaTabsScreenBase_CanShowPrototypeTab");
static_assert(offsetof(FortAthenaTabsScreenBase_CanShowPrototypeTab, TabNameID) == 0x000000, "Member 'FortAthenaTabsScreenBase_CanShowPrototypeTab::TabNameID' has a wrong offset!");
static_assert(offsetof(FortAthenaTabsScreenBase_CanShowPrototypeTab, ReturnValue) == 0x000008, "Member 'FortAthenaTabsScreenBase_CanShowPrototypeTab::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAthenaTabsScreenBase.CanShowSeasonShopTab
// 0x0001 (0x0001 - 0x0000)
struct FortAthenaTabsScreenBase_CanShowSeasonShopTab final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAthenaTabsScreenBase_CanShowSeasonShopTab) == 0x000001, "Wrong alignment on FortAthenaTabsScreenBase_CanShowSeasonShopTab");
static_assert(sizeof(FortAthenaTabsScreenBase_CanShowSeasonShopTab) == 0x000001, "Wrong size on FortAthenaTabsScreenBase_CanShowSeasonShopTab");
static_assert(offsetof(FortAthenaTabsScreenBase_CanShowSeasonShopTab, ReturnValue) == 0x000000, "Member 'FortAthenaTabsScreenBase_CanShowSeasonShopTab::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAttributeList.SetData
// 0x0020 (0x0020 - 0x0000)
struct FortAttributeList_SetData final
{
public:
	TArray<struct FFortDisplayAttribute>          Data;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FFortDisplayAttribute>          ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAttributeList_SetData) == 0x000008, "Wrong alignment on FortAttributeList_SetData");
static_assert(sizeof(FortAttributeList_SetData) == 0x000020, "Wrong size on FortAttributeList_SetData");
static_assert(offsetof(FortAttributeList_SetData, Data) == 0x000000, "Member 'FortAttributeList_SetData::Data' has a wrong offset!");
static_assert(offsetof(FortAttributeList_SetData, ReturnValue) == 0x000010, "Member 'FortAttributeList_SetData::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAttributeList.SetPreviewData
// 0x0010 (0x0010 - 0x0000)
struct FortAttributeList_SetPreviewData final
{
public:
	TArray<struct FFortDisplayAttribute>          Data;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAttributeList_SetPreviewData) == 0x000008, "Wrong alignment on FortAttributeList_SetPreviewData");
static_assert(sizeof(FortAttributeList_SetPreviewData) == 0x000010, "Wrong size on FortAttributeList_SetPreviewData");
static_assert(offsetof(FortAttributeList_SetPreviewData, Data) == 0x000000, "Member 'FortAttributeList_SetPreviewData::Data' has a wrong offset!");

// Function FortniteUI.FortAttributeList_NUI.OnAddShownAttributeListItem
// 0x0008 (0x0008 - 0x0000)
struct FortAttributeList_NUI_OnAddShownAttributeListItem final
{
public:
	class UFortAttributeListItem_NUI*             AttributeListItemWidget;                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAttributeList_NUI_OnAddShownAttributeListItem) == 0x000008, "Wrong alignment on FortAttributeList_NUI_OnAddShownAttributeListItem");
static_assert(sizeof(FortAttributeList_NUI_OnAddShownAttributeListItem) == 0x000008, "Wrong size on FortAttributeList_NUI_OnAddShownAttributeListItem");
static_assert(offsetof(FortAttributeList_NUI_OnAddShownAttributeListItem, AttributeListItemWidget) == 0x000000, "Member 'FortAttributeList_NUI_OnAddShownAttributeListItem::AttributeListItemWidget' has a wrong offset!");

// Function FortniteUI.FortAttributeList_NUI.OnRemoveShownAttributeListItem
// 0x0010 (0x0010 - 0x0000)
struct FortAttributeList_NUI_OnRemoveShownAttributeListItem final
{
public:
	class UFortAttributeListItem_NUI*             AttributeListItemWidget;                           // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AtIndex;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAttributeList_NUI_OnRemoveShownAttributeListItem) == 0x000008, "Wrong alignment on FortAttributeList_NUI_OnRemoveShownAttributeListItem");
static_assert(sizeof(FortAttributeList_NUI_OnRemoveShownAttributeListItem) == 0x000010, "Wrong size on FortAttributeList_NUI_OnRemoveShownAttributeListItem");
static_assert(offsetof(FortAttributeList_NUI_OnRemoveShownAttributeListItem, AttributeListItemWidget) == 0x000000, "Member 'FortAttributeList_NUI_OnRemoveShownAttributeListItem::AttributeListItemWidget' has a wrong offset!");
static_assert(offsetof(FortAttributeList_NUI_OnRemoveShownAttributeListItem, AtIndex) == 0x000008, "Member 'FortAttributeList_NUI_OnRemoveShownAttributeListItem::AtIndex' has a wrong offset!");

// Function FortniteUI.FortAttributeList_NUI.SetData
// 0x0010 (0x0010 - 0x0000)
struct FortAttributeList_NUI_SetData final
{
public:
	TArray<struct FFortDisplayAttribute>          Data;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAttributeList_NUI_SetData) == 0x000008, "Wrong alignment on FortAttributeList_NUI_SetData");
static_assert(sizeof(FortAttributeList_NUI_SetData) == 0x000010, "Wrong size on FortAttributeList_NUI_SetData");
static_assert(offsetof(FortAttributeList_NUI_SetData, Data) == 0x000000, "Member 'FortAttributeList_NUI_SetData::Data' has a wrong offset!");

// Function FortniteUI.FortAttributeList_NUI.SetPreviewData
// 0x0010 (0x0010 - 0x0000)
struct FortAttributeList_NUI_SetPreviewData final
{
public:
	TArray<struct FFortDisplayAttribute>          Data;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAttributeList_NUI_SetPreviewData) == 0x000008, "Wrong alignment on FortAttributeList_NUI_SetPreviewData");
static_assert(sizeof(FortAttributeList_NUI_SetPreviewData) == 0x000010, "Wrong size on FortAttributeList_NUI_SetPreviewData");
static_assert(offsetof(FortAttributeList_NUI_SetPreviewData, Data) == 0x000000, "Member 'FortAttributeList_NUI_SetPreviewData::Data' has a wrong offset!");

// Function FortniteUI.FortAttributeListItem.SetDisplayAttribute
// 0x00E8 (0x00E8 - 0x0000)
struct FortAttributeListItem_SetDisplayAttribute final
{
public:
	struct FFortDisplayAttribute                  InDisplayAttribute;                                // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFortDisplayAttribute                  DeltaAttribute;                                    // 0x0070(0x0070)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortAttributeListItem_SetDisplayAttribute) == 0x000008, "Wrong alignment on FortAttributeListItem_SetDisplayAttribute");
static_assert(sizeof(FortAttributeListItem_SetDisplayAttribute) == 0x0000E8, "Wrong size on FortAttributeListItem_SetDisplayAttribute");
static_assert(offsetof(FortAttributeListItem_SetDisplayAttribute, InDisplayAttribute) == 0x000000, "Member 'FortAttributeListItem_SetDisplayAttribute::InDisplayAttribute' has a wrong offset!");
static_assert(offsetof(FortAttributeListItem_SetDisplayAttribute, DeltaAttribute) == 0x000070, "Member 'FortAttributeListItem_SetDisplayAttribute::DeltaAttribute' has a wrong offset!");
static_assert(offsetof(FortAttributeListItem_SetDisplayAttribute, ReturnValue) == 0x0000E0, "Member 'FortAttributeListItem_SetDisplayAttribute::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAttributeListItem.SetPreviewAttribute
// 0x0070 (0x0070 - 0x0000)
struct FortAttributeListItem_SetPreviewAttribute final
{
public:
	struct FFortDisplayAttribute                  InPreviewAttribute;                                // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAttributeListItem_SetPreviewAttribute) == 0x000008, "Wrong alignment on FortAttributeListItem_SetPreviewAttribute");
static_assert(sizeof(FortAttributeListItem_SetPreviewAttribute) == 0x000070, "Wrong size on FortAttributeListItem_SetPreviewAttribute");
static_assert(offsetof(FortAttributeListItem_SetPreviewAttribute, InPreviewAttribute) == 0x000000, "Member 'FortAttributeListItem_SetPreviewAttribute::InPreviewAttribute' has a wrong offset!");

// Function FortniteUI.FortAttributeListItem.ValueChanged
// 0x0004 (0x0004 - 0x0000)
struct FortAttributeListItem_ValueChanged final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAttributeListItem_ValueChanged) == 0x000004, "Wrong alignment on FortAttributeListItem_ValueChanged");
static_assert(sizeof(FortAttributeListItem_ValueChanged) == 0x000004, "Wrong size on FortAttributeListItem_ValueChanged");
static_assert(offsetof(FortAttributeListItem_ValueChanged, Delta) == 0x000000, "Member 'FortAttributeListItem_ValueChanged::Delta' has a wrong offset!");

// Function FortniteUI.FortAttributeListItem.GetCurrentAttributeCopy
// 0x0070 (0x0070 - 0x0000)
struct FortAttributeListItem_GetCurrentAttributeCopy final
{
public:
	struct FFortDisplayAttribute                  OutDisplayAttribute;                               // 0x0000(0x0070)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAttributeListItem_GetCurrentAttributeCopy) == 0x000008, "Wrong alignment on FortAttributeListItem_GetCurrentAttributeCopy");
static_assert(sizeof(FortAttributeListItem_GetCurrentAttributeCopy) == 0x000070, "Wrong size on FortAttributeListItem_GetCurrentAttributeCopy");
static_assert(offsetof(FortAttributeListItem_GetCurrentAttributeCopy, OutDisplayAttribute) == 0x000000, "Member 'FortAttributeListItem_GetCurrentAttributeCopy::OutDisplayAttribute' has a wrong offset!");

// Function FortniteUI.FortAttributeListItem.GetDisplayAttributeCopy
// 0x0070 (0x0070 - 0x0000)
struct FortAttributeListItem_GetDisplayAttributeCopy final
{
public:
	struct FFortDisplayAttribute                  OutDisplayAttribute;                               // 0x0000(0x0070)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAttributeListItem_GetDisplayAttributeCopy) == 0x000008, "Wrong alignment on FortAttributeListItem_GetDisplayAttributeCopy");
static_assert(sizeof(FortAttributeListItem_GetDisplayAttributeCopy) == 0x000070, "Wrong size on FortAttributeListItem_GetDisplayAttributeCopy");
static_assert(offsetof(FortAttributeListItem_GetDisplayAttributeCopy, OutDisplayAttribute) == 0x000000, "Member 'FortAttributeListItem_GetDisplayAttributeCopy::OutDisplayAttribute' has a wrong offset!");

// Function FortniteUI.FortAttributeListItem.GetDisplayPreviewCopy
// 0x0070 (0x0070 - 0x0000)
struct FortAttributeListItem_GetDisplayPreviewCopy final
{
public:
	struct FFortDisplayAttribute                  OutPreviewAttribute;                               // 0x0000(0x0070)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAttributeListItem_GetDisplayPreviewCopy) == 0x000008, "Wrong alignment on FortAttributeListItem_GetDisplayPreviewCopy");
static_assert(sizeof(FortAttributeListItem_GetDisplayPreviewCopy) == 0x000070, "Wrong size on FortAttributeListItem_GetDisplayPreviewCopy");
static_assert(offsetof(FortAttributeListItem_GetDisplayPreviewCopy, OutPreviewAttribute) == 0x000000, "Member 'FortAttributeListItem_GetDisplayPreviewCopy::OutPreviewAttribute' has a wrong offset!");

// Function FortniteUI.FortItemCollectorWidget.OnItemCollectorChanged
// 0x0008 (0x0008 - 0x0000)
struct FortItemCollectorWidget_OnItemCollectorChanged final
{
public:
	class ABuildingItemCollectorActor*            OutItemCollector;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemCollectorWidget_OnItemCollectorChanged) == 0x000008, "Wrong alignment on FortItemCollectorWidget_OnItemCollectorChanged");
static_assert(sizeof(FortItemCollectorWidget_OnItemCollectorChanged) == 0x000008, "Wrong size on FortItemCollectorWidget_OnItemCollectorChanged");
static_assert(offsetof(FortItemCollectorWidget_OnItemCollectorChanged, OutItemCollector) == 0x000000, "Member 'FortItemCollectorWidget_OnItemCollectorChanged::OutItemCollector' has a wrong offset!");

// Function FortniteUI.FortItemCollectorWidget.OnItemCollectorStateChanged
// 0x0001 (0x0001 - 0x0000)
struct FortItemCollectorWidget_OnItemCollectorStateChanged final
{
public:
	EFortItemCollectorState                       ItemCollectorState;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemCollectorWidget_OnItemCollectorStateChanged) == 0x000001, "Wrong alignment on FortItemCollectorWidget_OnItemCollectorStateChanged");
static_assert(sizeof(FortItemCollectorWidget_OnItemCollectorStateChanged) == 0x000001, "Wrong size on FortItemCollectorWidget_OnItemCollectorStateChanged");
static_assert(offsetof(FortItemCollectorWidget_OnItemCollectorStateChanged, ItemCollectorState) == 0x000000, "Member 'FortItemCollectorWidget_OnItemCollectorStateChanged::ItemCollectorState' has a wrong offset!");

// Function FortniteUI.FortItemCollectorWidget.OnItemCollectorValuesChanged
// 0x0020 (0x0020 - 0x0000)
struct FortItemCollectorWidget_OnItemCollectorValuesChanged final
{
public:
	TArray<int32>                                 DepositAmounts;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<int32>                                 DepositGoals;                                      // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemCollectorWidget_OnItemCollectorValuesChanged) == 0x000008, "Wrong alignment on FortItemCollectorWidget_OnItemCollectorValuesChanged");
static_assert(sizeof(FortItemCollectorWidget_OnItemCollectorValuesChanged) == 0x000020, "Wrong size on FortItemCollectorWidget_OnItemCollectorValuesChanged");
static_assert(offsetof(FortItemCollectorWidget_OnItemCollectorValuesChanged, DepositAmounts) == 0x000000, "Member 'FortItemCollectorWidget_OnItemCollectorValuesChanged::DepositAmounts' has a wrong offset!");
static_assert(offsetof(FortItemCollectorWidget_OnItemCollectorValuesChanged, DepositGoals) == 0x000010, "Member 'FortItemCollectorWidget_OnItemCollectorValuesChanged::DepositGoals' has a wrong offset!");

// Function FortniteUI.FortAttributeListItem_NUI.SetDisplayAttribute
// 0x0070 (0x0070 - 0x0000)
struct FortAttributeListItem_NUI_SetDisplayAttribute final
{
public:
	struct FFortDisplayAttribute                  InDisplayAttribute;                                // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAttributeListItem_NUI_SetDisplayAttribute) == 0x000008, "Wrong alignment on FortAttributeListItem_NUI_SetDisplayAttribute");
static_assert(sizeof(FortAttributeListItem_NUI_SetDisplayAttribute) == 0x000070, "Wrong size on FortAttributeListItem_NUI_SetDisplayAttribute");
static_assert(offsetof(FortAttributeListItem_NUI_SetDisplayAttribute, InDisplayAttribute) == 0x000000, "Member 'FortAttributeListItem_NUI_SetDisplayAttribute::InDisplayAttribute' has a wrong offset!");

// Function FortniteUI.FortAttributeListItem_NUI.SetPreviewAttribute
// 0x0070 (0x0070 - 0x0000)
struct FortAttributeListItem_NUI_SetPreviewAttribute final
{
public:
	struct FFortDisplayAttribute                  InPreviewAttribute;                                // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAttributeListItem_NUI_SetPreviewAttribute) == 0x000008, "Wrong alignment on FortAttributeListItem_NUI_SetPreviewAttribute");
static_assert(sizeof(FortAttributeListItem_NUI_SetPreviewAttribute) == 0x000070, "Wrong size on FortAttributeListItem_NUI_SetPreviewAttribute");
static_assert(offsetof(FortAttributeListItem_NUI_SetPreviewAttribute, InPreviewAttribute) == 0x000000, "Member 'FortAttributeListItem_NUI_SetPreviewAttribute::InPreviewAttribute' has a wrong offset!");

// Function FortniteUI.FortAttributeListItem_NUI.ValueChanged
// 0x0004 (0x0004 - 0x0000)
struct FortAttributeListItem_NUI_ValueChanged final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAttributeListItem_NUI_ValueChanged) == 0x000004, "Wrong alignment on FortAttributeListItem_NUI_ValueChanged");
static_assert(sizeof(FortAttributeListItem_NUI_ValueChanged) == 0x000004, "Wrong size on FortAttributeListItem_NUI_ValueChanged");
static_assert(offsetof(FortAttributeListItem_NUI_ValueChanged, Delta) == 0x000000, "Member 'FortAttributeListItem_NUI_ValueChanged::Delta' has a wrong offset!");

// Function FortniteUI.FortAttributeListItem_NUI.GetCurrentAttributeCopy
// 0x0070 (0x0070 - 0x0000)
struct FortAttributeListItem_NUI_GetCurrentAttributeCopy final
{
public:
	struct FFortDisplayAttribute                  OutDisplayAttribute;                               // 0x0000(0x0070)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAttributeListItem_NUI_GetCurrentAttributeCopy) == 0x000008, "Wrong alignment on FortAttributeListItem_NUI_GetCurrentAttributeCopy");
static_assert(sizeof(FortAttributeListItem_NUI_GetCurrentAttributeCopy) == 0x000070, "Wrong size on FortAttributeListItem_NUI_GetCurrentAttributeCopy");
static_assert(offsetof(FortAttributeListItem_NUI_GetCurrentAttributeCopy, OutDisplayAttribute) == 0x000000, "Member 'FortAttributeListItem_NUI_GetCurrentAttributeCopy::OutDisplayAttribute' has a wrong offset!");

// Function FortniteUI.FortAttributeListItem_NUI.GetDisplayAttributeCopy
// 0x0070 (0x0070 - 0x0000)
struct FortAttributeListItem_NUI_GetDisplayAttributeCopy final
{
public:
	struct FFortDisplayAttribute                  OutDisplayAttribute;                               // 0x0000(0x0070)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAttributeListItem_NUI_GetDisplayAttributeCopy) == 0x000008, "Wrong alignment on FortAttributeListItem_NUI_GetDisplayAttributeCopy");
static_assert(sizeof(FortAttributeListItem_NUI_GetDisplayAttributeCopy) == 0x000070, "Wrong size on FortAttributeListItem_NUI_GetDisplayAttributeCopy");
static_assert(offsetof(FortAttributeListItem_NUI_GetDisplayAttributeCopy, OutDisplayAttribute) == 0x000000, "Member 'FortAttributeListItem_NUI_GetDisplayAttributeCopy::OutDisplayAttribute' has a wrong offset!");

// Function FortniteUI.FortAttributeListItem_NUI.GetDisplayPreviewCopy
// 0x0070 (0x0070 - 0x0000)
struct FortAttributeListItem_NUI_GetDisplayPreviewCopy final
{
public:
	struct FFortDisplayAttribute                  OutPreviewAttribute;                               // 0x0000(0x0070)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAttributeListItem_NUI_GetDisplayPreviewCopy) == 0x000008, "Wrong alignment on FortAttributeListItem_NUI_GetDisplayPreviewCopy");
static_assert(sizeof(FortAttributeListItem_NUI_GetDisplayPreviewCopy) == 0x000070, "Wrong size on FortAttributeListItem_NUI_GetDisplayPreviewCopy");
static_assert(offsetof(FortAttributeListItem_NUI_GetDisplayPreviewCopy, OutPreviewAttribute) == 0x000000, "Member 'FortAttributeListItem_NUI_GetDisplayPreviewCopy::OutPreviewAttribute' has a wrong offset!");

// Function FortniteUI.FortAudioOptions.ChatVolumeChanged
// 0x0004 (0x0004 - 0x0000)
struct FortAudioOptions_ChatVolumeChanged final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAudioOptions_ChatVolumeChanged) == 0x000004, "Wrong alignment on FortAudioOptions_ChatVolumeChanged");
static_assert(sizeof(FortAudioOptions_ChatVolumeChanged) == 0x000004, "Wrong size on FortAudioOptions_ChatVolumeChanged");
static_assert(offsetof(FortAudioOptions_ChatVolumeChanged, NewValue) == 0x000000, "Member 'FortAudioOptions_ChatVolumeChanged::NewValue' has a wrong offset!");

// Function FortniteUI.FortAudioOptions.DialogVolumeChanged
// 0x0004 (0x0004 - 0x0000)
struct FortAudioOptions_DialogVolumeChanged final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAudioOptions_DialogVolumeChanged) == 0x000004, "Wrong alignment on FortAudioOptions_DialogVolumeChanged");
static_assert(sizeof(FortAudioOptions_DialogVolumeChanged) == 0x000004, "Wrong size on FortAudioOptions_DialogVolumeChanged");
static_assert(offsetof(FortAudioOptions_DialogVolumeChanged, NewValue) == 0x000000, "Member 'FortAudioOptions_DialogVolumeChanged::NewValue' has a wrong offset!");

// Function FortniteUI.FortAudioOptions.MusicVolumeChanged
// 0x0004 (0x0004 - 0x0000)
struct FortAudioOptions_MusicVolumeChanged final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAudioOptions_MusicVolumeChanged) == 0x000004, "Wrong alignment on FortAudioOptions_MusicVolumeChanged");
static_assert(sizeof(FortAudioOptions_MusicVolumeChanged) == 0x000004, "Wrong size on FortAudioOptions_MusicVolumeChanged");
static_assert(offsetof(FortAudioOptions_MusicVolumeChanged, NewValue) == 0x000000, "Member 'FortAudioOptions_MusicVolumeChanged::NewValue' has a wrong offset!");

// Function FortniteUI.FortAudioOptions.SetQuality
// 0x0004 (0x0004 - 0x0000)
struct FortAudioOptions_SetQuality final
{
public:
	int32                                         NewQuality;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAudioOptions_SetQuality) == 0x000004, "Wrong alignment on FortAudioOptions_SetQuality");
static_assert(sizeof(FortAudioOptions_SetQuality) == 0x000004, "Wrong size on FortAudioOptions_SetQuality");
static_assert(offsetof(FortAudioOptions_SetQuality, NewQuality) == 0x000000, "Member 'FortAudioOptions_SetQuality::NewQuality' has a wrong offset!");

// Function FortniteUI.FortAudioOptions.SetSubtitlesEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortAudioOptions_SetSubtitlesEnabled final
{
public:
	bool                                          bNewValue;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAudioOptions_SetSubtitlesEnabled) == 0x000001, "Wrong alignment on FortAudioOptions_SetSubtitlesEnabled");
static_assert(sizeof(FortAudioOptions_SetSubtitlesEnabled) == 0x000001, "Wrong size on FortAudioOptions_SetSubtitlesEnabled");
static_assert(offsetof(FortAudioOptions_SetSubtitlesEnabled, bNewValue) == 0x000000, "Member 'FortAudioOptions_SetSubtitlesEnabled::bNewValue' has a wrong offset!");

// Function FortniteUI.FortAudioOptions.SetVoiceChat3DEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortAudioOptions_SetVoiceChat3DEnabled final
{
public:
	bool                                          bNewValue;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAudioOptions_SetVoiceChat3DEnabled) == 0x000001, "Wrong alignment on FortAudioOptions_SetVoiceChat3DEnabled");
static_assert(sizeof(FortAudioOptions_SetVoiceChat3DEnabled) == 0x000001, "Wrong size on FortAudioOptions_SetVoiceChat3DEnabled");
static_assert(offsetof(FortAudioOptions_SetVoiceChat3DEnabled, bNewValue) == 0x000000, "Member 'FortAudioOptions_SetVoiceChat3DEnabled::bNewValue' has a wrong offset!");

// Function FortniteUI.FortAudioOptions.SetVoiceChatEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortAudioOptions_SetVoiceChatEnabled final
{
public:
	bool                                          bNewValue;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAudioOptions_SetVoiceChatEnabled) == 0x000001, "Wrong alignment on FortAudioOptions_SetVoiceChatEnabled");
static_assert(sizeof(FortAudioOptions_SetVoiceChatEnabled) == 0x000001, "Wrong size on FortAudioOptions_SetVoiceChatEnabled");
static_assert(offsetof(FortAudioOptions_SetVoiceChatEnabled, bNewValue) == 0x000000, "Member 'FortAudioOptions_SetVoiceChatEnabled::bNewValue' has a wrong offset!");

// Function FortniteUI.FortAudioOptions.SetVoiceChatPTTEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortAudioOptions_SetVoiceChatPTTEnabled final
{
public:
	bool                                          bNewValue;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAudioOptions_SetVoiceChatPTTEnabled) == 0x000001, "Wrong alignment on FortAudioOptions_SetVoiceChatPTTEnabled");
static_assert(sizeof(FortAudioOptions_SetVoiceChatPTTEnabled) == 0x000001, "Wrong size on FortAudioOptions_SetVoiceChatPTTEnabled");
static_assert(offsetof(FortAudioOptions_SetVoiceChatPTTEnabled, bNewValue) == 0x000000, "Member 'FortAudioOptions_SetVoiceChatPTTEnabled::bNewValue' has a wrong offset!");

// Function FortniteUI.FortAudioOptions.SoundFXVolumeChanged
// 0x0004 (0x0004 - 0x0000)
struct FortAudioOptions_SoundFXVolumeChanged final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAudioOptions_SoundFXVolumeChanged) == 0x000004, "Wrong alignment on FortAudioOptions_SoundFXVolumeChanged");
static_assert(sizeof(FortAudioOptions_SoundFXVolumeChanged) == 0x000004, "Wrong size on FortAudioOptions_SoundFXVolumeChanged");
static_assert(offsetof(FortAudioOptions_SoundFXVolumeChanged, NewValue) == 0x000000, "Member 'FortAudioOptions_SoundFXVolumeChanged::NewValue' has a wrong offset!");

// Function FortniteUI.FortAudioOptions.GetChatVolumeValue
// 0x0004 (0x0004 - 0x0000)
struct FortAudioOptions_GetChatVolumeValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAudioOptions_GetChatVolumeValue) == 0x000004, "Wrong alignment on FortAudioOptions_GetChatVolumeValue");
static_assert(sizeof(FortAudioOptions_GetChatVolumeValue) == 0x000004, "Wrong size on FortAudioOptions_GetChatVolumeValue");
static_assert(offsetof(FortAudioOptions_GetChatVolumeValue, ReturnValue) == 0x000000, "Member 'FortAudioOptions_GetChatVolumeValue::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAudioOptions.GetDialogVolumeValue
// 0x0004 (0x0004 - 0x0000)
struct FortAudioOptions_GetDialogVolumeValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAudioOptions_GetDialogVolumeValue) == 0x000004, "Wrong alignment on FortAudioOptions_GetDialogVolumeValue");
static_assert(sizeof(FortAudioOptions_GetDialogVolumeValue) == 0x000004, "Wrong size on FortAudioOptions_GetDialogVolumeValue");
static_assert(offsetof(FortAudioOptions_GetDialogVolumeValue, ReturnValue) == 0x000000, "Member 'FortAudioOptions_GetDialogVolumeValue::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAudioOptions.GetMusicVolumeValue
// 0x0004 (0x0004 - 0x0000)
struct FortAudioOptions_GetMusicVolumeValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAudioOptions_GetMusicVolumeValue) == 0x000004, "Wrong alignment on FortAudioOptions_GetMusicVolumeValue");
static_assert(sizeof(FortAudioOptions_GetMusicVolumeValue) == 0x000004, "Wrong size on FortAudioOptions_GetMusicVolumeValue");
static_assert(offsetof(FortAudioOptions_GetMusicVolumeValue, ReturnValue) == 0x000000, "Member 'FortAudioOptions_GetMusicVolumeValue::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAudioOptions.GetQuality
// 0x0004 (0x0004 - 0x0000)
struct FortAudioOptions_GetQuality final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAudioOptions_GetQuality) == 0x000004, "Wrong alignment on FortAudioOptions_GetQuality");
static_assert(sizeof(FortAudioOptions_GetQuality) == 0x000004, "Wrong size on FortAudioOptions_GetQuality");
static_assert(offsetof(FortAudioOptions_GetQuality, ReturnValue) == 0x000000, "Member 'FortAudioOptions_GetQuality::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAudioOptions.GetSoundFXVolumeValue
// 0x0004 (0x0004 - 0x0000)
struct FortAudioOptions_GetSoundFXVolumeValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAudioOptions_GetSoundFXVolumeValue) == 0x000004, "Wrong alignment on FortAudioOptions_GetSoundFXVolumeValue");
static_assert(sizeof(FortAudioOptions_GetSoundFXVolumeValue) == 0x000004, "Wrong size on FortAudioOptions_GetSoundFXVolumeValue");
static_assert(offsetof(FortAudioOptions_GetSoundFXVolumeValue, ReturnValue) == 0x000000, "Member 'FortAudioOptions_GetSoundFXVolumeValue::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAudioOptions.GetSubtitlesEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortAudioOptions_GetSubtitlesEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAudioOptions_GetSubtitlesEnabled) == 0x000001, "Wrong alignment on FortAudioOptions_GetSubtitlesEnabled");
static_assert(sizeof(FortAudioOptions_GetSubtitlesEnabled) == 0x000001, "Wrong size on FortAudioOptions_GetSubtitlesEnabled");
static_assert(offsetof(FortAudioOptions_GetSubtitlesEnabled, ReturnValue) == 0x000000, "Member 'FortAudioOptions_GetSubtitlesEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAudioOptions.GetVoiceChat3DEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortAudioOptions_GetVoiceChat3DEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAudioOptions_GetVoiceChat3DEnabled) == 0x000001, "Wrong alignment on FortAudioOptions_GetVoiceChat3DEnabled");
static_assert(sizeof(FortAudioOptions_GetVoiceChat3DEnabled) == 0x000001, "Wrong size on FortAudioOptions_GetVoiceChat3DEnabled");
static_assert(offsetof(FortAudioOptions_GetVoiceChat3DEnabled, ReturnValue) == 0x000000, "Member 'FortAudioOptions_GetVoiceChat3DEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAudioOptions.GetVoiceChatEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortAudioOptions_GetVoiceChatEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAudioOptions_GetVoiceChatEnabled) == 0x000001, "Wrong alignment on FortAudioOptions_GetVoiceChatEnabled");
static_assert(sizeof(FortAudioOptions_GetVoiceChatEnabled) == 0x000001, "Wrong size on FortAudioOptions_GetVoiceChatEnabled");
static_assert(offsetof(FortAudioOptions_GetVoiceChatEnabled, ReturnValue) == 0x000000, "Member 'FortAudioOptions_GetVoiceChatEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAudioOptions.GetVoiceChatPTTEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortAudioOptions_GetVoiceChatPTTEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAudioOptions_GetVoiceChatPTTEnabled) == 0x000001, "Wrong alignment on FortAudioOptions_GetVoiceChatPTTEnabled");
static_assert(sizeof(FortAudioOptions_GetVoiceChatPTTEnabled) == 0x000001, "Wrong size on FortAudioOptions_GetVoiceChatPTTEnabled");
static_assert(offsetof(FortAudioOptions_GetVoiceChatPTTEnabled, ReturnValue) == 0x000000, "Member 'FortAudioOptions_GetVoiceChatPTTEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAudioOptions.ShowChatVolume
// 0x0001 (0x0001 - 0x0000)
struct FortAudioOptions_ShowChatVolume final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAudioOptions_ShowChatVolume) == 0x000001, "Wrong alignment on FortAudioOptions_ShowChatVolume");
static_assert(sizeof(FortAudioOptions_ShowChatVolume) == 0x000001, "Wrong size on FortAudioOptions_ShowChatVolume");
static_assert(offsetof(FortAudioOptions_ShowChatVolume, ReturnValue) == 0x000000, "Member 'FortAudioOptions_ShowChatVolume::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortAudioOptions.ShowQuality
// 0x0001 (0x0001 - 0x0000)
struct FortAudioOptions_ShowQuality final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortAudioOptions_ShowQuality) == 0x000001, "Wrong alignment on FortAudioOptions_ShowQuality");
static_assert(sizeof(FortAudioOptions_ShowQuality) == 0x000001, "Wrong size on FortAudioOptions_ShowQuality");
static_assert(offsetof(FortAudioOptions_ShowQuality, ReturnValue) == 0x000000, "Member 'FortAudioOptions_ShowQuality::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemDetailsHostPanel.SetInspectMode
// 0x0001 (0x0001 - 0x0000)
struct FortItemDetailsHostPanel_SetInspectMode final
{
public:
	EFortItemInspectionMode                       InspectMode;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemDetailsHostPanel_SetInspectMode) == 0x000001, "Wrong alignment on FortItemDetailsHostPanel_SetInspectMode");
static_assert(sizeof(FortItemDetailsHostPanel_SetInspectMode) == 0x000001, "Wrong size on FortItemDetailsHostPanel_SetInspectMode");
static_assert(offsetof(FortItemDetailsHostPanel_SetInspectMode, InspectMode) == 0x000000, "Member 'FortItemDetailsHostPanel_SetInspectMode::InspectMode' has a wrong offset!");

// Function FortniteUI.FortItemDetailsHostPanel.SetItemToCompareWith
// 0x0008 (0x0008 - 0x0000)
struct FortItemDetailsHostPanel_SetItemToCompareWith final
{
public:
	const class UFortItem*                        Param_ItemToCompareWith;                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemDetailsHostPanel_SetItemToCompareWith) == 0x000008, "Wrong alignment on FortItemDetailsHostPanel_SetItemToCompareWith");
static_assert(sizeof(FortItemDetailsHostPanel_SetItemToCompareWith) == 0x000008, "Wrong size on FortItemDetailsHostPanel_SetItemToCompareWith");
static_assert(offsetof(FortItemDetailsHostPanel_SetItemToCompareWith, Param_ItemToCompareWith) == 0x000000, "Member 'FortItemDetailsHostPanel_SetItemToCompareWith::Param_ItemToCompareWith' has a wrong offset!");

// Function FortniteUI.FortItemDetailsHostPanel.SetItemToDetail
// 0x0008 (0x0008 - 0x0000)
struct FortItemDetailsHostPanel_SetItemToDetail final
{
public:
	const class UFortItem*                        Param_ItemToDetail;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemDetailsHostPanel_SetItemToDetail) == 0x000008, "Wrong alignment on FortItemDetailsHostPanel_SetItemToDetail");
static_assert(sizeof(FortItemDetailsHostPanel_SetItemToDetail) == 0x000008, "Wrong size on FortItemDetailsHostPanel_SetItemToDetail");
static_assert(offsetof(FortItemDetailsHostPanel_SetItemToDetail, Param_ItemToDetail) == 0x000000, "Member 'FortItemDetailsHostPanel_SetItemToDetail::Param_ItemToDetail' has a wrong offset!");

// Function FortniteUI.FortItemDetailsHostPanel.SetItemViewContext
// 0x0010 (0x0010 - 0x0000)
struct FortItemDetailsHostPanel_SetItemViewContext final
{
public:
	TScriptInterface<class IFortItemViewContextInterface> Param_ItemViewContext;                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemDetailsHostPanel_SetItemViewContext) == 0x000008, "Wrong alignment on FortItemDetailsHostPanel_SetItemViewContext");
static_assert(sizeof(FortItemDetailsHostPanel_SetItemViewContext) == 0x000010, "Wrong size on FortItemDetailsHostPanel_SetItemViewContext");
static_assert(offsetof(FortItemDetailsHostPanel_SetItemViewContext, Param_ItemViewContext) == 0x000000, "Member 'FortItemDetailsHostPanel_SetItemViewContext::Param_ItemViewContext' has a wrong offset!");

// Function FortniteUI.FortItemDetailsHostPanel.ShouldPreviewUpgradingItem
// 0x0001 (0x0001 - 0x0000)
struct FortItemDetailsHostPanel_ShouldPreviewUpgradingItem final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemDetailsHostPanel_ShouldPreviewUpgradingItem) == 0x000001, "Wrong alignment on FortItemDetailsHostPanel_ShouldPreviewUpgradingItem");
static_assert(sizeof(FortItemDetailsHostPanel_ShouldPreviewUpgradingItem) == 0x000001, "Wrong size on FortItemDetailsHostPanel_ShouldPreviewUpgradingItem");
static_assert(offsetof(FortItemDetailsHostPanel_ShouldPreviewUpgradingItem, Value) == 0x000000, "Member 'FortItemDetailsHostPanel_ShouldPreviewUpgradingItem::Value' has a wrong offset!");

// Function FortniteUI.FortBangWrapper.SetBangVisibility
// 0x0001 (0x0001 - 0x0000)
struct FortBangWrapper_SetBangVisibility final
{
public:
	bool                                          InVisible;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBangWrapper_SetBangVisibility) == 0x000001, "Wrong alignment on FortBangWrapper_SetBangVisibility");
static_assert(sizeof(FortBangWrapper_SetBangVisibility) == 0x000001, "Wrong size on FortBangWrapper_SetBangVisibility");
static_assert(offsetof(FortBangWrapper_SetBangVisibility, InVisible) == 0x000000, "Member 'FortBangWrapper_SetBangVisibility::InVisible' has a wrong offset!");

// Function FortniteUI.FortBangWrapper_NUI.OnBangStateChanged
// 0x0008 (0x0008 - 0x0000)
struct FortBangWrapper_NUI_OnBangStateChanged final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBangWrapper_NUI_OnBangStateChanged) == 0x000004, "Wrong alignment on FortBangWrapper_NUI_OnBangStateChanged");
static_assert(sizeof(FortBangWrapper_NUI_OnBangStateChanged) == 0x000008, "Wrong size on FortBangWrapper_NUI_OnBangStateChanged");
static_assert(offsetof(FortBangWrapper_NUI_OnBangStateChanged, bEnabled) == 0x000000, "Member 'FortBangWrapper_NUI_OnBangStateChanged::bEnabled' has a wrong offset!");
static_assert(offsetof(FortBangWrapper_NUI_OnBangStateChanged, Count) == 0x000004, "Member 'FortBangWrapper_NUI_OnBangStateChanged::Count' has a wrong offset!");

// Function FortniteUI.FortBangWrapper_NUI.SetBangStateBP
// 0x0008 (0x0008 - 0x0000)
struct FortBangWrapper_NUI_SetBangStateBP final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBangWrapper_NUI_SetBangStateBP) == 0x000004, "Wrong alignment on FortBangWrapper_NUI_SetBangStateBP");
static_assert(sizeof(FortBangWrapper_NUI_SetBangStateBP) == 0x000008, "Wrong size on FortBangWrapper_NUI_SetBangStateBP");
static_assert(offsetof(FortBangWrapper_NUI_SetBangStateBP, bEnabled) == 0x000000, "Member 'FortBangWrapper_NUI_SetBangStateBP::bEnabled' has a wrong offset!");
static_assert(offsetof(FortBangWrapper_NUI_SetBangStateBP, Count) == 0x000004, "Member 'FortBangWrapper_NUI_SetBangStateBP::Count' has a wrong offset!");

// Function FortniteUI.FortBangWrapper_NUI.SetBangType
// 0x0001 (0x0001 - 0x0000)
struct FortBangWrapper_NUI_SetBangType final
{
public:
	EFortBangType                                 NewBangType;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBangWrapper_NUI_SetBangType) == 0x000001, "Wrong alignment on FortBangWrapper_NUI_SetBangType");
static_assert(sizeof(FortBangWrapper_NUI_SetBangType) == 0x000001, "Wrong size on FortBangWrapper_NUI_SetBangType");
static_assert(offsetof(FortBangWrapper_NUI_SetBangType, NewBangType) == 0x000000, "Member 'FortBangWrapper_NUI_SetBangType::NewBangType' has a wrong offset!");

// Function FortniteUI.FortBangWrapper_NUI.SetTutorialNameID
// 0x0008 (0x0008 - 0x0000)
struct FortBangWrapper_NUI_SetTutorialNameID final
{
public:
	class FName                                   InTutorialNameID;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBangWrapper_NUI_SetTutorialNameID) == 0x000004, "Wrong alignment on FortBangWrapper_NUI_SetTutorialNameID");
static_assert(sizeof(FortBangWrapper_NUI_SetTutorialNameID) == 0x000008, "Wrong size on FortBangWrapper_NUI_SetTutorialNameID");
static_assert(offsetof(FortBangWrapper_NUI_SetTutorialNameID, InTutorialNameID) == 0x000000, "Member 'FortBangWrapper_NUI_SetTutorialNameID::InTutorialNameID' has a wrong offset!");

// Function FortniteUI.FortItemCountTextBlock.HandleItemCountChanged
// 0x0010 (0x0010 - 0x0000)
struct FortItemCountTextBlock_HandleItemCountChanged final
{
public:
	class UFortItemDefinition*                    Definition;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Delta;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemCountTextBlock_HandleItemCountChanged) == 0x000008, "Wrong alignment on FortItemCountTextBlock_HandleItemCountChanged");
static_assert(sizeof(FortItemCountTextBlock_HandleItemCountChanged) == 0x000010, "Wrong size on FortItemCountTextBlock_HandleItemCountChanged");
static_assert(offsetof(FortItemCountTextBlock_HandleItemCountChanged, Definition) == 0x000000, "Member 'FortItemCountTextBlock_HandleItemCountChanged::Definition' has a wrong offset!");
static_assert(offsetof(FortItemCountTextBlock_HandleItemCountChanged, Delta) == 0x000008, "Member 'FortItemCountTextBlock_HandleItemCountChanged::Delta' has a wrong offset!");

// Function FortniteUI.FortItemCountTextBlock.InterpolateOverrideToValue
// 0x0010 (0x0010 - 0x0000)
struct FortItemCountTextBlock_InterpolateOverrideToValue final
{
public:
	int32                                         TargetValue;                                       // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaximumInterpolationDuration;                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinimumChangeRate;                                 // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutroOffset;                                       // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemCountTextBlock_InterpolateOverrideToValue) == 0x000004, "Wrong alignment on FortItemCountTextBlock_InterpolateOverrideToValue");
static_assert(sizeof(FortItemCountTextBlock_InterpolateOverrideToValue) == 0x000010, "Wrong size on FortItemCountTextBlock_InterpolateOverrideToValue");
static_assert(offsetof(FortItemCountTextBlock_InterpolateOverrideToValue, TargetValue) == 0x000000, "Member 'FortItemCountTextBlock_InterpolateOverrideToValue::TargetValue' has a wrong offset!");
static_assert(offsetof(FortItemCountTextBlock_InterpolateOverrideToValue, MaximumInterpolationDuration) == 0x000004, "Member 'FortItemCountTextBlock_InterpolateOverrideToValue::MaximumInterpolationDuration' has a wrong offset!");
static_assert(offsetof(FortItemCountTextBlock_InterpolateOverrideToValue, MinimumChangeRate) == 0x000008, "Member 'FortItemCountTextBlock_InterpolateOverrideToValue::MinimumChangeRate' has a wrong offset!");
static_assert(offsetof(FortItemCountTextBlock_InterpolateOverrideToValue, OutroOffset) == 0x00000C, "Member 'FortItemCountTextBlock_InterpolateOverrideToValue::OutroOffset' has a wrong offset!");

// Function FortniteUI.FortItemCountTextBlock.SetCountStyle
// 0x0001 (0x0001 - 0x0000)
struct FortItemCountTextBlock_SetCountStyle final
{
public:
	EFortItemCountStyle                           InCountStyle;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemCountTextBlock_SetCountStyle) == 0x000001, "Wrong alignment on FortItemCountTextBlock_SetCountStyle");
static_assert(sizeof(FortItemCountTextBlock_SetCountStyle) == 0x000001, "Wrong size on FortItemCountTextBlock_SetCountStyle");
static_assert(offsetof(FortItemCountTextBlock_SetCountStyle, InCountStyle) == 0x000000, "Member 'FortItemCountTextBlock_SetCountStyle::InCountStyle' has a wrong offset!");

// Function FortniteUI.FortItemCountTextBlock.SetItemDefinition
// 0x0008 (0x0008 - 0x0000)
struct FortItemCountTextBlock_SetItemDefinition final
{
public:
	class UFortItemDefinition*                    InItemDefinition;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemCountTextBlock_SetItemDefinition) == 0x000008, "Wrong alignment on FortItemCountTextBlock_SetItemDefinition");
static_assert(sizeof(FortItemCountTextBlock_SetItemDefinition) == 0x000008, "Wrong size on FortItemCountTextBlock_SetItemDefinition");
static_assert(offsetof(FortItemCountTextBlock_SetItemDefinition, InItemDefinition) == 0x000000, "Member 'FortItemCountTextBlock_SetItemDefinition::InItemDefinition' has a wrong offset!");

// Function FortniteUI.FortItemCountTextBlock.SetOverrideValue
// 0x0004 (0x0004 - 0x0000)
struct FortItemCountTextBlock_SetOverrideValue final
{
public:
	int32                                         InOverrideValue;                                   // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemCountTextBlock_SetOverrideValue) == 0x000004, "Wrong alignment on FortItemCountTextBlock_SetOverrideValue");
static_assert(sizeof(FortItemCountTextBlock_SetOverrideValue) == 0x000004, "Wrong size on FortItemCountTextBlock_SetOverrideValue");
static_assert(offsetof(FortItemCountTextBlock_SetOverrideValue, InOverrideValue) == 0x000000, "Member 'FortItemCountTextBlock_SetOverrideValue::InOverrideValue' has a wrong offset!");

// Function FortniteUI.FortBannerSelectorBase.HandleBannerNameChanged
// 0x0018 (0x0018 - 0x0000)
struct FortBannerSelectorBase_HandleBannerNameChanged final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBannerSelectorBase_HandleBannerNameChanged) == 0x000008, "Wrong alignment on FortBannerSelectorBase_HandleBannerNameChanged");
static_assert(sizeof(FortBannerSelectorBase_HandleBannerNameChanged) == 0x000018, "Wrong size on FortBannerSelectorBase_HandleBannerNameChanged");
static_assert(offsetof(FortBannerSelectorBase_HandleBannerNameChanged, Text) == 0x000000, "Member 'FortBannerSelectorBase_HandleBannerNameChanged::Text' has a wrong offset!");

// Function FortniteUI.FortBannerSelectorBase.UpdateErrorText
// 0x0018 (0x0018 - 0x0000)
struct FortBannerSelectorBase_UpdateErrorText final
{
public:
	class FText                                   ErrorMessageText;                                  // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBannerSelectorBase_UpdateErrorText) == 0x000008, "Wrong alignment on FortBannerSelectorBase_UpdateErrorText");
static_assert(sizeof(FortBannerSelectorBase_UpdateErrorText) == 0x000018, "Wrong size on FortBannerSelectorBase_UpdateErrorText");
static_assert(offsetof(FortBannerSelectorBase_UpdateErrorText, ErrorMessageText) == 0x000000, "Member 'FortBannerSelectorBase_UpdateErrorText::ErrorMessageText' has a wrong offset!");

// Function FortniteUI.FortBannerSelectorBase.HasIllegalChars
// 0x0018 (0x0018 - 0x0000)
struct FortBannerSelectorBase_HasIllegalChars final
{
public:
	class FString                                 NewBannerName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortBannerSelectorBase_HasIllegalChars) == 0x000008, "Wrong alignment on FortBannerSelectorBase_HasIllegalChars");
static_assert(sizeof(FortBannerSelectorBase_HasIllegalChars) == 0x000018, "Wrong size on FortBannerSelectorBase_HasIllegalChars");
static_assert(offsetof(FortBannerSelectorBase_HasIllegalChars, NewBannerName) == 0x000000, "Member 'FortBannerSelectorBase_HasIllegalChars::NewBannerName' has a wrong offset!");
static_assert(offsetof(FortBannerSelectorBase_HasIllegalChars, ReturnValue) == 0x000010, "Member 'FortBannerSelectorBase_HasIllegalChars::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBannerSelectorBase.IsPlayerNameValid
// 0x0038 (0x0038 - 0x0000)
struct FortBannerSelectorBase_IsPlayerNameValid final
{
public:
	class FText                                   PlayerName;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          OutIsValid;                                        // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OutErrorText;                                      // 0x0020(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBannerSelectorBase_IsPlayerNameValid) == 0x000008, "Wrong alignment on FortBannerSelectorBase_IsPlayerNameValid");
static_assert(sizeof(FortBannerSelectorBase_IsPlayerNameValid) == 0x000038, "Wrong size on FortBannerSelectorBase_IsPlayerNameValid");
static_assert(offsetof(FortBannerSelectorBase_IsPlayerNameValid, PlayerName) == 0x000000, "Member 'FortBannerSelectorBase_IsPlayerNameValid::PlayerName' has a wrong offset!");
static_assert(offsetof(FortBannerSelectorBase_IsPlayerNameValid, OutIsValid) == 0x000018, "Member 'FortBannerSelectorBase_IsPlayerNameValid::OutIsValid' has a wrong offset!");
static_assert(offsetof(FortBannerSelectorBase_IsPlayerNameValid, OutErrorText) == 0x000020, "Member 'FortBannerSelectorBase_IsPlayerNameValid::OutErrorText' has a wrong offset!");

// Function FortniteUI.FortButtonStyle.GetBrushBySizeFromMultiSizeBrush
// 0x0350 (0x0350 - 0x0000)
struct FortButtonStyle_GetBrushBySizeFromMultiSizeBrush final
{
public:
	struct FFortMultiSizeBrush                    MultiSizeBrush;                                    // 0x0000(0x02D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EFortBrushSize                                Size;                                              // 0x02D0(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            ReturnValue;                                       // 0x02D8(0x0078)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButtonStyle_GetBrushBySizeFromMultiSizeBrush) == 0x000008, "Wrong alignment on FortButtonStyle_GetBrushBySizeFromMultiSizeBrush");
static_assert(sizeof(FortButtonStyle_GetBrushBySizeFromMultiSizeBrush) == 0x000350, "Wrong size on FortButtonStyle_GetBrushBySizeFromMultiSizeBrush");
static_assert(offsetof(FortButtonStyle_GetBrushBySizeFromMultiSizeBrush, MultiSizeBrush) == 0x000000, "Member 'FortButtonStyle_GetBrushBySizeFromMultiSizeBrush::MultiSizeBrush' has a wrong offset!");
static_assert(offsetof(FortButtonStyle_GetBrushBySizeFromMultiSizeBrush, Size) == 0x0002D0, "Member 'FortButtonStyle_GetBrushBySizeFromMultiSizeBrush::Size' has a wrong offset!");
static_assert(offsetof(FortButtonStyle_GetBrushBySizeFromMultiSizeBrush, ReturnValue) == 0x0002D8, "Member 'FortButtonStyle_GetBrushBySizeFromMultiSizeBrush::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortButtonStyle.GetFontBySizeFromMultiSizeFont
// 0x0270 (0x0270 - 0x0000)
struct FortButtonStyle_GetFontBySizeFromMultiSizeFont final
{
public:
	struct FFortMultiSizeFont                     MultiSizeFont;                                     // 0x0000(0x0210)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	EFortBrushSize                                Size;                                              // 0x0210(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         ReturnValue;                                       // 0x0218(0x0058)(ConstParm, Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButtonStyle_GetFontBySizeFromMultiSizeFont) == 0x000008, "Wrong alignment on FortButtonStyle_GetFontBySizeFromMultiSizeFont");
static_assert(sizeof(FortButtonStyle_GetFontBySizeFromMultiSizeFont) == 0x000270, "Wrong size on FortButtonStyle_GetFontBySizeFromMultiSizeFont");
static_assert(offsetof(FortButtonStyle_GetFontBySizeFromMultiSizeFont, MultiSizeFont) == 0x000000, "Member 'FortButtonStyle_GetFontBySizeFromMultiSizeFont::MultiSizeFont' has a wrong offset!");
static_assert(offsetof(FortButtonStyle_GetFontBySizeFromMultiSizeFont, Size) == 0x000210, "Member 'FortButtonStyle_GetFontBySizeFromMultiSizeFont::Size' has a wrong offset!");
static_assert(offsetof(FortButtonStyle_GetFontBySizeFromMultiSizeFont, ReturnValue) == 0x000218, "Member 'FortButtonStyle_GetFontBySizeFromMultiSizeFont::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortButtonStyle.GetMarginBySizeFromMultiSizeMargin
// 0x0074 (0x0074 - 0x0000)
struct FortButtonStyle_GetMarginBySizeFromMultiSizeMargin final
{
public:
	struct FFortMultiSizeMargin                   MultiSizeMargin;                                   // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	EFortBrushSize                                Size;                                              // 0x0060(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                ReturnValue;                                       // 0x0064(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButtonStyle_GetMarginBySizeFromMultiSizeMargin) == 0x000004, "Wrong alignment on FortButtonStyle_GetMarginBySizeFromMultiSizeMargin");
static_assert(sizeof(FortButtonStyle_GetMarginBySizeFromMultiSizeMargin) == 0x000074, "Wrong size on FortButtonStyle_GetMarginBySizeFromMultiSizeMargin");
static_assert(offsetof(FortButtonStyle_GetMarginBySizeFromMultiSizeMargin, MultiSizeMargin) == 0x000000, "Member 'FortButtonStyle_GetMarginBySizeFromMultiSizeMargin::MultiSizeMargin' has a wrong offset!");
static_assert(offsetof(FortButtonStyle_GetMarginBySizeFromMultiSizeMargin, Size) == 0x000060, "Member 'FortButtonStyle_GetMarginBySizeFromMultiSizeMargin::Size' has a wrong offset!");
static_assert(offsetof(FortButtonStyle_GetMarginBySizeFromMultiSizeMargin, ReturnValue) == 0x000064, "Member 'FortButtonStyle_GetMarginBySizeFromMultiSizeMargin::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortButtonStyle.GetButtonPaddingBySize
// 0x0014 (0x0014 - 0x0000)
struct FortButtonStyle_GetButtonPaddingBySize final
{
public:
	EFortBrushSize                                Size;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                ReturnValue;                                       // 0x0004(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButtonStyle_GetButtonPaddingBySize) == 0x000004, "Wrong alignment on FortButtonStyle_GetButtonPaddingBySize");
static_assert(sizeof(FortButtonStyle_GetButtonPaddingBySize) == 0x000014, "Wrong size on FortButtonStyle_GetButtonPaddingBySize");
static_assert(offsetof(FortButtonStyle_GetButtonPaddingBySize, Size) == 0x000000, "Member 'FortButtonStyle_GetButtonPaddingBySize::Size' has a wrong offset!");
static_assert(offsetof(FortButtonStyle_GetButtonPaddingBySize, ReturnValue) == 0x000004, "Member 'FortButtonStyle_GetButtonPaddingBySize::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortButtonStyle.GetCustomPaddingBySize
// 0x0014 (0x0014 - 0x0000)
struct FortButtonStyle_GetCustomPaddingBySize final
{
public:
	EFortBrushSize                                Size;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                ReturnValue;                                       // 0x0004(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButtonStyle_GetCustomPaddingBySize) == 0x000004, "Wrong alignment on FortButtonStyle_GetCustomPaddingBySize");
static_assert(sizeof(FortButtonStyle_GetCustomPaddingBySize) == 0x000014, "Wrong size on FortButtonStyle_GetCustomPaddingBySize");
static_assert(offsetof(FortButtonStyle_GetCustomPaddingBySize, Size) == 0x000000, "Member 'FortButtonStyle_GetCustomPaddingBySize::Size' has a wrong offset!");
static_assert(offsetof(FortButtonStyle_GetCustomPaddingBySize, ReturnValue) == 0x000004, "Member 'FortButtonStyle_GetCustomPaddingBySize::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortButtonStyle.GetFontBySize
// 0x0060 (0x0060 - 0x0000)
struct FortButtonStyle_GetFontBySize final
{
public:
	EFortBrushSize                                Size;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         ReturnValue;                                       // 0x0008(0x0058)(ConstParm, Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortButtonStyle_GetFontBySize) == 0x000008, "Wrong alignment on FortButtonStyle_GetFontBySize");
static_assert(sizeof(FortButtonStyle_GetFontBySize) == 0x000060, "Wrong size on FortButtonStyle_GetFontBySize");
static_assert(offsetof(FortButtonStyle_GetFontBySize, Size) == 0x000000, "Member 'FortButtonStyle_GetFontBySize::Size' has a wrong offset!");
static_assert(offsetof(FortButtonStyle_GetFontBySize, ReturnValue) == 0x000008, "Member 'FortButtonStyle_GetFontBySize::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemCardUtilities.GetCardDimensions
// 0x000C (0x000C - 0x0000)
struct FortItemCardUtilities_GetCardDimensions final
{
public:
	EFortItemType                                 ItemType;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortItemCardSize                             CardSize;                                          // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsReward;                                          // 0x0002(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          UseNewItemCardSizes;                               // 0x0003(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              ReturnValue;                                       // 0x0004(0x0008)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemCardUtilities_GetCardDimensions) == 0x000004, "Wrong alignment on FortItemCardUtilities_GetCardDimensions");
static_assert(sizeof(FortItemCardUtilities_GetCardDimensions) == 0x00000C, "Wrong size on FortItemCardUtilities_GetCardDimensions");
static_assert(offsetof(FortItemCardUtilities_GetCardDimensions, ItemType) == 0x000000, "Member 'FortItemCardUtilities_GetCardDimensions::ItemType' has a wrong offset!");
static_assert(offsetof(FortItemCardUtilities_GetCardDimensions, CardSize) == 0x000001, "Member 'FortItemCardUtilities_GetCardDimensions::CardSize' has a wrong offset!");
static_assert(offsetof(FortItemCardUtilities_GetCardDimensions, IsReward) == 0x000002, "Member 'FortItemCardUtilities_GetCardDimensions::IsReward' has a wrong offset!");
static_assert(offsetof(FortItemCardUtilities_GetCardDimensions, UseNewItemCardSizes) == 0x000003, "Member 'FortItemCardUtilities_GetCardDimensions::UseNewItemCardSizes' has a wrong offset!");
static_assert(offsetof(FortItemCardUtilities_GetCardDimensions, ReturnValue) == 0x000004, "Member 'FortItemCardUtilities_GetCardDimensions::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseButton.GetSelectionGroupIndex
// 0x0004 (0x0004 - 0x0000)
struct FortBaseButton_GetSelectionGroupIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_GetSelectionGroupIndex) == 0x000004, "Wrong alignment on FortBaseButton_GetSelectionGroupIndex");
static_assert(sizeof(FortBaseButton_GetSelectionGroupIndex) == 0x000004, "Wrong size on FortBaseButton_GetSelectionGroupIndex");
static_assert(offsetof(FortBaseButton_GetSelectionGroupIndex, ReturnValue) == 0x000000, "Member 'FortBaseButton_GetSelectionGroupIndex::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseButton.SetBangVisibility
// 0x0001 (0x0001 - 0x0000)
struct FortBaseButton_SetBangVisibility final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_SetBangVisibility) == 0x000001, "Wrong alignment on FortBaseButton_SetBangVisibility");
static_assert(sizeof(FortBaseButton_SetBangVisibility) == 0x000001, "Wrong size on FortBaseButton_SetBangVisibility");
static_assert(offsetof(FortBaseButton_SetBangVisibility, bVisible) == 0x000000, "Member 'FortBaseButton_SetBangVisibility::bVisible' has a wrong offset!");

// Function FortniteUI.FortBaseButton.SetBrushSize
// 0x0001 (0x0001 - 0x0000)
struct FortBaseButton_SetBrushSize final
{
public:
	EFortBrushSize                                InSize;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_SetBrushSize) == 0x000001, "Wrong alignment on FortBaseButton_SetBrushSize");
static_assert(sizeof(FortBaseButton_SetBrushSize) == 0x000001, "Wrong size on FortBaseButton_SetBrushSize");
static_assert(offsetof(FortBaseButton_SetBrushSize, InSize) == 0x000000, "Member 'FortBaseButton_SetBrushSize::InSize' has a wrong offset!");

// Function FortniteUI.FortBaseButton.SetClickable
// 0x0001 (0x0001 - 0x0000)
struct FortBaseButton_SetClickable final
{
public:
	bool                                          InClickable;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_SetClickable) == 0x000001, "Wrong alignment on FortBaseButton_SetClickable");
static_assert(sizeof(FortBaseButton_SetClickable) == 0x000001, "Wrong size on FortBaseButton_SetClickable");
static_assert(offsetof(FortBaseButton_SetClickable, InClickable) == 0x000000, "Member 'FortBaseButton_SetClickable::InClickable' has a wrong offset!");

// Function FortniteUI.FortBaseButton.SetClickMethod
// 0x0001 (0x0001 - 0x0000)
struct FortBaseButton_SetClickMethod final
{
public:
	EButtonClickMethod                            InClickMethod;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_SetClickMethod) == 0x000001, "Wrong alignment on FortBaseButton_SetClickMethod");
static_assert(sizeof(FortBaseButton_SetClickMethod) == 0x000001, "Wrong size on FortBaseButton_SetClickMethod");
static_assert(offsetof(FortBaseButton_SetClickMethod, InClickMethod) == 0x000000, "Member 'FortBaseButton_SetClickMethod::InClickMethod' has a wrong offset!");

// Function FortniteUI.FortBaseButton.SetHovered
// 0x0001 (0x0001 - 0x0000)
struct FortBaseButton_SetHovered final
{
public:
	bool                                          InHovered;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_SetHovered) == 0x000001, "Wrong alignment on FortBaseButton_SetHovered");
static_assert(sizeof(FortBaseButton_SetHovered) == 0x000001, "Wrong size on FortBaseButton_SetHovered");
static_assert(offsetof(FortBaseButton_SetHovered, InHovered) == 0x000000, "Member 'FortBaseButton_SetHovered::InHovered' has a wrong offset!");

// Function FortniteUI.FortBaseButton.SetSelected
// 0x0001 (0x0001 - 0x0000)
struct FortBaseButton_SetSelected final
{
public:
	bool                                          InSelected;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_SetSelected) == 0x000001, "Wrong alignment on FortBaseButton_SetSelected");
static_assert(sizeof(FortBaseButton_SetSelected) == 0x000001, "Wrong size on FortBaseButton_SetSelected");
static_assert(offsetof(FortBaseButton_SetSelected, InSelected) == 0x000000, "Member 'FortBaseButton_SetSelected::InSelected' has a wrong offset!");

// Function FortniteUI.FortBaseButton.SetSelectionGroup
// 0x0008 (0x0008 - 0x0000)
struct FortBaseButton_SetSelectionGroup final
{
public:
	class FName                                   InSelectionGroup;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_SetSelectionGroup) == 0x000004, "Wrong alignment on FortBaseButton_SetSelectionGroup");
static_assert(sizeof(FortBaseButton_SetSelectionGroup) == 0x000008, "Wrong size on FortBaseButton_SetSelectionGroup");
static_assert(offsetof(FortBaseButton_SetSelectionGroup, InSelectionGroup) == 0x000000, "Member 'FortBaseButton_SetSelectionGroup::InSelectionGroup' has a wrong offset!");

// Function FortniteUI.FortBaseButton.SetStyle
// 0x0008 (0x0008 - 0x0000)
struct FortBaseButton_SetStyle final
{
public:
	TSubclassOf<class UFortButtonStyle>           InStyle;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_SetStyle) == 0x000008, "Wrong alignment on FortBaseButton_SetStyle");
static_assert(sizeof(FortBaseButton_SetStyle) == 0x000008, "Wrong size on FortBaseButton_SetStyle");
static_assert(offsetof(FortBaseButton_SetStyle, InStyle) == 0x000000, "Member 'FortBaseButton_SetStyle::InStyle' has a wrong offset!");

// Function FortniteUI.FortBaseButton.GetCurrentButtonPadding
// 0x0010 (0x0010 - 0x0000)
struct FortBaseButton_GetCurrentButtonPadding final
{
public:
	struct FMargin                                ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_GetCurrentButtonPadding) == 0x000004, "Wrong alignment on FortBaseButton_GetCurrentButtonPadding");
static_assert(sizeof(FortBaseButton_GetCurrentButtonPadding) == 0x000010, "Wrong size on FortBaseButton_GetCurrentButtonPadding");
static_assert(offsetof(FortBaseButton_GetCurrentButtonPadding, ReturnValue) == 0x000000, "Member 'FortBaseButton_GetCurrentButtonPadding::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseButton.GetCurrentCustomPadding
// 0x0010 (0x0010 - 0x0000)
struct FortBaseButton_GetCurrentCustomPadding final
{
public:
	struct FMargin                                ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_GetCurrentCustomPadding) == 0x000004, "Wrong alignment on FortBaseButton_GetCurrentCustomPadding");
static_assert(sizeof(FortBaseButton_GetCurrentCustomPadding) == 0x000010, "Wrong size on FortBaseButton_GetCurrentCustomPadding");
static_assert(offsetof(FortBaseButton_GetCurrentCustomPadding, ReturnValue) == 0x000000, "Member 'FortBaseButton_GetCurrentCustomPadding::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseButton.GetCurrentFont
// 0x0058 (0x0058 - 0x0000)
struct FortBaseButton_GetCurrentFont final
{
public:
	struct FSlateFontInfo                         ReturnValue;                                       // 0x0000(0x0058)(ConstParm, Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_GetCurrentFont) == 0x000008, "Wrong alignment on FortBaseButton_GetCurrentFont");
static_assert(sizeof(FortBaseButton_GetCurrentFont) == 0x000058, "Wrong size on FortBaseButton_GetCurrentFont");
static_assert(offsetof(FortBaseButton_GetCurrentFont, ReturnValue) == 0x000000, "Member 'FortBaseButton_GetCurrentFont::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseButton.GetCurrentStateStyle
// 0x02F0 (0x02F0 - 0x0000)
struct FortBaseButton_GetCurrentStateStyle final
{
public:
	struct FFortStateStyle                        ReturnValue;                                       // 0x0000(0x02F0)(ConstParm, Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_GetCurrentStateStyle) == 0x000008, "Wrong alignment on FortBaseButton_GetCurrentStateStyle");
static_assert(sizeof(FortBaseButton_GetCurrentStateStyle) == 0x0002F0, "Wrong size on FortBaseButton_GetCurrentStateStyle");
static_assert(offsetof(FortBaseButton_GetCurrentStateStyle, ReturnValue) == 0x000000, "Member 'FortBaseButton_GetCurrentStateStyle::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseButton.GetSelected
// 0x0001 (0x0001 - 0x0000)
struct FortBaseButton_GetSelected final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_GetSelected) == 0x000001, "Wrong alignment on FortBaseButton_GetSelected");
static_assert(sizeof(FortBaseButton_GetSelected) == 0x000001, "Wrong size on FortBaseButton_GetSelected");
static_assert(offsetof(FortBaseButton_GetSelected, ReturnValue) == 0x000000, "Member 'FortBaseButton_GetSelected::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseButton.GetStyle
// 0x0008 (0x0008 - 0x0000)
struct FortBaseButton_GetStyle final
{
public:
	class UFortButtonStyle*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseButton_GetStyle) == 0x000008, "Wrong alignment on FortBaseButton_GetStyle");
static_assert(sizeof(FortBaseButton_GetStyle) == 0x000008, "Wrong size on FortBaseButton_GetStyle");
static_assert(offsetof(FortBaseButton_GetStyle, ReturnValue) == 0x000000, "Member 'FortBaseButton_GetStyle::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBluGloCounter.OnBluGloQuantityChanged
// 0x0004 (0x0004 - 0x0000)
struct FortBluGloCounter_OnBluGloQuantityChanged final
{
public:
	int32                                         Quantity;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBluGloCounter_OnBluGloQuantityChanged) == 0x000004, "Wrong alignment on FortBluGloCounter_OnBluGloQuantityChanged");
static_assert(sizeof(FortBluGloCounter_OnBluGloQuantityChanged) == 0x000004, "Wrong size on FortBluGloCounter_OnBluGloQuantityChanged");
static_assert(offsetof(FortBluGloCounter_OnBluGloQuantityChanged, Quantity) == 0x000000, "Member 'FortBluGloCounter_OnBluGloQuantityChanged::Quantity' has a wrong offset!");

// Function FortniteUI.FortOutpostStorageItemPicker.UseFilter
// 0x0001 (0x0001 - 0x0000)
struct FortOutpostStorageItemPicker_UseFilter final
{
public:
	EFortItemType                                 ItemType;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortOutpostStorageItemPicker_UseFilter) == 0x000001, "Wrong alignment on FortOutpostStorageItemPicker_UseFilter");
static_assert(sizeof(FortOutpostStorageItemPicker_UseFilter) == 0x000001, "Wrong size on FortOutpostStorageItemPicker_UseFilter");
static_assert(offsetof(FortOutpostStorageItemPicker_UseFilter, ItemType) == 0x000000, "Member 'FortOutpostStorageItemPicker_UseFilter::ItemType' has a wrong offset!");

// Function FortniteUI.FortOutpostStorageItemPicker.UseFilters
// 0x0010 (0x0010 - 0x0000)
struct FortOutpostStorageItemPicker_UseFilters final
{
public:
	TArray<EFortItemType>                         ItemTypes;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortOutpostStorageItemPicker_UseFilters) == 0x000008, "Wrong alignment on FortOutpostStorageItemPicker_UseFilters");
static_assert(sizeof(FortOutpostStorageItemPicker_UseFilters) == 0x000010, "Wrong size on FortOutpostStorageItemPicker_UseFilters");
static_assert(offsetof(FortOutpostStorageItemPicker_UseFilters, ItemTypes) == 0x000000, "Member 'FortOutpostStorageItemPicker_UseFilters::ItemTypes' has a wrong offset!");

// Function FortniteUI.FortBorderStyleList.GetBorderStyles
// 0x0010 (0x0010 - 0x0000)
struct FortBorderStyleList_GetBorderStyles final
{
public:
	TArray<TSoftClassPtr<class UClass>>           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBorderStyleList_GetBorderStyles) == 0x000008, "Wrong alignment on FortBorderStyleList_GetBorderStyles");
static_assert(sizeof(FortBorderStyleList_GetBorderStyles) == 0x000010, "Wrong size on FortBorderStyleList_GetBorderStyles");
static_assert(offsetof(FortBorderStyleList_GetBorderStyles, ReturnValue) == 0x000000, "Member 'FortBorderStyleList_GetBorderStyles::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemManagementItemPopupMenu.HandleItemChanged
// 0x0003 (0x0003 - 0x0000)
struct FortItemManagementItemPopupMenu_HandleItemChanged final
{
public:
	bool                                          bItemChanged;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAmmoChanged;                                      // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIngredientsChanged;                               // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementItemPopupMenu_HandleItemChanged) == 0x000001, "Wrong alignment on FortItemManagementItemPopupMenu_HandleItemChanged");
static_assert(sizeof(FortItemManagementItemPopupMenu_HandleItemChanged) == 0x000003, "Wrong size on FortItemManagementItemPopupMenu_HandleItemChanged");
static_assert(offsetof(FortItemManagementItemPopupMenu_HandleItemChanged, bItemChanged) == 0x000000, "Member 'FortItemManagementItemPopupMenu_HandleItemChanged::bItemChanged' has a wrong offset!");
static_assert(offsetof(FortItemManagementItemPopupMenu_HandleItemChanged, bAmmoChanged) == 0x000001, "Member 'FortItemManagementItemPopupMenu_HandleItemChanged::bAmmoChanged' has a wrong offset!");
static_assert(offsetof(FortItemManagementItemPopupMenu_HandleItemChanged, bIngredientsChanged) == 0x000002, "Member 'FortItemManagementItemPopupMenu_HandleItemChanged::bIngredientsChanged' has a wrong offset!");

// Function FortniteUI.FortItemManagementItemPopupMenu.GetHostButton
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementItemPopupMenu_GetHostButton final
{
public:
	class UFortItemManagementItemTileButton*      ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementItemPopupMenu_GetHostButton) == 0x000008, "Wrong alignment on FortItemManagementItemPopupMenu_GetHostButton");
static_assert(sizeof(FortItemManagementItemPopupMenu_GetHostButton) == 0x000008, "Wrong size on FortItemManagementItemPopupMenu_GetHostButton");
static_assert(offsetof(FortItemManagementItemPopupMenu_GetHostButton, ReturnValue) == 0x000000, "Member 'FortItemManagementItemPopupMenu_GetHostButton::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortCapturePointWidget.OnCapturePointDataChanged
// 0x000C (0x000C - 0x0000)
struct FortCapturePointWidget_OnCapturePointDataChanged final
{
public:
	bool                                          bActivated;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLocked;                                           // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CapturePercentage;                                 // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECaptureState                                 CaptureState;                                      // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortTeam                                     ControllingTeam;                                   // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortCapturePointWidget_OnCapturePointDataChanged) == 0x000004, "Wrong alignment on FortCapturePointWidget_OnCapturePointDataChanged");
static_assert(sizeof(FortCapturePointWidget_OnCapturePointDataChanged) == 0x00000C, "Wrong size on FortCapturePointWidget_OnCapturePointDataChanged");
static_assert(offsetof(FortCapturePointWidget_OnCapturePointDataChanged, bActivated) == 0x000000, "Member 'FortCapturePointWidget_OnCapturePointDataChanged::bActivated' has a wrong offset!");
static_assert(offsetof(FortCapturePointWidget_OnCapturePointDataChanged, bLocked) == 0x000001, "Member 'FortCapturePointWidget_OnCapturePointDataChanged::bLocked' has a wrong offset!");
static_assert(offsetof(FortCapturePointWidget_OnCapturePointDataChanged, CapturePercentage) == 0x000004, "Member 'FortCapturePointWidget_OnCapturePointDataChanged::CapturePercentage' has a wrong offset!");
static_assert(offsetof(FortCapturePointWidget_OnCapturePointDataChanged, CaptureState) == 0x000008, "Member 'FortCapturePointWidget_OnCapturePointDataChanged::CaptureState' has a wrong offset!");
static_assert(offsetof(FortCapturePointWidget_OnCapturePointDataChanged, ControllingTeam) == 0x000009, "Member 'FortCapturePointWidget_OnCapturePointDataChanged::ControllingTeam' has a wrong offset!");

// Function FortniteUI.FortPerkTierWidget.OnGeneratePerk
// 0x0098 (0x0098 - 0x0000)
struct FortPerkTierWidget_OnGeneratePerk final
{
public:
	struct FFortUIPerk                            Perk;                                              // 0x0000(0x0098)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkTierWidget_OnGeneratePerk) == 0x000008, "Wrong alignment on FortPerkTierWidget_OnGeneratePerk");
static_assert(sizeof(FortPerkTierWidget_OnGeneratePerk) == 0x000098, "Wrong size on FortPerkTierWidget_OnGeneratePerk");
static_assert(offsetof(FortPerkTierWidget_OnGeneratePerk, Perk) == 0x000000, "Member 'FortPerkTierWidget_OnGeneratePerk::Perk' has a wrong offset!");

// Function FortniteUI.FortChatContainer.SetNativeWidgetHost
// 0x0008 (0x0008 - 0x0000)
struct FortChatContainer_SetNativeWidgetHost final
{
public:
	class UNativeWidgetHost*                      InNativeWidgetHost;                                // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortChatContainer_SetNativeWidgetHost) == 0x000008, "Wrong alignment on FortChatContainer_SetNativeWidgetHost");
static_assert(sizeof(FortChatContainer_SetNativeWidgetHost) == 0x000008, "Wrong size on FortChatContainer_SetNativeWidgetHost");
static_assert(offsetof(FortChatContainer_SetNativeWidgetHost, InNativeWidgetHost) == 0x000000, "Member 'FortChatContainer_SetNativeWidgetHost::InNativeWidgetHost' has a wrong offset!");

// Function FortniteUI.FortChatWidget.SetControllerActionBrush
// 0x0078 (0x0078 - 0x0000)
struct FortChatWidget_SetControllerActionBrush final
{
public:
	struct FSlateBrush                            SlateBrush;                                        // 0x0000(0x0078)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortChatWidget_SetControllerActionBrush) == 0x000008, "Wrong alignment on FortChatWidget_SetControllerActionBrush");
static_assert(sizeof(FortChatWidget_SetControllerActionBrush) == 0x000078, "Wrong size on FortChatWidget_SetControllerActionBrush");
static_assert(offsetof(FortChatWidget_SetControllerActionBrush, SlateBrush) == 0x000000, "Member 'FortChatWidget_SetControllerActionBrush::SlateBrush' has a wrong offset!");

// Function FortniteUI.FortOptionsMenu.NeedsLanguageChangeConfirmation
// 0x0001 (0x0001 - 0x0000)
struct FortOptionsMenu_NeedsLanguageChangeConfirmation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortOptionsMenu_NeedsLanguageChangeConfirmation) == 0x000001, "Wrong alignment on FortOptionsMenu_NeedsLanguageChangeConfirmation");
static_assert(sizeof(FortOptionsMenu_NeedsLanguageChangeConfirmation) == 0x000001, "Wrong size on FortOptionsMenu_NeedsLanguageChangeConfirmation");
static_assert(offsetof(FortOptionsMenu_NeedsLanguageChangeConfirmation, ReturnValue) == 0x000000, "Member 'FortOptionsMenu_NeedsLanguageChangeConfirmation::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortOptionsMenu.NeedsVideoChangeConfirmation
// 0x0001 (0x0001 - 0x0000)
struct FortOptionsMenu_NeedsVideoChangeConfirmation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortOptionsMenu_NeedsVideoChangeConfirmation) == 0x000001, "Wrong alignment on FortOptionsMenu_NeedsVideoChangeConfirmation");
static_assert(sizeof(FortOptionsMenu_NeedsVideoChangeConfirmation) == 0x000001, "Wrong size on FortOptionsMenu_NeedsVideoChangeConfirmation");
static_assert(offsetof(FortOptionsMenu_NeedsVideoChangeConfirmation, ReturnValue) == 0x000000, "Member 'FortOptionsMenu_NeedsVideoChangeConfirmation::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortOptionsMenu.ShowControllerOptions
// 0x0001 (0x0001 - 0x0000)
struct FortOptionsMenu_ShowControllerOptions final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortOptionsMenu_ShowControllerOptions) == 0x000001, "Wrong alignment on FortOptionsMenu_ShowControllerOptions");
static_assert(sizeof(FortOptionsMenu_ShowControllerOptions) == 0x000001, "Wrong size on FortOptionsMenu_ShowControllerOptions");
static_assert(offsetof(FortOptionsMenu_ShowControllerOptions, ReturnValue) == 0x000000, "Member 'FortOptionsMenu_ShowControllerOptions::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortOptionsMenu.ShowGameOptions
// 0x0001 (0x0001 - 0x0000)
struct FortOptionsMenu_ShowGameOptions final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortOptionsMenu_ShowGameOptions) == 0x000001, "Wrong alignment on FortOptionsMenu_ShowGameOptions");
static_assert(sizeof(FortOptionsMenu_ShowGameOptions) == 0x000001, "Wrong size on FortOptionsMenu_ShowGameOptions");
static_assert(offsetof(FortOptionsMenu_ShowGameOptions, ReturnValue) == 0x000000, "Member 'FortOptionsMenu_ShowGameOptions::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortOptionsMenu.ShowInputOptions
// 0x0001 (0x0001 - 0x0000)
struct FortOptionsMenu_ShowInputOptions final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortOptionsMenu_ShowInputOptions) == 0x000001, "Wrong alignment on FortOptionsMenu_ShowInputOptions");
static_assert(sizeof(FortOptionsMenu_ShowInputOptions) == 0x000001, "Wrong size on FortOptionsMenu_ShowInputOptions");
static_assert(offsetof(FortOptionsMenu_ShowInputOptions, ReturnValue) == 0x000000, "Member 'FortOptionsMenu_ShowInputOptions::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortOptionsMenu.ShowVideoOptions
// 0x0001 (0x0001 - 0x0000)
struct FortOptionsMenu_ShowVideoOptions final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortOptionsMenu_ShowVideoOptions) == 0x000001, "Wrong alignment on FortOptionsMenu_ShowVideoOptions");
static_assert(sizeof(FortOptionsMenu_ShowVideoOptions) == 0x000001, "Wrong size on FortOptionsMenu_ShowVideoOptions");
static_assert(offsetof(FortOptionsMenu_ShowVideoOptions, ReturnValue) == 0x000000, "Member 'FortOptionsMenu_ShowVideoOptions::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortCheatMenuFactory.AddGrantCheatMenu
// 0x0028 (0x0028 - 0x0000)
struct FortCheatMenuFactory_AddGrantCheatMenu final
{
public:
	class UCommonUserWidget*                      Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TemplateId;                                        // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InstanceId;                                        // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCheatMenuFactory_AddGrantCheatMenu) == 0x000008, "Wrong alignment on FortCheatMenuFactory_AddGrantCheatMenu");
static_assert(sizeof(FortCheatMenuFactory_AddGrantCheatMenu) == 0x000028, "Wrong size on FortCheatMenuFactory_AddGrantCheatMenu");
static_assert(offsetof(FortCheatMenuFactory_AddGrantCheatMenu, Widget) == 0x000000, "Member 'FortCheatMenuFactory_AddGrantCheatMenu::Widget' has a wrong offset!");
static_assert(offsetof(FortCheatMenuFactory_AddGrantCheatMenu, TemplateId) == 0x000008, "Member 'FortCheatMenuFactory_AddGrantCheatMenu::TemplateId' has a wrong offset!");
static_assert(offsetof(FortCheatMenuFactory_AddGrantCheatMenu, InstanceId) == 0x000018, "Member 'FortCheatMenuFactory_AddGrantCheatMenu::InstanceId' has a wrong offset!");

// Function FortniteUI.FortCheatMenuFactory.AddStoreCheatMenu
// 0x0008 (0x0008 - 0x0000)
struct FortCheatMenuFactory_AddStoreCheatMenu final
{
public:
	class UCommonUserWidget*                      Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCheatMenuFactory_AddStoreCheatMenu) == 0x000008, "Wrong alignment on FortCheatMenuFactory_AddStoreCheatMenu");
static_assert(sizeof(FortCheatMenuFactory_AddStoreCheatMenu) == 0x000008, "Wrong size on FortCheatMenuFactory_AddStoreCheatMenu");
static_assert(offsetof(FortCheatMenuFactory_AddStoreCheatMenu, Widget) == 0x000000, "Member 'FortCheatMenuFactory_AddStoreCheatMenu::Widget' has a wrong offset!");

// Function FortniteUI.FortCollectionBookGenericRewardWidget.OnRewardStatusChanged
// 0x0001 (0x0001 - 0x0000)
struct FortCollectionBookGenericRewardWidget_OnRewardStatusChanged final
{
public:
	ECollectionBookRewardStatus                   NewStatus;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookGenericRewardWidget_OnRewardStatusChanged) == 0x000001, "Wrong alignment on FortCollectionBookGenericRewardWidget_OnRewardStatusChanged");
static_assert(sizeof(FortCollectionBookGenericRewardWidget_OnRewardStatusChanged) == 0x000001, "Wrong size on FortCollectionBookGenericRewardWidget_OnRewardStatusChanged");
static_assert(offsetof(FortCollectionBookGenericRewardWidget_OnRewardStatusChanged, NewStatus) == 0x000000, "Member 'FortCollectionBookGenericRewardWidget_OnRewardStatusChanged::NewStatus' has a wrong offset!");

// Function FortniteUI.FortCollectionBookGenericRewardWidget.SetCurrentItemToDisplay
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookGenericRewardWidget_SetCurrentItemToDisplay final
{
public:
	class UFortItem*                              ItemToDisplay;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookGenericRewardWidget_SetCurrentItemToDisplay) == 0x000008, "Wrong alignment on FortCollectionBookGenericRewardWidget_SetCurrentItemToDisplay");
static_assert(sizeof(FortCollectionBookGenericRewardWidget_SetCurrentItemToDisplay) == 0x000008, "Wrong size on FortCollectionBookGenericRewardWidget_SetCurrentItemToDisplay");
static_assert(offsetof(FortCollectionBookGenericRewardWidget_SetCurrentItemToDisplay, ItemToDisplay) == 0x000000, "Member 'FortCollectionBookGenericRewardWidget_SetCurrentItemToDisplay::ItemToDisplay' has a wrong offset!");

// Function FortniteUI.FortCollectionBookGenericRewardWidget.SetRewards
// 0x0030 (0x0030 - 0x0000)
struct FortCollectionBookGenericRewardWidget_SetRewards final
{
public:
	struct FFortRewardInfo                        Rewards;                                           // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookGenericRewardWidget_SetRewards) == 0x000008, "Wrong alignment on FortCollectionBookGenericRewardWidget_SetRewards");
static_assert(sizeof(FortCollectionBookGenericRewardWidget_SetRewards) == 0x000030, "Wrong size on FortCollectionBookGenericRewardWidget_SetRewards");
static_assert(offsetof(FortCollectionBookGenericRewardWidget_SetRewards, Rewards) == 0x000000, "Member 'FortCollectionBookGenericRewardWidget_SetRewards::Rewards' has a wrong offset!");

// Function FortniteUI.FortCollectionBookGenericRewardWidget.SetRewardStatus
// 0x0001 (0x0001 - 0x0000)
struct FortCollectionBookGenericRewardWidget_SetRewardStatus final
{
public:
	ECollectionBookRewardStatus                   Status;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookGenericRewardWidget_SetRewardStatus) == 0x000001, "Wrong alignment on FortCollectionBookGenericRewardWidget_SetRewardStatus");
static_assert(sizeof(FortCollectionBookGenericRewardWidget_SetRewardStatus) == 0x000001, "Wrong size on FortCollectionBookGenericRewardWidget_SetRewardStatus");
static_assert(offsetof(FortCollectionBookGenericRewardWidget_SetRewardStatus, Status) == 0x000000, "Member 'FortCollectionBookGenericRewardWidget_SetRewardStatus::Status' has a wrong offset!");

// Function FortniteUI.FortCollectionBookGenericRewardWidget.GetRewardStatus
// 0x0001 (0x0001 - 0x0000)
struct FortCollectionBookGenericRewardWidget_GetRewardStatus final
{
public:
	ECollectionBookRewardStatus                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookGenericRewardWidget_GetRewardStatus) == 0x000001, "Wrong alignment on FortCollectionBookGenericRewardWidget_GetRewardStatus");
static_assert(sizeof(FortCollectionBookGenericRewardWidget_GetRewardStatus) == 0x000001, "Wrong size on FortCollectionBookGenericRewardWidget_GetRewardStatus");
static_assert(offsetof(FortCollectionBookGenericRewardWidget_GetRewardStatus, ReturnValue) == 0x000000, "Member 'FortCollectionBookGenericRewardWidget_GetRewardStatus::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortCollectionBookGenericRewardWidget.HasRewards
// 0x0001 (0x0001 - 0x0000)
struct FortCollectionBookGenericRewardWidget_HasRewards final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookGenericRewardWidget_HasRewards) == 0x000001, "Wrong alignment on FortCollectionBookGenericRewardWidget_HasRewards");
static_assert(sizeof(FortCollectionBookGenericRewardWidget_HasRewards) == 0x000001, "Wrong size on FortCollectionBookGenericRewardWidget_HasRewards");
static_assert(offsetof(FortCollectionBookGenericRewardWidget_HasRewards, ReturnValue) == 0x000000, "Member 'FortCollectionBookGenericRewardWidget_HasRewards::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemManagementInventoryPanel.AddItemStackToMulch
// 0x0010 (0x0010 - 0x0000)
struct FortItemManagementInventoryPanel_AddItemStackToMulch final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemManagementInventoryPanel_AddItemStackToMulch) == 0x000008, "Wrong alignment on FortItemManagementInventoryPanel_AddItemStackToMulch");
static_assert(sizeof(FortItemManagementInventoryPanel_AddItemStackToMulch) == 0x000010, "Wrong size on FortItemManagementInventoryPanel_AddItemStackToMulch");
static_assert(offsetof(FortItemManagementInventoryPanel_AddItemStackToMulch, Item) == 0x000000, "Member 'FortItemManagementInventoryPanel_AddItemStackToMulch::Item' has a wrong offset!");
static_assert(offsetof(FortItemManagementInventoryPanel_AddItemStackToMulch, Count) == 0x000008, "Member 'FortItemManagementInventoryPanel_AddItemStackToMulch::Count' has a wrong offset!");

// Function FortniteUI.FortItemManagementInventoryPanel.HandleCursorModeChanged
// 0x0018 (0x0018 - 0x0000)
struct FortItemManagementInventoryPanel_HandleCursorModeChanged final
{
public:
	bool                                          bCursorModeEnabled;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ActionName;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            CursorModeContentWidget;                           // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementInventoryPanel_HandleCursorModeChanged) == 0x000008, "Wrong alignment on FortItemManagementInventoryPanel_HandleCursorModeChanged");
static_assert(sizeof(FortItemManagementInventoryPanel_HandleCursorModeChanged) == 0x000018, "Wrong size on FortItemManagementInventoryPanel_HandleCursorModeChanged");
static_assert(offsetof(FortItemManagementInventoryPanel_HandleCursorModeChanged, bCursorModeEnabled) == 0x000000, "Member 'FortItemManagementInventoryPanel_HandleCursorModeChanged::bCursorModeEnabled' has a wrong offset!");
static_assert(offsetof(FortItemManagementInventoryPanel_HandleCursorModeChanged, ActionName) == 0x000008, "Member 'FortItemManagementInventoryPanel_HandleCursorModeChanged::ActionName' has a wrong offset!");
static_assert(offsetof(FortItemManagementInventoryPanel_HandleCursorModeChanged, CursorModeContentWidget) == 0x000010, "Member 'FortItemManagementInventoryPanel_HandleCursorModeChanged::CursorModeContentWidget' has a wrong offset!");

// Function FortniteUI.FortItemManagementInventoryPanel.HandleCursorModeChangedBP
// 0x0018 (0x0018 - 0x0000)
struct FortItemManagementInventoryPanel_HandleCursorModeChangedBP final
{
public:
	bool                                          bCursorModeEnabled;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ActionName;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            CursorModeContentWidget;                           // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementInventoryPanel_HandleCursorModeChangedBP) == 0x000008, "Wrong alignment on FortItemManagementInventoryPanel_HandleCursorModeChangedBP");
static_assert(sizeof(FortItemManagementInventoryPanel_HandleCursorModeChangedBP) == 0x000018, "Wrong size on FortItemManagementInventoryPanel_HandleCursorModeChangedBP");
static_assert(offsetof(FortItemManagementInventoryPanel_HandleCursorModeChangedBP, bCursorModeEnabled) == 0x000000, "Member 'FortItemManagementInventoryPanel_HandleCursorModeChangedBP::bCursorModeEnabled' has a wrong offset!");
static_assert(offsetof(FortItemManagementInventoryPanel_HandleCursorModeChangedBP, ActionName) == 0x000008, "Member 'FortItemManagementInventoryPanel_HandleCursorModeChangedBP::ActionName' has a wrong offset!");
static_assert(offsetof(FortItemManagementInventoryPanel_HandleCursorModeChangedBP, CursorModeContentWidget) == 0x000010, "Member 'FortItemManagementInventoryPanel_HandleCursorModeChangedBP::CursorModeContentWidget' has a wrong offset!");

// Function FortniteUI.FortItemManagementInventoryPanel.HandleFilterTabButtonCreated
// 0x0010 (0x0010 - 0x0000)
struct FortItemManagementInventoryPanel_HandleFilterTabButtonCreated final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonButton*                          TabButton;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementInventoryPanel_HandleFilterTabButtonCreated) == 0x000008, "Wrong alignment on FortItemManagementInventoryPanel_HandleFilterTabButtonCreated");
static_assert(sizeof(FortItemManagementInventoryPanel_HandleFilterTabButtonCreated) == 0x000010, "Wrong size on FortItemManagementInventoryPanel_HandleFilterTabButtonCreated");
static_assert(offsetof(FortItemManagementInventoryPanel_HandleFilterTabButtonCreated, TabNameID) == 0x000000, "Member 'FortItemManagementInventoryPanel_HandleFilterTabButtonCreated::TabNameID' has a wrong offset!");
static_assert(offsetof(FortItemManagementInventoryPanel_HandleFilterTabButtonCreated, TabButton) == 0x000008, "Member 'FortItemManagementInventoryPanel_HandleFilterTabButtonCreated::TabButton' has a wrong offset!");

// Function FortniteUI.FortItemManagementInventoryPanel.HandleFilterTabSelected
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementInventoryPanel_HandleFilterTabSelected final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementInventoryPanel_HandleFilterTabSelected) == 0x000004, "Wrong alignment on FortItemManagementInventoryPanel_HandleFilterTabSelected");
static_assert(sizeof(FortItemManagementInventoryPanel_HandleFilterTabSelected) == 0x000008, "Wrong size on FortItemManagementInventoryPanel_HandleFilterTabSelected");
static_assert(offsetof(FortItemManagementInventoryPanel_HandleFilterTabSelected, TabNameID) == 0x000000, "Member 'FortItemManagementInventoryPanel_HandleFilterTabSelected::TabNameID' has a wrong offset!");

// Function FortniteUI.FortItemManagementInventoryPanel.HandleInventoryItemClicked
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementInventoryPanel_HandleInventoryItemClicked final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementInventoryPanel_HandleInventoryItemClicked) == 0x000008, "Wrong alignment on FortItemManagementInventoryPanel_HandleInventoryItemClicked");
static_assert(sizeof(FortItemManagementInventoryPanel_HandleInventoryItemClicked) == 0x000008, "Wrong size on FortItemManagementInventoryPanel_HandleInventoryItemClicked");
static_assert(offsetof(FortItemManagementInventoryPanel_HandleInventoryItemClicked, Item) == 0x000000, "Member 'FortItemManagementInventoryPanel_HandleInventoryItemClicked::Item' has a wrong offset!");

// Function FortniteUI.FortItemManagementInventoryPanel.HandleInventoryItemDoubleClicked
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementInventoryPanel_HandleInventoryItemDoubleClicked final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementInventoryPanel_HandleInventoryItemDoubleClicked) == 0x000008, "Wrong alignment on FortItemManagementInventoryPanel_HandleInventoryItemDoubleClicked");
static_assert(sizeof(FortItemManagementInventoryPanel_HandleInventoryItemDoubleClicked) == 0x000008, "Wrong size on FortItemManagementInventoryPanel_HandleInventoryItemDoubleClicked");
static_assert(offsetof(FortItemManagementInventoryPanel_HandleInventoryItemDoubleClicked, Item) == 0x000000, "Member 'FortItemManagementInventoryPanel_HandleInventoryItemDoubleClicked::Item' has a wrong offset!");

// Function FortniteUI.FortItemManagementInventoryPanel.HandleInventoryItemHoverChanged
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementInventoryPanel_HandleInventoryItemHoverChanged final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementInventoryPanel_HandleInventoryItemHoverChanged) == 0x000008, "Wrong alignment on FortItemManagementInventoryPanel_HandleInventoryItemHoverChanged");
static_assert(sizeof(FortItemManagementInventoryPanel_HandleInventoryItemHoverChanged) == 0x000008, "Wrong size on FortItemManagementInventoryPanel_HandleInventoryItemHoverChanged");
static_assert(offsetof(FortItemManagementInventoryPanel_HandleInventoryItemHoverChanged, Item) == 0x000000, "Member 'FortItemManagementInventoryPanel_HandleInventoryItemHoverChanged::Item' has a wrong offset!");

// Function FortniteUI.FortItemManagementInventoryPanel.HandleInventoryItemSelected
// 0x0010 (0x0010 - 0x0000)
struct FortItemManagementInventoryPanel_HandleInventoryItemSelected final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSelected;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemManagementInventoryPanel_HandleInventoryItemSelected) == 0x000008, "Wrong alignment on FortItemManagementInventoryPanel_HandleInventoryItemSelected");
static_assert(sizeof(FortItemManagementInventoryPanel_HandleInventoryItemSelected) == 0x000010, "Wrong size on FortItemManagementInventoryPanel_HandleInventoryItemSelected");
static_assert(offsetof(FortItemManagementInventoryPanel_HandleInventoryItemSelected, Item) == 0x000000, "Member 'FortItemManagementInventoryPanel_HandleInventoryItemSelected::Item' has a wrong offset!");
static_assert(offsetof(FortItemManagementInventoryPanel_HandleInventoryItemSelected, bIsSelected) == 0x000008, "Member 'FortItemManagementInventoryPanel_HandleInventoryItemSelected::bIsSelected' has a wrong offset!");

// Function FortniteUI.FortItemManagementInventoryPanel.HandleItemWidgetCreated
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementInventoryPanel_HandleItemWidgetCreated final
{
public:
	class UUserWidget*                            ItemWidget;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementInventoryPanel_HandleItemWidgetCreated) == 0x000008, "Wrong alignment on FortItemManagementInventoryPanel_HandleItemWidgetCreated");
static_assert(sizeof(FortItemManagementInventoryPanel_HandleItemWidgetCreated) == 0x000008, "Wrong size on FortItemManagementInventoryPanel_HandleItemWidgetCreated");
static_assert(offsetof(FortItemManagementInventoryPanel_HandleItemWidgetCreated, ItemWidget) == 0x000000, "Member 'FortItemManagementInventoryPanel_HandleItemWidgetCreated::ItemWidget' has a wrong offset!");

// Function FortniteUI.FortItemManagementInventoryPanel.HandleQuickBarChangedBP
// 0x0001 (0x0001 - 0x0000)
struct FortItemManagementInventoryPanel_HandleQuickBarChangedBP final
{
public:
	EFortQuickBars                                QuickBarType;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementInventoryPanel_HandleQuickBarChangedBP) == 0x000001, "Wrong alignment on FortItemManagementInventoryPanel_HandleQuickBarChangedBP");
static_assert(sizeof(FortItemManagementInventoryPanel_HandleQuickBarChangedBP) == 0x000001, "Wrong size on FortItemManagementInventoryPanel_HandleQuickBarChangedBP");
static_assert(offsetof(FortItemManagementInventoryPanel_HandleQuickBarChangedBP, QuickBarType) == 0x000000, "Member 'FortItemManagementInventoryPanel_HandleQuickBarChangedBP::QuickBarType' has a wrong offset!");

// Function FortniteUI.FortItemManagementInventoryPanel.SetFilter
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementInventoryPanel_SetFilter final
{
public:
	class FName                                   FilterName;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementInventoryPanel_SetFilter) == 0x000004, "Wrong alignment on FortItemManagementInventoryPanel_SetFilter");
static_assert(sizeof(FortItemManagementInventoryPanel_SetFilter) == 0x000008, "Wrong size on FortItemManagementInventoryPanel_SetFilter");
static_assert(offsetof(FortItemManagementInventoryPanel_SetFilter, FilterName) == 0x000000, "Member 'FortItemManagementInventoryPanel_SetFilter::FilterName' has a wrong offset!");

// Function FortniteUI.FortItemManagementInventoryPanel.SetSortType
// 0x0001 (0x0001 - 0x0000)
struct FortItemManagementInventoryPanel_SetSortType final
{
public:
	EInventoryContentSortType                     SortType;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementInventoryPanel_SetSortType) == 0x000001, "Wrong alignment on FortItemManagementInventoryPanel_SetSortType");
static_assert(sizeof(FortItemManagementInventoryPanel_SetSortType) == 0x000001, "Wrong size on FortItemManagementInventoryPanel_SetSortType");
static_assert(offsetof(FortItemManagementInventoryPanel_SetSortType, SortType) == 0x000000, "Member 'FortItemManagementInventoryPanel_SetSortType::SortType' has a wrong offset!");

// Function FortniteUI.FortItemManagementInventoryPanel.GetQualifiedFilterDisplayName
// 0x0018 (0x0018 - 0x0000)
struct FortItemManagementInventoryPanel_GetQualifiedFilterDisplayName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementInventoryPanel_GetQualifiedFilterDisplayName) == 0x000008, "Wrong alignment on FortItemManagementInventoryPanel_GetQualifiedFilterDisplayName");
static_assert(sizeof(FortItemManagementInventoryPanel_GetQualifiedFilterDisplayName) == 0x000018, "Wrong size on FortItemManagementInventoryPanel_GetQualifiedFilterDisplayName");
static_assert(offsetof(FortItemManagementInventoryPanel_GetQualifiedFilterDisplayName, ReturnValue) == 0x000000, "Member 'FortItemManagementInventoryPanel_GetQualifiedFilterDisplayName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemManagementInventoryPanel.GetSupportedSortTypesForCurrentInventory
// 0x0010 (0x0010 - 0x0000)
struct FortItemManagementInventoryPanel_GetSupportedSortTypesForCurrentInventory final
{
public:
	TArray<EInventoryContentSortType>             ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementInventoryPanel_GetSupportedSortTypesForCurrentInventory) == 0x000008, "Wrong alignment on FortItemManagementInventoryPanel_GetSupportedSortTypesForCurrentInventory");
static_assert(sizeof(FortItemManagementInventoryPanel_GetSupportedSortTypesForCurrentInventory) == 0x000010, "Wrong size on FortItemManagementInventoryPanel_GetSupportedSortTypesForCurrentInventory");
static_assert(offsetof(FortItemManagementInventoryPanel_GetSupportedSortTypesForCurrentInventory, ReturnValue) == 0x000000, "Member 'FortItemManagementInventoryPanel_GetSupportedSortTypesForCurrentInventory::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemManagementInventoryPanel.GetUpgradeItemDefinitionsForCurrentInventory
// 0x0010 (0x0010 - 0x0000)
struct FortItemManagementInventoryPanel_GetUpgradeItemDefinitionsForCurrentInventory final
{
public:
	TArray<class UFortItemDefinition*>            ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementInventoryPanel_GetUpgradeItemDefinitionsForCurrentInventory) == 0x000008, "Wrong alignment on FortItemManagementInventoryPanel_GetUpgradeItemDefinitionsForCurrentInventory");
static_assert(sizeof(FortItemManagementInventoryPanel_GetUpgradeItemDefinitionsForCurrentInventory) == 0x000010, "Wrong size on FortItemManagementInventoryPanel_GetUpgradeItemDefinitionsForCurrentInventory");
static_assert(offsetof(FortItemManagementInventoryPanel_GetUpgradeItemDefinitionsForCurrentInventory, ReturnValue) == 0x000000, "Member 'FortItemManagementInventoryPanel_GetUpgradeItemDefinitionsForCurrentInventory::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemManagementInventoryPanel.IsSwitchPanelAvailable
// 0x0001 (0x0001 - 0x0000)
struct FortItemManagementInventoryPanel_IsSwitchPanelAvailable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementInventoryPanel_IsSwitchPanelAvailable) == 0x000001, "Wrong alignment on FortItemManagementInventoryPanel_IsSwitchPanelAvailable");
static_assert(sizeof(FortItemManagementInventoryPanel_IsSwitchPanelAvailable) == 0x000001, "Wrong size on FortItemManagementInventoryPanel_IsSwitchPanelAvailable");
static_assert(offsetof(FortItemManagementInventoryPanel_IsSwitchPanelAvailable, ReturnValue) == 0x000000, "Member 'FortItemManagementInventoryPanel_IsSwitchPanelAvailable::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortCollectionBookOverviewWidget.OnGetChildrenForPageCategory
// 0x0018 (0x0018 - 0x0000)
struct FortCollectionBookOverviewWidget_OnGetChildrenForPageCategory final
{
public:
	class UObject*                                CategoryObject;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UObject*>                        ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookOverviewWidget_OnGetChildrenForPageCategory) == 0x000008, "Wrong alignment on FortCollectionBookOverviewWidget_OnGetChildrenForPageCategory");
static_assert(sizeof(FortCollectionBookOverviewWidget_OnGetChildrenForPageCategory) == 0x000018, "Wrong size on FortCollectionBookOverviewWidget_OnGetChildrenForPageCategory");
static_assert(offsetof(FortCollectionBookOverviewWidget_OnGetChildrenForPageCategory, CategoryObject) == 0x000000, "Member 'FortCollectionBookOverviewWidget_OnGetChildrenForPageCategory::CategoryObject' has a wrong offset!");
static_assert(offsetof(FortCollectionBookOverviewWidget_OnGetChildrenForPageCategory, ReturnValue) == 0x000008, "Member 'FortCollectionBookOverviewWidget_OnGetChildrenForPageCategory::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortCollectionBookOverviewWidget.OnPageItemClicked
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookOverviewWidget_OnPageItemClicked final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookOverviewWidget_OnPageItemClicked) == 0x000008, "Wrong alignment on FortCollectionBookOverviewWidget_OnPageItemClicked");
static_assert(sizeof(FortCollectionBookOverviewWidget_OnPageItemClicked) == 0x000008, "Wrong size on FortCollectionBookOverviewWidget_OnPageItemClicked");
static_assert(offsetof(FortCollectionBookOverviewWidget_OnPageItemClicked, Item) == 0x000000, "Member 'FortCollectionBookOverviewWidget_OnPageItemClicked::Item' has a wrong offset!");

// Function FortniteUI.FortCollectionBookOverviewWidget.OnPageItemSelected
// 0x0010 (0x0010 - 0x0000)
struct FortCollectionBookOverviewWidget_OnPageItemSelected final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelected;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortCollectionBookOverviewWidget_OnPageItemSelected) == 0x000008, "Wrong alignment on FortCollectionBookOverviewWidget_OnPageItemSelected");
static_assert(sizeof(FortCollectionBookOverviewWidget_OnPageItemSelected) == 0x000010, "Wrong size on FortCollectionBookOverviewWidget_OnPageItemSelected");
static_assert(offsetof(FortCollectionBookOverviewWidget_OnPageItemSelected, Item) == 0x000000, "Member 'FortCollectionBookOverviewWidget_OnPageItemSelected::Item' has a wrong offset!");
static_assert(offsetof(FortCollectionBookOverviewWidget_OnPageItemSelected, bSelected) == 0x000008, "Member 'FortCollectionBookOverviewWidget_OnPageItemSelected::bSelected' has a wrong offset!");

// Function FortniteUI.FortItemQuantityListBase.AddListEntry
// 0x0008 (0x0008 - 0x0000)
struct FortItemQuantityListBase_AddListEntry final
{
public:
	class UFortItemQuantityListEntryBase*         ListEntry;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemQuantityListBase_AddListEntry) == 0x000008, "Wrong alignment on FortItemQuantityListBase_AddListEntry");
static_assert(sizeof(FortItemQuantityListBase_AddListEntry) == 0x000008, "Wrong size on FortItemQuantityListBase_AddListEntry");
static_assert(offsetof(FortItemQuantityListBase_AddListEntry, ListEntry) == 0x000000, "Member 'FortItemQuantityListBase_AddListEntry::ListEntry' has a wrong offset!");

// Function FortniteUI.FortItemQuantityListBase.GetItemDefinitions
// 0x0010 (0x0010 - 0x0000)
struct FortItemQuantityListBase_GetItemDefinitions final
{
public:
	TArray<class UFortItemDefinition*>            ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemQuantityListBase_GetItemDefinitions) == 0x000008, "Wrong alignment on FortItemQuantityListBase_GetItemDefinitions");
static_assert(sizeof(FortItemQuantityListBase_GetItemDefinitions) == 0x000010, "Wrong size on FortItemQuantityListBase_GetItemDefinitions");
static_assert(offsetof(FortItemQuantityListBase_GetItemDefinitions, ReturnValue) == 0x000000, "Member 'FortItemQuantityListBase_GetItemDefinitions::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemQuantityListBase.SetItemDefinitionsAndQuantities
// 0x0018 (0x0018 - 0x0000)
struct FortItemQuantityListBase_SetItemDefinitionsAndQuantities final
{
public:
	TArray<struct FFortItemQuantityPair>          ItemQuantityPairs;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ShouldResetWidgets;                                // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemQuantityListBase_SetItemDefinitionsAndQuantities) == 0x000008, "Wrong alignment on FortItemQuantityListBase_SetItemDefinitionsAndQuantities");
static_assert(sizeof(FortItemQuantityListBase_SetItemDefinitionsAndQuantities) == 0x000018, "Wrong size on FortItemQuantityListBase_SetItemDefinitionsAndQuantities");
static_assert(offsetof(FortItemQuantityListBase_SetItemDefinitionsAndQuantities, ItemQuantityPairs) == 0x000000, "Member 'FortItemQuantityListBase_SetItemDefinitionsAndQuantities::ItemQuantityPairs' has a wrong offset!");
static_assert(offsetof(FortItemQuantityListBase_SetItemDefinitionsAndQuantities, ShouldResetWidgets) == 0x000010, "Member 'FortItemQuantityListBase_SetItemDefinitionsAndQuantities::ShouldResetWidgets' has a wrong offset!");

// Function FortniteUI.FortItemQuantityListBase.SetItemInspectMode
// 0x0001 (0x0001 - 0x0000)
struct FortItemQuantityListBase_SetItemInspectMode final
{
public:
	EFortItemInspectionMode                       InspectMode;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemQuantityListBase_SetItemInspectMode) == 0x000001, "Wrong alignment on FortItemQuantityListBase_SetItemInspectMode");
static_assert(sizeof(FortItemQuantityListBase_SetItemInspectMode) == 0x000001, "Wrong size on FortItemQuantityListBase_SetItemInspectMode");
static_assert(offsetof(FortItemQuantityListBase_SetItemInspectMode, InspectMode) == 0x000000, "Member 'FortItemQuantityListBase_SetItemInspectMode::InspectMode' has a wrong offset!");

// Function FortniteUI.FortItemQuantityListBase.SetItemInstancesAndQuantities
// 0x0018 (0x0018 - 0x0000)
struct FortItemQuantityListBase_SetItemInstancesAndQuantities final
{
public:
	TArray<struct FFortItemInstanceQuantityPair>  ItemQuantityPairs;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ShouldResetWidgets;                                // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemQuantityListBase_SetItemInstancesAndQuantities) == 0x000008, "Wrong alignment on FortItemQuantityListBase_SetItemInstancesAndQuantities");
static_assert(sizeof(FortItemQuantityListBase_SetItemInstancesAndQuantities) == 0x000018, "Wrong size on FortItemQuantityListBase_SetItemInstancesAndQuantities");
static_assert(offsetof(FortItemQuantityListBase_SetItemInstancesAndQuantities, ItemQuantityPairs) == 0x000000, "Member 'FortItemQuantityListBase_SetItemInstancesAndQuantities::ItemQuantityPairs' has a wrong offset!");
static_assert(offsetof(FortItemQuantityListBase_SetItemInstancesAndQuantities, ShouldResetWidgets) == 0x000010, "Member 'FortItemQuantityListBase_SetItemInstancesAndQuantities::ShouldResetWidgets' has a wrong offset!");

// Function FortniteUI.FortItemQuantityListBase.SetItemToCompareDefinitionsAndQuantities
// 0x0010 (0x0010 - 0x0000)
struct FortItemQuantityListBase_SetItemToCompareDefinitionsAndQuantities final
{
public:
	TArray<struct FFortItemQuantityPair>          ItemToCompareQuantityPairs;                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemQuantityListBase_SetItemToCompareDefinitionsAndQuantities) == 0x000008, "Wrong alignment on FortItemQuantityListBase_SetItemToCompareDefinitionsAndQuantities");
static_assert(sizeof(FortItemQuantityListBase_SetItemToCompareDefinitionsAndQuantities) == 0x000010, "Wrong size on FortItemQuantityListBase_SetItemToCompareDefinitionsAndQuantities");
static_assert(offsetof(FortItemQuantityListBase_SetItemToCompareDefinitionsAndQuantities, ItemToCompareQuantityPairs) == 0x000000, "Member 'FortItemQuantityListBase_SetItemToCompareDefinitionsAndQuantities::ItemToCompareQuantityPairs' has a wrong offset!");

// Function FortniteUI.FortItemQuantityListBase.IsEmptyList
// 0x0001 (0x0001 - 0x0000)
struct FortItemQuantityListBase_IsEmptyList final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemQuantityListBase_IsEmptyList) == 0x000001, "Wrong alignment on FortItemQuantityListBase_IsEmptyList");
static_assert(sizeof(FortItemQuantityListBase_IsEmptyList) == 0x000001, "Wrong size on FortItemQuantityListBase_IsEmptyList");
static_assert(offsetof(FortItemQuantityListBase_IsEmptyList, ReturnValue) == 0x000000, "Member 'FortItemQuantityListBase_IsEmptyList::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortCollectionBookPageDetailsWidget.HandleRewardDetailsModalWidgetDeactivated
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookPageDetailsWidget_HandleRewardDetailsModalWidgetDeactivated final
{
public:
	class UCommonActivatablePanel*                DeactivatedPanel;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookPageDetailsWidget_HandleRewardDetailsModalWidgetDeactivated) == 0x000008, "Wrong alignment on FortCollectionBookPageDetailsWidget_HandleRewardDetailsModalWidgetDeactivated");
static_assert(sizeof(FortCollectionBookPageDetailsWidget_HandleRewardDetailsModalWidgetDeactivated) == 0x000008, "Wrong size on FortCollectionBookPageDetailsWidget_HandleRewardDetailsModalWidgetDeactivated");
static_assert(offsetof(FortCollectionBookPageDetailsWidget_HandleRewardDetailsModalWidgetDeactivated, DeactivatedPanel) == 0x000000, "Member 'FortCollectionBookPageDetailsWidget_HandleRewardDetailsModalWidgetDeactivated::DeactivatedPanel' has a wrong offset!");

// Function FortniteUI.FortCollectionBookPageDetailsWidget.OnDetailsPageChanged
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookPageDetailsWidget_OnDetailsPageChanged final
{
public:
	const class UFortCollectionBookPage*          InNewDetailsPage;                                  // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookPageDetailsWidget_OnDetailsPageChanged) == 0x000008, "Wrong alignment on FortCollectionBookPageDetailsWidget_OnDetailsPageChanged");
static_assert(sizeof(FortCollectionBookPageDetailsWidget_OnDetailsPageChanged) == 0x000008, "Wrong size on FortCollectionBookPageDetailsWidget_OnDetailsPageChanged");
static_assert(offsetof(FortCollectionBookPageDetailsWidget_OnDetailsPageChanged, InNewDetailsPage) == 0x000000, "Member 'FortCollectionBookPageDetailsWidget_OnDetailsPageChanged::InNewDetailsPage' has a wrong offset!");

// Function FortniteUI.FortCollectionBookPageDetailsWidget.OnPageProgressionUpdated
// 0x000C (0x000C - 0x0000)
struct FortCollectionBookPageDetailsWidget_OnPageProgressionUpdated final
{
public:
	int32                                         TotalFilledSlots;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalSlots;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortCollectionBookState                      State;                                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortCollectionBookPageDetailsWidget_OnPageProgressionUpdated) == 0x000004, "Wrong alignment on FortCollectionBookPageDetailsWidget_OnPageProgressionUpdated");
static_assert(sizeof(FortCollectionBookPageDetailsWidget_OnPageProgressionUpdated) == 0x00000C, "Wrong size on FortCollectionBookPageDetailsWidget_OnPageProgressionUpdated");
static_assert(offsetof(FortCollectionBookPageDetailsWidget_OnPageProgressionUpdated, TotalFilledSlots) == 0x000000, "Member 'FortCollectionBookPageDetailsWidget_OnPageProgressionUpdated::TotalFilledSlots' has a wrong offset!");
static_assert(offsetof(FortCollectionBookPageDetailsWidget_OnPageProgressionUpdated, TotalSlots) == 0x000004, "Member 'FortCollectionBookPageDetailsWidget_OnPageProgressionUpdated::TotalSlots' has a wrong offset!");
static_assert(offsetof(FortCollectionBookPageDetailsWidget_OnPageProgressionUpdated, State) == 0x000008, "Member 'FortCollectionBookPageDetailsWidget_OnPageProgressionUpdated::State' has a wrong offset!");

// Function FortniteUI.FortCollectionBookPageDetailsWidget.OnRewardDetailsButtonClicked
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookPageDetailsWidget_OnRewardDetailsButtonClicked final
{
public:
	class UCommonButton*                          ClickedButton;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookPageDetailsWidget_OnRewardDetailsButtonClicked) == 0x000008, "Wrong alignment on FortCollectionBookPageDetailsWidget_OnRewardDetailsButtonClicked");
static_assert(sizeof(FortCollectionBookPageDetailsWidget_OnRewardDetailsButtonClicked) == 0x000008, "Wrong size on FortCollectionBookPageDetailsWidget_OnRewardDetailsButtonClicked");
static_assert(offsetof(FortCollectionBookPageDetailsWidget_OnRewardDetailsButtonClicked, ClickedButton) == 0x000000, "Member 'FortCollectionBookPageDetailsWidget_OnRewardDetailsButtonClicked::ClickedButton' has a wrong offset!");

// Function FortniteUI.FortCollectionBookPageDetailsWidget.OnSlotItemComplete
// 0x0010 (0x0010 - 0x0000)
struct FortCollectionBookPageDetailsWidget_OnSlotItemComplete final
{
public:
	const class UFortAccountItem*                 SlottedItem;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SlotId;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookPageDetailsWidget_OnSlotItemComplete) == 0x000008, "Wrong alignment on FortCollectionBookPageDetailsWidget_OnSlotItemComplete");
static_assert(sizeof(FortCollectionBookPageDetailsWidget_OnSlotItemComplete) == 0x000010, "Wrong size on FortCollectionBookPageDetailsWidget_OnSlotItemComplete");
static_assert(offsetof(FortCollectionBookPageDetailsWidget_OnSlotItemComplete, SlottedItem) == 0x000000, "Member 'FortCollectionBookPageDetailsWidget_OnSlotItemComplete::SlottedItem' has a wrong offset!");
static_assert(offsetof(FortCollectionBookPageDetailsWidget_OnSlotItemComplete, SlotId) == 0x000008, "Member 'FortCollectionBookPageDetailsWidget_OnSlotItemComplete::SlotId' has a wrong offset!");

// Function FortniteUI.FortCollectionBookPageListWidget.OnExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct FortCollectionBookPageListWidget_OnExpansionChanged final
{
public:
	bool                                          bExpanded;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookPageListWidget_OnExpansionChanged) == 0x000001, "Wrong alignment on FortCollectionBookPageListWidget_OnExpansionChanged");
static_assert(sizeof(FortCollectionBookPageListWidget_OnExpansionChanged) == 0x000001, "Wrong size on FortCollectionBookPageListWidget_OnExpansionChanged");
static_assert(offsetof(FortCollectionBookPageListWidget_OnExpansionChanged, bExpanded) == 0x000000, "Member 'FortCollectionBookPageListWidget_OnExpansionChanged::bExpanded' has a wrong offset!");

// Function FortniteUI.FortCollectionBookPageListWidget.OnPageDetailsUpdated
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookPageListWidget_OnPageDetailsUpdated final
{
public:
	int32                                         NumAvailableSlots;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortCollectionBookState                      State;                                             // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortCollectionBookPageListWidget_OnPageDetailsUpdated) == 0x000004, "Wrong alignment on FortCollectionBookPageListWidget_OnPageDetailsUpdated");
static_assert(sizeof(FortCollectionBookPageListWidget_OnPageDetailsUpdated) == 0x000008, "Wrong size on FortCollectionBookPageListWidget_OnPageDetailsUpdated");
static_assert(offsetof(FortCollectionBookPageListWidget_OnPageDetailsUpdated, NumAvailableSlots) == 0x000000, "Member 'FortCollectionBookPageListWidget_OnPageDetailsUpdated::NumAvailableSlots' has a wrong offset!");
static_assert(offsetof(FortCollectionBookPageListWidget_OnPageDetailsUpdated, State) == 0x000004, "Member 'FortCollectionBookPageListWidget_OnPageDetailsUpdated::State' has a wrong offset!");

// Function FortniteUI.FortCollectionBookPageListWidget.OnSlotItemComplete
// 0x0010 (0x0010 - 0x0000)
struct FortCollectionBookPageListWidget_OnSlotItemComplete final
{
public:
	const class UFortAccountItem*                 SlottedItem;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SlotId;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookPageListWidget_OnSlotItemComplete) == 0x000008, "Wrong alignment on FortCollectionBookPageListWidget_OnSlotItemComplete");
static_assert(sizeof(FortCollectionBookPageListWidget_OnSlotItemComplete) == 0x000010, "Wrong size on FortCollectionBookPageListWidget_OnSlotItemComplete");
static_assert(offsetof(FortCollectionBookPageListWidget_OnSlotItemComplete, SlottedItem) == 0x000000, "Member 'FortCollectionBookPageListWidget_OnSlotItemComplete::SlottedItem' has a wrong offset!");
static_assert(offsetof(FortCollectionBookPageListWidget_OnSlotItemComplete, SlotId) == 0x000008, "Member 'FortCollectionBookPageListWidget_OnSlotItemComplete::SlotId' has a wrong offset!");

// Function FortniteUI.FortCollectionBookPageListWidget.SetupAsCategory
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookPageListWidget_SetupAsCategory final
{
public:
	class UFortCollectionBookCategory*            Category;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookPageListWidget_SetupAsCategory) == 0x000008, "Wrong alignment on FortCollectionBookPageListWidget_SetupAsCategory");
static_assert(sizeof(FortCollectionBookPageListWidget_SetupAsCategory) == 0x000008, "Wrong size on FortCollectionBookPageListWidget_SetupAsCategory");
static_assert(offsetof(FortCollectionBookPageListWidget_SetupAsCategory, Category) == 0x000000, "Member 'FortCollectionBookPageListWidget_SetupAsCategory::Category' has a wrong offset!");

// Function FortniteUI.FortCollectionBookPageListWidget.SetupAsPage
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookPageListWidget_SetupAsPage final
{
public:
	class UFortCollectionBookPage*                Page;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookPageListWidget_SetupAsPage) == 0x000008, "Wrong alignment on FortCollectionBookPageListWidget_SetupAsPage");
static_assert(sizeof(FortCollectionBookPageListWidget_SetupAsPage) == 0x000008, "Wrong size on FortCollectionBookPageListWidget_SetupAsPage");
static_assert(offsetof(FortCollectionBookPageListWidget_SetupAsPage, Page) == 0x000000, "Member 'FortCollectionBookPageListWidget_SetupAsPage::Page' has a wrong offset!");

// DelegateFunction FortniteUI.FortCollectionBookPicker.OnSlotItemConfirmed__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct FortCollectionBookPicker_OnSlotItemConfirmed__DelegateSignature final
{
public:
	class UFortItem*                              ItemToSlot;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SlotId;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortDialogExternalLatentActionHandle  LatentActionHandle;                                // 0x0010(0x0004)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortCollectionBookPicker_OnSlotItemConfirmed__DelegateSignature) == 0x000008, "Wrong alignment on FortCollectionBookPicker_OnSlotItemConfirmed__DelegateSignature");
static_assert(sizeof(FortCollectionBookPicker_OnSlotItemConfirmed__DelegateSignature) == 0x000018, "Wrong size on FortCollectionBookPicker_OnSlotItemConfirmed__DelegateSignature");
static_assert(offsetof(FortCollectionBookPicker_OnSlotItemConfirmed__DelegateSignature, ItemToSlot) == 0x000000, "Member 'FortCollectionBookPicker_OnSlotItemConfirmed__DelegateSignature::ItemToSlot' has a wrong offset!");
static_assert(offsetof(FortCollectionBookPicker_OnSlotItemConfirmed__DelegateSignature, SlotId) == 0x000008, "Member 'FortCollectionBookPicker_OnSlotItemConfirmed__DelegateSignature::SlotId' has a wrong offset!");
static_assert(offsetof(FortCollectionBookPicker_OnSlotItemConfirmed__DelegateSignature, LatentActionHandle) == 0x000010, "Member 'FortCollectionBookPicker_OnSlotItemConfirmed__DelegateSignature::LatentActionHandle' has a wrong offset!");

// Function FortniteUI.FortCollectionBookPicker.SlotItemConfirmationComplete
// 0x0010 (0x0010 - 0x0000)
struct FortCollectionBookPicker_SlotItemConfirmationComplete final
{
public:
	class UFortItem*                              CommittedItem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortDialogExternalLatentActionHandle  LatentActionHandle;                                // 0x0008(0x0004)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortCollectionBookPicker_SlotItemConfirmationComplete) == 0x000008, "Wrong alignment on FortCollectionBookPicker_SlotItemConfirmationComplete");
static_assert(sizeof(FortCollectionBookPicker_SlotItemConfirmationComplete) == 0x000010, "Wrong size on FortCollectionBookPicker_SlotItemConfirmationComplete");
static_assert(offsetof(FortCollectionBookPicker_SlotItemConfirmationComplete, CommittedItem) == 0x000000, "Member 'FortCollectionBookPicker_SlotItemConfirmationComplete::CommittedItem' has a wrong offset!");
static_assert(offsetof(FortCollectionBookPicker_SlotItemConfirmationComplete, LatentActionHandle) == 0x000008, "Member 'FortCollectionBookPicker_SlotItemConfirmationComplete::LatentActionHandle' has a wrong offset!");

// Function FortniteUI.FortCollectionBookPicker.GetCurrentSlottedItem
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookPicker_GetCurrentSlottedItem final
{
public:
	class UFortAccountItem*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookPicker_GetCurrentSlottedItem) == 0x000008, "Wrong alignment on FortCollectionBookPicker_GetCurrentSlottedItem");
static_assert(sizeof(FortCollectionBookPicker_GetCurrentSlottedItem) == 0x000008, "Wrong size on FortCollectionBookPicker_GetCurrentSlottedItem");
static_assert(offsetof(FortCollectionBookPicker_GetCurrentSlottedItem, ReturnValue) == 0x000000, "Member 'FortCollectionBookPicker_GetCurrentSlottedItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortCollectionBookPrimaryPanel.HandleSectionTileClicked
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookPrimaryPanel_HandleSectionTileClicked final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookPrimaryPanel_HandleSectionTileClicked) == 0x000008, "Wrong alignment on FortCollectionBookPrimaryPanel_HandleSectionTileClicked");
static_assert(sizeof(FortCollectionBookPrimaryPanel_HandleSectionTileClicked) == 0x000008, "Wrong size on FortCollectionBookPrimaryPanel_HandleSectionTileClicked");
static_assert(offsetof(FortCollectionBookPrimaryPanel_HandleSectionTileClicked, Item) == 0x000000, "Member 'FortCollectionBookPrimaryPanel_HandleSectionTileClicked::Item' has a wrong offset!");

// Function FortniteUI.FortCollectionBookPrimaryPanel.OnBackActionExecuted
// 0x0001 (0x0001 - 0x0000)
struct FortCollectionBookPrimaryPanel_OnBackActionExecuted final
{
public:
	bool                                          bPassThrough;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookPrimaryPanel_OnBackActionExecuted) == 0x000001, "Wrong alignment on FortCollectionBookPrimaryPanel_OnBackActionExecuted");
static_assert(sizeof(FortCollectionBookPrimaryPanel_OnBackActionExecuted) == 0x000001, "Wrong size on FortCollectionBookPrimaryPanel_OnBackActionExecuted");
static_assert(offsetof(FortCollectionBookPrimaryPanel_OnBackActionExecuted, bPassThrough) == 0x000000, "Member 'FortCollectionBookPrimaryPanel_OnBackActionExecuted::bPassThrough' has a wrong offset!");

// Function FortniteUI.FortCollectionBookPrimaryPanel.OnCollectionBookPageClicked
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookPrimaryPanel_OnCollectionBookPageClicked final
{
public:
	const class UFortCollectionBookPage*          ClickedPage;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookPrimaryPanel_OnCollectionBookPageClicked) == 0x000008, "Wrong alignment on FortCollectionBookPrimaryPanel_OnCollectionBookPageClicked");
static_assert(sizeof(FortCollectionBookPrimaryPanel_OnCollectionBookPageClicked) == 0x000008, "Wrong size on FortCollectionBookPrimaryPanel_OnCollectionBookPageClicked");
static_assert(offsetof(FortCollectionBookPrimaryPanel_OnCollectionBookPageClicked, ClickedPage) == 0x000000, "Member 'FortCollectionBookPrimaryPanel_OnCollectionBookPageClicked::ClickedPage' has a wrong offset!");

// Function FortniteUI.FortCollectionBookPrimaryPanel.OnCollectionBookPageSelected
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookPrimaryPanel_OnCollectionBookPageSelected final
{
public:
	const class UFortCollectionBookPage*          SelectedPage;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookPrimaryPanel_OnCollectionBookPageSelected) == 0x000008, "Wrong alignment on FortCollectionBookPrimaryPanel_OnCollectionBookPageSelected");
static_assert(sizeof(FortCollectionBookPrimaryPanel_OnCollectionBookPageSelected) == 0x000008, "Wrong size on FortCollectionBookPrimaryPanel_OnCollectionBookPageSelected");
static_assert(offsetof(FortCollectionBookPrimaryPanel_OnCollectionBookPageSelected, SelectedPage) == 0x000000, "Member 'FortCollectionBookPrimaryPanel_OnCollectionBookPageSelected::SelectedPage' has a wrong offset!");

// Function FortniteUI.FortCollectionBookPrimaryPanel.OnCollectionBookSectionClicked
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookPrimaryPanel_OnCollectionBookSectionClicked final
{
public:
	const class UFortCollectionBookSection*       ClickedSection;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookPrimaryPanel_OnCollectionBookSectionClicked) == 0x000008, "Wrong alignment on FortCollectionBookPrimaryPanel_OnCollectionBookSectionClicked");
static_assert(sizeof(FortCollectionBookPrimaryPanel_OnCollectionBookSectionClicked) == 0x000008, "Wrong size on FortCollectionBookPrimaryPanel_OnCollectionBookSectionClicked");
static_assert(offsetof(FortCollectionBookPrimaryPanel_OnCollectionBookSectionClicked, ClickedSection) == 0x000000, "Member 'FortCollectionBookPrimaryPanel_OnCollectionBookSectionClicked::ClickedSection' has a wrong offset!");

// Function FortniteUI.FortCollectionBookPrimaryPanel.OnInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct FortCollectionBookPrimaryPanel_OnInputMethodChanged final
{
public:
	bool                                          bUsingGamepad;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookPrimaryPanel_OnInputMethodChanged) == 0x000001, "Wrong alignment on FortCollectionBookPrimaryPanel_OnInputMethodChanged");
static_assert(sizeof(FortCollectionBookPrimaryPanel_OnInputMethodChanged) == 0x000001, "Wrong size on FortCollectionBookPrimaryPanel_OnInputMethodChanged");
static_assert(offsetof(FortCollectionBookPrimaryPanel_OnInputMethodChanged, bUsingGamepad) == 0x000000, "Member 'FortCollectionBookPrimaryPanel_OnInputMethodChanged::bUsingGamepad' has a wrong offset!");

// Function FortniteUI.FortCollectionBookPrimaryPanel.OnSummonInfoPanelExecuted
// 0x0001 (0x0001 - 0x0000)
struct FortCollectionBookPrimaryPanel_OnSummonInfoPanelExecuted final
{
public:
	bool                                          bPassThrough;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookPrimaryPanel_OnSummonInfoPanelExecuted) == 0x000001, "Wrong alignment on FortCollectionBookPrimaryPanel_OnSummonInfoPanelExecuted");
static_assert(sizeof(FortCollectionBookPrimaryPanel_OnSummonInfoPanelExecuted) == 0x000001, "Wrong size on FortCollectionBookPrimaryPanel_OnSummonInfoPanelExecuted");
static_assert(offsetof(FortCollectionBookPrimaryPanel_OnSummonInfoPanelExecuted, bPassThrough) == 0x000000, "Member 'FortCollectionBookPrimaryPanel_OnSummonInfoPanelExecuted::bPassThrough' has a wrong offset!");

// Function FortniteUI.FortItemInspectionScreen.GetCycleWidget
// 0x0008 (0x0008 - 0x0000)
struct FortItemInspectionScreen_GetCycleWidget final
{
public:
	class UFortItemInspectCycleWidget*            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemInspectionScreen_GetCycleWidget) == 0x000008, "Wrong alignment on FortItemInspectionScreen_GetCycleWidget");
static_assert(sizeof(FortItemInspectionScreen_GetCycleWidget) == 0x000008, "Wrong size on FortItemInspectionScreen_GetCycleWidget");
static_assert(offsetof(FortItemInspectionScreen_GetCycleWidget, ReturnValue) == 0x000000, "Member 'FortItemInspectionScreen_GetCycleWidget::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemInspectionScreen.OpenItemInspect
// 0x0010 (0x0010 - 0x0000)
struct FortItemInspectionScreen_OpenItemInspect final
{
public:
	class UFortItem*                              ItemToInspect;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortItemInspectionMode                       Mode;                                              // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShouldAllowUpgrading;                              // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShouldAllowEvolution;                              // 0x000A(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShouldAllowFavorite;                               // 0x000B(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsTemporaryItem;                                   // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowRarityUpgrading;                             // 0x000D(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemInspectionScreen_OpenItemInspect) == 0x000008, "Wrong alignment on FortItemInspectionScreen_OpenItemInspect");
static_assert(sizeof(FortItemInspectionScreen_OpenItemInspect) == 0x000010, "Wrong size on FortItemInspectionScreen_OpenItemInspect");
static_assert(offsetof(FortItemInspectionScreen_OpenItemInspect, ItemToInspect) == 0x000000, "Member 'FortItemInspectionScreen_OpenItemInspect::ItemToInspect' has a wrong offset!");
static_assert(offsetof(FortItemInspectionScreen_OpenItemInspect, Mode) == 0x000008, "Member 'FortItemInspectionScreen_OpenItemInspect::Mode' has a wrong offset!");
static_assert(offsetof(FortItemInspectionScreen_OpenItemInspect, ShouldAllowUpgrading) == 0x000009, "Member 'FortItemInspectionScreen_OpenItemInspect::ShouldAllowUpgrading' has a wrong offset!");
static_assert(offsetof(FortItemInspectionScreen_OpenItemInspect, ShouldAllowEvolution) == 0x00000A, "Member 'FortItemInspectionScreen_OpenItemInspect::ShouldAllowEvolution' has a wrong offset!");
static_assert(offsetof(FortItemInspectionScreen_OpenItemInspect, ShouldAllowFavorite) == 0x00000B, "Member 'FortItemInspectionScreen_OpenItemInspect::ShouldAllowFavorite' has a wrong offset!");
static_assert(offsetof(FortItemInspectionScreen_OpenItemInspect, IsTemporaryItem) == 0x00000C, "Member 'FortItemInspectionScreen_OpenItemInspect::IsTemporaryItem' has a wrong offset!");
static_assert(offsetof(FortItemInspectionScreen_OpenItemInspect, bAllowRarityUpgrading) == 0x00000D, "Member 'FortItemInspectionScreen_OpenItemInspect::bAllowRarityUpgrading' has a wrong offset!");

// Function FortniteUI.FortCollectionBookProgressionRewardDetailInspectWidget.SetAssociatedLevel
// 0x0004 (0x0004 - 0x0000)
struct FortCollectionBookProgressionRewardDetailInspectWidget_SetAssociatedLevel final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookProgressionRewardDetailInspectWidget_SetAssociatedLevel) == 0x000004, "Wrong alignment on FortCollectionBookProgressionRewardDetailInspectWidget_SetAssociatedLevel");
static_assert(sizeof(FortCollectionBookProgressionRewardDetailInspectWidget_SetAssociatedLevel) == 0x000004, "Wrong size on FortCollectionBookProgressionRewardDetailInspectWidget_SetAssociatedLevel");
static_assert(offsetof(FortCollectionBookProgressionRewardDetailInspectWidget_SetAssociatedLevel, Level) == 0x000000, "Member 'FortCollectionBookProgressionRewardDetailInspectWidget_SetAssociatedLevel::Level' has a wrong offset!");

// Function FortniteUI.FortCollectionBookProgressionRewardsModalWidget.InspectItemBP
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookProgressionRewardsModalWidget_InspectItemBP final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookProgressionRewardsModalWidget_InspectItemBP) == 0x000008, "Wrong alignment on FortCollectionBookProgressionRewardsModalWidget_InspectItemBP");
static_assert(sizeof(FortCollectionBookProgressionRewardsModalWidget_InspectItemBP) == 0x000008, "Wrong size on FortCollectionBookProgressionRewardsModalWidget_InspectItemBP");
static_assert(offsetof(FortCollectionBookProgressionRewardsModalWidget_InspectItemBP, Item) == 0x000000, "Member 'FortCollectionBookProgressionRewardsModalWidget_InspectItemBP::Item' has a wrong offset!");

// Function FortniteUI.FortCollectionBookProgressionRewardsModalWidget.OnInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct FortCollectionBookProgressionRewardsModalWidget_OnInputMethodChanged final
{
public:
	bool                                          bUsingGamepad;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookProgressionRewardsModalWidget_OnInputMethodChanged) == 0x000001, "Wrong alignment on FortCollectionBookProgressionRewardsModalWidget_OnInputMethodChanged");
static_assert(sizeof(FortCollectionBookProgressionRewardsModalWidget_OnInputMethodChanged) == 0x000001, "Wrong size on FortCollectionBookProgressionRewardsModalWidget_OnInputMethodChanged");
static_assert(offsetof(FortCollectionBookProgressionRewardsModalWidget_OnInputMethodChanged, bUsingGamepad) == 0x000000, "Member 'FortCollectionBookProgressionRewardsModalWidget_OnInputMethodChanged::bUsingGamepad' has a wrong offset!");

// Function FortniteUI.FortCollectionBookProgressionRewardsModalWidget.OnLevelProgressionSet
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookProgressionRewardsModalWidget_OnLevelProgressionSet final
{
public:
	int32                                         CurrentLevel;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NextLvlPct;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookProgressionRewardsModalWidget_OnLevelProgressionSet) == 0x000004, "Wrong alignment on FortCollectionBookProgressionRewardsModalWidget_OnLevelProgressionSet");
static_assert(sizeof(FortCollectionBookProgressionRewardsModalWidget_OnLevelProgressionSet) == 0x000008, "Wrong size on FortCollectionBookProgressionRewardsModalWidget_OnLevelProgressionSet");
static_assert(offsetof(FortCollectionBookProgressionRewardsModalWidget_OnLevelProgressionSet, CurrentLevel) == 0x000000, "Member 'FortCollectionBookProgressionRewardsModalWidget_OnLevelProgressionSet::CurrentLevel' has a wrong offset!");
static_assert(offsetof(FortCollectionBookProgressionRewardsModalWidget_OnLevelProgressionSet, NextLvlPct) == 0x000004, "Member 'FortCollectionBookProgressionRewardsModalWidget_OnLevelProgressionSet::NextLvlPct' has a wrong offset!");

// Function FortniteUI.FortCollectionBookProgressionRewardsModalWidget.OnSelectedButtonChanged
// 0x0010 (0x0010 - 0x0000)
struct FortCollectionBookProgressionRewardsModalWidget_OnSelectedButtonChanged final
{
public:
	class UCommonButton*                          SelectedButton;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ButtonIndex;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortCollectionBookProgressionRewardsModalWidget_OnSelectedButtonChanged) == 0x000008, "Wrong alignment on FortCollectionBookProgressionRewardsModalWidget_OnSelectedButtonChanged");
static_assert(sizeof(FortCollectionBookProgressionRewardsModalWidget_OnSelectedButtonChanged) == 0x000010, "Wrong size on FortCollectionBookProgressionRewardsModalWidget_OnSelectedButtonChanged");
static_assert(offsetof(FortCollectionBookProgressionRewardsModalWidget_OnSelectedButtonChanged, SelectedButton) == 0x000000, "Member 'FortCollectionBookProgressionRewardsModalWidget_OnSelectedButtonChanged::SelectedButton' has a wrong offset!");
static_assert(offsetof(FortCollectionBookProgressionRewardsModalWidget_OnSelectedButtonChanged, ButtonIndex) == 0x000008, "Member 'FortCollectionBookProgressionRewardsModalWidget_OnSelectedButtonChanged::ButtonIndex' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.CanRequestPopupMenuForSelectedItem
// 0x0001 (0x0001 - 0x0000)
struct FortItemManagementScreen_CanRequestPopupMenuForSelectedItem final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_CanRequestPopupMenuForSelectedItem) == 0x000001, "Wrong alignment on FortItemManagementScreen_CanRequestPopupMenuForSelectedItem");
static_assert(sizeof(FortItemManagementScreen_CanRequestPopupMenuForSelectedItem) == 0x000001, "Wrong size on FortItemManagementScreen_CanRequestPopupMenuForSelectedItem");
static_assert(offsetof(FortItemManagementScreen_CanRequestPopupMenuForSelectedItem, ReturnValue) == 0x000000, "Member 'FortItemManagementScreen_CanRequestPopupMenuForSelectedItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.ConsumeItem
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementScreen_ConsumeItem final
{
public:
	class UFortConsumableAccountItem*             ConsumableItem;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_ConsumeItem) == 0x000008, "Wrong alignment on FortItemManagementScreen_ConsumeItem");
static_assert(sizeof(FortItemManagementScreen_ConsumeItem) == 0x000008, "Wrong size on FortItemManagementScreen_ConsumeItem");
static_assert(offsetof(FortItemManagementScreen_ConsumeItem, ConsumableItem) == 0x000000, "Member 'FortItemManagementScreen_ConsumeItem::ConsumableItem' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.CraftItem
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementScreen_CraftItem final
{
public:
	class UFortSchematicItem*                     SchematicItem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_CraftItem) == 0x000008, "Wrong alignment on FortItemManagementScreen_CraftItem");
static_assert(sizeof(FortItemManagementScreen_CraftItem) == 0x000008, "Wrong size on FortItemManagementScreen_CraftItem");
static_assert(offsetof(FortItemManagementScreen_CraftItem, SchematicItem) == 0x000000, "Member 'FortItemManagementScreen_CraftItem::SchematicItem' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.DropItem
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementScreen_DropItem final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_DropItem) == 0x000008, "Wrong alignment on FortItemManagementScreen_DropItem");
static_assert(sizeof(FortItemManagementScreen_DropItem) == 0x000008, "Wrong size on FortItemManagementScreen_DropItem");
static_assert(offsetof(FortItemManagementScreen_DropItem, Item) == 0x000000, "Member 'FortItemManagementScreen_DropItem::Item' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.EnterComparisonMode
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementScreen_EnterComparisonMode final
{
public:
	class UFortItem*                              ItemToCompareDetailsWith;                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_EnterComparisonMode) == 0x000008, "Wrong alignment on FortItemManagementScreen_EnterComparisonMode");
static_assert(sizeof(FortItemManagementScreen_EnterComparisonMode) == 0x000008, "Wrong size on FortItemManagementScreen_EnterComparisonMode");
static_assert(offsetof(FortItemManagementScreen_EnterComparisonMode, ItemToCompareDetailsWith) == 0x000000, "Member 'FortItemManagementScreen_EnterComparisonMode::ItemToCompareDetailsWith' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.EnterDetailsMode
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementScreen_EnterDetailsMode final
{
public:
	class UFortItem*                              Param_ItemToDetail;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_EnterDetailsMode) == 0x000008, "Wrong alignment on FortItemManagementScreen_EnterDetailsMode");
static_assert(sizeof(FortItemManagementScreen_EnterDetailsMode) == 0x000008, "Wrong size on FortItemManagementScreen_EnterDetailsMode");
static_assert(offsetof(FortItemManagementScreen_EnterDetailsMode, Param_ItemToDetail) == 0x000000, "Member 'FortItemManagementScreen_EnterDetailsMode::Param_ItemToDetail' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.EnterMulchMode
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementScreen_EnterMulchMode final
{
public:
	class UFortItem*                              ItemToMulch;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_EnterMulchMode) == 0x000008, "Wrong alignment on FortItemManagementScreen_EnterMulchMode");
static_assert(sizeof(FortItemManagementScreen_EnterMulchMode) == 0x000008, "Wrong size on FortItemManagementScreen_EnterMulchMode");
static_assert(offsetof(FortItemManagementScreen_EnterMulchMode, ItemToMulch) == 0x000000, "Member 'FortItemManagementScreen_EnterMulchMode::ItemToMulch' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.EquipItem
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementScreen_EquipItem final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_EquipItem) == 0x000008, "Wrong alignment on FortItemManagementScreen_EquipItem");
static_assert(sizeof(FortItemManagementScreen_EquipItem) == 0x000008, "Wrong size on FortItemManagementScreen_EquipItem");
static_assert(offsetof(FortItemManagementScreen_EquipItem, Item) == 0x000000, "Member 'FortItemManagementScreen_EquipItem::Item' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.HandleConsumeItemBP
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementScreen_HandleConsumeItemBP final
{
public:
	class UFortConsumableAccountItem*             ConsumableItem;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_HandleConsumeItemBP) == 0x000008, "Wrong alignment on FortItemManagementScreen_HandleConsumeItemBP");
static_assert(sizeof(FortItemManagementScreen_HandleConsumeItemBP) == 0x000008, "Wrong size on FortItemManagementScreen_HandleConsumeItemBP");
static_assert(offsetof(FortItemManagementScreen_HandleConsumeItemBP, ConsumableItem) == 0x000000, "Member 'FortItemManagementScreen_HandleConsumeItemBP::ConsumableItem' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.HandleCraftItemBP
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementScreen_HandleCraftItemBP final
{
public:
	class UFortSchematicItem*                     SchematicItem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_HandleCraftItemBP) == 0x000008, "Wrong alignment on FortItemManagementScreen_HandleCraftItemBP");
static_assert(sizeof(FortItemManagementScreen_HandleCraftItemBP) == 0x000008, "Wrong size on FortItemManagementScreen_HandleCraftItemBP");
static_assert(offsetof(FortItemManagementScreen_HandleCraftItemBP, SchematicItem) == 0x000000, "Member 'FortItemManagementScreen_HandleCraftItemBP::SchematicItem' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.HandleDropItemBP
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementScreen_HandleDropItemBP final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_HandleDropItemBP) == 0x000008, "Wrong alignment on FortItemManagementScreen_HandleDropItemBP");
static_assert(sizeof(FortItemManagementScreen_HandleDropItemBP) == 0x000008, "Wrong size on FortItemManagementScreen_HandleDropItemBP");
static_assert(offsetof(FortItemManagementScreen_HandleDropItemBP, Item) == 0x000000, "Member 'FortItemManagementScreen_HandleDropItemBP::Item' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.HandleEquipItemBP
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementScreen_HandleEquipItemBP final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_HandleEquipItemBP) == 0x000008, "Wrong alignment on FortItemManagementScreen_HandleEquipItemBP");
static_assert(sizeof(FortItemManagementScreen_HandleEquipItemBP) == 0x000008, "Wrong size on FortItemManagementScreen_HandleEquipItemBP");
static_assert(offsetof(FortItemManagementScreen_HandleEquipItemBP, Item) == 0x000000, "Member 'FortItemManagementScreen_HandleEquipItemBP::Item' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.HandleInspectItemBP
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementScreen_HandleInspectItemBP final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_HandleInspectItemBP) == 0x000008, "Wrong alignment on FortItemManagementScreen_HandleInspectItemBP");
static_assert(sizeof(FortItemManagementScreen_HandleInspectItemBP) == 0x000008, "Wrong size on FortItemManagementScreen_HandleInspectItemBP");
static_assert(offsetof(FortItemManagementScreen_HandleInspectItemBP, Item) == 0x000000, "Member 'FortItemManagementScreen_HandleInspectItemBP::Item' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.HandleItemToCompareWithChanged
// 0x0003 (0x0003 - 0x0000)
struct FortItemManagementScreen_HandleItemToCompareWithChanged final
{
public:
	bool                                          bItemChanged;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAmmoChanged;                                      // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIngredientsChanged;                               // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_HandleItemToCompareWithChanged) == 0x000001, "Wrong alignment on FortItemManagementScreen_HandleItemToCompareWithChanged");
static_assert(sizeof(FortItemManagementScreen_HandleItemToCompareWithChanged) == 0x000003, "Wrong size on FortItemManagementScreen_HandleItemToCompareWithChanged");
static_assert(offsetof(FortItemManagementScreen_HandleItemToCompareWithChanged, bItemChanged) == 0x000000, "Member 'FortItemManagementScreen_HandleItemToCompareWithChanged::bItemChanged' has a wrong offset!");
static_assert(offsetof(FortItemManagementScreen_HandleItemToCompareWithChanged, bAmmoChanged) == 0x000001, "Member 'FortItemManagementScreen_HandleItemToCompareWithChanged::bAmmoChanged' has a wrong offset!");
static_assert(offsetof(FortItemManagementScreen_HandleItemToCompareWithChanged, bIngredientsChanged) == 0x000002, "Member 'FortItemManagementScreen_HandleItemToCompareWithChanged::bIngredientsChanged' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.HandleItemToDetailChanged
// 0x0003 (0x0003 - 0x0000)
struct FortItemManagementScreen_HandleItemToDetailChanged final
{
public:
	bool                                          bItemChanged;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAmmoChanged;                                      // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIngredientsChanged;                               // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_HandleItemToDetailChanged) == 0x000001, "Wrong alignment on FortItemManagementScreen_HandleItemToDetailChanged");
static_assert(sizeof(FortItemManagementScreen_HandleItemToDetailChanged) == 0x000003, "Wrong size on FortItemManagementScreen_HandleItemToDetailChanged");
static_assert(offsetof(FortItemManagementScreen_HandleItemToDetailChanged, bItemChanged) == 0x000000, "Member 'FortItemManagementScreen_HandleItemToDetailChanged::bItemChanged' has a wrong offset!");
static_assert(offsetof(FortItemManagementScreen_HandleItemToDetailChanged, bAmmoChanged) == 0x000001, "Member 'FortItemManagementScreen_HandleItemToDetailChanged::bAmmoChanged' has a wrong offset!");
static_assert(offsetof(FortItemManagementScreen_HandleItemToDetailChanged, bIngredientsChanged) == 0x000002, "Member 'FortItemManagementScreen_HandleItemToDetailChanged::bIngredientsChanged' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.HandleMulchQuantitySelection
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementScreen_HandleMulchQuantitySelection final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_HandleMulchQuantitySelection) == 0x000008, "Wrong alignment on FortItemManagementScreen_HandleMulchQuantitySelection");
static_assert(sizeof(FortItemManagementScreen_HandleMulchQuantitySelection) == 0x000008, "Wrong size on FortItemManagementScreen_HandleMulchQuantitySelection");
static_assert(offsetof(FortItemManagementScreen_HandleMulchQuantitySelection, Item) == 0x000000, "Member 'FortItemManagementScreen_HandleMulchQuantitySelection::Item' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.HandleTransferItemBP
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementScreen_HandleTransferItemBP final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_HandleTransferItemBP) == 0x000008, "Wrong alignment on FortItemManagementScreen_HandleTransferItemBP");
static_assert(sizeof(FortItemManagementScreen_HandleTransferItemBP) == 0x000008, "Wrong size on FortItemManagementScreen_HandleTransferItemBP");
static_assert(offsetof(FortItemManagementScreen_HandleTransferItemBP, Item) == 0x000000, "Member 'FortItemManagementScreen_HandleTransferItemBP::Item' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.InspectItem
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementScreen_InspectItem final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_InspectItem) == 0x000008, "Wrong alignment on FortItemManagementScreen_InspectItem");
static_assert(sizeof(FortItemManagementScreen_InspectItem) == 0x000008, "Wrong size on FortItemManagementScreen_InspectItem");
static_assert(offsetof(FortItemManagementScreen_InspectItem, Item) == 0x000000, "Member 'FortItemManagementScreen_InspectItem::Item' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.SetConsumeItemRequestInProgress
// 0x0001 (0x0001 - 0x0000)
struct FortItemManagementScreen_SetConsumeItemRequestInProgress final
{
public:
	bool                                          InProgress;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_SetConsumeItemRequestInProgress) == 0x000001, "Wrong alignment on FortItemManagementScreen_SetConsumeItemRequestInProgress");
static_assert(sizeof(FortItemManagementScreen_SetConsumeItemRequestInProgress) == 0x000001, "Wrong size on FortItemManagementScreen_SetConsumeItemRequestInProgress");
static_assert(offsetof(FortItemManagementScreen_SetConsumeItemRequestInProgress, InProgress) == 0x000000, "Member 'FortItemManagementScreen_SetConsumeItemRequestInProgress::InProgress' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.SetFrontendInventoryFilter
// 0x0001 (0x0001 - 0x0000)
struct FortItemManagementScreen_SetFrontendInventoryFilter final
{
public:
	EFortFrontendInventoryFilter                  Param_FrontendInventoryFilter;                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_SetFrontendInventoryFilter) == 0x000001, "Wrong alignment on FortItemManagementScreen_SetFrontendInventoryFilter");
static_assert(sizeof(FortItemManagementScreen_SetFrontendInventoryFilter) == 0x000001, "Wrong size on FortItemManagementScreen_SetFrontendInventoryFilter");
static_assert(offsetof(FortItemManagementScreen_SetFrontendInventoryFilter, Param_FrontendInventoryFilter) == 0x000000, "Member 'FortItemManagementScreen_SetFrontendInventoryFilter::Param_FrontendInventoryFilter' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.TransferItem
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementScreen_TransferItem final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_TransferItem) == 0x000008, "Wrong alignment on FortItemManagementScreen_TransferItem");
static_assert(sizeof(FortItemManagementScreen_TransferItem) == 0x000008, "Wrong size on FortItemManagementScreen_TransferItem");
static_assert(offsetof(FortItemManagementScreen_TransferItem, Item) == 0x000000, "Member 'FortItemManagementScreen_TransferItem::Item' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.CanItemBeMulched
// 0x0028 (0x0028 - 0x0000)
struct FortItemManagementScreen_CanItemBeMulched final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   OutRestrictionReason;                              // 0x0008(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemManagementScreen_CanItemBeMulched) == 0x000008, "Wrong alignment on FortItemManagementScreen_CanItemBeMulched");
static_assert(sizeof(FortItemManagementScreen_CanItemBeMulched) == 0x000028, "Wrong size on FortItemManagementScreen_CanItemBeMulched");
static_assert(offsetof(FortItemManagementScreen_CanItemBeMulched, Item) == 0x000000, "Member 'FortItemManagementScreen_CanItemBeMulched::Item' has a wrong offset!");
static_assert(offsetof(FortItemManagementScreen_CanItemBeMulched, OutRestrictionReason) == 0x000008, "Member 'FortItemManagementScreen_CanItemBeMulched::OutRestrictionReason' has a wrong offset!");
static_assert(offsetof(FortItemManagementScreen_CanItemBeMulched, ReturnValue) == 0x000020, "Member 'FortItemManagementScreen_CanItemBeMulched::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.GetItemsToMulchBP
// 0x0010 (0x0010 - 0x0000)
struct FortItemManagementScreen_GetItemsToMulchBP final
{
public:
	TArray<class UFortItem*>                      ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_GetItemsToMulchBP) == 0x000008, "Wrong alignment on FortItemManagementScreen_GetItemsToMulchBP");
static_assert(sizeof(FortItemManagementScreen_GetItemsToMulchBP) == 0x000010, "Wrong size on FortItemManagementScreen_GetItemsToMulchBP");
static_assert(offsetof(FortItemManagementScreen_GetItemsToMulchBP, ReturnValue) == 0x000000, "Member 'FortItemManagementScreen_GetItemsToMulchBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.GetItemToCompareDetailsWith
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementScreen_GetItemToCompareDetailsWith final
{
public:
	class UFortItem*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_GetItemToCompareDetailsWith) == 0x000008, "Wrong alignment on FortItemManagementScreen_GetItemToCompareDetailsWith");
static_assert(sizeof(FortItemManagementScreen_GetItemToCompareDetailsWith) == 0x000008, "Wrong size on FortItemManagementScreen_GetItemToCompareDetailsWith");
static_assert(offsetof(FortItemManagementScreen_GetItemToCompareDetailsWith, ReturnValue) == 0x000000, "Member 'FortItemManagementScreen_GetItemToCompareDetailsWith::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.GetItemToDetail
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementScreen_GetItemToDetail final
{
public:
	class UFortItem*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_GetItemToDetail) == 0x000008, "Wrong alignment on FortItemManagementScreen_GetItemToDetail");
static_assert(sizeof(FortItemManagementScreen_GetItemToDetail) == 0x000008, "Wrong size on FortItemManagementScreen_GetItemToDetail");
static_assert(offsetof(FortItemManagementScreen_GetItemToDetail, ReturnValue) == 0x000000, "Member 'FortItemManagementScreen_GetItemToDetail::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.GetNumItemsToMulch
// 0x0004 (0x0004 - 0x0000)
struct FortItemManagementScreen_GetNumItemsToMulch final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementScreen_GetNumItemsToMulch) == 0x000004, "Wrong alignment on FortItemManagementScreen_GetNumItemsToMulch");
static_assert(sizeof(FortItemManagementScreen_GetNumItemsToMulch) == 0x000004, "Wrong size on FortItemManagementScreen_GetNumItemsToMulch");
static_assert(offsetof(FortItemManagementScreen_GetNumItemsToMulch, ReturnValue) == 0x000000, "Member 'FortItemManagementScreen_GetNumItemsToMulch::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemManagementScreen.HasItemBeenSeen
// 0x0010 (0x0010 - 0x0000)
struct FortItemManagementScreen_HasItemBeenSeen final
{
public:
	class UFortAccountItem*                       AccountItem;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemManagementScreen_HasItemBeenSeen) == 0x000008, "Wrong alignment on FortItemManagementScreen_HasItemBeenSeen");
static_assert(sizeof(FortItemManagementScreen_HasItemBeenSeen) == 0x000010, "Wrong size on FortItemManagementScreen_HasItemBeenSeen");
static_assert(offsetof(FortItemManagementScreen_HasItemBeenSeen, AccountItem) == 0x000000, "Member 'FortItemManagementScreen_HasItemBeenSeen::AccountItem' has a wrong offset!");
static_assert(offsetof(FortItemManagementScreen_HasItemBeenSeen, ReturnValue) == 0x000008, "Member 'FortItemManagementScreen_HasItemBeenSeen::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortCollectionBookProgressionRewardWidget.SetAssociatedLevel
// 0x0004 (0x0004 - 0x0000)
struct FortCollectionBookProgressionRewardWidget_SetAssociatedLevel final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookProgressionRewardWidget_SetAssociatedLevel) == 0x000004, "Wrong alignment on FortCollectionBookProgressionRewardWidget_SetAssociatedLevel");
static_assert(sizeof(FortCollectionBookProgressionRewardWidget_SetAssociatedLevel) == 0x000004, "Wrong size on FortCollectionBookProgressionRewardWidget_SetAssociatedLevel");
static_assert(offsetof(FortCollectionBookProgressionRewardWidget_SetAssociatedLevel, Level) == 0x000000, "Member 'FortCollectionBookProgressionRewardWidget_SetAssociatedLevel::Level' has a wrong offset!");

// Function FortniteUI.FortKeybindWidget.SetBoundAction
// 0x0008 (0x0008 - 0x0000)
struct FortKeybindWidget_SetBoundAction final
{
public:
	class FName                                   NewBoundAction;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortKeybindWidget_SetBoundAction) == 0x000004, "Wrong alignment on FortKeybindWidget_SetBoundAction");
static_assert(sizeof(FortKeybindWidget_SetBoundAction) == 0x000008, "Wrong size on FortKeybindWidget_SetBoundAction");
static_assert(offsetof(FortKeybindWidget_SetBoundAction, NewBoundAction) == 0x000000, "Member 'FortKeybindWidget_SetBoundAction::NewBoundAction' has a wrong offset!");

// Function FortniteUI.FortKeybindWidget.SetForcedHoldKeybind
// 0x0001 (0x0001 - 0x0000)
struct FortKeybindWidget_SetForcedHoldKeybind final
{
public:
	bool                                          InForcedHoldKeybind;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortKeybindWidget_SetForcedHoldKeybind) == 0x000001, "Wrong alignment on FortKeybindWidget_SetForcedHoldKeybind");
static_assert(sizeof(FortKeybindWidget_SetForcedHoldKeybind) == 0x000001, "Wrong size on FortKeybindWidget_SetForcedHoldKeybind");
static_assert(offsetof(FortKeybindWidget_SetForcedHoldKeybind, InForcedHoldKeybind) == 0x000000, "Member 'FortKeybindWidget_SetForcedHoldKeybind::InForcedHoldKeybind' has a wrong offset!");

// Function FortniteUI.FortKeybindWidget.SetForcedHoldKeybindStatus
// 0x0001 (0x0001 - 0x0000)
struct FortKeybindWidget_SetForcedHoldKeybindStatus final
{
public:
	EFortKeybindForcedHoldStatus                  InForcedHoldKeybindStatus;                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortKeybindWidget_SetForcedHoldKeybindStatus) == 0x000001, "Wrong alignment on FortKeybindWidget_SetForcedHoldKeybindStatus");
static_assert(sizeof(FortKeybindWidget_SetForcedHoldKeybindStatus) == 0x000001, "Wrong size on FortKeybindWidget_SetForcedHoldKeybindStatus");
static_assert(offsetof(FortKeybindWidget_SetForcedHoldKeybindStatus, InForcedHoldKeybindStatus) == 0x000000, "Member 'FortKeybindWidget_SetForcedHoldKeybindStatus::InForcedHoldKeybindStatus' has a wrong offset!");

// Function FortniteUI.FortKeybindWidget.SetShowProgressCountDown
// 0x0001 (0x0001 - 0x0000)
struct FortKeybindWidget_SetShowProgressCountDown final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortKeybindWidget_SetShowProgressCountDown) == 0x000001, "Wrong alignment on FortKeybindWidget_SetShowProgressCountDown");
static_assert(sizeof(FortKeybindWidget_SetShowProgressCountDown) == 0x000001, "Wrong size on FortKeybindWidget_SetShowProgressCountDown");
static_assert(offsetof(FortKeybindWidget_SetShowProgressCountDown, bShow) == 0x000000, "Member 'FortKeybindWidget_SetShowProgressCountDown::bShow' has a wrong offset!");

// Function FortniteUI.FortKeybindWidget.StartHoldProgress
// 0x0010 (0x0010 - 0x0000)
struct FortKeybindWidget_StartHoldProgress final
{
public:
	class FName                                   HoldActionName;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HoldDuration;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortKeybindWidget_StartHoldProgress) == 0x000004, "Wrong alignment on FortKeybindWidget_StartHoldProgress");
static_assert(sizeof(FortKeybindWidget_StartHoldProgress) == 0x000010, "Wrong size on FortKeybindWidget_StartHoldProgress");
static_assert(offsetof(FortKeybindWidget_StartHoldProgress, HoldActionName) == 0x000000, "Member 'FortKeybindWidget_StartHoldProgress::HoldActionName' has a wrong offset!");
static_assert(offsetof(FortKeybindWidget_StartHoldProgress, HoldDuration) == 0x000008, "Member 'FortKeybindWidget_StartHoldProgress::HoldDuration' has a wrong offset!");

// Function FortniteUI.FortKeybindWidget.StopHoldProgress
// 0x0010 (0x0010 - 0x0000)
struct FortKeybindWidget_StopHoldProgress final
{
public:
	class FName                                   HoldActionName;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCompletedSuccessfully;                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortKeybindWidget_StopHoldProgress) == 0x000004, "Wrong alignment on FortKeybindWidget_StopHoldProgress");
static_assert(sizeof(FortKeybindWidget_StopHoldProgress) == 0x000010, "Wrong size on FortKeybindWidget_StopHoldProgress");
static_assert(offsetof(FortKeybindWidget_StopHoldProgress, HoldActionName) == 0x000000, "Member 'FortKeybindWidget_StopHoldProgress::HoldActionName' has a wrong offset!");
static_assert(offsetof(FortKeybindWidget_StopHoldProgress, bCompletedSuccessfully) == 0x000008, "Member 'FortKeybindWidget_StopHoldProgress::bCompletedSuccessfully' has a wrong offset!");

// Function FortniteUI.FortKeybindWidget.GetBrushForKey
// 0x0088 (0x0088 - 0x0000)
struct FortKeybindWidget_GetBrushForKey final
{
public:
	EFortBrushSize                                BrushSize;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            Brush;                                             // 0x0008(0x0078)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortKeybindWidget_GetBrushForKey) == 0x000008, "Wrong alignment on FortKeybindWidget_GetBrushForKey");
static_assert(sizeof(FortKeybindWidget_GetBrushForKey) == 0x000088, "Wrong size on FortKeybindWidget_GetBrushForKey");
static_assert(offsetof(FortKeybindWidget_GetBrushForKey, BrushSize) == 0x000000, "Member 'FortKeybindWidget_GetBrushForKey::BrushSize' has a wrong offset!");
static_assert(offsetof(FortKeybindWidget_GetBrushForKey, Brush) == 0x000008, "Member 'FortKeybindWidget_GetBrushForKey::Brush' has a wrong offset!");
static_assert(offsetof(FortKeybindWidget_GetBrushForKey, ReturnValue) == 0x000080, "Member 'FortKeybindWidget_GetBrushForKey::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortKeybindWidget.IsHoldKeybind
// 0x0001 (0x0001 - 0x0000)
struct FortKeybindWidget_IsHoldKeybind final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortKeybindWidget_IsHoldKeybind) == 0x000001, "Wrong alignment on FortKeybindWidget_IsHoldKeybind");
static_assert(sizeof(FortKeybindWidget_IsHoldKeybind) == 0x000001, "Wrong size on FortKeybindWidget_IsHoldKeybind");
static_assert(offsetof(FortKeybindWidget_IsHoldKeybind, ReturnValue) == 0x000000, "Member 'FortKeybindWidget_IsHoldKeybind::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortCollectionBookProgressWidget.HandleDetailsModalWidgetDeactivated
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookProgressWidget_HandleDetailsModalWidgetDeactivated final
{
public:
	class UCommonActivatablePanel*                DeactivatedPanel;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookProgressWidget_HandleDetailsModalWidgetDeactivated) == 0x000008, "Wrong alignment on FortCollectionBookProgressWidget_HandleDetailsModalWidgetDeactivated");
static_assert(sizeof(FortCollectionBookProgressWidget_HandleDetailsModalWidgetDeactivated) == 0x000008, "Wrong size on FortCollectionBookProgressWidget_HandleDetailsModalWidgetDeactivated");
static_assert(offsetof(FortCollectionBookProgressWidget_HandleDetailsModalWidgetDeactivated, DeactivatedPanel) == 0x000000, "Member 'FortCollectionBookProgressWidget_HandleDetailsModalWidgetDeactivated::DeactivatedPanel' has a wrong offset!");

// Function FortniteUI.FortCollectionBookProgressWidget.OnCollectionBookLevelChanged
// 0x0004 (0x0004 - 0x0000)
struct FortCollectionBookProgressWidget_OnCollectionBookLevelChanged final
{
public:
	int32                                         NewLevel;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookProgressWidget_OnCollectionBookLevelChanged) == 0x000004, "Wrong alignment on FortCollectionBookProgressWidget_OnCollectionBookLevelChanged");
static_assert(sizeof(FortCollectionBookProgressWidget_OnCollectionBookLevelChanged) == 0x000004, "Wrong size on FortCollectionBookProgressWidget_OnCollectionBookLevelChanged");
static_assert(offsetof(FortCollectionBookProgressWidget_OnCollectionBookLevelChanged, NewLevel) == 0x000000, "Member 'FortCollectionBookProgressWidget_OnCollectionBookLevelChanged::NewLevel' has a wrong offset!");

// Function FortniteUI.FortCollectionBookProgressWidget.OnCollectionBookLevelProgressionChanged
// 0x0004 (0x0004 - 0x0000)
struct FortCollectionBookProgressWidget_OnCollectionBookLevelProgressionChanged final
{
public:
	float                                         NewCompletionPct;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookProgressWidget_OnCollectionBookLevelProgressionChanged) == 0x000004, "Wrong alignment on FortCollectionBookProgressWidget_OnCollectionBookLevelProgressionChanged");
static_assert(sizeof(FortCollectionBookProgressWidget_OnCollectionBookLevelProgressionChanged) == 0x000004, "Wrong size on FortCollectionBookProgressWidget_OnCollectionBookLevelProgressionChanged");
static_assert(offsetof(FortCollectionBookProgressWidget_OnCollectionBookLevelProgressionChanged, NewCompletionPct) == 0x000000, "Member 'FortCollectionBookProgressWidget_OnCollectionBookLevelProgressionChanged::NewCompletionPct' has a wrong offset!");

// Function FortniteUI.FortCollectionBookProgressWidget.OnCollectionBookPageSelected
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookProgressWidget_OnCollectionBookPageSelected final
{
public:
	const class UFortCollectionBookPage*          SelectedPage;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookProgressWidget_OnCollectionBookPageSelected) == 0x000008, "Wrong alignment on FortCollectionBookProgressWidget_OnCollectionBookPageSelected");
static_assert(sizeof(FortCollectionBookProgressWidget_OnCollectionBookPageSelected) == 0x000008, "Wrong size on FortCollectionBookProgressWidget_OnCollectionBookPageSelected");
static_assert(offsetof(FortCollectionBookProgressWidget_OnCollectionBookPageSelected, SelectedPage) == 0x000000, "Member 'FortCollectionBookProgressWidget_OnCollectionBookPageSelected::SelectedPage' has a wrong offset!");

// Function FortniteUI.FortCollectionBookProgressWidget.OnCollectionBookPreviewXPChange
// 0x0004 (0x0004 - 0x0000)
struct FortCollectionBookProgressWidget_OnCollectionBookPreviewXPChange final
{
public:
	float                                         PreviewCompletionPct;                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookProgressWidget_OnCollectionBookPreviewXPChange) == 0x000004, "Wrong alignment on FortCollectionBookProgressWidget_OnCollectionBookPreviewXPChange");
static_assert(sizeof(FortCollectionBookProgressWidget_OnCollectionBookPreviewXPChange) == 0x000004, "Wrong size on FortCollectionBookProgressWidget_OnCollectionBookPreviewXPChange");
static_assert(offsetof(FortCollectionBookProgressWidget_OnCollectionBookPreviewXPChange, PreviewCompletionPct) == 0x000000, "Member 'FortCollectionBookProgressWidget_OnCollectionBookPreviewXPChange::PreviewCompletionPct' has a wrong offset!");

// Function FortniteUI.FortCollectionBookProgressWidget.OnDetailsButtonClicked
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookProgressWidget_OnDetailsButtonClicked final
{
public:
	class UCommonButton*                          ClickedButton;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookProgressWidget_OnDetailsButtonClicked) == 0x000008, "Wrong alignment on FortCollectionBookProgressWidget_OnDetailsButtonClicked");
static_assert(sizeof(FortCollectionBookProgressWidget_OnDetailsButtonClicked) == 0x000008, "Wrong size on FortCollectionBookProgressWidget_OnDetailsButtonClicked");
static_assert(offsetof(FortCollectionBookProgressWidget_OnDetailsButtonClicked, ClickedButton) == 0x000000, "Member 'FortCollectionBookProgressWidget_OnDetailsButtonClicked::ClickedButton' has a wrong offset!");

// Function FortniteUI.FortCollectionBookProgressWidget.OnSlottedItemOperationComplete
// 0x0010 (0x0010 - 0x0000)
struct FortCollectionBookProgressWidget_OnSlottedItemOperationComplete final
{
public:
	const class UFortAccountItem*                 ItemSlotted;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SlotId;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookProgressWidget_OnSlottedItemOperationComplete) == 0x000008, "Wrong alignment on FortCollectionBookProgressWidget_OnSlottedItemOperationComplete");
static_assert(sizeof(FortCollectionBookProgressWidget_OnSlottedItemOperationComplete) == 0x000010, "Wrong size on FortCollectionBookProgressWidget_OnSlottedItemOperationComplete");
static_assert(offsetof(FortCollectionBookProgressWidget_OnSlottedItemOperationComplete, ItemSlotted) == 0x000000, "Member 'FortCollectionBookProgressWidget_OnSlottedItemOperationComplete::ItemSlotted' has a wrong offset!");
static_assert(offsetof(FortCollectionBookProgressWidget_OnSlottedItemOperationComplete, SlotId) == 0x000008, "Member 'FortCollectionBookProgressWidget_OnSlottedItemOperationComplete::SlotId' has a wrong offset!");

// Function FortniteUI.FortCollectionBookRecycleSlotResultsWidget.SetCurrentItemToRecycle
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookRecycleSlotResultsWidget_SetCurrentItemToRecycle final
{
public:
	class UFortAccountItem*                       InItemToRecycle;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookRecycleSlotResultsWidget_SetCurrentItemToRecycle) == 0x000008, "Wrong alignment on FortCollectionBookRecycleSlotResultsWidget_SetCurrentItemToRecycle");
static_assert(sizeof(FortCollectionBookRecycleSlotResultsWidget_SetCurrentItemToRecycle) == 0x000008, "Wrong size on FortCollectionBookRecycleSlotResultsWidget_SetCurrentItemToRecycle");
static_assert(offsetof(FortCollectionBookRecycleSlotResultsWidget_SetCurrentItemToRecycle, InItemToRecycle) == 0x000000, "Member 'FortCollectionBookRecycleSlotResultsWidget_SetCurrentItemToRecycle::InItemToRecycle' has a wrong offset!");

// DelegateFunction FortniteUI.FortCollectionBookRewardCardWidget.OnDisplayedItemChangedEvent__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookRewardCardWidget_OnDisplayedItemChangedEvent__DelegateSignature final
{
public:
	class UFortItem*                              DisplayedItem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookRewardCardWidget_OnDisplayedItemChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on FortCollectionBookRewardCardWidget_OnDisplayedItemChangedEvent__DelegateSignature");
static_assert(sizeof(FortCollectionBookRewardCardWidget_OnDisplayedItemChangedEvent__DelegateSignature) == 0x000008, "Wrong size on FortCollectionBookRewardCardWidget_OnDisplayedItemChangedEvent__DelegateSignature");
static_assert(offsetof(FortCollectionBookRewardCardWidget_OnDisplayedItemChangedEvent__DelegateSignature, DisplayedItem) == 0x000000, "Member 'FortCollectionBookRewardCardWidget_OnDisplayedItemChangedEvent__DelegateSignature::DisplayedItem' has a wrong offset!");

// Function FortniteUI.FortCollectionBookRewardCardWidget.SetRewards
// 0x0030 (0x0030 - 0x0000)
struct FortCollectionBookRewardCardWidget_SetRewards final
{
public:
	struct FFortRewardInfo                        Rewards;                                           // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookRewardCardWidget_SetRewards) == 0x000008, "Wrong alignment on FortCollectionBookRewardCardWidget_SetRewards");
static_assert(sizeof(FortCollectionBookRewardCardWidget_SetRewards) == 0x000030, "Wrong size on FortCollectionBookRewardCardWidget_SetRewards");
static_assert(offsetof(FortCollectionBookRewardCardWidget_SetRewards, Rewards) == 0x000000, "Member 'FortCollectionBookRewardCardWidget_SetRewards::Rewards' has a wrong offset!");

// Function FortniteUI.FortCollectionBookRewardCardWidget.HasRewards
// 0x0001 (0x0001 - 0x0000)
struct FortCollectionBookRewardCardWidget_HasRewards final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookRewardCardWidget_HasRewards) == 0x000001, "Wrong alignment on FortCollectionBookRewardCardWidget_HasRewards");
static_assert(sizeof(FortCollectionBookRewardCardWidget_HasRewards) == 0x000001, "Wrong size on FortCollectionBookRewardCardWidget_HasRewards");
static_assert(offsetof(FortCollectionBookRewardCardWidget_HasRewards, ReturnValue) == 0x000000, "Member 'FortCollectionBookRewardCardWidget_HasRewards::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemManagementModeDetailsPanel.GetItemManagementMode
// 0x0001 (0x0001 - 0x0000)
struct FortItemManagementModeDetailsPanel_GetItemManagementMode final
{
public:
	EFortItemManagementMode                       ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementModeDetailsPanel_GetItemManagementMode) == 0x000001, "Wrong alignment on FortItemManagementModeDetailsPanel_GetItemManagementMode");
static_assert(sizeof(FortItemManagementModeDetailsPanel_GetItemManagementMode) == 0x000001, "Wrong size on FortItemManagementModeDetailsPanel_GetItemManagementMode");
static_assert(offsetof(FortItemManagementModeDetailsPanel_GetItemManagementMode, ReturnValue) == 0x000000, "Member 'FortItemManagementModeDetailsPanel_GetItemManagementMode::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSectionCompletionRewardWidget.HandleRewardDetailsModalWidgetDeactivated
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookSectionCompletionRewardWidget_HandleRewardDetailsModalWidgetDeactivated final
{
public:
	class UCommonActivatablePanel*                DeactivatedPanel;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookSectionCompletionRewardWidget_HandleRewardDetailsModalWidgetDeactivated) == 0x000008, "Wrong alignment on FortCollectionBookSectionCompletionRewardWidget_HandleRewardDetailsModalWidgetDeactivated");
static_assert(sizeof(FortCollectionBookSectionCompletionRewardWidget_HandleRewardDetailsModalWidgetDeactivated) == 0x000008, "Wrong size on FortCollectionBookSectionCompletionRewardWidget_HandleRewardDetailsModalWidgetDeactivated");
static_assert(offsetof(FortCollectionBookSectionCompletionRewardWidget_HandleRewardDetailsModalWidgetDeactivated, DeactivatedPanel) == 0x000000, "Member 'FortCollectionBookSectionCompletionRewardWidget_HandleRewardDetailsModalWidgetDeactivated::DeactivatedPanel' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSectionCompletionRewardWidget.OnRewardDetailsButtonClicked
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookSectionCompletionRewardWidget_OnRewardDetailsButtonClicked final
{
public:
	class UCommonButton*                          ClickedButton;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookSectionCompletionRewardWidget_OnRewardDetailsButtonClicked) == 0x000008, "Wrong alignment on FortCollectionBookSectionCompletionRewardWidget_OnRewardDetailsButtonClicked");
static_assert(sizeof(FortCollectionBookSectionCompletionRewardWidget_OnRewardDetailsButtonClicked) == 0x000008, "Wrong size on FortCollectionBookSectionCompletionRewardWidget_OnRewardDetailsButtonClicked");
static_assert(offsetof(FortCollectionBookSectionCompletionRewardWidget_OnRewardDetailsButtonClicked, ClickedButton) == 0x000000, "Member 'FortCollectionBookSectionCompletionRewardWidget_OnRewardDetailsButtonClicked::ClickedButton' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSectionPanel.OnBackActionExecuted
// 0x0001 (0x0001 - 0x0000)
struct FortCollectionBookSectionPanel_OnBackActionExecuted final
{
public:
	bool                                          bPassThrough;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookSectionPanel_OnBackActionExecuted) == 0x000001, "Wrong alignment on FortCollectionBookSectionPanel_OnBackActionExecuted");
static_assert(sizeof(FortCollectionBookSectionPanel_OnBackActionExecuted) == 0x000001, "Wrong size on FortCollectionBookSectionPanel_OnBackActionExecuted");
static_assert(offsetof(FortCollectionBookSectionPanel_OnBackActionExecuted, bPassThrough) == 0x000000, "Member 'FortCollectionBookSectionPanel_OnBackActionExecuted::bPassThrough' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSectionPanel.OnInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct FortCollectionBookSectionPanel_OnInputMethodChanged final
{
public:
	bool                                          bUsingGamepad;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookSectionPanel_OnInputMethodChanged) == 0x000001, "Wrong alignment on FortCollectionBookSectionPanel_OnInputMethodChanged");
static_assert(sizeof(FortCollectionBookSectionPanel_OnInputMethodChanged) == 0x000001, "Wrong size on FortCollectionBookSectionPanel_OnInputMethodChanged");
static_assert(offsetof(FortCollectionBookSectionPanel_OnInputMethodChanged, bUsingGamepad) == 0x000000, "Member 'FortCollectionBookSectionPanel_OnInputMethodChanged::bUsingGamepad' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSectionPanel.OnInspectActionExecuted
// 0x0001 (0x0001 - 0x0000)
struct FortCollectionBookSectionPanel_OnInspectActionExecuted final
{
public:
	bool                                          bPassThrough;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookSectionPanel_OnInspectActionExecuted) == 0x000001, "Wrong alignment on FortCollectionBookSectionPanel_OnInspectActionExecuted");
static_assert(sizeof(FortCollectionBookSectionPanel_OnInspectActionExecuted) == 0x000001, "Wrong size on FortCollectionBookSectionPanel_OnInspectActionExecuted");
static_assert(offsetof(FortCollectionBookSectionPanel_OnInspectActionExecuted, bPassThrough) == 0x000000, "Member 'FortCollectionBookSectionPanel_OnInspectActionExecuted::bPassThrough' has a wrong offset!");

// DelegateFunction FortniteUI.FortCollectionBookSectionPanel.OnItemAction__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookSectionPanel_OnItemAction__DelegateSignature final
{
public:
	class UFortItem*                              SelectedItem;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookSectionPanel_OnItemAction__DelegateSignature) == 0x000008, "Wrong alignment on FortCollectionBookSectionPanel_OnItemAction__DelegateSignature");
static_assert(sizeof(FortCollectionBookSectionPanel_OnItemAction__DelegateSignature) == 0x000008, "Wrong size on FortCollectionBookSectionPanel_OnItemAction__DelegateSignature");
static_assert(offsetof(FortCollectionBookSectionPanel_OnItemAction__DelegateSignature, SelectedItem) == 0x000000, "Member 'FortCollectionBookSectionPanel_OnItemAction__DelegateSignature::SelectedItem' has a wrong offset!");

// DelegateFunction FortniteUI.FortCollectionBookSectionPanel.OnItemInspectAction__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct FortCollectionBookSectionPanel_OnItemInspectAction__DelegateSignature final
{
public:
	class UFortItem*                              SelectedItem;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          EnableItemActions;                                 // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsPlaceholderItem;                                 // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortCollectionBookSectionPanel_OnItemInspectAction__DelegateSignature) == 0x000008, "Wrong alignment on FortCollectionBookSectionPanel_OnItemInspectAction__DelegateSignature");
static_assert(sizeof(FortCollectionBookSectionPanel_OnItemInspectAction__DelegateSignature) == 0x000010, "Wrong size on FortCollectionBookSectionPanel_OnItemInspectAction__DelegateSignature");
static_assert(offsetof(FortCollectionBookSectionPanel_OnItemInspectAction__DelegateSignature, SelectedItem) == 0x000000, "Member 'FortCollectionBookSectionPanel_OnItemInspectAction__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(FortCollectionBookSectionPanel_OnItemInspectAction__DelegateSignature, EnableItemActions) == 0x000008, "Member 'FortCollectionBookSectionPanel_OnItemInspectAction__DelegateSignature::EnableItemActions' has a wrong offset!");
static_assert(offsetof(FortCollectionBookSectionPanel_OnItemInspectAction__DelegateSignature, IsPlaceholderItem) == 0x000009, "Member 'FortCollectionBookSectionPanel_OnItemInspectAction__DelegateSignature::IsPlaceholderItem' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSectionPanel.OnLogAllowedItemsActionExecuted
// 0x0001 (0x0001 - 0x0000)
struct FortCollectionBookSectionPanel_OnLogAllowedItemsActionExecuted final
{
public:
	bool                                          bPassThrough;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookSectionPanel_OnLogAllowedItemsActionExecuted) == 0x000001, "Wrong alignment on FortCollectionBookSectionPanel_OnLogAllowedItemsActionExecuted");
static_assert(sizeof(FortCollectionBookSectionPanel_OnLogAllowedItemsActionExecuted) == 0x000001, "Wrong size on FortCollectionBookSectionPanel_OnLogAllowedItemsActionExecuted");
static_assert(offsetof(FortCollectionBookSectionPanel_OnLogAllowedItemsActionExecuted, bPassThrough) == 0x000000, "Member 'FortCollectionBookSectionPanel_OnLogAllowedItemsActionExecuted::bPassThrough' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSectionPanel.OnOpenPickerActionExecuted
// 0x0001 (0x0001 - 0x0000)
struct FortCollectionBookSectionPanel_OnOpenPickerActionExecuted final
{
public:
	bool                                          bPassThrough;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookSectionPanel_OnOpenPickerActionExecuted) == 0x000001, "Wrong alignment on FortCollectionBookSectionPanel_OnOpenPickerActionExecuted");
static_assert(sizeof(FortCollectionBookSectionPanel_OnOpenPickerActionExecuted) == 0x000001, "Wrong size on FortCollectionBookSectionPanel_OnOpenPickerActionExecuted");
static_assert(offsetof(FortCollectionBookSectionPanel_OnOpenPickerActionExecuted, bPassThrough) == 0x000000, "Member 'FortCollectionBookSectionPanel_OnOpenPickerActionExecuted::bPassThrough' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSectionPanel.OnSectionChanged
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookSectionPanel_OnSectionChanged final
{
public:
	const class UFortCollectionBookSection*       Section;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookSectionPanel_OnSectionChanged) == 0x000008, "Wrong alignment on FortCollectionBookSectionPanel_OnSectionChanged");
static_assert(sizeof(FortCollectionBookSectionPanel_OnSectionChanged) == 0x000008, "Wrong size on FortCollectionBookSectionPanel_OnSectionChanged");
static_assert(offsetof(FortCollectionBookSectionPanel_OnSectionChanged, Section) == 0x000000, "Member 'FortCollectionBookSectionPanel_OnSectionChanged::Section' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSectionPanel.OnSlotButtonCommitted
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookSectionPanel_OnSlotButtonCommitted final
{
public:
	const class UFortCollectionBookSlotButton*    SlotButton;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookSectionPanel_OnSlotButtonCommitted) == 0x000008, "Wrong alignment on FortCollectionBookSectionPanel_OnSlotButtonCommitted");
static_assert(sizeof(FortCollectionBookSectionPanel_OnSlotButtonCommitted) == 0x000008, "Wrong size on FortCollectionBookSectionPanel_OnSlotButtonCommitted");
static_assert(offsetof(FortCollectionBookSectionPanel_OnSlotButtonCommitted, SlotButton) == 0x000000, "Member 'FortCollectionBookSectionPanel_OnSlotButtonCommitted::SlotButton' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSectionPanel.OnSlotButtonSelected
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookSectionPanel_OnSlotButtonSelected final
{
public:
	const class UFortCollectionBookSlotButton*    SlotButton;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookSectionPanel_OnSlotButtonSelected) == 0x000008, "Wrong alignment on FortCollectionBookSectionPanel_OnSlotButtonSelected");
static_assert(sizeof(FortCollectionBookSectionPanel_OnSlotButtonSelected) == 0x000008, "Wrong size on FortCollectionBookSectionPanel_OnSlotButtonSelected");
static_assert(offsetof(FortCollectionBookSectionPanel_OnSlotButtonSelected, SlotButton) == 0x000000, "Member 'FortCollectionBookSectionPanel_OnSlotButtonSelected::SlotButton' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSectionPanel.OnSlotItemActionExecuted
// 0x0001 (0x0001 - 0x0000)
struct FortCollectionBookSectionPanel_OnSlotItemActionExecuted final
{
public:
	bool                                          bPassThrough;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookSectionPanel_OnSlotItemActionExecuted) == 0x000001, "Wrong alignment on FortCollectionBookSectionPanel_OnSlotItemActionExecuted");
static_assert(sizeof(FortCollectionBookSectionPanel_OnSlotItemActionExecuted) == 0x000001, "Wrong size on FortCollectionBookSectionPanel_OnSlotItemActionExecuted");
static_assert(offsetof(FortCollectionBookSectionPanel_OnSlotItemActionExecuted, bPassThrough) == 0x000000, "Member 'FortCollectionBookSectionPanel_OnSlotItemActionExecuted::bPassThrough' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSectionPanel.OnSlotItemComplete
// 0x0010 (0x0010 - 0x0000)
struct FortCollectionBookSectionPanel_OnSlotItemComplete final
{
public:
	const class UFortAccountItem*                 SlottedItem;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SlotId;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookSectionPanel_OnSlotItemComplete) == 0x000008, "Wrong alignment on FortCollectionBookSectionPanel_OnSlotItemComplete");
static_assert(sizeof(FortCollectionBookSectionPanel_OnSlotItemComplete) == 0x000010, "Wrong size on FortCollectionBookSectionPanel_OnSlotItemComplete");
static_assert(offsetof(FortCollectionBookSectionPanel_OnSlotItemComplete, SlottedItem) == 0x000000, "Member 'FortCollectionBookSectionPanel_OnSlotItemComplete::SlottedItem' has a wrong offset!");
static_assert(offsetof(FortCollectionBookSectionPanel_OnSlotItemComplete, SlotId) == 0x000008, "Member 'FortCollectionBookSectionPanel_OnSlotItemComplete::SlotId' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSectionPanel.OnSlotItemConfirmationCompleted
// 0x0018 (0x0018 - 0x0000)
struct FortCollectionBookSectionPanel_OnSlotItemConfirmationCompleted final
{
public:
	class UFortItem*                              SelectedItem;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SlotId;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortDialogExternalLatentActionHandle  LatentActionHandle;                                // 0x0010(0x0004)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortCollectionBookSectionPanel_OnSlotItemConfirmationCompleted) == 0x000008, "Wrong alignment on FortCollectionBookSectionPanel_OnSlotItemConfirmationCompleted");
static_assert(sizeof(FortCollectionBookSectionPanel_OnSlotItemConfirmationCompleted) == 0x000018, "Wrong size on FortCollectionBookSectionPanel_OnSlotItemConfirmationCompleted");
static_assert(offsetof(FortCollectionBookSectionPanel_OnSlotItemConfirmationCompleted, SelectedItem) == 0x000000, "Member 'FortCollectionBookSectionPanel_OnSlotItemConfirmationCompleted::SelectedItem' has a wrong offset!");
static_assert(offsetof(FortCollectionBookSectionPanel_OnSlotItemConfirmationCompleted, SlotId) == 0x000008, "Member 'FortCollectionBookSectionPanel_OnSlotItemConfirmationCompleted::SlotId' has a wrong offset!");
static_assert(offsetof(FortCollectionBookSectionPanel_OnSlotItemConfirmationCompleted, LatentActionHandle) == 0x000010, "Member 'FortCollectionBookSectionPanel_OnSlotItemConfirmationCompleted::LatentActionHandle' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSectionPanel.OnSlotPickerItemHovered
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookSectionPanel_OnSlotPickerItemHovered final
{
public:
	class UFortItem*                              HoveredItem;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookSectionPanel_OnSlotPickerItemHovered) == 0x000008, "Wrong alignment on FortCollectionBookSectionPanel_OnSlotPickerItemHovered");
static_assert(sizeof(FortCollectionBookSectionPanel_OnSlotPickerItemHovered) == 0x000008, "Wrong size on FortCollectionBookSectionPanel_OnSlotPickerItemHovered");
static_assert(offsetof(FortCollectionBookSectionPanel_OnSlotPickerItemHovered, HoveredItem) == 0x000000, "Member 'FortCollectionBookSectionPanel_OnSlotPickerItemHovered::HoveredItem' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSectionPanel.OnSlotPickerItemSelected
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookSectionPanel_OnSlotPickerItemSelected final
{
public:
	class UFortItem*                              SelectedItem;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookSectionPanel_OnSlotPickerItemSelected) == 0x000008, "Wrong alignment on FortCollectionBookSectionPanel_OnSlotPickerItemSelected");
static_assert(sizeof(FortCollectionBookSectionPanel_OnSlotPickerItemSelected) == 0x000008, "Wrong size on FortCollectionBookSectionPanel_OnSlotPickerItemSelected");
static_assert(offsetof(FortCollectionBookSectionPanel_OnSlotPickerItemSelected, SelectedItem) == 0x000000, "Member 'FortCollectionBookSectionPanel_OnSlotPickerItemSelected::SelectedItem' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSectionPanel.OnSlottedItemOperationComplete
// 0x0010 (0x0010 - 0x0000)
struct FortCollectionBookSectionPanel_OnSlottedItemOperationComplete final
{
public:
	const class UFortAccountItem*                 SlottedItem;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SlotId;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookSectionPanel_OnSlottedItemOperationComplete) == 0x000008, "Wrong alignment on FortCollectionBookSectionPanel_OnSlottedItemOperationComplete");
static_assert(sizeof(FortCollectionBookSectionPanel_OnSlottedItemOperationComplete) == 0x000010, "Wrong size on FortCollectionBookSectionPanel_OnSlottedItemOperationComplete");
static_assert(offsetof(FortCollectionBookSectionPanel_OnSlottedItemOperationComplete, SlottedItem) == 0x000000, "Member 'FortCollectionBookSectionPanel_OnSlottedItemOperationComplete::SlottedItem' has a wrong offset!");
static_assert(offsetof(FortCollectionBookSectionPanel_OnSlottedItemOperationComplete, SlotId) == 0x000008, "Member 'FortCollectionBookSectionPanel_OnSlottedItemOperationComplete::SlotId' has a wrong offset!");

// Function FortniteUI.FortJournalQuestDetails.CanGotoQuest
// 0x0001 (0x0001 - 0x0000)
struct FortJournalQuestDetails_CanGotoQuest final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortJournalQuestDetails_CanGotoQuest) == 0x000001, "Wrong alignment on FortJournalQuestDetails_CanGotoQuest");
static_assert(sizeof(FortJournalQuestDetails_CanGotoQuest) == 0x000001, "Wrong size on FortJournalQuestDetails_CanGotoQuest");
static_assert(offsetof(FortJournalQuestDetails_CanGotoQuest, ReturnValue) == 0x000000, "Member 'FortJournalQuestDetails_CanGotoQuest::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortJournalQuestDetails.CanPartyLeaderPlayQuest
// 0x0001 (0x0001 - 0x0000)
struct FortJournalQuestDetails_CanPartyLeaderPlayQuest final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortJournalQuestDetails_CanPartyLeaderPlayQuest) == 0x000001, "Wrong alignment on FortJournalQuestDetails_CanPartyLeaderPlayQuest");
static_assert(sizeof(FortJournalQuestDetails_CanPartyLeaderPlayQuest) == 0x000001, "Wrong size on FortJournalQuestDetails_CanPartyLeaderPlayQuest");
static_assert(offsetof(FortJournalQuestDetails_CanPartyLeaderPlayQuest, ReturnValue) == 0x000000, "Member 'FortJournalQuestDetails_CanPartyLeaderPlayQuest::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortJournalQuestDetails.CanPlayQuest
// 0x0001 (0x0001 - 0x0000)
struct FortJournalQuestDetails_CanPlayQuest final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortJournalQuestDetails_CanPlayQuest) == 0x000001, "Wrong alignment on FortJournalQuestDetails_CanPlayQuest");
static_assert(sizeof(FortJournalQuestDetails_CanPlayQuest) == 0x000001, "Wrong size on FortJournalQuestDetails_CanPlayQuest");
static_assert(offsetof(FortJournalQuestDetails_CanPlayQuest, ReturnValue) == 0x000000, "Member 'FortJournalQuestDetails_CanPlayQuest::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortJournalQuestDetails.GetActiveMissionTileType
// 0x0001 (0x0001 - 0x0000)
struct FortJournalQuestDetails_GetActiveMissionTileType final
{
public:
	EFortTheaterMapTileType                       ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortJournalQuestDetails_GetActiveMissionTileType) == 0x000001, "Wrong alignment on FortJournalQuestDetails_GetActiveMissionTileType");
static_assert(sizeof(FortJournalQuestDetails_GetActiveMissionTileType) == 0x000001, "Wrong size on FortJournalQuestDetails_GetActiveMissionTileType");
static_assert(offsetof(FortJournalQuestDetails_GetActiveMissionTileType, ReturnValue) == 0x000000, "Member 'FortJournalQuestDetails_GetActiveMissionTileType::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortJournalQuestDetails.GetFutureObjectives
// 0x0010 (0x0010 - 0x0000)
struct FortJournalQuestDetails_GetFutureObjectives final
{
public:
	TArray<class UFortQuestObjectiveInfo*>        FutureObjectives;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortJournalQuestDetails_GetFutureObjectives) == 0x000008, "Wrong alignment on FortJournalQuestDetails_GetFutureObjectives");
static_assert(sizeof(FortJournalQuestDetails_GetFutureObjectives) == 0x000010, "Wrong size on FortJournalQuestDetails_GetFutureObjectives");
static_assert(offsetof(FortJournalQuestDetails_GetFutureObjectives, FutureObjectives) == 0x000000, "Member 'FortJournalQuestDetails_GetFutureObjectives::FutureObjectives' has a wrong offset!");

// Function FortniteUI.FortJournalQuestDetails.GetRewards
// 0x0020 (0x0020 - 0x0000)
struct FortJournalQuestDetails_GetRewards final
{
public:
	TArray<struct FFortItemInstanceQuantityPair>  OutRewards;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortItemInstanceQuantityPair>  OutSelectableRewards;                              // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortJournalQuestDetails_GetRewards) == 0x000008, "Wrong alignment on FortJournalQuestDetails_GetRewards");
static_assert(sizeof(FortJournalQuestDetails_GetRewards) == 0x000020, "Wrong size on FortJournalQuestDetails_GetRewards");
static_assert(offsetof(FortJournalQuestDetails_GetRewards, OutRewards) == 0x000000, "Member 'FortJournalQuestDetails_GetRewards::OutRewards' has a wrong offset!");
static_assert(offsetof(FortJournalQuestDetails_GetRewards, OutSelectableRewards) == 0x000010, "Member 'FortJournalQuestDetails_GetRewards::OutSelectableRewards' has a wrong offset!");

// Function FortniteUI.FortJournalQuestDetails.GetVisibleObjectives
// 0x0010 (0x0010 - 0x0000)
struct FortJournalQuestDetails_GetVisibleObjectives final
{
public:
	TArray<class UFortQuestObjectiveInfo*>        VisibleObjectives;                                 // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortJournalQuestDetails_GetVisibleObjectives) == 0x000008, "Wrong alignment on FortJournalQuestDetails_GetVisibleObjectives");
static_assert(sizeof(FortJournalQuestDetails_GetVisibleObjectives) == 0x000010, "Wrong size on FortJournalQuestDetails_GetVisibleObjectives");
static_assert(offsetof(FortJournalQuestDetails_GetVisibleObjectives, VisibleObjectives) == 0x000000, "Member 'FortJournalQuestDetails_GetVisibleObjectives::VisibleObjectives' has a wrong offset!");

// Function FortniteUI.FortJournalQuestDetails.SetCurrentQuest
// 0x0008 (0x0008 - 0x0000)
struct FortJournalQuestDetails_SetCurrentQuest final
{
public:
	class UFortQuestItem*                         InCurrentQuest;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortJournalQuestDetails_SetCurrentQuest) == 0x000008, "Wrong alignment on FortJournalQuestDetails_SetCurrentQuest");
static_assert(sizeof(FortJournalQuestDetails_SetCurrentQuest) == 0x000008, "Wrong size on FortJournalQuestDetails_SetCurrentQuest");
static_assert(offsetof(FortJournalQuestDetails_SetCurrentQuest, InCurrentQuest) == 0x000000, "Member 'FortJournalQuestDetails_SetCurrentQuest::InCurrentQuest' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSectionTileWidget.OnItemSlotted
// 0x0010 (0x0010 - 0x0000)
struct FortCollectionBookSectionTileWidget_OnItemSlotted final
{
public:
	const class UFortAccountItem*                 ItemSlotted;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SlotId;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookSectionTileWidget_OnItemSlotted) == 0x000008, "Wrong alignment on FortCollectionBookSectionTileWidget_OnItemSlotted");
static_assert(sizeof(FortCollectionBookSectionTileWidget_OnItemSlotted) == 0x000010, "Wrong size on FortCollectionBookSectionTileWidget_OnItemSlotted");
static_assert(offsetof(FortCollectionBookSectionTileWidget_OnItemSlotted, ItemSlotted) == 0x000000, "Member 'FortCollectionBookSectionTileWidget_OnItemSlotted::ItemSlotted' has a wrong offset!");
static_assert(offsetof(FortCollectionBookSectionTileWidget_OnItemSlotted, SlotId) == 0x000008, "Member 'FortCollectionBookSectionTileWidget_OnItemSlotted::SlotId' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSectionTileWidget.OnSectionSlotUpdate
// 0x000C (0x000C - 0x0000)
struct FortCollectionBookSectionTileWidget_OnSectionSlotUpdate final
{
public:
	int32                                         NumFilledSlots;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumSlots;                                          // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortCollectionBookState                      SectionState;                                      // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortCollectionBookSectionTileWidget_OnSectionSlotUpdate) == 0x000004, "Wrong alignment on FortCollectionBookSectionTileWidget_OnSectionSlotUpdate");
static_assert(sizeof(FortCollectionBookSectionTileWidget_OnSectionSlotUpdate) == 0x00000C, "Wrong size on FortCollectionBookSectionTileWidget_OnSectionSlotUpdate");
static_assert(offsetof(FortCollectionBookSectionTileWidget_OnSectionSlotUpdate, NumFilledSlots) == 0x000000, "Member 'FortCollectionBookSectionTileWidget_OnSectionSlotUpdate::NumFilledSlots' has a wrong offset!");
static_assert(offsetof(FortCollectionBookSectionTileWidget_OnSectionSlotUpdate, NumSlots) == 0x000004, "Member 'FortCollectionBookSectionTileWidget_OnSectionSlotUpdate::NumSlots' has a wrong offset!");
static_assert(offsetof(FortCollectionBookSectionTileWidget_OnSectionSlotUpdate, SectionState) == 0x000008, "Member 'FortCollectionBookSectionTileWidget_OnSectionSlotUpdate::SectionState' has a wrong offset!");

// Function FortniteUI.FortLobby.OnBeginCursorOverPlayer
// 0x0004 (0x0004 - 0x0000)
struct FortLobby_OnBeginCursorOverPlayer final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLobby_OnBeginCursorOverPlayer) == 0x000004, "Wrong alignment on FortLobby_OnBeginCursorOverPlayer");
static_assert(sizeof(FortLobby_OnBeginCursorOverPlayer) == 0x000004, "Wrong size on FortLobby_OnBeginCursorOverPlayer");
static_assert(offsetof(FortLobby_OnBeginCursorOverPlayer, PlayerIndex) == 0x000000, "Member 'FortLobby_OnBeginCursorOverPlayer::PlayerIndex' has a wrong offset!");

// Function FortniteUI.FortLobby.OnEndCursorOverPlayer
// 0x0004 (0x0004 - 0x0000)
struct FortLobby_OnEndCursorOverPlayer final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLobby_OnEndCursorOverPlayer) == 0x000004, "Wrong alignment on FortLobby_OnEndCursorOverPlayer");
static_assert(sizeof(FortLobby_OnEndCursorOverPlayer) == 0x000004, "Wrong size on FortLobby_OnEndCursorOverPlayer");
static_assert(offsetof(FortLobby_OnEndCursorOverPlayer, PlayerIndex) == 0x000000, "Member 'FortLobby_OnEndCursorOverPlayer::PlayerIndex' has a wrong offset!");

// Function FortniteUI.FortLobby.OnPlayerClicked
// 0x0004 (0x0004 - 0x0000)
struct FortLobby_OnPlayerClicked final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLobby_OnPlayerClicked) == 0x000004, "Wrong alignment on FortLobby_OnPlayerClicked");
static_assert(sizeof(FortLobby_OnPlayerClicked) == 0x000004, "Wrong size on FortLobby_OnPlayerClicked");
static_assert(offsetof(FortLobby_OnPlayerClicked, PlayerIndex) == 0x000000, "Member 'FortLobby_OnPlayerClicked::PlayerIndex' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSlotView.OnSelectedSlotButtonChanged
// 0x0010 (0x0010 - 0x0000)
struct FortCollectionBookSlotView_OnSelectedSlotButtonChanged final
{
public:
	class UCommonButton*                          SelectedButton;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ButtonIdx;                                         // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortCollectionBookSlotView_OnSelectedSlotButtonChanged) == 0x000008, "Wrong alignment on FortCollectionBookSlotView_OnSelectedSlotButtonChanged");
static_assert(sizeof(FortCollectionBookSlotView_OnSelectedSlotButtonChanged) == 0x000010, "Wrong size on FortCollectionBookSlotView_OnSelectedSlotButtonChanged");
static_assert(offsetof(FortCollectionBookSlotView_OnSelectedSlotButtonChanged, SelectedButton) == 0x000000, "Member 'FortCollectionBookSlotView_OnSelectedSlotButtonChanged::SelectedButton' has a wrong offset!");
static_assert(offsetof(FortCollectionBookSlotView_OnSelectedSlotButtonChanged, ButtonIdx) == 0x000008, "Member 'FortCollectionBookSlotView_OnSelectedSlotButtonChanged::ButtonIdx' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSlotView.OnSlotButtonClicked
// 0x0010 (0x0010 - 0x0000)
struct FortCollectionBookSlotView_OnSlotButtonClicked final
{
public:
	class UCommonButton*                          ClickedButton;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ButtonIdx;                                         // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortCollectionBookSlotView_OnSlotButtonClicked) == 0x000008, "Wrong alignment on FortCollectionBookSlotView_OnSlotButtonClicked");
static_assert(sizeof(FortCollectionBookSlotView_OnSlotButtonClicked) == 0x000010, "Wrong size on FortCollectionBookSlotView_OnSlotButtonClicked");
static_assert(offsetof(FortCollectionBookSlotView_OnSlotButtonClicked, ClickedButton) == 0x000000, "Member 'FortCollectionBookSlotView_OnSlotButtonClicked::ClickedButton' has a wrong offset!");
static_assert(offsetof(FortCollectionBookSlotView_OnSlotButtonClicked, ButtonIdx) == 0x000008, "Member 'FortCollectionBookSlotView_OnSlotButtonClicked::ButtonIdx' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSlotView.OnSlotButtonCommitted
// 0x0010 (0x0010 - 0x0000)
struct FortCollectionBookSlotView_OnSlotButtonCommitted final
{
public:
	class UCommonButton*                          CommittedButton;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ButtonIdx;                                         // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortCollectionBookSlotView_OnSlotButtonCommitted) == 0x000008, "Wrong alignment on FortCollectionBookSlotView_OnSlotButtonCommitted");
static_assert(sizeof(FortCollectionBookSlotView_OnSlotButtonCommitted) == 0x000010, "Wrong size on FortCollectionBookSlotView_OnSlotButtonCommitted");
static_assert(offsetof(FortCollectionBookSlotView_OnSlotButtonCommitted, CommittedButton) == 0x000000, "Member 'FortCollectionBookSlotView_OnSlotButtonCommitted::CommittedButton' has a wrong offset!");
static_assert(offsetof(FortCollectionBookSlotView_OnSlotButtonCommitted, ButtonIdx) == 0x000008, "Member 'FortCollectionBookSlotView_OnSlotButtonCommitted::ButtonIdx' has a wrong offset!");

// Function FortniteUI.FortCollectionBookSlotWidget.OnSlottedItemOperationComplete
// 0x0010 (0x0010 - 0x0000)
struct FortCollectionBookSlotWidget_OnSlottedItemOperationComplete final
{
public:
	const class UFortAccountItem*                 ItemSlotted;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SlotId;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookSlotWidget_OnSlottedItemOperationComplete) == 0x000008, "Wrong alignment on FortCollectionBookSlotWidget_OnSlottedItemOperationComplete");
static_assert(sizeof(FortCollectionBookSlotWidget_OnSlottedItemOperationComplete) == 0x000010, "Wrong size on FortCollectionBookSlotWidget_OnSlottedItemOperationComplete");
static_assert(offsetof(FortCollectionBookSlotWidget_OnSlottedItemOperationComplete, ItemSlotted) == 0x000000, "Member 'FortCollectionBookSlotWidget_OnSlottedItemOperationComplete::ItemSlotted' has a wrong offset!");
static_assert(offsetof(FortCollectionBookSlotWidget_OnSlottedItemOperationComplete, SlotId) == 0x000008, "Member 'FortCollectionBookSlotWidget_OnSlottedItemOperationComplete::SlotId' has a wrong offset!");

// Function FortniteUI.FortCollectionBookWidget.OnCollectionBookPageClicked
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookWidget_OnCollectionBookPageClicked final
{
public:
	const class UFortCollectionBookPage*          ClickedPage;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookWidget_OnCollectionBookPageClicked) == 0x000008, "Wrong alignment on FortCollectionBookWidget_OnCollectionBookPageClicked");
static_assert(sizeof(FortCollectionBookWidget_OnCollectionBookPageClicked) == 0x000008, "Wrong size on FortCollectionBookWidget_OnCollectionBookPageClicked");
static_assert(offsetof(FortCollectionBookWidget_OnCollectionBookPageClicked, ClickedPage) == 0x000000, "Member 'FortCollectionBookWidget_OnCollectionBookPageClicked::ClickedPage' has a wrong offset!");

// Function FortniteUI.FortCollectionBookWidget.OnCollectionBookPageSelected
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookWidget_OnCollectionBookPageSelected final
{
public:
	const class UFortCollectionBookPage*          SelectedPage;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookWidget_OnCollectionBookPageSelected) == 0x000008, "Wrong alignment on FortCollectionBookWidget_OnCollectionBookPageSelected");
static_assert(sizeof(FortCollectionBookWidget_OnCollectionBookPageSelected) == 0x000008, "Wrong size on FortCollectionBookWidget_OnCollectionBookPageSelected");
static_assert(offsetof(FortCollectionBookWidget_OnCollectionBookPageSelected, SelectedPage) == 0x000000, "Member 'FortCollectionBookWidget_OnCollectionBookPageSelected::SelectedPage' has a wrong offset!");

// Function FortniteUI.FortCollectionBookWidget.OnCollectionBookSectionClicked
// 0x0008 (0x0008 - 0x0000)
struct FortCollectionBookWidget_OnCollectionBookSectionClicked final
{
public:
	const class UFortCollectionBookSection*       ClickedSection;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookWidget_OnCollectionBookSectionClicked) == 0x000008, "Wrong alignment on FortCollectionBookWidget_OnCollectionBookSectionClicked");
static_assert(sizeof(FortCollectionBookWidget_OnCollectionBookSectionClicked) == 0x000008, "Wrong size on FortCollectionBookWidget_OnCollectionBookSectionClicked");
static_assert(offsetof(FortCollectionBookWidget_OnCollectionBookSectionClicked, ClickedSection) == 0x000000, "Member 'FortCollectionBookWidget_OnCollectionBookSectionClicked::ClickedSection' has a wrong offset!");

// Function FortniteUI.FortCollectionBookWidget.OnPreviewXPChangeRequest
// 0x0004 (0x0004 - 0x0000)
struct FortCollectionBookWidget_OnPreviewXPChangeRequest final
{
public:
	int32                                         XPChange;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCollectionBookWidget_OnPreviewXPChangeRequest) == 0x000004, "Wrong alignment on FortCollectionBookWidget_OnPreviewXPChangeRequest");
static_assert(sizeof(FortCollectionBookWidget_OnPreviewXPChangeRequest) == 0x000004, "Wrong size on FortCollectionBookWidget_OnPreviewXPChangeRequest");
static_assert(offsetof(FortCollectionBookWidget_OnPreviewXPChangeRequest, XPChange) == 0x000000, "Member 'FortCollectionBookWidget_OnPreviewXPChangeRequest::XPChange' has a wrong offset!");

// Function FortniteUI.FortSquadManagementScreenBase.HandleDifferentSquadSlotSelected
// 0x0004 (0x0004 - 0x0000)
struct FortSquadManagementScreenBase_HandleDifferentSquadSlotSelected final
{
public:
	int32                                         SquadSlotIndex;                                    // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadManagementScreenBase_HandleDifferentSquadSlotSelected) == 0x000004, "Wrong alignment on FortSquadManagementScreenBase_HandleDifferentSquadSlotSelected");
static_assert(sizeof(FortSquadManagementScreenBase_HandleDifferentSquadSlotSelected) == 0x000004, "Wrong size on FortSquadManagementScreenBase_HandleDifferentSquadSlotSelected");
static_assert(offsetof(FortSquadManagementScreenBase_HandleDifferentSquadSlotSelected, SquadSlotIndex) == 0x000000, "Member 'FortSquadManagementScreenBase_HandleDifferentSquadSlotSelected::SquadSlotIndex' has a wrong offset!");

// Function FortniteUI.FortSquadManagementScreenBase.HandleOpenSquadSlot
// 0x0004 (0x0004 - 0x0000)
struct FortSquadManagementScreenBase_HandleOpenSquadSlot final
{
public:
	int32                                         SquadSlotIndex;                                    // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadManagementScreenBase_HandleOpenSquadSlot) == 0x000004, "Wrong alignment on FortSquadManagementScreenBase_HandleOpenSquadSlot");
static_assert(sizeof(FortSquadManagementScreenBase_HandleOpenSquadSlot) == 0x000004, "Wrong size on FortSquadManagementScreenBase_HandleOpenSquadSlot");
static_assert(offsetof(FortSquadManagementScreenBase_HandleOpenSquadSlot, SquadSlotIndex) == 0x000000, "Member 'FortSquadManagementScreenBase_HandleOpenSquadSlot::SquadSlotIndex' has a wrong offset!");

// Function FortniteUI.FortSquadManagementScreenBase.HandlePickerSelectionChanged
// 0x0008 (0x0008 - 0x0000)
struct FortSquadManagementScreenBase_HandlePickerSelectionChanged final
{
public:
	class UFortItem*                              SelectedItem;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadManagementScreenBase_HandlePickerSelectionChanged) == 0x000008, "Wrong alignment on FortSquadManagementScreenBase_HandlePickerSelectionChanged");
static_assert(sizeof(FortSquadManagementScreenBase_HandlePickerSelectionChanged) == 0x000008, "Wrong size on FortSquadManagementScreenBase_HandlePickerSelectionChanged");
static_assert(offsetof(FortSquadManagementScreenBase_HandlePickerSelectionChanged, SelectedItem) == 0x000000, "Member 'FortSquadManagementScreenBase_HandlePickerSelectionChanged::SelectedItem' has a wrong offset!");

// Function FortniteUI.FortSquadManagementScreenBase.HandlePickerSelectionCommitted
// 0x0008 (0x0008 - 0x0000)
struct FortSquadManagementScreenBase_HandlePickerSelectionCommitted final
{
public:
	class UFortItem*                              CommittedItem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadManagementScreenBase_HandlePickerSelectionCommitted) == 0x000008, "Wrong alignment on FortSquadManagementScreenBase_HandlePickerSelectionCommitted");
static_assert(sizeof(FortSquadManagementScreenBase_HandlePickerSelectionCommitted) == 0x000008, "Wrong size on FortSquadManagementScreenBase_HandlePickerSelectionCommitted");
static_assert(offsetof(FortSquadManagementScreenBase_HandlePickerSelectionCommitted, CommittedItem) == 0x000000, "Member 'FortSquadManagementScreenBase_HandlePickerSelectionCommitted::CommittedItem' has a wrong offset!");

// Function FortniteUI.FortSquadManagementScreenBase.NavigateToSquadSlot
// 0x0004 (0x0004 - 0x0000)
struct FortSquadManagementScreenBase_NavigateToSquadSlot final
{
public:
	int32                                         SquadSlotIndex;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadManagementScreenBase_NavigateToSquadSlot) == 0x000004, "Wrong alignment on FortSquadManagementScreenBase_NavigateToSquadSlot");
static_assert(sizeof(FortSquadManagementScreenBase_NavigateToSquadSlot) == 0x000004, "Wrong size on FortSquadManagementScreenBase_NavigateToSquadSlot");
static_assert(offsetof(FortSquadManagementScreenBase_NavigateToSquadSlot, SquadSlotIndex) == 0x000000, "Member 'FortSquadManagementScreenBase_NavigateToSquadSlot::SquadSlotIndex' has a wrong offset!");

// Function FortniteUI.FortSquadManagementScreenBase.SetIdOfSquadToManageBP
// 0x0008 (0x0008 - 0x0000)
struct FortSquadManagementScreenBase_SetIdOfSquadToManageBP final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadManagementScreenBase_SetIdOfSquadToManageBP) == 0x000004, "Wrong alignment on FortSquadManagementScreenBase_SetIdOfSquadToManageBP");
static_assert(sizeof(FortSquadManagementScreenBase_SetIdOfSquadToManageBP) == 0x000008, "Wrong size on FortSquadManagementScreenBase_SetIdOfSquadToManageBP");
static_assert(offsetof(FortSquadManagementScreenBase_SetIdOfSquadToManageBP, SquadId) == 0x000000, "Member 'FortSquadManagementScreenBase_SetIdOfSquadToManageBP::SquadId' has a wrong offset!");

// Function FortniteUI.FortSquadManagementScreenBase.GetIdOfSquadToManageBP
// 0x0008 (0x0008 - 0x0000)
struct FortSquadManagementScreenBase_GetIdOfSquadToManageBP final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadManagementScreenBase_GetIdOfSquadToManageBP) == 0x000004, "Wrong alignment on FortSquadManagementScreenBase_GetIdOfSquadToManageBP");
static_assert(sizeof(FortSquadManagementScreenBase_GetIdOfSquadToManageBP) == 0x000008, "Wrong size on FortSquadManagementScreenBase_GetIdOfSquadToManageBP");
static_assert(offsetof(FortSquadManagementScreenBase_GetIdOfSquadToManageBP, ReturnValue) == 0x000000, "Member 'FortSquadManagementScreenBase_GetIdOfSquadToManageBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadManagementScreenBase.TryGetAttributeValueFromSquad
// 0x0030 (0x0030 - 0x0000)
struct FortSquadManagementScreenBase_TryGetAttributeValueFromSquad final
{
public:
	float                                         OutValue;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAttribute                     Attribute;                                         // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadManagementScreenBase_TryGetAttributeValueFromSquad) == 0x000008, "Wrong alignment on FortSquadManagementScreenBase_TryGetAttributeValueFromSquad");
static_assert(sizeof(FortSquadManagementScreenBase_TryGetAttributeValueFromSquad) == 0x000030, "Wrong size on FortSquadManagementScreenBase_TryGetAttributeValueFromSquad");
static_assert(offsetof(FortSquadManagementScreenBase_TryGetAttributeValueFromSquad, OutValue) == 0x000000, "Member 'FortSquadManagementScreenBase_TryGetAttributeValueFromSquad::OutValue' has a wrong offset!");
static_assert(offsetof(FortSquadManagementScreenBase_TryGetAttributeValueFromSquad, Attribute) == 0x000008, "Member 'FortSquadManagementScreenBase_TryGetAttributeValueFromSquad::Attribute' has a wrong offset!");
static_assert(offsetof(FortSquadManagementScreenBase_TryGetAttributeValueFromSquad, ReturnValue) == 0x000028, "Member 'FortSquadManagementScreenBase_TryGetAttributeValueFromSquad::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadManagementScreenBase.TryGetSquadMainAttribute
// 0x0028 (0x0028 - 0x0000)
struct FortSquadManagementScreenBase_TryGetSquadMainAttribute final
{
public:
	struct FGameplayAttribute                     OutGameplayAttribute;                              // 0x0000(0x0020)(Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadManagementScreenBase_TryGetSquadMainAttribute) == 0x000008, "Wrong alignment on FortSquadManagementScreenBase_TryGetSquadMainAttribute");
static_assert(sizeof(FortSquadManagementScreenBase_TryGetSquadMainAttribute) == 0x000028, "Wrong size on FortSquadManagementScreenBase_TryGetSquadMainAttribute");
static_assert(offsetof(FortSquadManagementScreenBase_TryGetSquadMainAttribute, OutGameplayAttribute) == 0x000000, "Member 'FortSquadManagementScreenBase_TryGetSquadMainAttribute::OutGameplayAttribute' has a wrong offset!");
static_assert(offsetof(FortSquadManagementScreenBase_TryGetSquadMainAttribute, ReturnValue) == 0x000020, "Member 'FortSquadManagementScreenBase_TryGetSquadMainAttribute::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadManagementScreenBase.TryGetSquadTeamAttribute
// 0x0028 (0x0028 - 0x0000)
struct FortSquadManagementScreenBase_TryGetSquadTeamAttribute final
{
public:
	struct FGameplayAttribute                     OutGameplayAttribute;                              // 0x0000(0x0020)(Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadManagementScreenBase_TryGetSquadTeamAttribute) == 0x000008, "Wrong alignment on FortSquadManagementScreenBase_TryGetSquadTeamAttribute");
static_assert(sizeof(FortSquadManagementScreenBase_TryGetSquadTeamAttribute) == 0x000028, "Wrong size on FortSquadManagementScreenBase_TryGetSquadTeamAttribute");
static_assert(offsetof(FortSquadManagementScreenBase_TryGetSquadTeamAttribute, OutGameplayAttribute) == 0x000000, "Member 'FortSquadManagementScreenBase_TryGetSquadTeamAttribute::OutGameplayAttribute' has a wrong offset!");
static_assert(offsetof(FortSquadManagementScreenBase_TryGetSquadTeamAttribute, ReturnValue) == 0x000020, "Member 'FortSquadManagementScreenBase_TryGetSquadTeamAttribute::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadManagementScreenBase.TryGetStaticSquadDataBP
// 0x0090 (0x0090 - 0x0000)
struct FortSquadManagementScreenBase_TryGetStaticSquadDataBP final
{
public:
	struct FHomebaseSquad                         OutSquadData;                                      // 0x0000(0x0088)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadManagementScreenBase_TryGetStaticSquadDataBP) == 0x000008, "Wrong alignment on FortSquadManagementScreenBase_TryGetStaticSquadDataBP");
static_assert(sizeof(FortSquadManagementScreenBase_TryGetStaticSquadDataBP) == 0x000090, "Wrong size on FortSquadManagementScreenBase_TryGetStaticSquadDataBP");
static_assert(offsetof(FortSquadManagementScreenBase_TryGetStaticSquadDataBP, OutSquadData) == 0x000000, "Member 'FortSquadManagementScreenBase_TryGetStaticSquadDataBP::OutSquadData' has a wrong offset!");
static_assert(offsetof(FortSquadManagementScreenBase_TryGetStaticSquadDataBP, ReturnValue) == 0x000088, "Member 'FortSquadManagementScreenBase_TryGetStaticSquadDataBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortComparisonResultIndicator.SetComparisonResult
// 0x0001 (0x0001 - 0x0000)
struct FortComparisonResultIndicator_SetComparisonResult final
{
public:
	EFortBuffState                                Param_ComparisonResult;                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortComparisonResultIndicator_SetComparisonResult) == 0x000001, "Wrong alignment on FortComparisonResultIndicator_SetComparisonResult");
static_assert(sizeof(FortComparisonResultIndicator_SetComparisonResult) == 0x000001, "Wrong size on FortComparisonResultIndicator_SetComparisonResult");
static_assert(offsetof(FortComparisonResultIndicator_SetComparisonResult, Param_ComparisonResult) == 0x000000, "Member 'FortComparisonResultIndicator_SetComparisonResult::Param_ComparisonResult' has a wrong offset!");

// Function FortniteUI.FortConfirmationWindow.ProcessResult
// 0x0001 (0x0001 - 0x0000)
struct FortConfirmationWindow_ProcessResult final
{
public:
	EFortDialogResult                             DialogResult;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortConfirmationWindow_ProcessResult) == 0x000001, "Wrong alignment on FortConfirmationWindow_ProcessResult");
static_assert(sizeof(FortConfirmationWindow_ProcessResult) == 0x000001, "Wrong size on FortConfirmationWindow_ProcessResult");
static_assert(offsetof(FortConfirmationWindow_ProcessResult, DialogResult) == 0x000000, "Member 'FortConfirmationWindow_ProcessResult::DialogResult' has a wrong offset!");

// Function FortniteUI.FortConfirmationWindow.ShowConfirmation
// 0x0150 (0x0150 - 0x0000)
struct FortConfirmationWindow_ShowConfirmation final
{
public:
	struct FFortDialogDescription                 Description;                                       // 0x0000(0x0150)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortConfirmationWindow_ShowConfirmation) == 0x000010, "Wrong alignment on FortConfirmationWindow_ShowConfirmation");
static_assert(sizeof(FortConfirmationWindow_ShowConfirmation) == 0x000150, "Wrong size on FortConfirmationWindow_ShowConfirmation");
static_assert(offsetof(FortConfirmationWindow_ShowConfirmation, Description) == 0x000000, "Member 'FortConfirmationWindow_ShowConfirmation::Description' has a wrong offset!");

// Function FortniteUI.FortHomebaseNodeItemUtilities.AreAnyHomebaseNodeItemsUnseenForSquadId
// 0x0018 (0x0018 - 0x0000)
struct FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadId final
{
public:
	class AFortPlayerController*                  FortPC;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SquadId;                                           // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadId) == 0x000008, "Wrong alignment on FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadId");
static_assert(sizeof(FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadId) == 0x000018, "Wrong size on FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadId");
static_assert(offsetof(FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadId, FortPC) == 0x000000, "Member 'FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadId::FortPC' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadId, SquadId) == 0x000008, "Member 'FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadId::SquadId' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadId, ReturnValue) == 0x000010, "Member 'FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadId::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseNodeItemUtilities.AreAnyHomebaseNodeItemsUnseenForSquadType
// 0x0010 (0x0010 - 0x0000)
struct FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadType final
{
public:
	class AFortPlayerController*                  FortPC;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortHomebaseSquadType                        SquadType;                                         // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadType) == 0x000008, "Wrong alignment on FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadType");
static_assert(sizeof(FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadType) == 0x000010, "Wrong size on FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadType");
static_assert(offsetof(FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadType, FortPC) == 0x000000, "Member 'FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadType::FortPC' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadType, SquadType) == 0x000008, "Member 'FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadType::SquadType' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadType, ReturnValue) == 0x000009, "Member 'FortHomebaseNodeItemUtilities_AreAnyHomebaseNodeItemsUnseenForSquadType::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseNodeItemUtilities.GetHomebaseNodeItem
// 0x0018 (0x0018 - 0x0000)
struct FortHomebaseNodeItemUtilities_GetHomebaseNodeItem final
{
public:
	class AFortPlayerController*                  FortPC;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   NodeID;                                            // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortHomebaseNodeItem*                  ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItem) == 0x000008, "Wrong alignment on FortHomebaseNodeItemUtilities_GetHomebaseNodeItem");
static_assert(sizeof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItem) == 0x000018, "Wrong size on FortHomebaseNodeItemUtilities_GetHomebaseNodeItem");
static_assert(offsetof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItem, FortPC) == 0x000000, "Member 'FortHomebaseNodeItemUtilities_GetHomebaseNodeItem::FortPC' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItem, NodeID) == 0x000008, "Member 'FortHomebaseNodeItemUtilities_GetHomebaseNodeItem::NodeID' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItem, ReturnValue) == 0x000010, "Member 'FortHomebaseNodeItemUtilities_GetHomebaseNodeItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseNodeItemUtilities.GetHomebaseNodeItemForSquadSlot
// 0x0020 (0x0020 - 0x0000)
struct FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForSquadSlot final
{
public:
	class AFortPlayerController*                  FortPC;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SquadId;                                           // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SquadSlot;                                         // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHomebaseNodeItem*                  ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForSquadSlot) == 0x000008, "Wrong alignment on FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForSquadSlot");
static_assert(sizeof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForSquadSlot) == 0x000020, "Wrong size on FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForSquadSlot");
static_assert(offsetof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForSquadSlot, FortPC) == 0x000000, "Member 'FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForSquadSlot::FortPC' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForSquadSlot, SquadId) == 0x000008, "Member 'FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForSquadSlot::SquadId' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForSquadSlot, SquadSlot) == 0x000010, "Member 'FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForSquadSlot::SquadSlot' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForSquadSlot, ReturnValue) == 0x000018, "Member 'FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForSquadSlot::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseNodeItemUtilities.GetHomebaseNodeItemForTagContainer
// 0x0030 (0x0030 - 0x0000)
struct FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForTagContainer final
{
public:
	class AFortPlayerController*                  FortPC;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  Tags;                                              // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFortHomebaseNodeItem*                  ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForTagContainer) == 0x000008, "Wrong alignment on FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForTagContainer");
static_assert(sizeof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForTagContainer) == 0x000030, "Wrong size on FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForTagContainer");
static_assert(offsetof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForTagContainer, FortPC) == 0x000000, "Member 'FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForTagContainer::FortPC' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForTagContainer, Tags) == 0x000008, "Member 'FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForTagContainer::Tags' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForTagContainer, ReturnValue) == 0x000028, "Member 'FortHomebaseNodeItemUtilities_GetHomebaseNodeItemForTagContainer::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseNodeItemUtilities.GetHomebaseNodeItemNameForTagContainer
// 0x0030 (0x0030 - 0x0000)
struct FortHomebaseNodeItemUtilities_GetHomebaseNodeItemNameForTagContainer final
{
public:
	class AFortPlayerController*                  FortPC;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  Tags;                                              // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItemNameForTagContainer) == 0x000008, "Wrong alignment on FortHomebaseNodeItemUtilities_GetHomebaseNodeItemNameForTagContainer");
static_assert(sizeof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItemNameForTagContainer) == 0x000030, "Wrong size on FortHomebaseNodeItemUtilities_GetHomebaseNodeItemNameForTagContainer");
static_assert(offsetof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItemNameForTagContainer, FortPC) == 0x000000, "Member 'FortHomebaseNodeItemUtilities_GetHomebaseNodeItemNameForTagContainer::FortPC' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItemNameForTagContainer, Tags) == 0x000008, "Member 'FortHomebaseNodeItemUtilities_GetHomebaseNodeItemNameForTagContainer::Tags' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItemNameForTagContainer, ReturnValue) == 0x000028, "Member 'FortHomebaseNodeItemUtilities_GetHomebaseNodeItemNameForTagContainer::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseNodeItemUtilities.GetHomebaseNodeItems
// 0x0018 (0x0018 - 0x0000)
struct FortHomebaseNodeItemUtilities_GetHomebaseNodeItems final
{
public:
	class AFortPlayerController*                  FortPC;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortHomebaseNodeItem*>          NodeItems;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItems) == 0x000008, "Wrong alignment on FortHomebaseNodeItemUtilities_GetHomebaseNodeItems");
static_assert(sizeof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItems) == 0x000018, "Wrong size on FortHomebaseNodeItemUtilities_GetHomebaseNodeItems");
static_assert(offsetof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItems, FortPC) == 0x000000, "Member 'FortHomebaseNodeItemUtilities_GetHomebaseNodeItems::FortPC' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_GetHomebaseNodeItems, NodeItems) == 0x000008, "Member 'FortHomebaseNodeItemUtilities_GetHomebaseNodeItems::NodeItems' has a wrong offset!");

// Function FortniteUI.FortHomebaseNodeItemUtilities.GetHomebaseNodePageNames
// 0x0010 (0x0010 - 0x0000)
struct FortHomebaseNodeItemUtilities_GetHomebaseNodePageNames final
{
public:
	TArray<class FName>                           NodePages;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseNodeItemUtilities_GetHomebaseNodePageNames) == 0x000008, "Wrong alignment on FortHomebaseNodeItemUtilities_GetHomebaseNodePageNames");
static_assert(sizeof(FortHomebaseNodeItemUtilities_GetHomebaseNodePageNames) == 0x000010, "Wrong size on FortHomebaseNodeItemUtilities_GetHomebaseNodePageNames");
static_assert(offsetof(FortHomebaseNodeItemUtilities_GetHomebaseNodePageNames, NodePages) == 0x000000, "Member 'FortHomebaseNodeItemUtilities_GetHomebaseNodePageNames::NodePages' has a wrong offset!");

// Function FortniteUI.FortHomebaseNodeItemUtilities.IsHomebaseNodeItemUnseenForTagContainer
// 0x0030 (0x0030 - 0x0000)
struct FortHomebaseNodeItemUtilities_IsHomebaseNodeItemUnseenForTagContainer final
{
public:
	class AFortPlayerController*                  FortPC;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  Tags;                                              // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHomebaseNodeItemUtilities_IsHomebaseNodeItemUnseenForTagContainer) == 0x000008, "Wrong alignment on FortHomebaseNodeItemUtilities_IsHomebaseNodeItemUnseenForTagContainer");
static_assert(sizeof(FortHomebaseNodeItemUtilities_IsHomebaseNodeItemUnseenForTagContainer) == 0x000030, "Wrong size on FortHomebaseNodeItemUtilities_IsHomebaseNodeItemUnseenForTagContainer");
static_assert(offsetof(FortHomebaseNodeItemUtilities_IsHomebaseNodeItemUnseenForTagContainer, FortPC) == 0x000000, "Member 'FortHomebaseNodeItemUtilities_IsHomebaseNodeItemUnseenForTagContainer::FortPC' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_IsHomebaseNodeItemUnseenForTagContainer, Tags) == 0x000008, "Member 'FortHomebaseNodeItemUtilities_IsHomebaseNodeItemUnseenForTagContainer::Tags' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_IsHomebaseNodeItemUnseenForTagContainer, ReturnValue) == 0x000028, "Member 'FortHomebaseNodeItemUtilities_IsHomebaseNodeItemUnseenForTagContainer::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseNodeItemUtilities.IsSquadSlotUnseen
// 0x0018 (0x0018 - 0x0000)
struct FortHomebaseNodeItemUtilities_IsSquadSlotUnseen final
{
public:
	class AFortPlayerController*                  FortPC;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SquadId;                                           // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SquadSlot;                                         // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHomebaseNodeItemUtilities_IsSquadSlotUnseen) == 0x000008, "Wrong alignment on FortHomebaseNodeItemUtilities_IsSquadSlotUnseen");
static_assert(sizeof(FortHomebaseNodeItemUtilities_IsSquadSlotUnseen) == 0x000018, "Wrong size on FortHomebaseNodeItemUtilities_IsSquadSlotUnseen");
static_assert(offsetof(FortHomebaseNodeItemUtilities_IsSquadSlotUnseen, FortPC) == 0x000000, "Member 'FortHomebaseNodeItemUtilities_IsSquadSlotUnseen::FortPC' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_IsSquadSlotUnseen, SquadId) == 0x000008, "Member 'FortHomebaseNodeItemUtilities_IsSquadSlotUnseen::SquadId' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_IsSquadSlotUnseen, SquadSlot) == 0x000010, "Member 'FortHomebaseNodeItemUtilities_IsSquadSlotUnseen::SquadSlot' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_IsSquadSlotUnseen, ReturnValue) == 0x000014, "Member 'FortHomebaseNodeItemUtilities_IsSquadSlotUnseen::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseNodeItemUtilities.TryGetHomebaseNodeState
// 0x0020 (0x0020 - 0x0000)
struct FortHomebaseNodeItemUtilities_TryGetHomebaseNodeState final
{
public:
	const class UWidget*                          Widget;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   NodeID;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHomebaseNodeState                     OutNodeState;                                      // 0x0010(0x0008)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHomebaseNodeItemUtilities_TryGetHomebaseNodeState) == 0x000008, "Wrong alignment on FortHomebaseNodeItemUtilities_TryGetHomebaseNodeState");
static_assert(sizeof(FortHomebaseNodeItemUtilities_TryGetHomebaseNodeState) == 0x000020, "Wrong size on FortHomebaseNodeItemUtilities_TryGetHomebaseNodeState");
static_assert(offsetof(FortHomebaseNodeItemUtilities_TryGetHomebaseNodeState, Widget) == 0x000000, "Member 'FortHomebaseNodeItemUtilities_TryGetHomebaseNodeState::Widget' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_TryGetHomebaseNodeState, NodeID) == 0x000008, "Member 'FortHomebaseNodeItemUtilities_TryGetHomebaseNodeState::NodeID' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_TryGetHomebaseNodeState, OutNodeState) == 0x000010, "Member 'FortHomebaseNodeItemUtilities_TryGetHomebaseNodeState::OutNodeState' has a wrong offset!");
static_assert(offsetof(FortHomebaseNodeItemUtilities_TryGetHomebaseNodeState, ReturnValue) == 0x000018, "Member 'FortHomebaseNodeItemUtilities_TryGetHomebaseNodeState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortCraftingBarWidget.HandlePlayerStoppedCrafting
// 0x0002 (0x0002 - 0x0000)
struct FortCraftingBarWidget_HandlePlayerStoppedCrafting final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortCraftFailCause                           CraftFailureCause;                                 // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCraftingBarWidget_HandlePlayerStoppedCrafting) == 0x000001, "Wrong alignment on FortCraftingBarWidget_HandlePlayerStoppedCrafting");
static_assert(sizeof(FortCraftingBarWidget_HandlePlayerStoppedCrafting) == 0x000002, "Wrong size on FortCraftingBarWidget_HandlePlayerStoppedCrafting");
static_assert(offsetof(FortCraftingBarWidget_HandlePlayerStoppedCrafting, bSuccess) == 0x000000, "Member 'FortCraftingBarWidget_HandlePlayerStoppedCrafting::bSuccess' has a wrong offset!");
static_assert(offsetof(FortCraftingBarWidget_HandlePlayerStoppedCrafting, CraftFailureCause) == 0x000001, "Member 'FortCraftingBarWidget_HandlePlayerStoppedCrafting::CraftFailureCause' has a wrong offset!");

// Function FortniteUI.FortCraftingBarWidget.SetHideCraftingBar
// 0x0001 (0x0001 - 0x0000)
struct FortCraftingBarWidget_SetHideCraftingBar final
{
public:
	bool                                          bInHideCraftBar;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortCraftingBarWidget_SetHideCraftingBar) == 0x000001, "Wrong alignment on FortCraftingBarWidget_SetHideCraftingBar");
static_assert(sizeof(FortCraftingBarWidget_SetHideCraftingBar) == 0x000001, "Wrong size on FortCraftingBarWidget_SetHideCraftingBar");
static_assert(offsetof(FortCraftingBarWidget_SetHideCraftingBar, bInHideCraftBar) == 0x000000, "Member 'FortCraftingBarWidget_SetHideCraftingBar::bInHideCraftBar' has a wrong offset!");

// Function FortniteUI.FortDailyRewards.ClaimResultReceived
// 0x0010 (0x0010 - 0x0000)
struct FortDailyRewards_ClaimResultReceived final
{
public:
	TArray<struct FFortItemInstanceQuantityPair>  Loot;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDailyRewards_ClaimResultReceived) == 0x000008, "Wrong alignment on FortDailyRewards_ClaimResultReceived");
static_assert(sizeof(FortDailyRewards_ClaimResultReceived) == 0x000010, "Wrong size on FortDailyRewards_ClaimResultReceived");
static_assert(offsetof(FortDailyRewards_ClaimResultReceived, Loot) == 0x000000, "Member 'FortDailyRewards_ClaimResultReceived::Loot' has a wrong offset!");

// Function FortniteUI.FortDailyRewards.TryGetDailyRewardsData
// 0x0028 (0x0028 - 0x0000)
struct FortDailyRewards_TryGetDailyRewardsData final
{
public:
	struct FFortDailyRewardsData                  OutDailyRewardsData;                               // 0x0000(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	int32                                         ItemCardsPerSchedule;                              // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinEpicRewards;                                    // 0x001C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortDailyRewards_TryGetDailyRewardsData) == 0x000008, "Wrong alignment on FortDailyRewards_TryGetDailyRewardsData");
static_assert(sizeof(FortDailyRewards_TryGetDailyRewardsData) == 0x000028, "Wrong size on FortDailyRewards_TryGetDailyRewardsData");
static_assert(offsetof(FortDailyRewards_TryGetDailyRewardsData, OutDailyRewardsData) == 0x000000, "Member 'FortDailyRewards_TryGetDailyRewardsData::OutDailyRewardsData' has a wrong offset!");
static_assert(offsetof(FortDailyRewards_TryGetDailyRewardsData, ItemCardsPerSchedule) == 0x000018, "Member 'FortDailyRewards_TryGetDailyRewardsData::ItemCardsPerSchedule' has a wrong offset!");
static_assert(offsetof(FortDailyRewards_TryGetDailyRewardsData, MinEpicRewards) == 0x00001C, "Member 'FortDailyRewards_TryGetDailyRewardsData::MinEpicRewards' has a wrong offset!");
static_assert(offsetof(FortDailyRewards_TryGetDailyRewardsData, ReturnValue) == 0x000020, "Member 'FortDailyRewards_TryGetDailyRewardsData::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMissionSelect.NavigateMissionTiles
// 0x0002 (0x0002 - 0x0000)
struct FortMissionSelect_NavigateMissionTiles final
{
public:
	EUINavigation                                 Direction;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMissionSelect_NavigateMissionTiles) == 0x000001, "Wrong alignment on FortMissionSelect_NavigateMissionTiles");
static_assert(sizeof(FortMissionSelect_NavigateMissionTiles) == 0x000002, "Wrong size on FortMissionSelect_NavigateMissionTiles");
static_assert(offsetof(FortMissionSelect_NavigateMissionTiles, Direction) == 0x000000, "Member 'FortMissionSelect_NavigateMissionTiles::Direction' has a wrong offset!");
static_assert(offsetof(FortMissionSelect_NavigateMissionTiles, ReturnValue) == 0x000001, "Member 'FortMissionSelect_NavigateMissionTiles::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDefenderConfigPanel.GetAmmoCountFromDefender
// 0x0010 (0x0010 - 0x0000)
struct FortDefenderConfigPanel_GetAmmoCountFromDefender final
{
public:
	const class UFortWorldItemDefinition*         AmmoItemDef;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortDefenderConfigPanel_GetAmmoCountFromDefender) == 0x000008, "Wrong alignment on FortDefenderConfigPanel_GetAmmoCountFromDefender");
static_assert(sizeof(FortDefenderConfigPanel_GetAmmoCountFromDefender) == 0x000010, "Wrong size on FortDefenderConfigPanel_GetAmmoCountFromDefender");
static_assert(offsetof(FortDefenderConfigPanel_GetAmmoCountFromDefender, AmmoItemDef) == 0x000000, "Member 'FortDefenderConfigPanel_GetAmmoCountFromDefender::AmmoItemDef' has a wrong offset!");
static_assert(offsetof(FortDefenderConfigPanel_GetAmmoCountFromDefender, ReturnValue) == 0x000008, "Member 'FortDefenderConfigPanel_GetAmmoCountFromDefender::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDefenderConfigPanel.GetAmmoCountFromPlayer
// 0x0010 (0x0010 - 0x0000)
struct FortDefenderConfigPanel_GetAmmoCountFromPlayer final
{
public:
	const class UFortWorldItemDefinition*         AmmoItemDef;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortDefenderConfigPanel_GetAmmoCountFromPlayer) == 0x000008, "Wrong alignment on FortDefenderConfigPanel_GetAmmoCountFromPlayer");
static_assert(sizeof(FortDefenderConfigPanel_GetAmmoCountFromPlayer) == 0x000010, "Wrong size on FortDefenderConfigPanel_GetAmmoCountFromPlayer");
static_assert(offsetof(FortDefenderConfigPanel_GetAmmoCountFromPlayer, AmmoItemDef) == 0x000000, "Member 'FortDefenderConfigPanel_GetAmmoCountFromPlayer::AmmoItemDef' has a wrong offset!");
static_assert(offsetof(FortDefenderConfigPanel_GetAmmoCountFromPlayer, ReturnValue) == 0x000008, "Member 'FortDefenderConfigPanel_GetAmmoCountFromPlayer::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDefenderConfigPanel.GetCompatibleAmmo
// 0x0008 (0x0008 - 0x0000)
struct FortDefenderConfigPanel_GetCompatibleAmmo final
{
public:
	class UFortWorldItem*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDefenderConfigPanel_GetCompatibleAmmo) == 0x000008, "Wrong alignment on FortDefenderConfigPanel_GetCompatibleAmmo");
static_assert(sizeof(FortDefenderConfigPanel_GetCompatibleAmmo) == 0x000008, "Wrong size on FortDefenderConfigPanel_GetCompatibleAmmo");
static_assert(offsetof(FortDefenderConfigPanel_GetCompatibleAmmo, ReturnValue) == 0x000000, "Member 'FortDefenderConfigPanel_GetCompatibleAmmo::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDefenderConfigPanel.GetCompatibleAmmoDef
// 0x0008 (0x0008 - 0x0000)
struct FortDefenderConfigPanel_GetCompatibleAmmoDef final
{
public:
	class UFortWorldItemDefinition*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDefenderConfigPanel_GetCompatibleAmmoDef) == 0x000008, "Wrong alignment on FortDefenderConfigPanel_GetCompatibleAmmoDef");
static_assert(sizeof(FortDefenderConfigPanel_GetCompatibleAmmoDef) == 0x000008, "Wrong size on FortDefenderConfigPanel_GetCompatibleAmmoDef");
static_assert(offsetof(FortDefenderConfigPanel_GetCompatibleAmmoDef, ReturnValue) == 0x000000, "Member 'FortDefenderConfigPanel_GetCompatibleAmmoDef::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDefenderConfigPanel.GetDefenderPawnWeaponItem
// 0x0010 (0x0010 - 0x0000)
struct FortDefenderConfigPanel_GetDefenderPawnWeaponItem final
{
public:
	const class AFortAIPawn*                      DefenderPawn;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortWorldItem*                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDefenderConfigPanel_GetDefenderPawnWeaponItem) == 0x000008, "Wrong alignment on FortDefenderConfigPanel_GetDefenderPawnWeaponItem");
static_assert(sizeof(FortDefenderConfigPanel_GetDefenderPawnWeaponItem) == 0x000010, "Wrong size on FortDefenderConfigPanel_GetDefenderPawnWeaponItem");
static_assert(offsetof(FortDefenderConfigPanel_GetDefenderPawnWeaponItem, DefenderPawn) == 0x000000, "Member 'FortDefenderConfigPanel_GetDefenderPawnWeaponItem::DefenderPawn' has a wrong offset!");
static_assert(offsetof(FortDefenderConfigPanel_GetDefenderPawnWeaponItem, ReturnValue) == 0x000008, "Member 'FortDefenderConfigPanel_GetDefenderPawnWeaponItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDefenderConfigPanel.GetSourceSchematic
// 0x0010 (0x0010 - 0x0000)
struct FortDefenderConfigPanel_GetSourceSchematic final
{
public:
	const class UFortWorldItemDefinition*         ItemDefUsedForCrafting;                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortSchematicItemDefinition*           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDefenderConfigPanel_GetSourceSchematic) == 0x000008, "Wrong alignment on FortDefenderConfigPanel_GetSourceSchematic");
static_assert(sizeof(FortDefenderConfigPanel_GetSourceSchematic) == 0x000010, "Wrong size on FortDefenderConfigPanel_GetSourceSchematic");
static_assert(offsetof(FortDefenderConfigPanel_GetSourceSchematic, ItemDefUsedForCrafting) == 0x000000, "Member 'FortDefenderConfigPanel_GetSourceSchematic::ItemDefUsedForCrafting' has a wrong offset!");
static_assert(offsetof(FortDefenderConfigPanel_GetSourceSchematic, ReturnValue) == 0x000008, "Member 'FortDefenderConfigPanel_GetSourceSchematic::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDefenderConfigPanel.HasAnyDefenders
// 0x0001 (0x0001 - 0x0000)
struct FortDefenderConfigPanel_HasAnyDefenders final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDefenderConfigPanel_HasAnyDefenders) == 0x000001, "Wrong alignment on FortDefenderConfigPanel_HasAnyDefenders");
static_assert(sizeof(FortDefenderConfigPanel_HasAnyDefenders) == 0x000001, "Wrong size on FortDefenderConfigPanel_HasAnyDefenders");
static_assert(offsetof(FortDefenderConfigPanel_HasAnyDefenders, ReturnValue) == 0x000000, "Member 'FortDefenderConfigPanel_HasAnyDefenders::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDefenderConfigPanel.HasWeaponForSelectedDefender
// 0x0001 (0x0001 - 0x0000)
struct FortDefenderConfigPanel_HasWeaponForSelectedDefender final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDefenderConfigPanel_HasWeaponForSelectedDefender) == 0x000001, "Wrong alignment on FortDefenderConfigPanel_HasWeaponForSelectedDefender");
static_assert(sizeof(FortDefenderConfigPanel_HasWeaponForSelectedDefender) == 0x000001, "Wrong size on FortDefenderConfigPanel_HasWeaponForSelectedDefender");
static_assert(offsetof(FortDefenderConfigPanel_HasWeaponForSelectedDefender, ReturnValue) == 0x000000, "Member 'FortDefenderConfigPanel_HasWeaponForSelectedDefender::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDefenderConfigPanel.IsWeaponSelectionValid
// 0x0001 (0x0001 - 0x0000)
struct FortDefenderConfigPanel_IsWeaponSelectionValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDefenderConfigPanel_IsWeaponSelectionValid) == 0x000001, "Wrong alignment on FortDefenderConfigPanel_IsWeaponSelectionValid");
static_assert(sizeof(FortDefenderConfigPanel_IsWeaponSelectionValid) == 0x000001, "Wrong size on FortDefenderConfigPanel_IsWeaponSelectionValid");
static_assert(offsetof(FortDefenderConfigPanel_IsWeaponSelectionValid, ReturnValue) == 0x000000, "Member 'FortDefenderConfigPanel_IsWeaponSelectionValid::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDefenderConfigPanel.SpawnDefender
// 0x0001 (0x0001 - 0x0000)
struct FortDefenderConfigPanel_SpawnDefender final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDefenderConfigPanel_SpawnDefender) == 0x000001, "Wrong alignment on FortDefenderConfigPanel_SpawnDefender");
static_assert(sizeof(FortDefenderConfigPanel_SpawnDefender) == 0x000001, "Wrong size on FortDefenderConfigPanel_SpawnDefender");
static_assert(offsetof(FortDefenderConfigPanel_SpawnDefender, ReturnValue) == 0x000000, "Member 'FortDefenderConfigPanel_SpawnDefender::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDefenderConfigPanel.UnsummonDefender
// 0x0001 (0x0001 - 0x0000)
struct FortDefenderConfigPanel_UnsummonDefender final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDefenderConfigPanel_UnsummonDefender) == 0x000001, "Wrong alignment on FortDefenderConfigPanel_UnsummonDefender");
static_assert(sizeof(FortDefenderConfigPanel_UnsummonDefender) == 0x000001, "Wrong size on FortDefenderConfigPanel_UnsummonDefender");
static_assert(offsetof(FortDefenderConfigPanel_UnsummonDefender, ReturnValue) == 0x000000, "Member 'FortDefenderConfigPanel_UnsummonDefender::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDefenderItemTileButton.HandleEquipSlotChanged
// 0x0004 (0x0004 - 0x0000)
struct FortDefenderItemTileButton_HandleEquipSlotChanged final
{
public:
	int32                                         EquipSlot;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDefenderItemTileButton_HandleEquipSlotChanged) == 0x000004, "Wrong alignment on FortDefenderItemTileButton_HandleEquipSlotChanged");
static_assert(sizeof(FortDefenderItemTileButton_HandleEquipSlotChanged) == 0x000004, "Wrong size on FortDefenderItemTileButton_HandleEquipSlotChanged");
static_assert(offsetof(FortDefenderItemTileButton_HandleEquipSlotChanged, EquipSlot) == 0x000000, "Member 'FortDefenderItemTileButton_HandleEquipSlotChanged::EquipSlot' has a wrong offset!");

// Function FortniteUI.FortItemTileView.HandleItemWidgetCreated
// 0x0008 (0x0008 - 0x0000)
struct FortItemTileView_HandleItemWidgetCreated final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemTileView_HandleItemWidgetCreated) == 0x000008, "Wrong alignment on FortItemTileView_HandleItemWidgetCreated");
static_assert(sizeof(FortItemTileView_HandleItemWidgetCreated) == 0x000008, "Wrong size on FortItemTileView_HandleItemWidgetCreated");
static_assert(offsetof(FortItemTileView_HandleItemWidgetCreated, Widget) == 0x000000, "Member 'FortItemTileView_HandleItemWidgetCreated::Widget' has a wrong offset!");

// Function FortniteUI.FortItemTileView.SetFilter
// 0x0060 (0x0060 - 0x0000)
struct FortItemTileView_SetFilter final
{
public:
	struct FFortItemFilterDefinition              Param_Filter;                                      // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemTileView_SetFilter) == 0x000010, "Wrong alignment on FortItemTileView_SetFilter");
static_assert(sizeof(FortItemTileView_SetFilter) == 0x000060, "Wrong size on FortItemTileView_SetFilter");
static_assert(offsetof(FortItemTileView_SetFilter, Param_Filter) == 0x000000, "Member 'FortItemTileView_SetFilter::Param_Filter' has a wrong offset!");

// Function FortniteUI.FortItemTileView.SetFilterAndSorter
// 0x00B0 (0x00B0 - 0x0000)
struct FortItemTileView_SetFilterAndSorter final
{
public:
	struct FFortItemFilterDefinition              Param_Filter;                                      // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFortItemSorterDefinition              Param_Sorter;                                      // 0x0060(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemTileView_SetFilterAndSorter) == 0x000010, "Wrong alignment on FortItemTileView_SetFilterAndSorter");
static_assert(sizeof(FortItemTileView_SetFilterAndSorter) == 0x0000B0, "Wrong size on FortItemTileView_SetFilterAndSorter");
static_assert(offsetof(FortItemTileView_SetFilterAndSorter, Param_Filter) == 0x000000, "Member 'FortItemTileView_SetFilterAndSorter::Param_Filter' has a wrong offset!");
static_assert(offsetof(FortItemTileView_SetFilterAndSorter, Param_Sorter) == 0x000060, "Member 'FortItemTileView_SetFilterAndSorter::Param_Sorter' has a wrong offset!");

// Function FortniteUI.FortItemTileView.SetItemViewContext
// 0x0010 (0x0010 - 0x0000)
struct FortItemTileView_SetItemViewContext final
{
public:
	TScriptInterface<class IFortItemViewContextInterface> Param_ItemViewContext;                             // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemTileView_SetItemViewContext) == 0x000008, "Wrong alignment on FortItemTileView_SetItemViewContext");
static_assert(sizeof(FortItemTileView_SetItemViewContext) == 0x000010, "Wrong size on FortItemTileView_SetItemViewContext");
static_assert(offsetof(FortItemTileView_SetItemViewContext, Param_ItemViewContext) == 0x000000, "Member 'FortItemTileView_SetItemViewContext::Param_ItemViewContext' has a wrong offset!");

// Function FortniteUI.FortItemTileView.SetSorter
// 0x0050 (0x0050 - 0x0000)
struct FortItemTileView_SetSorter final
{
public:
	struct FFortItemSorterDefinition              Param_Sorter;                                      // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemTileView_SetSorter) == 0x000010, "Wrong alignment on FortItemTileView_SetSorter");
static_assert(sizeof(FortItemTileView_SetSorter) == 0x000050, "Wrong size on FortItemTileView_SetSorter");
static_assert(offsetof(FortItemTileView_SetSorter, Param_Sorter) == 0x000000, "Member 'FortItemTileView_SetSorter::Param_Sorter' has a wrong offset!");

// Function FortniteUI.FortItemTileView.ContainsItem
// 0x0010 (0x0010 - 0x0000)
struct FortItemTileView_ContainsItem final
{
public:
	const class UFortItem*                        Item;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemTileView_ContainsItem) == 0x000008, "Wrong alignment on FortItemTileView_ContainsItem");
static_assert(sizeof(FortItemTileView_ContainsItem) == 0x000010, "Wrong size on FortItemTileView_ContainsItem");
static_assert(offsetof(FortItemTileView_ContainsItem, Item) == 0x000000, "Member 'FortItemTileView_ContainsItem::Item' has a wrong offset!");
static_assert(offsetof(FortItemTileView_ContainsItem, ReturnValue) == 0x000008, "Member 'FortItemTileView_ContainsItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMaterialProgressBar.SetBackgroundColor
// 0x0010 (0x0010 - 0x0000)
struct FortMaterialProgressBar_SetBackgroundColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMaterialProgressBar_SetBackgroundColor) == 0x000004, "Wrong alignment on FortMaterialProgressBar_SetBackgroundColor");
static_assert(sizeof(FortMaterialProgressBar_SetBackgroundColor) == 0x000010, "Wrong size on FortMaterialProgressBar_SetBackgroundColor");
static_assert(offsetof(FortMaterialProgressBar_SetBackgroundColor, Color) == 0x000000, "Member 'FortMaterialProgressBar_SetBackgroundColor::Color' has a wrong offset!");

// Function FortniteUI.FortMaterialProgressBar.SetProgressBarSectionColor
// 0x0018 (0x0018 - 0x0000)
struct FortMaterialProgressBar_SetProgressBarSectionColor final
{
public:
	EFortMaterialProgressBarSection               BarSection;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color;                                             // 0x0004(0x0010)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortMaterialProgressBarSectionColorNumber    ColorNumber;                                       // 0x0014(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortMaterialProgressBar_SetProgressBarSectionColor) == 0x000004, "Wrong alignment on FortMaterialProgressBar_SetProgressBarSectionColor");
static_assert(sizeof(FortMaterialProgressBar_SetProgressBarSectionColor) == 0x000018, "Wrong size on FortMaterialProgressBar_SetProgressBarSectionColor");
static_assert(offsetof(FortMaterialProgressBar_SetProgressBarSectionColor, BarSection) == 0x000000, "Member 'FortMaterialProgressBar_SetProgressBarSectionColor::BarSection' has a wrong offset!");
static_assert(offsetof(FortMaterialProgressBar_SetProgressBarSectionColor, Color) == 0x000004, "Member 'FortMaterialProgressBar_SetProgressBarSectionColor::Color' has a wrong offset!");
static_assert(offsetof(FortMaterialProgressBar_SetProgressBarSectionColor, ColorNumber) == 0x000014, "Member 'FortMaterialProgressBar_SetProgressBarSectionColor::ColorNumber' has a wrong offset!");

// Function FortniteUI.FortMaterialProgressBar.SetProgressBarSectionPercent
// 0x0008 (0x0008 - 0x0000)
struct FortMaterialProgressBar_SetProgressBarSectionPercent final
{
public:
	EFortMaterialProgressBarSection               BarSection;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Percent;                                           // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMaterialProgressBar_SetProgressBarSectionPercent) == 0x000004, "Wrong alignment on FortMaterialProgressBar_SetProgressBarSectionPercent");
static_assert(sizeof(FortMaterialProgressBar_SetProgressBarSectionPercent) == 0x000008, "Wrong size on FortMaterialProgressBar_SetProgressBarSectionPercent");
static_assert(offsetof(FortMaterialProgressBar_SetProgressBarSectionPercent, BarSection) == 0x000000, "Member 'FortMaterialProgressBar_SetProgressBarSectionPercent::BarSection' has a wrong offset!");
static_assert(offsetof(FortMaterialProgressBar_SetProgressBarSectionPercent, Percent) == 0x000004, "Member 'FortMaterialProgressBar_SetProgressBarSectionPercent::Percent' has a wrong offset!");

// Function FortniteUI.FortMaterialProgressBar.SetStyle
// 0x0008 (0x0008 - 0x0000)
struct FortMaterialProgressBar_SetStyle final
{
public:
	TSubclassOf<class UFortMaterialProgressBarStyle> BarStyle;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMaterialProgressBar_SetStyle) == 0x000008, "Wrong alignment on FortMaterialProgressBar_SetStyle");
static_assert(sizeof(FortMaterialProgressBar_SetStyle) == 0x000008, "Wrong size on FortMaterialProgressBar_SetStyle");
static_assert(offsetof(FortMaterialProgressBar_SetStyle, BarStyle) == 0x000000, "Member 'FortMaterialProgressBar_SetStyle::BarStyle' has a wrong offset!");

// Function FortniteUI.FortDefenderSlotItemPicker.HandleItemWidgetCreated
// 0x0008 (0x0008 - 0x0000)
struct FortDefenderSlotItemPicker_HandleItemWidgetCreated final
{
public:
	class UUserWidget*                            ItemWidget;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDefenderSlotItemPicker_HandleItemWidgetCreated) == 0x000008, "Wrong alignment on FortDefenderSlotItemPicker_HandleItemWidgetCreated");
static_assert(sizeof(FortDefenderSlotItemPicker_HandleItemWidgetCreated) == 0x000008, "Wrong size on FortDefenderSlotItemPicker_HandleItemWidgetCreated");
static_assert(offsetof(FortDefenderSlotItemPicker_HandleItemWidgetCreated, ItemWidget) == 0x000000, "Member 'FortDefenderSlotItemPicker_HandleItemWidgetCreated::ItemWidget' has a wrong offset!");

// Function FortniteUI.FortDefenderSlotItemPicker.PopulateDefenderSlotItems
// 0x0008 (0x0008 - 0x0000)
struct FortDefenderSlotItemPicker_PopulateDefenderSlotItems final
{
public:
	const class UFortDefenderItem*                DefenderItem;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDefenderSlotItemPicker_PopulateDefenderSlotItems) == 0x000008, "Wrong alignment on FortDefenderSlotItemPicker_PopulateDefenderSlotItems");
static_assert(sizeof(FortDefenderSlotItemPicker_PopulateDefenderSlotItems) == 0x000008, "Wrong size on FortDefenderSlotItemPicker_PopulateDefenderSlotItems");
static_assert(offsetof(FortDefenderSlotItemPicker_PopulateDefenderSlotItems, DefenderItem) == 0x000000, "Member 'FortDefenderSlotItemPicker_PopulateDefenderSlotItems::DefenderItem' has a wrong offset!");

// Function FortniteUI.FortSquadSelectorButton.SetIdOfSquadToManageBP
// 0x0008 (0x0008 - 0x0000)
struct FortSquadSelectorButton_SetIdOfSquadToManageBP final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSelectorButton_SetIdOfSquadToManageBP) == 0x000004, "Wrong alignment on FortSquadSelectorButton_SetIdOfSquadToManageBP");
static_assert(sizeof(FortSquadSelectorButton_SetIdOfSquadToManageBP) == 0x000008, "Wrong size on FortSquadSelectorButton_SetIdOfSquadToManageBP");
static_assert(offsetof(FortSquadSelectorButton_SetIdOfSquadToManageBP, SquadId) == 0x000000, "Member 'FortSquadSelectorButton_SetIdOfSquadToManageBP::SquadId' has a wrong offset!");

// Function FortniteUI.FortSquadSelectorButton.GetIdOfSquadToManageBP
// 0x0008 (0x0008 - 0x0000)
struct FortSquadSelectorButton_GetIdOfSquadToManageBP final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSelectorButton_GetIdOfSquadToManageBP) == 0x000004, "Wrong alignment on FortSquadSelectorButton_GetIdOfSquadToManageBP");
static_assert(sizeof(FortSquadSelectorButton_GetIdOfSquadToManageBP) == 0x000008, "Wrong size on FortSquadSelectorButton_GetIdOfSquadToManageBP");
static_assert(offsetof(FortSquadSelectorButton_GetIdOfSquadToManageBP, ReturnValue) == 0x000000, "Member 'FortSquadSelectorButton_GetIdOfSquadToManageBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadSelectorButton.TryGetStaticSquadDataBP
// 0x0090 (0x0090 - 0x0000)
struct FortSquadSelectorButton_TryGetStaticSquadDataBP final
{
public:
	struct FHomebaseSquad                         OutSquadData;                                      // 0x0000(0x0088)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadSelectorButton_TryGetStaticSquadDataBP) == 0x000008, "Wrong alignment on FortSquadSelectorButton_TryGetStaticSquadDataBP");
static_assert(sizeof(FortSquadSelectorButton_TryGetStaticSquadDataBP) == 0x000090, "Wrong size on FortSquadSelectorButton_TryGetStaticSquadDataBP");
static_assert(offsetof(FortSquadSelectorButton_TryGetStaticSquadDataBP, OutSquadData) == 0x000000, "Member 'FortSquadSelectorButton_TryGetStaticSquadDataBP::OutSquadData' has a wrong offset!");
static_assert(offsetof(FortSquadSelectorButton_TryGetStaticSquadDataBP, ReturnValue) == 0x000088, "Member 'FortSquadSelectorButton_TryGetStaticSquadDataBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDefenderSquadSelectorButton.TryGetPowerLevel
// 0x0008 (0x0008 - 0x0000)
struct FortDefenderSquadSelectorButton_TryGetPowerLevel final
{
public:
	int32                                         OutPowerLevel;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortDefenderSquadSelectorButton_TryGetPowerLevel) == 0x000004, "Wrong alignment on FortDefenderSquadSelectorButton_TryGetPowerLevel");
static_assert(sizeof(FortDefenderSquadSelectorButton_TryGetPowerLevel) == 0x000008, "Wrong size on FortDefenderSquadSelectorButton_TryGetPowerLevel");
static_assert(offsetof(FortDefenderSquadSelectorButton_TryGetPowerLevel, OutPowerLevel) == 0x000000, "Member 'FortDefenderSquadSelectorButton_TryGetPowerLevel::OutPowerLevel' has a wrong offset!");
static_assert(offsetof(FortDefenderSquadSelectorButton_TryGetPowerLevel, ReturnValue) == 0x000004, "Member 'FortDefenderSquadSelectorButton_TryGetPowerLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDefenderSquadSelectorButton.TryGetTheaterUniqueId
// 0x0018 (0x0018 - 0x0000)
struct FortDefenderSquadSelectorButton_TryGetTheaterUniqueId final
{
public:
	class FString                                 OutTheaterUniqueId;                                // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutIsUnlocked;                                     // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortDefenderSquadSelectorButton_TryGetTheaterUniqueId) == 0x000008, "Wrong alignment on FortDefenderSquadSelectorButton_TryGetTheaterUniqueId");
static_assert(sizeof(FortDefenderSquadSelectorButton_TryGetTheaterUniqueId) == 0x000018, "Wrong size on FortDefenderSquadSelectorButton_TryGetTheaterUniqueId");
static_assert(offsetof(FortDefenderSquadSelectorButton_TryGetTheaterUniqueId, OutTheaterUniqueId) == 0x000000, "Member 'FortDefenderSquadSelectorButton_TryGetTheaterUniqueId::OutTheaterUniqueId' has a wrong offset!");
static_assert(offsetof(FortDefenderSquadSelectorButton_TryGetTheaterUniqueId, OutIsUnlocked) == 0x000010, "Member 'FortDefenderSquadSelectorButton_TryGetTheaterUniqueId::OutIsUnlocked' has a wrong offset!");
static_assert(offsetof(FortDefenderSquadSelectorButton_TryGetTheaterUniqueId, ReturnValue) == 0x000011, "Member 'FortDefenderSquadSelectorButton_TryGetTheaterUniqueId::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMultiSizeItemCard.ShouldUseNewItemCards
// 0x0001 (0x0001 - 0x0000)
struct FortMultiSizeItemCard_ShouldUseNewItemCards final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMultiSizeItemCard_ShouldUseNewItemCards) == 0x000001, "Wrong alignment on FortMultiSizeItemCard_ShouldUseNewItemCards");
static_assert(sizeof(FortMultiSizeItemCard_ShouldUseNewItemCards) == 0x000001, "Wrong size on FortMultiSizeItemCard_ShouldUseNewItemCards");
static_assert(offsetof(FortMultiSizeItemCard_ShouldUseNewItemCards, ReturnValue) == 0x000000, "Member 'FortMultiSizeItemCard_ShouldUseNewItemCards::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMultiSizeItemCard.SetCardSize
// 0x0001 (0x0001 - 0x0000)
struct FortMultiSizeItemCard_SetCardSize final
{
public:
	EFortItemCardSize                             CardSize;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMultiSizeItemCard_SetCardSize) == 0x000001, "Wrong alignment on FortMultiSizeItemCard_SetCardSize");
static_assert(sizeof(FortMultiSizeItemCard_SetCardSize) == 0x000001, "Wrong size on FortMultiSizeItemCard_SetCardSize");
static_assert(offsetof(FortMultiSizeItemCard_SetCardSize, CardSize) == 0x000000, "Member 'FortMultiSizeItemCard_SetCardSize::CardSize' has a wrong offset!");

// Function FortniteUI.FortMultiSizeItemCard.SetEmptyItemType
// 0x0001 (0x0001 - 0x0000)
struct FortMultiSizeItemCard_SetEmptyItemType final
{
public:
	EFortItemType                                 NewEmptyItemType;                                  // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMultiSizeItemCard_SetEmptyItemType) == 0x000001, "Wrong alignment on FortMultiSizeItemCard_SetEmptyItemType");
static_assert(sizeof(FortMultiSizeItemCard_SetEmptyItemType) == 0x000001, "Wrong size on FortMultiSizeItemCard_SetEmptyItemType");
static_assert(offsetof(FortMultiSizeItemCard_SetEmptyItemType, NewEmptyItemType) == 0x000000, "Member 'FortMultiSizeItemCard_SetEmptyItemType::NewEmptyItemType' has a wrong offset!");

// Function FortniteUI.FortMultiSizeItemCard.SetQuantityOverride
// 0x0004 (0x0004 - 0x0000)
struct FortMultiSizeItemCard_SetQuantityOverride final
{
public:
	int32                                         Param_QuantityOverride;                            // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMultiSizeItemCard_SetQuantityOverride) == 0x000004, "Wrong alignment on FortMultiSizeItemCard_SetQuantityOverride");
static_assert(sizeof(FortMultiSizeItemCard_SetQuantityOverride) == 0x000004, "Wrong size on FortMultiSizeItemCard_SetQuantityOverride");
static_assert(offsetof(FortMultiSizeItemCard_SetQuantityOverride, Param_QuantityOverride) == 0x000000, "Member 'FortMultiSizeItemCard_SetQuantityOverride::Param_QuantityOverride' has a wrong offset!");

// Function FortniteUI.FortMultiSizeItemCard.SetShouldCollapseBorderPadding
// 0x0001 (0x0001 - 0x0000)
struct FortMultiSizeItemCard_SetShouldCollapseBorderPadding final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMultiSizeItemCard_SetShouldCollapseBorderPadding) == 0x000001, "Wrong alignment on FortMultiSizeItemCard_SetShouldCollapseBorderPadding");
static_assert(sizeof(FortMultiSizeItemCard_SetShouldCollapseBorderPadding) == 0x000001, "Wrong size on FortMultiSizeItemCard_SetShouldCollapseBorderPadding");
static_assert(offsetof(FortMultiSizeItemCard_SetShouldCollapseBorderPadding, Value) == 0x000000, "Member 'FortMultiSizeItemCard_SetShouldCollapseBorderPadding::Value' has a wrong offset!");

// Function FortniteUI.FortMultiSizeItemCard.SetShouldDisplayItemAsReward
// 0x0001 (0x0001 - 0x0000)
struct FortMultiSizeItemCard_SetShouldDisplayItemAsReward final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMultiSizeItemCard_SetShouldDisplayItemAsReward) == 0x000001, "Wrong alignment on FortMultiSizeItemCard_SetShouldDisplayItemAsReward");
static_assert(sizeof(FortMultiSizeItemCard_SetShouldDisplayItemAsReward) == 0x000001, "Wrong size on FortMultiSizeItemCard_SetShouldDisplayItemAsReward");
static_assert(offsetof(FortMultiSizeItemCard_SetShouldDisplayItemAsReward, Value) == 0x000000, "Member 'FortMultiSizeItemCard_SetShouldDisplayItemAsReward::Value' has a wrong offset!");

// Function FortniteUI.FortMultiSizeItemCard.GetCardSize
// 0x0001 (0x0001 - 0x0000)
struct FortMultiSizeItemCard_GetCardSize final
{
public:
	EFortItemCardSize                             ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMultiSizeItemCard_GetCardSize) == 0x000001, "Wrong alignment on FortMultiSizeItemCard_GetCardSize");
static_assert(sizeof(FortMultiSizeItemCard_GetCardSize) == 0x000001, "Wrong size on FortMultiSizeItemCard_GetCardSize");
static_assert(offsetof(FortMultiSizeItemCard_GetCardSize, ReturnValue) == 0x000000, "Member 'FortMultiSizeItemCard_GetCardSize::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.OfferHasDenyRequirements
// 0x0001 (0x0001 - 0x0000)
struct FortDirectAcquisitionOfferInfo_OfferHasDenyRequirements final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_OfferHasDenyRequirements) == 0x000001, "Wrong alignment on FortDirectAcquisitionOfferInfo_OfferHasDenyRequirements");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_OfferHasDenyRequirements) == 0x000001, "Wrong size on FortDirectAcquisitionOfferInfo_OfferHasDenyRequirements");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_OfferHasDenyRequirements, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_OfferHasDenyRequirements::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.CreatePreviewItem
// 0x0008 (0x0008 - 0x0000)
struct FortDirectAcquisitionOfferInfo_CreatePreviewItem final
{
public:
	class UFortAccountItem*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_CreatePreviewItem) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferInfo_CreatePreviewItem");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_CreatePreviewItem) == 0x000008, "Wrong size on FortDirectAcquisitionOfferInfo_CreatePreviewItem");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_CreatePreviewItem, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_CreatePreviewItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetBackground
// 0x0010 (0x0010 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetBackground final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetBackground) == 0x000004, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetBackground");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetBackground) == 0x000010, "Wrong size on FortDirectAcquisitionOfferInfo_GetBackground");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetBackground, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetBackground::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetBaseQuantity
// 0x0004 (0x0004 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetBaseQuantity final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetBaseQuantity) == 0x000004, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetBaseQuantity");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetBaseQuantity) == 0x000004, "Wrong size on FortDirectAcquisitionOfferInfo_GetBaseQuantity");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetBaseQuantity, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetBaseQuantity::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetBonusQuantity
// 0x0004 (0x0004 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetBonusQuantity final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetBonusQuantity) == 0x000004, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetBonusQuantity");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetBonusQuantity) == 0x000004, "Wrong size on FortDirectAcquisitionOfferInfo_GetBonusQuantity");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetBonusQuantity, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetBonusQuantity::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetCategoryText
// 0x0018 (0x0018 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetCategoryText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetCategoryText) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetCategoryText");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetCategoryText) == 0x000018, "Wrong size on FortDirectAcquisitionOfferInfo_GetCategoryText");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetCategoryText, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetCategoryText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetCurrencyItemDefinition
// 0x0008 (0x0008 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetCurrencyItemDefinition final
{
public:
	class UFortAccountItemDefinition*             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetCurrencyItemDefinition) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetCurrencyItemDefinition");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetCurrencyItemDefinition) == 0x000008, "Wrong size on FortDirectAcquisitionOfferInfo_GetCurrencyItemDefinition");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetCurrencyItemDefinition, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetCurrencyItemDefinition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetDescription
// 0x0018 (0x0018 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetDescription final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetDescription) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetDescription");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetDescription) == 0x000018, "Wrong size on FortDirectAcquisitionOfferInfo_GetDescription");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetDescription, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetDescription::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetDetailsAttributes
// 0x0010 (0x0010 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetDetailsAttributes final
{
public:
	TArray<struct FFortMtxDetailsAttribute>       ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetDetailsAttributes) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetDetailsAttributes");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetDetailsAttributes) == 0x000010, "Wrong size on FortDirectAcquisitionOfferInfo_GetDetailsAttributes");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetDetailsAttributes, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetDetailsAttributes::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetDetailsImage
// 0x0078 (0x0078 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetDetailsImage final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0078)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetDetailsImage) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetDetailsImage");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetDetailsImage) == 0x000078, "Wrong size on FortDirectAcquisitionOfferInfo_GetDetailsImage");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetDetailsImage, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetDetailsImage::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetFirstGrantItemDefinition
// 0x0008 (0x0008 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetFirstGrantItemDefinition final
{
public:
	class UFortAccountItemDefinition*             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetFirstGrantItemDefinition) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetFirstGrantItemDefinition");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetFirstGrantItemDefinition) == 0x000008, "Wrong size on FortDirectAcquisitionOfferInfo_GetFirstGrantItemDefinition");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetFirstGrantItemDefinition, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetFirstGrantItemDefinition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetFirstGrantQuantity
// 0x0004 (0x0004 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetFirstGrantQuantity final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetFirstGrantQuantity) == 0x000004, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetFirstGrantQuantity");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetFirstGrantQuantity) == 0x000004, "Wrong size on FortDirectAcquisitionOfferInfo_GetFirstGrantQuantity");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetFirstGrantQuantity, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetFirstGrantQuantity::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetFortStoreOfferType
// 0x0001 (0x0001 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetFortStoreOfferType final
{
public:
	EFortMtxStoreOfferType                        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetFortStoreOfferType) == 0x000001, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetFortStoreOfferType");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetFortStoreOfferType) == 0x000001, "Wrong size on FortDirectAcquisitionOfferInfo_GetFortStoreOfferType");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetFortStoreOfferType, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetFortStoreOfferType::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetGradient
// 0x0020 (0x0020 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetGradient final
{
public:
	struct FFortMtxGradient                       ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetGradient) == 0x000004, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetGradient");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetGradient) == 0x000020, "Wrong size on FortDirectAcquisitionOfferInfo_GetGradient");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetGradient, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetGradient::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetItemTypeText
// 0x0018 (0x0018 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetItemTypeText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetItemTypeText) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetItemTypeText");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetItemTypeText) == 0x000018, "Wrong size on FortDirectAcquisitionOfferInfo_GetItemTypeText");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetItemTypeText, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetItemTypeText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetName
// 0x0018 (0x0018 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetName) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetName");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetName) == 0x000018, "Wrong size on FortDirectAcquisitionOfferInfo_GetName");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetName, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetNormalPrice
// 0x0020 (0x0020 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetNormalPrice final
{
public:
	int32                                         PriceIndex;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetNormalPrice) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetNormalPrice");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetNormalPrice) == 0x000020, "Wrong size on FortDirectAcquisitionOfferInfo_GetNormalPrice");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetNormalPrice, PriceIndex) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetNormalPrice::PriceIndex' has a wrong offset!");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetNormalPrice, ReturnValue) == 0x000008, "Member 'FortDirectAcquisitionOfferInfo_GetNormalPrice::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetOfferId
// 0x0010 (0x0010 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetOfferId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetOfferId) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetOfferId");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetOfferId) == 0x000010, "Wrong size on FortDirectAcquisitionOfferInfo_GetOfferId");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetOfferId, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetOfferId::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetPriceItem
// 0x0010 (0x0010 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetPriceItem final
{
public:
	int32                                         PriceIndex;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RequiredItemCount;                                 // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortAccountItemDefinition*             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetPriceItem) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetPriceItem");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetPriceItem) == 0x000010, "Wrong size on FortDirectAcquisitionOfferInfo_GetPriceItem");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetPriceItem, PriceIndex) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetPriceItem::PriceIndex' has a wrong offset!");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetPriceItem, RequiredItemCount) == 0x000004, "Member 'FortDirectAcquisitionOfferInfo_GetPriceItem::RequiredItemCount' has a wrong offset!");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetPriceItem, ReturnValue) == 0x000008, "Member 'FortDirectAcquisitionOfferInfo_GetPriceItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetQuantityRemaining
// 0x0004 (0x0004 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetQuantityRemaining final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetQuantityRemaining) == 0x000004, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetQuantityRemaining");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetQuantityRemaining) == 0x000004, "Wrong size on FortDirectAcquisitionOfferInfo_GetQuantityRemaining");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetQuantityRemaining, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetQuantityRemaining::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetSalePrice
// 0x0028 (0x0028 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetSalePrice final
{
public:
	int32                                         PriceIndex;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   SalePrice;                                         // 0x0008(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetSalePrice) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetSalePrice");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetSalePrice) == 0x000028, "Wrong size on FortDirectAcquisitionOfferInfo_GetSalePrice");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetSalePrice, PriceIndex) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetSalePrice::PriceIndex' has a wrong offset!");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetSalePrice, SalePrice) == 0x000008, "Member 'FortDirectAcquisitionOfferInfo_GetSalePrice::SalePrice' has a wrong offset!");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetSalePrice, ReturnValue) == 0x000020, "Member 'FortDirectAcquisitionOfferInfo_GetSalePrice::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetSaleText
// 0x0020 (0x0020 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetSaleText final
{
public:
	int32                                         PriceIndex;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetSaleText) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetSaleText");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetSaleText) == 0x000020, "Wrong size on FortDirectAcquisitionOfferInfo_GetSaleText");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetSaleText, PriceIndex) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetSaleText::PriceIndex' has a wrong offset!");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetSaleText, ReturnValue) == 0x000008, "Member 'FortDirectAcquisitionOfferInfo_GetSaleText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetShortDescription
// 0x0018 (0x0018 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetShortDescription final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetShortDescription) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetShortDescription");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetShortDescription) == 0x000018, "Wrong size on FortDirectAcquisitionOfferInfo_GetShortDescription");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetShortDescription, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetShortDescription::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetSortPriority
// 0x0004 (0x0004 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetSortPriority final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetSortPriority) == 0x000004, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetSortPriority");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetSortPriority) == 0x000004, "Wrong size on FortDirectAcquisitionOfferInfo_GetSortPriority");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetSortPriority, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetSortPriority::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetStorefrontName
// 0x0008 (0x0008 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetStorefrontName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetStorefrontName) == 0x000004, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetStorefrontName");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetStorefrontName) == 0x000008, "Wrong size on FortDirectAcquisitionOfferInfo_GetStorefrontName");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetStorefrontName, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetStorefrontName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetTileImage
// 0x0078 (0x0078 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetTileImage final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0078)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetTileImage) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetTileImage");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetTileImage) == 0x000078, "Wrong size on FortDirectAcquisitionOfferInfo_GetTileImage");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetTileImage, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetTileImage::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.GetTotalQuantity
// 0x0004 (0x0004 - 0x0000)
struct FortDirectAcquisitionOfferInfo_GetTotalQuantity final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_GetTotalQuantity) == 0x000004, "Wrong alignment on FortDirectAcquisitionOfferInfo_GetTotalQuantity");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_GetTotalQuantity) == 0x000004, "Wrong size on FortDirectAcquisitionOfferInfo_GetTotalQuantity");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_GetTotalQuantity, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_GetTotalQuantity::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.HasDisplayAsset
// 0x0001 (0x0001 - 0x0000)
struct FortDirectAcquisitionOfferInfo_HasDisplayAsset final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_HasDisplayAsset) == 0x000001, "Wrong alignment on FortDirectAcquisitionOfferInfo_HasDisplayAsset");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_HasDisplayAsset) == 0x000001, "Wrong size on FortDirectAcquisitionOfferInfo_HasDisplayAsset");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_HasDisplayAsset, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_HasDisplayAsset::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.HasRequirement
// 0x0020 (0x0020 - 0x0000)
struct FortDirectAcquisitionOfferInfo_HasRequirement final
{
public:
	class FText                                   RequirementText;                                   // 0x0000(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_HasRequirement) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferInfo_HasRequirement");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_HasRequirement) == 0x000020, "Wrong size on FortDirectAcquisitionOfferInfo_HasRequirement");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_HasRequirement, RequirementText) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_HasRequirement::RequirementText' has a wrong offset!");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_HasRequirement, ReturnValue) == 0x000018, "Member 'FortDirectAcquisitionOfferInfo_HasRequirement::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.IsExclusive
// 0x0001 (0x0001 - 0x0000)
struct FortDirectAcquisitionOfferInfo_IsExclusive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_IsExclusive) == 0x000001, "Wrong alignment on FortDirectAcquisitionOfferInfo_IsExclusive");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_IsExclusive) == 0x000001, "Wrong size on FortDirectAcquisitionOfferInfo_IsExclusive");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_IsExclusive, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_IsExclusive::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.IsLockedByRequirement
// 0x0001 (0x0001 - 0x0000)
struct FortDirectAcquisitionOfferInfo_IsLockedByRequirement final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_IsLockedByRequirement) == 0x000001, "Wrong alignment on FortDirectAcquisitionOfferInfo_IsLockedByRequirement");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_IsLockedByRequirement) == 0x000001, "Wrong size on FortDirectAcquisitionOfferInfo_IsLockedByRequirement");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_IsLockedByRequirement, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_IsLockedByRequirement::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.IsPriceInMTX
// 0x0008 (0x0008 - 0x0000)
struct FortDirectAcquisitionOfferInfo_IsPriceInMTX final
{
public:
	int32                                         PriceIndex;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_IsPriceInMTX) == 0x000004, "Wrong alignment on FortDirectAcquisitionOfferInfo_IsPriceInMTX");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_IsPriceInMTX) == 0x000008, "Wrong size on FortDirectAcquisitionOfferInfo_IsPriceInMTX");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_IsPriceInMTX, PriceIndex) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_IsPriceInMTX::PriceIndex' has a wrong offset!");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_IsPriceInMTX, ReturnValue) == 0x000004, "Member 'FortDirectAcquisitionOfferInfo_IsPriceInMTX::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.IsPriceInRealMoney
// 0x0008 (0x0008 - 0x0000)
struct FortDirectAcquisitionOfferInfo_IsPriceInRealMoney final
{
public:
	int32                                         PriceIndex;                                        // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_IsPriceInRealMoney) == 0x000004, "Wrong alignment on FortDirectAcquisitionOfferInfo_IsPriceInRealMoney");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_IsPriceInRealMoney) == 0x000008, "Wrong size on FortDirectAcquisitionOfferInfo_IsPriceInRealMoney");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_IsPriceInRealMoney, PriceIndex) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_IsPriceInRealMoney::PriceIndex' has a wrong offset!");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_IsPriceInRealMoney, ReturnValue) == 0x000004, "Member 'FortDirectAcquisitionOfferInfo_IsPriceInRealMoney::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferInfo.IsUnique
// 0x0001 (0x0001 - 0x0000)
struct FortDirectAcquisitionOfferInfo_IsUnique final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferInfo_IsUnique) == 0x000001, "Wrong alignment on FortDirectAcquisitionOfferInfo_IsUnique");
static_assert(sizeof(FortDirectAcquisitionOfferInfo_IsUnique) == 0x000001, "Wrong size on FortDirectAcquisitionOfferInfo_IsUnique");
static_assert(offsetof(FortDirectAcquisitionOfferInfo_IsUnique, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferInfo_IsUnique::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferWidgetBase.HandleCurrentlyViewedAccountInfoChanged
// 0x0034 (0x0034 - 0x0000)
struct FortDirectAcquisitionOfferWidgetBase_HandleCurrentlyViewedAccountInfoChanged final
{
public:
	struct FFortPublicAccountInfo                 NewInfo;                                           // 0x0000(0x0034)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferWidgetBase_HandleCurrentlyViewedAccountInfoChanged) == 0x000004, "Wrong alignment on FortDirectAcquisitionOfferWidgetBase_HandleCurrentlyViewedAccountInfoChanged");
static_assert(sizeof(FortDirectAcquisitionOfferWidgetBase_HandleCurrentlyViewedAccountInfoChanged) == 0x000034, "Wrong size on FortDirectAcquisitionOfferWidgetBase_HandleCurrentlyViewedAccountInfoChanged");
static_assert(offsetof(FortDirectAcquisitionOfferWidgetBase_HandleCurrentlyViewedAccountInfoChanged, NewInfo) == 0x000000, "Member 'FortDirectAcquisitionOfferWidgetBase_HandleCurrentlyViewedAccountInfoChanged::NewInfo' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferWidgetBase.SetupOffer
// 0x0008 (0x0008 - 0x0000)
struct FortDirectAcquisitionOfferWidgetBase_SetupOffer final
{
public:
	class UFortDirectAcquisitionOfferInfo*        InOfferData;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferWidgetBase_SetupOffer) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferWidgetBase_SetupOffer");
static_assert(sizeof(FortDirectAcquisitionOfferWidgetBase_SetupOffer) == 0x000008, "Wrong size on FortDirectAcquisitionOfferWidgetBase_SetupOffer");
static_assert(offsetof(FortDirectAcquisitionOfferWidgetBase_SetupOffer, InOfferData) == 0x000000, "Member 'FortDirectAcquisitionOfferWidgetBase_SetupOffer::InOfferData' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferWidgetBase.GetOfferInfo
// 0x0008 (0x0008 - 0x0000)
struct FortDirectAcquisitionOfferWidgetBase_GetOfferInfo final
{
public:
	class UFortDirectAcquisitionOfferInfo*        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferWidgetBase_GetOfferInfo) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferWidgetBase_GetOfferInfo");
static_assert(sizeof(FortDirectAcquisitionOfferWidgetBase_GetOfferInfo) == 0x000008, "Wrong size on FortDirectAcquisitionOfferWidgetBase_GetOfferInfo");
static_assert(offsetof(FortDirectAcquisitionOfferWidgetBase_GetOfferInfo, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferWidgetBase_GetOfferInfo::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferDetailsWidgetBase.HandleCurrentlyViewedAccountInfoChanged
// 0x0034 (0x0034 - 0x0000)
struct FortDirectAcquisitionOfferDetailsWidgetBase_HandleCurrentlyViewedAccountInfoChanged final
{
public:
	struct FFortPublicAccountInfo                 NewInfo;                                           // 0x0000(0x0034)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferDetailsWidgetBase_HandleCurrentlyViewedAccountInfoChanged) == 0x000004, "Wrong alignment on FortDirectAcquisitionOfferDetailsWidgetBase_HandleCurrentlyViewedAccountInfoChanged");
static_assert(sizeof(FortDirectAcquisitionOfferDetailsWidgetBase_HandleCurrentlyViewedAccountInfoChanged) == 0x000034, "Wrong size on FortDirectAcquisitionOfferDetailsWidgetBase_HandleCurrentlyViewedAccountInfoChanged");
static_assert(offsetof(FortDirectAcquisitionOfferDetailsWidgetBase_HandleCurrentlyViewedAccountInfoChanged, NewInfo) == 0x000000, "Member 'FortDirectAcquisitionOfferDetailsWidgetBase_HandleCurrentlyViewedAccountInfoChanged::NewInfo' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferDetailsWidgetBase.SetupOffer
// 0x0008 (0x0008 - 0x0000)
struct FortDirectAcquisitionOfferDetailsWidgetBase_SetupOffer final
{
public:
	class UFortDirectAcquisitionOfferInfo*        InOfferData;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferDetailsWidgetBase_SetupOffer) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferDetailsWidgetBase_SetupOffer");
static_assert(sizeof(FortDirectAcquisitionOfferDetailsWidgetBase_SetupOffer) == 0x000008, "Wrong size on FortDirectAcquisitionOfferDetailsWidgetBase_SetupOffer");
static_assert(offsetof(FortDirectAcquisitionOfferDetailsWidgetBase_SetupOffer, InOfferData) == 0x000000, "Member 'FortDirectAcquisitionOfferDetailsWidgetBase_SetupOffer::InOfferData' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionOfferDetailsWidgetBase.GetOfferInfo
// 0x0008 (0x0008 - 0x0000)
struct FortDirectAcquisitionOfferDetailsWidgetBase_GetOfferInfo final
{
public:
	class UFortDirectAcquisitionOfferInfo*        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionOfferDetailsWidgetBase_GetOfferInfo) == 0x000008, "Wrong alignment on FortDirectAcquisitionOfferDetailsWidgetBase_GetOfferInfo");
static_assert(sizeof(FortDirectAcquisitionOfferDetailsWidgetBase_GetOfferInfo) == 0x000008, "Wrong size on FortDirectAcquisitionOfferDetailsWidgetBase_GetOfferInfo");
static_assert(offsetof(FortDirectAcquisitionOfferDetailsWidgetBase_GetOfferInfo, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionOfferDetailsWidgetBase_GetOfferInfo::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionWidgetBase.GenerateOfferWidget
// 0x0008 (0x0008 - 0x0000)
struct FortDirectAcquisitionWidgetBase_GenerateOfferWidget final
{
public:
	class UFortDirectAcquisitionOfferInfo*        Param_OfferData;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionWidgetBase_GenerateOfferWidget) == 0x000008, "Wrong alignment on FortDirectAcquisitionWidgetBase_GenerateOfferWidget");
static_assert(sizeof(FortDirectAcquisitionWidgetBase_GenerateOfferWidget) == 0x000008, "Wrong size on FortDirectAcquisitionWidgetBase_GenerateOfferWidget");
static_assert(offsetof(FortDirectAcquisitionWidgetBase_GenerateOfferWidget, Param_OfferData) == 0x000000, "Member 'FortDirectAcquisitionWidgetBase_GenerateOfferWidget::Param_OfferData' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionWidgetBase.GetDailyStoreEndDate
// 0x0008 (0x0008 - 0x0000)
struct FortDirectAcquisitionWidgetBase_GetDailyStoreEndDate final
{
public:
	struct FDateTime                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionWidgetBase_GetDailyStoreEndDate) == 0x000008, "Wrong alignment on FortDirectAcquisitionWidgetBase_GetDailyStoreEndDate");
static_assert(sizeof(FortDirectAcquisitionWidgetBase_GetDailyStoreEndDate) == 0x000008, "Wrong size on FortDirectAcquisitionWidgetBase_GetDailyStoreEndDate");
static_assert(offsetof(FortDirectAcquisitionWidgetBase_GetDailyStoreEndDate, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionWidgetBase_GetDailyStoreEndDate::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionWidgetBase.GetSeasonStoreEndDate
// 0x0008 (0x0008 - 0x0000)
struct FortDirectAcquisitionWidgetBase_GetSeasonStoreEndDate final
{
public:
	struct FDateTime                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionWidgetBase_GetSeasonStoreEndDate) == 0x000008, "Wrong alignment on FortDirectAcquisitionWidgetBase_GetSeasonStoreEndDate");
static_assert(sizeof(FortDirectAcquisitionWidgetBase_GetSeasonStoreEndDate) == 0x000008, "Wrong size on FortDirectAcquisitionWidgetBase_GetSeasonStoreEndDate");
static_assert(offsetof(FortDirectAcquisitionWidgetBase_GetSeasonStoreEndDate, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionWidgetBase_GetSeasonStoreEndDate::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortDirectAcquisitionWidgetBase.GetWeeklyStoreEndDate
// 0x0008 (0x0008 - 0x0000)
struct FortDirectAcquisitionWidgetBase_GetWeeklyStoreEndDate final
{
public:
	struct FDateTime                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortDirectAcquisitionWidgetBase_GetWeeklyStoreEndDate) == 0x000008, "Wrong alignment on FortDirectAcquisitionWidgetBase_GetWeeklyStoreEndDate");
static_assert(sizeof(FortDirectAcquisitionWidgetBase_GetWeeklyStoreEndDate) == 0x000008, "Wrong size on FortDirectAcquisitionWidgetBase_GetWeeklyStoreEndDate");
static_assert(offsetof(FortDirectAcquisitionWidgetBase_GetWeeklyStoreEndDate, ReturnValue) == 0x000000, "Member 'FortDirectAcquisitionWidgetBase_GetWeeklyStoreEndDate::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortErrorDialog.DisplayError
// 0x0080 (0x0080 - 0x0000)
struct FortErrorDialog_DisplayError final
{
public:
	struct FFortErrorInfo                         Param_ErrorInfo;                                   // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortErrorDialog_DisplayError) == 0x000010, "Wrong alignment on FortErrorDialog_DisplayError");
static_assert(sizeof(FortErrorDialog_DisplayError) == 0x000080, "Wrong size on FortErrorDialog_DisplayError");
static_assert(offsetof(FortErrorDialog_DisplayError, Param_ErrorInfo) == 0x000000, "Member 'FortErrorDialog_DisplayError::Param_ErrorInfo' has a wrong offset!");

// Function FortniteUI.FortErrorDialog.OnRebuildDialog
// 0x0004 (0x0004 - 0x0000)
struct FortErrorDialog_OnRebuildDialog final
{
public:
	int32                                         NewIndex;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortErrorDialog_OnRebuildDialog) == 0x000004, "Wrong alignment on FortErrorDialog_OnRebuildDialog");
static_assert(sizeof(FortErrorDialog_OnRebuildDialog) == 0x000004, "Wrong size on FortErrorDialog_OnRebuildDialog");
static_assert(offsetof(FortErrorDialog_OnRebuildDialog, NewIndex) == 0x000000, "Member 'FortErrorDialog_OnRebuildDialog::NewIndex' has a wrong offset!");

// Function FortniteUI.FortErrorWindow.DismissErrors
// 0x0010 (0x0010 - 0x0000)
struct FortErrorWindow_DismissErrors final
{
public:
	TArray<struct FFortErrorInfo>                 ErrorInfos;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortErrorWindow_DismissErrors) == 0x000008, "Wrong alignment on FortErrorWindow_DismissErrors");
static_assert(sizeof(FortErrorWindow_DismissErrors) == 0x000010, "Wrong size on FortErrorWindow_DismissErrors");
static_assert(offsetof(FortErrorWindow_DismissErrors, ErrorInfos) == 0x000000, "Member 'FortErrorWindow_DismissErrors::ErrorInfos' has a wrong offset!");

// Function FortniteUI.FortErrorWindow.GetErrorEntry
// 0x0008 (0x0008 - 0x0000)
struct FortErrorWindow_GetErrorEntry final
{
public:
	class UCommonUserWidget*                      ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortErrorWindow_GetErrorEntry) == 0x000008, "Wrong alignment on FortErrorWindow_GetErrorEntry");
static_assert(sizeof(FortErrorWindow_GetErrorEntry) == 0x000008, "Wrong size on FortErrorWindow_GetErrorEntry");
static_assert(offsetof(FortErrorWindow_GetErrorEntry, ReturnValue) == 0x000000, "Member 'FortErrorWindow_GetErrorEntry::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortErrorWindow.PutErrorEntries
// 0x0010 (0x0010 - 0x0000)
struct FortErrorWindow_PutErrorEntries final
{
public:
	TArray<class UCommonUserWidget*>              ErrorEntries;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortErrorWindow_PutErrorEntries) == 0x000008, "Wrong alignment on FortErrorWindow_PutErrorEntries");
static_assert(sizeof(FortErrorWindow_PutErrorEntries) == 0x000010, "Wrong size on FortErrorWindow_PutErrorEntries");
static_assert(offsetof(FortErrorWindow_PutErrorEntries, ErrorEntries) == 0x000000, "Member 'FortErrorWindow_PutErrorEntries::ErrorEntries' has a wrong offset!");

// Function FortniteUI.FortPerksWidget.OnGeneratePerkTier
// 0x0020 (0x0020 - 0x0000)
struct FortPerksWidget_OnGeneratePerkTier final
{
public:
	struct FFortUIPerkTier                        FortPerkTier;                                      // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerksWidget_OnGeneratePerkTier) == 0x000008, "Wrong alignment on FortPerksWidget_OnGeneratePerkTier");
static_assert(sizeof(FortPerksWidget_OnGeneratePerkTier) == 0x000020, "Wrong size on FortPerksWidget_OnGeneratePerkTier");
static_assert(offsetof(FortPerksWidget_OnGeneratePerkTier, FortPerkTier) == 0x000000, "Member 'FortPerksWidget_OnGeneratePerkTier::FortPerkTier' has a wrong offset!");

// Function FortniteUI.FortNodePrerequisitesWidget.GenerateNodePrerequisite
// 0x05F0 (0x05F0 - 0x0000)
struct FortNodePrerequisitesWidget_GenerateNodePrerequisite final
{
public:
	struct FFortUINodePrerequisite                NodePrerequisite;                                  // 0x0000(0x05F0)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortNodePrerequisitesWidget_GenerateNodePrerequisite) == 0x000008, "Wrong alignment on FortNodePrerequisitesWidget_GenerateNodePrerequisite");
static_assert(sizeof(FortNodePrerequisitesWidget_GenerateNodePrerequisite) == 0x0005F0, "Wrong size on FortNodePrerequisitesWidget_GenerateNodePrerequisite");
static_assert(offsetof(FortNodePrerequisitesWidget_GenerateNodePrerequisite, NodePrerequisite) == 0x000000, "Member 'FortNodePrerequisitesWidget_GenerateNodePrerequisite::NodePrerequisite' has a wrong offset!");

// Function FortniteUI.FortNodePrerequisitesWidget.GenerateNodePrerequisiteConnector
// 0x0001 (0x0001 - 0x0000)
struct FortNodePrerequisitesWidget_GenerateNodePrerequisiteConnector final
{
public:
	EFortNodePrerequisiteConnector                Connector;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortNodePrerequisitesWidget_GenerateNodePrerequisiteConnector) == 0x000001, "Wrong alignment on FortNodePrerequisitesWidget_GenerateNodePrerequisiteConnector");
static_assert(sizeof(FortNodePrerequisitesWidget_GenerateNodePrerequisiteConnector) == 0x000001, "Wrong size on FortNodePrerequisitesWidget_GenerateNodePrerequisiteConnector");
static_assert(offsetof(FortNodePrerequisitesWidget_GenerateNodePrerequisiteConnector, Connector) == 0x000000, "Member 'FortNodePrerequisitesWidget_GenerateNodePrerequisiteConnector::Connector' has a wrong offset!");

// Function FortniteUI.FortNodePrerequisitesWidget.ProcessNodePrequisites
// 0x0008 (0x0008 - 0x0000)
struct FortNodePrerequisitesWidget_ProcessNodePrequisites final
{
public:
	class FName                                   NodeID;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortNodePrerequisitesWidget_ProcessNodePrequisites) == 0x000004, "Wrong alignment on FortNodePrerequisitesWidget_ProcessNodePrequisites");
static_assert(sizeof(FortNodePrerequisitesWidget_ProcessNodePrequisites) == 0x000008, "Wrong size on FortNodePrerequisitesWidget_ProcessNodePrequisites");
static_assert(offsetof(FortNodePrerequisitesWidget_ProcessNodePrequisites, NodeID) == 0x000000, "Member 'FortNodePrerequisitesWidget_ProcessNodePrequisites::NodeID' has a wrong offset!");

// Function FortniteUI.FortExpeditionBuildSquadWidget.ClearTemporaryExpeditionSquadState
// 0x0001 (0x0001 - 0x0000)
struct FortExpeditionBuildSquadWidget_ClearTemporaryExpeditionSquadState final
{
public:
	bool                                          bPreviewOnly;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionBuildSquadWidget_ClearTemporaryExpeditionSquadState) == 0x000001, "Wrong alignment on FortExpeditionBuildSquadWidget_ClearTemporaryExpeditionSquadState");
static_assert(sizeof(FortExpeditionBuildSquadWidget_ClearTemporaryExpeditionSquadState) == 0x000001, "Wrong size on FortExpeditionBuildSquadWidget_ClearTemporaryExpeditionSquadState");
static_assert(offsetof(FortExpeditionBuildSquadWidget_ClearTemporaryExpeditionSquadState, bPreviewOnly) == 0x000000, "Member 'FortExpeditionBuildSquadWidget_ClearTemporaryExpeditionSquadState::bPreviewOnly' has a wrong offset!");

// Function FortniteUI.FortExpeditionBuildSquadWidget.HandleDifferentSquadSlotSelected
// 0x0004 (0x0004 - 0x0000)
struct FortExpeditionBuildSquadWidget_HandleDifferentSquadSlotSelected final
{
public:
	int32                                         SquadSlotIndex;                                    // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionBuildSquadWidget_HandleDifferentSquadSlotSelected) == 0x000004, "Wrong alignment on FortExpeditionBuildSquadWidget_HandleDifferentSquadSlotSelected");
static_assert(sizeof(FortExpeditionBuildSquadWidget_HandleDifferentSquadSlotSelected) == 0x000004, "Wrong size on FortExpeditionBuildSquadWidget_HandleDifferentSquadSlotSelected");
static_assert(offsetof(FortExpeditionBuildSquadWidget_HandleDifferentSquadSlotSelected, SquadSlotIndex) == 0x000000, "Member 'FortExpeditionBuildSquadWidget_HandleDifferentSquadSlotSelected::SquadSlotIndex' has a wrong offset!");

// Function FortniteUI.FortExpeditionBuildSquadWidget.HandleStartExpeditionCompleted
// 0x0010 (0x0010 - 0x0000)
struct FortExpeditionBuildSquadWidget_HandleStartExpeditionCompleted final
{
public:
	const class UFortExpeditionItem*              Expedition;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSucceeded;                                        // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortExpeditionBuildSquadWidget_HandleStartExpeditionCompleted) == 0x000008, "Wrong alignment on FortExpeditionBuildSquadWidget_HandleStartExpeditionCompleted");
static_assert(sizeof(FortExpeditionBuildSquadWidget_HandleStartExpeditionCompleted) == 0x000010, "Wrong size on FortExpeditionBuildSquadWidget_HandleStartExpeditionCompleted");
static_assert(offsetof(FortExpeditionBuildSquadWidget_HandleStartExpeditionCompleted, Expedition) == 0x000000, "Member 'FortExpeditionBuildSquadWidget_HandleStartExpeditionCompleted::Expedition' has a wrong offset!");
static_assert(offsetof(FortExpeditionBuildSquadWidget_HandleStartExpeditionCompleted, bSucceeded) == 0x000008, "Member 'FortExpeditionBuildSquadWidget_HandleStartExpeditionCompleted::bSucceeded' has a wrong offset!");

// Function FortniteUI.FortExpeditionBuildSquadWidget.IsExpeditionValidToStart
// 0x0001 (0x0001 - 0x0000)
struct FortExpeditionBuildSquadWidget_IsExpeditionValidToStart final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionBuildSquadWidget_IsExpeditionValidToStart) == 0x000001, "Wrong alignment on FortExpeditionBuildSquadWidget_IsExpeditionValidToStart");
static_assert(sizeof(FortExpeditionBuildSquadWidget_IsExpeditionValidToStart) == 0x000001, "Wrong size on FortExpeditionBuildSquadWidget_IsExpeditionValidToStart");
static_assert(offsetof(FortExpeditionBuildSquadWidget_IsExpeditionValidToStart, ReturnValue) == 0x000000, "Member 'FortExpeditionBuildSquadWidget_IsExpeditionValidToStart::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortExpeditionBuildSquadWidget.SetCurrentSquadId
// 0x0008 (0x0008 - 0x0000)
struct FortExpeditionBuildSquadWidget_SetCurrentSquadId final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionBuildSquadWidget_SetCurrentSquadId) == 0x000004, "Wrong alignment on FortExpeditionBuildSquadWidget_SetCurrentSquadId");
static_assert(sizeof(FortExpeditionBuildSquadWidget_SetCurrentSquadId) == 0x000008, "Wrong size on FortExpeditionBuildSquadWidget_SetCurrentSquadId");
static_assert(offsetof(FortExpeditionBuildSquadWidget_SetCurrentSquadId, SquadId) == 0x000000, "Member 'FortExpeditionBuildSquadWidget_SetCurrentSquadId::SquadId' has a wrong offset!");

// Function FortniteUI.FortExpeditionBuildSquadWidget.SetData
// 0x0008 (0x0008 - 0x0000)
struct FortExpeditionBuildSquadWidget_SetData final
{
public:
	class UFortExpeditionItem*                    InItem;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionBuildSquadWidget_SetData) == 0x000008, "Wrong alignment on FortExpeditionBuildSquadWidget_SetData");
static_assert(sizeof(FortExpeditionBuildSquadWidget_SetData) == 0x000008, "Wrong size on FortExpeditionBuildSquadWidget_SetData");
static_assert(offsetof(FortExpeditionBuildSquadWidget_SetData, InItem) == 0x000000, "Member 'FortExpeditionBuildSquadWidget_SetData::InItem' has a wrong offset!");

// Function FortniteUI.FortExpeditionBuildSquadWidget.StartExpedition
// 0x0001 (0x0001 - 0x0000)
struct FortExpeditionBuildSquadWidget_StartExpedition final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionBuildSquadWidget_StartExpedition) == 0x000001, "Wrong alignment on FortExpeditionBuildSquadWidget_StartExpedition");
static_assert(sizeof(FortExpeditionBuildSquadWidget_StartExpedition) == 0x000001, "Wrong size on FortExpeditionBuildSquadWidget_StartExpedition");
static_assert(offsetof(FortExpeditionBuildSquadWidget_StartExpedition, ReturnValue) == 0x000000, "Member 'FortExpeditionBuildSquadWidget_StartExpedition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortExpeditionBuildSquadWidget.IsSquadSlotLocked
// 0x0008 (0x0008 - 0x0000)
struct FortExpeditionBuildSquadWidget_IsSquadSlotLocked final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortExpeditionBuildSquadWidget_IsSquadSlotLocked) == 0x000004, "Wrong alignment on FortExpeditionBuildSquadWidget_IsSquadSlotLocked");
static_assert(sizeof(FortExpeditionBuildSquadWidget_IsSquadSlotLocked) == 0x000008, "Wrong size on FortExpeditionBuildSquadWidget_IsSquadSlotLocked");
static_assert(offsetof(FortExpeditionBuildSquadWidget_IsSquadSlotLocked, SlotIndex) == 0x000000, "Member 'FortExpeditionBuildSquadWidget_IsSquadSlotLocked::SlotIndex' has a wrong offset!");
static_assert(offsetof(FortExpeditionBuildSquadWidget_IsSquadSlotLocked, ReturnValue) == 0x000004, "Member 'FortExpeditionBuildSquadWidget_IsSquadSlotLocked::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortExpeditionDetailsWidget.HandleAbandonExpeditionCompleted
// 0x0010 (0x0010 - 0x0000)
struct FortExpeditionDetailsWidget_HandleAbandonExpeditionCompleted final
{
public:
	const class UFortExpeditionItem*              Expedition;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSuccess;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortExpeditionDetailsWidget_HandleAbandonExpeditionCompleted) == 0x000008, "Wrong alignment on FortExpeditionDetailsWidget_HandleAbandonExpeditionCompleted");
static_assert(sizeof(FortExpeditionDetailsWidget_HandleAbandonExpeditionCompleted) == 0x000010, "Wrong size on FortExpeditionDetailsWidget_HandleAbandonExpeditionCompleted");
static_assert(offsetof(FortExpeditionDetailsWidget_HandleAbandonExpeditionCompleted, Expedition) == 0x000000, "Member 'FortExpeditionDetailsWidget_HandleAbandonExpeditionCompleted::Expedition' has a wrong offset!");
static_assert(offsetof(FortExpeditionDetailsWidget_HandleAbandonExpeditionCompleted, bSuccess) == 0x000008, "Member 'FortExpeditionDetailsWidget_HandleAbandonExpeditionCompleted::bSuccess' has a wrong offset!");

// Function FortniteUI.FortExpeditionDetailsWidget.SetCurrentSquadId
// 0x0008 (0x0008 - 0x0000)
struct FortExpeditionDetailsWidget_SetCurrentSquadId final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionDetailsWidget_SetCurrentSquadId) == 0x000004, "Wrong alignment on FortExpeditionDetailsWidget_SetCurrentSquadId");
static_assert(sizeof(FortExpeditionDetailsWidget_SetCurrentSquadId) == 0x000008, "Wrong size on FortExpeditionDetailsWidget_SetCurrentSquadId");
static_assert(offsetof(FortExpeditionDetailsWidget_SetCurrentSquadId, SquadId) == 0x000000, "Member 'FortExpeditionDetailsWidget_SetCurrentSquadId::SquadId' has a wrong offset!");

// Function FortniteUI.FortExpeditionDetailsWidget.SetData
// 0x0008 (0x0008 - 0x0000)
struct FortExpeditionDetailsWidget_SetData final
{
public:
	class UFortExpeditionItem*                    InItem;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionDetailsWidget_SetData) == 0x000008, "Wrong alignment on FortExpeditionDetailsWidget_SetData");
static_assert(sizeof(FortExpeditionDetailsWidget_SetData) == 0x000008, "Wrong size on FortExpeditionDetailsWidget_SetData");
static_assert(offsetof(FortExpeditionDetailsWidget_SetData, InItem) == 0x000000, "Member 'FortExpeditionDetailsWidget_SetData::InItem' has a wrong offset!");

// Function FortniteUI.FortBaseCanvasEntity.Intro
// 0x0001 (0x0001 - 0x0000)
struct FortBaseCanvasEntity_Intro final
{
public:
	EFortAnimSpeed                                Speed;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseCanvasEntity_Intro) == 0x000001, "Wrong alignment on FortBaseCanvasEntity_Intro");
static_assert(sizeof(FortBaseCanvasEntity_Intro) == 0x000001, "Wrong size on FortBaseCanvasEntity_Intro");
static_assert(offsetof(FortBaseCanvasEntity_Intro, Speed) == 0x000000, "Member 'FortBaseCanvasEntity_Intro::Speed' has a wrong offset!");

// Function FortniteUI.FortBaseCanvasEntity.Outro
// 0x0001 (0x0001 - 0x0000)
struct FortBaseCanvasEntity_Outro final
{
public:
	EFortAnimSpeed                                Speed;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseCanvasEntity_Outro) == 0x000001, "Wrong alignment on FortBaseCanvasEntity_Outro");
static_assert(sizeof(FortBaseCanvasEntity_Outro) == 0x000001, "Wrong size on FortBaseCanvasEntity_Outro");
static_assert(offsetof(FortBaseCanvasEntity_Outro, Speed) == 0x000000, "Member 'FortBaseCanvasEntity_Outro::Speed' has a wrong offset!");

// Function FortniteUI.FortBaseCanvasNode.GetPurchaseRestrictionReasonText
// 0x0020 (0x0020 - 0x0000)
struct FortBaseCanvasNode_GetPurchaseRestrictionReasonText final
{
public:
	EFortHomebaseNodePurchaseRestrictionReason    Reason;                                            // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseCanvasNode_GetPurchaseRestrictionReasonText) == 0x000008, "Wrong alignment on FortBaseCanvasNode_GetPurchaseRestrictionReasonText");
static_assert(sizeof(FortBaseCanvasNode_GetPurchaseRestrictionReasonText) == 0x000020, "Wrong size on FortBaseCanvasNode_GetPurchaseRestrictionReasonText");
static_assert(offsetof(FortBaseCanvasNode_GetPurchaseRestrictionReasonText, Reason) == 0x000000, "Member 'FortBaseCanvasNode_GetPurchaseRestrictionReasonText::Reason' has a wrong offset!");
static_assert(offsetof(FortBaseCanvasNode_GetPurchaseRestrictionReasonText, ReturnValue) == 0x000008, "Member 'FortBaseCanvasNode_GetPurchaseRestrictionReasonText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseCanvasNode.DrillDownToNodePage
// 0x0001 (0x0001 - 0x0000)
struct FortBaseCanvasNode_DrillDownToNodePage final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseCanvasNode_DrillDownToNodePage) == 0x000001, "Wrong alignment on FortBaseCanvasNode_DrillDownToNodePage");
static_assert(sizeof(FortBaseCanvasNode_DrillDownToNodePage) == 0x000001, "Wrong size on FortBaseCanvasNode_DrillDownToNodePage");
static_assert(offsetof(FortBaseCanvasNode_DrillDownToNodePage, ReturnValue) == 0x000000, "Member 'FortBaseCanvasNode_DrillDownToNodePage::ReturnValue' has a wrong offset!");

// DelegateFunction FortniteUI.FortBaseCanvasNode.OnNodeStateChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortBaseCanvasNode_OnNodeStateChanged__DelegateSignature final
{
public:
	class UFortBaseCanvasNode*                    Node;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseCanvasNode_OnNodeStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on FortBaseCanvasNode_OnNodeStateChanged__DelegateSignature");
static_assert(sizeof(FortBaseCanvasNode_OnNodeStateChanged__DelegateSignature) == 0x000008, "Wrong size on FortBaseCanvasNode_OnNodeStateChanged__DelegateSignature");
static_assert(offsetof(FortBaseCanvasNode_OnNodeStateChanged__DelegateSignature, Node) == 0x000000, "Member 'FortBaseCanvasNode_OnNodeStateChanged__DelegateSignature::Node' has a wrong offset!");

// Function FortniteUI.FortBaseCanvasNode.SelectedChanged
// 0x0001 (0x0001 - 0x0000)
struct FortBaseCanvasNode_SelectedChanged final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseCanvasNode_SelectedChanged) == 0x000001, "Wrong alignment on FortBaseCanvasNode_SelectedChanged");
static_assert(sizeof(FortBaseCanvasNode_SelectedChanged) == 0x000001, "Wrong size on FortBaseCanvasNode_SelectedChanged");
static_assert(offsetof(FortBaseCanvasNode_SelectedChanged, bEnabled) == 0x000000, "Member 'FortBaseCanvasNode_SelectedChanged::bEnabled' has a wrong offset!");

// Function FortniteUI.FortBaseCanvasNode.SelectNode
// 0x0001 (0x0001 - 0x0000)
struct FortBaseCanvasNode_SelectNode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseCanvasNode_SelectNode) == 0x000001, "Wrong alignment on FortBaseCanvasNode_SelectNode");
static_assert(sizeof(FortBaseCanvasNode_SelectNode) == 0x000001, "Wrong size on FortBaseCanvasNode_SelectNode");
static_assert(offsetof(FortBaseCanvasNode_SelectNode, ReturnValue) == 0x000000, "Member 'FortBaseCanvasNode_SelectNode::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseCanvasNode.DoesDrillDownToCurrentNodePage
// 0x0001 (0x0001 - 0x0000)
struct FortBaseCanvasNode_DoesDrillDownToCurrentNodePage final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseCanvasNode_DoesDrillDownToCurrentNodePage) == 0x000001, "Wrong alignment on FortBaseCanvasNode_DoesDrillDownToCurrentNodePage");
static_assert(sizeof(FortBaseCanvasNode_DoesDrillDownToCurrentNodePage) == 0x000001, "Wrong size on FortBaseCanvasNode_DoesDrillDownToCurrentNodePage");
static_assert(offsetof(FortBaseCanvasNode_DoesDrillDownToCurrentNodePage, ReturnValue) == 0x000000, "Member 'FortBaseCanvasNode_DoesDrillDownToCurrentNodePage::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseCanvasNode.GetCosts
// 0x0010 (0x0010 - 0x0000)
struct FortBaseCanvasNode_GetCosts final
{
public:
	TArray<struct FFortItemInstanceQuantityPair>  ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseCanvasNode_GetCosts) == 0x000008, "Wrong alignment on FortBaseCanvasNode_GetCosts");
static_assert(sizeof(FortBaseCanvasNode_GetCosts) == 0x000010, "Wrong size on FortBaseCanvasNode_GetCosts");
static_assert(offsetof(FortBaseCanvasNode_GetCosts, ReturnValue) == 0x000000, "Member 'FortBaseCanvasNode_GetCosts::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseCanvasNode.GetNodeDataCopy
// 0x00C8 (0x00C8 - 0x0000)
struct FortBaseCanvasNode_GetNodeDataCopy final
{
public:
	struct FHomebaseNode                          Node;                                              // 0x0000(0x00C0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortBaseCanvasNode_GetNodeDataCopy) == 0x000008, "Wrong alignment on FortBaseCanvasNode_GetNodeDataCopy");
static_assert(sizeof(FortBaseCanvasNode_GetNodeDataCopy) == 0x0000C8, "Wrong size on FortBaseCanvasNode_GetNodeDataCopy");
static_assert(offsetof(FortBaseCanvasNode_GetNodeDataCopy, Node) == 0x000000, "Member 'FortBaseCanvasNode_GetNodeDataCopy::Node' has a wrong offset!");
static_assert(offsetof(FortBaseCanvasNode_GetNodeDataCopy, ReturnValue) == 0x0000C0, "Member 'FortBaseCanvasNode_GetNodeDataCopy::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseCanvasNode.GetNodeID
// 0x0008 (0x0008 - 0x0000)
struct FortBaseCanvasNode_GetNodeID final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseCanvasNode_GetNodeID) == 0x000004, "Wrong alignment on FortBaseCanvasNode_GetNodeID");
static_assert(sizeof(FortBaseCanvasNode_GetNodeID) == 0x000008, "Wrong size on FortBaseCanvasNode_GetNodeID");
static_assert(offsetof(FortBaseCanvasNode_GetNodeID, ReturnValue) == 0x000000, "Member 'FortBaseCanvasNode_GetNodeID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseCanvasNode.GetNodeStyleDataCopy
// 0x05B8 (0x05B8 - 0x0000)
struct FortBaseCanvasNode_GetNodeStyleDataCopy final
{
public:
	struct FFortNodeStyleData                     Style;                                             // 0x0000(0x05B0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x05B0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5B1[0x7];                                      // 0x05B1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortBaseCanvasNode_GetNodeStyleDataCopy) == 0x000008, "Wrong alignment on FortBaseCanvasNode_GetNodeStyleDataCopy");
static_assert(sizeof(FortBaseCanvasNode_GetNodeStyleDataCopy) == 0x0005B8, "Wrong size on FortBaseCanvasNode_GetNodeStyleDataCopy");
static_assert(offsetof(FortBaseCanvasNode_GetNodeStyleDataCopy, Style) == 0x000000, "Member 'FortBaseCanvasNode_GetNodeStyleDataCopy::Style' has a wrong offset!");
static_assert(offsetof(FortBaseCanvasNode_GetNodeStyleDataCopy, ReturnValue) == 0x0005B0, "Member 'FortBaseCanvasNode_GetNodeStyleDataCopy::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseCanvasNode.GetPreviewMediaSource
// 0x0008 (0x0008 - 0x0000)
struct FortBaseCanvasNode_GetPreviewMediaSource final
{
public:
	class UMediaSource*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseCanvasNode_GetPreviewMediaSource) == 0x000008, "Wrong alignment on FortBaseCanvasNode_GetPreviewMediaSource");
static_assert(sizeof(FortBaseCanvasNode_GetPreviewMediaSource) == 0x000008, "Wrong size on FortBaseCanvasNode_GetPreviewMediaSource");
static_assert(offsetof(FortBaseCanvasNode_GetPreviewMediaSource, ReturnValue) == 0x000000, "Member 'FortBaseCanvasNode_GetPreviewMediaSource::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseCanvasNode.GetPurchasePercent
// 0x0004 (0x0004 - 0x0000)
struct FortBaseCanvasNode_GetPurchasePercent final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseCanvasNode_GetPurchasePercent) == 0x000004, "Wrong alignment on FortBaseCanvasNode_GetPurchasePercent");
static_assert(sizeof(FortBaseCanvasNode_GetPurchasePercent) == 0x000004, "Wrong size on FortBaseCanvasNode_GetPurchasePercent");
static_assert(offsetof(FortBaseCanvasNode_GetPurchasePercent, ReturnValue) == 0x000000, "Member 'FortBaseCanvasNode_GetPurchasePercent::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseCanvasNode.IsLocked
// 0x0001 (0x0001 - 0x0000)
struct FortBaseCanvasNode_IsLocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseCanvasNode_IsLocked) == 0x000001, "Wrong alignment on FortBaseCanvasNode_IsLocked");
static_assert(sizeof(FortBaseCanvasNode_IsLocked) == 0x000001, "Wrong size on FortBaseCanvasNode_IsLocked");
static_assert(offsetof(FortBaseCanvasNode_IsLocked, ReturnValue) == 0x000000, "Member 'FortBaseCanvasNode_IsLocked::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseCanvasNode.IsOwned
// 0x0001 (0x0001 - 0x0000)
struct FortBaseCanvasNode_IsOwned final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortBaseCanvasNode_IsOwned) == 0x000001, "Wrong alignment on FortBaseCanvasNode_IsOwned");
static_assert(sizeof(FortBaseCanvasNode_IsOwned) == 0x000001, "Wrong size on FortBaseCanvasNode_IsOwned");
static_assert(offsetof(FortBaseCanvasNode_IsOwned, ReturnValue) == 0x000000, "Member 'FortBaseCanvasNode_IsOwned::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortBaseCanvasNode.IsPurchaseable
// 0x0018 (0x0018 - 0x0000)
struct FortBaseCanvasNode_IsPurchaseable final
{
public:
	TArray<EFortHomebaseNodePurchaseRestrictionReason> OutRestrictionReasons;                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortBaseCanvasNode_IsPurchaseable) == 0x000008, "Wrong alignment on FortBaseCanvasNode_IsPurchaseable");
static_assert(sizeof(FortBaseCanvasNode_IsPurchaseable) == 0x000018, "Wrong size on FortBaseCanvasNode_IsPurchaseable");
static_assert(offsetof(FortBaseCanvasNode_IsPurchaseable, OutRestrictionReasons) == 0x000000, "Member 'FortBaseCanvasNode_IsPurchaseable::OutRestrictionReasons' has a wrong offset!");
static_assert(offsetof(FortBaseCanvasNode_IsPurchaseable, ReturnValue) == 0x000010, "Member 'FortBaseCanvasNode_IsPurchaseable::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortExpeditionExpiresWidget.SetData
// 0x0008 (0x0008 - 0x0000)
struct FortExpeditionExpiresWidget_SetData final
{
public:
	class UFortExpeditionItem*                    InItem;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionExpiresWidget_SetData) == 0x000008, "Wrong alignment on FortExpeditionExpiresWidget_SetData");
static_assert(sizeof(FortExpeditionExpiresWidget_SetData) == 0x000008, "Wrong size on FortExpeditionExpiresWidget_SetData");
static_assert(offsetof(FortExpeditionExpiresWidget_SetData, InItem) == 0x000000, "Member 'FortExpeditionExpiresWidget_SetData::InItem' has a wrong offset!");

// Function FortniteUI.FortExpeditionListViewWidget.HandleListItemSelected
// 0x0010 (0x0010 - 0x0000)
struct FortExpeditionListViewWidget_HandleListItemSelected final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelected;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortExpeditionListViewWidget_HandleListItemSelected) == 0x000008, "Wrong alignment on FortExpeditionListViewWidget_HandleListItemSelected");
static_assert(sizeof(FortExpeditionListViewWidget_HandleListItemSelected) == 0x000010, "Wrong size on FortExpeditionListViewWidget_HandleListItemSelected");
static_assert(offsetof(FortExpeditionListViewWidget_HandleListItemSelected, Item) == 0x000000, "Member 'FortExpeditionListViewWidget_HandleListItemSelected::Item' has a wrong offset!");
static_assert(offsetof(FortExpeditionListViewWidget_HandleListItemSelected, bSelected) == 0x000008, "Member 'FortExpeditionListViewWidget_HandleListItemSelected::bSelected' has a wrong offset!");

// Function FortniteUI.FortExpeditionListViewWidget.SetExpeditionListSortType
// 0x0001 (0x0001 - 0x0000)
struct FortExpeditionListViewWidget_SetExpeditionListSortType final
{
public:
	EFortExpeditionListSort                       InSortType;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionListViewWidget_SetExpeditionListSortType) == 0x000001, "Wrong alignment on FortExpeditionListViewWidget_SetExpeditionListSortType");
static_assert(sizeof(FortExpeditionListViewWidget_SetExpeditionListSortType) == 0x000001, "Wrong size on FortExpeditionListViewWidget_SetExpeditionListSortType");
static_assert(offsetof(FortExpeditionListViewWidget_SetExpeditionListSortType, InSortType) == 0x000000, "Member 'FortExpeditionListViewWidget_SetExpeditionListSortType::InSortType' has a wrong offset!");

// Function FortniteUI.FortExpeditionListViewWidget.GetExpeditionListSortName
// 0x0018 (0x0018 - 0x0000)
struct FortExpeditionListViewWidget_GetExpeditionListSortName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionListViewWidget_GetExpeditionListSortName) == 0x000008, "Wrong alignment on FortExpeditionListViewWidget_GetExpeditionListSortName");
static_assert(sizeof(FortExpeditionListViewWidget_GetExpeditionListSortName) == 0x000018, "Wrong size on FortExpeditionListViewWidget_GetExpeditionListSortName");
static_assert(offsetof(FortExpeditionListViewWidget_GetExpeditionListSortName, ReturnValue) == 0x000000, "Member 'FortExpeditionListViewWidget_GetExpeditionListSortName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortExpeditionOverviewWidget.HandleExpeditionTabButtonCreated
// 0x0010 (0x0010 - 0x0000)
struct FortExpeditionOverviewWidget_HandleExpeditionTabButtonCreated final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonButton*                          TabButton;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionOverviewWidget_HandleExpeditionTabButtonCreated) == 0x000008, "Wrong alignment on FortExpeditionOverviewWidget_HandleExpeditionTabButtonCreated");
static_assert(sizeof(FortExpeditionOverviewWidget_HandleExpeditionTabButtonCreated) == 0x000010, "Wrong size on FortExpeditionOverviewWidget_HandleExpeditionTabButtonCreated");
static_assert(offsetof(FortExpeditionOverviewWidget_HandleExpeditionTabButtonCreated, TabNameID) == 0x000000, "Member 'FortExpeditionOverviewWidget_HandleExpeditionTabButtonCreated::TabNameID' has a wrong offset!");
static_assert(offsetof(FortExpeditionOverviewWidget_HandleExpeditionTabButtonCreated, TabButton) == 0x000008, "Member 'FortExpeditionOverviewWidget_HandleExpeditionTabButtonCreated::TabButton' has a wrong offset!");

// Function FortniteUI.FortExpeditionOverviewWidget.HandleExpeditionTabSelected
// 0x0008 (0x0008 - 0x0000)
struct FortExpeditionOverviewWidget_HandleExpeditionTabSelected final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionOverviewWidget_HandleExpeditionTabSelected) == 0x000004, "Wrong alignment on FortExpeditionOverviewWidget_HandleExpeditionTabSelected");
static_assert(sizeof(FortExpeditionOverviewWidget_HandleExpeditionTabSelected) == 0x000008, "Wrong size on FortExpeditionOverviewWidget_HandleExpeditionTabSelected");
static_assert(offsetof(FortExpeditionOverviewWidget_HandleExpeditionTabSelected, TabNameID) == 0x000000, "Member 'FortExpeditionOverviewWidget_HandleExpeditionTabSelected::TabNameID' has a wrong offset!");

// Function FortniteUI.FortExpeditionOverviewWidget.OnExpeditionTabSelected
// 0x0008 (0x0008 - 0x0000)
struct FortExpeditionOverviewWidget_OnExpeditionTabSelected final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionOverviewWidget_OnExpeditionTabSelected) == 0x000004, "Wrong alignment on FortExpeditionOverviewWidget_OnExpeditionTabSelected");
static_assert(sizeof(FortExpeditionOverviewWidget_OnExpeditionTabSelected) == 0x000008, "Wrong size on FortExpeditionOverviewWidget_OnExpeditionTabSelected");
static_assert(offsetof(FortExpeditionOverviewWidget_OnExpeditionTabSelected, TabNameID) == 0x000000, "Member 'FortExpeditionOverviewWidget_OnExpeditionTabSelected::TabNameID' has a wrong offset!");

// Function FortniteUI.FortExpeditionReturnsWidget.SetData
// 0x0008 (0x0008 - 0x0000)
struct FortExpeditionReturnsWidget_SetData final
{
public:
	class UFortExpeditionItem*                    InItem;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortExpeditionReturnsWidget_SetData) == 0x000008, "Wrong alignment on FortExpeditionReturnsWidget_SetData");
static_assert(sizeof(FortExpeditionReturnsWidget_SetData) == 0x000008, "Wrong size on FortExpeditionReturnsWidget_SetData");
static_assert(offsetof(FortExpeditionReturnsWidget_SetData, InItem) == 0x000000, "Member 'FortExpeditionReturnsWidget_SetData::InItem' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.BindToFeatureStateAndInitialize
// 0x0018 (0x0018 - 0x0000)
struct FortFrontEndContext_BindToFeatureStateAndInitialize final
{
public:
	EFortFrontEndFeature                          Feature;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EFortFrontEndFeature ChangedFeature, EFortFrontEndFeatureState NewState, EFortFrontEndFeatureStateReason Reason)> Delegate;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_BindToFeatureStateAndInitialize) == 0x000004, "Wrong alignment on FortFrontEndContext_BindToFeatureStateAndInitialize");
static_assert(sizeof(FortFrontEndContext_BindToFeatureStateAndInitialize) == 0x000018, "Wrong size on FortFrontEndContext_BindToFeatureStateAndInitialize");
static_assert(offsetof(FortFrontEndContext_BindToFeatureStateAndInitialize, Feature) == 0x000000, "Member 'FortFrontEndContext_BindToFeatureStateAndInitialize::Feature' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_BindToFeatureStateAndInitialize, Delegate) == 0x000008, "Member 'FortFrontEndContext_BindToFeatureStateAndInitialize::Delegate' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.BroadcastMainTabSelected
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_BroadcastMainTabSelected final
{
public:
	class FName                                   TabName;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_BroadcastMainTabSelected) == 0x000004, "Wrong alignment on FortFrontEndContext_BroadcastMainTabSelected");
static_assert(sizeof(FortFrontEndContext_BroadcastMainTabSelected) == 0x000008, "Wrong size on FortFrontEndContext_BroadcastMainTabSelected");
static_assert(offsetof(FortFrontEndContext_BroadcastMainTabSelected, TabName) == 0x000000, "Member 'FortFrontEndContext_BroadcastMainTabSelected::TabName' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.CanFindTileForQuest
// 0x0010 (0x0010 - 0x0000)
struct FortFrontEndContext_CanFindTileForQuest final
{
public:
	class UFortQuestItem*                         QuestItem;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_CanFindTileForQuest) == 0x000008, "Wrong alignment on FortFrontEndContext_CanFindTileForQuest");
static_assert(sizeof(FortFrontEndContext_CanFindTileForQuest) == 0x000010, "Wrong size on FortFrontEndContext_CanFindTileForQuest");
static_assert(offsetof(FortFrontEndContext_CanFindTileForQuest, QuestItem) == 0x000000, "Member 'FortFrontEndContext_CanFindTileForQuest::QuestItem' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_CanFindTileForQuest, ReturnValue) == 0x000008, "Member 'FortFrontEndContext_CanFindTileForQuest::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.ForceSetFeatureState
// 0x0003 (0x0003 - 0x0000)
struct FortFrontEndContext_ForceSetFeatureState final
{
public:
	EFortFrontEndFeature                          Feature;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortFrontEndFeatureState                     State;                                             // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortFrontEndFeatureStateReason               Reason;                                            // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_ForceSetFeatureState) == 0x000001, "Wrong alignment on FortFrontEndContext_ForceSetFeatureState");
static_assert(sizeof(FortFrontEndContext_ForceSetFeatureState) == 0x000003, "Wrong size on FortFrontEndContext_ForceSetFeatureState");
static_assert(offsetof(FortFrontEndContext_ForceSetFeatureState, Feature) == 0x000000, "Member 'FortFrontEndContext_ForceSetFeatureState::Feature' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_ForceSetFeatureState, State) == 0x000001, "Member 'FortFrontEndContext_ForceSetFeatureState::State' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_ForceSetFeatureState, Reason) == 0x000002, "Member 'FortFrontEndContext_ForceSetFeatureState::Reason' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetHeroPlayerPawnByIndex
// 0x0010 (0x0010 - 0x0000)
struct FortFrontEndContext_GetHeroPlayerPawnByIndex final
{
public:
	int32                                         PartyMemberIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetHeroPlayerPawnByIndex) == 0x000008, "Wrong alignment on FortFrontEndContext_GetHeroPlayerPawnByIndex");
static_assert(sizeof(FortFrontEndContext_GetHeroPlayerPawnByIndex) == 0x000010, "Wrong size on FortFrontEndContext_GetHeroPlayerPawnByIndex");
static_assert(offsetof(FortFrontEndContext_GetHeroPlayerPawnByIndex, PartyMemberIndex) == 0x000000, "Member 'FortFrontEndContext_GetHeroPlayerPawnByIndex::PartyMemberIndex' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetHeroPlayerPawnByIndex, ReturnValue) == 0x000008, "Member 'FortFrontEndContext_GetHeroPlayerPawnByIndex::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetHeroPlayerPawnForCurrentDisplayedItem
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_GetHeroPlayerPawnForCurrentDisplayedItem final
{
public:
	class AFortPlayerPawn*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetHeroPlayerPawnForCurrentDisplayedItem) == 0x000008, "Wrong alignment on FortFrontEndContext_GetHeroPlayerPawnForCurrentDisplayedItem");
static_assert(sizeof(FortFrontEndContext_GetHeroPlayerPawnForCurrentDisplayedItem) == 0x000008, "Wrong size on FortFrontEndContext_GetHeroPlayerPawnForCurrentDisplayedItem");
static_assert(offsetof(FortFrontEndContext_GetHeroPlayerPawnForCurrentDisplayedItem, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetHeroPlayerPawnForCurrentDisplayedItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetSelectableGadgets
// 0x0020 (0x0020 - 0x0000)
struct FortFrontEndContext_GetSelectableGadgets final
{
public:
	TArray<class UFortWorldItem*>                 SelectableGadgets;                                 // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UFortWorldItem*>                 LastSelectedGadgets;                               // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetSelectableGadgets) == 0x000008, "Wrong alignment on FortFrontEndContext_GetSelectableGadgets");
static_assert(sizeof(FortFrontEndContext_GetSelectableGadgets) == 0x000020, "Wrong size on FortFrontEndContext_GetSelectableGadgets");
static_assert(offsetof(FortFrontEndContext_GetSelectableGadgets, SelectableGadgets) == 0x000000, "Member 'FortFrontEndContext_GetSelectableGadgets::SelectableGadgets' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetSelectableGadgets, LastSelectedGadgets) == 0x000010, "Member 'FortFrontEndContext_GetSelectableGadgets::LastSelectedGadgets' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.IsActiveTileMissionValid
// 0x0001 (0x0001 - 0x0000)
struct FortFrontEndContext_IsActiveTileMissionValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_IsActiveTileMissionValid) == 0x000001, "Wrong alignment on FortFrontEndContext_IsActiveTileMissionValid");
static_assert(sizeof(FortFrontEndContext_IsActiveTileMissionValid) == 0x000001, "Wrong size on FortFrontEndContext_IsActiveTileMissionValid");
static_assert(offsetof(FortFrontEndContext_IsActiveTileMissionValid, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_IsActiveTileMissionValid::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.PushContentWidget_Adv
// 0x0010 (0x0010 - 0x0000)
struct FortFrontEndContext_PushContentWidget_Adv final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideHeader;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideFooter;                                       // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideChatWidget;                                   // 0x000A(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_PushContentWidget_Adv) == 0x000008, "Wrong alignment on FortFrontEndContext_PushContentWidget_Adv");
static_assert(sizeof(FortFrontEndContext_PushContentWidget_Adv) == 0x000010, "Wrong size on FortFrontEndContext_PushContentWidget_Adv");
static_assert(offsetof(FortFrontEndContext_PushContentWidget_Adv, Widget) == 0x000000, "Member 'FortFrontEndContext_PushContentWidget_Adv::Widget' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_PushContentWidget_Adv, bHideHeader) == 0x000008, "Member 'FortFrontEndContext_PushContentWidget_Adv::bHideHeader' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_PushContentWidget_Adv, bHideFooter) == 0x000009, "Member 'FortFrontEndContext_PushContentWidget_Adv::bHideFooter' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_PushContentWidget_Adv, bHideChatWidget) == 0x00000A, "Member 'FortFrontEndContext_PushContentWidget_Adv::bHideChatWidget' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.SelectGadgetForSlot
// 0x0010 (0x0010 - 0x0000)
struct FortFrontEndContext_SelectGadgetForSlot final
{
public:
	int32                                         Slot;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemDefinition*                    GadgetDefinition;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_SelectGadgetForSlot) == 0x000008, "Wrong alignment on FortFrontEndContext_SelectGadgetForSlot");
static_assert(sizeof(FortFrontEndContext_SelectGadgetForSlot) == 0x000010, "Wrong size on FortFrontEndContext_SelectGadgetForSlot");
static_assert(offsetof(FortFrontEndContext_SelectGadgetForSlot, Slot) == 0x000000, "Member 'FortFrontEndContext_SelectGadgetForSlot::Slot' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_SelectGadgetForSlot, GadgetDefinition) == 0x000008, "Member 'FortFrontEndContext_SelectGadgetForSlot::GadgetDefinition' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.SelectTileForQuest
// 0x0018 (0x0018 - 0x0000)
struct FortFrontEndContext_SelectTileForQuest final
{
public:
	class UFortQuestItem*                         QuestItem;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutCriticalMissionDifficultyOverrideMin;           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutCriticalMissionDifficultyOverrideMax;           // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_SelectTileForQuest) == 0x000008, "Wrong alignment on FortFrontEndContext_SelectTileForQuest");
static_assert(sizeof(FortFrontEndContext_SelectTileForQuest) == 0x000018, "Wrong size on FortFrontEndContext_SelectTileForQuest");
static_assert(offsetof(FortFrontEndContext_SelectTileForQuest, QuestItem) == 0x000000, "Member 'FortFrontEndContext_SelectTileForQuest::QuestItem' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_SelectTileForQuest, OutCriticalMissionDifficultyOverrideMin) == 0x000008, "Member 'FortFrontEndContext_SelectTileForQuest::OutCriticalMissionDifficultyOverrideMin' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_SelectTileForQuest, OutCriticalMissionDifficultyOverrideMax) == 0x00000C, "Member 'FortFrontEndContext_SelectTileForQuest::OutCriticalMissionDifficultyOverrideMax' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_SelectTileForQuest, ReturnValue) == 0x000010, "Member 'FortFrontEndContext_SelectTileForQuest::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.SendPlayQuestAnalytic
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_SendPlayQuestAnalytic final
{
public:
	class UFortQuestItem*                         QuestItem;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_SendPlayQuestAnalytic) == 0x000008, "Wrong alignment on FortFrontEndContext_SendPlayQuestAnalytic");
static_assert(sizeof(FortFrontEndContext_SendPlayQuestAnalytic) == 0x000008, "Wrong size on FortFrontEndContext_SendPlayQuestAnalytic");
static_assert(offsetof(FortFrontEndContext_SendPlayQuestAnalytic, QuestItem) == 0x000000, "Member 'FortFrontEndContext_SendPlayQuestAnalytic::QuestItem' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.SetFrontEndCamera
// 0x0001 (0x0001 - 0x0000)
struct FortFrontEndContext_SetFrontEndCamera final
{
public:
	EFrontEndCamera                               NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_SetFrontEndCamera) == 0x000001, "Wrong alignment on FortFrontEndContext_SetFrontEndCamera");
static_assert(sizeof(FortFrontEndContext_SetFrontEndCamera) == 0x000001, "Wrong size on FortFrontEndContext_SetFrontEndCamera");
static_assert(offsetof(FortFrontEndContext_SetFrontEndCamera, NewState) == 0x000000, "Member 'FortFrontEndContext_SetFrontEndCamera::NewState' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.SetFrontEndVisibility
// 0x0003 (0x0003 - 0x0000)
struct FortFrontEndContext_SetFrontEndVisibility final
{
public:
	bool                                          bHideHeader;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideFooter;                                       // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideChatWidget;                                   // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_SetFrontEndVisibility) == 0x000001, "Wrong alignment on FortFrontEndContext_SetFrontEndVisibility");
static_assert(sizeof(FortFrontEndContext_SetFrontEndVisibility) == 0x000003, "Wrong size on FortFrontEndContext_SetFrontEndVisibility");
static_assert(offsetof(FortFrontEndContext_SetFrontEndVisibility, bHideHeader) == 0x000000, "Member 'FortFrontEndContext_SetFrontEndVisibility::bHideHeader' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_SetFrontEndVisibility, bHideFooter) == 0x000001, "Member 'FortFrontEndContext_SetFrontEndVisibility::bHideFooter' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_SetFrontEndVisibility, bHideChatWidget) == 0x000002, "Member 'FortFrontEndContext_SetFrontEndVisibility::bHideChatWidget' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.SetHeroChoice
// 0x0010 (0x0010 - 0x0000)
struct FortFrontEndContext_SetHeroChoice final
{
public:
	int32                                         PartyMemberIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHero*                              Hero;                                              // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_SetHeroChoice) == 0x000008, "Wrong alignment on FortFrontEndContext_SetHeroChoice");
static_assert(sizeof(FortFrontEndContext_SetHeroChoice) == 0x000010, "Wrong size on FortFrontEndContext_SetHeroChoice");
static_assert(offsetof(FortFrontEndContext_SetHeroChoice, PartyMemberIndex) == 0x000000, "Member 'FortFrontEndContext_SetHeroChoice::PartyMemberIndex' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_SetHeroChoice, Hero) == 0x000008, "Member 'FortFrontEndContext_SetHeroChoice::Hero' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.SetPersonalHeroChoice
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_SetPersonalHeroChoice final
{
public:
	class UFortHero*                              Hero;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_SetPersonalHeroChoice) == 0x000008, "Wrong alignment on FortFrontEndContext_SetPersonalHeroChoice");
static_assert(sizeof(FortFrontEndContext_SetPersonalHeroChoice) == 0x000008, "Wrong size on FortFrontEndContext_SetPersonalHeroChoice");
static_assert(offsetof(FortFrontEndContext_SetPersonalHeroChoice, Hero) == 0x000000, "Member 'FortFrontEndContext_SetPersonalHeroChoice::Hero' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.SetSelectedTheater
// 0x0010 (0x0010 - 0x0000)
struct FortFrontEndContext_SetSelectedTheater final
{
public:
	class FString                                 TheaterId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_SetSelectedTheater) == 0x000008, "Wrong alignment on FortFrontEndContext_SetSelectedTheater");
static_assert(sizeof(FortFrontEndContext_SetSelectedTheater) == 0x000010, "Wrong size on FortFrontEndContext_SetSelectedTheater");
static_assert(offsetof(FortFrontEndContext_SetSelectedTheater, TheaterId) == 0x000000, "Member 'FortFrontEndContext_SetSelectedTheater::TheaterId' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.ViewVaultItem
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_ViewVaultItem final
{
public:
	class UFortItem*                              ItemToView;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_ViewVaultItem) == 0x000008, "Wrong alignment on FortFrontEndContext_ViewVaultItem");
static_assert(sizeof(FortFrontEndContext_ViewVaultItem) == 0x000008, "Wrong size on FortFrontEndContext_ViewVaultItem");
static_assert(offsetof(FortFrontEndContext_ViewVaultItem, ItemToView) == 0x000000, "Member 'FortFrontEndContext_ViewVaultItem::ItemToView' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.ViewVaultItemFromDefinition
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_ViewVaultItemFromDefinition final
{
public:
	const class UFortItemDefinition*              ItemToViewDefinition;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_ViewVaultItemFromDefinition) == 0x000008, "Wrong alignment on FortFrontEndContext_ViewVaultItemFromDefinition");
static_assert(sizeof(FortFrontEndContext_ViewVaultItemFromDefinition) == 0x000008, "Wrong size on FortFrontEndContext_ViewVaultItemFromDefinition");
static_assert(offsetof(FortFrontEndContext_ViewVaultItemFromDefinition, ItemToViewDefinition) == 0x000000, "Member 'FortFrontEndContext_ViewVaultItemFromDefinition::ItemToViewDefinition' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.CanCompleteQuestInActiveTileMission
// 0x0010 (0x0010 - 0x0000)
struct FortFrontEndContext_CanCompleteQuestInActiveTileMission final
{
public:
	class UFortQuestItem*                         QuestItem;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_CanCompleteQuestInActiveTileMission) == 0x000008, "Wrong alignment on FortFrontEndContext_CanCompleteQuestInActiveTileMission");
static_assert(sizeof(FortFrontEndContext_CanCompleteQuestInActiveTileMission) == 0x000010, "Wrong size on FortFrontEndContext_CanCompleteQuestInActiveTileMission");
static_assert(offsetof(FortFrontEndContext_CanCompleteQuestInActiveTileMission, QuestItem) == 0x000000, "Member 'FortFrontEndContext_CanCompleteQuestInActiveTileMission::QuestItem' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_CanCompleteQuestInActiveTileMission, ReturnValue) == 0x000008, "Member 'FortFrontEndContext_CanCompleteQuestInActiveTileMission::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.CanCompleteQuestInFocusedOrActiveTileMission
// 0x0010 (0x0010 - 0x0000)
struct FortFrontEndContext_CanCompleteQuestInFocusedOrActiveTileMission final
{
public:
	class UFortQuestItem*                         QuestItem;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_CanCompleteQuestInFocusedOrActiveTileMission) == 0x000008, "Wrong alignment on FortFrontEndContext_CanCompleteQuestInFocusedOrActiveTileMission");
static_assert(sizeof(FortFrontEndContext_CanCompleteQuestInFocusedOrActiveTileMission) == 0x000010, "Wrong size on FortFrontEndContext_CanCompleteQuestInFocusedOrActiveTileMission");
static_assert(offsetof(FortFrontEndContext_CanCompleteQuestInFocusedOrActiveTileMission, QuestItem) == 0x000000, "Member 'FortFrontEndContext_CanCompleteQuestInFocusedOrActiveTileMission::QuestItem' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_CanCompleteQuestInFocusedOrActiveTileMission, ReturnValue) == 0x000008, "Member 'FortFrontEndContext_CanCompleteQuestInFocusedOrActiveTileMission::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetAccountLevelUpRewards
// 0x0018 (0x0018 - 0x0000)
struct FortFrontEndContext_GetAccountLevelUpRewards final
{
public:
	TArray<struct FFortItemQuantityPair>          Rewards;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         AccountLevel;                                      // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_GetAccountLevelUpRewards) == 0x000008, "Wrong alignment on FortFrontEndContext_GetAccountLevelUpRewards");
static_assert(sizeof(FortFrontEndContext_GetAccountLevelUpRewards) == 0x000018, "Wrong size on FortFrontEndContext_GetAccountLevelUpRewards");
static_assert(offsetof(FortFrontEndContext_GetAccountLevelUpRewards, Rewards) == 0x000000, "Member 'FortFrontEndContext_GetAccountLevelUpRewards::Rewards' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetAccountLevelUpRewards, AccountLevel) == 0x000010, "Member 'FortFrontEndContext_GetAccountLevelUpRewards::AccountLevel' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetActiveTile
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_GetActiveTile final
{
public:
	class AFortTheaterMapTile*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetActiveTile) == 0x000008, "Wrong alignment on FortFrontEndContext_GetActiveTile");
static_assert(sizeof(FortFrontEndContext_GetActiveTile) == 0x000008, "Wrong size on FortFrontEndContext_GetActiveTile");
static_assert(offsetof(FortFrontEndContext_GetActiveTile, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetActiveTile::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetActiveTileMissionDetails
// 0x0170 (0x0170 - 0x0000)
struct FortFrontEndContext_GetActiveTileMissionDetails final
{
public:
	struct FFortMissionDetails                    MissionDetails;                                    // 0x0000(0x0168)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0168(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_GetActiveTileMissionDetails) == 0x000008, "Wrong alignment on FortFrontEndContext_GetActiveTileMissionDetails");
static_assert(sizeof(FortFrontEndContext_GetActiveTileMissionDetails) == 0x000170, "Wrong size on FortFrontEndContext_GetActiveTileMissionDetails");
static_assert(offsetof(FortFrontEndContext_GetActiveTileMissionDetails, MissionDetails) == 0x000000, "Member 'FortFrontEndContext_GetActiveTileMissionDetails::MissionDetails' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetActiveTileMissionDetails, ReturnValue) == 0x000168, "Member 'FortFrontEndContext_GetActiveTileMissionDetails::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetAllTheaterData
// 0x0018 (0x0018 - 0x0000)
struct FortFrontEndContext_GetAllTheaterData final
{
public:
	TArray<struct FFortTheaterMapData>            OutAllTheaterData;                                 // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_GetAllTheaterData) == 0x000008, "Wrong alignment on FortFrontEndContext_GetAllTheaterData");
static_assert(sizeof(FortFrontEndContext_GetAllTheaterData) == 0x000018, "Wrong size on FortFrontEndContext_GetAllTheaterData");
static_assert(offsetof(FortFrontEndContext_GetAllTheaterData, OutAllTheaterData) == 0x000000, "Member 'FortFrontEndContext_GetAllTheaterData::OutAllTheaterData' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetAllTheaterData, ReturnValue) == 0x000010, "Member 'FortFrontEndContext_GetAllTheaterData::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetAttributeDescription
// 0x00B0 (0x00B0 - 0x0000)
struct FortFrontEndContext_GetAttributeDescription final
{
public:
	struct FFortAttributeInfo                     InAttribute;                                       // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  InRequiredTags;                                    // 0x0078(0x0020)(Parm, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0098(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetAttributeDescription) == 0x000008, "Wrong alignment on FortFrontEndContext_GetAttributeDescription");
static_assert(sizeof(FortFrontEndContext_GetAttributeDescription) == 0x0000B0, "Wrong size on FortFrontEndContext_GetAttributeDescription");
static_assert(offsetof(FortFrontEndContext_GetAttributeDescription, InAttribute) == 0x000000, "Member 'FortFrontEndContext_GetAttributeDescription::InAttribute' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetAttributeDescription, InRequiredTags) == 0x000078, "Member 'FortFrontEndContext_GetAttributeDescription::InRequiredTags' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetAttributeDescription, ReturnValue) == 0x000098, "Member 'FortFrontEndContext_GetAttributeDescription::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetAttributeDisplayName
// 0x00B0 (0x00B0 - 0x0000)
struct FortFrontEndContext_GetAttributeDisplayName final
{
public:
	struct FFortAttributeInfo                     InAttribute;                                       // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  InRequiredTags;                                    // 0x0078(0x0020)(Parm, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0098(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetAttributeDisplayName) == 0x000008, "Wrong alignment on FortFrontEndContext_GetAttributeDisplayName");
static_assert(sizeof(FortFrontEndContext_GetAttributeDisplayName) == 0x0000B0, "Wrong size on FortFrontEndContext_GetAttributeDisplayName");
static_assert(offsetof(FortFrontEndContext_GetAttributeDisplayName, InAttribute) == 0x000000, "Member 'FortFrontEndContext_GetAttributeDisplayName::InAttribute' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetAttributeDisplayName, InRequiredTags) == 0x000078, "Member 'FortFrontEndContext_GetAttributeDisplayName::InRequiredTags' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetAttributeDisplayName, ReturnValue) == 0x000098, "Member 'FortFrontEndContext_GetAttributeDisplayName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetAttributeIcon
// 0x0368 (0x0368 - 0x0000)
struct FortFrontEndContext_GetAttributeIcon final
{
public:
	struct FFortAttributeInfo                     InAttribute;                                       // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  InRequiredTags;                                    // 0x0078(0x0020)(Parm, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                    ReturnValue;                                       // 0x0098(0x02D0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetAttributeIcon) == 0x000008, "Wrong alignment on FortFrontEndContext_GetAttributeIcon");
static_assert(sizeof(FortFrontEndContext_GetAttributeIcon) == 0x000368, "Wrong size on FortFrontEndContext_GetAttributeIcon");
static_assert(offsetof(FortFrontEndContext_GetAttributeIcon, InAttribute) == 0x000000, "Member 'FortFrontEndContext_GetAttributeIcon::InAttribute' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetAttributeIcon, InRequiredTags) == 0x000078, "Member 'FortFrontEndContext_GetAttributeIcon::InRequiredTags' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetAttributeIcon, ReturnValue) == 0x000098, "Member 'FortFrontEndContext_GetAttributeIcon::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetAvailableAthenaPlaylists
// 0x0010 (0x0010 - 0x0000)
struct FortFrontEndContext_GetAvailableAthenaPlaylists final
{
public:
	TArray<class UAthenaCustomPlaylistEvent*>     ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetAvailableAthenaPlaylists) == 0x000008, "Wrong alignment on FortFrontEndContext_GetAvailableAthenaPlaylists");
static_assert(sizeof(FortFrontEndContext_GetAvailableAthenaPlaylists) == 0x000010, "Wrong size on FortFrontEndContext_GetAvailableAthenaPlaylists");
static_assert(offsetof(FortFrontEndContext_GetAvailableAthenaPlaylists, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetAvailableAthenaPlaylists::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetAvailableDifficulties
// 0x0018 (0x0018 - 0x0000)
struct FortFrontEndContext_GetAvailableDifficulties final
{
public:
	bool                                          bIncludeMissionAlertTiles;                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameDifficultyInfo>            ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetAvailableDifficulties) == 0x000008, "Wrong alignment on FortFrontEndContext_GetAvailableDifficulties");
static_assert(sizeof(FortFrontEndContext_GetAvailableDifficulties) == 0x000018, "Wrong size on FortFrontEndContext_GetAvailableDifficulties");
static_assert(offsetof(FortFrontEndContext_GetAvailableDifficulties, bIncludeMissionAlertTiles) == 0x000000, "Member 'FortFrontEndContext_GetAvailableDifficulties::bIncludeMissionAlertTiles' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetAvailableDifficulties, ReturnValue) == 0x000008, "Member 'FortFrontEndContext_GetAvailableDifficulties::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetCurrentTheaterName
// 0x0018 (0x0018 - 0x0000)
struct FortFrontEndContext_GetCurrentTheaterName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetCurrentTheaterName) == 0x000008, "Wrong alignment on FortFrontEndContext_GetCurrentTheaterName");
static_assert(sizeof(FortFrontEndContext_GetCurrentTheaterName) == 0x000018, "Wrong size on FortFrontEndContext_GetCurrentTheaterName");
static_assert(offsetof(FortFrontEndContext_GetCurrentTheaterName, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetCurrentTheaterName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetDefenderSquadIDByTheaterID
// 0x0018 (0x0018 - 0x0000)
struct FortFrontEndContext_GetDefenderSquadIDByTheaterID final
{
public:
	class FString                                 TheaterId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetDefenderSquadIDByTheaterID) == 0x000008, "Wrong alignment on FortFrontEndContext_GetDefenderSquadIDByTheaterID");
static_assert(sizeof(FortFrontEndContext_GetDefenderSquadIDByTheaterID) == 0x000018, "Wrong size on FortFrontEndContext_GetDefenderSquadIDByTheaterID");
static_assert(offsetof(FortFrontEndContext_GetDefenderSquadIDByTheaterID, TheaterId) == 0x000000, "Member 'FortFrontEndContext_GetDefenderSquadIDByTheaterID::TheaterId' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetDefenderSquadIDByTheaterID, ReturnValue) == 0x000010, "Member 'FortFrontEndContext_GetDefenderSquadIDByTheaterID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetDesiredPlayButtonCamera
// 0x0001 (0x0001 - 0x0000)
struct FortFrontEndContext_GetDesiredPlayButtonCamera final
{
public:
	EFrontEndCamera                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetDesiredPlayButtonCamera) == 0x000001, "Wrong alignment on FortFrontEndContext_GetDesiredPlayButtonCamera");
static_assert(sizeof(FortFrontEndContext_GetDesiredPlayButtonCamera) == 0x000001, "Wrong size on FortFrontEndContext_GetDesiredPlayButtonCamera");
static_assert(offsetof(FortFrontEndContext_GetDesiredPlayButtonCamera, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetDesiredPlayButtonCamera::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetFabricatorDisintegrationSecondsRemaining
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_GetFabricatorDisintegrationSecondsRemaining final
{
public:
	int32                                         TheaterSlot;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetFabricatorDisintegrationSecondsRemaining) == 0x000004, "Wrong alignment on FortFrontEndContext_GetFabricatorDisintegrationSecondsRemaining");
static_assert(sizeof(FortFrontEndContext_GetFabricatorDisintegrationSecondsRemaining) == 0x000008, "Wrong size on FortFrontEndContext_GetFabricatorDisintegrationSecondsRemaining");
static_assert(offsetof(FortFrontEndContext_GetFabricatorDisintegrationSecondsRemaining, TheaterSlot) == 0x000000, "Member 'FortFrontEndContext_GetFabricatorDisintegrationSecondsRemaining::TheaterSlot' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetFabricatorDisintegrationSecondsRemaining, ReturnValue) == 0x000004, "Member 'FortFrontEndContext_GetFabricatorDisintegrationSecondsRemaining::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetFabricatorIncomingGooAmount
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_GetFabricatorIncomingGooAmount final
{
public:
	int32                                         TheaterSlot;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetFabricatorIncomingGooAmount) == 0x000004, "Wrong alignment on FortFrontEndContext_GetFabricatorIncomingGooAmount");
static_assert(sizeof(FortFrontEndContext_GetFabricatorIncomingGooAmount) == 0x000008, "Wrong size on FortFrontEndContext_GetFabricatorIncomingGooAmount");
static_assert(offsetof(FortFrontEndContext_GetFabricatorIncomingGooAmount, TheaterSlot) == 0x000000, "Member 'FortFrontEndContext_GetFabricatorIncomingGooAmount::TheaterSlot' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetFabricatorIncomingGooAmount, ReturnValue) == 0x000004, "Member 'FortFrontEndContext_GetFabricatorIncomingGooAmount::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetFabricatorStoredGooAmount
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_GetFabricatorStoredGooAmount final
{
public:
	int32                                         TheaterSlot;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetFabricatorStoredGooAmount) == 0x000004, "Wrong alignment on FortFrontEndContext_GetFabricatorStoredGooAmount");
static_assert(sizeof(FortFrontEndContext_GetFabricatorStoredGooAmount) == 0x000008, "Wrong size on FortFrontEndContext_GetFabricatorStoredGooAmount");
static_assert(offsetof(FortFrontEndContext_GetFabricatorStoredGooAmount, TheaterSlot) == 0x000000, "Member 'FortFrontEndContext_GetFabricatorStoredGooAmount::TheaterSlot' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetFabricatorStoredGooAmount, ReturnValue) == 0x000004, "Member 'FortFrontEndContext_GetFabricatorStoredGooAmount::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetFeatureState
// 0x0003 (0x0003 - 0x0000)
struct FortFrontEndContext_GetFeatureState final
{
public:
	EFortFrontEndFeature                          Feature;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortFrontEndFeatureState                     OutFeatureState;                                   // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortFrontEndFeatureStateReason               OutReason;                                         // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetFeatureState) == 0x000001, "Wrong alignment on FortFrontEndContext_GetFeatureState");
static_assert(sizeof(FortFrontEndContext_GetFeatureState) == 0x000003, "Wrong size on FortFrontEndContext_GetFeatureState");
static_assert(offsetof(FortFrontEndContext_GetFeatureState, Feature) == 0x000000, "Member 'FortFrontEndContext_GetFeatureState::Feature' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetFeatureState, OutFeatureState) == 0x000001, "Member 'FortFrontEndContext_GetFeatureState::OutFeatureState' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetFeatureState, OutReason) == 0x000002, "Member 'FortFrontEndContext_GetFeatureState::OutReason' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetFeatureStateReasonText
// 0x0020 (0x0020 - 0x0000)
struct FortFrontEndContext_GetFeatureStateReasonText final
{
public:
	EFortFrontEndFeatureStateReason               Reason;                                            // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetFeatureStateReasonText) == 0x000008, "Wrong alignment on FortFrontEndContext_GetFeatureStateReasonText");
static_assert(sizeof(FortFrontEndContext_GetFeatureStateReasonText) == 0x000020, "Wrong size on FortFrontEndContext_GetFeatureStateReasonText");
static_assert(offsetof(FortFrontEndContext_GetFeatureStateReasonText, Reason) == 0x000000, "Member 'FortFrontEndContext_GetFeatureStateReasonText::Reason' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetFeatureStateReasonText, ReturnValue) == 0x000008, "Member 'FortFrontEndContext_GetFeatureStateReasonText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetFocusedOrActiveTileMissionDetails
// 0x0170 (0x0170 - 0x0000)
struct FortFrontEndContext_GetFocusedOrActiveTileMissionDetails final
{
public:
	struct FFortMissionDetails                    MissionDetails;                                    // 0x0000(0x0168)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0168(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_GetFocusedOrActiveTileMissionDetails) == 0x000008, "Wrong alignment on FortFrontEndContext_GetFocusedOrActiveTileMissionDetails");
static_assert(sizeof(FortFrontEndContext_GetFocusedOrActiveTileMissionDetails) == 0x000170, "Wrong size on FortFrontEndContext_GetFocusedOrActiveTileMissionDetails");
static_assert(offsetof(FortFrontEndContext_GetFocusedOrActiveTileMissionDetails, MissionDetails) == 0x000000, "Member 'FortFrontEndContext_GetFocusedOrActiveTileMissionDetails::MissionDetails' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetFocusedOrActiveTileMissionDetails, ReturnValue) == 0x000168, "Member 'FortFrontEndContext_GetFocusedOrActiveTileMissionDetails::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetFocusedTile
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_GetFocusedTile final
{
public:
	class AFortTheaterMapTile*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetFocusedTile) == 0x000008, "Wrong alignment on FortFrontEndContext_GetFocusedTile");
static_assert(sizeof(FortFrontEndContext_GetFocusedTile) == 0x000008, "Wrong size on FortFrontEndContext_GetFocusedTile");
static_assert(offsetof(FortFrontEndContext_GetFocusedTile, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetFocusedTile::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetFrontEndCamera
// 0x0001 (0x0001 - 0x0000)
struct FortFrontEndContext_GetFrontEndCamera final
{
public:
	EFrontEndCamera                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetFrontEndCamera) == 0x000001, "Wrong alignment on FortFrontEndContext_GetFrontEndCamera");
static_assert(sizeof(FortFrontEndContext_GetFrontEndCamera) == 0x000001, "Wrong size on FortFrontEndContext_GetFrontEndCamera");
static_assert(offsetof(FortFrontEndContext_GetFrontEndCamera, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetFrontEndCamera::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetHarvestingToolForLevel
// 0x0010 (0x0010 - 0x0000)
struct FortFrontEndContext_GetHarvestingToolForLevel final
{
public:
	int32                                         TheaterSlot;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InHarvestingOptimizerLevel;                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortWorldItemDefinition*               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetHarvestingToolForLevel) == 0x000008, "Wrong alignment on FortFrontEndContext_GetHarvestingToolForLevel");
static_assert(sizeof(FortFrontEndContext_GetHarvestingToolForLevel) == 0x000010, "Wrong size on FortFrontEndContext_GetHarvestingToolForLevel");
static_assert(offsetof(FortFrontEndContext_GetHarvestingToolForLevel, TheaterSlot) == 0x000000, "Member 'FortFrontEndContext_GetHarvestingToolForLevel::TheaterSlot' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetHarvestingToolForLevel, InHarvestingOptimizerLevel) == 0x000004, "Member 'FortFrontEndContext_GetHarvestingToolForLevel::InHarvestingOptimizerLevel' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetHarvestingToolForLevel, ReturnValue) == 0x000008, "Member 'FortFrontEndContext_GetHarvestingToolForLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetItemFromItemQuantityPair
// 0x0038 (0x0038 - 0x0000)
struct FortFrontEndContext_GetItemFromItemQuantityPair final
{
public:
	struct FFortItemQuantityPair                  InPair;                                            // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UFortItemDefinition*                    ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetItemFromItemQuantityPair) == 0x000008, "Wrong alignment on FortFrontEndContext_GetItemFromItemQuantityPair");
static_assert(sizeof(FortFrontEndContext_GetItemFromItemQuantityPair) == 0x000038, "Wrong size on FortFrontEndContext_GetItemFromItemQuantityPair");
static_assert(offsetof(FortFrontEndContext_GetItemFromItemQuantityPair, InPair) == 0x000000, "Member 'FortFrontEndContext_GetItemFromItemQuantityPair::InPair' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetItemFromItemQuantityPair, ReturnValue) == 0x000030, "Member 'FortFrontEndContext_GetItemFromItemQuantityPair::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetLobbyBackgroundLevelName
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_GetLobbyBackgroundLevelName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetLobbyBackgroundLevelName) == 0x000004, "Wrong alignment on FortFrontEndContext_GetLobbyBackgroundLevelName");
static_assert(sizeof(FortFrontEndContext_GetLobbyBackgroundLevelName) == 0x000008, "Wrong size on FortFrontEndContext_GetLobbyBackgroundLevelName");
static_assert(offsetof(FortFrontEndContext_GetLobbyBackgroundLevelName, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetLobbyBackgroundLevelName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetMaxAvailableDifficulty
// 0x0088 (0x0088 - 0x0000)
struct FortFrontEndContext_GetMaxAvailableDifficulty final
{
public:
	bool                                          bIncludeMissionAlertTiles;                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameDifficultyInfo                    ReturnValue;                                       // 0x0008(0x0080)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetMaxAvailableDifficulty) == 0x000008, "Wrong alignment on FortFrontEndContext_GetMaxAvailableDifficulty");
static_assert(sizeof(FortFrontEndContext_GetMaxAvailableDifficulty) == 0x000088, "Wrong size on FortFrontEndContext_GetMaxAvailableDifficulty");
static_assert(offsetof(FortFrontEndContext_GetMaxAvailableDifficulty, bIncludeMissionAlertTiles) == 0x000000, "Member 'FortFrontEndContext_GetMaxAvailableDifficulty::bIncludeMissionAlertTiles' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetMaxAvailableDifficulty, ReturnValue) == 0x000008, "Member 'FortFrontEndContext_GetMaxAvailableDifficulty::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetMCPRegion
// 0x0018 (0x0018 - 0x0000)
struct FortFrontEndContext_GetMCPRegion final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetMCPRegion) == 0x000008, "Wrong alignment on FortFrontEndContext_GetMCPRegion");
static_assert(sizeof(FortFrontEndContext_GetMCPRegion) == 0x000018, "Wrong size on FortFrontEndContext_GetMCPRegion");
static_assert(offsetof(FortFrontEndContext_GetMCPRegion, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetMCPRegion::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetOutpostCoreLevelByItemDefinition
// 0x0010 (0x0010 - 0x0000)
struct FortFrontEndContext_GetOutpostCoreLevelByItemDefinition final
{
public:
	class UFortOutpostItemDefinition*             OutpostCoreItemDef;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutCoreLevel;                                      // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_GetOutpostCoreLevelByItemDefinition) == 0x000008, "Wrong alignment on FortFrontEndContext_GetOutpostCoreLevelByItemDefinition");
static_assert(sizeof(FortFrontEndContext_GetOutpostCoreLevelByItemDefinition) == 0x000010, "Wrong size on FortFrontEndContext_GetOutpostCoreLevelByItemDefinition");
static_assert(offsetof(FortFrontEndContext_GetOutpostCoreLevelByItemDefinition, OutpostCoreItemDef) == 0x000000, "Member 'FortFrontEndContext_GetOutpostCoreLevelByItemDefinition::OutpostCoreItemDef' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetOutpostCoreLevelByItemDefinition, OutCoreLevel) == 0x000008, "Member 'FortFrontEndContext_GetOutpostCoreLevelByItemDefinition::OutCoreLevel' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetOutpostCoreLevelByItemDefinition, ReturnValue) == 0x00000C, "Member 'FortFrontEndContext_GetOutpostCoreLevelByItemDefinition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetOutpostCoreLevelByTheaterId
// 0x0018 (0x0018 - 0x0000)
struct FortFrontEndContext_GetOutpostCoreLevelByTheaterId final
{
public:
	class FString                                 TheaterId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutCoreLevel;                                      // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_GetOutpostCoreLevelByTheaterId) == 0x000008, "Wrong alignment on FortFrontEndContext_GetOutpostCoreLevelByTheaterId");
static_assert(sizeof(FortFrontEndContext_GetOutpostCoreLevelByTheaterId) == 0x000018, "Wrong size on FortFrontEndContext_GetOutpostCoreLevelByTheaterId");
static_assert(offsetof(FortFrontEndContext_GetOutpostCoreLevelByTheaterId, TheaterId) == 0x000000, "Member 'FortFrontEndContext_GetOutpostCoreLevelByTheaterId::TheaterId' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetOutpostCoreLevelByTheaterId, OutCoreLevel) == 0x000010, "Member 'FortFrontEndContext_GetOutpostCoreLevelByTheaterId::OutCoreLevel' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetOutpostCoreLevelByTheaterId, ReturnValue) == 0x000014, "Member 'FortFrontEndContext_GetOutpostCoreLevelByTheaterId::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetOutpostStructureMaxLevel
// 0x0018 (0x0018 - 0x0000)
struct FortFrontEndContext_GetOutpostStructureMaxLevel final
{
public:
	int32                                         TheaterSlot;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortOutpostItemDefinition*             OutpostStructure;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_GetOutpostStructureMaxLevel) == 0x000008, "Wrong alignment on FortFrontEndContext_GetOutpostStructureMaxLevel");
static_assert(sizeof(FortFrontEndContext_GetOutpostStructureMaxLevel) == 0x000018, "Wrong size on FortFrontEndContext_GetOutpostStructureMaxLevel");
static_assert(offsetof(FortFrontEndContext_GetOutpostStructureMaxLevel, TheaterSlot) == 0x000000, "Member 'FortFrontEndContext_GetOutpostStructureMaxLevel::TheaterSlot' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetOutpostStructureMaxLevel, OutpostStructure) == 0x000008, "Member 'FortFrontEndContext_GetOutpostStructureMaxLevel::OutpostStructure' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetOutpostStructureMaxLevel, ReturnValue) == 0x000010, "Member 'FortFrontEndContext_GetOutpostStructureMaxLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetOutpostStructureUpgradeCost
// 0x0030 (0x0030 - 0x0000)
struct FortFrontEndContext_GetOutpostStructureUpgradeCost final
{
public:
	int32                                         TheaterSlot;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UpgradeLevel;                                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortOutpostItemDefinition*             OutpostStructure;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortItemQuantityPair>          OutWorldItems;                                     // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FFortItemQuantityPair>          OutAccountItems;                                   // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetOutpostStructureUpgradeCost) == 0x000008, "Wrong alignment on FortFrontEndContext_GetOutpostStructureUpgradeCost");
static_assert(sizeof(FortFrontEndContext_GetOutpostStructureUpgradeCost) == 0x000030, "Wrong size on FortFrontEndContext_GetOutpostStructureUpgradeCost");
static_assert(offsetof(FortFrontEndContext_GetOutpostStructureUpgradeCost, TheaterSlot) == 0x000000, "Member 'FortFrontEndContext_GetOutpostStructureUpgradeCost::TheaterSlot' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetOutpostStructureUpgradeCost, UpgradeLevel) == 0x000004, "Member 'FortFrontEndContext_GetOutpostStructureUpgradeCost::UpgradeLevel' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetOutpostStructureUpgradeCost, OutpostStructure) == 0x000008, "Member 'FortFrontEndContext_GetOutpostStructureUpgradeCost::OutpostStructure' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetOutpostStructureUpgradeCost, OutWorldItems) == 0x000010, "Member 'FortFrontEndContext_GetOutpostStructureUpgradeCost::OutWorldItems' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetOutpostStructureUpgradeCost, OutAccountItems) == 0x000020, "Member 'FortFrontEndContext_GetOutpostStructureUpgradeCost::OutAccountItems' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetRecommendedDifficultyIndexesInAvailableDifficulties
// 0x0018 (0x0018 - 0x0000)
struct FortFrontEndContext_GetRecommendedDifficultyIndexesInAvailableDifficulties final
{
public:
	bool                                          bIncludeMissionAlertTiles;                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetRecommendedDifficultyIndexesInAvailableDifficulties) == 0x000008, "Wrong alignment on FortFrontEndContext_GetRecommendedDifficultyIndexesInAvailableDifficulties");
static_assert(sizeof(FortFrontEndContext_GetRecommendedDifficultyIndexesInAvailableDifficulties) == 0x000018, "Wrong size on FortFrontEndContext_GetRecommendedDifficultyIndexesInAvailableDifficulties");
static_assert(offsetof(FortFrontEndContext_GetRecommendedDifficultyIndexesInAvailableDifficulties, bIncludeMissionAlertTiles) == 0x000000, "Member 'FortFrontEndContext_GetRecommendedDifficultyIndexesInAvailableDifficulties::bIncludeMissionAlertTiles' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetRecommendedDifficultyIndexesInAvailableDifficulties, ReturnValue) == 0x000008, "Member 'FortFrontEndContext_GetRecommendedDifficultyIndexesInAvailableDifficulties::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetRecommendedTeamDifficulties
// 0x0010 (0x0010 - 0x0000)
struct FortFrontEndContext_GetRecommendedTeamDifficulties final
{
public:
	TArray<struct FGameDifficultyInfo>            ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetRecommendedTeamDifficulties) == 0x000008, "Wrong alignment on FortFrontEndContext_GetRecommendedTeamDifficulties");
static_assert(sizeof(FortFrontEndContext_GetRecommendedTeamDifficulties) == 0x000010, "Wrong size on FortFrontEndContext_GetRecommendedTeamDifficulties");
static_assert(offsetof(FortFrontEndContext_GetRecommendedTeamDifficulties, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetRecommendedTeamDifficulties::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetRequirementText
// 0x0060 (0x0060 - 0x0000)
struct FortFrontEndContext_GetRequirementText final
{
public:
	struct FFortRequirementsInfo                  InRequirements;                                    // 0x0000(0x0048)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0048(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetRequirementText) == 0x000008, "Wrong alignment on FortFrontEndContext_GetRequirementText");
static_assert(sizeof(FortFrontEndContext_GetRequirementText) == 0x000060, "Wrong size on FortFrontEndContext_GetRequirementText");
static_assert(offsetof(FortFrontEndContext_GetRequirementText, InRequirements) == 0x000000, "Member 'FortFrontEndContext_GetRequirementText::InRequirements' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetRequirementText, ReturnValue) == 0x000048, "Member 'FortFrontEndContext_GetRequirementText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetReturnToFrontendBehavior
// 0x0001 (0x0001 - 0x0000)
struct FortFrontEndContext_GetReturnToFrontendBehavior final
{
public:
	EFortReturnToFrontendBehavior                 ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetReturnToFrontendBehavior) == 0x000001, "Wrong alignment on FortFrontEndContext_GetReturnToFrontendBehavior");
static_assert(sizeof(FortFrontEndContext_GetReturnToFrontendBehavior) == 0x000001, "Wrong size on FortFrontEndContext_GetReturnToFrontendBehavior");
static_assert(offsetof(FortFrontEndContext_GetReturnToFrontendBehavior, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetReturnToFrontendBehavior::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetSelectedTheaterData
// 0x04D8 (0x04D8 - 0x0000)
struct FortFrontEndContext_GetSelectedTheaterData final
{
public:
	struct FFortTheaterMapData                    OutTheaterData;                                    // 0x0000(0x04D0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x04D0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_GetSelectedTheaterData) == 0x000008, "Wrong alignment on FortFrontEndContext_GetSelectedTheaterData");
static_assert(sizeof(FortFrontEndContext_GetSelectedTheaterData) == 0x0004D8, "Wrong size on FortFrontEndContext_GetSelectedTheaterData");
static_assert(offsetof(FortFrontEndContext_GetSelectedTheaterData, OutTheaterData) == 0x000000, "Member 'FortFrontEndContext_GetSelectedTheaterData::OutTheaterData' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetSelectedTheaterData, ReturnValue) == 0x0004D0, "Member 'FortFrontEndContext_GetSelectedTheaterData::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetSelectedTheaterId
// 0x0010 (0x0010 - 0x0000)
struct FortFrontEndContext_GetSelectedTheaterId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetSelectedTheaterId) == 0x000008, "Wrong alignment on FortFrontEndContext_GetSelectedTheaterId");
static_assert(sizeof(FortFrontEndContext_GetSelectedTheaterId) == 0x000010, "Wrong size on FortFrontEndContext_GetSelectedTheaterId");
static_assert(offsetof(FortFrontEndContext_GetSelectedTheaterId, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetSelectedTheaterId::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetTheaterData
// 0x04E8 (0x04E8 - 0x0000)
struct FortFrontEndContext_GetTheaterData final
{
public:
	class FString                                 TheaterId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortTheaterMapData                    OutTheaterData;                                    // 0x0010(0x04D0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x04E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_GetTheaterData) == 0x000008, "Wrong alignment on FortFrontEndContext_GetTheaterData");
static_assert(sizeof(FortFrontEndContext_GetTheaterData) == 0x0004E8, "Wrong size on FortFrontEndContext_GetTheaterData");
static_assert(offsetof(FortFrontEndContext_GetTheaterData, TheaterId) == 0x000000, "Member 'FortFrontEndContext_GetTheaterData::TheaterId' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetTheaterData, OutTheaterData) == 0x000010, "Member 'FortFrontEndContext_GetTheaterData::OutTheaterData' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetTheaterData, ReturnValue) == 0x0004E0, "Member 'FortFrontEndContext_GetTheaterData::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetTheaterName
// 0x0028 (0x0028 - 0x0000)
struct FortFrontEndContext_GetTheaterName final
{
public:
	class FString                                 TheaterId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetTheaterName) == 0x000008, "Wrong alignment on FortFrontEndContext_GetTheaterName");
static_assert(sizeof(FortFrontEndContext_GetTheaterName) == 0x000028, "Wrong size on FortFrontEndContext_GetTheaterName");
static_assert(offsetof(FortFrontEndContext_GetTheaterName, TheaterId) == 0x000000, "Member 'FortFrontEndContext_GetTheaterName::TheaterId' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetTheaterName, ReturnValue) == 0x000010, "Member 'FortFrontEndContext_GetTheaterName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetTheaterRegionCount
// 0x0018 (0x0018 - 0x0000)
struct FortFrontEndContext_GetTheaterRegionCount final
{
public:
	class FString                                 TheaterId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_GetTheaterRegionCount) == 0x000008, "Wrong alignment on FortFrontEndContext_GetTheaterRegionCount");
static_assert(sizeof(FortFrontEndContext_GetTheaterRegionCount) == 0x000018, "Wrong size on FortFrontEndContext_GetTheaterRegionCount");
static_assert(offsetof(FortFrontEndContext_GetTheaterRegionCount, TheaterId) == 0x000000, "Member 'FortFrontEndContext_GetTheaterRegionCount::TheaterId' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetTheaterRegionCount, ReturnValue) == 0x000010, "Member 'FortFrontEndContext_GetTheaterRegionCount::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetTheaterType
// 0x0018 (0x0018 - 0x0000)
struct FortFrontEndContext_GetTheaterType final
{
public:
	class FString                                 TheaterId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortTheaterType                              ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_GetTheaterType) == 0x000008, "Wrong alignment on FortFrontEndContext_GetTheaterType");
static_assert(sizeof(FortFrontEndContext_GetTheaterType) == 0x000018, "Wrong size on FortFrontEndContext_GetTheaterType");
static_assert(offsetof(FortFrontEndContext_GetTheaterType, TheaterId) == 0x000000, "Member 'FortFrontEndContext_GetTheaterType::TheaterId' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetTheaterType, ReturnValue) == 0x000010, "Member 'FortFrontEndContext_GetTheaterType::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetTileMissionDetails
// 0x0178 (0x0178 - 0x0000)
struct FortFrontEndContext_GetTileMissionDetails final
{
public:
	const class AFortTheaterMapTile*              Tile;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortMissionDetails                    MissionDetails;                                    // 0x0008(0x0168)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0170(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_GetTileMissionDetails) == 0x000008, "Wrong alignment on FortFrontEndContext_GetTileMissionDetails");
static_assert(sizeof(FortFrontEndContext_GetTileMissionDetails) == 0x000178, "Wrong size on FortFrontEndContext_GetTileMissionDetails");
static_assert(offsetof(FortFrontEndContext_GetTileMissionDetails, Tile) == 0x000000, "Member 'FortFrontEndContext_GetTileMissionDetails::Tile' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetTileMissionDetails, MissionDetails) == 0x000008, "Member 'FortFrontEndContext_GetTileMissionDetails::MissionDetails' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_GetTileMissionDetails, ReturnValue) == 0x000170, "Member 'FortFrontEndContext_GetTileMissionDetails::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.GetUITestingClass
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_GetUITestingClass final
{
public:
	class UClass*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_GetUITestingClass) == 0x000008, "Wrong alignment on FortFrontEndContext_GetUITestingClass");
static_assert(sizeof(FortFrontEndContext_GetUITestingClass) == 0x000008, "Wrong size on FortFrontEndContext_GetUITestingClass");
static_assert(offsetof(FortFrontEndContext_GetUITestingClass, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_GetUITestingClass::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.IsBackpackAvailable
// 0x0001 (0x0001 - 0x0000)
struct FortFrontEndContext_IsBackpackAvailable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_IsBackpackAvailable) == 0x000001, "Wrong alignment on FortFrontEndContext_IsBackpackAvailable");
static_assert(sizeof(FortFrontEndContext_IsBackpackAvailable) == 0x000001, "Wrong size on FortFrontEndContext_IsBackpackAvailable");
static_assert(offsetof(FortFrontEndContext_IsBackpackAvailable, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_IsBackpackAvailable::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.IsStorageAvailable
// 0x0001 (0x0001 - 0x0000)
struct FortFrontEndContext_IsStorageAvailable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_IsStorageAvailable) == 0x000001, "Wrong alignment on FortFrontEndContext_IsStorageAvailable");
static_assert(sizeof(FortFrontEndContext_IsStorageAvailable) == 0x000001, "Wrong size on FortFrontEndContext_IsStorageAvailable");
static_assert(offsetof(FortFrontEndContext_IsStorageAvailable, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_IsStorageAvailable::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.ShouldRunInitialBenchmark
// 0x0001 (0x0001 - 0x0000)
struct FortFrontEndContext_ShouldRunInitialBenchmark final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_ShouldRunInitialBenchmark) == 0x000001, "Wrong alignment on FortFrontEndContext_ShouldRunInitialBenchmark");
static_assert(sizeof(FortFrontEndContext_ShouldRunInitialBenchmark) == 0x000001, "Wrong size on FortFrontEndContext_ShouldRunInitialBenchmark");
static_assert(offsetof(FortFrontEndContext_ShouldRunInitialBenchmark, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_ShouldRunInitialBenchmark::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.ShouldShowLoginMessage
// 0x0001 (0x0001 - 0x0000)
struct FortFrontEndContext_ShouldShowLoginMessage final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_ShouldShowLoginMessage) == 0x000001, "Wrong alignment on FortFrontEndContext_ShouldShowLoginMessage");
static_assert(sizeof(FortFrontEndContext_ShouldShowLoginMessage) == 0x000001, "Wrong size on FortFrontEndContext_ShouldShowLoginMessage");
static_assert(offsetof(FortFrontEndContext_ShouldShowLoginMessage, ReturnValue) == 0x000000, "Member 'FortFrontEndContext_ShouldShowLoginMessage::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.TryGetAttributeInfo
// 0x00A0 (0x00A0 - 0x0000)
struct FortFrontEndContext_TryGetAttributeInfo final
{
public:
	struct FGameplayAttribute                     GameplayAttribute;                                 // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortAttributeInfo                     OutAttribute;                                      // 0x0020(0x0078)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0098(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortFrontEndContext_TryGetAttributeInfo) == 0x000008, "Wrong alignment on FortFrontEndContext_TryGetAttributeInfo");
static_assert(sizeof(FortFrontEndContext_TryGetAttributeInfo) == 0x0000A0, "Wrong size on FortFrontEndContext_TryGetAttributeInfo");
static_assert(offsetof(FortFrontEndContext_TryGetAttributeInfo, GameplayAttribute) == 0x000000, "Member 'FortFrontEndContext_TryGetAttributeInfo::GameplayAttribute' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_TryGetAttributeInfo, OutAttribute) == 0x000020, "Member 'FortFrontEndContext_TryGetAttributeInfo::OutAttribute' has a wrong offset!");
static_assert(offsetof(FortFrontEndContext_TryGetAttributeInfo, ReturnValue) == 0x000098, "Member 'FortFrontEndContext_TryGetAttributeInfo::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontEndContext.UpdateNewAccountItemBangCounts
// 0x0008 (0x0008 - 0x0000)
struct FortFrontEndContext_UpdateNewAccountItemBangCounts final
{
public:
	class UFortInventoryContext*                  InventoryContext;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontEndContext_UpdateNewAccountItemBangCounts) == 0x000008, "Wrong alignment on FortFrontEndContext_UpdateNewAccountItemBangCounts");
static_assert(sizeof(FortFrontEndContext_UpdateNewAccountItemBangCounts) == 0x000008, "Wrong size on FortFrontEndContext_UpdateNewAccountItemBangCounts");
static_assert(offsetof(FortFrontEndContext_UpdateNewAccountItemBangCounts, InventoryContext) == 0x000000, "Member 'FortFrontEndContext_UpdateNewAccountItemBangCounts::InventoryContext' has a wrong offset!");

// Function FortniteUI.FortGameOptions.AutoEquipChanged
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_AutoEquipChanged final
{
public:
	bool                                          bInChecked;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_AutoEquipChanged) == 0x000001, "Wrong alignment on FortGameOptions_AutoEquipChanged");
static_assert(sizeof(FortGameOptions_AutoEquipChanged) == 0x000001, "Wrong size on FortGameOptions_AutoEquipChanged");
static_assert(offsetof(FortGameOptions_AutoEquipChanged, bInChecked) == 0x000000, "Member 'FortGameOptions_AutoEquipChanged::bInChecked' has a wrong offset!");

// Function FortniteUI.FortGameOptions.FirstPersonCameraChanged
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_FirstPersonCameraChanged final
{
public:
	bool                                          bInChecked;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_FirstPersonCameraChanged) == 0x000001, "Wrong alignment on FortGameOptions_FirstPersonCameraChanged");
static_assert(sizeof(FortGameOptions_FirstPersonCameraChanged) == 0x000001, "Wrong size on FortGameOptions_FirstPersonCameraChanged");
static_assert(offsetof(FortGameOptions_FirstPersonCameraChanged, bInChecked) == 0x000000, "Member 'FortGameOptions_FirstPersonCameraChanged::bInChecked' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GamepadLookSensitivityXChanged
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_GamepadLookSensitivityXChanged final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GamepadLookSensitivityXChanged) == 0x000004, "Wrong alignment on FortGameOptions_GamepadLookSensitivityXChanged");
static_assert(sizeof(FortGameOptions_GamepadLookSensitivityXChanged) == 0x000004, "Wrong size on FortGameOptions_GamepadLookSensitivityXChanged");
static_assert(offsetof(FortGameOptions_GamepadLookSensitivityXChanged, NewValue) == 0x000000, "Member 'FortGameOptions_GamepadLookSensitivityXChanged::NewValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GamepadLookSensitivityYChanged
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_GamepadLookSensitivityYChanged final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GamepadLookSensitivityYChanged) == 0x000004, "Wrong alignment on FortGameOptions_GamepadLookSensitivityYChanged");
static_assert(sizeof(FortGameOptions_GamepadLookSensitivityYChanged) == 0x000004, "Wrong size on FortGameOptions_GamepadLookSensitivityYChanged");
static_assert(offsetof(FortGameOptions_GamepadLookSensitivityYChanged, NewValue) == 0x000000, "Member 'FortGameOptions_GamepadLookSensitivityYChanged::NewValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GamepadScopedMultiplierValueChanged
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_GamepadScopedMultiplierValueChanged final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GamepadScopedMultiplierValueChanged) == 0x000004, "Wrong alignment on FortGameOptions_GamepadScopedMultiplierValueChanged");
static_assert(sizeof(FortGameOptions_GamepadScopedMultiplierValueChanged) == 0x000004, "Wrong size on FortGameOptions_GamepadScopedMultiplierValueChanged");
static_assert(offsetof(FortGameOptions_GamepadScopedMultiplierValueChanged, NewValue) == 0x000000, "Member 'FortGameOptions_GamepadScopedMultiplierValueChanged::NewValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GamepadTargetingMultiplierValueChanged
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_GamepadTargetingMultiplierValueChanged final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GamepadTargetingMultiplierValueChanged) == 0x000004, "Wrong alignment on FortGameOptions_GamepadTargetingMultiplierValueChanged");
static_assert(sizeof(FortGameOptions_GamepadTargetingMultiplierValueChanged) == 0x000004, "Wrong size on FortGameOptions_GamepadTargetingMultiplierValueChanged");
static_assert(offsetof(FortGameOptions_GamepadTargetingMultiplierValueChanged, NewValue) == 0x000000, "Member 'FortGameOptions_GamepadTargetingMultiplierValueChanged::NewValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetCurrentLanguage
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_GetCurrentLanguage final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetCurrentLanguage) == 0x000004, "Wrong alignment on FortGameOptions_GetCurrentLanguage");
static_assert(sizeof(FortGameOptions_GetCurrentLanguage) == 0x000004, "Wrong size on FortGameOptions_GetCurrentLanguage");
static_assert(offsetof(FortGameOptions_GetCurrentLanguage, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetCurrentLanguage::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetCurrentRegion
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_GetCurrentRegion final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetCurrentRegion) == 0x000004, "Wrong alignment on FortGameOptions_GetCurrentRegion");
static_assert(sizeof(FortGameOptions_GetCurrentRegion) == 0x000004, "Wrong size on FortGameOptions_GetCurrentRegion");
static_assert(offsetof(FortGameOptions_GetCurrentRegion, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetCurrentRegion::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetListWidget
// 0x0010 (0x0010 - 0x0000)
struct FortGameOptions_GetListWidget final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetListWidget) == 0x000008, "Wrong alignment on FortGameOptions_GetListWidget");
static_assert(sizeof(FortGameOptions_GetListWidget) == 0x000010, "Wrong size on FortGameOptions_GetListWidget");
static_assert(offsetof(FortGameOptions_GetListWidget, Item) == 0x000000, "Member 'FortGameOptions_GetListWidget::Item' has a wrong offset!");
static_assert(offsetof(FortGameOptions_GetListWidget, ReturnValue) == 0x000008, "Member 'FortGameOptions_GetListWidget::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetPossibleLanguages
// 0x0010 (0x0010 - 0x0000)
struct FortGameOptions_GetPossibleLanguages final
{
public:
	TArray<class FText>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetPossibleLanguages) == 0x000008, "Wrong alignment on FortGameOptions_GetPossibleLanguages");
static_assert(sizeof(FortGameOptions_GetPossibleLanguages) == 0x000010, "Wrong size on FortGameOptions_GetPossibleLanguages");
static_assert(offsetof(FortGameOptions_GetPossibleLanguages, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetPossibleLanguages::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetRegionDisplayNames
// 0x0010 (0x0010 - 0x0000)
struct FortGameOptions_GetRegionDisplayNames final
{
public:
	TArray<class FText>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetRegionDisplayNames) == 0x000008, "Wrong alignment on FortGameOptions_GetRegionDisplayNames");
static_assert(sizeof(FortGameOptions_GetRegionDisplayNames) == 0x000010, "Wrong size on FortGameOptions_GetRegionDisplayNames");
static_assert(offsetof(FortGameOptions_GetRegionDisplayNames, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetRegionDisplayNames::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetSafeZoneValue
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_GetSafeZoneValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetSafeZoneValue) == 0x000004, "Wrong alignment on FortGameOptions_GetSafeZoneValue");
static_assert(sizeof(FortGameOptions_GetSafeZoneValue) == 0x000004, "Wrong size on FortGameOptions_GetSafeZoneValue");
static_assert(offsetof(FortGameOptions_GetSafeZoneValue, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetSafeZoneValue::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.Initialize
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_Initialize final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_Initialize) == 0x000001, "Wrong alignment on FortGameOptions_Initialize");
static_assert(sizeof(FortGameOptions_Initialize) == 0x000001, "Wrong size on FortGameOptions_Initialize");
static_assert(offsetof(FortGameOptions_Initialize, ReturnValue) == 0x000000, "Member 'FortGameOptions_Initialize::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.LanguageChanged
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_LanguageChanged final
{
public:
	int32                                         NewMode;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_LanguageChanged) == 0x000004, "Wrong alignment on FortGameOptions_LanguageChanged");
static_assert(sizeof(FortGameOptions_LanguageChanged) == 0x000004, "Wrong size on FortGameOptions_LanguageChanged");
static_assert(offsetof(FortGameOptions_LanguageChanged, NewMode) == 0x000000, "Member 'FortGameOptions_LanguageChanged::NewMode' has a wrong offset!");

// Function FortniteUI.FortGameOptions.LookInversionChanged
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_LookInversionChanged final
{
public:
	bool                                          bInChecked;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_LookInversionChanged) == 0x000001, "Wrong alignment on FortGameOptions_LookInversionChanged");
static_assert(sizeof(FortGameOptions_LookInversionChanged) == 0x000001, "Wrong size on FortGameOptions_LookInversionChanged");
static_assert(offsetof(FortGameOptions_LookInversionChanged, bInChecked) == 0x000000, "Member 'FortGameOptions_LookInversionChanged::bInChecked' has a wrong offset!");

// Function FortniteUI.FortGameOptions.MouseSensitivityChanged
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_MouseSensitivityChanged final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_MouseSensitivityChanged) == 0x000004, "Wrong alignment on FortGameOptions_MouseSensitivityChanged");
static_assert(sizeof(FortGameOptions_MouseSensitivityChanged) == 0x000004, "Wrong size on FortGameOptions_MouseSensitivityChanged");
static_assert(offsetof(FortGameOptions_MouseSensitivityChanged, NewValue) == 0x000000, "Member 'FortGameOptions_MouseSensitivityChanged::NewValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.OnConsoleUnlockedFPSChanged
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_OnConsoleUnlockedFPSChanged final
{
public:
	bool                                          bInChecked;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_OnConsoleUnlockedFPSChanged) == 0x000001, "Wrong alignment on FortGameOptions_OnConsoleUnlockedFPSChanged");
static_assert(sizeof(FortGameOptions_OnConsoleUnlockedFPSChanged) == 0x000001, "Wrong size on FortGameOptions_OnConsoleUnlockedFPSChanged");
static_assert(offsetof(FortGameOptions_OnConsoleUnlockedFPSChanged, bInChecked) == 0x000000, "Member 'FortGameOptions_OnConsoleUnlockedFPSChanged::bInChecked' has a wrong offset!");

// Function FortniteUI.FortGameOptions.OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChanged
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChanged final
{
public:
	bool                                          bInChecked;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChanged) == 0x000001, "Wrong alignment on FortGameOptions_OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChanged");
static_assert(sizeof(FortGameOptions_OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChanged) == 0x000001, "Wrong size on FortGameOptions_OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChanged");
static_assert(offsetof(FortGameOptions_OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChanged, bInChecked) == 0x000000, "Member 'FortGameOptions_OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChanged::bInChecked' has a wrong offset!");

// Function FortniteUI.FortGameOptions.OnForceFeedbackChanged
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_OnForceFeedbackChanged final
{
public:
	bool                                          bInChecked;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_OnForceFeedbackChanged) == 0x000001, "Wrong alignment on FortGameOptions_OnForceFeedbackChanged");
static_assert(sizeof(FortGameOptions_OnForceFeedbackChanged) == 0x000001, "Wrong size on FortGameOptions_OnForceFeedbackChanged");
static_assert(offsetof(FortGameOptions_OnForceFeedbackChanged, bInChecked) == 0x000000, "Member 'FortGameOptions_OnForceFeedbackChanged::bInChecked' has a wrong offset!");

// Function FortniteUI.FortGameOptions.RegionChanged
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_RegionChanged final
{
public:
	int32                                         NewRegion;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_RegionChanged) == 0x000004, "Wrong alignment on FortGameOptions_RegionChanged");
static_assert(sizeof(FortGameOptions_RegionChanged) == 0x000004, "Wrong size on FortGameOptions_RegionChanged");
static_assert(offsetof(FortGameOptions_RegionChanged, NewRegion) == 0x000000, "Member 'FortGameOptions_RegionChanged::NewRegion' has a wrong offset!");

// Function FortniteUI.FortGameOptions.SafeZoneChanged
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_SafeZoneChanged final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_SafeZoneChanged) == 0x000004, "Wrong alignment on FortGameOptions_SafeZoneChanged");
static_assert(sizeof(FortGameOptions_SafeZoneChanged) == 0x000004, "Wrong size on FortGameOptions_SafeZoneChanged");
static_assert(offsetof(FortGameOptions_SafeZoneChanged, NewValue) == 0x000000, "Member 'FortGameOptions_SafeZoneChanged::NewValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.ScopedMultiplierValueChanged
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_ScopedMultiplierValueChanged final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_ScopedMultiplierValueChanged) == 0x000004, "Wrong alignment on FortGameOptions_ScopedMultiplierValueChanged");
static_assert(sizeof(FortGameOptions_ScopedMultiplierValueChanged) == 0x000004, "Wrong size on FortGameOptions_ScopedMultiplierValueChanged");
static_assert(offsetof(FortGameOptions_ScopedMultiplierValueChanged, NewValue) == 0x000000, "Member 'FortGameOptions_ScopedMultiplierValueChanged::NewValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.SetControllerPlatform
// 0x0010 (0x0010 - 0x0000)
struct FortGameOptions_SetControllerPlatform final
{
public:
	class FString                                 InControllerPlatform;                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_SetControllerPlatform) == 0x000008, "Wrong alignment on FortGameOptions_SetControllerPlatform");
static_assert(sizeof(FortGameOptions_SetControllerPlatform) == 0x000010, "Wrong size on FortGameOptions_SetControllerPlatform");
static_assert(offsetof(FortGameOptions_SetControllerPlatform, InControllerPlatform) == 0x000000, "Member 'FortGameOptions_SetControllerPlatform::InControllerPlatform' has a wrong offset!");

// Function FortniteUI.FortGameOptions.SprintCancelsReloadChanged
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_SprintCancelsReloadChanged final
{
public:
	bool                                          bInChecked;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_SprintCancelsReloadChanged) == 0x000001, "Wrong alignment on FortGameOptions_SprintCancelsReloadChanged");
static_assert(sizeof(FortGameOptions_SprintCancelsReloadChanged) == 0x000001, "Wrong size on FortGameOptions_SprintCancelsReloadChanged");
static_assert(offsetof(FortGameOptions_SprintCancelsReloadChanged, bInChecked) == 0x000000, "Member 'FortGameOptions_SprintCancelsReloadChanged::bInChecked' has a wrong offset!");

// Function FortniteUI.FortGameOptions.SprintToggleChanged
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_SprintToggleChanged final
{
public:
	bool                                          bInChecked;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_SprintToggleChanged) == 0x000001, "Wrong alignment on FortGameOptions_SprintToggleChanged");
static_assert(sizeof(FortGameOptions_SprintToggleChanged) == 0x000001, "Wrong size on FortGameOptions_SprintToggleChanged");
static_assert(offsetof(FortGameOptions_SprintToggleChanged, bInChecked) == 0x000000, "Member 'FortGameOptions_SprintToggleChanged::bInChecked' has a wrong offset!");

// Function FortniteUI.FortGameOptions.TapInteractChanged
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_TapInteractChanged final
{
public:
	bool                                          bInChecked;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_TapInteractChanged) == 0x000001, "Wrong alignment on FortGameOptions_TapInteractChanged");
static_assert(sizeof(FortGameOptions_TapInteractChanged) == 0x000001, "Wrong size on FortGameOptions_TapInteractChanged");
static_assert(offsetof(FortGameOptions_TapInteractChanged, bInChecked) == 0x000000, "Member 'FortGameOptions_TapInteractChanged::bInChecked' has a wrong offset!");

// Function FortniteUI.FortGameOptions.TargetingMultiplierValueChanged
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_TargetingMultiplierValueChanged final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_TargetingMultiplierValueChanged) == 0x000004, "Wrong alignment on FortGameOptions_TargetingMultiplierValueChanged");
static_assert(sizeof(FortGameOptions_TargetingMultiplierValueChanged) == 0x000004, "Wrong size on FortGameOptions_TargetingMultiplierValueChanged");
static_assert(offsetof(FortGameOptions_TargetingMultiplierValueChanged, NewValue) == 0x000000, "Member 'FortGameOptions_TargetingMultiplierValueChanged::NewValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.TargetingToggleChanged
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_TargetingToggleChanged final
{
public:
	bool                                          bInChecked;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_TargetingToggleChanged) == 0x000001, "Wrong alignment on FortGameOptions_TargetingToggleChanged");
static_assert(sizeof(FortGameOptions_TargetingToggleChanged) == 0x000001, "Wrong size on FortGameOptions_TargetingToggleChanged");
static_assert(offsetof(FortGameOptions_TargetingToggleChanged, bInChecked) == 0x000000, "Member 'FortGameOptions_TargetingToggleChanged::bInChecked' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetAutoEquipState
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_GetAutoEquipState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetAutoEquipState) == 0x000001, "Wrong alignment on FortGameOptions_GetAutoEquipState");
static_assert(sizeof(FortGameOptions_GetAutoEquipState) == 0x000001, "Wrong size on FortGameOptions_GetAutoEquipState");
static_assert(offsetof(FortGameOptions_GetAutoEquipState, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetAutoEquipState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetConsoleUnlockedFPSState
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_GetConsoleUnlockedFPSState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetConsoleUnlockedFPSState) == 0x000001, "Wrong alignment on FortGameOptions_GetConsoleUnlockedFPSState");
static_assert(sizeof(FortGameOptions_GetConsoleUnlockedFPSState) == 0x000001, "Wrong size on FortGameOptions_GetConsoleUnlockedFPSState");
static_assert(offsetof(FortGameOptions_GetConsoleUnlockedFPSState, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetConsoleUnlockedFPSState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetControllerPlatform
// 0x0010 (0x0010 - 0x0000)
struct FortGameOptions_GetControllerPlatform final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetControllerPlatform) == 0x000008, "Wrong alignment on FortGameOptions_GetControllerPlatform");
static_assert(sizeof(FortGameOptions_GetControllerPlatform) == 0x000010, "Wrong size on FortGameOptions_GetControllerPlatform");
static_assert(offsetof(FortGameOptions_GetControllerPlatform, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetControllerPlatform::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetDefaultGammaSettings
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_GetDefaultGammaSettings final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetDefaultGammaSettings) == 0x000004, "Wrong alignment on FortGameOptions_GetDefaultGammaSettings");
static_assert(sizeof(FortGameOptions_GetDefaultGammaSettings) == 0x000004, "Wrong size on FortGameOptions_GetDefaultGammaSettings");
static_assert(offsetof(FortGameOptions_GetDefaultGammaSettings, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetDefaultGammaSettings::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetFirstPersonCameraState
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_GetFirstPersonCameraState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetFirstPersonCameraState) == 0x000001, "Wrong alignment on FortGameOptions_GetFirstPersonCameraState");
static_assert(sizeof(FortGameOptions_GetFirstPersonCameraState) == 0x000001, "Wrong size on FortGameOptions_GetFirstPersonCameraState");
static_assert(offsetof(FortGameOptions_GetFirstPersonCameraState, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetFirstPersonCameraState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetFocusOnFirstBuildingPieceWhenQuickbarSwappedState
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_GetFocusOnFirstBuildingPieceWhenQuickbarSwappedState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetFocusOnFirstBuildingPieceWhenQuickbarSwappedState) == 0x000001, "Wrong alignment on FortGameOptions_GetFocusOnFirstBuildingPieceWhenQuickbarSwappedState");
static_assert(sizeof(FortGameOptions_GetFocusOnFirstBuildingPieceWhenQuickbarSwappedState) == 0x000001, "Wrong size on FortGameOptions_GetFocusOnFirstBuildingPieceWhenQuickbarSwappedState");
static_assert(offsetof(FortGameOptions_GetFocusOnFirstBuildingPieceWhenQuickbarSwappedState, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetFocusOnFirstBuildingPieceWhenQuickbarSwappedState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetForceFeedbackState
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_GetForceFeedbackState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetForceFeedbackState) == 0x000001, "Wrong alignment on FortGameOptions_GetForceFeedbackState");
static_assert(sizeof(FortGameOptions_GetForceFeedbackState) == 0x000001, "Wrong size on FortGameOptions_GetForceFeedbackState");
static_assert(offsetof(FortGameOptions_GetForceFeedbackState, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetForceFeedbackState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetGamepadLookSensitivityValue
// 0x0008 (0x0008 - 0x0000)
struct FortGameOptions_GetGamepadLookSensitivityValue final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetGamepadLookSensitivityValue) == 0x000004, "Wrong alignment on FortGameOptions_GetGamepadLookSensitivityValue");
static_assert(sizeof(FortGameOptions_GetGamepadLookSensitivityValue) == 0x000008, "Wrong size on FortGameOptions_GetGamepadLookSensitivityValue");
static_assert(offsetof(FortGameOptions_GetGamepadLookSensitivityValue, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetGamepadLookSensitivityValue::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetGamepadScopedMultiplierValue
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_GetGamepadScopedMultiplierValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetGamepadScopedMultiplierValue) == 0x000004, "Wrong alignment on FortGameOptions_GetGamepadScopedMultiplierValue");
static_assert(sizeof(FortGameOptions_GetGamepadScopedMultiplierValue) == 0x000004, "Wrong size on FortGameOptions_GetGamepadScopedMultiplierValue");
static_assert(offsetof(FortGameOptions_GetGamepadScopedMultiplierValue, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetGamepadScopedMultiplierValue::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetGamepadTargetingMultiplierValue
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_GetGamepadTargetingMultiplierValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetGamepadTargetingMultiplierValue) == 0x000004, "Wrong alignment on FortGameOptions_GetGamepadTargetingMultiplierValue");
static_assert(sizeof(FortGameOptions_GetGamepadTargetingMultiplierValue) == 0x000004, "Wrong size on FortGameOptions_GetGamepadTargetingMultiplierValue");
static_assert(offsetof(FortGameOptions_GetGamepadTargetingMultiplierValue, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetGamepadTargetingMultiplierValue::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetGammaSettings
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_GetGammaSettings final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetGammaSettings) == 0x000004, "Wrong alignment on FortGameOptions_GetGammaSettings");
static_assert(sizeof(FortGameOptions_GetGammaSettings) == 0x000004, "Wrong size on FortGameOptions_GetGammaSettings");
static_assert(offsetof(FortGameOptions_GetGammaSettings, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetGammaSettings::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetHUDSettings
// 0x0010 (0x0010 - 0x0000)
struct FortGameOptions_GetHUDSettings final
{
public:
	struct FGameplayTag                           HUDMapping;                                        // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGameOptions_GetHUDSettings) == 0x000008, "Wrong alignment on FortGameOptions_GetHUDSettings");
static_assert(sizeof(FortGameOptions_GetHUDSettings) == 0x000010, "Wrong size on FortGameOptions_GetHUDSettings");
static_assert(offsetof(FortGameOptions_GetHUDSettings, HUDMapping) == 0x000000, "Member 'FortGameOptions_GetHUDSettings::HUDMapping' has a wrong offset!");
static_assert(offsetof(FortGameOptions_GetHUDSettings, ReturnValue) == 0x000008, "Member 'FortGameOptions_GetHUDSettings::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetLookInversionState
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_GetLookInversionState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetLookInversionState) == 0x000001, "Wrong alignment on FortGameOptions_GetLookInversionState");
static_assert(sizeof(FortGameOptions_GetLookInversionState) == 0x000001, "Wrong size on FortGameOptions_GetLookInversionState");
static_assert(offsetof(FortGameOptions_GetLookInversionState, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetLookInversionState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetMouseSensitivityValue
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_GetMouseSensitivityValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetMouseSensitivityValue) == 0x000004, "Wrong alignment on FortGameOptions_GetMouseSensitivityValue");
static_assert(sizeof(FortGameOptions_GetMouseSensitivityValue) == 0x000004, "Wrong size on FortGameOptions_GetMouseSensitivityValue");
static_assert(offsetof(FortGameOptions_GetMouseSensitivityValue, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetMouseSensitivityValue::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetScopedMultiplierValue
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_GetScopedMultiplierValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetScopedMultiplierValue) == 0x000004, "Wrong alignment on FortGameOptions_GetScopedMultiplierValue");
static_assert(sizeof(FortGameOptions_GetScopedMultiplierValue) == 0x000004, "Wrong size on FortGameOptions_GetScopedMultiplierValue");
static_assert(offsetof(FortGameOptions_GetScopedMultiplierValue, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetScopedMultiplierValue::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetSprintCancelsReloadState
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_GetSprintCancelsReloadState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetSprintCancelsReloadState) == 0x000001, "Wrong alignment on FortGameOptions_GetSprintCancelsReloadState");
static_assert(sizeof(FortGameOptions_GetSprintCancelsReloadState) == 0x000001, "Wrong size on FortGameOptions_GetSprintCancelsReloadState");
static_assert(offsetof(FortGameOptions_GetSprintCancelsReloadState, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetSprintCancelsReloadState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetSprintToggleState
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_GetSprintToggleState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetSprintToggleState) == 0x000001, "Wrong alignment on FortGameOptions_GetSprintToggleState");
static_assert(sizeof(FortGameOptions_GetSprintToggleState) == 0x000001, "Wrong size on FortGameOptions_GetSprintToggleState");
static_assert(offsetof(FortGameOptions_GetSprintToggleState, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetSprintToggleState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetTapInteractState
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_GetTapInteractState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetTapInteractState) == 0x000001, "Wrong alignment on FortGameOptions_GetTapInteractState");
static_assert(sizeof(FortGameOptions_GetTapInteractState) == 0x000001, "Wrong size on FortGameOptions_GetTapInteractState");
static_assert(offsetof(FortGameOptions_GetTapInteractState, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetTapInteractState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetTargetingMultiplierValue
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_GetTargetingMultiplierValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetTargetingMultiplierValue) == 0x000004, "Wrong alignment on FortGameOptions_GetTargetingMultiplierValue");
static_assert(sizeof(FortGameOptions_GetTargetingMultiplierValue) == 0x000004, "Wrong size on FortGameOptions_GetTargetingMultiplierValue");
static_assert(offsetof(FortGameOptions_GetTargetingMultiplierValue, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetTargetingMultiplierValue::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.GetTargetingToggleState
// 0x0001 (0x0001 - 0x0000)
struct FortGameOptions_GetTargetingToggleState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_GetTargetingToggleState) == 0x000001, "Wrong alignment on FortGameOptions_GetTargetingToggleState");
static_assert(sizeof(FortGameOptions_GetTargetingToggleState) == 0x000001, "Wrong size on FortGameOptions_GetTargetingToggleState");
static_assert(offsetof(FortGameOptions_GetTargetingToggleState, ReturnValue) == 0x000000, "Member 'FortGameOptions_GetTargetingToggleState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.UpdateGammaSettings
// 0x0004 (0x0004 - 0x0000)
struct FortGameOptions_UpdateGammaSettings final
{
public:
	float                                         GammaValue;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortGameOptions_UpdateGammaSettings) == 0x000004, "Wrong alignment on FortGameOptions_UpdateGammaSettings");
static_assert(sizeof(FortGameOptions_UpdateGammaSettings) == 0x000004, "Wrong size on FortGameOptions_UpdateGammaSettings");
static_assert(offsetof(FortGameOptions_UpdateGammaSettings, GammaValue) == 0x000000, "Member 'FortGameOptions_UpdateGammaSettings::GammaValue' has a wrong offset!");

// Function FortniteUI.FortGameOptions.UpdateHUDSettings
// 0x0010 (0x0010 - 0x0000)
struct FortGameOptions_UpdateHUDSettings final
{
public:
	struct FGameplayTag                           HUDMapping;                                        // 0x0000(0x0008)(Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          NewVisibility;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortGameOptions_UpdateHUDSettings) == 0x000008, "Wrong alignment on FortGameOptions_UpdateHUDSettings");
static_assert(sizeof(FortGameOptions_UpdateHUDSettings) == 0x000010, "Wrong size on FortGameOptions_UpdateHUDSettings");
static_assert(offsetof(FortGameOptions_UpdateHUDSettings, HUDMapping) == 0x000000, "Member 'FortGameOptions_UpdateHUDSettings::HUDMapping' has a wrong offset!");
static_assert(offsetof(FortGameOptions_UpdateHUDSettings, NewVisibility) == 0x000008, "Member 'FortGameOptions_UpdateHUDSettings::NewVisibility' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.CanAffordAbility
// 0x000C (0x000C - 0x0000)
struct FortHeroManagementContext_CanAffordAbility final
{
public:
	int32                                         TraitIdx;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitDepth;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_CanAffordAbility) == 0x000004, "Wrong alignment on FortHeroManagementContext_CanAffordAbility");
static_assert(sizeof(FortHeroManagementContext_CanAffordAbility) == 0x00000C, "Wrong size on FortHeroManagementContext_CanAffordAbility");
static_assert(offsetof(FortHeroManagementContext_CanAffordAbility, TraitIdx) == 0x000000, "Member 'FortHeroManagementContext_CanAffordAbility::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanAffordAbility, TraitDepth) == 0x000004, "Member 'FortHeroManagementContext_CanAffordAbility::TraitDepth' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanAffordAbility, ReturnValue) == 0x000008, "Member 'FortHeroManagementContext_CanAffordAbility::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.CanAffordAbilityFromID
// 0x0020 (0x0020 - 0x0000)
struct FortHeroManagementContext_CanAffordAbilityFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitIdx;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitDepth;                                        // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_CanAffordAbilityFromID) == 0x000008, "Wrong alignment on FortHeroManagementContext_CanAffordAbilityFromID");
static_assert(sizeof(FortHeroManagementContext_CanAffordAbilityFromID) == 0x000020, "Wrong size on FortHeroManagementContext_CanAffordAbilityFromID");
static_assert(offsetof(FortHeroManagementContext_CanAffordAbilityFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_CanAffordAbilityFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanAffordAbilityFromID, TraitIdx) == 0x000010, "Member 'FortHeroManagementContext_CanAffordAbilityFromID::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanAffordAbilityFromID, TraitDepth) == 0x000014, "Member 'FortHeroManagementContext_CanAffordAbilityFromID::TraitDepth' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanAffordAbilityFromID, ReturnValue) == 0x000018, "Member 'FortHeroManagementContext_CanAffordAbilityFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.CanAffordNextAbility
// 0x0008 (0x0008 - 0x0000)
struct FortHeroManagementContext_CanAffordNextAbility final
{
public:
	int32                                         TraitIdx;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_CanAffordNextAbility) == 0x000004, "Wrong alignment on FortHeroManagementContext_CanAffordNextAbility");
static_assert(sizeof(FortHeroManagementContext_CanAffordNextAbility) == 0x000008, "Wrong size on FortHeroManagementContext_CanAffordNextAbility");
static_assert(offsetof(FortHeroManagementContext_CanAffordNextAbility, TraitIdx) == 0x000000, "Member 'FortHeroManagementContext_CanAffordNextAbility::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanAffordNextAbility, ReturnValue) == 0x000004, "Member 'FortHeroManagementContext_CanAffordNextAbility::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.CanAffordNextAbilityFromID
// 0x0018 (0x0018 - 0x0000)
struct FortHeroManagementContext_CanAffordNextAbilityFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitIdx;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_CanAffordNextAbilityFromID) == 0x000008, "Wrong alignment on FortHeroManagementContext_CanAffordNextAbilityFromID");
static_assert(sizeof(FortHeroManagementContext_CanAffordNextAbilityFromID) == 0x000018, "Wrong size on FortHeroManagementContext_CanAffordNextAbilityFromID");
static_assert(offsetof(FortHeroManagementContext_CanAffordNextAbilityFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_CanAffordNextAbilityFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanAffordNextAbilityFromID, TraitIdx) == 0x000010, "Member 'FortHeroManagementContext_CanAffordNextAbilityFromID::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanAffordNextAbilityFromID, ReturnValue) == 0x000014, "Member 'FortHeroManagementContext_CanAffordNextAbilityFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.FocusOnHero
// 0x0010 (0x0010 - 0x0000)
struct FortHeroManagementContext_FocusOnHero final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_FocusOnHero) == 0x000008, "Wrong alignment on FortHeroManagementContext_FocusOnHero");
static_assert(sizeof(FortHeroManagementContext_FocusOnHero) == 0x000010, "Wrong size on FortHeroManagementContext_FocusOnHero");
static_assert(offsetof(FortHeroManagementContext_FocusOnHero, HeroId) == 0x000000, "Member 'FortHeroManagementContext_FocusOnHero::HeroId' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetCurrentHeroID
// 0x0018 (0x0018 - 0x0000)
struct FortHeroManagementContext_GetCurrentHeroID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_GetCurrentHeroID) == 0x000008, "Wrong alignment on FortHeroManagementContext_GetCurrentHeroID");
static_assert(sizeof(FortHeroManagementContext_GetCurrentHeroID) == 0x000018, "Wrong size on FortHeroManagementContext_GetCurrentHeroID");
static_assert(offsetof(FortHeroManagementContext_GetCurrentHeroID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_GetCurrentHeroID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetCurrentHeroID, ReturnValue) == 0x000010, "Member 'FortHeroManagementContext_GetCurrentHeroID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetDisplayStats
// 0x0010 (0x0010 - 0x0000)
struct FortHeroManagementContext_GetDisplayStats final
{
public:
	TArray<struct FFortGameplayEffectModifierDescription> Stats;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetDisplayStats) == 0x000008, "Wrong alignment on FortHeroManagementContext_GetDisplayStats");
static_assert(sizeof(FortHeroManagementContext_GetDisplayStats) == 0x000010, "Wrong size on FortHeroManagementContext_GetDisplayStats");
static_assert(offsetof(FortHeroManagementContext_GetDisplayStats, Stats) == 0x000000, "Member 'FortHeroManagementContext_GetDisplayStats::Stats' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetHeroData
// 0x0028 (0x0028 - 0x0000)
struct FortHeroManagementContext_GetHeroData final
{
public:
	struct FHeroUIData                            HeroData;                                          // 0x0000(0x0020)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_GetHeroData) == 0x000008, "Wrong alignment on FortHeroManagementContext_GetHeroData");
static_assert(sizeof(FortHeroManagementContext_GetHeroData) == 0x000028, "Wrong size on FortHeroManagementContext_GetHeroData");
static_assert(offsetof(FortHeroManagementContext_GetHeroData, HeroData) == 0x000000, "Member 'FortHeroManagementContext_GetHeroData::HeroData' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetHeroData, ReturnValue) == 0x000020, "Member 'FortHeroManagementContext_GetHeroData::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetHeroDataFromID
// 0x0030 (0x0030 - 0x0000)
struct FortHeroManagementContext_GetHeroDataFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHeroUIData                            ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetHeroDataFromID) == 0x000008, "Wrong alignment on FortHeroManagementContext_GetHeroDataFromID");
static_assert(sizeof(FortHeroManagementContext_GetHeroDataFromID) == 0x000030, "Wrong size on FortHeroManagementContext_GetHeroDataFromID");
static_assert(offsetof(FortHeroManagementContext_GetHeroDataFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_GetHeroDataFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetHeroDataFromID, ReturnValue) == 0x000010, "Member 'FortHeroManagementContext_GetHeroDataFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetHeroLevelAtXP
// 0x0008 (0x0008 - 0x0000)
struct FortHeroManagementContext_GetHeroLevelAtXP final
{
public:
	int32                                         Xp;                                                // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetHeroLevelAtXP) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetHeroLevelAtXP");
static_assert(sizeof(FortHeroManagementContext_GetHeroLevelAtXP) == 0x000008, "Wrong size on FortHeroManagementContext_GetHeroLevelAtXP");
static_assert(offsetof(FortHeroManagementContext_GetHeroLevelAtXP, Xp) == 0x000000, "Member 'FortHeroManagementContext_GetHeroLevelAtXP::Xp' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetHeroLevelAtXP, ReturnValue) == 0x000004, "Member 'FortHeroManagementContext_GetHeroLevelAtXP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetXPRequiredForHeroLevel
// 0x0008 (0x0008 - 0x0000)
struct FortHeroManagementContext_GetXPRequiredForHeroLevel final
{
public:
	int32                                         HeroLevel;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetXPRequiredForHeroLevel) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetXPRequiredForHeroLevel");
static_assert(sizeof(FortHeroManagementContext_GetXPRequiredForHeroLevel) == 0x000008, "Wrong size on FortHeroManagementContext_GetXPRequiredForHeroLevel");
static_assert(offsetof(FortHeroManagementContext_GetXPRequiredForHeroLevel, HeroLevel) == 0x000000, "Member 'FortHeroManagementContext_GetXPRequiredForHeroLevel::HeroLevel' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetXPRequiredForHeroLevel, ReturnValue) == 0x000004, "Member 'FortHeroManagementContext_GetXPRequiredForHeroLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.MarkHeroAsSeen
// 0x0010 (0x0010 - 0x0000)
struct FortHeroManagementContext_MarkHeroAsSeen final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_MarkHeroAsSeen) == 0x000008, "Wrong alignment on FortHeroManagementContext_MarkHeroAsSeen");
static_assert(sizeof(FortHeroManagementContext_MarkHeroAsSeen) == 0x000010, "Wrong size on FortHeroManagementContext_MarkHeroAsSeen");
static_assert(offsetof(FortHeroManagementContext_MarkHeroAsSeen, HeroId) == 0x000000, "Member 'FortHeroManagementContext_MarkHeroAsSeen::HeroId' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.PurchaseNextAbility
// 0x0008 (0x0008 - 0x0000)
struct FortHeroManagementContext_PurchaseNextAbility final
{
public:
	int32                                         TraitIdx;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_PurchaseNextAbility) == 0x000004, "Wrong alignment on FortHeroManagementContext_PurchaseNextAbility");
static_assert(sizeof(FortHeroManagementContext_PurchaseNextAbility) == 0x000008, "Wrong size on FortHeroManagementContext_PurchaseNextAbility");
static_assert(offsetof(FortHeroManagementContext_PurchaseNextAbility, TraitIdx) == 0x000000, "Member 'FortHeroManagementContext_PurchaseNextAbility::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_PurchaseNextAbility, ReturnValue) == 0x000004, "Member 'FortHeroManagementContext_PurchaseNextAbility::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.PurchaseNextAbilityFromID
// 0x0018 (0x0018 - 0x0000)
struct FortHeroManagementContext_PurchaseNextAbilityFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitIdx;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_PurchaseNextAbilityFromID) == 0x000008, "Wrong alignment on FortHeroManagementContext_PurchaseNextAbilityFromID");
static_assert(sizeof(FortHeroManagementContext_PurchaseNextAbilityFromID) == 0x000018, "Wrong size on FortHeroManagementContext_PurchaseNextAbilityFromID");
static_assert(offsetof(FortHeroManagementContext_PurchaseNextAbilityFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_PurchaseNextAbilityFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_PurchaseNextAbilityFromID, TraitIdx) == 0x000010, "Member 'FortHeroManagementContext_PurchaseNextAbilityFromID::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_PurchaseNextAbilityFromID, ReturnValue) == 0x000014, "Member 'FortHeroManagementContext_PurchaseNextAbilityFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.RedeemAllAbilities
// 0x0001 (0x0001 - 0x0000)
struct FortHeroManagementContext_RedeemAllAbilities final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_RedeemAllAbilities) == 0x000001, "Wrong alignment on FortHeroManagementContext_RedeemAllAbilities");
static_assert(sizeof(FortHeroManagementContext_RedeemAllAbilities) == 0x000001, "Wrong size on FortHeroManagementContext_RedeemAllAbilities");
static_assert(offsetof(FortHeroManagementContext_RedeemAllAbilities, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_RedeemAllAbilities::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.RedeemAllAbilitiesFromID
// 0x0010 (0x0010 - 0x0000)
struct FortHeroManagementContext_RedeemAllAbilitiesFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_RedeemAllAbilitiesFromID) == 0x000008, "Wrong alignment on FortHeroManagementContext_RedeemAllAbilitiesFromID");
static_assert(sizeof(FortHeroManagementContext_RedeemAllAbilitiesFromID) == 0x000010, "Wrong size on FortHeroManagementContext_RedeemAllAbilitiesFromID");
static_assert(offsetof(FortHeroManagementContext_RedeemAllAbilitiesFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_RedeemAllAbilitiesFromID::HeroId' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.RedeemPrevAbility
// 0x0008 (0x0008 - 0x0000)
struct FortHeroManagementContext_RedeemPrevAbility final
{
public:
	int32                                         TraitIdx;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_RedeemPrevAbility) == 0x000004, "Wrong alignment on FortHeroManagementContext_RedeemPrevAbility");
static_assert(sizeof(FortHeroManagementContext_RedeemPrevAbility) == 0x000008, "Wrong size on FortHeroManagementContext_RedeemPrevAbility");
static_assert(offsetof(FortHeroManagementContext_RedeemPrevAbility, TraitIdx) == 0x000000, "Member 'FortHeroManagementContext_RedeemPrevAbility::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RedeemPrevAbility, ReturnValue) == 0x000004, "Member 'FortHeroManagementContext_RedeemPrevAbility::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.RedeemPrevAbilityFromID
// 0x0018 (0x0018 - 0x0000)
struct FortHeroManagementContext_RedeemPrevAbilityFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitIdx;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_RedeemPrevAbilityFromID) == 0x000008, "Wrong alignment on FortHeroManagementContext_RedeemPrevAbilityFromID");
static_assert(sizeof(FortHeroManagementContext_RedeemPrevAbilityFromID) == 0x000018, "Wrong size on FortHeroManagementContext_RedeemPrevAbilityFromID");
static_assert(offsetof(FortHeroManagementContext_RedeemPrevAbilityFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_RedeemPrevAbilityFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RedeemPrevAbilityFromID, TraitIdx) == 0x000010, "Member 'FortHeroManagementContext_RedeemPrevAbilityFromID::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RedeemPrevAbilityFromID, ReturnValue) == 0x000014, "Member 'FortHeroManagementContext_RedeemPrevAbilityFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.RequestCreateHero
// 0x0020 (0x0020 - 0x0000)
struct FortHeroManagementContext_RequestCreateHero final
{
public:
	const class UFortHeroType*                    HeroType;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Param_Name;                                        // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortCustomGender                             Gender;                                            // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_RequestCreateHero) == 0x000008, "Wrong alignment on FortHeroManagementContext_RequestCreateHero");
static_assert(sizeof(FortHeroManagementContext_RequestCreateHero) == 0x000020, "Wrong size on FortHeroManagementContext_RequestCreateHero");
static_assert(offsetof(FortHeroManagementContext_RequestCreateHero, HeroType) == 0x000000, "Member 'FortHeroManagementContext_RequestCreateHero::HeroType' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RequestCreateHero, Param_Name) == 0x000008, "Member 'FortHeroManagementContext_RequestCreateHero::Param_Name' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RequestCreateHero, Gender) == 0x000018, "Member 'FortHeroManagementContext_RequestCreateHero::Gender' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RequestCreateHero, ReturnValue) == 0x000019, "Member 'FortHeroManagementContext_RequestCreateHero::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.RequestSetTraitDepth
// 0x000C (0x000C - 0x0000)
struct FortHeroManagementContext_RequestSetTraitDepth final
{
public:
	int32                                         TraitIdx;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Depth;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_RequestSetTraitDepth) == 0x000004, "Wrong alignment on FortHeroManagementContext_RequestSetTraitDepth");
static_assert(sizeof(FortHeroManagementContext_RequestSetTraitDepth) == 0x00000C, "Wrong size on FortHeroManagementContext_RequestSetTraitDepth");
static_assert(offsetof(FortHeroManagementContext_RequestSetTraitDepth, TraitIdx) == 0x000000, "Member 'FortHeroManagementContext_RequestSetTraitDepth::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RequestSetTraitDepth, Depth) == 0x000004, "Member 'FortHeroManagementContext_RequestSetTraitDepth::Depth' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RequestSetTraitDepth, ReturnValue) == 0x000008, "Member 'FortHeroManagementContext_RequestSetTraitDepth::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.RequestSetTraitDepthFromID
// 0x0020 (0x0020 - 0x0000)
struct FortHeroManagementContext_RequestSetTraitDepthFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitIdx;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Depth;                                             // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_RequestSetTraitDepthFromID) == 0x000008, "Wrong alignment on FortHeroManagementContext_RequestSetTraitDepthFromID");
static_assert(sizeof(FortHeroManagementContext_RequestSetTraitDepthFromID) == 0x000020, "Wrong size on FortHeroManagementContext_RequestSetTraitDepthFromID");
static_assert(offsetof(FortHeroManagementContext_RequestSetTraitDepthFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_RequestSetTraitDepthFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RequestSetTraitDepthFromID, TraitIdx) == 0x000010, "Member 'FortHeroManagementContext_RequestSetTraitDepthFromID::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RequestSetTraitDepthFromID, Depth) == 0x000014, "Member 'FortHeroManagementContext_RequestSetTraitDepthFromID::Depth' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_RequestSetTraitDepthFromID, ReturnValue) == 0x000018, "Member 'FortHeroManagementContext_RequestSetTraitDepthFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.SetCurrentHero
// 0x0018 (0x0018 - 0x0000)
struct FortHeroManagementContext_SetCurrentHero final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_SetCurrentHero) == 0x000008, "Wrong alignment on FortHeroManagementContext_SetCurrentHero");
static_assert(sizeof(FortHeroManagementContext_SetCurrentHero) == 0x000018, "Wrong size on FortHeroManagementContext_SetCurrentHero");
static_assert(offsetof(FortHeroManagementContext_SetCurrentHero, HeroId) == 0x000000, "Member 'FortHeroManagementContext_SetCurrentHero::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_SetCurrentHero, ReturnValue) == 0x000010, "Member 'FortHeroManagementContext_SetCurrentHero::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.SetHeroName
// 0x0018 (0x0018 - 0x0000)
struct FortHeroManagementContext_SetHeroName final
{
public:
	class FString                                 NewName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_SetHeroName) == 0x000008, "Wrong alignment on FortHeroManagementContext_SetHeroName");
static_assert(sizeof(FortHeroManagementContext_SetHeroName) == 0x000018, "Wrong size on FortHeroManagementContext_SetHeroName");
static_assert(offsetof(FortHeroManagementContext_SetHeroName, NewName) == 0x000000, "Member 'FortHeroManagementContext_SetHeroName::NewName' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_SetHeroName, ReturnValue) == 0x000010, "Member 'FortHeroManagementContext_SetHeroName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.CanModifyTraitDepth
// 0x0008 (0x0008 - 0x0000)
struct FortHeroManagementContext_CanModifyTraitDepth final
{
public:
	int32                                         TraitIdx;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_CanModifyTraitDepth) == 0x000004, "Wrong alignment on FortHeroManagementContext_CanModifyTraitDepth");
static_assert(sizeof(FortHeroManagementContext_CanModifyTraitDepth) == 0x000008, "Wrong size on FortHeroManagementContext_CanModifyTraitDepth");
static_assert(offsetof(FortHeroManagementContext_CanModifyTraitDepth, TraitIdx) == 0x000000, "Member 'FortHeroManagementContext_CanModifyTraitDepth::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanModifyTraitDepth, ReturnValue) == 0x000004, "Member 'FortHeroManagementContext_CanModifyTraitDepth::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.CanModifyTraitDepthFromID
// 0x0018 (0x0018 - 0x0000)
struct FortHeroManagementContext_CanModifyTraitDepthFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitIdx;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_CanModifyTraitDepthFromID) == 0x000008, "Wrong alignment on FortHeroManagementContext_CanModifyTraitDepthFromID");
static_assert(sizeof(FortHeroManagementContext_CanModifyTraitDepthFromID) == 0x000018, "Wrong size on FortHeroManagementContext_CanModifyTraitDepthFromID");
static_assert(offsetof(FortHeroManagementContext_CanModifyTraitDepthFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_CanModifyTraitDepthFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanModifyTraitDepthFromID, TraitIdx) == 0x000010, "Member 'FortHeroManagementContext_CanModifyTraitDepthFromID::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CanModifyTraitDepthFromID, ReturnValue) == 0x000014, "Member 'FortHeroManagementContext_CanModifyTraitDepthFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.CanRedeemAllAbilities
// 0x0001 (0x0001 - 0x0000)
struct FortHeroManagementContext_CanRedeemAllAbilities final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_CanRedeemAllAbilities) == 0x000001, "Wrong alignment on FortHeroManagementContext_CanRedeemAllAbilities");
static_assert(sizeof(FortHeroManagementContext_CanRedeemAllAbilities) == 0x000001, "Wrong size on FortHeroManagementContext_CanRedeemAllAbilities");
static_assert(offsetof(FortHeroManagementContext_CanRedeemAllAbilities, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_CanRedeemAllAbilities::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.CheckHeroNameValidity
// 0x0018 (0x0018 - 0x0000)
struct FortHeroManagementContext_CheckHeroNameValidity final
{
public:
	class FString                                 Param_Name;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENameStatus                                   ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_CheckHeroNameValidity) == 0x000008, "Wrong alignment on FortHeroManagementContext_CheckHeroNameValidity");
static_assert(sizeof(FortHeroManagementContext_CheckHeroNameValidity) == 0x000018, "Wrong size on FortHeroManagementContext_CheckHeroNameValidity");
static_assert(offsetof(FortHeroManagementContext_CheckHeroNameValidity, Param_Name) == 0x000000, "Member 'FortHeroManagementContext_CheckHeroNameValidity::Param_Name' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_CheckHeroNameValidity, ReturnValue) == 0x000010, "Member 'FortHeroManagementContext_CheckHeroNameValidity::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GenerateRandomHeroName
// 0x0018 (0x0018 - 0x0000)
struct FortHeroManagementContext_GenerateRandomHeroName final
{
public:
	const class UDataTable*                       NameTable;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Param_Name;                                        // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GenerateRandomHeroName) == 0x000008, "Wrong alignment on FortHeroManagementContext_GenerateRandomHeroName");
static_assert(sizeof(FortHeroManagementContext_GenerateRandomHeroName) == 0x000018, "Wrong size on FortHeroManagementContext_GenerateRandomHeroName");
static_assert(offsetof(FortHeroManagementContext_GenerateRandomHeroName, NameTable) == 0x000000, "Member 'FortHeroManagementContext_GenerateRandomHeroName::NameTable' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GenerateRandomHeroName, Param_Name) == 0x000008, "Member 'FortHeroManagementContext_GenerateRandomHeroName::Param_Name' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetAbilityCost
// 0x000C (0x000C - 0x0000)
struct FortHeroManagementContext_GetAbilityCost final
{
public:
	int32                                         TraitIdx;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitDepth;                                        // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetAbilityCost) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetAbilityCost");
static_assert(sizeof(FortHeroManagementContext_GetAbilityCost) == 0x00000C, "Wrong size on FortHeroManagementContext_GetAbilityCost");
static_assert(offsetof(FortHeroManagementContext_GetAbilityCost, TraitIdx) == 0x000000, "Member 'FortHeroManagementContext_GetAbilityCost::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAbilityCost, TraitDepth) == 0x000004, "Member 'FortHeroManagementContext_GetAbilityCost::TraitDepth' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAbilityCost, ReturnValue) == 0x000008, "Member 'FortHeroManagementContext_GetAbilityCost::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetAbilityCostFromID
// 0x0020 (0x0020 - 0x0000)
struct FortHeroManagementContext_GetAbilityCostFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitIdx;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitDepth;                                        // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_GetAbilityCostFromID) == 0x000008, "Wrong alignment on FortHeroManagementContext_GetAbilityCostFromID");
static_assert(sizeof(FortHeroManagementContext_GetAbilityCostFromID) == 0x000020, "Wrong size on FortHeroManagementContext_GetAbilityCostFromID");
static_assert(offsetof(FortHeroManagementContext_GetAbilityCostFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_GetAbilityCostFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAbilityCostFromID, TraitIdx) == 0x000010, "Member 'FortHeroManagementContext_GetAbilityCostFromID::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAbilityCostFromID, TraitDepth) == 0x000014, "Member 'FortHeroManagementContext_GetAbilityCostFromID::TraitDepth' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAbilityCostFromID, ReturnValue) == 0x000018, "Member 'FortHeroManagementContext_GetAbilityCostFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetAbilitySystemComponent
// 0x0008 (0x0008 - 0x0000)
struct FortHeroManagementContext_GetAbilitySystemComponent final
{
public:
	class UFortAbilitySystemComponent*            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetAbilitySystemComponent) == 0x000008, "Wrong alignment on FortHeroManagementContext_GetAbilitySystemComponent");
static_assert(sizeof(FortHeroManagementContext_GetAbilitySystemComponent) == 0x000008, "Wrong size on FortHeroManagementContext_GetAbilitySystemComponent");
static_assert(offsetof(FortHeroManagementContext_GetAbilitySystemComponent, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_GetAbilitySystemComponent::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetAllHeroIDs
// 0x0010 (0x0010 - 0x0000)
struct FortHeroManagementContext_GetAllHeroIDs final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetAllHeroIDs) == 0x000008, "Wrong alignment on FortHeroManagementContext_GetAllHeroIDs");
static_assert(sizeof(FortHeroManagementContext_GetAllHeroIDs) == 0x000010, "Wrong size on FortHeroManagementContext_GetAllHeroIDs");
static_assert(offsetof(FortHeroManagementContext_GetAllHeroIDs, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_GetAllHeroIDs::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetAttributeValue
// 0x0028 (0x0028 - 0x0000)
struct FortHeroManagementContext_GetAttributeValue final
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseProxy;                                         // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetAttributeValue) == 0x000008, "Wrong alignment on FortHeroManagementContext_GetAttributeValue");
static_assert(sizeof(FortHeroManagementContext_GetAttributeValue) == 0x000028, "Wrong size on FortHeroManagementContext_GetAttributeValue");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValue, Attribute) == 0x000000, "Member 'FortHeroManagementContext_GetAttributeValue::Attribute' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValue, bUseProxy) == 0x000020, "Member 'FortHeroManagementContext_GetAttributeValue::bUseProxy' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValue, ReturnValue) == 0x000024, "Member 'FortHeroManagementContext_GetAttributeValue::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetAttributeValueFromID
// 0x0038 (0x0038 - 0x0000)
struct FortHeroManagementContext_GetAttributeValueFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                     Attribute;                                         // 0x0010(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseProxy;                                         // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetAttributeValueFromID) == 0x000008, "Wrong alignment on FortHeroManagementContext_GetAttributeValueFromID");
static_assert(sizeof(FortHeroManagementContext_GetAttributeValueFromID) == 0x000038, "Wrong size on FortHeroManagementContext_GetAttributeValueFromID");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValueFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_GetAttributeValueFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValueFromID, Attribute) == 0x000010, "Member 'FortHeroManagementContext_GetAttributeValueFromID::Attribute' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValueFromID, bUseProxy) == 0x000030, "Member 'FortHeroManagementContext_GetAttributeValueFromID::bUseProxy' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValueFromID, ReturnValue) == 0x000034, "Member 'FortHeroManagementContext_GetAttributeValueFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetAttributeValuesArray
// 0x0028 (0x0028 - 0x0000)
struct FortHeroManagementContext_GetAttributeValuesArray final
{
public:
	TArray<struct FGameplayAttribute>             Attributes;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 Values;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bUseProxy;                                         // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_GetAttributeValuesArray) == 0x000008, "Wrong alignment on FortHeroManagementContext_GetAttributeValuesArray");
static_assert(sizeof(FortHeroManagementContext_GetAttributeValuesArray) == 0x000028, "Wrong size on FortHeroManagementContext_GetAttributeValuesArray");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValuesArray, Attributes) == 0x000000, "Member 'FortHeroManagementContext_GetAttributeValuesArray::Attributes' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValuesArray, Values) == 0x000010, "Member 'FortHeroManagementContext_GetAttributeValuesArray::Values' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValuesArray, bUseProxy) == 0x000020, "Member 'FortHeroManagementContext_GetAttributeValuesArray::bUseProxy' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValuesArray, ReturnValue) == 0x000021, "Member 'FortHeroManagementContext_GetAttributeValuesArray::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetAttributeValuesArrayFromID
// 0x0038 (0x0038 - 0x0000)
struct FortHeroManagementContext_GetAttributeValuesArrayFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayAttribute>             Attributes;                                        // 0x0010(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 Values;                                            // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bUseProxy;                                         // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_GetAttributeValuesArrayFromID) == 0x000008, "Wrong alignment on FortHeroManagementContext_GetAttributeValuesArrayFromID");
static_assert(sizeof(FortHeroManagementContext_GetAttributeValuesArrayFromID) == 0x000038, "Wrong size on FortHeroManagementContext_GetAttributeValuesArrayFromID");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValuesArrayFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_GetAttributeValuesArrayFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValuesArrayFromID, Attributes) == 0x000010, "Member 'FortHeroManagementContext_GetAttributeValuesArrayFromID::Attributes' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValuesArrayFromID, Values) == 0x000020, "Member 'FortHeroManagementContext_GetAttributeValuesArrayFromID::Values' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValuesArrayFromID, bUseProxy) == 0x000030, "Member 'FortHeroManagementContext_GetAttributeValuesArrayFromID::bUseProxy' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetAttributeValuesArrayFromID, ReturnValue) == 0x000031, "Member 'FortHeroManagementContext_GetAttributeValuesArrayFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetCoreAbilities
// 0x0010 (0x0010 - 0x0000)
struct FortHeroManagementContext_GetCoreAbilities final
{
public:
	TArray<class UFortAbilityKit*>                ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetCoreAbilities) == 0x000008, "Wrong alignment on FortHeroManagementContext_GetCoreAbilities");
static_assert(sizeof(FortHeroManagementContext_GetCoreAbilities) == 0x000010, "Wrong size on FortHeroManagementContext_GetCoreAbilities");
static_assert(offsetof(FortHeroManagementContext_GetCoreAbilities, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_GetCoreAbilities::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetMaxNameLength
// 0x0004 (0x0004 - 0x0000)
struct FortHeroManagementContext_GetMaxNameLength final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetMaxNameLength) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetMaxNameLength");
static_assert(sizeof(FortHeroManagementContext_GetMaxNameLength) == 0x000004, "Wrong size on FortHeroManagementContext_GetMaxNameLength");
static_assert(offsetof(FortHeroManagementContext_GetMaxNameLength, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_GetMaxNameLength::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetNextAbilityCost
// 0x0008 (0x0008 - 0x0000)
struct FortHeroManagementContext_GetNextAbilityCost final
{
public:
	int32                                         TraitIdx;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetNextAbilityCost) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetNextAbilityCost");
static_assert(sizeof(FortHeroManagementContext_GetNextAbilityCost) == 0x000008, "Wrong size on FortHeroManagementContext_GetNextAbilityCost");
static_assert(offsetof(FortHeroManagementContext_GetNextAbilityCost, TraitIdx) == 0x000000, "Member 'FortHeroManagementContext_GetNextAbilityCost::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetNextAbilityCost, ReturnValue) == 0x000004, "Member 'FortHeroManagementContext_GetNextAbilityCost::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetNextAbilityCostFromID
// 0x0018 (0x0018 - 0x0000)
struct FortHeroManagementContext_GetNextAbilityCostFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitIdx;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetNextAbilityCostFromID) == 0x000008, "Wrong alignment on FortHeroManagementContext_GetNextAbilityCostFromID");
static_assert(sizeof(FortHeroManagementContext_GetNextAbilityCostFromID) == 0x000018, "Wrong size on FortHeroManagementContext_GetNextAbilityCostFromID");
static_assert(offsetof(FortHeroManagementContext_GetNextAbilityCostFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_GetNextAbilityCostFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetNextAbilityCostFromID, TraitIdx) == 0x000010, "Member 'FortHeroManagementContext_GetNextAbilityCostFromID::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetNextAbilityCostFromID, ReturnValue) == 0x000014, "Member 'FortHeroManagementContext_GetNextAbilityCostFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetNumHeroTraits
// 0x0004 (0x0004 - 0x0000)
struct FortHeroManagementContext_GetNumHeroTraits final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetNumHeroTraits) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetNumHeroTraits");
static_assert(sizeof(FortHeroManagementContext_GetNumHeroTraits) == 0x000004, "Wrong size on FortHeroManagementContext_GetNumHeroTraits");
static_assert(offsetof(FortHeroManagementContext_GetNumHeroTraits, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_GetNumHeroTraits::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetNumUnspentAbilityPoints
// 0x0008 (0x0008 - 0x0000)
struct FortHeroManagementContext_GetNumUnspentAbilityPoints final
{
public:
	int32                                         NumAbilityPoints;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_GetNumUnspentAbilityPoints) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetNumUnspentAbilityPoints");
static_assert(sizeof(FortHeroManagementContext_GetNumUnspentAbilityPoints) == 0x000008, "Wrong size on FortHeroManagementContext_GetNumUnspentAbilityPoints");
static_assert(offsetof(FortHeroManagementContext_GetNumUnspentAbilityPoints, NumAbilityPoints) == 0x000000, "Member 'FortHeroManagementContext_GetNumUnspentAbilityPoints::NumAbilityPoints' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetNumUnspentAbilityPoints, ReturnValue) == 0x000004, "Member 'FortHeroManagementContext_GetNumUnspentAbilityPoints::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetNumUnspentAbilityPointsFromID
// 0x0018 (0x0018 - 0x0000)
struct FortHeroManagementContext_GetNumUnspentAbilityPointsFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_GetNumUnspentAbilityPointsFromID) == 0x000008, "Wrong alignment on FortHeroManagementContext_GetNumUnspentAbilityPointsFromID");
static_assert(sizeof(FortHeroManagementContext_GetNumUnspentAbilityPointsFromID) == 0x000018, "Wrong size on FortHeroManagementContext_GetNumUnspentAbilityPointsFromID");
static_assert(offsetof(FortHeroManagementContext_GetNumUnspentAbilityPointsFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_GetNumUnspentAbilityPointsFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetNumUnspentAbilityPointsFromID, ReturnValue) == 0x000010, "Member 'FortHeroManagementContext_GetNumUnspentAbilityPointsFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetTraitDepth
// 0x000C (0x000C - 0x0000)
struct FortHeroManagementContext_GetTraitDepth final
{
public:
	int32                                         TraitIdx;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Depth;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHeroManagementContext_GetTraitDepth) == 0x000004, "Wrong alignment on FortHeroManagementContext_GetTraitDepth");
static_assert(sizeof(FortHeroManagementContext_GetTraitDepth) == 0x00000C, "Wrong size on FortHeroManagementContext_GetTraitDepth");
static_assert(offsetof(FortHeroManagementContext_GetTraitDepth, TraitIdx) == 0x000000, "Member 'FortHeroManagementContext_GetTraitDepth::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetTraitDepth, Depth) == 0x000004, "Member 'FortHeroManagementContext_GetTraitDepth::Depth' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetTraitDepth, ReturnValue) == 0x000008, "Member 'FortHeroManagementContext_GetTraitDepth::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.GetTraitDepthFromID
// 0x0018 (0x0018 - 0x0000)
struct FortHeroManagementContext_GetTraitDepthFromID final
{
public:
	class FString                                 HeroId;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TraitIdx;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_GetTraitDepthFromID) == 0x000008, "Wrong alignment on FortHeroManagementContext_GetTraitDepthFromID");
static_assert(sizeof(FortHeroManagementContext_GetTraitDepthFromID) == 0x000018, "Wrong size on FortHeroManagementContext_GetTraitDepthFromID");
static_assert(offsetof(FortHeroManagementContext_GetTraitDepthFromID, HeroId) == 0x000000, "Member 'FortHeroManagementContext_GetTraitDepthFromID::HeroId' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetTraitDepthFromID, TraitIdx) == 0x000010, "Member 'FortHeroManagementContext_GetTraitDepthFromID::TraitIdx' has a wrong offset!");
static_assert(offsetof(FortHeroManagementContext_GetTraitDepthFromID, ReturnValue) == 0x000014, "Member 'FortHeroManagementContext_GetTraitDepthFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.IsCreateHeroEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortHeroManagementContext_IsCreateHeroEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_IsCreateHeroEnabled) == 0x000001, "Wrong alignment on FortHeroManagementContext_IsCreateHeroEnabled");
static_assert(sizeof(FortHeroManagementContext_IsCreateHeroEnabled) == 0x000001, "Wrong size on FortHeroManagementContext_IsCreateHeroEnabled");
static_assert(offsetof(FortHeroManagementContext_IsCreateHeroEnabled, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_IsCreateHeroEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.IsShowingStatsScreen
// 0x0001 (0x0001 - 0x0000)
struct FortHeroManagementContext_IsShowingStatsScreen final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_IsShowingStatsScreen) == 0x000001, "Wrong alignment on FortHeroManagementContext_IsShowingStatsScreen");
static_assert(sizeof(FortHeroManagementContext_IsShowingStatsScreen) == 0x000001, "Wrong size on FortHeroManagementContext_IsShowingStatsScreen");
static_assert(offsetof(FortHeroManagementContext_IsShowingStatsScreen, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_IsShowingStatsScreen::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroManagementContext.IsSkillTreeUnlocked
// 0x0001 (0x0001 - 0x0000)
struct FortHeroManagementContext_IsSkillTreeUnlocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroManagementContext_IsSkillTreeUnlocked) == 0x000001, "Wrong alignment on FortHeroManagementContext_IsSkillTreeUnlocked");
static_assert(sizeof(FortHeroManagementContext_IsSkillTreeUnlocked) == 0x000001, "Wrong size on FortHeroManagementContext_IsSkillTreeUnlocked");
static_assert(offsetof(FortHeroManagementContext_IsSkillTreeUnlocked, ReturnValue) == 0x000000, "Member 'FortHeroManagementContext_IsSkillTreeUnlocked::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroSupportPerkWidget.SetHeroToRepresent
// 0x0008 (0x0008 - 0x0000)
struct FortHeroSupportPerkWidget_SetHeroToRepresent final
{
public:
	const class UFortHero*                        InHeroToRepresent;                                 // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroSupportPerkWidget_SetHeroToRepresent) == 0x000008, "Wrong alignment on FortHeroSupportPerkWidget_SetHeroToRepresent");
static_assert(sizeof(FortHeroSupportPerkWidget_SetHeroToRepresent) == 0x000008, "Wrong size on FortHeroSupportPerkWidget_SetHeroToRepresent");
static_assert(offsetof(FortHeroSupportPerkWidget_SetHeroToRepresent, InHeroToRepresent) == 0x000000, "Member 'FortHeroSupportPerkWidget_SetHeroToRepresent::InHeroToRepresent' has a wrong offset!");

// Function FortniteUI.FortHeroSupportPerkWidget.SetState
// 0x0001 (0x0001 - 0x0000)
struct FortHeroSupportPerkWidget_SetState final
{
public:
	EFortSupportPerkWidgetState                   InState;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroSupportPerkWidget_SetState) == 0x000001, "Wrong alignment on FortHeroSupportPerkWidget_SetState");
static_assert(sizeof(FortHeroSupportPerkWidget_SetState) == 0x000001, "Wrong size on FortHeroSupportPerkWidget_SetState");
static_assert(offsetof(FortHeroSupportPerkWidget_SetState, InState) == 0x000000, "Member 'FortHeroSupportPerkWidget_SetState::InState' has a wrong offset!");

// Function FortniteUI.FortHeroSupportPerkWidget.SetSupportTypeToRepresent
// 0x0001 (0x0001 - 0x0000)
struct FortHeroSupportPerkWidget_SetSupportTypeToRepresent final
{
public:
	EFortSupportBonusType                         InSupportTypeToRepresent;                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroSupportPerkWidget_SetSupportTypeToRepresent) == 0x000001, "Wrong alignment on FortHeroSupportPerkWidget_SetSupportTypeToRepresent");
static_assert(sizeof(FortHeroSupportPerkWidget_SetSupportTypeToRepresent) == 0x000001, "Wrong size on FortHeroSupportPerkWidget_SetSupportTypeToRepresent");
static_assert(offsetof(FortHeroSupportPerkWidget_SetSupportTypeToRepresent, InSupportTypeToRepresent) == 0x000000, "Member 'FortHeroSupportPerkWidget_SetSupportTypeToRepresent::InSupportTypeToRepresent' has a wrong offset!");

// Function FortniteUI.FortHeroSupportPerkWidget.IsHeroInSupportSlot
// 0x0001 (0x0001 - 0x0000)
struct FortHeroSupportPerkWidget_IsHeroInSupportSlot final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroSupportPerkWidget_IsHeroInSupportSlot) == 0x000001, "Wrong alignment on FortHeroSupportPerkWidget_IsHeroInSupportSlot");
static_assert(sizeof(FortHeroSupportPerkWidget_IsHeroInSupportSlot) == 0x000001, "Wrong size on FortHeroSupportPerkWidget_IsHeroInSupportSlot");
static_assert(offsetof(FortHeroSupportPerkWidget_IsHeroInSupportSlot, ReturnValue) == 0x000000, "Member 'FortHeroSupportPerkWidget_IsHeroInSupportSlot::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroSupportPerkWidget.IsPerkActive
// 0x0001 (0x0001 - 0x0000)
struct FortHeroSupportPerkWidget_IsPerkActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroSupportPerkWidget_IsPerkActive) == 0x000001, "Wrong alignment on FortHeroSupportPerkWidget_IsPerkActive");
static_assert(sizeof(FortHeroSupportPerkWidget_IsPerkActive) == 0x000001, "Wrong size on FortHeroSupportPerkWidget_IsPerkActive");
static_assert(offsetof(FortHeroSupportPerkWidget_IsPerkActive, ReturnValue) == 0x000000, "Member 'FortHeroSupportPerkWidget_IsPerkActive::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroSupportPerkWidget.IsPerkEmpty
// 0x0001 (0x0001 - 0x0000)
struct FortHeroSupportPerkWidget_IsPerkEmpty final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroSupportPerkWidget_IsPerkEmpty) == 0x000001, "Wrong alignment on FortHeroSupportPerkWidget_IsPerkEmpty");
static_assert(sizeof(FortHeroSupportPerkWidget_IsPerkEmpty) == 0x000001, "Wrong size on FortHeroSupportPerkWidget_IsPerkEmpty");
static_assert(offsetof(FortHeroSupportPerkWidget_IsPerkEmpty, ReturnValue) == 0x000000, "Member 'FortHeroSupportPerkWidget_IsPerkEmpty::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroSupportPerkWidget.IsPerkHighlighted
// 0x0001 (0x0001 - 0x0000)
struct FortHeroSupportPerkWidget_IsPerkHighlighted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroSupportPerkWidget_IsPerkHighlighted) == 0x000001, "Wrong alignment on FortHeroSupportPerkWidget_IsPerkHighlighted");
static_assert(sizeof(FortHeroSupportPerkWidget_IsPerkHighlighted) == 0x000001, "Wrong size on FortHeroSupportPerkWidget_IsPerkHighlighted");
static_assert(offsetof(FortHeroSupportPerkWidget_IsPerkHighlighted, ReturnValue) == 0x000000, "Member 'FortHeroSupportPerkWidget_IsPerkHighlighted::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroSupportPerkWidget.IsPerkInCorrectSlot
// 0x0001 (0x0001 - 0x0000)
struct FortHeroSupportPerkWidget_IsPerkInCorrectSlot final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroSupportPerkWidget_IsPerkInCorrectSlot) == 0x000001, "Wrong alignment on FortHeroSupportPerkWidget_IsPerkInCorrectSlot");
static_assert(sizeof(FortHeroSupportPerkWidget_IsPerkInCorrectSlot) == 0x000001, "Wrong size on FortHeroSupportPerkWidget_IsPerkInCorrectSlot");
static_assert(offsetof(FortHeroSupportPerkWidget_IsPerkInCorrectSlot, ReturnValue) == 0x000000, "Member 'FortHeroSupportPerkWidget_IsPerkInCorrectSlot::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHeroSupportPerkWidget.IsPerkUnlocked
// 0x0001 (0x0001 - 0x0000)
struct FortHeroSupportPerkWidget_IsPerkUnlocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHeroSupportPerkWidget_IsPerkUnlocked) == 0x000001, "Wrong alignment on FortHeroSupportPerkWidget_IsPerkUnlocked");
static_assert(sizeof(FortHeroSupportPerkWidget_IsPerkUnlocked) == 0x000001, "Wrong size on FortHeroSupportPerkWidget_IsPerkUnlocked");
static_assert(offsetof(FortHeroSupportPerkWidget_IsPerkUnlocked, ReturnValue) == 0x000000, "Member 'FortHeroSupportPerkWidget_IsPerkUnlocked::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.GetLocalPlayerHasHeroBackpack
// 0x0001 (0x0001 - 0x0000)
struct FortHomebaseUIContext_GetLocalPlayerHasHeroBackpack final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_GetLocalPlayerHasHeroBackpack) == 0x000001, "Wrong alignment on FortHomebaseUIContext_GetLocalPlayerHasHeroBackpack");
static_assert(sizeof(FortHomebaseUIContext_GetLocalPlayerHasHeroBackpack) == 0x000001, "Wrong size on FortHomebaseUIContext_GetLocalPlayerHasHeroBackpack");
static_assert(offsetof(FortHomebaseUIContext_GetLocalPlayerHasHeroBackpack, ReturnValue) == 0x000000, "Member 'FortHomebaseUIContext_GetLocalPlayerHasHeroBackpack::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.GetLocalPlayerHasHeroHeadAccessories
// 0x0001 (0x0001 - 0x0000)
struct FortHomebaseUIContext_GetLocalPlayerHasHeroHeadAccessories final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_GetLocalPlayerHasHeroHeadAccessories) == 0x000001, "Wrong alignment on FortHomebaseUIContext_GetLocalPlayerHasHeroHeadAccessories");
static_assert(sizeof(FortHomebaseUIContext_GetLocalPlayerHasHeroHeadAccessories) == 0x000001, "Wrong size on FortHomebaseUIContext_GetLocalPlayerHasHeroHeadAccessories");
static_assert(offsetof(FortHomebaseUIContext_GetLocalPlayerHasHeroHeadAccessories, ReturnValue) == 0x000000, "Member 'FortHomebaseUIContext_GetLocalPlayerHasHeroHeadAccessories::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.GetShowHeroBackpackForLocalPlayer
// 0x0001 (0x0001 - 0x0000)
struct FortHomebaseUIContext_GetShowHeroBackpackForLocalPlayer final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_GetShowHeroBackpackForLocalPlayer) == 0x000001, "Wrong alignment on FortHomebaseUIContext_GetShowHeroBackpackForLocalPlayer");
static_assert(sizeof(FortHomebaseUIContext_GetShowHeroBackpackForLocalPlayer) == 0x000001, "Wrong size on FortHomebaseUIContext_GetShowHeroBackpackForLocalPlayer");
static_assert(offsetof(FortHomebaseUIContext_GetShowHeroBackpackForLocalPlayer, ReturnValue) == 0x000000, "Member 'FortHomebaseUIContext_GetShowHeroBackpackForLocalPlayer::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.GetShowHeroHeadAccessoriesForLocalPlayer
// 0x0001 (0x0001 - 0x0000)
struct FortHomebaseUIContext_GetShowHeroHeadAccessoriesForLocalPlayer final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_GetShowHeroHeadAccessoriesForLocalPlayer) == 0x000001, "Wrong alignment on FortHomebaseUIContext_GetShowHeroHeadAccessoriesForLocalPlayer");
static_assert(sizeof(FortHomebaseUIContext_GetShowHeroHeadAccessoriesForLocalPlayer) == 0x000001, "Wrong size on FortHomebaseUIContext_GetShowHeroHeadAccessoriesForLocalPlayer");
static_assert(offsetof(FortHomebaseUIContext_GetShowHeroHeadAccessoriesForLocalPlayer, ReturnValue) == 0x000000, "Member 'FortHomebaseUIContext_GetShowHeroHeadAccessoriesForLocalPlayer::ReturnValue' has a wrong offset!");

// DelegateFunction FortniteUI.FortHomebaseUIContext.OnNodesPurchased__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortHomebaseUIContext_OnNodesPurchased__DelegateSignature final
{
public:
	class FName                                   NodeID;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_OnNodesPurchased__DelegateSignature) == 0x000004, "Wrong alignment on FortHomebaseUIContext_OnNodesPurchased__DelegateSignature");
static_assert(sizeof(FortHomebaseUIContext_OnNodesPurchased__DelegateSignature) == 0x000008, "Wrong size on FortHomebaseUIContext_OnNodesPurchased__DelegateSignature");
static_assert(offsetof(FortHomebaseUIContext_OnNodesPurchased__DelegateSignature, NodeID) == 0x000000, "Member 'FortHomebaseUIContext_OnNodesPurchased__DelegateSignature::NodeID' has a wrong offset!");

// DelegateFunction FortniteUI.FortHomebaseUIContext.OnSquadSlotChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct FortHomebaseUIContext_OnSquadSlotChanged__DelegateSignature final
{
public:
	class FName                                   SquadName;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SlotIndex;                                         // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHomebaseUIContext_OnSquadSlotChanged__DelegateSignature) == 0x000004, "Wrong alignment on FortHomebaseUIContext_OnSquadSlotChanged__DelegateSignature");
static_assert(sizeof(FortHomebaseUIContext_OnSquadSlotChanged__DelegateSignature) == 0x000010, "Wrong size on FortHomebaseUIContext_OnSquadSlotChanged__DelegateSignature");
static_assert(offsetof(FortHomebaseUIContext_OnSquadSlotChanged__DelegateSignature, SquadName) == 0x000000, "Member 'FortHomebaseUIContext_OnSquadSlotChanged__DelegateSignature::SquadName' has a wrong offset!");
static_assert(offsetof(FortHomebaseUIContext_OnSquadSlotChanged__DelegateSignature, SlotIndex) == 0x000008, "Member 'FortHomebaseUIContext_OnSquadSlotChanged__DelegateSignature::SlotIndex' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.SetShowHeroBackpackForLocalPlayer
// 0x0001 (0x0001 - 0x0000)
struct FortHomebaseUIContext_SetShowHeroBackpackForLocalPlayer final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_SetShowHeroBackpackForLocalPlayer) == 0x000001, "Wrong alignment on FortHomebaseUIContext_SetShowHeroBackpackForLocalPlayer");
static_assert(sizeof(FortHomebaseUIContext_SetShowHeroBackpackForLocalPlayer) == 0x000001, "Wrong size on FortHomebaseUIContext_SetShowHeroBackpackForLocalPlayer");
static_assert(offsetof(FortHomebaseUIContext_SetShowHeroBackpackForLocalPlayer, bShow) == 0x000000, "Member 'FortHomebaseUIContext_SetShowHeroBackpackForLocalPlayer::bShow' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.SetShowHeroBackpackInClientSettingsRecord
// 0x0001 (0x0001 - 0x0000)
struct FortHomebaseUIContext_SetShowHeroBackpackInClientSettingsRecord final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_SetShowHeroBackpackInClientSettingsRecord) == 0x000001, "Wrong alignment on FortHomebaseUIContext_SetShowHeroBackpackInClientSettingsRecord");
static_assert(sizeof(FortHomebaseUIContext_SetShowHeroBackpackInClientSettingsRecord) == 0x000001, "Wrong size on FortHomebaseUIContext_SetShowHeroBackpackInClientSettingsRecord");
static_assert(offsetof(FortHomebaseUIContext_SetShowHeroBackpackInClientSettingsRecord, bShow) == 0x000000, "Member 'FortHomebaseUIContext_SetShowHeroBackpackInClientSettingsRecord::bShow' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.SetShowHeroHeadAccessoriesForLocalPlayer
// 0x0001 (0x0001 - 0x0000)
struct FortHomebaseUIContext_SetShowHeroHeadAccessoriesForLocalPlayer final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_SetShowHeroHeadAccessoriesForLocalPlayer) == 0x000001, "Wrong alignment on FortHomebaseUIContext_SetShowHeroHeadAccessoriesForLocalPlayer");
static_assert(sizeof(FortHomebaseUIContext_SetShowHeroHeadAccessoriesForLocalPlayer) == 0x000001, "Wrong size on FortHomebaseUIContext_SetShowHeroHeadAccessoriesForLocalPlayer");
static_assert(offsetof(FortHomebaseUIContext_SetShowHeroHeadAccessoriesForLocalPlayer, bShow) == 0x000000, "Member 'FortHomebaseUIContext_SetShowHeroHeadAccessoriesForLocalPlayer::bShow' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.SetShowHeroHeadAccessoriesInClientSettingsRecord
// 0x0001 (0x0001 - 0x0000)
struct FortHomebaseUIContext_SetShowHeroHeadAccessoriesInClientSettingsRecord final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_SetShowHeroHeadAccessoriesInClientSettingsRecord) == 0x000001, "Wrong alignment on FortHomebaseUIContext_SetShowHeroHeadAccessoriesInClientSettingsRecord");
static_assert(sizeof(FortHomebaseUIContext_SetShowHeroHeadAccessoriesInClientSettingsRecord) == 0x000001, "Wrong size on FortHomebaseUIContext_SetShowHeroHeadAccessoriesInClientSettingsRecord");
static_assert(offsetof(FortHomebaseUIContext_SetShowHeroHeadAccessoriesInClientSettingsRecord, bShow) == 0x000000, "Member 'FortHomebaseUIContext_SetShowHeroHeadAccessoriesInClientSettingsRecord::bShow' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.GetEarlyGameNodePageId
// 0x0008 (0x0008 - 0x0000)
struct FortHomebaseUIContext_GetEarlyGameNodePageId final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_GetEarlyGameNodePageId) == 0x000004, "Wrong alignment on FortHomebaseUIContext_GetEarlyGameNodePageId");
static_assert(sizeof(FortHomebaseUIContext_GetEarlyGameNodePageId) == 0x000008, "Wrong size on FortHomebaseUIContext_GetEarlyGameNodePageId");
static_assert(offsetof(FortHomebaseUIContext_GetEarlyGameNodePageId, ReturnValue) == 0x000000, "Member 'FortHomebaseUIContext_GetEarlyGameNodePageId::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.GetEarlyGameNodeProgressionState
// 0x0008 (0x0008 - 0x0000)
struct FortHomebaseUIContext_GetEarlyGameNodeProgressionState final
{
public:
	int32                                         OutOwnedNodeCount;                                 // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutRequiredNodeCountToLeaveEarlyGame;              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_GetEarlyGameNodeProgressionState) == 0x000004, "Wrong alignment on FortHomebaseUIContext_GetEarlyGameNodeProgressionState");
static_assert(sizeof(FortHomebaseUIContext_GetEarlyGameNodeProgressionState) == 0x000008, "Wrong size on FortHomebaseUIContext_GetEarlyGameNodeProgressionState");
static_assert(offsetof(FortHomebaseUIContext_GetEarlyGameNodeProgressionState, OutOwnedNodeCount) == 0x000000, "Member 'FortHomebaseUIContext_GetEarlyGameNodeProgressionState::OutOwnedNodeCount' has a wrong offset!");
static_assert(offsetof(FortHomebaseUIContext_GetEarlyGameNodeProgressionState, OutRequiredNodeCountToLeaveEarlyGame) == 0x000004, "Member 'FortHomebaseUIContext_GetEarlyGameNodeProgressionState::OutRequiredNodeCountToLeaveEarlyGame' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.GetEarlyGameRootSkillTreeNodeId
// 0x0008 (0x0008 - 0x0000)
struct FortHomebaseUIContext_GetEarlyGameRootSkillTreeNodeId final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_GetEarlyGameRootSkillTreeNodeId) == 0x000004, "Wrong alignment on FortHomebaseUIContext_GetEarlyGameRootSkillTreeNodeId");
static_assert(sizeof(FortHomebaseUIContext_GetEarlyGameRootSkillTreeNodeId) == 0x000008, "Wrong size on FortHomebaseUIContext_GetEarlyGameRootSkillTreeNodeId");
static_assert(offsetof(FortHomebaseUIContext_GetEarlyGameRootSkillTreeNodeId, ReturnValue) == 0x000000, "Member 'FortHomebaseUIContext_GetEarlyGameRootSkillTreeNodeId::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.GetEarlyGameRootSkillTreePageId
// 0x0008 (0x0008 - 0x0000)
struct FortHomebaseUIContext_GetEarlyGameRootSkillTreePageId final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_GetEarlyGameRootSkillTreePageId) == 0x000004, "Wrong alignment on FortHomebaseUIContext_GetEarlyGameRootSkillTreePageId");
static_assert(sizeof(FortHomebaseUIContext_GetEarlyGameRootSkillTreePageId) == 0x000008, "Wrong size on FortHomebaseUIContext_GetEarlyGameRootSkillTreePageId");
static_assert(offsetof(FortHomebaseUIContext_GetEarlyGameRootSkillTreePageId, ReturnValue) == 0x000000, "Member 'FortHomebaseUIContext_GetEarlyGameRootSkillTreePageId::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.GetItemInSquadSlot
// 0x0018 (0x0018 - 0x0000)
struct FortHomebaseUIContext_GetItemInSquadSlot final
{
public:
	class FName                                   SquadName;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SlotIndex;                                         // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_GetItemInSquadSlot) == 0x000008, "Wrong alignment on FortHomebaseUIContext_GetItemInSquadSlot");
static_assert(sizeof(FortHomebaseUIContext_GetItemInSquadSlot) == 0x000018, "Wrong size on FortHomebaseUIContext_GetItemInSquadSlot");
static_assert(offsetof(FortHomebaseUIContext_GetItemInSquadSlot, SquadName) == 0x000000, "Member 'FortHomebaseUIContext_GetItemInSquadSlot::SquadName' has a wrong offset!");
static_assert(offsetof(FortHomebaseUIContext_GetItemInSquadSlot, SlotIndex) == 0x000008, "Member 'FortHomebaseUIContext_GetItemInSquadSlot::SlotIndex' has a wrong offset!");
static_assert(offsetof(FortHomebaseUIContext_GetItemInSquadSlot, ReturnValue) == 0x000010, "Member 'FortHomebaseUIContext_GetItemInSquadSlot::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.GetItemsInSquad
// 0x0020 (0x0020 - 0x0000)
struct FortHomebaseUIContext_GetItemsInSquad final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRemoveEmptySquadSlots;                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortItem*>                      ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_GetItemsInSquad) == 0x000008, "Wrong alignment on FortHomebaseUIContext_GetItemsInSquad");
static_assert(sizeof(FortHomebaseUIContext_GetItemsInSquad) == 0x000020, "Wrong size on FortHomebaseUIContext_GetItemsInSquad");
static_assert(offsetof(FortHomebaseUIContext_GetItemsInSquad, SquadId) == 0x000000, "Member 'FortHomebaseUIContext_GetItemsInSquad::SquadId' has a wrong offset!");
static_assert(offsetof(FortHomebaseUIContext_GetItemsInSquad, bRemoveEmptySquadSlots) == 0x000008, "Member 'FortHomebaseUIContext_GetItemsInSquad::bRemoveEmptySquadSlots' has a wrong offset!");
static_assert(offsetof(FortHomebaseUIContext_GetItemsInSquad, ReturnValue) == 0x000010, "Member 'FortHomebaseUIContext_GetItemsInSquad::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.GetNodeAttributeBonusesForDisplay
// 0x0020 (0x0020 - 0x0000)
struct FortHomebaseUIContext_GetNodeAttributeBonusesForDisplay final
{
public:
	class FName                                   NodeID;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortDisplayAttribute>          OutDisplayAttributes;                              // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHomebaseUIContext_GetNodeAttributeBonusesForDisplay) == 0x000008, "Wrong alignment on FortHomebaseUIContext_GetNodeAttributeBonusesForDisplay");
static_assert(sizeof(FortHomebaseUIContext_GetNodeAttributeBonusesForDisplay) == 0x000020, "Wrong size on FortHomebaseUIContext_GetNodeAttributeBonusesForDisplay");
static_assert(offsetof(FortHomebaseUIContext_GetNodeAttributeBonusesForDisplay, NodeID) == 0x000000, "Member 'FortHomebaseUIContext_GetNodeAttributeBonusesForDisplay::NodeID' has a wrong offset!");
static_assert(offsetof(FortHomebaseUIContext_GetNodeAttributeBonusesForDisplay, OutDisplayAttributes) == 0x000008, "Member 'FortHomebaseUIContext_GetNodeAttributeBonusesForDisplay::OutDisplayAttributes' has a wrong offset!");
static_assert(offsetof(FortHomebaseUIContext_GetNodeAttributeBonusesForDisplay, ReturnValue) == 0x000018, "Member 'FortHomebaseUIContext_GetNodeAttributeBonusesForDisplay::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.GetNodeDescription
// 0x0028 (0x0028 - 0x0000)
struct FortHomebaseUIContext_GetNodeDescription final
{
public:
	class FName                                   NodeID;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   OutDescription;                                    // 0x0008(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHomebaseUIContext_GetNodeDescription) == 0x000008, "Wrong alignment on FortHomebaseUIContext_GetNodeDescription");
static_assert(sizeof(FortHomebaseUIContext_GetNodeDescription) == 0x000028, "Wrong size on FortHomebaseUIContext_GetNodeDescription");
static_assert(offsetof(FortHomebaseUIContext_GetNodeDescription, NodeID) == 0x000000, "Member 'FortHomebaseUIContext_GetNodeDescription::NodeID' has a wrong offset!");
static_assert(offsetof(FortHomebaseUIContext_GetNodeDescription, OutDescription) == 0x000008, "Member 'FortHomebaseUIContext_GetNodeDescription::OutDescription' has a wrong offset!");
static_assert(offsetof(FortHomebaseUIContext_GetNodeDescription, ReturnValue) == 0x000020, "Member 'FortHomebaseUIContext_GetNodeDescription::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.GetNodeTagBonusesForDisplay
// 0x0020 (0x0020 - 0x0000)
struct FortHomebaseUIContext_GetNodeTagBonusesForDisplay final
{
public:
	class FName                                   NodeID;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortTagUIData>                 OutGrantedTagsUIData;                              // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHomebaseUIContext_GetNodeTagBonusesForDisplay) == 0x000008, "Wrong alignment on FortHomebaseUIContext_GetNodeTagBonusesForDisplay");
static_assert(sizeof(FortHomebaseUIContext_GetNodeTagBonusesForDisplay) == 0x000020, "Wrong size on FortHomebaseUIContext_GetNodeTagBonusesForDisplay");
static_assert(offsetof(FortHomebaseUIContext_GetNodeTagBonusesForDisplay, NodeID) == 0x000000, "Member 'FortHomebaseUIContext_GetNodeTagBonusesForDisplay::NodeID' has a wrong offset!");
static_assert(offsetof(FortHomebaseUIContext_GetNodeTagBonusesForDisplay, OutGrantedTagsUIData) == 0x000008, "Member 'FortHomebaseUIContext_GetNodeTagBonusesForDisplay::OutGrantedTagsUIData' has a wrong offset!");
static_assert(offsetof(FortHomebaseUIContext_GetNodeTagBonusesForDisplay, ReturnValue) == 0x000018, "Member 'FortHomebaseUIContext_GetNodeTagBonusesForDisplay::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.GetQuestNodeColour
// 0x0028 (0x0028 - 0x0000)
struct FortHomebaseUIContext_GetQuestNodeColour final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_GetQuestNodeColour) == 0x000008, "Wrong alignment on FortHomebaseUIContext_GetQuestNodeColour");
static_assert(sizeof(FortHomebaseUIContext_GetQuestNodeColour) == 0x000028, "Wrong size on FortHomebaseUIContext_GetQuestNodeColour");
static_assert(offsetof(FortHomebaseUIContext_GetQuestNodeColour, ReturnValue) == 0x000000, "Member 'FortHomebaseUIContext_GetQuestNodeColour::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.GetRootSkillTreeNodeId
// 0x0008 (0x0008 - 0x0000)
struct FortHomebaseUIContext_GetRootSkillTreeNodeId final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_GetRootSkillTreeNodeId) == 0x000004, "Wrong alignment on FortHomebaseUIContext_GetRootSkillTreeNodeId");
static_assert(sizeof(FortHomebaseUIContext_GetRootSkillTreeNodeId) == 0x000008, "Wrong size on FortHomebaseUIContext_GetRootSkillTreeNodeId");
static_assert(offsetof(FortHomebaseUIContext_GetRootSkillTreeNodeId, ReturnValue) == 0x000000, "Member 'FortHomebaseUIContext_GetRootSkillTreeNodeId::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.GetRootSkillTreePageId
// 0x0008 (0x0008 - 0x0000)
struct FortHomebaseUIContext_GetRootSkillTreePageId final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_GetRootSkillTreePageId) == 0x000004, "Wrong alignment on FortHomebaseUIContext_GetRootSkillTreePageId");
static_assert(sizeof(FortHomebaseUIContext_GetRootSkillTreePageId) == 0x000008, "Wrong size on FortHomebaseUIContext_GetRootSkillTreePageId");
static_assert(offsetof(FortHomebaseUIContext_GetRootSkillTreePageId, ReturnValue) == 0x000000, "Member 'FortHomebaseUIContext_GetRootSkillTreePageId::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.GetSquadIcon
// 0x02D8 (0x02D8 - 0x0000)
struct FortHomebaseUIContext_GetSquadIcon final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                    ReturnValue;                                       // 0x0008(0x02D0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_GetSquadIcon) == 0x000008, "Wrong alignment on FortHomebaseUIContext_GetSquadIcon");
static_assert(sizeof(FortHomebaseUIContext_GetSquadIcon) == 0x0002D8, "Wrong size on FortHomebaseUIContext_GetSquadIcon");
static_assert(offsetof(FortHomebaseUIContext_GetSquadIcon, SquadId) == 0x000000, "Member 'FortHomebaseUIContext_GetSquadIcon::SquadId' has a wrong offset!");
static_assert(offsetof(FortHomebaseUIContext_GetSquadIcon, ReturnValue) == 0x000008, "Member 'FortHomebaseUIContext_GetSquadIcon::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.GetWorkerSetBonusEffectModifiers
// 0x0018 (0x0018 - 0x0000)
struct FortHomebaseUIContext_GetWorkerSetBonusEffectModifiers final
{
public:
	struct FGameplayTag                           SetBonusTag;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortAttributeModifierDisplayData> OutModifiers;                                      // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_GetWorkerSetBonusEffectModifiers) == 0x000008, "Wrong alignment on FortHomebaseUIContext_GetWorkerSetBonusEffectModifiers");
static_assert(sizeof(FortHomebaseUIContext_GetWorkerSetBonusEffectModifiers) == 0x000018, "Wrong size on FortHomebaseUIContext_GetWorkerSetBonusEffectModifiers");
static_assert(offsetof(FortHomebaseUIContext_GetWorkerSetBonusEffectModifiers, SetBonusTag) == 0x000000, "Member 'FortHomebaseUIContext_GetWorkerSetBonusEffectModifiers::SetBonusTag' has a wrong offset!");
static_assert(offsetof(FortHomebaseUIContext_GetWorkerSetBonusEffectModifiers, OutModifiers) == 0x000008, "Member 'FortHomebaseUIContext_GetWorkerSetBonusEffectModifiers::OutModifiers' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.IsAnySquadSlotUnlocked
// 0x0010 (0x0010 - 0x0000)
struct FortHomebaseUIContext_IsAnySquadSlotUnlocked final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortHomebaseUIContext_IsAnySquadSlotUnlocked) == 0x000004, "Wrong alignment on FortHomebaseUIContext_IsAnySquadSlotUnlocked");
static_assert(sizeof(FortHomebaseUIContext_IsAnySquadSlotUnlocked) == 0x000010, "Wrong size on FortHomebaseUIContext_IsAnySquadSlotUnlocked");
static_assert(offsetof(FortHomebaseUIContext_IsAnySquadSlotUnlocked, SquadId) == 0x000000, "Member 'FortHomebaseUIContext_IsAnySquadSlotUnlocked::SquadId' has a wrong offset!");
static_assert(offsetof(FortHomebaseUIContext_IsAnySquadSlotUnlocked, ReturnValue) == 0x000008, "Member 'FortHomebaseUIContext_IsAnySquadSlotUnlocked::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHomebaseUIContext.IsInEarlyGame
// 0x0001 (0x0001 - 0x0000)
struct FortHomebaseUIContext_IsInEarlyGame final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHomebaseUIContext_IsInEarlyGame) == 0x000001, "Wrong alignment on FortHomebaseUIContext_IsInEarlyGame");
static_assert(sizeof(FortHomebaseUIContext_IsInEarlyGame) == 0x000001, "Wrong size on FortHomebaseUIContext_IsInEarlyGame");
static_assert(offsetof(FortHomebaseUIContext_IsInEarlyGame, ReturnValue) == 0x000000, "Member 'FortHomebaseUIContext_IsInEarlyGame::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDCenterPopupMessageWidget.OnModalDisplayed
// 0x0010 (0x0010 - 0x0000)
struct FortHUDCenterPopupMessageWidget_OnModalDisplayed final
{
public:
	ECenterPopupMessageStateEnum                  NewState;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonActivatablePanel*                ModalPopup;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDCenterPopupMessageWidget_OnModalDisplayed) == 0x000008, "Wrong alignment on FortHUDCenterPopupMessageWidget_OnModalDisplayed");
static_assert(sizeof(FortHUDCenterPopupMessageWidget_OnModalDisplayed) == 0x000010, "Wrong size on FortHUDCenterPopupMessageWidget_OnModalDisplayed");
static_assert(offsetof(FortHUDCenterPopupMessageWidget_OnModalDisplayed, NewState) == 0x000000, "Member 'FortHUDCenterPopupMessageWidget_OnModalDisplayed::NewState' has a wrong offset!");
static_assert(offsetof(FortHUDCenterPopupMessageWidget_OnModalDisplayed, ModalPopup) == 0x000008, "Member 'FortHUDCenterPopupMessageWidget_OnModalDisplayed::ModalPopup' has a wrong offset!");

// Function FortniteUI.FortHUDCenterPopupMessageWidget.GetCenterPopupMessageState
// 0x0001 (0x0001 - 0x0000)
struct FortHUDCenterPopupMessageWidget_GetCenterPopupMessageState final
{
public:
	ECenterPopupMessageStateEnum                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDCenterPopupMessageWidget_GetCenterPopupMessageState) == 0x000001, "Wrong alignment on FortHUDCenterPopupMessageWidget_GetCenterPopupMessageState");
static_assert(sizeof(FortHUDCenterPopupMessageWidget_GetCenterPopupMessageState) == 0x000001, "Wrong size on FortHUDCenterPopupMessageWidget_GetCenterPopupMessageState");
static_assert(offsetof(FortHUDCenterPopupMessageWidget_GetCenterPopupMessageState, ReturnValue) == 0x000000, "Member 'FortHUDCenterPopupMessageWidget_GetCenterPopupMessageState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortHUDTargetUnderReticleWidget.HandleOnHUDTargetUnderReticle
// 0x0010 (0x0010 - 0x0000)
struct FortHUDTargetUnderReticleWidget_HandleOnHUDTargetUnderReticle final
{
public:
	TScriptInterface<class IFortHUDTargetUnderReticleInterface> NewTarget;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDTargetUnderReticleWidget_HandleOnHUDTargetUnderReticle) == 0x000008, "Wrong alignment on FortHUDTargetUnderReticleWidget_HandleOnHUDTargetUnderReticle");
static_assert(sizeof(FortHUDTargetUnderReticleWidget_HandleOnHUDTargetUnderReticle) == 0x000010, "Wrong size on FortHUDTargetUnderReticleWidget_HandleOnHUDTargetUnderReticle");
static_assert(offsetof(FortHUDTargetUnderReticleWidget_HandleOnHUDTargetUnderReticle, NewTarget) == 0x000000, "Member 'FortHUDTargetUnderReticleWidget_HandleOnHUDTargetUnderReticle::NewTarget' has a wrong offset!");

// Function FortniteUI.FortHUDTargetUnderReticleWidget.OnTargetActorDestroyed
// 0x0008 (0x0008 - 0x0000)
struct FortHUDTargetUnderReticleWidget_OnTargetActorDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortHUDTargetUnderReticleWidget_OnTargetActorDestroyed) == 0x000008, "Wrong alignment on FortHUDTargetUnderReticleWidget_OnTargetActorDestroyed");
static_assert(sizeof(FortHUDTargetUnderReticleWidget_OnTargetActorDestroyed) == 0x000008, "Wrong size on FortHUDTargetUnderReticleWidget_OnTargetActorDestroyed");
static_assert(offsetof(FortHUDTargetUnderReticleWidget_OnTargetActorDestroyed, DestroyedActor) == 0x000000, "Member 'FortHUDTargetUnderReticleWidget_OnTargetActorDestroyed::DestroyedActor' has a wrong offset!");

// Function FortniteUI.FortInfoWindow.GetListWidget
// 0x0010 (0x0010 - 0x0000)
struct FortInfoWindow_GetListWidget final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInfoWindow_GetListWidget) == 0x000008, "Wrong alignment on FortInfoWindow_GetListWidget");
static_assert(sizeof(FortInfoWindow_GetListWidget) == 0x000010, "Wrong size on FortInfoWindow_GetListWidget");
static_assert(offsetof(FortInfoWindow_GetListWidget, Item) == 0x000000, "Member 'FortInfoWindow_GetListWidget::Item' has a wrong offset!");
static_assert(offsetof(FortInfoWindow_GetListWidget, ReturnValue) == 0x000008, "Member 'FortInfoWindow_GetListWidget::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.AreAnyItemsAnimate
// 0x0018 (0x0018 - 0x0000)
struct FortInventoryContext_AreAnyItemsAnimate final
{
public:
	TArray<class UFortItem*>                      Items;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_AreAnyItemsAnimate) == 0x000008, "Wrong alignment on FortInventoryContext_AreAnyItemsAnimate");
static_assert(sizeof(FortInventoryContext_AreAnyItemsAnimate) == 0x000018, "Wrong size on FortInventoryContext_AreAnyItemsAnimate");
static_assert(offsetof(FortInventoryContext_AreAnyItemsAnimate, Items) == 0x000000, "Member 'FortInventoryContext_AreAnyItemsAnimate::Items' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_AreAnyItemsAnimate, ReturnValue) == 0x000010, "Member 'FortInventoryContext_AreAnyItemsAnimate::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetDisassembleRestrictionReasonText
// 0x0020 (0x0020 - 0x0000)
struct FortInventoryContext_GetDisassembleRestrictionReasonText final
{
public:
	EItemDisassembleRestrictionReason             Reason;                                            // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetDisassembleRestrictionReasonText) == 0x000008, "Wrong alignment on FortInventoryContext_GetDisassembleRestrictionReasonText");
static_assert(sizeof(FortInventoryContext_GetDisassembleRestrictionReasonText) == 0x000020, "Wrong size on FortInventoryContext_GetDisassembleRestrictionReasonText");
static_assert(offsetof(FortInventoryContext_GetDisassembleRestrictionReasonText, Reason) == 0x000000, "Member 'FortInventoryContext_GetDisassembleRestrictionReasonText::Reason' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetDisassembleRestrictionReasonText, ReturnValue) == 0x000008, "Member 'FortInventoryContext_GetDisassembleRestrictionReasonText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetEvolveRestrictionReasonText
// 0x0020 (0x0020 - 0x0000)
struct FortInventoryContext_GetEvolveRestrictionReasonText final
{
public:
	EItemEvolutionRestrictionReason               Reason;                                            // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetEvolveRestrictionReasonText) == 0x000008, "Wrong alignment on FortInventoryContext_GetEvolveRestrictionReasonText");
static_assert(sizeof(FortInventoryContext_GetEvolveRestrictionReasonText) == 0x000020, "Wrong size on FortInventoryContext_GetEvolveRestrictionReasonText");
static_assert(offsetof(FortInventoryContext_GetEvolveRestrictionReasonText, Reason) == 0x000000, "Member 'FortInventoryContext_GetEvolveRestrictionReasonText::Reason' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetEvolveRestrictionReasonText, ReturnValue) == 0x000008, "Member 'FortInventoryContext_GetEvolveRestrictionReasonText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetItemLevelRecyclingWarningThreshold
// 0x0004 (0x0004 - 0x0000)
struct FortInventoryContext_GetItemLevelRecyclingWarningThreshold final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetItemLevelRecyclingWarningThreshold) == 0x000004, "Wrong alignment on FortInventoryContext_GetItemLevelRecyclingWarningThreshold");
static_assert(sizeof(FortInventoryContext_GetItemLevelRecyclingWarningThreshold) == 0x000004, "Wrong size on FortInventoryContext_GetItemLevelRecyclingWarningThreshold");
static_assert(offsetof(FortInventoryContext_GetItemLevelRecyclingWarningThreshold, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetItemLevelRecyclingWarningThreshold::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetItemRarityRecyclingWarningThreshold
// 0x0001 (0x0001 - 0x0000)
struct FortInventoryContext_GetItemRarityRecyclingWarningThreshold final
{
public:
	EFortRarity                                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetItemRarityRecyclingWarningThreshold) == 0x000001, "Wrong alignment on FortInventoryContext_GetItemRarityRecyclingWarningThreshold");
static_assert(sizeof(FortInventoryContext_GetItemRarityRecyclingWarningThreshold) == 0x000001, "Wrong size on FortInventoryContext_GetItemRarityRecyclingWarningThreshold");
static_assert(offsetof(FortInventoryContext_GetItemRarityRecyclingWarningThreshold, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetItemRarityRecyclingWarningThreshold::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetItemTierRecyclingWarningThreshold
// 0x0001 (0x0001 - 0x0000)
struct FortInventoryContext_GetItemTierRecyclingWarningThreshold final
{
public:
	EFortItemTier                                 ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetItemTierRecyclingWarningThreshold) == 0x000001, "Wrong alignment on FortInventoryContext_GetItemTierRecyclingWarningThreshold");
static_assert(sizeof(FortInventoryContext_GetItemTierRecyclingWarningThreshold) == 0x000001, "Wrong size on FortInventoryContext_GetItemTierRecyclingWarningThreshold");
static_assert(offsetof(FortInventoryContext_GetItemTierRecyclingWarningThreshold, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetItemTierRecyclingWarningThreshold::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetRecycleRestrictionReasonText
// 0x0020 (0x0020 - 0x0000)
struct FortInventoryContext_GetRecycleRestrictionReasonText final
{
public:
	EItemRecyclingRestrictionReason               Reason;                                            // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetRecycleRestrictionReasonText) == 0x000008, "Wrong alignment on FortInventoryContext_GetRecycleRestrictionReasonText");
static_assert(sizeof(FortInventoryContext_GetRecycleRestrictionReasonText) == 0x000020, "Wrong size on FortInventoryContext_GetRecycleRestrictionReasonText");
static_assert(offsetof(FortInventoryContext_GetRecycleRestrictionReasonText, Reason) == 0x000000, "Member 'FortInventoryContext_GetRecycleRestrictionReasonText::Reason' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetRecycleRestrictionReasonText, ReturnValue) == 0x000008, "Member 'FortInventoryContext_GetRecycleRestrictionReasonText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetRecyclingCatalystDisplayName
// 0x0020 (0x0020 - 0x0000)
struct FortInventoryContext_GetRecyclingCatalystDisplayName final
{
public:
	const class UFortItem*                        Item;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetRecyclingCatalystDisplayName) == 0x000008, "Wrong alignment on FortInventoryContext_GetRecyclingCatalystDisplayName");
static_assert(sizeof(FortInventoryContext_GetRecyclingCatalystDisplayName) == 0x000020, "Wrong size on FortInventoryContext_GetRecyclingCatalystDisplayName");
static_assert(offsetof(FortInventoryContext_GetRecyclingCatalystDisplayName, Item) == 0x000000, "Member 'FortInventoryContext_GetRecyclingCatalystDisplayName::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetRecyclingCatalystDisplayName, ReturnValue) == 0x000008, "Member 'FortInventoryContext_GetRecyclingCatalystDisplayName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetRecyclingWarningText
// 0x0020 (0x0020 - 0x0000)
struct FortInventoryContext_GetRecyclingWarningText final
{
public:
	EItemRecyclingWarning                         Warning;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          WereAnyItemsAnimate;                               // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetRecyclingWarningText) == 0x000008, "Wrong alignment on FortInventoryContext_GetRecyclingWarningText");
static_assert(sizeof(FortInventoryContext_GetRecyclingWarningText) == 0x000020, "Wrong size on FortInventoryContext_GetRecyclingWarningText");
static_assert(offsetof(FortInventoryContext_GetRecyclingWarningText, Warning) == 0x000000, "Member 'FortInventoryContext_GetRecyclingWarningText::Warning' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetRecyclingWarningText, WereAnyItemsAnimate) == 0x000001, "Member 'FortInventoryContext_GetRecyclingWarningText::WereAnyItemsAnimate' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetRecyclingWarningText, ReturnValue) == 0x000008, "Member 'FortInventoryContext_GetRecyclingWarningText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetTierText
// 0x0020 (0x0020 - 0x0000)
struct FortInventoryContext_GetTierText final
{
public:
	EFortItemTier                                 Tier;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetTierText) == 0x000008, "Wrong alignment on FortInventoryContext_GetTierText");
static_assert(sizeof(FortInventoryContext_GetTierText) == 0x000020, "Wrong size on FortInventoryContext_GetTierText");
static_assert(offsetof(FortInventoryContext_GetTierText, Tier) == 0x000000, "Member 'FortInventoryContext_GetTierText::Tier' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetTierText, ReturnValue) == 0x000008, "Member 'FortInventoryContext_GetTierText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetUserFriendlyTags
// 0x0018 (0x0018 - 0x0000)
struct FortInventoryContext_GetUserFriendlyTags final
{
public:
	const class UFortItem*                        Item;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FText>                           ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetUserFriendlyTags) == 0x000008, "Wrong alignment on FortInventoryContext_GetUserFriendlyTags");
static_assert(sizeof(FortInventoryContext_GetUserFriendlyTags) == 0x000018, "Wrong size on FortInventoryContext_GetUserFriendlyTags");
static_assert(offsetof(FortInventoryContext_GetUserFriendlyTags, Item) == 0x000000, "Member 'FortInventoryContext_GetUserFriendlyTags::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetUserFriendlyTags, ReturnValue) == 0x000008, "Member 'FortInventoryContext_GetUserFriendlyTags::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.MakeItemQuantityPair
// 0x0040 (0x0040 - 0x0000)
struct FortInventoryContext_MakeItemQuantityPair final
{
public:
	const class UFortItemDefinition*              ItemDefinition;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemQuantity;                                      // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortItemQuantityPair                  ReturnValue;                                       // 0x0010(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_MakeItemQuantityPair) == 0x000008, "Wrong alignment on FortInventoryContext_MakeItemQuantityPair");
static_assert(sizeof(FortInventoryContext_MakeItemQuantityPair) == 0x000040, "Wrong size on FortInventoryContext_MakeItemQuantityPair");
static_assert(offsetof(FortInventoryContext_MakeItemQuantityPair, ItemDefinition) == 0x000000, "Member 'FortInventoryContext_MakeItemQuantityPair::ItemDefinition' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_MakeItemQuantityPair, ItemQuantity) == 0x000008, "Member 'FortInventoryContext_MakeItemQuantityPair::ItemQuantity' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_MakeItemQuantityPair, ReturnValue) == 0x000010, "Member 'FortInventoryContext_MakeItemQuantityPair::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.ActivateItem
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_ActivateItem final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_ActivateItem) == 0x000008, "Wrong alignment on FortInventoryContext_ActivateItem");
static_assert(sizeof(FortInventoryContext_ActivateItem) == 0x000010, "Wrong size on FortInventoryContext_ActivateItem");
static_assert(offsetof(FortInventoryContext_ActivateItem, Item) == 0x000000, "Member 'FortInventoryContext_ActivateItem::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_ActivateItem, ReturnValue) == 0x000008, "Member 'FortInventoryContext_ActivateItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.AreAnyItemsUnseenForInventoryFilter
// 0x0002 (0x0002 - 0x0000)
struct FortInventoryContext_AreAnyItemsUnseenForInventoryFilter final
{
public:
	EFortFrontendInventoryFilter                  FilterType;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_AreAnyItemsUnseenForInventoryFilter) == 0x000001, "Wrong alignment on FortInventoryContext_AreAnyItemsUnseenForInventoryFilter");
static_assert(sizeof(FortInventoryContext_AreAnyItemsUnseenForInventoryFilter) == 0x000002, "Wrong size on FortInventoryContext_AreAnyItemsUnseenForInventoryFilter");
static_assert(offsetof(FortInventoryContext_AreAnyItemsUnseenForInventoryFilter, FilterType) == 0x000000, "Member 'FortInventoryContext_AreAnyItemsUnseenForInventoryFilter::FilterType' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_AreAnyItemsUnseenForInventoryFilter, ReturnValue) == 0x000001, "Member 'FortInventoryContext_AreAnyItemsUnseenForInventoryFilter::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.CanUpgradeItemRarity
// 0x0020 (0x0020 - 0x0000)
struct FortInventoryContext_CanUpgradeItemRarity final
{
public:
	const class UFortItem*                        Item;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<EItemEvolutionRestrictionReason>       OutRestrictionReasons;                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_CanUpgradeItemRarity) == 0x000008, "Wrong alignment on FortInventoryContext_CanUpgradeItemRarity");
static_assert(sizeof(FortInventoryContext_CanUpgradeItemRarity) == 0x000020, "Wrong size on FortInventoryContext_CanUpgradeItemRarity");
static_assert(offsetof(FortInventoryContext_CanUpgradeItemRarity, Item) == 0x000000, "Member 'FortInventoryContext_CanUpgradeItemRarity::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CanUpgradeItemRarity, OutRestrictionReasons) == 0x000008, "Member 'FortInventoryContext_CanUpgradeItemRarity::OutRestrictionReasons' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CanUpgradeItemRarity, ReturnValue) == 0x000018, "Member 'FortInventoryContext_CanUpgradeItemRarity::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.CraftAndSlotSchematic
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_CraftAndSlotSchematic final
{
public:
	class UFortSchematicItem*                     SchematicItem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PostCraftSlot;                                     // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortCraftFailCause                           FailCause;                                         // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_CraftAndSlotSchematic) == 0x000008, "Wrong alignment on FortInventoryContext_CraftAndSlotSchematic");
static_assert(sizeof(FortInventoryContext_CraftAndSlotSchematic) == 0x000010, "Wrong size on FortInventoryContext_CraftAndSlotSchematic");
static_assert(offsetof(FortInventoryContext_CraftAndSlotSchematic, SchematicItem) == 0x000000, "Member 'FortInventoryContext_CraftAndSlotSchematic::SchematicItem' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CraftAndSlotSchematic, PostCraftSlot) == 0x000008, "Member 'FortInventoryContext_CraftAndSlotSchematic::PostCraftSlot' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CraftAndSlotSchematic, FailCause) == 0x00000C, "Member 'FortInventoryContext_CraftAndSlotSchematic::FailCause' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CraftAndSlotSchematic, ReturnValue) == 0x00000D, "Member 'FortInventoryContext_CraftAndSlotSchematic::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.CraftSchematic
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_CraftSchematic final
{
public:
	class UFortSchematicItem*                     SchematicItem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortCraftFailCause                           FailCause;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_CraftSchematic) == 0x000008, "Wrong alignment on FortInventoryContext_CraftSchematic");
static_assert(sizeof(FortInventoryContext_CraftSchematic) == 0x000010, "Wrong size on FortInventoryContext_CraftSchematic");
static_assert(offsetof(FortInventoryContext_CraftSchematic, SchematicItem) == 0x000000, "Member 'FortInventoryContext_CraftSchematic::SchematicItem' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CraftSchematic, FailCause) == 0x000008, "Member 'FortInventoryContext_CraftSchematic::FailCause' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CraftSchematic, ReturnValue) == 0x000009, "Member 'FortInventoryContext_CraftSchematic::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.DestroyWorldItem
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_DestroyWorldItem final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_DestroyWorldItem) == 0x000008, "Wrong alignment on FortInventoryContext_DestroyWorldItem");
static_assert(sizeof(FortInventoryContext_DestroyWorldItem) == 0x000008, "Wrong size on FortInventoryContext_DestroyWorldItem");
static_assert(offsetof(FortInventoryContext_DestroyWorldItem, Item) == 0x000000, "Member 'FortInventoryContext_DestroyWorldItem::Item' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.DropItem
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_DropItem final
{
public:
	const class UFortWorldItem*                   ItemBeingDropped;                                  // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Quantity;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_DropItem) == 0x000008, "Wrong alignment on FortInventoryContext_DropItem");
static_assert(sizeof(FortInventoryContext_DropItem) == 0x000010, "Wrong size on FortInventoryContext_DropItem");
static_assert(offsetof(FortInventoryContext_DropItem, ItemBeingDropped) == 0x000000, "Member 'FortInventoryContext_DropItem::ItemBeingDropped' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_DropItem, Quantity) == 0x000008, "Member 'FortInventoryContext_DropItem::Quantity' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.DropItemOnQuickBar
// 0x0018 (0x0018 - 0x0000)
struct FortInventoryContext_DropItemOnQuickBar final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortQuickBars                                TargetQuickbar;                                    // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TargetSlot;                                        // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_DropItemOnQuickBar) == 0x000008, "Wrong alignment on FortInventoryContext_DropItemOnQuickBar");
static_assert(sizeof(FortInventoryContext_DropItemOnQuickBar) == 0x000018, "Wrong size on FortInventoryContext_DropItemOnQuickBar");
static_assert(offsetof(FortInventoryContext_DropItemOnQuickBar, Item) == 0x000000, "Member 'FortInventoryContext_DropItemOnQuickBar::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_DropItemOnQuickBar, TargetQuickbar) == 0x000008, "Member 'FortInventoryContext_DropItemOnQuickBar::TargetQuickbar' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_DropItemOnQuickBar, TargetSlot) == 0x00000C, "Member 'FortInventoryContext_DropItemOnQuickBar::TargetSlot' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_DropItemOnQuickBar, ReturnValue) == 0x000010, "Member 'FortInventoryContext_DropItemOnQuickBar::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.EnumerateRecyclingWarningsForItems
// 0x0020 (0x0020 - 0x0000)
struct FortInventoryContext_EnumerateRecyclingWarningsForItems final
{
public:
	TArray<class UFortItem*>                      Items;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<EItemRecyclingWarning>                 OutWarnings;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_EnumerateRecyclingWarningsForItems) == 0x000008, "Wrong alignment on FortInventoryContext_EnumerateRecyclingWarningsForItems");
static_assert(sizeof(FortInventoryContext_EnumerateRecyclingWarningsForItems) == 0x000020, "Wrong size on FortInventoryContext_EnumerateRecyclingWarningsForItems");
static_assert(offsetof(FortInventoryContext_EnumerateRecyclingWarningsForItems, Items) == 0x000000, "Member 'FortInventoryContext_EnumerateRecyclingWarningsForItems::Items' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_EnumerateRecyclingWarningsForItems, OutWarnings) == 0x000010, "Member 'FortInventoryContext_EnumerateRecyclingWarningsForItems::OutWarnings' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.EquipItem
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_EquipItem final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_EquipItem) == 0x000008, "Wrong alignment on FortInventoryContext_EquipItem");
static_assert(sizeof(FortInventoryContext_EquipItem) == 0x000008, "Wrong size on FortInventoryContext_EquipItem");
static_assert(offsetof(FortInventoryContext_EquipItem, Item) == 0x000000, "Member 'FortInventoryContext_EquipItem::Item' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetConversionRecipesFromItemDefintion
// 0x0018 (0x0018 - 0x0000)
struct FortInventoryContext_GetConversionRecipesFromItemDefintion final
{
public:
	class UFortItemDefinition*                    ItemDefinition;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRecipe>                        ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetConversionRecipesFromItemDefintion) == 0x000008, "Wrong alignment on FortInventoryContext_GetConversionRecipesFromItemDefintion");
static_assert(sizeof(FortInventoryContext_GetConversionRecipesFromItemDefintion) == 0x000018, "Wrong size on FortInventoryContext_GetConversionRecipesFromItemDefintion");
static_assert(offsetof(FortInventoryContext_GetConversionRecipesFromItemDefintion, ItemDefinition) == 0x000000, "Member 'FortInventoryContext_GetConversionRecipesFromItemDefintion::ItemDefinition' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetConversionRecipesFromItemDefintion, ReturnValue) == 0x000008, "Member 'FortInventoryContext_GetConversionRecipesFromItemDefintion::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetGameplayTagByIndex
// 0x0038 (0x0038 - 0x0000)
struct FortInventoryContext_GetGameplayTagByIndex final
{
public:
	struct FGameplayTagContainer                  GameplayTagContainer;                              // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	int32                                         Param_Index;                                       // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Result;                                            // 0x0028(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_GetGameplayTagByIndex) == 0x000008, "Wrong alignment on FortInventoryContext_GetGameplayTagByIndex");
static_assert(sizeof(FortInventoryContext_GetGameplayTagByIndex) == 0x000038, "Wrong size on FortInventoryContext_GetGameplayTagByIndex");
static_assert(offsetof(FortInventoryContext_GetGameplayTagByIndex, GameplayTagContainer) == 0x000000, "Member 'FortInventoryContext_GetGameplayTagByIndex::GameplayTagContainer' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetGameplayTagByIndex, Param_Index) == 0x000020, "Member 'FortInventoryContext_GetGameplayTagByIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetGameplayTagByIndex, Result) == 0x000028, "Member 'FortInventoryContext_GetGameplayTagByIndex::Result' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetGameplayTagByIndex, ReturnValue) == 0x000030, "Member 'FortInventoryContext_GetGameplayTagByIndex::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetTransformKeys
// 0x0018 (0x0018 - 0x0000)
struct FortInventoryContext_GetTransformKeys final
{
public:
	EConversionControlKeyRequest                  RequestType;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInventoryContentSortType                     SortType;                                          // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortAccountItem*>               TransformKeys;                                     // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetTransformKeys) == 0x000008, "Wrong alignment on FortInventoryContext_GetTransformKeys");
static_assert(sizeof(FortInventoryContext_GetTransformKeys) == 0x000018, "Wrong size on FortInventoryContext_GetTransformKeys");
static_assert(offsetof(FortInventoryContext_GetTransformKeys, RequestType) == 0x000000, "Member 'FortInventoryContext_GetTransformKeys::RequestType' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetTransformKeys, SortType) == 0x000001, "Member 'FortInventoryContext_GetTransformKeys::SortType' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetTransformKeys, TransformKeys) == 0x000008, "Member 'FortInventoryContext_GetTransformKeys::TransformKeys' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetUpgradeItemRarityRecipeFromItemDefintion
// 0x0060 (0x0060 - 0x0000)
struct FortInventoryContext_GetUpgradeItemRarityRecipeFromItemDefintion final
{
public:
	class UFortItemDefinition*                    ItemDefinition;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRecipe                                ReturnValue;                                       // 0x0008(0x0058)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetUpgradeItemRarityRecipeFromItemDefintion) == 0x000008, "Wrong alignment on FortInventoryContext_GetUpgradeItemRarityRecipeFromItemDefintion");
static_assert(sizeof(FortInventoryContext_GetUpgradeItemRarityRecipeFromItemDefintion) == 0x000060, "Wrong size on FortInventoryContext_GetUpgradeItemRarityRecipeFromItemDefintion");
static_assert(offsetof(FortInventoryContext_GetUpgradeItemRarityRecipeFromItemDefintion, ItemDefinition) == 0x000000, "Member 'FortInventoryContext_GetUpgradeItemRarityRecipeFromItemDefintion::ItemDefinition' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetUpgradeItemRarityRecipeFromItemDefintion, ReturnValue) == 0x000008, "Member 'FortInventoryContext_GetUpgradeItemRarityRecipeFromItemDefintion::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.RemoveItemFromQuickBar
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_RemoveItemFromQuickBar final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_RemoveItemFromQuickBar) == 0x000008, "Wrong alignment on FortInventoryContext_RemoveItemFromQuickBar");
static_assert(sizeof(FortInventoryContext_RemoveItemFromQuickBar) == 0x000010, "Wrong size on FortInventoryContext_RemoveItemFromQuickBar");
static_assert(offsetof(FortInventoryContext_RemoveItemFromQuickBar, Item) == 0x000000, "Member 'FortInventoryContext_RemoveItemFromQuickBar::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_RemoveItemFromQuickBar, ReturnValue) == 0x000008, "Member 'FortInventoryContext_RemoveItemFromQuickBar::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.SetSchematicPinned
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_SetSchematicPinned final
{
public:
	class UFortSchematicItem*                     Schematic;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_SetSchematicPinned) == 0x000008, "Wrong alignment on FortInventoryContext_SetSchematicPinned");
static_assert(sizeof(FortInventoryContext_SetSchematicPinned) == 0x000010, "Wrong size on FortInventoryContext_SetSchematicPinned");
static_assert(offsetof(FortInventoryContext_SetSchematicPinned, Schematic) == 0x000000, "Member 'FortInventoryContext_SetSchematicPinned::Schematic' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_SetSchematicPinned, bEnabled) == 0x000008, "Member 'FortInventoryContext_SetSchematicPinned::bEnabled' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_SetSchematicPinned, ReturnValue) == 0x000009, "Member 'FortInventoryContext_SetSchematicPinned::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.UnlockSchematic
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_UnlockSchematic final
{
public:
	class UFortSchematicItemDefinition*           SchematicDefinition;                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_UnlockSchematic) == 0x000008, "Wrong alignment on FortInventoryContext_UnlockSchematic");
static_assert(sizeof(FortInventoryContext_UnlockSchematic) == 0x000008, "Wrong size on FortInventoryContext_UnlockSchematic");
static_assert(offsetof(FortInventoryContext_UnlockSchematic, SchematicDefinition) == 0x000000, "Member 'FortInventoryContext_UnlockSchematic::SchematicDefinition' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.AreRecipeRequirementsMet
// 0x0018 (0x0018 - 0x0000)
struct FortInventoryContext_AreRecipeRequirementsMet final
{
public:
	TArray<struct FFortItemQuantityPair>          RecipeCosts;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_AreRecipeRequirementsMet) == 0x000008, "Wrong alignment on FortInventoryContext_AreRecipeRequirementsMet");
static_assert(sizeof(FortInventoryContext_AreRecipeRequirementsMet) == 0x000018, "Wrong size on FortInventoryContext_AreRecipeRequirementsMet");
static_assert(offsetof(FortInventoryContext_AreRecipeRequirementsMet, RecipeCosts) == 0x000000, "Member 'FortInventoryContext_AreRecipeRequirementsMet::RecipeCosts' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_AreRecipeRequirementsMet, ReturnValue) == 0x000010, "Member 'FortInventoryContext_AreRecipeRequirementsMet::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.CanCraftSchematic
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_CanCraftSchematic final
{
public:
	class UFortSchematicItem*                     SchematicItem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortCraftFailCause                           FailCause;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_CanCraftSchematic) == 0x000008, "Wrong alignment on FortInventoryContext_CanCraftSchematic");
static_assert(sizeof(FortInventoryContext_CanCraftSchematic) == 0x000010, "Wrong size on FortInventoryContext_CanCraftSchematic");
static_assert(offsetof(FortInventoryContext_CanCraftSchematic, SchematicItem) == 0x000000, "Member 'FortInventoryContext_CanCraftSchematic::SchematicItem' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CanCraftSchematic, FailCause) == 0x000008, "Member 'FortInventoryContext_CanCraftSchematic::FailCause' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CanCraftSchematic, ReturnValue) == 0x000009, "Member 'FortInventoryContext_CanCraftSchematic::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.CanDisassembleItem
// 0x0020 (0x0020 - 0x0000)
struct FortInventoryContext_CanDisassembleItem final
{
public:
	class UFortWorldItem*                         Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<EItemDisassembleRestrictionReason>     OutRestrictionReasons;                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_CanDisassembleItem) == 0x000008, "Wrong alignment on FortInventoryContext_CanDisassembleItem");
static_assert(sizeof(FortInventoryContext_CanDisassembleItem) == 0x000020, "Wrong size on FortInventoryContext_CanDisassembleItem");
static_assert(offsetof(FortInventoryContext_CanDisassembleItem, Item) == 0x000000, "Member 'FortInventoryContext_CanDisassembleItem::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CanDisassembleItem, OutRestrictionReasons) == 0x000008, "Member 'FortInventoryContext_CanDisassembleItem::OutRestrictionReasons' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CanDisassembleItem, ReturnValue) == 0x000018, "Member 'FortInventoryContext_CanDisassembleItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.CanEvolve
// 0x0020 (0x0020 - 0x0000)
struct FortInventoryContext_CanEvolve final
{
public:
	const class UFortItem*                        Item;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<EItemEvolutionRestrictionReason>       OutRestrictionReasons;                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_CanEvolve) == 0x000008, "Wrong alignment on FortInventoryContext_CanEvolve");
static_assert(sizeof(FortInventoryContext_CanEvolve) == 0x000020, "Wrong size on FortInventoryContext_CanEvolve");
static_assert(offsetof(FortInventoryContext_CanEvolve, Item) == 0x000000, "Member 'FortInventoryContext_CanEvolve::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CanEvolve, OutRestrictionReasons) == 0x000008, "Member 'FortInventoryContext_CanEvolve::OutRestrictionReasons' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CanEvolve, ReturnValue) == 0x000018, "Member 'FortInventoryContext_CanEvolve::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.CanPinSchematic
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_CanPinSchematic final
{
public:
	class UFortSchematicItem*                     Schematic;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_CanPinSchematic) == 0x000008, "Wrong alignment on FortInventoryContext_CanPinSchematic");
static_assert(sizeof(FortInventoryContext_CanPinSchematic) == 0x000010, "Wrong size on FortInventoryContext_CanPinSchematic");
static_assert(offsetof(FortInventoryContext_CanPinSchematic, Schematic) == 0x000000, "Member 'FortInventoryContext_CanPinSchematic::Schematic' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CanPinSchematic, ReturnValue) == 0x000008, "Member 'FortInventoryContext_CanPinSchematic::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.CanRecycle
// 0x0020 (0x0020 - 0x0000)
struct FortInventoryContext_CanRecycle final
{
public:
	const class UFortItem*                        Item;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<EItemRecyclingRestrictionReason>       OutRestrictionReasons;                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_CanRecycle) == 0x000008, "Wrong alignment on FortInventoryContext_CanRecycle");
static_assert(sizeof(FortInventoryContext_CanRecycle) == 0x000020, "Wrong size on FortInventoryContext_CanRecycle");
static_assert(offsetof(FortInventoryContext_CanRecycle, Item) == 0x000000, "Member 'FortInventoryContext_CanRecycle::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CanRecycle, OutRestrictionReasons) == 0x000008, "Member 'FortInventoryContext_CanRecycle::OutRestrictionReasons' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_CanRecycle, ReturnValue) == 0x000018, "Member 'FortInventoryContext_CanRecycle::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.DoesItemMatchFilter
// 0x0028 (0x0028 - 0x0000)
struct FortInventoryContext_DoesItemMatchFilter final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortItemListFilter                    FilterSettings;                                    // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_DoesItemMatchFilter) == 0x000008, "Wrong alignment on FortInventoryContext_DoesItemMatchFilter");
static_assert(sizeof(FortInventoryContext_DoesItemMatchFilter) == 0x000028, "Wrong size on FortInventoryContext_DoesItemMatchFilter");
static_assert(offsetof(FortInventoryContext_DoesItemMatchFilter, Item) == 0x000000, "Member 'FortInventoryContext_DoesItemMatchFilter::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_DoesItemMatchFilter, FilterSettings) == 0x000008, "Member 'FortInventoryContext_DoesItemMatchFilter::FilterSettings' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_DoesItemMatchFilter, ReturnValue) == 0x000020, "Member 'FortInventoryContext_DoesItemMatchFilter::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetAccountItemsByFilterType
// 0x0028 (0x0028 - 0x0000)
struct FortInventoryContext_GetAccountItemsByFilterType final
{
public:
	class FString                                 SearchText;                                        // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInventoryContentSortType                     SortType;                                          // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortInventoryFilter                          SubType;                                           // 0x0011(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortAccountItem*>               OutItemList;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetAccountItemsByFilterType) == 0x000008, "Wrong alignment on FortInventoryContext_GetAccountItemsByFilterType");
static_assert(sizeof(FortInventoryContext_GetAccountItemsByFilterType) == 0x000028, "Wrong size on FortInventoryContext_GetAccountItemsByFilterType");
static_assert(offsetof(FortInventoryContext_GetAccountItemsByFilterType, SearchText) == 0x000000, "Member 'FortInventoryContext_GetAccountItemsByFilterType::SearchText' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetAccountItemsByFilterType, SortType) == 0x000010, "Member 'FortInventoryContext_GetAccountItemsByFilterType::SortType' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetAccountItemsByFilterType, SubType) == 0x000011, "Member 'FortInventoryContext_GetAccountItemsByFilterType::SubType' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetAccountItemsByFilterType, OutItemList) == 0x000018, "Member 'FortInventoryContext_GetAccountItemsByFilterType::OutItemList' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetAccountItemsByType
// 0x0018 (0x0018 - 0x0000)
struct FortInventoryContext_GetAccountItemsByType final
{
public:
	EFortItemType                                 ItemType;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortAccountItem*>               Items;                                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetAccountItemsByType) == 0x000008, "Wrong alignment on FortInventoryContext_GetAccountItemsByType");
static_assert(sizeof(FortInventoryContext_GetAccountItemsByType) == 0x000018, "Wrong size on FortInventoryContext_GetAccountItemsByType");
static_assert(offsetof(FortInventoryContext_GetAccountItemsByType, ItemType) == 0x000000, "Member 'FortInventoryContext_GetAccountItemsByType::ItemType' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetAccountItemsByType, Items) == 0x000008, "Member 'FortInventoryContext_GetAccountItemsByType::Items' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetBackpackItemCounts
// 0x000C (0x000C - 0x0000)
struct FortInventoryContext_GetBackpackItemCounts final
{
public:
	int32                                         ItemsCount;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxItemsCount;                                     // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OverflowItemsCount;                                // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetBackpackItemCounts) == 0x000004, "Wrong alignment on FortInventoryContext_GetBackpackItemCounts");
static_assert(sizeof(FortInventoryContext_GetBackpackItemCounts) == 0x00000C, "Wrong size on FortInventoryContext_GetBackpackItemCounts");
static_assert(offsetof(FortInventoryContext_GetBackpackItemCounts, ItemsCount) == 0x000000, "Member 'FortInventoryContext_GetBackpackItemCounts::ItemsCount' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetBackpackItemCounts, MaxItemsCount) == 0x000004, "Member 'FortInventoryContext_GetBackpackItemCounts::MaxItemsCount' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetBackpackItemCounts, OverflowItemsCount) == 0x000008, "Member 'FortInventoryContext_GetBackpackItemCounts::OverflowItemsCount' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetBackpackOverflowFromAddingItem
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_GetBackpackOverflowFromAddingItem final
{
public:
	class UFortWorldItem*                         Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetBackpackOverflowFromAddingItem) == 0x000008, "Wrong alignment on FortInventoryContext_GetBackpackOverflowFromAddingItem");
static_assert(sizeof(FortInventoryContext_GetBackpackOverflowFromAddingItem) == 0x000010, "Wrong size on FortInventoryContext_GetBackpackOverflowFromAddingItem");
static_assert(offsetof(FortInventoryContext_GetBackpackOverflowFromAddingItem, Item) == 0x000000, "Member 'FortInventoryContext_GetBackpackOverflowFromAddingItem::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetBackpackOverflowFromAddingItem, Count) == 0x000008, "Member 'FortInventoryContext_GetBackpackOverflowFromAddingItem::Count' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetBackpackOverflowFromAddingItem, ReturnValue) == 0x00000C, "Member 'FortInventoryContext_GetBackpackOverflowFromAddingItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetCountOfHeroItems
// 0x0004 (0x0004 - 0x0000)
struct FortInventoryContext_GetCountOfHeroItems final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetCountOfHeroItems) == 0x000004, "Wrong alignment on FortInventoryContext_GetCountOfHeroItems");
static_assert(sizeof(FortInventoryContext_GetCountOfHeroItems) == 0x000004, "Wrong size on FortInventoryContext_GetCountOfHeroItems");
static_assert(offsetof(FortInventoryContext_GetCountOfHeroItems, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetCountOfHeroItems::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetCountOfVaultLimitedItems
// 0x0004 (0x0004 - 0x0000)
struct FortInventoryContext_GetCountOfVaultLimitedItems final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetCountOfVaultLimitedItems) == 0x000004, "Wrong alignment on FortInventoryContext_GetCountOfVaultLimitedItems");
static_assert(sizeof(FortInventoryContext_GetCountOfVaultLimitedItems) == 0x000004, "Wrong size on FortInventoryContext_GetCountOfVaultLimitedItems");
static_assert(offsetof(FortInventoryContext_GetCountOfVaultLimitedItems, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetCountOfVaultLimitedItems::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetCurrentAmmoItemDefinition
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_GetCurrentAmmoItemDefinition final
{
public:
	class UFortWorldItemDefinition*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetCurrentAmmoItemDefinition) == 0x000008, "Wrong alignment on FortInventoryContext_GetCurrentAmmoItemDefinition");
static_assert(sizeof(FortInventoryContext_GetCurrentAmmoItemDefinition) == 0x000008, "Wrong size on FortInventoryContext_GetCurrentAmmoItemDefinition");
static_assert(offsetof(FortInventoryContext_GetCurrentAmmoItemDefinition, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetCurrentAmmoItemDefinition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetCurrentResourceCount
// 0x0004 (0x0004 - 0x0000)
struct FortInventoryContext_GetCurrentResourceCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetCurrentResourceCount) == 0x000004, "Wrong alignment on FortInventoryContext_GetCurrentResourceCount");
static_assert(sizeof(FortInventoryContext_GetCurrentResourceCount) == 0x000004, "Wrong size on FortInventoryContext_GetCurrentResourceCount");
static_assert(offsetof(FortInventoryContext_GetCurrentResourceCount, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetCurrentResourceCount::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetCurrentResourceItemDefinition
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_GetCurrentResourceItemDefinition final
{
public:
	class UFortResourceItemDefinition*            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetCurrentResourceItemDefinition) == 0x000008, "Wrong alignment on FortInventoryContext_GetCurrentResourceItemDefinition");
static_assert(sizeof(FortInventoryContext_GetCurrentResourceItemDefinition) == 0x000008, "Wrong size on FortInventoryContext_GetCurrentResourceItemDefinition");
static_assert(offsetof(FortInventoryContext_GetCurrentResourceItemDefinition, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetCurrentResourceItemDefinition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetDeployableBaseItemCounts
// 0x000C (0x000C - 0x0000)
struct FortInventoryContext_GetDeployableBaseItemCounts final
{
public:
	int32                                         ItemsCount;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxItemsCount;                                     // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OverflowItemsCount;                                // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetDeployableBaseItemCounts) == 0x000004, "Wrong alignment on FortInventoryContext_GetDeployableBaseItemCounts");
static_assert(sizeof(FortInventoryContext_GetDeployableBaseItemCounts) == 0x00000C, "Wrong size on FortInventoryContext_GetDeployableBaseItemCounts");
static_assert(offsetof(FortInventoryContext_GetDeployableBaseItemCounts, ItemsCount) == 0x000000, "Member 'FortInventoryContext_GetDeployableBaseItemCounts::ItemsCount' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetDeployableBaseItemCounts, MaxItemsCount) == 0x000004, "Member 'FortInventoryContext_GetDeployableBaseItemCounts::MaxItemsCount' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetDeployableBaseItemCounts, OverflowItemsCount) == 0x000008, "Member 'FortInventoryContext_GetDeployableBaseItemCounts::OverflowItemsCount' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetDeployableBaseOverflowFromAddingItem
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_GetDeployableBaseOverflowFromAddingItem final
{
public:
	class UFortWorldItem*                         Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetDeployableBaseOverflowFromAddingItem) == 0x000008, "Wrong alignment on FortInventoryContext_GetDeployableBaseOverflowFromAddingItem");
static_assert(sizeof(FortInventoryContext_GetDeployableBaseOverflowFromAddingItem) == 0x000010, "Wrong size on FortInventoryContext_GetDeployableBaseOverflowFromAddingItem");
static_assert(offsetof(FortInventoryContext_GetDeployableBaseOverflowFromAddingItem, Item) == 0x000000, "Member 'FortInventoryContext_GetDeployableBaseOverflowFromAddingItem::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetDeployableBaseOverflowFromAddingItem, Count) == 0x000008, "Member 'FortInventoryContext_GetDeployableBaseOverflowFromAddingItem::Count' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetDeployableBaseOverflowFromAddingItem, ReturnValue) == 0x00000C, "Member 'FortInventoryContext_GetDeployableBaseOverflowFromAddingItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetEquippedWeapon
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_GetEquippedWeapon final
{
public:
	class AFortWeapon*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetEquippedWeapon) == 0x000008, "Wrong alignment on FortInventoryContext_GetEquippedWeapon");
static_assert(sizeof(FortInventoryContext_GetEquippedWeapon) == 0x000008, "Wrong size on FortInventoryContext_GetEquippedWeapon");
static_assert(offsetof(FortInventoryContext_GetEquippedWeapon, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetEquippedWeapon::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetHeroAbilityPerks
// 0x0020 (0x0020 - 0x0000)
struct FortInventoryContext_GetHeroAbilityPerks final
{
public:
	class UFortHero*                              Hero;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortUIPerk>                    HeroAbilityPerks;                                  // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_GetHeroAbilityPerks) == 0x000008, "Wrong alignment on FortInventoryContext_GetHeroAbilityPerks");
static_assert(sizeof(FortInventoryContext_GetHeroAbilityPerks) == 0x000020, "Wrong size on FortInventoryContext_GetHeroAbilityPerks");
static_assert(offsetof(FortInventoryContext_GetHeroAbilityPerks, Hero) == 0x000000, "Member 'FortInventoryContext_GetHeroAbilityPerks::Hero' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetHeroAbilityPerks, HeroAbilityPerks) == 0x000008, "Member 'FortInventoryContext_GetHeroAbilityPerks::HeroAbilityPerks' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetHeroAbilityPerks, ReturnValue) == 0x000018, "Member 'FortInventoryContext_GetHeroAbilityPerks::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetHeroResourceItemDefinition
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_GetHeroResourceItemDefinition final
{
public:
	class UFortPersistentResourceItemDefinition*  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetHeroResourceItemDefinition) == 0x000008, "Wrong alignment on FortInventoryContext_GetHeroResourceItemDefinition");
static_assert(sizeof(FortInventoryContext_GetHeroResourceItemDefinition) == 0x000008, "Wrong size on FortInventoryContext_GetHeroResourceItemDefinition");
static_assert(offsetof(FortInventoryContext_GetHeroResourceItemDefinition, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetHeroResourceItemDefinition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetHomebaseUnlockedTransmogKeys
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_GetHomebaseUnlockedTransmogKeys final
{
public:
	TArray<class UFortAccountItem*>               TransmogKeys;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetHomebaseUnlockedTransmogKeys) == 0x000008, "Wrong alignment on FortInventoryContext_GetHomebaseUnlockedTransmogKeys");
static_assert(sizeof(FortInventoryContext_GetHomebaseUnlockedTransmogKeys) == 0x000010, "Wrong size on FortInventoryContext_GetHomebaseUnlockedTransmogKeys");
static_assert(offsetof(FortInventoryContext_GetHomebaseUnlockedTransmogKeys, TransmogKeys) == 0x000000, "Member 'FortInventoryContext_GetHomebaseUnlockedTransmogKeys::TransmogKeys' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetItemInstancesByDefinition
// 0x0018 (0x0018 - 0x0000)
struct FortInventoryContext_GetItemInstancesByDefinition final
{
public:
	class UFortItemDefinition*                    ItemDefinition;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortItem*>                      Items;                                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetItemInstancesByDefinition) == 0x000008, "Wrong alignment on FortInventoryContext_GetItemInstancesByDefinition");
static_assert(sizeof(FortInventoryContext_GetItemInstancesByDefinition) == 0x000018, "Wrong size on FortInventoryContext_GetItemInstancesByDefinition");
static_assert(offsetof(FortInventoryContext_GetItemInstancesByDefinition, ItemDefinition) == 0x000000, "Member 'FortInventoryContext_GetItemInstancesByDefinition::ItemDefinition' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetItemInstancesByDefinition, Items) == 0x000008, "Member 'FortInventoryContext_GetItemInstancesByDefinition::Items' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetNumInInventory
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_GetNumInInventory final
{
public:
	class UFortItemDefinition*                    ItemDefinition;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeReserved;                                  // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetNumInInventory) == 0x000008, "Wrong alignment on FortInventoryContext_GetNumInInventory");
static_assert(sizeof(FortInventoryContext_GetNumInInventory) == 0x000010, "Wrong size on FortInventoryContext_GetNumInInventory");
static_assert(offsetof(FortInventoryContext_GetNumInInventory, ItemDefinition) == 0x000000, "Member 'FortInventoryContext_GetNumInInventory::ItemDefinition' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetNumInInventory, bIncludeReserved) == 0x000008, "Member 'FortInventoryContext_GetNumInInventory::bIncludeReserved' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetNumInInventory, ReturnValue) == 0x00000C, "Member 'FortInventoryContext_GetNumInInventory::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetPersonnelResourceItemDefinition
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_GetPersonnelResourceItemDefinition final
{
public:
	class UFortPersistentResourceItemDefinition*  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetPersonnelResourceItemDefinition) == 0x000008, "Wrong alignment on FortInventoryContext_GetPersonnelResourceItemDefinition");
static_assert(sizeof(FortInventoryContext_GetPersonnelResourceItemDefinition) == 0x000008, "Wrong size on FortInventoryContext_GetPersonnelResourceItemDefinition");
static_assert(offsetof(FortInventoryContext_GetPersonnelResourceItemDefinition, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetPersonnelResourceItemDefinition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetPinnedSchematicList
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_GetPinnedSchematicList final
{
public:
	TArray<class UFortSchematicItem*>             PinnedItems;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetPinnedSchematicList) == 0x000008, "Wrong alignment on FortInventoryContext_GetPinnedSchematicList");
static_assert(sizeof(FortInventoryContext_GetPinnedSchematicList) == 0x000010, "Wrong size on FortInventoryContext_GetPinnedSchematicList");
static_assert(offsetof(FortInventoryContext_GetPinnedSchematicList, PinnedItems) == 0x000000, "Member 'FortInventoryContext_GetPinnedSchematicList::PinnedItems' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetQuickbarFocus
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_GetQuickbarFocus final
{
public:
	EFortQuickBars                                OutQuickBar;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OutSlot;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSecondarySlot;                                  // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutPreviousFocusedSlot;                            // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetQuickbarFocus) == 0x000004, "Wrong alignment on FortInventoryContext_GetQuickbarFocus");
static_assert(sizeof(FortInventoryContext_GetQuickbarFocus) == 0x000010, "Wrong size on FortInventoryContext_GetQuickbarFocus");
static_assert(offsetof(FortInventoryContext_GetQuickbarFocus, OutQuickBar) == 0x000000, "Member 'FortInventoryContext_GetQuickbarFocus::OutQuickBar' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetQuickbarFocus, OutSlot) == 0x000004, "Member 'FortInventoryContext_GetQuickbarFocus::OutSlot' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetQuickbarFocus, OutSecondarySlot) == 0x000008, "Member 'FortInventoryContext_GetQuickbarFocus::OutSecondarySlot' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetQuickbarFocus, OutPreviousFocusedSlot) == 0x00000C, "Member 'FortInventoryContext_GetQuickbarFocus::OutPreviousFocusedSlot' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetQuickBarSlottedItem
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_GetQuickBarSlottedItem final
{
public:
	EFortQuickBars                                InQuickBar;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Slot;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItem*                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetQuickBarSlottedItem) == 0x000008, "Wrong alignment on FortInventoryContext_GetQuickBarSlottedItem");
static_assert(sizeof(FortInventoryContext_GetQuickBarSlottedItem) == 0x000010, "Wrong size on FortInventoryContext_GetQuickBarSlottedItem");
static_assert(offsetof(FortInventoryContext_GetQuickBarSlottedItem, InQuickBar) == 0x000000, "Member 'FortInventoryContext_GetQuickBarSlottedItem::InQuickBar' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetQuickBarSlottedItem, Slot) == 0x000004, "Member 'FortInventoryContext_GetQuickBarSlottedItem::Slot' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetQuickBarSlottedItem, ReturnValue) == 0x000008, "Member 'FortInventoryContext_GetQuickBarSlottedItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetResourceCount
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_GetResourceCount final
{
public:
	EFortResourceType                             ResourceType;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetResourceCount) == 0x000004, "Wrong alignment on FortInventoryContext_GetResourceCount");
static_assert(sizeof(FortInventoryContext_GetResourceCount) == 0x000008, "Wrong size on FortInventoryContext_GetResourceCount");
static_assert(offsetof(FortInventoryContext_GetResourceCount, ResourceType) == 0x000000, "Member 'FortInventoryContext_GetResourceCount::ResourceType' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetResourceCount, ReturnValue) == 0x000004, "Member 'FortInventoryContext_GetResourceCount::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetResourceIcon
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_GetResourceIcon final
{
public:
	EFortResourceType                             ResourceType;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetResourceIcon) == 0x000008, "Wrong alignment on FortInventoryContext_GetResourceIcon");
static_assert(sizeof(FortInventoryContext_GetResourceIcon) == 0x000010, "Wrong size on FortInventoryContext_GetResourceIcon");
static_assert(offsetof(FortInventoryContext_GetResourceIcon, ResourceType) == 0x000000, "Member 'FortInventoryContext_GetResourceIcon::ResourceType' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetResourceIcon, ReturnValue) == 0x000008, "Member 'FortInventoryContext_GetResourceIcon::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetResourceItemDefinition
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_GetResourceItemDefinition final
{
public:
	EFortResourceType                             ResourceType;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortResourceItemDefinition*            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetResourceItemDefinition) == 0x000008, "Wrong alignment on FortInventoryContext_GetResourceItemDefinition");
static_assert(sizeof(FortInventoryContext_GetResourceItemDefinition) == 0x000010, "Wrong size on FortInventoryContext_GetResourceItemDefinition");
static_assert(offsetof(FortInventoryContext_GetResourceItemDefinition, ResourceType) == 0x000000, "Member 'FortInventoryContext_GetResourceItemDefinition::ResourceType' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetResourceItemDefinition, ReturnValue) == 0x000008, "Member 'FortInventoryContext_GetResourceItemDefinition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetSchematicResourceItemDefinition
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_GetSchematicResourceItemDefinition final
{
public:
	class UFortPersistentResourceItemDefinition*  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetSchematicResourceItemDefinition) == 0x000008, "Wrong alignment on FortInventoryContext_GetSchematicResourceItemDefinition");
static_assert(sizeof(FortInventoryContext_GetSchematicResourceItemDefinition) == 0x000008, "Wrong size on FortInventoryContext_GetSchematicResourceItemDefinition");
static_assert(offsetof(FortInventoryContext_GetSchematicResourceItemDefinition, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetSchematicResourceItemDefinition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetStorageCapacity
// 0x0004 (0x0004 - 0x0000)
struct FortInventoryContext_GetStorageCapacity final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetStorageCapacity) == 0x000004, "Wrong alignment on FortInventoryContext_GetStorageCapacity");
static_assert(sizeof(FortInventoryContext_GetStorageCapacity) == 0x000004, "Wrong size on FortInventoryContext_GetStorageCapacity");
static_assert(offsetof(FortInventoryContext_GetStorageCapacity, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetStorageCapacity::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetStorageNumItems
// 0x0004 (0x0004 - 0x0000)
struct FortInventoryContext_GetStorageNumItems final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetStorageNumItems) == 0x000004, "Wrong alignment on FortInventoryContext_GetStorageNumItems");
static_assert(sizeof(FortInventoryContext_GetStorageNumItems) == 0x000004, "Wrong size on FortInventoryContext_GetStorageNumItems");
static_assert(offsetof(FortInventoryContext_GetStorageNumItems, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetStorageNumItems::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetStorageOverflowFromAddingItem
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_GetStorageOverflowFromAddingItem final
{
public:
	class UFortWorldItem*                         Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetStorageOverflowFromAddingItem) == 0x000008, "Wrong alignment on FortInventoryContext_GetStorageOverflowFromAddingItem");
static_assert(sizeof(FortInventoryContext_GetStorageOverflowFromAddingItem) == 0x000010, "Wrong size on FortInventoryContext_GetStorageOverflowFromAddingItem");
static_assert(offsetof(FortInventoryContext_GetStorageOverflowFromAddingItem, Item) == 0x000000, "Member 'FortInventoryContext_GetStorageOverflowFromAddingItem::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetStorageOverflowFromAddingItem, Count) == 0x000008, "Member 'FortInventoryContext_GetStorageOverflowFromAddingItem::Count' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetStorageOverflowFromAddingItem, ReturnValue) == 0x00000C, "Member 'FortInventoryContext_GetStorageOverflowFromAddingItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetSupportBonusPerks
// 0x0020 (0x0020 - 0x0000)
struct FortInventoryContext_GetSupportBonusPerks final
{
public:
	class UFortHero*                              Hero;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortUIPerk>                    SupportBonusPerks;                                 // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_GetSupportBonusPerks) == 0x000008, "Wrong alignment on FortInventoryContext_GetSupportBonusPerks");
static_assert(sizeof(FortInventoryContext_GetSupportBonusPerks) == 0x000020, "Wrong size on FortInventoryContext_GetSupportBonusPerks");
static_assert(offsetof(FortInventoryContext_GetSupportBonusPerks, Hero) == 0x000000, "Member 'FortInventoryContext_GetSupportBonusPerks::Hero' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetSupportBonusPerks, SupportBonusPerks) == 0x000008, "Member 'FortInventoryContext_GetSupportBonusPerks::SupportBonusPerks' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetSupportBonusPerks, ReturnValue) == 0x000018, "Member 'FortInventoryContext_GetSupportBonusPerks::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetTotalItemQuantityByDefinition
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_GetTotalItemQuantityByDefinition final
{
public:
	class UFortItemDefinition*                    ItemDefinition;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_GetTotalItemQuantityByDefinition) == 0x000008, "Wrong alignment on FortInventoryContext_GetTotalItemQuantityByDefinition");
static_assert(sizeof(FortInventoryContext_GetTotalItemQuantityByDefinition) == 0x000010, "Wrong size on FortInventoryContext_GetTotalItemQuantityByDefinition");
static_assert(offsetof(FortInventoryContext_GetTotalItemQuantityByDefinition, ItemDefinition) == 0x000000, "Member 'FortInventoryContext_GetTotalItemQuantityByDefinition::ItemDefinition' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetTotalItemQuantityByDefinition, ReturnValue) == 0x000008, "Member 'FortInventoryContext_GetTotalItemQuantityByDefinition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetTransmogSacrificeDataFromItemDefintion
// 0x0020 (0x0020 - 0x0000)
struct FortInventoryContext_GetTransmogSacrificeDataFromItemDefintion final
{
public:
	const class UFortItemDefinition*              ItemDefinition;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransmogSacrifice                     OutTransmogData;                                   // 0x0008(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_GetTransmogSacrificeDataFromItemDefintion) == 0x000008, "Wrong alignment on FortInventoryContext_GetTransmogSacrificeDataFromItemDefintion");
static_assert(sizeof(FortInventoryContext_GetTransmogSacrificeDataFromItemDefintion) == 0x000020, "Wrong size on FortInventoryContext_GetTransmogSacrificeDataFromItemDefintion");
static_assert(offsetof(FortInventoryContext_GetTransmogSacrificeDataFromItemDefintion, ItemDefinition) == 0x000000, "Member 'FortInventoryContext_GetTransmogSacrificeDataFromItemDefintion::ItemDefinition' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetTransmogSacrificeDataFromItemDefintion, OutTransmogData) == 0x000008, "Member 'FortInventoryContext_GetTransmogSacrificeDataFromItemDefintion::OutTransmogData' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetTransmogSacrificeDataFromItemDefintion, ReturnValue) == 0x000018, "Member 'FortInventoryContext_GetTransmogSacrificeDataFromItemDefintion::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetTrapAttachTypeName
// 0x0020 (0x0020 - 0x0000)
struct FortInventoryContext_GetTrapAttachTypeName final
{
public:
	class ABuildingSMActor*                       Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetTrapAttachTypeName) == 0x000008, "Wrong alignment on FortInventoryContext_GetTrapAttachTypeName");
static_assert(sizeof(FortInventoryContext_GetTrapAttachTypeName) == 0x000020, "Wrong size on FortInventoryContext_GetTrapAttachTypeName");
static_assert(offsetof(FortInventoryContext_GetTrapAttachTypeName, Actor) == 0x000000, "Member 'FortInventoryContext_GetTrapAttachTypeName::Actor' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetTrapAttachTypeName, ReturnValue) == 0x000008, "Member 'FortInventoryContext_GetTrapAttachTypeName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetVaultItemLimit
// 0x0004 (0x0004 - 0x0000)
struct FortInventoryContext_GetVaultItemLimit final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetVaultItemLimit) == 0x000004, "Wrong alignment on FortInventoryContext_GetVaultItemLimit");
static_assert(sizeof(FortInventoryContext_GetVaultItemLimit) == 0x000004, "Wrong size on FortInventoryContext_GetVaultItemLimit");
static_assert(offsetof(FortInventoryContext_GetVaultItemLimit, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetVaultItemLimit::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetVaultItemLimitStatus
// 0x0001 (0x0001 - 0x0000)
struct FortInventoryContext_GetVaultItemLimitStatus final
{
public:
	EVaultItemLimitStatus                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetVaultItemLimitStatus) == 0x000001, "Wrong alignment on FortInventoryContext_GetVaultItemLimitStatus");
static_assert(sizeof(FortInventoryContext_GetVaultItemLimitStatus) == 0x000001, "Wrong size on FortInventoryContext_GetVaultItemLimitStatus");
static_assert(offsetof(FortInventoryContext_GetVaultItemLimitStatus, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetVaultItemLimitStatus::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetVoucherResourceItemDefinition
// 0x0008 (0x0008 - 0x0000)
struct FortInventoryContext_GetVoucherResourceItemDefinition final
{
public:
	class UFortPersistentResourceItemDefinition*  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetVoucherResourceItemDefinition) == 0x000008, "Wrong alignment on FortInventoryContext_GetVoucherResourceItemDefinition");
static_assert(sizeof(FortInventoryContext_GetVoucherResourceItemDefinition) == 0x000008, "Wrong size on FortInventoryContext_GetVoucherResourceItemDefinition");
static_assert(offsetof(FortInventoryContext_GetVoucherResourceItemDefinition, ReturnValue) == 0x000000, "Member 'FortInventoryContext_GetVoucherResourceItemDefinition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetWorldItemList
// 0x0028 (0x0028 - 0x0000)
struct FortInventoryContext_GetWorldItemList final
{
public:
	TArray<class UFortWorldItem*>                 Items;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFortItemListFilter                    FilterSettings;                                    // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetWorldItemList) == 0x000008, "Wrong alignment on FortInventoryContext_GetWorldItemList");
static_assert(sizeof(FortInventoryContext_GetWorldItemList) == 0x000028, "Wrong size on FortInventoryContext_GetWorldItemList");
static_assert(offsetof(FortInventoryContext_GetWorldItemList, Items) == 0x000000, "Member 'FortInventoryContext_GetWorldItemList::Items' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetWorldItemList, FilterSettings) == 0x000010, "Member 'FortInventoryContext_GetWorldItemList::FilterSettings' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.GetWorldItemListForDeployableBaseThePlayerIsIn
// 0x0028 (0x0028 - 0x0000)
struct FortInventoryContext_GetWorldItemListForDeployableBaseThePlayerIsIn final
{
public:
	TArray<class UFortWorldItem*>                 Items;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFortItemListFilter                    FilterSettings;                                    // 0x0010(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_GetWorldItemListForDeployableBaseThePlayerIsIn) == 0x000008, "Wrong alignment on FortInventoryContext_GetWorldItemListForDeployableBaseThePlayerIsIn");
static_assert(sizeof(FortInventoryContext_GetWorldItemListForDeployableBaseThePlayerIsIn) == 0x000028, "Wrong size on FortInventoryContext_GetWorldItemListForDeployableBaseThePlayerIsIn");
static_assert(offsetof(FortInventoryContext_GetWorldItemListForDeployableBaseThePlayerIsIn, Items) == 0x000000, "Member 'FortInventoryContext_GetWorldItemListForDeployableBaseThePlayerIsIn::Items' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_GetWorldItemListForDeployableBaseThePlayerIsIn, FilterSettings) == 0x000010, "Member 'FortInventoryContext_GetWorldItemListForDeployableBaseThePlayerIsIn::FilterSettings' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.HasEvolutions
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_HasEvolutions final
{
public:
	const class UFortItem*                        Item;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_HasEvolutions) == 0x000008, "Wrong alignment on FortInventoryContext_HasEvolutions");
static_assert(sizeof(FortInventoryContext_HasEvolutions) == 0x000010, "Wrong size on FortInventoryContext_HasEvolutions");
static_assert(offsetof(FortInventoryContext_HasEvolutions, Item) == 0x000000, "Member 'FortInventoryContext_HasEvolutions::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_HasEvolutions, ReturnValue) == 0x000008, "Member 'FortInventoryContext_HasEvolutions::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.HasGameplayTagContainer
// 0x0028 (0x0028 - 0x0000)
struct FortInventoryContext_HasGameplayTagContainer final
{
public:
	struct FGameplayTagContainer                  GameplayTagContainer;                              // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_HasGameplayTagContainer) == 0x000008, "Wrong alignment on FortInventoryContext_HasGameplayTagContainer");
static_assert(sizeof(FortInventoryContext_HasGameplayTagContainer) == 0x000028, "Wrong size on FortInventoryContext_HasGameplayTagContainer");
static_assert(offsetof(FortInventoryContext_HasGameplayTagContainer, GameplayTagContainer) == 0x000000, "Member 'FortInventoryContext_HasGameplayTagContainer::GameplayTagContainer' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_HasGameplayTagContainer, ReturnValue) == 0x000020, "Member 'FortInventoryContext_HasGameplayTagContainer::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.HasGameplayTagContainerExact
// 0x0028 (0x0028 - 0x0000)
struct FortInventoryContext_HasGameplayTagContainerExact final
{
public:
	struct FGameplayTagContainer                  GameplayTagContainer;                              // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_HasGameplayTagContainerExact) == 0x000008, "Wrong alignment on FortInventoryContext_HasGameplayTagContainerExact");
static_assert(sizeof(FortInventoryContext_HasGameplayTagContainerExact) == 0x000028, "Wrong size on FortInventoryContext_HasGameplayTagContainerExact");
static_assert(offsetof(FortInventoryContext_HasGameplayTagContainerExact, GameplayTagContainer) == 0x000000, "Member 'FortInventoryContext_HasGameplayTagContainerExact::GameplayTagContainer' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_HasGameplayTagContainerExact, ReturnValue) == 0x000020, "Member 'FortInventoryContext_HasGameplayTagContainerExact::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.HasTrapReadyForBuilding
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_HasTrapReadyForBuilding final
{
public:
	const class ABuildingSMActor*                 BuildingToAttachTo;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_HasTrapReadyForBuilding) == 0x000008, "Wrong alignment on FortInventoryContext_HasTrapReadyForBuilding");
static_assert(sizeof(FortInventoryContext_HasTrapReadyForBuilding) == 0x000010, "Wrong size on FortInventoryContext_HasTrapReadyForBuilding");
static_assert(offsetof(FortInventoryContext_HasTrapReadyForBuilding, BuildingToAttachTo) == 0x000000, "Member 'FortInventoryContext_HasTrapReadyForBuilding::BuildingToAttachTo' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_HasTrapReadyForBuilding, ReturnValue) == 0x000008, "Member 'FortInventoryContext_HasTrapReadyForBuilding::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.IsRecyclable
// 0x0028 (0x0028 - 0x0000)
struct FortInventoryContext_IsRecyclable final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Reason;                                            // 0x0008(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_IsRecyclable) == 0x000008, "Wrong alignment on FortInventoryContext_IsRecyclable");
static_assert(sizeof(FortInventoryContext_IsRecyclable) == 0x000028, "Wrong size on FortInventoryContext_IsRecyclable");
static_assert(offsetof(FortInventoryContext_IsRecyclable, Item) == 0x000000, "Member 'FortInventoryContext_IsRecyclable::Item' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_IsRecyclable, Reason) == 0x000008, "Member 'FortInventoryContext_IsRecyclable::Reason' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_IsRecyclable, ReturnValue) == 0x000020, "Member 'FortInventoryContext_IsRecyclable::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.IsSchematicPinned
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_IsSchematicPinned final
{
public:
	class UFortSchematicItem*                     Schematic;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_IsSchematicPinned) == 0x000008, "Wrong alignment on FortInventoryContext_IsSchematicPinned");
static_assert(sizeof(FortInventoryContext_IsSchematicPinned) == 0x000010, "Wrong size on FortInventoryContext_IsSchematicPinned");
static_assert(offsetof(FortInventoryContext_IsSchematicPinned, Schematic) == 0x000000, "Member 'FortInventoryContext_IsSchematicPinned::Schematic' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_IsSchematicPinned, ReturnValue) == 0x000008, "Member 'FortInventoryContext_IsSchematicPinned::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.IsSlotHidden
// 0x000C (0x000C - 0x0000)
struct FortInventoryContext_IsSlotHidden final
{
public:
	EFortQuickBars                                InQuickBar;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Slot;                                              // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_IsSlotHidden) == 0x000004, "Wrong alignment on FortInventoryContext_IsSlotHidden");
static_assert(sizeof(FortInventoryContext_IsSlotHidden) == 0x00000C, "Wrong size on FortInventoryContext_IsSlotHidden");
static_assert(offsetof(FortInventoryContext_IsSlotHidden, InQuickBar) == 0x000000, "Member 'FortInventoryContext_IsSlotHidden::InQuickBar' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_IsSlotHidden, Slot) == 0x000004, "Member 'FortInventoryContext_IsSlotHidden::Slot' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_IsSlotHidden, ReturnValue) == 0x000008, "Member 'FortInventoryContext_IsSlotHidden::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.IsTrapAvailableForBuilding
// 0x0010 (0x0010 - 0x0000)
struct FortInventoryContext_IsTrapAvailableForBuilding final
{
public:
	class ABuildingSMActor*                       Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortInventoryContext_IsTrapAvailableForBuilding) == 0x000008, "Wrong alignment on FortInventoryContext_IsTrapAvailableForBuilding");
static_assert(sizeof(FortInventoryContext_IsTrapAvailableForBuilding) == 0x000010, "Wrong size on FortInventoryContext_IsTrapAvailableForBuilding");
static_assert(offsetof(FortInventoryContext_IsTrapAvailableForBuilding, Actor) == 0x000000, "Member 'FortInventoryContext_IsTrapAvailableForBuilding::Actor' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_IsTrapAvailableForBuilding, ReturnValue) == 0x000008, "Member 'FortInventoryContext_IsTrapAvailableForBuilding::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortInventoryContext.SortAccountItemArrayForTransmog
// 0x0020 (0x0020 - 0x0000)
struct FortInventoryContext_SortAccountItemArrayForTransmog final
{
public:
	TArray<class UFortAccountItem*>               VaultItems;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class UFortAccountItem*>               SortedItems;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortInventoryContext_SortAccountItemArrayForTransmog) == 0x000008, "Wrong alignment on FortInventoryContext_SortAccountItemArrayForTransmog");
static_assert(sizeof(FortInventoryContext_SortAccountItemArrayForTransmog) == 0x000020, "Wrong size on FortInventoryContext_SortAccountItemArrayForTransmog");
static_assert(offsetof(FortInventoryContext_SortAccountItemArrayForTransmog, VaultItems) == 0x000000, "Member 'FortInventoryContext_SortAccountItemArrayForTransmog::VaultItems' has a wrong offset!");
static_assert(offsetof(FortInventoryContext_SortAccountItemArrayForTransmog, SortedItems) == 0x000010, "Member 'FortInventoryContext_SortAccountItemArrayForTransmog::SortedItems' has a wrong offset!");

// Function FortniteUI.FortItemCategoryIndicator.SetItemToRepresent
// 0x0008 (0x0008 - 0x0000)
struct FortItemCategoryIndicator_SetItemToRepresent final
{
public:
	const class UFortItem*                        Param_ItemToRepresent;                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemCategoryIndicator_SetItemToRepresent) == 0x000008, "Wrong alignment on FortItemCategoryIndicator_SetItemToRepresent");
static_assert(sizeof(FortItemCategoryIndicator_SetItemToRepresent) == 0x000008, "Wrong size on FortItemCategoryIndicator_SetItemToRepresent");
static_assert(offsetof(FortItemCategoryIndicator_SetItemToRepresent, Param_ItemToRepresent) == 0x000000, "Member 'FortItemCategoryIndicator_SetItemToRepresent::Param_ItemToRepresent' has a wrong offset!");

// Function FortniteUI.FortItemCategoryIndicator.SetLabelColorOverride
// 0x0010 (0x0010 - 0x0000)
struct FortItemCategoryIndicator_SetLabelColorOverride final
{
public:
	struct FLinearColor                           InLabelColorOverride;                              // 0x0000(0x0010)(ConstParm, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemCategoryIndicator_SetLabelColorOverride) == 0x000004, "Wrong alignment on FortItemCategoryIndicator_SetLabelColorOverride");
static_assert(sizeof(FortItemCategoryIndicator_SetLabelColorOverride) == 0x000010, "Wrong size on FortItemCategoryIndicator_SetLabelColorOverride");
static_assert(offsetof(FortItemCategoryIndicator_SetLabelColorOverride, InLabelColorOverride) == 0x000000, "Member 'FortItemCategoryIndicator_SetLabelColorOverride::InLabelColorOverride' has a wrong offset!");

// Function FortniteUI.FortItemCategoryIndicator.SetOrdinalOfCategoryToRepresent
// 0x0001 (0x0001 - 0x0000)
struct FortItemCategoryIndicator_SetOrdinalOfCategoryToRepresent final
{
public:
	EFortItemCategoryOrdinal                      ItemCategoryOrdinal;                               // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemCategoryIndicator_SetOrdinalOfCategoryToRepresent) == 0x000001, "Wrong alignment on FortItemCategoryIndicator_SetOrdinalOfCategoryToRepresent");
static_assert(sizeof(FortItemCategoryIndicator_SetOrdinalOfCategoryToRepresent) == 0x000001, "Wrong size on FortItemCategoryIndicator_SetOrdinalOfCategoryToRepresent");
static_assert(offsetof(FortItemCategoryIndicator_SetOrdinalOfCategoryToRepresent, ItemCategoryOrdinal) == 0x000000, "Member 'FortItemCategoryIndicator_SetOrdinalOfCategoryToRepresent::ItemCategoryOrdinal' has a wrong offset!");

// Function FortniteUI.FortItemCooldownWidget.OnCooldownStarted
// 0x0001 (0x0001 - 0x0000)
struct FortItemCooldownWidget_OnCooldownStarted final
{
public:
	EFortItemCooldownType                         CooldownType;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemCooldownWidget_OnCooldownStarted) == 0x000001, "Wrong alignment on FortItemCooldownWidget_OnCooldownStarted");
static_assert(sizeof(FortItemCooldownWidget_OnCooldownStarted) == 0x000001, "Wrong size on FortItemCooldownWidget_OnCooldownStarted");
static_assert(offsetof(FortItemCooldownWidget_OnCooldownStarted, CooldownType) == 0x000000, "Member 'FortItemCooldownWidget_OnCooldownStarted::CooldownType' has a wrong offset!");

// Function FortniteUI.FortItemCooldownWidget.OnCooldownStopped
// 0x0001 (0x0001 - 0x0000)
struct FortItemCooldownWidget_OnCooldownStopped final
{
public:
	EFortItemCooldownType                         CooldownType;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemCooldownWidget_OnCooldownStopped) == 0x000001, "Wrong alignment on FortItemCooldownWidget_OnCooldownStopped");
static_assert(sizeof(FortItemCooldownWidget_OnCooldownStopped) == 0x000001, "Wrong size on FortItemCooldownWidget_OnCooldownStopped");
static_assert(offsetof(FortItemCooldownWidget_OnCooldownStopped, CooldownType) == 0x000000, "Member 'FortItemCooldownWidget_OnCooldownStopped::CooldownType' has a wrong offset!");

// Function FortniteUI.FortItemCooldownWidget.SetItem
// 0x0008 (0x0008 - 0x0000)
struct FortItemCooldownWidget_SetItem final
{
public:
	const class UFortWorldItem*                   InWorldItem;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemCooldownWidget_SetItem) == 0x000008, "Wrong alignment on FortItemCooldownWidget_SetItem");
static_assert(sizeof(FortItemCooldownWidget_SetItem) == 0x000008, "Wrong size on FortItemCooldownWidget_SetItem");
static_assert(offsetof(FortItemCooldownWidget_SetItem, InWorldItem) == 0x000000, "Member 'FortItemCooldownWidget_SetItem::InWorldItem' has a wrong offset!");

// Function FortniteUI.FortItemDetailsPanel.HandleCursorModeChanged
// 0x0018 (0x0018 - 0x0000)
struct FortItemDetailsPanel_HandleCursorModeChanged final
{
public:
	bool                                          bCursorModeEnabled;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ActionName;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            CustomWidget;                                      // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemDetailsPanel_HandleCursorModeChanged) == 0x000008, "Wrong alignment on FortItemDetailsPanel_HandleCursorModeChanged");
static_assert(sizeof(FortItemDetailsPanel_HandleCursorModeChanged) == 0x000018, "Wrong size on FortItemDetailsPanel_HandleCursorModeChanged");
static_assert(offsetof(FortItemDetailsPanel_HandleCursorModeChanged, bCursorModeEnabled) == 0x000000, "Member 'FortItemDetailsPanel_HandleCursorModeChanged::bCursorModeEnabled' has a wrong offset!");
static_assert(offsetof(FortItemDetailsPanel_HandleCursorModeChanged, ActionName) == 0x000008, "Member 'FortItemDetailsPanel_HandleCursorModeChanged::ActionName' has a wrong offset!");
static_assert(offsetof(FortItemDetailsPanel_HandleCursorModeChanged, CustomWidget) == 0x000010, "Member 'FortItemDetailsPanel_HandleCursorModeChanged::CustomWidget' has a wrong offset!");

// Function FortniteUI.FortItemDetailsPanel.HandleItemToCompareWithChanged
// 0x0003 (0x0003 - 0x0000)
struct FortItemDetailsPanel_HandleItemToCompareWithChanged final
{
public:
	bool                                          bItemChanged;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAmmoChanged;                                      // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIngredientsChanged;                               // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemDetailsPanel_HandleItemToCompareWithChanged) == 0x000001, "Wrong alignment on FortItemDetailsPanel_HandleItemToCompareWithChanged");
static_assert(sizeof(FortItemDetailsPanel_HandleItemToCompareWithChanged) == 0x000003, "Wrong size on FortItemDetailsPanel_HandleItemToCompareWithChanged");
static_assert(offsetof(FortItemDetailsPanel_HandleItemToCompareWithChanged, bItemChanged) == 0x000000, "Member 'FortItemDetailsPanel_HandleItemToCompareWithChanged::bItemChanged' has a wrong offset!");
static_assert(offsetof(FortItemDetailsPanel_HandleItemToCompareWithChanged, bAmmoChanged) == 0x000001, "Member 'FortItemDetailsPanel_HandleItemToCompareWithChanged::bAmmoChanged' has a wrong offset!");
static_assert(offsetof(FortItemDetailsPanel_HandleItemToCompareWithChanged, bIngredientsChanged) == 0x000002, "Member 'FortItemDetailsPanel_HandleItemToCompareWithChanged::bIngredientsChanged' has a wrong offset!");

// Function FortniteUI.FortItemDetailsPanel.HandleItemToDetailChanged
// 0x0003 (0x0003 - 0x0000)
struct FortItemDetailsPanel_HandleItemToDetailChanged final
{
public:
	bool                                          bItemChanged;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAmmoChanged;                                      // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIngredientsChanged;                               // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemDetailsPanel_HandleItemToDetailChanged) == 0x000001, "Wrong alignment on FortItemDetailsPanel_HandleItemToDetailChanged");
static_assert(sizeof(FortItemDetailsPanel_HandleItemToDetailChanged) == 0x000003, "Wrong size on FortItemDetailsPanel_HandleItemToDetailChanged");
static_assert(offsetof(FortItemDetailsPanel_HandleItemToDetailChanged, bItemChanged) == 0x000000, "Member 'FortItemDetailsPanel_HandleItemToDetailChanged::bItemChanged' has a wrong offset!");
static_assert(offsetof(FortItemDetailsPanel_HandleItemToDetailChanged, bAmmoChanged) == 0x000001, "Member 'FortItemDetailsPanel_HandleItemToDetailChanged::bAmmoChanged' has a wrong offset!");
static_assert(offsetof(FortItemDetailsPanel_HandleItemToDetailChanged, bIngredientsChanged) == 0x000002, "Member 'FortItemDetailsPanel_HandleItemToDetailChanged::bIngredientsChanged' has a wrong offset!");

// Function FortniteUI.FortItemDetailsPanel.SetItemToCompareWith
// 0x0008 (0x0008 - 0x0000)
struct FortItemDetailsPanel_SetItemToCompareWith final
{
public:
	const class UFortItem*                        Param_ItemToCompareWith;                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemDetailsPanel_SetItemToCompareWith) == 0x000008, "Wrong alignment on FortItemDetailsPanel_SetItemToCompareWith");
static_assert(sizeof(FortItemDetailsPanel_SetItemToCompareWith) == 0x000008, "Wrong size on FortItemDetailsPanel_SetItemToCompareWith");
static_assert(offsetof(FortItemDetailsPanel_SetItemToCompareWith, Param_ItemToCompareWith) == 0x000000, "Member 'FortItemDetailsPanel_SetItemToCompareWith::Param_ItemToCompareWith' has a wrong offset!");

// Function FortniteUI.FortItemDetailsPanel.SetItemToDetail
// 0x0008 (0x0008 - 0x0000)
struct FortItemDetailsPanel_SetItemToDetail final
{
public:
	const class UFortItem*                        Param_ItemToDetail;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemDetailsPanel_SetItemToDetail) == 0x000008, "Wrong alignment on FortItemDetailsPanel_SetItemToDetail");
static_assert(sizeof(FortItemDetailsPanel_SetItemToDetail) == 0x000008, "Wrong size on FortItemDetailsPanel_SetItemToDetail");
static_assert(offsetof(FortItemDetailsPanel_SetItemToDetail, Param_ItemToDetail) == 0x000000, "Member 'FortItemDetailsPanel_SetItemToDetail::Param_ItemToDetail' has a wrong offset!");

// Function FortniteUI.FortItemIcon.SetBrushSize
// 0x0001 (0x0001 - 0x0000)
struct FortItemIcon_SetBrushSize final
{
public:
	EFortBrushSize                                InBrushSize;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemIcon_SetBrushSize) == 0x000001, "Wrong alignment on FortItemIcon_SetBrushSize");
static_assert(sizeof(FortItemIcon_SetBrushSize) == 0x000001, "Wrong size on FortItemIcon_SetBrushSize");
static_assert(offsetof(FortItemIcon_SetBrushSize, InBrushSize) == 0x000000, "Member 'FortItemIcon_SetBrushSize::InBrushSize' has a wrong offset!");

// Function FortniteUI.FortItemIcon.SetColorAndOpacity
// 0x0010 (0x0010 - 0x0000)
struct FortItemIcon_SetColorAndOpacity final
{
public:
	struct FLinearColor                           InColorAndOpacity;                                 // 0x0000(0x0010)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemIcon_SetColorAndOpacity) == 0x000004, "Wrong alignment on FortItemIcon_SetColorAndOpacity");
static_assert(sizeof(FortItemIcon_SetColorAndOpacity) == 0x000010, "Wrong size on FortItemIcon_SetColorAndOpacity");
static_assert(offsetof(FortItemIcon_SetColorAndOpacity, InColorAndOpacity) == 0x000000, "Member 'FortItemIcon_SetColorAndOpacity::InColorAndOpacity' has a wrong offset!");

// Function FortniteUI.FortItemIcon.SetItemDefinition
// 0x0008 (0x0008 - 0x0000)
struct FortItemIcon_SetItemDefinition final
{
public:
	class UFortItemDefinition*                    InItemDefinition;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemIcon_SetItemDefinition) == 0x000008, "Wrong alignment on FortItemIcon_SetItemDefinition");
static_assert(sizeof(FortItemIcon_SetItemDefinition) == 0x000008, "Wrong size on FortItemIcon_SetItemDefinition");
static_assert(offsetof(FortItemIcon_SetItemDefinition, InItemDefinition) == 0x000000, "Member 'FortItemIcon_SetItemDefinition::InItemDefinition' has a wrong offset!");

// Function FortniteUI.FortItemIcon.SetOpacity
// 0x0004 (0x0004 - 0x0000)
struct FortItemIcon_SetOpacity final
{
public:
	float                                         InOpacity;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemIcon_SetOpacity) == 0x000004, "Wrong alignment on FortItemIcon_SetOpacity");
static_assert(sizeof(FortItemIcon_SetOpacity) == 0x000004, "Wrong size on FortItemIcon_SetOpacity");
static_assert(offsetof(FortItemIcon_SetOpacity, InOpacity) == 0x000000, "Member 'FortItemIcon_SetOpacity::InOpacity' has a wrong offset!");

// Function FortniteUI.FortItemIcon.SetShadowColorAndOpacity
// 0x0010 (0x0010 - 0x0000)
struct FortItemIcon_SetShadowColorAndOpacity final
{
public:
	struct FLinearColor                           InColorAndOpacity;                                 // 0x0000(0x0010)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemIcon_SetShadowColorAndOpacity) == 0x000004, "Wrong alignment on FortItemIcon_SetShadowColorAndOpacity");
static_assert(sizeof(FortItemIcon_SetShadowColorAndOpacity) == 0x000010, "Wrong size on FortItemIcon_SetShadowColorAndOpacity");
static_assert(offsetof(FortItemIcon_SetShadowColorAndOpacity, InColorAndOpacity) == 0x000000, "Member 'FortItemIcon_SetShadowColorAndOpacity::InColorAndOpacity' has a wrong offset!");

// Function FortniteUI.FortItemInspectCycleWidget.OnItemCycled
// 0x0018 (0x0018 - 0x0000)
struct FortItemInspectCycleWidget_OnItemCycled final
{
public:
	class UFortItem*                              OldItem;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItem*                              NewItem;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OffsetFromPreviousItem;                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemInspectCycleWidget_OnItemCycled) == 0x000008, "Wrong alignment on FortItemInspectCycleWidget_OnItemCycled");
static_assert(sizeof(FortItemInspectCycleWidget_OnItemCycled) == 0x000018, "Wrong size on FortItemInspectCycleWidget_OnItemCycled");
static_assert(offsetof(FortItemInspectCycleWidget_OnItemCycled, OldItem) == 0x000000, "Member 'FortItemInspectCycleWidget_OnItemCycled::OldItem' has a wrong offset!");
static_assert(offsetof(FortItemInspectCycleWidget_OnItemCycled, NewItem) == 0x000008, "Member 'FortItemInspectCycleWidget_OnItemCycled::NewItem' has a wrong offset!");
static_assert(offsetof(FortItemInspectCycleWidget_OnItemCycled, OffsetFromPreviousItem) == 0x000010, "Member 'FortItemInspectCycleWidget_OnItemCycled::OffsetFromPreviousItem' has a wrong offset!");

// Function FortniteUI.FortItemInspectCycleWidget.SelectItemWithOffset
// 0x0004 (0x0004 - 0x0000)
struct FortItemInspectCycleWidget_SelectItemWithOffset final
{
public:
	int32                                         Offset;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemInspectCycleWidget_SelectItemWithOffset) == 0x000004, "Wrong alignment on FortItemInspectCycleWidget_SelectItemWithOffset");
static_assert(sizeof(FortItemInspectCycleWidget_SelectItemWithOffset) == 0x000004, "Wrong size on FortItemInspectCycleWidget_SelectItemWithOffset");
static_assert(offsetof(FortItemInspectCycleWidget_SelectItemWithOffset, Offset) == 0x000000, "Member 'FortItemInspectCycleWidget_SelectItemWithOffset::Offset' has a wrong offset!");

// Function FortniteUI.FortItemInspectCycleWidget.SetInputEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortItemInspectCycleWidget_SetInputEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemInspectCycleWidget_SetInputEnabled) == 0x000001, "Wrong alignment on FortItemInspectCycleWidget_SetInputEnabled");
static_assert(sizeof(FortItemInspectCycleWidget_SetInputEnabled) == 0x000001, "Wrong size on FortItemInspectCycleWidget_SetInputEnabled");
static_assert(offsetof(FortItemInspectCycleWidget_SetInputEnabled, Enabled) == 0x000000, "Member 'FortItemInspectCycleWidget_SetInputEnabled::Enabled' has a wrong offset!");

// Function FortniteUI.FortItemInspectCycleWidget.SetItemToRepresent
// 0x0008 (0x0008 - 0x0000)
struct FortItemInspectCycleWidget_SetItemToRepresent final
{
public:
	const class UFortItem*                        NewItemToRepresent;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemInspectCycleWidget_SetItemToRepresent) == 0x000008, "Wrong alignment on FortItemInspectCycleWidget_SetItemToRepresent");
static_assert(sizeof(FortItemInspectCycleWidget_SetItemToRepresent) == 0x000008, "Wrong size on FortItemInspectCycleWidget_SetItemToRepresent");
static_assert(offsetof(FortItemInspectCycleWidget_SetItemToRepresent, NewItemToRepresent) == 0x000000, "Member 'FortItemInspectCycleWidget_SetItemToRepresent::NewItemToRepresent' has a wrong offset!");

// Function FortniteUI.FortItemInspectCycleWidget.GetItemWithOffset_BP
// 0x0010 (0x0010 - 0x0000)
struct FortItemInspectCycleWidget_GetItemWithOffset_BP final
{
public:
	int32                                         IndexOffset;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemInspectCycleWidget_GetItemWithOffset_BP) == 0x000008, "Wrong alignment on FortItemInspectCycleWidget_GetItemWithOffset_BP");
static_assert(sizeof(FortItemInspectCycleWidget_GetItemWithOffset_BP) == 0x000010, "Wrong size on FortItemInspectCycleWidget_GetItemWithOffset_BP");
static_assert(offsetof(FortItemInspectCycleWidget_GetItemWithOffset_BP, IndexOffset) == 0x000000, "Member 'FortItemInspectCycleWidget_GetItemWithOffset_BP::IndexOffset' has a wrong offset!");
static_assert(offsetof(FortItemInspectCycleWidget_GetItemWithOffset_BP, ReturnValue) == 0x000008, "Member 'FortItemInspectCycleWidget_GetItemWithOffset_BP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemManagementItemTileButton.GetPopupMenu
// 0x0008 (0x0008 - 0x0000)
struct FortItemManagementItemTileButton_GetPopupMenu final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementItemTileButton_GetPopupMenu) == 0x000008, "Wrong alignment on FortItemManagementItemTileButton_GetPopupMenu");
static_assert(sizeof(FortItemManagementItemTileButton_GetPopupMenu) == 0x000008, "Wrong size on FortItemManagementItemTileButton_GetPopupMenu");
static_assert(offsetof(FortItemManagementItemTileButton_GetPopupMenu, ReturnValue) == 0x000000, "Member 'FortItemManagementItemTileButton_GetPopupMenu::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemManagementItemTileButton.HandleEquipSlotChanged
// 0x0004 (0x0004 - 0x0000)
struct FortItemManagementItemTileButton_HandleEquipSlotChanged final
{
public:
	int32                                         EquipSlot;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementItemTileButton_HandleEquipSlotChanged) == 0x000004, "Wrong alignment on FortItemManagementItemTileButton_HandleEquipSlotChanged");
static_assert(sizeof(FortItemManagementItemTileButton_HandleEquipSlotChanged) == 0x000004, "Wrong size on FortItemManagementItemTileButton_HandleEquipSlotChanged");
static_assert(offsetof(FortItemManagementItemTileButton_HandleEquipSlotChanged, EquipSlot) == 0x000000, "Member 'FortItemManagementItemTileButton_HandleEquipSlotChanged::EquipSlot' has a wrong offset!");

// Function FortniteUI.FortItemManagementItemTileButton.GetItemManagementMode
// 0x0001 (0x0001 - 0x0000)
struct FortItemManagementItemTileButton_GetItemManagementMode final
{
public:
	EFortItemManagementMode                       ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementItemTileButton_GetItemManagementMode) == 0x000001, "Wrong alignment on FortItemManagementItemTileButton_GetItemManagementMode");
static_assert(sizeof(FortItemManagementItemTileButton_GetItemManagementMode) == 0x000001, "Wrong size on FortItemManagementItemTileButton_GetItemManagementMode");
static_assert(offsetof(FortItemManagementItemTileButton_GetItemManagementMode, ReturnValue) == 0x000000, "Member 'FortItemManagementItemTileButton_GetItemManagementMode::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemManagementMulchDetailsPanel.GetItemCountsToMulch
// 0x0010 (0x0010 - 0x0000)
struct FortItemManagementMulchDetailsPanel_GetItemCountsToMulch final
{
public:
	TArray<int32>                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementMulchDetailsPanel_GetItemCountsToMulch) == 0x000008, "Wrong alignment on FortItemManagementMulchDetailsPanel_GetItemCountsToMulch");
static_assert(sizeof(FortItemManagementMulchDetailsPanel_GetItemCountsToMulch) == 0x000010, "Wrong size on FortItemManagementMulchDetailsPanel_GetItemCountsToMulch");
static_assert(offsetof(FortItemManagementMulchDetailsPanel_GetItemCountsToMulch, ReturnValue) == 0x000000, "Member 'FortItemManagementMulchDetailsPanel_GetItemCountsToMulch::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemManagementMulchDetailsPanel.GetItemsToMulch
// 0x0010 (0x0010 - 0x0000)
struct FortItemManagementMulchDetailsPanel_GetItemsToMulch final
{
public:
	TArray<class UFortItem*>                      ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementMulchDetailsPanel_GetItemsToMulch) == 0x000008, "Wrong alignment on FortItemManagementMulchDetailsPanel_GetItemsToMulch");
static_assert(sizeof(FortItemManagementMulchDetailsPanel_GetItemsToMulch) == 0x000010, "Wrong size on FortItemManagementMulchDetailsPanel_GetItemsToMulch");
static_assert(offsetof(FortItemManagementMulchDetailsPanel_GetItemsToMulch, ReturnValue) == 0x000000, "Member 'FortItemManagementMulchDetailsPanel_GetItemsToMulch::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemManagementMulchDetailsPanel.IsSpaceAvailableForMulch
// 0x0001 (0x0001 - 0x0000)
struct FortItemManagementMulchDetailsPanel_IsSpaceAvailableForMulch final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemManagementMulchDetailsPanel_IsSpaceAvailableForMulch) == 0x000001, "Wrong alignment on FortItemManagementMulchDetailsPanel_IsSpaceAvailableForMulch");
static_assert(sizeof(FortItemManagementMulchDetailsPanel_IsSpaceAvailableForMulch) == 0x000001, "Wrong size on FortItemManagementMulchDetailsPanel_IsSpaceAvailableForMulch");
static_assert(offsetof(FortItemManagementMulchDetailsPanel_IsSpaceAvailableForMulch, ReturnValue) == 0x000000, "Member 'FortItemManagementMulchDetailsPanel_IsSpaceAvailableForMulch::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortFrontendInventoryFilterFunctionLibrary.ToText
// 0x0020 (0x0020 - 0x0000)
struct FortFrontendInventoryFilterFunctionLibrary_ToText final
{
public:
	EFortFrontendInventoryFilter                  FrontendInventoryFilter;                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortFrontendInventoryFilterFunctionLibrary_ToText) == 0x000008, "Wrong alignment on FortFrontendInventoryFilterFunctionLibrary_ToText");
static_assert(sizeof(FortFrontendInventoryFilterFunctionLibrary_ToText) == 0x000020, "Wrong size on FortFrontendInventoryFilterFunctionLibrary_ToText");
static_assert(offsetof(FortFrontendInventoryFilterFunctionLibrary_ToText, FrontendInventoryFilter) == 0x000000, "Member 'FortFrontendInventoryFilterFunctionLibrary_ToText::FrontendInventoryFilter' has a wrong offset!");
static_assert(offsetof(FortFrontendInventoryFilterFunctionLibrary_ToText, ReturnValue) == 0x000008, "Member 'FortFrontendInventoryFilterFunctionLibrary_ToText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemQuantityListEntryBase.HandleDifferentItemOrQuantitySetBP
// 0x0001 (0x0001 - 0x0000)
struct FortItemQuantityListEntryBase_HandleDifferentItemOrQuantitySetBP final
{
public:
	bool                                          IsBeingReset;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemQuantityListEntryBase_HandleDifferentItemOrQuantitySetBP) == 0x000001, "Wrong alignment on FortItemQuantityListEntryBase_HandleDifferentItemOrQuantitySetBP");
static_assert(sizeof(FortItemQuantityListEntryBase_HandleDifferentItemOrQuantitySetBP) == 0x000001, "Wrong size on FortItemQuantityListEntryBase_HandleDifferentItemOrQuantitySetBP");
static_assert(offsetof(FortItemQuantityListEntryBase_HandleDifferentItemOrQuantitySetBP, IsBeingReset) == 0x000000, "Member 'FortItemQuantityListEntryBase_HandleDifferentItemOrQuantitySetBP::IsBeingReset' has a wrong offset!");

// Function FortniteUI.FortItemQuantityListEntryBase.SetItemDefinitionAndQuantity
// 0x0038 (0x0038 - 0x0000)
struct FortItemQuantityListEntryBase_SetItemDefinitionAndQuantity final
{
public:
	struct FFortItemQuantityPair                  ItemQuantityPair;                                  // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ShouldTreatAsReset;                                // 0x0030(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemQuantityListEntryBase_SetItemDefinitionAndQuantity) == 0x000008, "Wrong alignment on FortItemQuantityListEntryBase_SetItemDefinitionAndQuantity");
static_assert(sizeof(FortItemQuantityListEntryBase_SetItemDefinitionAndQuantity) == 0x000038, "Wrong size on FortItemQuantityListEntryBase_SetItemDefinitionAndQuantity");
static_assert(offsetof(FortItemQuantityListEntryBase_SetItemDefinitionAndQuantity, ItemQuantityPair) == 0x000000, "Member 'FortItemQuantityListEntryBase_SetItemDefinitionAndQuantity::ItemQuantityPair' has a wrong offset!");
static_assert(offsetof(FortItemQuantityListEntryBase_SetItemDefinitionAndQuantity, ShouldTreatAsReset) == 0x000030, "Member 'FortItemQuantityListEntryBase_SetItemDefinitionAndQuantity::ShouldTreatAsReset' has a wrong offset!");

// Function FortniteUI.FortItemQuantityListEntryBase.SetItemInstanceAndQuantity
// 0x0018 (0x0018 - 0x0000)
struct FortItemQuantityListEntryBase_SetItemInstanceAndQuantity final
{
public:
	struct FFortItemInstanceQuantityPair          ItemQuantityPair;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ShouldTreatAsReset;                                // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemQuantityListEntryBase_SetItemInstanceAndQuantity) == 0x000008, "Wrong alignment on FortItemQuantityListEntryBase_SetItemInstanceAndQuantity");
static_assert(sizeof(FortItemQuantityListEntryBase_SetItemInstanceAndQuantity) == 0x000018, "Wrong size on FortItemQuantityListEntryBase_SetItemInstanceAndQuantity");
static_assert(offsetof(FortItemQuantityListEntryBase_SetItemInstanceAndQuantity, ItemQuantityPair) == 0x000000, "Member 'FortItemQuantityListEntryBase_SetItemInstanceAndQuantity::ItemQuantityPair' has a wrong offset!");
static_assert(offsetof(FortItemQuantityListEntryBase_SetItemInstanceAndQuantity, ShouldTreatAsReset) == 0x000010, "Member 'FortItemQuantityListEntryBase_SetItemInstanceAndQuantity::ShouldTreatAsReset' has a wrong offset!");

// Function FortniteUI.FortItemQuantityListEntryBase.SetPreviewData
// 0x0008 (0x0008 - 0x0000)
struct FortItemQuantityListEntryBase_SetPreviewData final
{
public:
	struct FFortItemEntryPreviewData              PreviewData;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemQuantityListEntryBase_SetPreviewData) == 0x000004, "Wrong alignment on FortItemQuantityListEntryBase_SetPreviewData");
static_assert(sizeof(FortItemQuantityListEntryBase_SetPreviewData) == 0x000008, "Wrong size on FortItemQuantityListEntryBase_SetPreviewData");
static_assert(offsetof(FortItemQuantityListEntryBase_SetPreviewData, PreviewData) == 0x000000, "Member 'FortItemQuantityListEntryBase_SetPreviewData::PreviewData' has a wrong offset!");

// Function FortniteUI.FortItemQuantityListEntryBase.GetItemDefinition
// 0x0008 (0x0008 - 0x0000)
struct FortItemQuantityListEntryBase_GetItemDefinition final
{
public:
	class UFortItemDefinition*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemQuantityListEntryBase_GetItemDefinition) == 0x000008, "Wrong alignment on FortItemQuantityListEntryBase_GetItemDefinition");
static_assert(sizeof(FortItemQuantityListEntryBase_GetItemDefinition) == 0x000008, "Wrong size on FortItemQuantityListEntryBase_GetItemDefinition");
static_assert(offsetof(FortItemQuantityListEntryBase_GetItemDefinition, ReturnValue) == 0x000000, "Member 'FortItemQuantityListEntryBase_GetItemDefinition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemQuantityListEntryBase.GetItemInstance
// 0x0008 (0x0008 - 0x0000)
struct FortItemQuantityListEntryBase_GetItemInstance final
{
public:
	class UFortItem*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemQuantityListEntryBase_GetItemInstance) == 0x000008, "Wrong alignment on FortItemQuantityListEntryBase_GetItemInstance");
static_assert(sizeof(FortItemQuantityListEntryBase_GetItemInstance) == 0x000008, "Wrong size on FortItemQuantityListEntryBase_GetItemInstance");
static_assert(offsetof(FortItemQuantityListEntryBase_GetItemInstance, ReturnValue) == 0x000000, "Member 'FortItemQuantityListEntryBase_GetItemInstance::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemQuantityListEntryBase.GetPreviewData
// 0x0008 (0x0008 - 0x0000)
struct FortItemQuantityListEntryBase_GetPreviewData final
{
public:
	struct FFortItemEntryPreviewData              OutPreviewData;                                    // 0x0000(0x0008)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemQuantityListEntryBase_GetPreviewData) == 0x000004, "Wrong alignment on FortItemQuantityListEntryBase_GetPreviewData");
static_assert(sizeof(FortItemQuantityListEntryBase_GetPreviewData) == 0x000008, "Wrong size on FortItemQuantityListEntryBase_GetPreviewData");
static_assert(offsetof(FortItemQuantityListEntryBase_GetPreviewData, OutPreviewData) == 0x000000, "Member 'FortItemQuantityListEntryBase_GetPreviewData::OutPreviewData' has a wrong offset!");

// Function FortniteUI.FortItemQuantityListEntryBase.IsBeingPreviewed
// 0x0001 (0x0001 - 0x0000)
struct FortItemQuantityListEntryBase_IsBeingPreviewed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemQuantityListEntryBase_IsBeingPreviewed) == 0x000001, "Wrong alignment on FortItemQuantityListEntryBase_IsBeingPreviewed");
static_assert(sizeof(FortItemQuantityListEntryBase_IsBeingPreviewed) == 0x000001, "Wrong size on FortItemQuantityListEntryBase_IsBeingPreviewed");
static_assert(offsetof(FortItemQuantityListEntryBase_IsBeingPreviewed, ReturnValue) == 0x000000, "Member 'FortItemQuantityListEntryBase_IsBeingPreviewed::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemRatingIndicator.SetItemToCompareWith
// 0x0008 (0x0008 - 0x0000)
struct FortItemRatingIndicator_SetItemToCompareWith final
{
public:
	const class UFortItem*                        Param_ItemToCompareWith;                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemRatingIndicator_SetItemToCompareWith) == 0x000008, "Wrong alignment on FortItemRatingIndicator_SetItemToCompareWith");
static_assert(sizeof(FortItemRatingIndicator_SetItemToCompareWith) == 0x000008, "Wrong size on FortItemRatingIndicator_SetItemToCompareWith");
static_assert(offsetof(FortItemRatingIndicator_SetItemToCompareWith, Param_ItemToCompareWith) == 0x000000, "Member 'FortItemRatingIndicator_SetItemToCompareWith::Param_ItemToCompareWith' has a wrong offset!");

// Function FortniteUI.FortItemRatingIndicator.SetItemToRepresent
// 0x0008 (0x0008 - 0x0000)
struct FortItemRatingIndicator_SetItemToRepresent final
{
public:
	const class UFortItem*                        Param_ItemToRepresent;                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemRatingIndicator_SetItemToRepresent) == 0x000008, "Wrong alignment on FortItemRatingIndicator_SetItemToRepresent");
static_assert(sizeof(FortItemRatingIndicator_SetItemToRepresent) == 0x000008, "Wrong size on FortItemRatingIndicator_SetItemToRepresent");
static_assert(offsetof(FortItemRatingIndicator_SetItemToRepresent, Param_ItemToRepresent) == 0x000000, "Member 'FortItemRatingIndicator_SetItemToRepresent::Param_ItemToRepresent' has a wrong offset!");

// Function FortniteUI.FortItemRatingIndicator.SetItemViewContext
// 0x0010 (0x0010 - 0x0000)
struct FortItemRatingIndicator_SetItemViewContext final
{
public:
	TScriptInterface<class IFortItemViewContextInterface> ItemViewContext;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemRatingIndicator_SetItemViewContext) == 0x000008, "Wrong alignment on FortItemRatingIndicator_SetItemViewContext");
static_assert(sizeof(FortItemRatingIndicator_SetItemViewContext) == 0x000010, "Wrong size on FortItemRatingIndicator_SetItemViewContext");
static_assert(offsetof(FortItemRatingIndicator_SetItemViewContext, ItemViewContext) == 0x000000, "Member 'FortItemRatingIndicator_SetItemViewContext::ItemViewContext' has a wrong offset!");

// Function FortniteUI.FortItemView.SetInspectMode
// 0x0001 (0x0001 - 0x0000)
struct FortItemView_SetInspectMode final
{
public:
	EFortItemInspectionMode                       NewInspectMode;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemView_SetInspectMode) == 0x000001, "Wrong alignment on FortItemView_SetInspectMode");
static_assert(sizeof(FortItemView_SetInspectMode) == 0x000001, "Wrong size on FortItemView_SetInspectMode");
static_assert(offsetof(FortItemView_SetInspectMode, NewInspectMode) == 0x000000, "Member 'FortItemView_SetInspectMode::NewInspectMode' has a wrong offset!");

// Function FortniteUI.FortItemView.SetItemToRepresent
// 0x0008 (0x0008 - 0x0000)
struct FortItemView_SetItemToRepresent final
{
public:
	class UFortItem*                              NewItemToRepresent;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemView_SetItemToRepresent) == 0x000008, "Wrong alignment on FortItemView_SetItemToRepresent");
static_assert(sizeof(FortItemView_SetItemToRepresent) == 0x000008, "Wrong size on FortItemView_SetItemToRepresent");
static_assert(offsetof(FortItemView_SetItemToRepresent, NewItemToRepresent) == 0x000000, "Member 'FortItemView_SetItemToRepresent::NewItemToRepresent' has a wrong offset!");

// Function FortniteUI.FortItemWidget.BPOnActivatableChanged
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_BPOnActivatableChanged final
{
public:
	bool                                          bNewActivatable;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_BPOnActivatableChanged) == 0x000001, "Wrong alignment on FortItemWidget_BPOnActivatableChanged");
static_assert(sizeof(FortItemWidget_BPOnActivatableChanged) == 0x000001, "Wrong size on FortItemWidget_BPOnActivatableChanged");
static_assert(offsetof(FortItemWidget_BPOnActivatableChanged, bNewActivatable) == 0x000000, "Member 'FortItemWidget_BPOnActivatableChanged::bNewActivatable' has a wrong offset!");

// Function FortniteUI.FortItemWidget.BPOnCooldownSecondsChanged
// 0x0004 (0x0004 - 0x0000)
struct FortItemWidget_BPOnCooldownSecondsChanged final
{
public:
	int32                                         NewCooldownSeconds;                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_BPOnCooldownSecondsChanged) == 0x000004, "Wrong alignment on FortItemWidget_BPOnCooldownSecondsChanged");
static_assert(sizeof(FortItemWidget_BPOnCooldownSecondsChanged) == 0x000004, "Wrong size on FortItemWidget_BPOnCooldownSecondsChanged");
static_assert(offsetof(FortItemWidget_BPOnCooldownSecondsChanged, NewCooldownSeconds) == 0x000000, "Member 'FortItemWidget_BPOnCooldownSecondsChanged::NewCooldownSeconds' has a wrong offset!");

// Function FortniteUI.FortItemWidget.BPOnItemSet
// 0x0008 (0x0008 - 0x0000)
struct FortItemWidget_BPOnItemSet final
{
public:
	class UFortItem*                              NewItem;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_BPOnItemSet) == 0x000008, "Wrong alignment on FortItemWidget_BPOnItemSet");
static_assert(sizeof(FortItemWidget_BPOnItemSet) == 0x000008, "Wrong size on FortItemWidget_BPOnItemSet");
static_assert(offsetof(FortItemWidget_BPOnItemSet, NewItem) == 0x000000, "Member 'FortItemWidget_BPOnItemSet::NewItem' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetItemToCompare
// 0x0008 (0x0008 - 0x0000)
struct FortItemWidget_GetItemToCompare final
{
public:
	class UFortItem*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetItemToCompare) == 0x000008, "Wrong alignment on FortItemWidget_GetItemToCompare");
static_assert(sizeof(FortItemWidget_GetItemToCompare) == 0x000008, "Wrong size on FortItemWidget_GetItemToCompare");
static_assert(offsetof(FortItemWidget_GetItemToCompare, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetItemToCompare::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.OnFortItemUpdated
// 0x0003 (0x0003 - 0x0000)
struct FortItemWidget_OnFortItemUpdated final
{
public:
	bool                                          bItemChanged;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAmmoChanged;                                      // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIngredientsChanged;                               // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_OnFortItemUpdated) == 0x000001, "Wrong alignment on FortItemWidget_OnFortItemUpdated");
static_assert(sizeof(FortItemWidget_OnFortItemUpdated) == 0x000003, "Wrong size on FortItemWidget_OnFortItemUpdated");
static_assert(offsetof(FortItemWidget_OnFortItemUpdated, bItemChanged) == 0x000000, "Member 'FortItemWidget_OnFortItemUpdated::bItemChanged' has a wrong offset!");
static_assert(offsetof(FortItemWidget_OnFortItemUpdated, bAmmoChanged) == 0x000001, "Member 'FortItemWidget_OnFortItemUpdated::bAmmoChanged' has a wrong offset!");
static_assert(offsetof(FortItemWidget_OnFortItemUpdated, bIngredientsChanged) == 0x000002, "Member 'FortItemWidget_OnFortItemUpdated::bIngredientsChanged' has a wrong offset!");

// DelegateFunction FortniteUI.FortItemWidget.OnGetItemToCompare__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortItemWidget_OnGetItemToCompare__DelegateSignature final
{
public:
	class UFortItem*                              ItemToCompare;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_OnGetItemToCompare__DelegateSignature) == 0x000008, "Wrong alignment on FortItemWidget_OnGetItemToCompare__DelegateSignature");
static_assert(sizeof(FortItemWidget_OnGetItemToCompare__DelegateSignature) == 0x000008, "Wrong size on FortItemWidget_OnGetItemToCompare__DelegateSignature");
static_assert(offsetof(FortItemWidget_OnGetItemToCompare__DelegateSignature, ItemToCompare) == 0x000000, "Member 'FortItemWidget_OnGetItemToCompare__DelegateSignature::ItemToCompare' has a wrong offset!");

// Function FortniteUI.FortItemWidget.SetCooldownMaterial
// 0x0008 (0x0008 - 0x0000)
struct FortItemWidget_SetCooldownMaterial final
{
public:
	class UMaterialInstanceDynamic*               NewCooldownMaterial;                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_SetCooldownMaterial) == 0x000008, "Wrong alignment on FortItemWidget_SetCooldownMaterial");
static_assert(sizeof(FortItemWidget_SetCooldownMaterial) == 0x000008, "Wrong size on FortItemWidget_SetCooldownMaterial");
static_assert(offsetof(FortItemWidget_SetCooldownMaterial, NewCooldownMaterial) == 0x000000, "Member 'FortItemWidget_SetCooldownMaterial::NewCooldownMaterial' has a wrong offset!");

// Function FortniteUI.FortItemWidget.SetItem
// 0x0010 (0x0010 - 0x0000)
struct FortItemWidget_SetItem final
{
public:
	const class UFortItem*                        InItem;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Param_QuantityOverride;                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemWidget_SetItem) == 0x000008, "Wrong alignment on FortItemWidget_SetItem");
static_assert(sizeof(FortItemWidget_SetItem) == 0x000010, "Wrong size on FortItemWidget_SetItem");
static_assert(offsetof(FortItemWidget_SetItem, InItem) == 0x000000, "Member 'FortItemWidget_SetItem::InItem' has a wrong offset!");
static_assert(offsetof(FortItemWidget_SetItem, Param_QuantityOverride) == 0x000008, "Member 'FortItemWidget_SetItem::Param_QuantityOverride' has a wrong offset!");

// Function FortniteUI.FortItemWidget.SetOnGetItemToCompareDelegate
// 0x0010 (0x0010 - 0x0000)
struct FortItemWidget_SetOnGetItemToCompareDelegate final
{
public:
	TDelegate<void(class UFortItem** ItemToCompare)> InDelegate;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_SetOnGetItemToCompareDelegate) == 0x000004, "Wrong alignment on FortItemWidget_SetOnGetItemToCompareDelegate");
static_assert(sizeof(FortItemWidget_SetOnGetItemToCompareDelegate) == 0x000010, "Wrong size on FortItemWidget_SetOnGetItemToCompareDelegate");
static_assert(offsetof(FortItemWidget_SetOnGetItemToCompareDelegate, InDelegate) == 0x000000, "Member 'FortItemWidget_SetOnGetItemToCompareDelegate::InDelegate' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetDescription
// 0x0018 (0x0018 - 0x0000)
struct FortItemWidget_GetDescription final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetDescription) == 0x000008, "Wrong alignment on FortItemWidget_GetDescription");
static_assert(sizeof(FortItemWidget_GetDescription) == 0x000018, "Wrong size on FortItemWidget_GetDescription");
static_assert(offsetof(FortItemWidget_GetDescription, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetDescription::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetDisplayName
// 0x0018 (0x0018 - 0x0000)
struct FortItemWidget_GetDisplayName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetDisplayName) == 0x000008, "Wrong alignment on FortItemWidget_GetDisplayName");
static_assert(sizeof(FortItemWidget_GetDisplayName) == 0x000018, "Wrong size on FortItemWidget_GetDisplayName");
static_assert(offsetof(FortItemWidget_GetDisplayName, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetDisplayName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetDurability
// 0x0004 (0x0004 - 0x0000)
struct FortItemWidget_GetDurability final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetDurability) == 0x000004, "Wrong alignment on FortItemWidget_GetDurability");
static_assert(sizeof(FortItemWidget_GetDurability) == 0x000004, "Wrong size on FortItemWidget_GetDurability");
static_assert(offsetof(FortItemWidget_GetDurability, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetDurability::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetIconTexture
// 0x0010 (0x0010 - 0x0000)
struct FortItemWidget_GetIconTexture final
{
public:
	EFortBrushSize                                InBrushSize;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetIconTexture) == 0x000008, "Wrong alignment on FortItemWidget_GetIconTexture");
static_assert(sizeof(FortItemWidget_GetIconTexture) == 0x000010, "Wrong size on FortItemWidget_GetIconTexture");
static_assert(offsetof(FortItemWidget_GetIconTexture, InBrushSize) == 0x000000, "Member 'FortItemWidget_GetIconTexture::InBrushSize' has a wrong offset!");
static_assert(offsetof(FortItemWidget_GetIconTexture, ReturnValue) == 0x000008, "Member 'FortItemWidget_GetIconTexture::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetItem
// 0x0008 (0x0008 - 0x0000)
struct FortItemWidget_GetItem final
{
public:
	class UFortItem*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetItem) == 0x000008, "Wrong alignment on FortItemWidget_GetItem");
static_assert(sizeof(FortItemWidget_GetItem) == 0x000008, "Wrong size on FortItemWidget_GetItem");
static_assert(offsetof(FortItemWidget_GetItem, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetLevel
// 0x0004 (0x0004 - 0x0000)
struct FortItemWidget_GetLevel final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetLevel) == 0x000004, "Wrong alignment on FortItemWidget_GetLevel");
static_assert(sizeof(FortItemWidget_GetLevel) == 0x000004, "Wrong size on FortItemWidget_GetLevel");
static_assert(offsetof(FortItemWidget_GetLevel, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetRarity
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_GetRarity final
{
public:
	EFortRarity                                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetRarity) == 0x000001, "Wrong alignment on FortItemWidget_GetRarity");
static_assert(sizeof(FortItemWidget_GetRarity) == 0x000001, "Wrong size on FortItemWidget_GetRarity");
static_assert(offsetof(FortItemWidget_GetRarity, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetRarity::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetStackCount
// 0x0004 (0x0004 - 0x0000)
struct FortItemWidget_GetStackCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetStackCount) == 0x000004, "Wrong alignment on FortItemWidget_GetStackCount");
static_assert(sizeof(FortItemWidget_GetStackCount) == 0x000004, "Wrong size on FortItemWidget_GetStackCount");
static_assert(offsetof(FortItemWidget_GetStackCount, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetStackCount::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.GetType
// 0x0004 (0x0004 - 0x0000)
struct FortItemWidget_GetType final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_GetType) == 0x000004, "Wrong alignment on FortItemWidget_GetType");
static_assert(sizeof(FortItemWidget_GetType) == 0x000004, "Wrong size on FortItemWidget_GetType");
static_assert(offsetof(FortItemWidget_GetType, ReturnValue) == 0x000000, "Member 'FortItemWidget_GetType::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.HasDurability
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_HasDurability final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_HasDurability) == 0x000001, "Wrong alignment on FortItemWidget_HasDurability");
static_assert(sizeof(FortItemWidget_HasDurability) == 0x000001, "Wrong size on FortItemWidget_HasDurability");
static_assert(offsetof(FortItemWidget_HasDurability, ReturnValue) == 0x000000, "Member 'FortItemWidget_HasDurability::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.HasLevel
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_HasLevel final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_HasLevel) == 0x000001, "Wrong alignment on FortItemWidget_HasLevel");
static_assert(sizeof(FortItemWidget_HasLevel) == 0x000001, "Wrong size on FortItemWidget_HasLevel");
static_assert(offsetof(FortItemWidget_HasLevel, ReturnValue) == 0x000000, "Member 'FortItemWidget_HasLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.HasSecondaryCategory
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_HasSecondaryCategory final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_HasSecondaryCategory) == 0x000001, "Wrong alignment on FortItemWidget_HasSecondaryCategory");
static_assert(sizeof(FortItemWidget_HasSecondaryCategory) == 0x000001, "Wrong size on FortItemWidget_HasSecondaryCategory");
static_assert(offsetof(FortItemWidget_HasSecondaryCategory, ReturnValue) == 0x000000, "Member 'FortItemWidget_HasSecondaryCategory::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.HasTertiaryCategory
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_HasTertiaryCategory final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_HasTertiaryCategory) == 0x000001, "Wrong alignment on FortItemWidget_HasTertiaryCategory");
static_assert(sizeof(FortItemWidget_HasTertiaryCategory) == 0x000001, "Wrong size on FortItemWidget_HasTertiaryCategory");
static_assert(offsetof(FortItemWidget_HasTertiaryCategory, ReturnValue) == 0x000000, "Member 'FortItemWidget_HasTertiaryCategory::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.IsEquipped
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_IsEquipped final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_IsEquipped) == 0x000001, "Wrong alignment on FortItemWidget_IsEquipped");
static_assert(sizeof(FortItemWidget_IsEquipped) == 0x000001, "Wrong size on FortItemWidget_IsEquipped");
static_assert(offsetof(FortItemWidget_IsEquipped, ReturnValue) == 0x000000, "Member 'FortItemWidget_IsEquipped::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.IsInventoryOverflowItem
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_IsInventoryOverflowItem final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_IsInventoryOverflowItem) == 0x000001, "Wrong alignment on FortItemWidget_IsInventoryOverflowItem");
static_assert(sizeof(FortItemWidget_IsInventoryOverflowItem) == 0x000001, "Wrong size on FortItemWidget_IsInventoryOverflowItem");
static_assert(offsetof(FortItemWidget_IsInventoryOverflowItem, ReturnValue) == 0x000000, "Member 'FortItemWidget_IsInventoryOverflowItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.IsItemValid
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_IsItemValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_IsItemValid) == 0x000001, "Wrong alignment on FortItemWidget_IsItemValid");
static_assert(sizeof(FortItemWidget_IsItemValid) == 0x000001, "Wrong size on FortItemWidget_IsItemValid");
static_assert(offsetof(FortItemWidget_IsItemValid, ReturnValue) == 0x000000, "Member 'FortItemWidget_IsItemValid::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.IsSchematic
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_IsSchematic final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_IsSchematic) == 0x000001, "Wrong alignment on FortItemWidget_IsSchematic");
static_assert(sizeof(FortItemWidget_IsSchematic) == 0x000001, "Wrong size on FortItemWidget_IsSchematic");
static_assert(offsetof(FortItemWidget_IsSchematic, ReturnValue) == 0x000000, "Member 'FortItemWidget_IsSchematic::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemWidget.IsSlotted
// 0x0001 (0x0001 - 0x0000)
struct FortItemWidget_IsSlotted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemWidget_IsSlotted) == 0x000001, "Wrong alignment on FortItemWidget_IsSlotted");
static_assert(sizeof(FortItemWidget_IsSlotted) == 0x000001, "Wrong size on FortItemWidget_IsSlotted");
static_assert(offsetof(FortItemWidget_IsSlotted, ReturnValue) == 0x000000, "Member 'FortItemWidget_IsSlotted::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortJournalQuestProgressBar.GetProgressDetails
// 0x0038 (0x0038 - 0x0000)
struct FortJournalQuestProgressBar_GetProgressDetails final
{
public:
	class FText                                   OutNumerator;                                      // 0x0000(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	class FText                                   OutDenominator;                                    // 0x0018(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	float                                         OutFraction;                                       // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortJournalQuestProgressBar_GetProgressDetails) == 0x000008, "Wrong alignment on FortJournalQuestProgressBar_GetProgressDetails");
static_assert(sizeof(FortJournalQuestProgressBar_GetProgressDetails) == 0x000038, "Wrong size on FortJournalQuestProgressBar_GetProgressDetails");
static_assert(offsetof(FortJournalQuestProgressBar_GetProgressDetails, OutNumerator) == 0x000000, "Member 'FortJournalQuestProgressBar_GetProgressDetails::OutNumerator' has a wrong offset!");
static_assert(offsetof(FortJournalQuestProgressBar_GetProgressDetails, OutDenominator) == 0x000018, "Member 'FortJournalQuestProgressBar_GetProgressDetails::OutDenominator' has a wrong offset!");
static_assert(offsetof(FortJournalQuestProgressBar_GetProgressDetails, OutFraction) == 0x000030, "Member 'FortJournalQuestProgressBar_GetProgressDetails::OutFraction' has a wrong offset!");

// Function FortniteUI.FortLeaderboardContext.CanShowGlobalLeaderboards
// 0x0001 (0x0001 - 0x0000)
struct FortLeaderboardContext_CanShowGlobalLeaderboards final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLeaderboardContext_CanShowGlobalLeaderboards) == 0x000001, "Wrong alignment on FortLeaderboardContext_CanShowGlobalLeaderboards");
static_assert(sizeof(FortLeaderboardContext_CanShowGlobalLeaderboards) == 0x000001, "Wrong size on FortLeaderboardContext_CanShowGlobalLeaderboards");
static_assert(offsetof(FortLeaderboardContext_CanShowGlobalLeaderboards, ReturnValue) == 0x000000, "Member 'FortLeaderboardContext_CanShowGlobalLeaderboards::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortLeaderboardContext.CanShowLeaderboards
// 0x0001 (0x0001 - 0x0000)
struct FortLeaderboardContext_CanShowLeaderboards final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLeaderboardContext_CanShowLeaderboards) == 0x000001, "Wrong alignment on FortLeaderboardContext_CanShowLeaderboards");
static_assert(sizeof(FortLeaderboardContext_CanShowLeaderboards) == 0x000001, "Wrong size on FortLeaderboardContext_CanShowLeaderboards");
static_assert(offsetof(FortLeaderboardContext_CanShowLeaderboards, ReturnValue) == 0x000000, "Member 'FortLeaderboardContext_CanShowLeaderboards::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortLeaderboardContext.CanShowStats
// 0x0001 (0x0001 - 0x0000)
struct FortLeaderboardContext_CanShowStats final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLeaderboardContext_CanShowStats) == 0x000001, "Wrong alignment on FortLeaderboardContext_CanShowStats");
static_assert(sizeof(FortLeaderboardContext_CanShowStats) == 0x000001, "Wrong size on FortLeaderboardContext_CanShowStats");
static_assert(offsetof(FortLeaderboardContext_CanShowStats, ReturnValue) == 0x000000, "Member 'FortLeaderboardContext_CanShowStats::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortLegacySlateBridgeWidget.SetOnCloseHandler
// 0x0010 (0x0010 - 0x0000)
struct FortLegacySlateBridgeWidget_SetOnCloseHandler final
{
public:
	TDelegate<void()>                             OnCloseHandler;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLegacySlateBridgeWidget_SetOnCloseHandler) == 0x000004, "Wrong alignment on FortLegacySlateBridgeWidget_SetOnCloseHandler");
static_assert(sizeof(FortLegacySlateBridgeWidget_SetOnCloseHandler) == 0x000010, "Wrong size on FortLegacySlateBridgeWidget_SetOnCloseHandler");
static_assert(offsetof(FortLegacySlateBridgeWidget_SetOnCloseHandler, OnCloseHandler) == 0x000000, "Member 'FortLegacySlateBridgeWidget_SetOnCloseHandler::OnCloseHandler' has a wrong offset!");

// Function FortniteUI.FortLegacySlateBridgeWidget.UpdateSlateWidget
// 0x0001 (0x0001 - 0x0000)
struct FortLegacySlateBridgeWidget_UpdateSlateWidget final
{
public:
	EFortLegacySlateWidget                        SlateWidgetType;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLegacySlateBridgeWidget_UpdateSlateWidget) == 0x000001, "Wrong alignment on FortLegacySlateBridgeWidget_UpdateSlateWidget");
static_assert(sizeof(FortLegacySlateBridgeWidget_UpdateSlateWidget) == 0x000001, "Wrong size on FortLegacySlateBridgeWidget_UpdateSlateWidget");
static_assert(offsetof(FortLegacySlateBridgeWidget_UpdateSlateWidget, SlateWidgetType) == 0x000000, "Member 'FortLegacySlateBridgeWidget_UpdateSlateWidget::SlateWidgetType' has a wrong offset!");

// Function FortniteUI.FortWorkerSetBonusIcon.SetGameplayTag
// 0x0008 (0x0008 - 0x0000)
struct FortWorkerSetBonusIcon_SetGameplayTag final
{
public:
	struct FGameplayTag                           InGameplayTag;                                     // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortWorkerSetBonusIcon_SetGameplayTag) == 0x000008, "Wrong alignment on FortWorkerSetBonusIcon_SetGameplayTag");
static_assert(sizeof(FortWorkerSetBonusIcon_SetGameplayTag) == 0x000008, "Wrong size on FortWorkerSetBonusIcon_SetGameplayTag");
static_assert(offsetof(FortWorkerSetBonusIcon_SetGameplayTag, InGameplayTag) == 0x000000, "Member 'FortWorkerSetBonusIcon_SetGameplayTag::InGameplayTag' has a wrong offset!");

// Function FortniteUI.FortLevelIndicator.HandleItemForComparisonChanged
// 0x0003 (0x0003 - 0x0000)
struct FortLevelIndicator_HandleItemForComparisonChanged final
{
public:
	bool                                          bItemChanged;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAmmoChanged;                                      // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIngredientsChanged;                               // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLevelIndicator_HandleItemForComparisonChanged) == 0x000001, "Wrong alignment on FortLevelIndicator_HandleItemForComparisonChanged");
static_assert(sizeof(FortLevelIndicator_HandleItemForComparisonChanged) == 0x000003, "Wrong size on FortLevelIndicator_HandleItemForComparisonChanged");
static_assert(offsetof(FortLevelIndicator_HandleItemForComparisonChanged, bItemChanged) == 0x000000, "Member 'FortLevelIndicator_HandleItemForComparisonChanged::bItemChanged' has a wrong offset!");
static_assert(offsetof(FortLevelIndicator_HandleItemForComparisonChanged, bAmmoChanged) == 0x000001, "Member 'FortLevelIndicator_HandleItemForComparisonChanged::bAmmoChanged' has a wrong offset!");
static_assert(offsetof(FortLevelIndicator_HandleItemForComparisonChanged, bIngredientsChanged) == 0x000002, "Member 'FortLevelIndicator_HandleItemForComparisonChanged::bIngredientsChanged' has a wrong offset!");

// Function FortniteUI.FortLevelIndicator.HandleItemToRepresentChanged
// 0x0003 (0x0003 - 0x0000)
struct FortLevelIndicator_HandleItemToRepresentChanged final
{
public:
	bool                                          bItemChanged;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAmmoChanged;                                      // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIngredientsChanged;                               // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLevelIndicator_HandleItemToRepresentChanged) == 0x000001, "Wrong alignment on FortLevelIndicator_HandleItemToRepresentChanged");
static_assert(sizeof(FortLevelIndicator_HandleItemToRepresentChanged) == 0x000003, "Wrong size on FortLevelIndicator_HandleItemToRepresentChanged");
static_assert(offsetof(FortLevelIndicator_HandleItemToRepresentChanged, bItemChanged) == 0x000000, "Member 'FortLevelIndicator_HandleItemToRepresentChanged::bItemChanged' has a wrong offset!");
static_assert(offsetof(FortLevelIndicator_HandleItemToRepresentChanged, bAmmoChanged) == 0x000001, "Member 'FortLevelIndicator_HandleItemToRepresentChanged::bAmmoChanged' has a wrong offset!");
static_assert(offsetof(FortLevelIndicator_HandleItemToRepresentChanged, bIngredientsChanged) == 0x000002, "Member 'FortLevelIndicator_HandleItemToRepresentChanged::bIngredientsChanged' has a wrong offset!");

// Function FortniteUI.FortLevelIndicator.SetItemForComparison
// 0x0008 (0x0008 - 0x0000)
struct FortLevelIndicator_SetItemForComparison final
{
public:
	class UFortItem*                              Param_ItemForComparison;                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLevelIndicator_SetItemForComparison) == 0x000008, "Wrong alignment on FortLevelIndicator_SetItemForComparison");
static_assert(sizeof(FortLevelIndicator_SetItemForComparison) == 0x000008, "Wrong size on FortLevelIndicator_SetItemForComparison");
static_assert(offsetof(FortLevelIndicator_SetItemForComparison, Param_ItemForComparison) == 0x000000, "Member 'FortLevelIndicator_SetItemForComparison::Param_ItemForComparison' has a wrong offset!");

// Function FortniteUI.FortLevelIndicator.SetItemToRepresent
// 0x0008 (0x0008 - 0x0000)
struct FortLevelIndicator_SetItemToRepresent final
{
public:
	class UFortItem*                              Param_ItemToRepresent;                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLevelIndicator_SetItemToRepresent) == 0x000008, "Wrong alignment on FortLevelIndicator_SetItemToRepresent");
static_assert(sizeof(FortLevelIndicator_SetItemToRepresent) == 0x000008, "Wrong size on FortLevelIndicator_SetItemToRepresent");
static_assert(offsetof(FortLevelIndicator_SetItemToRepresent, Param_ItemToRepresent) == 0x000000, "Member 'FortLevelIndicator_SetItemToRepresent::Param_ItemToRepresent' has a wrong offset!");

// Function FortniteUI.FortLevelIndicator.SetShouldShowMaximumLevel
// 0x0001 (0x0001 - 0x0000)
struct FortLevelIndicator_SetShouldShowMaximumLevel final
{
public:
	bool                                          InShouldShowMaximumLevel;                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLevelIndicator_SetShouldShowMaximumLevel) == 0x000001, "Wrong alignment on FortLevelIndicator_SetShouldShowMaximumLevel");
static_assert(sizeof(FortLevelIndicator_SetShouldShowMaximumLevel) == 0x000001, "Wrong size on FortLevelIndicator_SetShouldShowMaximumLevel");
static_assert(offsetof(FortLevelIndicator_SetShouldShowMaximumLevel, InShouldShowMaximumLevel) == 0x000000, "Member 'FortLevelIndicator_SetShouldShowMaximumLevel::InShouldShowMaximumLevel' has a wrong offset!");

// Function FortniteUI.FortListItem.SetData
// 0x0008 (0x0008 - 0x0000)
struct FortListItem_SetData final
{
public:
	class UObject*                                InData;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListItem_SetData) == 0x000008, "Wrong alignment on FortListItem_SetData");
static_assert(sizeof(FortListItem_SetData) == 0x000008, "Wrong size on FortListItem_SetData");
static_assert(offsetof(FortListItem_SetData, InData) == 0x000000, "Member 'FortListItem_SetData::InData' has a wrong offset!");

// Function FortniteUI.FortListItem.SetIndexInList
// 0x0004 (0x0004 - 0x0000)
struct FortListItem_SetIndexInList final
{
public:
	int32                                         InIndexInList;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListItem_SetIndexInList) == 0x000004, "Wrong alignment on FortListItem_SetIndexInList");
static_assert(sizeof(FortListItem_SetIndexInList) == 0x000004, "Wrong size on FortListItem_SetIndexInList");
static_assert(offsetof(FortListItem_SetIndexInList, InIndexInList) == 0x000000, "Member 'FortListItem_SetIndexInList::InIndexInList' has a wrong offset!");

// Function FortniteUI.FortListItem.SetSelected
// 0x0001 (0x0001 - 0x0000)
struct FortListItem_SetSelected final
{
public:
	bool                                          bSelected;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListItem_SetSelected) == 0x000001, "Wrong alignment on FortListItem_SetSelected");
static_assert(sizeof(FortListItem_SetSelected) == 0x000001, "Wrong size on FortListItem_SetSelected");
static_assert(offsetof(FortListItem_SetSelected, bSelected) == 0x000000, "Member 'FortListItem_SetSelected::bSelected' has a wrong offset!");

// Function FortniteUI.FortListItem.DoesItemHaveChildren
// 0x0004 (0x0004 - 0x0000)
struct FortListItem_DoesItemHaveChildren final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListItem_DoesItemHaveChildren) == 0x000004, "Wrong alignment on FortListItem_DoesItemHaveChildren");
static_assert(sizeof(FortListItem_DoesItemHaveChildren) == 0x000004, "Wrong size on FortListItem_DoesItemHaveChildren");
static_assert(offsetof(FortListItem_DoesItemHaveChildren, ReturnValue) == 0x000000, "Member 'FortListItem_DoesItemHaveChildren::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortListItem.GetIndentLevel
// 0x0004 (0x0004 - 0x0000)
struct FortListItem_GetIndentLevel final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListItem_GetIndentLevel) == 0x000004, "Wrong alignment on FortListItem_GetIndentLevel");
static_assert(sizeof(FortListItem_GetIndentLevel) == 0x000004, "Wrong size on FortListItem_GetIndentLevel");
static_assert(offsetof(FortListItem_GetIndentLevel, ReturnValue) == 0x000000, "Member 'FortListItem_GetIndentLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortListItem.GetSelectionMode
// 0x0001 (0x0001 - 0x0000)
struct FortListItem_GetSelectionMode final
{
public:
	ESelectionMode                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListItem_GetSelectionMode) == 0x000001, "Wrong alignment on FortListItem_GetSelectionMode");
static_assert(sizeof(FortListItem_GetSelectionMode) == 0x000001, "Wrong size on FortListItem_GetSelectionMode");
static_assert(offsetof(FortListItem_GetSelectionMode, ReturnValue) == 0x000000, "Member 'FortListItem_GetSelectionMode::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortListItem.IsItemExpanded
// 0x0001 (0x0001 - 0x0000)
struct FortListItem_IsItemExpanded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListItem_IsItemExpanded) == 0x000001, "Wrong alignment on FortListItem_IsItemExpanded");
static_assert(sizeof(FortListItem_IsItemExpanded) == 0x000001, "Wrong size on FortListItem_IsItemExpanded");
static_assert(offsetof(FortListItem_IsItemExpanded, ReturnValue) == 0x000000, "Member 'FortListItem_IsItemExpanded::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortListView.AddItem
// 0x0008 (0x0008 - 0x0000)
struct FortListView_AddItem final
{
public:
	class UObject*                                NewItem;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListView_AddItem) == 0x000008, "Wrong alignment on FortListView_AddItem");
static_assert(sizeof(FortListView_AddItem) == 0x000008, "Wrong size on FortListView_AddItem");
static_assert(offsetof(FortListView_AddItem, NewItem) == 0x000000, "Member 'FortListView_AddItem::NewItem' has a wrong offset!");

// Function FortniteUI.FortListView.RemoveItemAt
// 0x0004 (0x0004 - 0x0000)
struct FortListView_RemoveItemAt final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListView_RemoveItemAt) == 0x000004, "Wrong alignment on FortListView_RemoveItemAt");
static_assert(sizeof(FortListView_RemoveItemAt) == 0x000004, "Wrong size on FortListView_RemoveItemAt");
static_assert(offsetof(FortListView_RemoveItemAt, Param_Index) == 0x000000, "Member 'FortListView_RemoveItemAt::Param_Index' has a wrong offset!");

// Function FortniteUI.FortListView.SetDataProvider
// 0x0010 (0x0010 - 0x0000)
struct FortListView_SetDataProvider final
{
public:
	TArray<class UObject*>                        NewData;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListView_SetDataProvider) == 0x000008, "Wrong alignment on FortListView_SetDataProvider");
static_assert(sizeof(FortListView_SetDataProvider) == 0x000010, "Wrong size on FortListView_SetDataProvider");
static_assert(offsetof(FortListView_SetDataProvider, NewData) == 0x000000, "Member 'FortListView_SetDataProvider::NewData' has a wrong offset!");

// Function FortniteUI.FortListView.SetIndexSelected
// 0x0008 (0x0008 - 0x0000)
struct FortListView_SetIndexSelected final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortListView_SetIndexSelected) == 0x000004, "Wrong alignment on FortListView_SetIndexSelected");
static_assert(sizeof(FortListView_SetIndexSelected) == 0x000008, "Wrong size on FortListView_SetIndexSelected");
static_assert(offsetof(FortListView_SetIndexSelected, Param_Index) == 0x000000, "Member 'FortListView_SetIndexSelected::Param_Index' has a wrong offset!");
static_assert(offsetof(FortListView_SetIndexSelected, ReturnValue) == 0x000004, "Member 'FortListView_SetIndexSelected::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortListView.SetItemSelected
// 0x0010 (0x0010 - 0x0000)
struct FortListView_SetItemSelected final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortListView_SetItemSelected) == 0x000008, "Wrong alignment on FortListView_SetItemSelected");
static_assert(sizeof(FortListView_SetItemSelected) == 0x000010, "Wrong size on FortListView_SetItemSelected");
static_assert(offsetof(FortListView_SetItemSelected, Item) == 0x000000, "Member 'FortListView_SetItemSelected::Item' has a wrong offset!");
static_assert(offsetof(FortListView_SetItemSelected, ReturnValue) == 0x000008, "Member 'FortListView_SetItemSelected::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortListView.GetIndexForItem
// 0x0010 (0x0010 - 0x0000)
struct FortListView_GetIndexForItem final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortListView_GetIndexForItem) == 0x000008, "Wrong alignment on FortListView_GetIndexForItem");
static_assert(sizeof(FortListView_GetIndexForItem) == 0x000010, "Wrong size on FortListView_GetIndexForItem");
static_assert(offsetof(FortListView_GetIndexForItem, Item) == 0x000000, "Member 'FortListView_GetIndexForItem::Item' has a wrong offset!");
static_assert(offsetof(FortListView_GetIndexForItem, ReturnValue) == 0x000008, "Member 'FortListView_GetIndexForItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortListView.GetItemAt
// 0x0010 (0x0010 - 0x0000)
struct FortListView_GetItemAt final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortListView_GetItemAt) == 0x000008, "Wrong alignment on FortListView_GetItemAt");
static_assert(sizeof(FortListView_GetItemAt) == 0x000010, "Wrong size on FortListView_GetItemAt");
static_assert(offsetof(FortListView_GetItemAt, Param_Index) == 0x000000, "Member 'FortListView_GetItemAt::Param_Index' has a wrong offset!");
static_assert(offsetof(FortListView_GetItemAt, ReturnValue) == 0x000008, "Member 'FortListView_GetItemAt::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortLoginAccountSelect.ChooseLoginAccountType
// 0x0001 (0x0001 - 0x0000)
struct FortLoginAccountSelect_ChooseLoginAccountType final
{
public:
	EFortLoginAccountType                         LoginAccountType;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortLoginAccountSelect_ChooseLoginAccountType) == 0x000001, "Wrong alignment on FortLoginAccountSelect_ChooseLoginAccountType");
static_assert(sizeof(FortLoginAccountSelect_ChooseLoginAccountType) == 0x000001, "Wrong size on FortLoginAccountSelect_ChooseLoginAccountType");
static_assert(offsetof(FortLoginAccountSelect_ChooseLoginAccountType, LoginAccountType) == 0x000000, "Member 'FortLoginAccountSelect_ChooseLoginAccountType::LoginAccountType' has a wrong offset!");

// Function FortniteUI.FortMainTabsScreenBase.HandleFeatureNavigateRequest
// 0x0001 (0x0001 - 0x0000)
struct FortMainTabsScreenBase_HandleFeatureNavigateRequest final
{
public:
	EFortUIFeature                                Feature;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMainTabsScreenBase_HandleFeatureNavigateRequest) == 0x000001, "Wrong alignment on FortMainTabsScreenBase_HandleFeatureNavigateRequest");
static_assert(sizeof(FortMainTabsScreenBase_HandleFeatureNavigateRequest) == 0x000001, "Wrong size on FortMainTabsScreenBase_HandleFeatureNavigateRequest");
static_assert(offsetof(FortMainTabsScreenBase_HandleFeatureNavigateRequest, Feature) == 0x000000, "Member 'FortMainTabsScreenBase_HandleFeatureNavigateRequest::Feature' has a wrong offset!");

// Function FortniteUI.FortMainTabsScreenBase.HandleFeatureStateChanged
// 0x0003 (0x0003 - 0x0000)
struct FortMainTabsScreenBase_HandleFeatureStateChanged final
{
public:
	EFortUIFeature                                ChangedFeature;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortUIFeatureState                           NewState;                                          // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortUIFeatureStateReason                     Reason;                                            // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMainTabsScreenBase_HandleFeatureStateChanged) == 0x000001, "Wrong alignment on FortMainTabsScreenBase_HandleFeatureStateChanged");
static_assert(sizeof(FortMainTabsScreenBase_HandleFeatureStateChanged) == 0x000003, "Wrong size on FortMainTabsScreenBase_HandleFeatureStateChanged");
static_assert(offsetof(FortMainTabsScreenBase_HandleFeatureStateChanged, ChangedFeature) == 0x000000, "Member 'FortMainTabsScreenBase_HandleFeatureStateChanged::ChangedFeature' has a wrong offset!");
static_assert(offsetof(FortMainTabsScreenBase_HandleFeatureStateChanged, NewState) == 0x000001, "Member 'FortMainTabsScreenBase_HandleFeatureStateChanged::NewState' has a wrong offset!");
static_assert(offsetof(FortMainTabsScreenBase_HandleFeatureStateChanged, Reason) == 0x000002, "Member 'FortMainTabsScreenBase_HandleFeatureStateChanged::Reason' has a wrong offset!");

// Function FortniteUI.FortMainTabsScreenBase.HandleMainTabCreated
// 0x0010 (0x0010 - 0x0000)
struct FortMainTabsScreenBase_HandleMainTabCreated final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonButton*                          TabButton;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMainTabsScreenBase_HandleMainTabCreated) == 0x000008, "Wrong alignment on FortMainTabsScreenBase_HandleMainTabCreated");
static_assert(sizeof(FortMainTabsScreenBase_HandleMainTabCreated) == 0x000010, "Wrong size on FortMainTabsScreenBase_HandleMainTabCreated");
static_assert(offsetof(FortMainTabsScreenBase_HandleMainTabCreated, TabNameID) == 0x000000, "Member 'FortMainTabsScreenBase_HandleMainTabCreated::TabNameID' has a wrong offset!");
static_assert(offsetof(FortMainTabsScreenBase_HandleMainTabCreated, TabButton) == 0x000008, "Member 'FortMainTabsScreenBase_HandleMainTabCreated::TabButton' has a wrong offset!");

// Function FortniteUI.FortMainTabsScreenBase.HandleMainTabSelected
// 0x0008 (0x0008 - 0x0000)
struct FortMainTabsScreenBase_HandleMainTabSelected final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMainTabsScreenBase_HandleMainTabSelected) == 0x000004, "Wrong alignment on FortMainTabsScreenBase_HandleMainTabSelected");
static_assert(sizeof(FortMainTabsScreenBase_HandleMainTabSelected) == 0x000008, "Wrong size on FortMainTabsScreenBase_HandleMainTabSelected");
static_assert(offsetof(FortMainTabsScreenBase_HandleMainTabSelected, TabNameID) == 0x000000, "Member 'FortMainTabsScreenBase_HandleMainTabSelected::TabNameID' has a wrong offset!");

// Function FortniteUI.FortMicIndicatorWidget.OnPlayerMicAvailable
// 0x0001 (0x0001 - 0x0000)
struct FortMicIndicatorWidget_OnPlayerMicAvailable final
{
public:
	bool                                          bIsTalking;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMicIndicatorWidget_OnPlayerMicAvailable) == 0x000001, "Wrong alignment on FortMicIndicatorWidget_OnPlayerMicAvailable");
static_assert(sizeof(FortMicIndicatorWidget_OnPlayerMicAvailable) == 0x000001, "Wrong size on FortMicIndicatorWidget_OnPlayerMicAvailable");
static_assert(offsetof(FortMicIndicatorWidget_OnPlayerMicAvailable, bIsTalking) == 0x000000, "Member 'FortMicIndicatorWidget_OnPlayerMicAvailable::bIsTalking' has a wrong offset!");

// Function FortniteUI.FortMicIndicatorWidget.OnPlayerMuted
// 0x0001 (0x0001 - 0x0000)
struct FortMicIndicatorWidget_OnPlayerMuted final
{
public:
	bool                                          bIsMuted;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMicIndicatorWidget_OnPlayerMuted) == 0x000001, "Wrong alignment on FortMicIndicatorWidget_OnPlayerMuted");
static_assert(sizeof(FortMicIndicatorWidget_OnPlayerMuted) == 0x000001, "Wrong size on FortMicIndicatorWidget_OnPlayerMuted");
static_assert(offsetof(FortMicIndicatorWidget_OnPlayerMuted, bIsMuted) == 0x000000, "Member 'FortMicIndicatorWidget_OnPlayerMuted::bIsMuted' has a wrong offset!");

// Function FortniteUI.FortMicIndicatorWidget.OnPlayerTalkingChanged
// 0x0001 (0x0001 - 0x0000)
struct FortMicIndicatorWidget_OnPlayerTalkingChanged final
{
public:
	bool                                          bIsTalking;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMicIndicatorWidget_OnPlayerTalkingChanged) == 0x000001, "Wrong alignment on FortMicIndicatorWidget_OnPlayerTalkingChanged");
static_assert(sizeof(FortMicIndicatorWidget_OnPlayerTalkingChanged) == 0x000001, "Wrong size on FortMicIndicatorWidget_OnPlayerTalkingChanged");
static_assert(offsetof(FortMicIndicatorWidget_OnPlayerTalkingChanged, bIsTalking) == 0x000000, "Member 'FortMicIndicatorWidget_OnPlayerTalkingChanged::bIsTalking' has a wrong offset!");

// Function FortniteUI.FortMicIndicatorWidget.SetPlayerUniqueId
// 0x0028 (0x0028 - 0x0000)
struct FortMicIndicatorWidget_SetPlayerUniqueId final
{
public:
	struct FUniqueNetIdRepl                       InPlayerUniqueId;                                  // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMicIndicatorWidget_SetPlayerUniqueId) == 0x000008, "Wrong alignment on FortMicIndicatorWidget_SetPlayerUniqueId");
static_assert(sizeof(FortMicIndicatorWidget_SetPlayerUniqueId) == 0x000028, "Wrong size on FortMicIndicatorWidget_SetPlayerUniqueId");
static_assert(offsetof(FortMicIndicatorWidget_SetPlayerUniqueId, InPlayerUniqueId) == 0x000000, "Member 'FortMicIndicatorWidget_SetPlayerUniqueId::InPlayerUniqueId' has a wrong offset!");

// Function FortniteUI.FortMissionTracker.HandleDebugHUDObjectiveHeightChanged
// 0x0001 (0x0001 - 0x0000)
struct FortMissionTracker_HandleDebugHUDObjectiveHeightChanged final
{
public:
	bool                                          bIsDebugging;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMissionTracker_HandleDebugHUDObjectiveHeightChanged) == 0x000001, "Wrong alignment on FortMissionTracker_HandleDebugHUDObjectiveHeightChanged");
static_assert(sizeof(FortMissionTracker_HandleDebugHUDObjectiveHeightChanged) == 0x000001, "Wrong size on FortMissionTracker_HandleDebugHUDObjectiveHeightChanged");
static_assert(offsetof(FortMissionTracker_HandleDebugHUDObjectiveHeightChanged, bIsDebugging) == 0x000000, "Member 'FortMissionTracker_HandleDebugHUDObjectiveHeightChanged::bIsDebugging' has a wrong offset!");

// Function FortniteUI.FortMissionTracker.HandleSizeEstimateChanged
// 0x0008 (0x0008 - 0x0000)
struct FortMissionTracker_HandleSizeEstimateChanged final
{
public:
	class UObject*                                ChangedElement;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMissionTracker_HandleSizeEstimateChanged) == 0x000008, "Wrong alignment on FortMissionTracker_HandleSizeEstimateChanged");
static_assert(sizeof(FortMissionTracker_HandleSizeEstimateChanged) == 0x000008, "Wrong size on FortMissionTracker_HandleSizeEstimateChanged");
static_assert(offsetof(FortMissionTracker_HandleSizeEstimateChanged, ChangedElement) == 0x000000, "Member 'FortMissionTracker_HandleSizeEstimateChanged::ChangedElement' has a wrong offset!");

// Function FortniteUI.FortMissionTrackerList.HandleSizeEstimateChanged
// 0x0008 (0x0008 - 0x0000)
struct FortMissionTrackerList_HandleSizeEstimateChanged final
{
public:
	class UObject*                                ChangedElement;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMissionTrackerList_HandleSizeEstimateChanged) == 0x000008, "Wrong alignment on FortMissionTrackerList_HandleSizeEstimateChanged");
static_assert(sizeof(FortMissionTrackerList_HandleSizeEstimateChanged) == 0x000008, "Wrong size on FortMissionTrackerList_HandleSizeEstimateChanged");
static_assert(offsetof(FortMissionTrackerList_HandleSizeEstimateChanged, ChangedElement) == 0x000000, "Member 'FortMissionTrackerList_HandleSizeEstimateChanged::ChangedElement' has a wrong offset!");

// Function FortniteUI.FortMovieWidget.MediaDimensionsUpdated
// 0x0008 (0x0008 - 0x0000)
struct FortMovieWidget_MediaDimensionsUpdated final
{
public:
	float                                         NewWidth;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NewHeight;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMovieWidget_MediaDimensionsUpdated) == 0x000004, "Wrong alignment on FortMovieWidget_MediaDimensionsUpdated");
static_assert(sizeof(FortMovieWidget_MediaDimensionsUpdated) == 0x000008, "Wrong size on FortMovieWidget_MediaDimensionsUpdated");
static_assert(offsetof(FortMovieWidget_MediaDimensionsUpdated, NewWidth) == 0x000000, "Member 'FortMovieWidget_MediaDimensionsUpdated::NewWidth' has a wrong offset!");
static_assert(offsetof(FortMovieWidget_MediaDimensionsUpdated, NewHeight) == 0x000004, "Member 'FortMovieWidget_MediaDimensionsUpdated::NewHeight' has a wrong offset!");

// Function FortniteUI.FortMovieWidget.RequestPlayMovie
// 0x0001 (0x0001 - 0x0000)
struct FortMovieWidget_RequestPlayMovie final
{
public:
	bool                                          bShouldRewind;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMovieWidget_RequestPlayMovie) == 0x000001, "Wrong alignment on FortMovieWidget_RequestPlayMovie");
static_assert(sizeof(FortMovieWidget_RequestPlayMovie) == 0x000001, "Wrong size on FortMovieWidget_RequestPlayMovie");
static_assert(offsetof(FortMovieWidget_RequestPlayMovie, bShouldRewind) == 0x000000, "Member 'FortMovieWidget_RequestPlayMovie::bShouldRewind' has a wrong offset!");

// Function FortniteUI.FortMovieWidget.SetMediaSource
// 0x0008 (0x0008 - 0x0000)
struct FortMovieWidget_SetMediaSource final
{
public:
	class UMediaSource*                           InMediaSource;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMovieWidget_SetMediaSource) == 0x000008, "Wrong alignment on FortMovieWidget_SetMediaSource");
static_assert(sizeof(FortMovieWidget_SetMediaSource) == 0x000008, "Wrong size on FortMovieWidget_SetMediaSource");
static_assert(offsetof(FortMovieWidget_SetMediaSource, InMediaSource) == 0x000000, "Member 'FortMovieWidget_SetMediaSource::InMediaSource' has a wrong offset!");

// Function FortniteUI.FortMovieWidget.GetMediaPlayer
// 0x0008 (0x0008 - 0x0000)
struct FortMovieWidget_GetMediaPlayer final
{
public:
	class UMediaPlayer*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMovieWidget_GetMediaPlayer) == 0x000008, "Wrong alignment on FortMovieWidget_GetMediaPlayer");
static_assert(sizeof(FortMovieWidget_GetMediaPlayer) == 0x000008, "Wrong size on FortMovieWidget_GetMediaPlayer");
static_assert(offsetof(FortMovieWidget_GetMediaPlayer, ReturnValue) == 0x000000, "Member 'FortMovieWidget_GetMediaPlayer::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMovieWidget.GetMediaSoundComponent
// 0x0008 (0x0008 - 0x0000)
struct FortMovieWidget_GetMediaSoundComponent final
{
public:
	class UMediaSoundComponent*                   ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMovieWidget_GetMediaSoundComponent) == 0x000008, "Wrong alignment on FortMovieWidget_GetMediaSoundComponent");
static_assert(sizeof(FortMovieWidget_GetMediaSoundComponent) == 0x000008, "Wrong size on FortMovieWidget_GetMediaSoundComponent");
static_assert(offsetof(FortMovieWidget_GetMediaSoundComponent, ReturnValue) == 0x000000, "Member 'FortMovieWidget_GetMediaSoundComponent::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMovieWidget.GetMediaTexture
// 0x0008 (0x0008 - 0x0000)
struct FortMovieWidget_GetMediaTexture final
{
public:
	class UMediaTexture*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMovieWidget_GetMediaTexture) == 0x000008, "Wrong alignment on FortMovieWidget_GetMediaTexture");
static_assert(sizeof(FortMovieWidget_GetMediaTexture) == 0x000008, "Wrong size on FortMovieWidget_GetMediaTexture");
static_assert(offsetof(FortMovieWidget_GetMediaTexture, ReturnValue) == 0x000000, "Member 'FortMovieWidget_GetMediaTexture::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMovieWidget.HasPlayerForSource
// 0x0010 (0x0010 - 0x0000)
struct FortMovieWidget_HasPlayerForSource final
{
public:
	class UMediaSource*                           InMediaSource;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortMovieWidget_HasPlayerForSource) == 0x000008, "Wrong alignment on FortMovieWidget_HasPlayerForSource");
static_assert(sizeof(FortMovieWidget_HasPlayerForSource) == 0x000010, "Wrong size on FortMovieWidget_HasPlayerForSource");
static_assert(offsetof(FortMovieWidget_HasPlayerForSource, InMediaSource) == 0x000000, "Member 'FortMovieWidget_HasPlayerForSource::InMediaSource' has a wrong offset!");
static_assert(offsetof(FortMovieWidget_HasPlayerForSource, ReturnValue) == 0x000008, "Member 'FortMovieWidget_HasPlayerForSource::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxOfferDetailsBase.UpdateMtxOffer
// 0x0008 (0x0008 - 0x0000)
struct FortMtxOfferDetailsBase_UpdateMtxOffer final
{
public:
	class UFortMtxStoreOfferBase*                 MtxOfferWidget;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxOfferDetailsBase_UpdateMtxOffer) == 0x000008, "Wrong alignment on FortMtxOfferDetailsBase_UpdateMtxOffer");
static_assert(sizeof(FortMtxOfferDetailsBase_UpdateMtxOffer) == 0x000008, "Wrong size on FortMtxOfferDetailsBase_UpdateMtxOffer");
static_assert(offsetof(FortMtxOfferDetailsBase_UpdateMtxOffer, MtxOfferWidget) == 0x000000, "Member 'FortMtxOfferDetailsBase_UpdateMtxOffer::MtxOfferWidget' has a wrong offset!");

// Function FortniteUI.FortMtxOfferDetailsBase.GetBackground
// 0x0010 (0x0010 - 0x0000)
struct FortMtxOfferDetailsBase_GetBackground final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxOfferDetailsBase_GetBackground) == 0x000004, "Wrong alignment on FortMtxOfferDetailsBase_GetBackground");
static_assert(sizeof(FortMtxOfferDetailsBase_GetBackground) == 0x000010, "Wrong size on FortMtxOfferDetailsBase_GetBackground");
static_assert(offsetof(FortMtxOfferDetailsBase_GetBackground, ReturnValue) == 0x000000, "Member 'FortMtxOfferDetailsBase_GetBackground::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxOfferDetailsBase.GetBaseQuantity
// 0x0004 (0x0004 - 0x0000)
struct FortMtxOfferDetailsBase_GetBaseQuantity final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxOfferDetailsBase_GetBaseQuantity) == 0x000004, "Wrong alignment on FortMtxOfferDetailsBase_GetBaseQuantity");
static_assert(sizeof(FortMtxOfferDetailsBase_GetBaseQuantity) == 0x000004, "Wrong size on FortMtxOfferDetailsBase_GetBaseQuantity");
static_assert(offsetof(FortMtxOfferDetailsBase_GetBaseQuantity, ReturnValue) == 0x000000, "Member 'FortMtxOfferDetailsBase_GetBaseQuantity::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxOfferDetailsBase.GetBonusQuantity
// 0x0004 (0x0004 - 0x0000)
struct FortMtxOfferDetailsBase_GetBonusQuantity final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxOfferDetailsBase_GetBonusQuantity) == 0x000004, "Wrong alignment on FortMtxOfferDetailsBase_GetBonusQuantity");
static_assert(sizeof(FortMtxOfferDetailsBase_GetBonusQuantity) == 0x000004, "Wrong size on FortMtxOfferDetailsBase_GetBonusQuantity");
static_assert(offsetof(FortMtxOfferDetailsBase_GetBonusQuantity, ReturnValue) == 0x000000, "Member 'FortMtxOfferDetailsBase_GetBonusQuantity::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxOfferDetailsBase.GetDescription
// 0x0018 (0x0018 - 0x0000)
struct FortMtxOfferDetailsBase_GetDescription final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxOfferDetailsBase_GetDescription) == 0x000008, "Wrong alignment on FortMtxOfferDetailsBase_GetDescription");
static_assert(sizeof(FortMtxOfferDetailsBase_GetDescription) == 0x000018, "Wrong size on FortMtxOfferDetailsBase_GetDescription");
static_assert(offsetof(FortMtxOfferDetailsBase_GetDescription, ReturnValue) == 0x000000, "Member 'FortMtxOfferDetailsBase_GetDescription::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxOfferDetailsBase.GetDetailsAttributes
// 0x0010 (0x0010 - 0x0000)
struct FortMtxOfferDetailsBase_GetDetailsAttributes final
{
public:
	TArray<struct FFortMtxDetailsAttribute>       ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxOfferDetailsBase_GetDetailsAttributes) == 0x000008, "Wrong alignment on FortMtxOfferDetailsBase_GetDetailsAttributes");
static_assert(sizeof(FortMtxOfferDetailsBase_GetDetailsAttributes) == 0x000010, "Wrong size on FortMtxOfferDetailsBase_GetDetailsAttributes");
static_assert(offsetof(FortMtxOfferDetailsBase_GetDetailsAttributes, ReturnValue) == 0x000000, "Member 'FortMtxOfferDetailsBase_GetDetailsAttributes::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxOfferDetailsBase.GetDetailsImage
// 0x0078 (0x0078 - 0x0000)
struct FortMtxOfferDetailsBase_GetDetailsImage final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0078)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxOfferDetailsBase_GetDetailsImage) == 0x000008, "Wrong alignment on FortMtxOfferDetailsBase_GetDetailsImage");
static_assert(sizeof(FortMtxOfferDetailsBase_GetDetailsImage) == 0x000078, "Wrong size on FortMtxOfferDetailsBase_GetDetailsImage");
static_assert(offsetof(FortMtxOfferDetailsBase_GetDetailsImage, ReturnValue) == 0x000000, "Member 'FortMtxOfferDetailsBase_GetDetailsImage::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxOfferDetailsBase.GetGradient
// 0x0020 (0x0020 - 0x0000)
struct FortMtxOfferDetailsBase_GetGradient final
{
public:
	struct FFortMtxGradient                       ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxOfferDetailsBase_GetGradient) == 0x000004, "Wrong alignment on FortMtxOfferDetailsBase_GetGradient");
static_assert(sizeof(FortMtxOfferDetailsBase_GetGradient) == 0x000020, "Wrong size on FortMtxOfferDetailsBase_GetGradient");
static_assert(offsetof(FortMtxOfferDetailsBase_GetGradient, ReturnValue) == 0x000000, "Member 'FortMtxOfferDetailsBase_GetGradient::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxOfferDetailsBase.GetName
// 0x0018 (0x0018 - 0x0000)
struct FortMtxOfferDetailsBase_GetName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxOfferDetailsBase_GetName) == 0x000008, "Wrong alignment on FortMtxOfferDetailsBase_GetName");
static_assert(sizeof(FortMtxOfferDetailsBase_GetName) == 0x000018, "Wrong size on FortMtxOfferDetailsBase_GetName");
static_assert(offsetof(FortMtxOfferDetailsBase_GetName, ReturnValue) == 0x000000, "Member 'FortMtxOfferDetailsBase_GetName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxOfferDetailsBase.GetNormalPrice
// 0x0018 (0x0018 - 0x0000)
struct FortMtxOfferDetailsBase_GetNormalPrice final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxOfferDetailsBase_GetNormalPrice) == 0x000008, "Wrong alignment on FortMtxOfferDetailsBase_GetNormalPrice");
static_assert(sizeof(FortMtxOfferDetailsBase_GetNormalPrice) == 0x000018, "Wrong size on FortMtxOfferDetailsBase_GetNormalPrice");
static_assert(offsetof(FortMtxOfferDetailsBase_GetNormalPrice, ReturnValue) == 0x000000, "Member 'FortMtxOfferDetailsBase_GetNormalPrice::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxOfferDetailsBase.GetOfferId
// 0x0010 (0x0010 - 0x0000)
struct FortMtxOfferDetailsBase_GetOfferId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxOfferDetailsBase_GetOfferId) == 0x000008, "Wrong alignment on FortMtxOfferDetailsBase_GetOfferId");
static_assert(sizeof(FortMtxOfferDetailsBase_GetOfferId) == 0x000010, "Wrong size on FortMtxOfferDetailsBase_GetOfferId");
static_assert(offsetof(FortMtxOfferDetailsBase_GetOfferId, ReturnValue) == 0x000000, "Member 'FortMtxOfferDetailsBase_GetOfferId::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxOfferDetailsBase.GetSalePrice
// 0x0020 (0x0020 - 0x0000)
struct FortMtxOfferDetailsBase_GetSalePrice final
{
public:
	class FText                                   SalePrice;                                         // 0x0000(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortMtxOfferDetailsBase_GetSalePrice) == 0x000008, "Wrong alignment on FortMtxOfferDetailsBase_GetSalePrice");
static_assert(sizeof(FortMtxOfferDetailsBase_GetSalePrice) == 0x000020, "Wrong size on FortMtxOfferDetailsBase_GetSalePrice");
static_assert(offsetof(FortMtxOfferDetailsBase_GetSalePrice, SalePrice) == 0x000000, "Member 'FortMtxOfferDetailsBase_GetSalePrice::SalePrice' has a wrong offset!");
static_assert(offsetof(FortMtxOfferDetailsBase_GetSalePrice, ReturnValue) == 0x000018, "Member 'FortMtxOfferDetailsBase_GetSalePrice::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxOfferDetailsBase.GetStoreOfferType
// 0x0001 (0x0001 - 0x0000)
struct FortMtxOfferDetailsBase_GetStoreOfferType final
{
public:
	EFortMtxStoreOfferType                        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxOfferDetailsBase_GetStoreOfferType) == 0x000001, "Wrong alignment on FortMtxOfferDetailsBase_GetStoreOfferType");
static_assert(sizeof(FortMtxOfferDetailsBase_GetStoreOfferType) == 0x000001, "Wrong size on FortMtxOfferDetailsBase_GetStoreOfferType");
static_assert(offsetof(FortMtxOfferDetailsBase_GetStoreOfferType, ReturnValue) == 0x000000, "Member 'FortMtxOfferDetailsBase_GetStoreOfferType::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxOfferDetailsBase.GetTileImage
// 0x0078 (0x0078 - 0x0000)
struct FortMtxOfferDetailsBase_GetTileImage final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0078)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxOfferDetailsBase_GetTileImage) == 0x000008, "Wrong alignment on FortMtxOfferDetailsBase_GetTileImage");
static_assert(sizeof(FortMtxOfferDetailsBase_GetTileImage) == 0x000078, "Wrong size on FortMtxOfferDetailsBase_GetTileImage");
static_assert(offsetof(FortMtxOfferDetailsBase_GetTileImage, ReturnValue) == 0x000000, "Member 'FortMtxOfferDetailsBase_GetTileImage::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxStoreOfferBase.GetBackground
// 0x0010 (0x0010 - 0x0000)
struct FortMtxStoreOfferBase_GetBackground final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxStoreOfferBase_GetBackground) == 0x000004, "Wrong alignment on FortMtxStoreOfferBase_GetBackground");
static_assert(sizeof(FortMtxStoreOfferBase_GetBackground) == 0x000010, "Wrong size on FortMtxStoreOfferBase_GetBackground");
static_assert(offsetof(FortMtxStoreOfferBase_GetBackground, ReturnValue) == 0x000000, "Member 'FortMtxStoreOfferBase_GetBackground::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxStoreOfferBase.GetBaseQuantity
// 0x0004 (0x0004 - 0x0000)
struct FortMtxStoreOfferBase_GetBaseQuantity final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxStoreOfferBase_GetBaseQuantity) == 0x000004, "Wrong alignment on FortMtxStoreOfferBase_GetBaseQuantity");
static_assert(sizeof(FortMtxStoreOfferBase_GetBaseQuantity) == 0x000004, "Wrong size on FortMtxStoreOfferBase_GetBaseQuantity");
static_assert(offsetof(FortMtxStoreOfferBase_GetBaseQuantity, ReturnValue) == 0x000000, "Member 'FortMtxStoreOfferBase_GetBaseQuantity::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxStoreOfferBase.GetBonusQuantity
// 0x0004 (0x0004 - 0x0000)
struct FortMtxStoreOfferBase_GetBonusQuantity final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxStoreOfferBase_GetBonusQuantity) == 0x000004, "Wrong alignment on FortMtxStoreOfferBase_GetBonusQuantity");
static_assert(sizeof(FortMtxStoreOfferBase_GetBonusQuantity) == 0x000004, "Wrong size on FortMtxStoreOfferBase_GetBonusQuantity");
static_assert(offsetof(FortMtxStoreOfferBase_GetBonusQuantity, ReturnValue) == 0x000000, "Member 'FortMtxStoreOfferBase_GetBonusQuantity::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxStoreOfferBase.GetDescription
// 0x0018 (0x0018 - 0x0000)
struct FortMtxStoreOfferBase_GetDescription final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxStoreOfferBase_GetDescription) == 0x000008, "Wrong alignment on FortMtxStoreOfferBase_GetDescription");
static_assert(sizeof(FortMtxStoreOfferBase_GetDescription) == 0x000018, "Wrong size on FortMtxStoreOfferBase_GetDescription");
static_assert(offsetof(FortMtxStoreOfferBase_GetDescription, ReturnValue) == 0x000000, "Member 'FortMtxStoreOfferBase_GetDescription::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxStoreOfferBase.GetDetailsAttributes
// 0x0010 (0x0010 - 0x0000)
struct FortMtxStoreOfferBase_GetDetailsAttributes final
{
public:
	TArray<struct FFortMtxDetailsAttribute>       ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxStoreOfferBase_GetDetailsAttributes) == 0x000008, "Wrong alignment on FortMtxStoreOfferBase_GetDetailsAttributes");
static_assert(sizeof(FortMtxStoreOfferBase_GetDetailsAttributes) == 0x000010, "Wrong size on FortMtxStoreOfferBase_GetDetailsAttributes");
static_assert(offsetof(FortMtxStoreOfferBase_GetDetailsAttributes, ReturnValue) == 0x000000, "Member 'FortMtxStoreOfferBase_GetDetailsAttributes::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxStoreOfferBase.GetDetailsImage
// 0x0078 (0x0078 - 0x0000)
struct FortMtxStoreOfferBase_GetDetailsImage final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0078)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxStoreOfferBase_GetDetailsImage) == 0x000008, "Wrong alignment on FortMtxStoreOfferBase_GetDetailsImage");
static_assert(sizeof(FortMtxStoreOfferBase_GetDetailsImage) == 0x000078, "Wrong size on FortMtxStoreOfferBase_GetDetailsImage");
static_assert(offsetof(FortMtxStoreOfferBase_GetDetailsImage, ReturnValue) == 0x000000, "Member 'FortMtxStoreOfferBase_GetDetailsImage::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxStoreOfferBase.GetGradient
// 0x0020 (0x0020 - 0x0000)
struct FortMtxStoreOfferBase_GetGradient final
{
public:
	struct FFortMtxGradient                       ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxStoreOfferBase_GetGradient) == 0x000004, "Wrong alignment on FortMtxStoreOfferBase_GetGradient");
static_assert(sizeof(FortMtxStoreOfferBase_GetGradient) == 0x000020, "Wrong size on FortMtxStoreOfferBase_GetGradient");
static_assert(offsetof(FortMtxStoreOfferBase_GetGradient, ReturnValue) == 0x000000, "Member 'FortMtxStoreOfferBase_GetGradient::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxStoreOfferBase.GetName
// 0x0018 (0x0018 - 0x0000)
struct FortMtxStoreOfferBase_GetName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxStoreOfferBase_GetName) == 0x000008, "Wrong alignment on FortMtxStoreOfferBase_GetName");
static_assert(sizeof(FortMtxStoreOfferBase_GetName) == 0x000018, "Wrong size on FortMtxStoreOfferBase_GetName");
static_assert(offsetof(FortMtxStoreOfferBase_GetName, ReturnValue) == 0x000000, "Member 'FortMtxStoreOfferBase_GetName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxStoreOfferBase.GetNormalPrice
// 0x0018 (0x0018 - 0x0000)
struct FortMtxStoreOfferBase_GetNormalPrice final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxStoreOfferBase_GetNormalPrice) == 0x000008, "Wrong alignment on FortMtxStoreOfferBase_GetNormalPrice");
static_assert(sizeof(FortMtxStoreOfferBase_GetNormalPrice) == 0x000018, "Wrong size on FortMtxStoreOfferBase_GetNormalPrice");
static_assert(offsetof(FortMtxStoreOfferBase_GetNormalPrice, ReturnValue) == 0x000000, "Member 'FortMtxStoreOfferBase_GetNormalPrice::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxStoreOfferBase.GetOfferId
// 0x0010 (0x0010 - 0x0000)
struct FortMtxStoreOfferBase_GetOfferId final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxStoreOfferBase_GetOfferId) == 0x000008, "Wrong alignment on FortMtxStoreOfferBase_GetOfferId");
static_assert(sizeof(FortMtxStoreOfferBase_GetOfferId) == 0x000010, "Wrong size on FortMtxStoreOfferBase_GetOfferId");
static_assert(offsetof(FortMtxStoreOfferBase_GetOfferId, ReturnValue) == 0x000000, "Member 'FortMtxStoreOfferBase_GetOfferId::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxStoreOfferBase.GetSalePrice
// 0x0020 (0x0020 - 0x0000)
struct FortMtxStoreOfferBase_GetSalePrice final
{
public:
	class FText                                   SalePrice;                                         // 0x0000(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortMtxStoreOfferBase_GetSalePrice) == 0x000008, "Wrong alignment on FortMtxStoreOfferBase_GetSalePrice");
static_assert(sizeof(FortMtxStoreOfferBase_GetSalePrice) == 0x000020, "Wrong size on FortMtxStoreOfferBase_GetSalePrice");
static_assert(offsetof(FortMtxStoreOfferBase_GetSalePrice, SalePrice) == 0x000000, "Member 'FortMtxStoreOfferBase_GetSalePrice::SalePrice' has a wrong offset!");
static_assert(offsetof(FortMtxStoreOfferBase_GetSalePrice, ReturnValue) == 0x000018, "Member 'FortMtxStoreOfferBase_GetSalePrice::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxStoreOfferBase.GetStoreOfferType
// 0x0001 (0x0001 - 0x0000)
struct FortMtxStoreOfferBase_GetStoreOfferType final
{
public:
	EFortMtxStoreOfferType                        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxStoreOfferBase_GetStoreOfferType) == 0x000001, "Wrong alignment on FortMtxStoreOfferBase_GetStoreOfferType");
static_assert(sizeof(FortMtxStoreOfferBase_GetStoreOfferType) == 0x000001, "Wrong size on FortMtxStoreOfferBase_GetStoreOfferType");
static_assert(offsetof(FortMtxStoreOfferBase_GetStoreOfferType, ReturnValue) == 0x000000, "Member 'FortMtxStoreOfferBase_GetStoreOfferType::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxStoreOfferBase.GetTileImage
// 0x0078 (0x0078 - 0x0000)
struct FortMtxStoreOfferBase_GetTileImage final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x0078)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxStoreOfferBase_GetTileImage) == 0x000008, "Wrong alignment on FortMtxStoreOfferBase_GetTileImage");
static_assert(sizeof(FortMtxStoreOfferBase_GetTileImage) == 0x000078, "Wrong size on FortMtxStoreOfferBase_GetTileImage");
static_assert(offsetof(FortMtxStoreOfferBase_GetTileImage, ReturnValue) == 0x000000, "Member 'FortMtxStoreOfferBase_GetTileImage::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxStoreRootBase.GetStoreOfferType
// 0x00A8 (0x00A8 - 0x0000)
struct FortMtxStoreRootBase_GetStoreOfferType final
{
public:
	struct FMtxPackage                            Package;                                           // 0x0000(0x00A0)(Parm, NativeAccessSpecifierPublic)
	EFortMtxStoreOfferType                        ReturnValue;                                       // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortMtxStoreRootBase_GetStoreOfferType) == 0x000008, "Wrong alignment on FortMtxStoreRootBase_GetStoreOfferType");
static_assert(sizeof(FortMtxStoreRootBase_GetStoreOfferType) == 0x0000A8, "Wrong size on FortMtxStoreRootBase_GetStoreOfferType");
static_assert(offsetof(FortMtxStoreRootBase_GetStoreOfferType, Package) == 0x000000, "Member 'FortMtxStoreRootBase_GetStoreOfferType::Package' has a wrong offset!");
static_assert(offsetof(FortMtxStoreRootBase_GetStoreOfferType, ReturnValue) == 0x0000A0, "Member 'FortMtxStoreRootBase_GetStoreOfferType::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortMtxStoreRootBase.HandleMtxPackagesRead
// 0x0010 (0x0010 - 0x0000)
struct FortMtxStoreRootBase_HandleMtxPackagesRead final
{
public:
	TArray<struct FMtxPackage>                    Offers;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxStoreRootBase_HandleMtxPackagesRead) == 0x000008, "Wrong alignment on FortMtxStoreRootBase_HandleMtxPackagesRead");
static_assert(sizeof(FortMtxStoreRootBase_HandleMtxPackagesRead) == 0x000010, "Wrong size on FortMtxStoreRootBase_HandleMtxPackagesRead");
static_assert(offsetof(FortMtxStoreRootBase_HandleMtxPackagesRead, Offers) == 0x000000, "Member 'FortMtxStoreRootBase_HandleMtxPackagesRead::Offers' has a wrong offset!");

// Function FortniteUI.FortMtxStoreRootBase.OnMtxOfferGenerated
// 0x0008 (0x0008 - 0x0000)
struct FortMtxStoreRootBase_OnMtxOfferGenerated final
{
public:
	class UFortMtxStoreOfferBase*                 MtxOffer;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxStoreRootBase_OnMtxOfferGenerated) == 0x000008, "Wrong alignment on FortMtxStoreRootBase_OnMtxOfferGenerated");
static_assert(sizeof(FortMtxStoreRootBase_OnMtxOfferGenerated) == 0x000008, "Wrong size on FortMtxStoreRootBase_OnMtxOfferGenerated");
static_assert(offsetof(FortMtxStoreRootBase_OnMtxOfferGenerated, MtxOffer) == 0x000000, "Member 'FortMtxStoreRootBase_OnMtxOfferGenerated::MtxOffer' has a wrong offset!");

// Function FortniteUI.FortMtxStoreRootBase.AreOffersLoaded
// 0x0001 (0x0001 - 0x0000)
struct FortMtxStoreRootBase_AreOffersLoaded final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortMtxStoreRootBase_AreOffersLoaded) == 0x000001, "Wrong alignment on FortMtxStoreRootBase_AreOffersLoaded");
static_assert(sizeof(FortMtxStoreRootBase_AreOffersLoaded) == 0x000001, "Wrong size on FortMtxStoreRootBase_AreOffersLoaded");
static_assert(offsetof(FortMtxStoreRootBase_AreOffersLoaded, ReturnValue) == 0x000000, "Member 'FortMtxStoreRootBase_AreOffersLoaded::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortNodeCanvas.PanToNode
// 0x0010 (0x0010 - 0x0000)
struct FortNodeCanvas_PanToNode final
{
public:
	class FName                                   NodeID;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortAnimSpeed                                PanSpeed;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortNodeCanvas_PanToNode) == 0x000004, "Wrong alignment on FortNodeCanvas_PanToNode");
static_assert(sizeof(FortNodeCanvas_PanToNode) == 0x000010, "Wrong size on FortNodeCanvas_PanToNode");
static_assert(offsetof(FortNodeCanvas_PanToNode, NodeID) == 0x000000, "Member 'FortNodeCanvas_PanToNode::NodeID' has a wrong offset!");
static_assert(offsetof(FortNodeCanvas_PanToNode, PanSpeed) == 0x000008, "Member 'FortNodeCanvas_PanToNode::PanSpeed' has a wrong offset!");

// Function FortniteUI.FortNodeGraphHost.GetTokensNeededForNodePage
// 0x0018 (0x0018 - 0x0000)
struct FortNodeGraphHost_GetTokensNeededForNodePage final
{
public:
	const class UFortNodeCanvasHost*              Page;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortItemDefinition*>            OutTokens;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortNodeGraphHost_GetTokensNeededForNodePage) == 0x000008, "Wrong alignment on FortNodeGraphHost_GetTokensNeededForNodePage");
static_assert(sizeof(FortNodeGraphHost_GetTokensNeededForNodePage) == 0x000018, "Wrong size on FortNodeGraphHost_GetTokensNeededForNodePage");
static_assert(offsetof(FortNodeGraphHost_GetTokensNeededForNodePage, Page) == 0x000000, "Member 'FortNodeGraphHost_GetTokensNeededForNodePage::Page' has a wrong offset!");
static_assert(offsetof(FortNodeGraphHost_GetTokensNeededForNodePage, OutTokens) == 0x000008, "Member 'FortNodeGraphHost_GetTokensNeededForNodePage::OutTokens' has a wrong offset!");

// DelegateFunction FortniteUI.FortNodeGraphHost.OnPageShown__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortNodeGraphHost_OnPageShown__DelegateSignature final
{
public:
	class UFortNodeCanvasHost*                    Page;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortNodeGraphHost_OnPageShown__DelegateSignature) == 0x000008, "Wrong alignment on FortNodeGraphHost_OnPageShown__DelegateSignature");
static_assert(sizeof(FortNodeGraphHost_OnPageShown__DelegateSignature) == 0x000008, "Wrong size on FortNodeGraphHost_OnPageShown__DelegateSignature");
static_assert(offsetof(FortNodeGraphHost_OnPageShown__DelegateSignature, Page) == 0x000000, "Member 'FortNodeGraphHost_OnPageShown__DelegateSignature::Page' has a wrong offset!");

// Function FortniteUI.FortNodeGraphHost.SetBackgroundMaterial
// 0x0008 (0x0008 - 0x0000)
struct FortNodeGraphHost_SetBackgroundMaterial final
{
public:
	class UMaterialInstanceDynamic*               InBackgroundMaterial;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortNodeGraphHost_SetBackgroundMaterial) == 0x000008, "Wrong alignment on FortNodeGraphHost_SetBackgroundMaterial");
static_assert(sizeof(FortNodeGraphHost_SetBackgroundMaterial) == 0x000008, "Wrong size on FortNodeGraphHost_SetBackgroundMaterial");
static_assert(offsetof(FortNodeGraphHost_SetBackgroundMaterial, InBackgroundMaterial) == 0x000000, "Member 'FortNodeGraphHost_SetBackgroundMaterial::InBackgroundMaterial' has a wrong offset!");

// Function FortniteUI.FortNodeGraphHost.ShowPage
// 0x0020 (0x0020 - 0x0000)
struct FortNodeGraphHost_ShowPage final
{
public:
	class FName                                   NodePageId;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SourceNodeId;                                      // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   DestinationNodeId;                                 // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelectNode;                                       // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOnlyPanIfNew;                                     // 0x0019(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortNodeGraphHost_ShowPage) == 0x000004, "Wrong alignment on FortNodeGraphHost_ShowPage");
static_assert(sizeof(FortNodeGraphHost_ShowPage) == 0x000020, "Wrong size on FortNodeGraphHost_ShowPage");
static_assert(offsetof(FortNodeGraphHost_ShowPage, NodePageId) == 0x000000, "Member 'FortNodeGraphHost_ShowPage::NodePageId' has a wrong offset!");
static_assert(offsetof(FortNodeGraphHost_ShowPage, SourceNodeId) == 0x000008, "Member 'FortNodeGraphHost_ShowPage::SourceNodeId' has a wrong offset!");
static_assert(offsetof(FortNodeGraphHost_ShowPage, DestinationNodeId) == 0x000010, "Member 'FortNodeGraphHost_ShowPage::DestinationNodeId' has a wrong offset!");
static_assert(offsetof(FortNodeGraphHost_ShowPage, bSelectNode) == 0x000018, "Member 'FortNodeGraphHost_ShowPage::bSelectNode' has a wrong offset!");
static_assert(offsetof(FortNodeGraphHost_ShowPage, bOnlyPanIfNew) == 0x000019, "Member 'FortNodeGraphHost_ShowPage::bOnlyPanIfNew' has a wrong offset!");

// Function FortniteUI.FortNodeGraphHost.GetInitialNodeName
// 0x0008 (0x0008 - 0x0000)
struct FortNodeGraphHost_GetInitialNodeName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortNodeGraphHost_GetInitialNodeName) == 0x000004, "Wrong alignment on FortNodeGraphHost_GetInitialNodeName");
static_assert(sizeof(FortNodeGraphHost_GetInitialNodeName) == 0x000008, "Wrong size on FortNodeGraphHost_GetInitialNodeName");
static_assert(offsetof(FortNodeGraphHost_GetInitialNodeName, ReturnValue) == 0x000000, "Member 'FortNodeGraphHost_GetInitialNodeName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortNodeGraphHost.GetInitialNodePageName
// 0x0008 (0x0008 - 0x0000)
struct FortNodeGraphHost_GetInitialNodePageName final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortNodeGraphHost_GetInitialNodePageName) == 0x000004, "Wrong alignment on FortNodeGraphHost_GetInitialNodePageName");
static_assert(sizeof(FortNodeGraphHost_GetInitialNodePageName) == 0x000008, "Wrong size on FortNodeGraphHost_GetInitialNodePageName");
static_assert(offsetof(FortNodeGraphHost_GetInitialNodePageName, ReturnValue) == 0x000000, "Member 'FortNodeGraphHost_GetInitialNodePageName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortNodeGraphHost.GetNodePageName
// 0x0020 (0x0020 - 0x0000)
struct FortNodeGraphHost_GetNodePageName final
{
public:
	class FName                                   NodePageId;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortNodeGraphHost_GetNodePageName) == 0x000008, "Wrong alignment on FortNodeGraphHost_GetNodePageName");
static_assert(sizeof(FortNodeGraphHost_GetNodePageName) == 0x000020, "Wrong size on FortNodeGraphHost_GetNodePageName");
static_assert(offsetof(FortNodeGraphHost_GetNodePageName, NodePageId) == 0x000000, "Member 'FortNodeGraphHost_GetNodePageName::NodePageId' has a wrong offset!");
static_assert(offsetof(FortNodeGraphHost_GetNodePageName, ReturnValue) == 0x000008, "Member 'FortNodeGraphHost_GetNodePageName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortNodeGraphHost.GetPathToNode
// 0x0038 (0x0038 - 0x0000)
struct FortNodeGraphHost_GetPathToNode final
{
public:
	class FName                                   NodePageId;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   NodeID;                                            // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           Pages;                                             // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                           Nodes;                                             // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortNodeGraphHost_GetPathToNode) == 0x000008, "Wrong alignment on FortNodeGraphHost_GetPathToNode");
static_assert(sizeof(FortNodeGraphHost_GetPathToNode) == 0x000038, "Wrong size on FortNodeGraphHost_GetPathToNode");
static_assert(offsetof(FortNodeGraphHost_GetPathToNode, NodePageId) == 0x000000, "Member 'FortNodeGraphHost_GetPathToNode::NodePageId' has a wrong offset!");
static_assert(offsetof(FortNodeGraphHost_GetPathToNode, NodeID) == 0x000008, "Member 'FortNodeGraphHost_GetPathToNode::NodeID' has a wrong offset!");
static_assert(offsetof(FortNodeGraphHost_GetPathToNode, Pages) == 0x000010, "Member 'FortNodeGraphHost_GetPathToNode::Pages' has a wrong offset!");
static_assert(offsetof(FortNodeGraphHost_GetPathToNode, Nodes) == 0x000020, "Member 'FortNodeGraphHost_GetPathToNode::Nodes' has a wrong offset!");
static_assert(offsetof(FortNodeGraphHost_GetPathToNode, ReturnValue) == 0x000030, "Member 'FortNodeGraphHost_GetPathToNode::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortNodeGraphHost.GetWidgetTypeForNodePage
// 0x0010 (0x0010 - 0x0000)
struct FortNodeGraphHost_GetWidgetTypeForNodePage final
{
public:
	class FName                                   NodePageId;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortNodeGraphHost_GetWidgetTypeForNodePage) == 0x000008, "Wrong alignment on FortNodeGraphHost_GetWidgetTypeForNodePage");
static_assert(sizeof(FortNodeGraphHost_GetWidgetTypeForNodePage) == 0x000010, "Wrong size on FortNodeGraphHost_GetWidgetTypeForNodePage");
static_assert(offsetof(FortNodeGraphHost_GetWidgetTypeForNodePage, NodePageId) == 0x000000, "Member 'FortNodeGraphHost_GetWidgetTypeForNodePage::NodePageId' has a wrong offset!");
static_assert(offsetof(FortNodeGraphHost_GetWidgetTypeForNodePage, ReturnValue) == 0x000008, "Member 'FortNodeGraphHost_GetWidgetTypeForNodePage::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortNodeGraphHost.IsEarlyGame
// 0x0001 (0x0001 - 0x0000)
struct FortNodeGraphHost_IsEarlyGame final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortNodeGraphHost_IsEarlyGame) == 0x000001, "Wrong alignment on FortNodeGraphHost_IsEarlyGame");
static_assert(sizeof(FortNodeGraphHost_IsEarlyGame) == 0x000001, "Wrong size on FortNodeGraphHost_IsEarlyGame");
static_assert(offsetof(FortNodeGraphHost_IsEarlyGame, ReturnValue) == 0x000000, "Member 'FortNodeGraphHost_IsEarlyGame::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortNumericTextBlock.DirectlySet
// 0x0004 (0x0004 - 0x0000)
struct FortNumericTextBlock_DirectlySet final
{
public:
	int32                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortNumericTextBlock_DirectlySet) == 0x000004, "Wrong alignment on FortNumericTextBlock_DirectlySet");
static_assert(sizeof(FortNumericTextBlock_DirectlySet) == 0x000004, "Wrong size on FortNumericTextBlock_DirectlySet");
static_assert(offsetof(FortNumericTextBlock_DirectlySet, InValue) == 0x000000, "Member 'FortNumericTextBlock_DirectlySet::InValue' has a wrong offset!");

// Function FortniteUI.FortNumericTextBlock.InterpolateSet
// 0x000C (0x000C - 0x0000)
struct FortNumericTextBlock_InterpolateSet final
{
public:
	int32                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InUpdateLength;                                    // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InReportEndEarly;                                  // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortNumericTextBlock_InterpolateSet) == 0x000004, "Wrong alignment on FortNumericTextBlock_InterpolateSet");
static_assert(sizeof(FortNumericTextBlock_InterpolateSet) == 0x00000C, "Wrong size on FortNumericTextBlock_InterpolateSet");
static_assert(offsetof(FortNumericTextBlock_InterpolateSet, InValue) == 0x000000, "Member 'FortNumericTextBlock_InterpolateSet::InValue' has a wrong offset!");
static_assert(offsetof(FortNumericTextBlock_InterpolateSet, InUpdateLength) == 0x000004, "Member 'FortNumericTextBlock_InterpolateSet::InUpdateLength' has a wrong offset!");
static_assert(offsetof(FortNumericTextBlock_InterpolateSet, InReportEndEarly) == 0x000008, "Member 'FortNumericTextBlock_InterpolateSet::InReportEndEarly' has a wrong offset!");

// Function FortniteUI.FortNumericTextBlock.GetCurrentValue
// 0x0004 (0x0004 - 0x0000)
struct FortNumericTextBlock_GetCurrentValue final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortNumericTextBlock_GetCurrentValue) == 0x000004, "Wrong alignment on FortNumericTextBlock_GetCurrentValue");
static_assert(sizeof(FortNumericTextBlock_GetCurrentValue) == 0x000004, "Wrong size on FortNumericTextBlock_GetCurrentValue");
static_assert(offsetof(FortNumericTextBlock_GetCurrentValue, ReturnValue) == 0x000000, "Member 'FortNumericTextBlock_GetCurrentValue::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortNumericTextBlock.IsInterpolatingNumber
// 0x0001 (0x0001 - 0x0000)
struct FortNumericTextBlock_IsInterpolatingNumber final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortNumericTextBlock_IsInterpolatingNumber) == 0x000001, "Wrong alignment on FortNumericTextBlock_IsInterpolatingNumber");
static_assert(sizeof(FortNumericTextBlock_IsInterpolatingNumber) == 0x000001, "Wrong size on FortNumericTextBlock_IsInterpolatingNumber");
static_assert(offsetof(FortNumericTextBlock_IsInterpolatingNumber, ReturnValue) == 0x000000, "Member 'FortNumericTextBlock_IsInterpolatingNumber::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPartyTreeItemBase.ExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct FortPartyTreeItemBase_ExpansionChanged final
{
public:
	bool                                          bExpanded;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPartyTreeItemBase_ExpansionChanged) == 0x000001, "Wrong alignment on FortPartyTreeItemBase_ExpansionChanged");
static_assert(sizeof(FortPartyTreeItemBase_ExpansionChanged) == 0x000001, "Wrong size on FortPartyTreeItemBase_ExpansionChanged");
static_assert(offsetof(FortPartyTreeItemBase_ExpansionChanged, bExpanded) == 0x000000, "Member 'FortPartyTreeItemBase_ExpansionChanged::bExpanded' has a wrong offset!");

// Function FortniteUI.FortPerksWidget_NUI.OnGeneratePerk
// 0x00A0 (0x00A0 - 0x0000)
struct FortPerksWidget_NUI_OnGeneratePerk final
{
public:
	struct FFortUIPerk                            FortPerk;                                          // 0x0000(0x0098)(Parm, NativeAccessSpecifierPublic)
	class UFortPerkWidget_NUI*                    PerkWidget;                                        // 0x0098(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerksWidget_NUI_OnGeneratePerk) == 0x000008, "Wrong alignment on FortPerksWidget_NUI_OnGeneratePerk");
static_assert(sizeof(FortPerksWidget_NUI_OnGeneratePerk) == 0x0000A0, "Wrong size on FortPerksWidget_NUI_OnGeneratePerk");
static_assert(offsetof(FortPerksWidget_NUI_OnGeneratePerk, FortPerk) == 0x000000, "Member 'FortPerksWidget_NUI_OnGeneratePerk::FortPerk' has a wrong offset!");
static_assert(offsetof(FortPerksWidget_NUI_OnGeneratePerk, PerkWidget) == 0x000098, "Member 'FortPerksWidget_NUI_OnGeneratePerk::PerkWidget' has a wrong offset!");

// Function FortniteUI.FortPerksWidget_NUI.OnGeneratePerkTier
// 0x0028 (0x0028 - 0x0000)
struct FortPerksWidget_NUI_OnGeneratePerkTier final
{
public:
	struct FFortUIPerkTier                        FortPerkTier;                                      // 0x0000(0x0020)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class UFortPerkTierWidget_NUI*                PerkTierWidget;                                    // 0x0020(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerksWidget_NUI_OnGeneratePerkTier) == 0x000008, "Wrong alignment on FortPerksWidget_NUI_OnGeneratePerkTier");
static_assert(sizeof(FortPerksWidget_NUI_OnGeneratePerkTier) == 0x000028, "Wrong size on FortPerksWidget_NUI_OnGeneratePerkTier");
static_assert(offsetof(FortPerksWidget_NUI_OnGeneratePerkTier, FortPerkTier) == 0x000000, "Member 'FortPerksWidget_NUI_OnGeneratePerkTier::FortPerkTier' has a wrong offset!");
static_assert(offsetof(FortPerksWidget_NUI_OnGeneratePerkTier, PerkTierWidget) == 0x000020, "Member 'FortPerksWidget_NUI_OnGeneratePerkTier::PerkTierWidget' has a wrong offset!");

// Function FortniteUI.FortPerksWidget_NUI.SetHero
// 0x0008 (0x0008 - 0x0000)
struct FortPerksWidget_NUI_SetHero final
{
public:
	class UFortHero*                              InHero;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerksWidget_NUI_SetHero) == 0x000008, "Wrong alignment on FortPerksWidget_NUI_SetHero");
static_assert(sizeof(FortPerksWidget_NUI_SetHero) == 0x000008, "Wrong size on FortPerksWidget_NUI_SetHero");
static_assert(offsetof(FortPerksWidget_NUI_SetHero, InHero) == 0x000000, "Member 'FortPerksWidget_NUI_SetHero::InHero' has a wrong offset!");

// Function FortniteUI.FortPerksWidget_NUI.SetState
// 0x0010 (0x0010 - 0x0000)
struct FortPerksWidget_NUI_SetState final
{
public:
	EFortPerksWidgetState                         InState;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHero*                              InEvolutionOption;                                 // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerksWidget_NUI_SetState) == 0x000008, "Wrong alignment on FortPerksWidget_NUI_SetState");
static_assert(sizeof(FortPerksWidget_NUI_SetState) == 0x000010, "Wrong size on FortPerksWidget_NUI_SetState");
static_assert(offsetof(FortPerksWidget_NUI_SetState, InState) == 0x000000, "Member 'FortPerksWidget_NUI_SetState::InState' has a wrong offset!");
static_assert(offsetof(FortPerksWidget_NUI_SetState, InEvolutionOption) == 0x000008, "Member 'FortPerksWidget_NUI_SetState::InEvolutionOption' has a wrong offset!");

// Function FortniteUI.FortPerkTierWidget_NUI.OnGeneratePerk
// 0x00A0 (0x00A0 - 0x0000)
struct FortPerkTierWidget_NUI_OnGeneratePerk final
{
public:
	struct FFortUIPerk                            Perk;                                              // 0x0000(0x0098)(Parm, NativeAccessSpecifierPublic)
	class UFortPerkWidget_NUI*                    PerkWidget;                                        // 0x0098(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkTierWidget_NUI_OnGeneratePerk) == 0x000008, "Wrong alignment on FortPerkTierWidget_NUI_OnGeneratePerk");
static_assert(sizeof(FortPerkTierWidget_NUI_OnGeneratePerk) == 0x0000A0, "Wrong size on FortPerkTierWidget_NUI_OnGeneratePerk");
static_assert(offsetof(FortPerkTierWidget_NUI_OnGeneratePerk, Perk) == 0x000000, "Member 'FortPerkTierWidget_NUI_OnGeneratePerk::Perk' has a wrong offset!");
static_assert(offsetof(FortPerkTierWidget_NUI_OnGeneratePerk, PerkWidget) == 0x000098, "Member 'FortPerkTierWidget_NUI_OnGeneratePerk::PerkWidget' has a wrong offset!");

// Function FortniteUI.FortPerkWidget.GetIcon
// 0x0080 (0x0080 - 0x0000)
struct FortPerkWidget_GetIcon final
{
public:
	struct FSlateBrush                            Brush;                                             // 0x0000(0x0078)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortPerkWidget_GetIcon) == 0x000008, "Wrong alignment on FortPerkWidget_GetIcon");
static_assert(sizeof(FortPerkWidget_GetIcon) == 0x000080, "Wrong size on FortPerkWidget_GetIcon");
static_assert(offsetof(FortPerkWidget_GetIcon, Brush) == 0x000000, "Member 'FortPerkWidget_GetIcon::Brush' has a wrong offset!");
static_assert(offsetof(FortPerkWidget_GetIcon, ReturnValue) == 0x000078, "Member 'FortPerkWidget_GetIcon::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget.GetPerkTier
// 0x0001 (0x0001 - 0x0000)
struct FortPerkWidget_GetPerkTier final
{
public:
	EFortItemTier                                 ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_GetPerkTier) == 0x000001, "Wrong alignment on FortPerkWidget_GetPerkTier");
static_assert(sizeof(FortPerkWidget_GetPerkTier) == 0x000001, "Wrong size on FortPerkWidget_GetPerkTier");
static_assert(offsetof(FortPerkWidget_GetPerkTier, ReturnValue) == 0x000000, "Member 'FortPerkWidget_GetPerkTier::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget.GetRequiredLevel
// 0x0004 (0x0004 - 0x0000)
struct FortPerkWidget_GetRequiredLevel final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_GetRequiredLevel) == 0x000004, "Wrong alignment on FortPerkWidget_GetRequiredLevel");
static_assert(sizeof(FortPerkWidget_GetRequiredLevel) == 0x000004, "Wrong size on FortPerkWidget_GetRequiredLevel");
static_assert(offsetof(FortPerkWidget_GetRequiredLevel, ReturnValue) == 0x000000, "Member 'FortPerkWidget_GetRequiredLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget.GetSupportBonusType
// 0x0001 (0x0001 - 0x0000)
struct FortPerkWidget_GetSupportBonusType final
{
public:
	EFortSupportBonusType                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_GetSupportBonusType) == 0x000001, "Wrong alignment on FortPerkWidget_GetSupportBonusType");
static_assert(sizeof(FortPerkWidget_GetSupportBonusType) == 0x000001, "Wrong size on FortPerkWidget_GetSupportBonusType");
static_assert(offsetof(FortPerkWidget_GetSupportBonusType, ReturnValue) == 0x000000, "Member 'FortPerkWidget_GetSupportBonusType::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget.GetTooltipDescription
// 0x0010 (0x0010 - 0x0000)
struct FortPerkWidget_GetTooltipDescription final
{
public:
	TArray<class FText>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_GetTooltipDescription) == 0x000008, "Wrong alignment on FortPerkWidget_GetTooltipDescription");
static_assert(sizeof(FortPerkWidget_GetTooltipDescription) == 0x000010, "Wrong size on FortPerkWidget_GetTooltipDescription");
static_assert(offsetof(FortPerkWidget_GetTooltipDescription, ReturnValue) == 0x000000, "Member 'FortPerkWidget_GetTooltipDescription::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget.GetTooltipTitle
// 0x0018 (0x0018 - 0x0000)
struct FortPerkWidget_GetTooltipTitle final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_GetTooltipTitle) == 0x000008, "Wrong alignment on FortPerkWidget_GetTooltipTitle");
static_assert(sizeof(FortPerkWidget_GetTooltipTitle) == 0x000018, "Wrong size on FortPerkWidget_GetTooltipTitle");
static_assert(offsetof(FortPerkWidget_GetTooltipTitle, ReturnValue) == 0x000000, "Member 'FortPerkWidget_GetTooltipTitle::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget.HasAbility
// 0x0001 (0x0001 - 0x0000)
struct FortPerkWidget_HasAbility final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_HasAbility) == 0x000001, "Wrong alignment on FortPerkWidget_HasAbility");
static_assert(sizeof(FortPerkWidget_HasAbility) == 0x000001, "Wrong size on FortPerkWidget_HasAbility");
static_assert(offsetof(FortPerkWidget_HasAbility, ReturnValue) == 0x000000, "Member 'FortPerkWidget_HasAbility::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget.IsPerkHighlighted
// 0x0001 (0x0001 - 0x0000)
struct FortPerkWidget_IsPerkHighlighted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_IsPerkHighlighted) == 0x000001, "Wrong alignment on FortPerkWidget_IsPerkHighlighted");
static_assert(sizeof(FortPerkWidget_IsPerkHighlighted) == 0x000001, "Wrong size on FortPerkWidget_IsPerkHighlighted");
static_assert(offsetof(FortPerkWidget_IsPerkHighlighted, ReturnValue) == 0x000000, "Member 'FortPerkWidget_IsPerkHighlighted::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget.IsPerkUnlocked
// 0x0001 (0x0001 - 0x0000)
struct FortPerkWidget_IsPerkUnlocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_IsPerkUnlocked) == 0x000001, "Wrong alignment on FortPerkWidget_IsPerkUnlocked");
static_assert(sizeof(FortPerkWidget_IsPerkUnlocked) == 0x000001, "Wrong size on FortPerkWidget_IsPerkUnlocked");
static_assert(offsetof(FortPerkWidget_IsPerkUnlocked, ReturnValue) == 0x000000, "Member 'FortPerkWidget_IsPerkUnlocked::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget.IsTierPerk
// 0x0001 (0x0001 - 0x0000)
struct FortPerkWidget_IsTierPerk final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_IsTierPerk) == 0x000001, "Wrong alignment on FortPerkWidget_IsTierPerk");
static_assert(sizeof(FortPerkWidget_IsTierPerk) == 0x000001, "Wrong size on FortPerkWidget_IsTierPerk");
static_assert(offsetof(FortPerkWidget_IsTierPerk, ReturnValue) == 0x000000, "Member 'FortPerkWidget_IsTierPerk::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget_NUI.SetTooltipContext
// 0x0008 (0x0008 - 0x0000)
struct FortPerkWidget_NUI_SetTooltipContext final
{
public:
	const class UFortTooltipContext*              Param_TooltipContext;                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_NUI_SetTooltipContext) == 0x000008, "Wrong alignment on FortPerkWidget_NUI_SetTooltipContext");
static_assert(sizeof(FortPerkWidget_NUI_SetTooltipContext) == 0x000008, "Wrong size on FortPerkWidget_NUI_SetTooltipContext");
static_assert(offsetof(FortPerkWidget_NUI_SetTooltipContext, Param_TooltipContext) == 0x000000, "Member 'FortPerkWidget_NUI_SetTooltipContext::Param_TooltipContext' has a wrong offset!");

// Function FortniteUI.FortPerkWidget_NUI.GetCombinedTooltipDescription
// 0x0018 (0x0018 - 0x0000)
struct FortPerkWidget_NUI_GetCombinedTooltipDescription final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_NUI_GetCombinedTooltipDescription) == 0x000008, "Wrong alignment on FortPerkWidget_NUI_GetCombinedTooltipDescription");
static_assert(sizeof(FortPerkWidget_NUI_GetCombinedTooltipDescription) == 0x000018, "Wrong size on FortPerkWidget_NUI_GetCombinedTooltipDescription");
static_assert(offsetof(FortPerkWidget_NUI_GetCombinedTooltipDescription, ReturnValue) == 0x000000, "Member 'FortPerkWidget_NUI_GetCombinedTooltipDescription::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget_NUI.GetIcon
// 0x0080 (0x0080 - 0x0000)
struct FortPerkWidget_NUI_GetIcon final
{
public:
	struct FSlateBrush                            Brush;                                             // 0x0000(0x0078)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortPerkWidget_NUI_GetIcon) == 0x000008, "Wrong alignment on FortPerkWidget_NUI_GetIcon");
static_assert(sizeof(FortPerkWidget_NUI_GetIcon) == 0x000080, "Wrong size on FortPerkWidget_NUI_GetIcon");
static_assert(offsetof(FortPerkWidget_NUI_GetIcon, Brush) == 0x000000, "Member 'FortPerkWidget_NUI_GetIcon::Brush' has a wrong offset!");
static_assert(offsetof(FortPerkWidget_NUI_GetIcon, ReturnValue) == 0x000078, "Member 'FortPerkWidget_NUI_GetIcon::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget_NUI.GetPerkTier
// 0x0001 (0x0001 - 0x0000)
struct FortPerkWidget_NUI_GetPerkTier final
{
public:
	EFortItemTier                                 ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_NUI_GetPerkTier) == 0x000001, "Wrong alignment on FortPerkWidget_NUI_GetPerkTier");
static_assert(sizeof(FortPerkWidget_NUI_GetPerkTier) == 0x000001, "Wrong size on FortPerkWidget_NUI_GetPerkTier");
static_assert(offsetof(FortPerkWidget_NUI_GetPerkTier, ReturnValue) == 0x000000, "Member 'FortPerkWidget_NUI_GetPerkTier::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget_NUI.GetRequiredLevel
// 0x0004 (0x0004 - 0x0000)
struct FortPerkWidget_NUI_GetRequiredLevel final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_NUI_GetRequiredLevel) == 0x000004, "Wrong alignment on FortPerkWidget_NUI_GetRequiredLevel");
static_assert(sizeof(FortPerkWidget_NUI_GetRequiredLevel) == 0x000004, "Wrong size on FortPerkWidget_NUI_GetRequiredLevel");
static_assert(offsetof(FortPerkWidget_NUI_GetRequiredLevel, ReturnValue) == 0x000000, "Member 'FortPerkWidget_NUI_GetRequiredLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget_NUI.GetSupportBonusType
// 0x0001 (0x0001 - 0x0000)
struct FortPerkWidget_NUI_GetSupportBonusType final
{
public:
	EFortSupportBonusType                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_NUI_GetSupportBonusType) == 0x000001, "Wrong alignment on FortPerkWidget_NUI_GetSupportBonusType");
static_assert(sizeof(FortPerkWidget_NUI_GetSupportBonusType) == 0x000001, "Wrong size on FortPerkWidget_NUI_GetSupportBonusType");
static_assert(offsetof(FortPerkWidget_NUI_GetSupportBonusType, ReturnValue) == 0x000000, "Member 'FortPerkWidget_NUI_GetSupportBonusType::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget_NUI.GetTooltipDescription
// 0x0010 (0x0010 - 0x0000)
struct FortPerkWidget_NUI_GetTooltipDescription final
{
public:
	TArray<class FText>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_NUI_GetTooltipDescription) == 0x000008, "Wrong alignment on FortPerkWidget_NUI_GetTooltipDescription");
static_assert(sizeof(FortPerkWidget_NUI_GetTooltipDescription) == 0x000010, "Wrong size on FortPerkWidget_NUI_GetTooltipDescription");
static_assert(offsetof(FortPerkWidget_NUI_GetTooltipDescription, ReturnValue) == 0x000000, "Member 'FortPerkWidget_NUI_GetTooltipDescription::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget_NUI.GetTooltipTitle
// 0x0018 (0x0018 - 0x0000)
struct FortPerkWidget_NUI_GetTooltipTitle final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_NUI_GetTooltipTitle) == 0x000008, "Wrong alignment on FortPerkWidget_NUI_GetTooltipTitle");
static_assert(sizeof(FortPerkWidget_NUI_GetTooltipTitle) == 0x000018, "Wrong size on FortPerkWidget_NUI_GetTooltipTitle");
static_assert(offsetof(FortPerkWidget_NUI_GetTooltipTitle, ReturnValue) == 0x000000, "Member 'FortPerkWidget_NUI_GetTooltipTitle::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget_NUI.HasAbility
// 0x0001 (0x0001 - 0x0000)
struct FortPerkWidget_NUI_HasAbility final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_NUI_HasAbility) == 0x000001, "Wrong alignment on FortPerkWidget_NUI_HasAbility");
static_assert(sizeof(FortPerkWidget_NUI_HasAbility) == 0x000001, "Wrong size on FortPerkWidget_NUI_HasAbility");
static_assert(offsetof(FortPerkWidget_NUI_HasAbility, ReturnValue) == 0x000000, "Member 'FortPerkWidget_NUI_HasAbility::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget_NUI.IsPerkEmpty
// 0x0001 (0x0001 - 0x0000)
struct FortPerkWidget_NUI_IsPerkEmpty final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_NUI_IsPerkEmpty) == 0x000001, "Wrong alignment on FortPerkWidget_NUI_IsPerkEmpty");
static_assert(sizeof(FortPerkWidget_NUI_IsPerkEmpty) == 0x000001, "Wrong size on FortPerkWidget_NUI_IsPerkEmpty");
static_assert(offsetof(FortPerkWidget_NUI_IsPerkEmpty, ReturnValue) == 0x000000, "Member 'FortPerkWidget_NUI_IsPerkEmpty::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget_NUI.IsPerkHighlighted
// 0x0001 (0x0001 - 0x0000)
struct FortPerkWidget_NUI_IsPerkHighlighted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_NUI_IsPerkHighlighted) == 0x000001, "Wrong alignment on FortPerkWidget_NUI_IsPerkHighlighted");
static_assert(sizeof(FortPerkWidget_NUI_IsPerkHighlighted) == 0x000001, "Wrong size on FortPerkWidget_NUI_IsPerkHighlighted");
static_assert(offsetof(FortPerkWidget_NUI_IsPerkHighlighted, ReturnValue) == 0x000000, "Member 'FortPerkWidget_NUI_IsPerkHighlighted::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget_NUI.IsPerkUnlocked
// 0x0001 (0x0001 - 0x0000)
struct FortPerkWidget_NUI_IsPerkUnlocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_NUI_IsPerkUnlocked) == 0x000001, "Wrong alignment on FortPerkWidget_NUI_IsPerkUnlocked");
static_assert(sizeof(FortPerkWidget_NUI_IsPerkUnlocked) == 0x000001, "Wrong size on FortPerkWidget_NUI_IsPerkUnlocked");
static_assert(offsetof(FortPerkWidget_NUI_IsPerkUnlocked, ReturnValue) == 0x000000, "Member 'FortPerkWidget_NUI_IsPerkUnlocked::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPerkWidget_NUI.IsTierPerk
// 0x0001 (0x0001 - 0x0000)
struct FortPerkWidget_NUI_IsTierPerk final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPerkWidget_NUI_IsTierPerk) == 0x000001, "Wrong alignment on FortPerkWidget_NUI_IsTierPerk");
static_assert(sizeof(FortPerkWidget_NUI_IsTierPerk) == 0x000001, "Wrong size on FortPerkWidget_NUI_IsTierPerk");
static_assert(offsetof(FortPerkWidget_NUI_IsTierPerk, ReturnValue) == 0x000000, "Member 'FortPerkWidget_NUI_IsTierPerk::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPickerContext.PickerOptionAccepted
// 0x0004 (0x0004 - 0x0000)
struct FortPickerContext_PickerOptionAccepted final
{
public:
	int32                                         Option;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPickerContext_PickerOptionAccepted) == 0x000004, "Wrong alignment on FortPickerContext_PickerOptionAccepted");
static_assert(sizeof(FortPickerContext_PickerOptionAccepted) == 0x000004, "Wrong size on FortPickerContext_PickerOptionAccepted");
static_assert(offsetof(FortPickerContext_PickerOptionAccepted, Option) == 0x000000, "Member 'FortPickerContext_PickerOptionAccepted::Option' has a wrong offset!");

// Function FortniteUI.FortPickerContext.SetFortPickerData
// 0x0008 (0x0008 - 0x0000)
struct FortPickerContext_SetFortPickerData final
{
public:
	class UFortPickerData*                        Data;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPickerContext_SetFortPickerData) == 0x000008, "Wrong alignment on FortPickerContext_SetFortPickerData");
static_assert(sizeof(FortPickerContext_SetFortPickerData) == 0x000008, "Wrong size on FortPickerContext_SetFortPickerData");
static_assert(offsetof(FortPickerContext_SetFortPickerData, Data) == 0x000000, "Member 'FortPickerContext_SetFortPickerData::Data' has a wrong offset!");

// Function FortniteUI.FortPickerContext.DoesRadialCloseOnRelease
// 0x0001 (0x0001 - 0x0000)
struct FortPickerContext_DoesRadialCloseOnRelease final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPickerContext_DoesRadialCloseOnRelease) == 0x000001, "Wrong alignment on FortPickerContext_DoesRadialCloseOnRelease");
static_assert(sizeof(FortPickerContext_DoesRadialCloseOnRelease) == 0x000001, "Wrong size on FortPickerContext_DoesRadialCloseOnRelease");
static_assert(offsetof(FortPickerContext_DoesRadialCloseOnRelease, ReturnValue) == 0x000000, "Member 'FortPickerContext_DoesRadialCloseOnRelease::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPickerContext.GetListPickerOption
// 0x0010 (0x0010 - 0x0000)
struct FortPickerContext_GetListPickerOption final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPickerContext_GetListPickerOption) == 0x000008, "Wrong alignment on FortPickerContext_GetListPickerOption");
static_assert(sizeof(FortPickerContext_GetListPickerOption) == 0x000010, "Wrong size on FortPickerContext_GetListPickerOption");
static_assert(offsetof(FortPickerContext_GetListPickerOption, Param_Index) == 0x000000, "Member 'FortPickerContext_GetListPickerOption::Param_Index' has a wrong offset!");
static_assert(offsetof(FortPickerContext_GetListPickerOption, ReturnValue) == 0x000008, "Member 'FortPickerContext_GetListPickerOption::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPickerContext.GetNumPickerOptions
// 0x0004 (0x0004 - 0x0000)
struct FortPickerContext_GetNumPickerOptions final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPickerContext_GetNumPickerOptions) == 0x000004, "Wrong alignment on FortPickerContext_GetNumPickerOptions");
static_assert(sizeof(FortPickerContext_GetNumPickerOptions) == 0x000004, "Wrong size on FortPickerContext_GetNumPickerOptions");
static_assert(offsetof(FortPickerContext_GetNumPickerOptions, ReturnValue) == 0x000000, "Member 'FortPickerContext_GetNumPickerOptions::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPickerContext.GetRadialPickerOptionImageAndLabel
// 0x00A0 (0x00A0 - 0x0000)
struct FortPickerContext_GetRadialPickerOptionImageAndLabel final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Label;                                             // 0x0008(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	struct FSlateBrush                            Brush;                                             // 0x0020(0x0078)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          bOptionEnabled;                                    // 0x0098(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortPickerContext_GetRadialPickerOptionImageAndLabel) == 0x000008, "Wrong alignment on FortPickerContext_GetRadialPickerOptionImageAndLabel");
static_assert(sizeof(FortPickerContext_GetRadialPickerOptionImageAndLabel) == 0x0000A0, "Wrong size on FortPickerContext_GetRadialPickerOptionImageAndLabel");
static_assert(offsetof(FortPickerContext_GetRadialPickerOptionImageAndLabel, Param_Index) == 0x000000, "Member 'FortPickerContext_GetRadialPickerOptionImageAndLabel::Param_Index' has a wrong offset!");
static_assert(offsetof(FortPickerContext_GetRadialPickerOptionImageAndLabel, Label) == 0x000008, "Member 'FortPickerContext_GetRadialPickerOptionImageAndLabel::Label' has a wrong offset!");
static_assert(offsetof(FortPickerContext_GetRadialPickerOptionImageAndLabel, Brush) == 0x000020, "Member 'FortPickerContext_GetRadialPickerOptionImageAndLabel::Brush' has a wrong offset!");
static_assert(offsetof(FortPickerContext_GetRadialPickerOptionImageAndLabel, bOptionEnabled) == 0x000098, "Member 'FortPickerContext_GetRadialPickerOptionImageAndLabel::bOptionEnabled' has a wrong offset!");

// Function FortniteUI.FortPickerContext.GetRadialPickerOptionItem
// 0x0018 (0x0018 - 0x0000)
struct FortPickerContext_GetRadialPickerOptionItem final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              Item;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOptionEnabled;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortPickerContext_GetRadialPickerOptionItem) == 0x000008, "Wrong alignment on FortPickerContext_GetRadialPickerOptionItem");
static_assert(sizeof(FortPickerContext_GetRadialPickerOptionItem) == 0x000018, "Wrong size on FortPickerContext_GetRadialPickerOptionItem");
static_assert(offsetof(FortPickerContext_GetRadialPickerOptionItem, Param_Index) == 0x000000, "Member 'FortPickerContext_GetRadialPickerOptionItem::Param_Index' has a wrong offset!");
static_assert(offsetof(FortPickerContext_GetRadialPickerOptionItem, Item) == 0x000008, "Member 'FortPickerContext_GetRadialPickerOptionItem::Item' has a wrong offset!");
static_assert(offsetof(FortPickerContext_GetRadialPickerOptionItem, bOptionEnabled) == 0x000010, "Member 'FortPickerContext_GetRadialPickerOptionItem::bOptionEnabled' has a wrong offset!");

// Function FortniteUI.FortPickerContext.UseLeftThumbstick
// 0x0001 (0x0001 - 0x0000)
struct FortPickerContext_UseLeftThumbstick final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPickerContext_UseLeftThumbstick) == 0x000001, "Wrong alignment on FortPickerContext_UseLeftThumbstick");
static_assert(sizeof(FortPickerContext_UseLeftThumbstick) == 0x000001, "Wrong size on FortPickerContext_UseLeftThumbstick");
static_assert(offsetof(FortPickerContext_UseLeftThumbstick, ReturnValue) == 0x000000, "Member 'FortPickerContext_UseLeftThumbstick::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPlayerProfileBannerEditor.SetBannerColor
// 0x0008 (0x0008 - 0x0000)
struct FortPlayerProfileBannerEditor_SetBannerColor final
{
public:
	class FName                                   Color;                                             // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerProfileBannerEditor_SetBannerColor) == 0x000004, "Wrong alignment on FortPlayerProfileBannerEditor_SetBannerColor");
static_assert(sizeof(FortPlayerProfileBannerEditor_SetBannerColor) == 0x000008, "Wrong size on FortPlayerProfileBannerEditor_SetBannerColor");
static_assert(offsetof(FortPlayerProfileBannerEditor_SetBannerColor, Color) == 0x000000, "Member 'FortPlayerProfileBannerEditor_SetBannerColor::Color' has a wrong offset!");

// Function FortniteUI.FortPlayerProfileBannerEditor.SetBannerIcon
// 0x0008 (0x0008 - 0x0000)
struct FortPlayerProfileBannerEditor_SetBannerIcon final
{
public:
	class FName                                   Icon;                                              // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerProfileBannerEditor_SetBannerIcon) == 0x000004, "Wrong alignment on FortPlayerProfileBannerEditor_SetBannerIcon");
static_assert(sizeof(FortPlayerProfileBannerEditor_SetBannerIcon) == 0x000008, "Wrong size on FortPlayerProfileBannerEditor_SetBannerIcon");
static_assert(offsetof(FortPlayerProfileBannerEditor_SetBannerIcon, Icon) == 0x000000, "Member 'FortPlayerProfileBannerEditor_SetBannerIcon::Icon' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.HandleOnLocalPlayerInfoUpdated
// 0x01A8 (0x01A8 - 0x0000)
struct FortPlayerTrackerBase_HandleOnLocalPlayerInfoUpdated final
{
public:
	struct FFortTeamMemberInfo                    NewInfo;                                           // 0x0000(0x01A8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_HandleOnLocalPlayerInfoUpdated) == 0x000008, "Wrong alignment on FortPlayerTrackerBase_HandleOnLocalPlayerInfoUpdated");
static_assert(sizeof(FortPlayerTrackerBase_HandleOnLocalPlayerInfoUpdated) == 0x0001A8, "Wrong size on FortPlayerTrackerBase_HandleOnLocalPlayerInfoUpdated");
static_assert(offsetof(FortPlayerTrackerBase_HandleOnLocalPlayerInfoUpdated, NewInfo) == 0x000000, "Member 'FortPlayerTrackerBase_HandleOnLocalPlayerInfoUpdated::NewInfo' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.HandleOnPlayerIdUpdated
// 0x0028 (0x0028 - 0x0000)
struct FortPlayerTrackerBase_HandleOnPlayerIdUpdated final
{
public:
	struct FUniqueNetIdRepl                       NewInfo;                                           // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_HandleOnPlayerIdUpdated) == 0x000008, "Wrong alignment on FortPlayerTrackerBase_HandleOnPlayerIdUpdated");
static_assert(sizeof(FortPlayerTrackerBase_HandleOnPlayerIdUpdated) == 0x000028, "Wrong size on FortPlayerTrackerBase_HandleOnPlayerIdUpdated");
static_assert(offsetof(FortPlayerTrackerBase_HandleOnPlayerIdUpdated, NewInfo) == 0x000000, "Member 'FortPlayerTrackerBase_HandleOnPlayerIdUpdated::NewInfo' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.HandleTeamMemberAdded
// 0x01A8 (0x01A8 - 0x0000)
struct FortPlayerTrackerBase_HandleTeamMemberAdded final
{
public:
	struct FFortTeamMemberInfo                    NewInfo;                                           // 0x0000(0x01A8)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_HandleTeamMemberAdded) == 0x000008, "Wrong alignment on FortPlayerTrackerBase_HandleTeamMemberAdded");
static_assert(sizeof(FortPlayerTrackerBase_HandleTeamMemberAdded) == 0x0001A8, "Wrong size on FortPlayerTrackerBase_HandleTeamMemberAdded");
static_assert(offsetof(FortPlayerTrackerBase_HandleTeamMemberAdded, NewInfo) == 0x000000, "Member 'FortPlayerTrackerBase_HandleTeamMemberAdded::NewInfo' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.HandleTeamMemberRemoved
// 0x0004 (0x0004 - 0x0000)
struct FortPlayerTrackerBase_HandleTeamMemberRemoved final
{
public:
	int32                                         RemovedIndex;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_HandleTeamMemberRemoved) == 0x000004, "Wrong alignment on FortPlayerTrackerBase_HandleTeamMemberRemoved");
static_assert(sizeof(FortPlayerTrackerBase_HandleTeamMemberRemoved) == 0x000004, "Wrong size on FortPlayerTrackerBase_HandleTeamMemberRemoved");
static_assert(offsetof(FortPlayerTrackerBase_HandleTeamMemberRemoved, RemovedIndex) == 0x000000, "Member 'FortPlayerTrackerBase_HandleTeamMemberRemoved::RemovedIndex' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.HandleTeamMemberStateChanged
// 0x01A8 (0x01A8 - 0x0000)
struct FortPlayerTrackerBase_HandleTeamMemberStateChanged final
{
public:
	struct FFortTeamMemberInfo                    NewInfo;                                           // 0x0000(0x01A8)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_HandleTeamMemberStateChanged) == 0x000008, "Wrong alignment on FortPlayerTrackerBase_HandleTeamMemberStateChanged");
static_assert(sizeof(FortPlayerTrackerBase_HandleTeamMemberStateChanged) == 0x0001A8, "Wrong size on FortPlayerTrackerBase_HandleTeamMemberStateChanged");
static_assert(offsetof(FortPlayerTrackerBase_HandleTeamMemberStateChanged, NewInfo) == 0x000000, "Member 'FortPlayerTrackerBase_HandleTeamMemberStateChanged::NewInfo' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.HandleTeamMemberStateChangedId
// 0x01A8 (0x01A8 - 0x0000)
struct FortPlayerTrackerBase_HandleTeamMemberStateChangedId final
{
public:
	struct FFortTeamMemberInfo                    NewInfo;                                           // 0x0000(0x01A8)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_HandleTeamMemberStateChangedId) == 0x000008, "Wrong alignment on FortPlayerTrackerBase_HandleTeamMemberStateChangedId");
static_assert(sizeof(FortPlayerTrackerBase_HandleTeamMemberStateChangedId) == 0x0001A8, "Wrong size on FortPlayerTrackerBase_HandleTeamMemberStateChangedId");
static_assert(offsetof(FortPlayerTrackerBase_HandleTeamMemberStateChangedId, NewInfo) == 0x000000, "Member 'FortPlayerTrackerBase_HandleTeamMemberStateChangedId::NewInfo' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.OnPlayerInfoChanged
// 0x01A8 (0x01A8 - 0x0000)
struct FortPlayerTrackerBase_OnPlayerInfoChanged final
{
public:
	struct FFortTeamMemberInfo                    NewInfo;                                           // 0x0000(0x01A8)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_OnPlayerInfoChanged) == 0x000008, "Wrong alignment on FortPlayerTrackerBase_OnPlayerInfoChanged");
static_assert(sizeof(FortPlayerTrackerBase_OnPlayerInfoChanged) == 0x0001A8, "Wrong size on FortPlayerTrackerBase_OnPlayerInfoChanged");
static_assert(offsetof(FortPlayerTrackerBase_OnPlayerInfoChanged, NewInfo) == 0x000000, "Member 'FortPlayerTrackerBase_OnPlayerInfoChanged::NewInfo' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.SetTeamMember
// 0x0004 (0x0004 - 0x0000)
struct FortPlayerTrackerBase_SetTeamMember final
{
public:
	int32                                         InPlayerIndex;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_SetTeamMember) == 0x000004, "Wrong alignment on FortPlayerTrackerBase_SetTeamMember");
static_assert(sizeof(FortPlayerTrackerBase_SetTeamMember) == 0x000004, "Wrong size on FortPlayerTrackerBase_SetTeamMember");
static_assert(offsetof(FortPlayerTrackerBase_SetTeamMember, InPlayerIndex) == 0x000000, "Member 'FortPlayerTrackerBase_SetTeamMember::InPlayerIndex' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.SetUniqueId
// 0x0028 (0x0028 - 0x0000)
struct FortPlayerTrackerBase_SetUniqueId final
{
public:
	struct FUniqueNetIdRepl                       InUniqueId;                                        // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_SetUniqueId) == 0x000008, "Wrong alignment on FortPlayerTrackerBase_SetUniqueId");
static_assert(sizeof(FortPlayerTrackerBase_SetUniqueId) == 0x000028, "Wrong size on FortPlayerTrackerBase_SetUniqueId");
static_assert(offsetof(FortPlayerTrackerBase_SetUniqueId, InUniqueId) == 0x000000, "Member 'FortPlayerTrackerBase_SetUniqueId::InUniqueId' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.SetUniqueIdInternal
// 0x0028 (0x0028 - 0x0000)
struct FortPlayerTrackerBase_SetUniqueIdInternal final
{
public:
	struct FUniqueNetIdRepl                       InUniqueId;                                        // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_SetUniqueIdInternal) == 0x000008, "Wrong alignment on FortPlayerTrackerBase_SetUniqueIdInternal");
static_assert(sizeof(FortPlayerTrackerBase_SetUniqueIdInternal) == 0x000028, "Wrong size on FortPlayerTrackerBase_SetUniqueIdInternal");
static_assert(offsetof(FortPlayerTrackerBase_SetUniqueIdInternal, InUniqueId) == 0x000000, "Member 'FortPlayerTrackerBase_SetUniqueIdInternal::InUniqueId' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.GetBaseFortitude
// 0x0004 (0x0004 - 0x0000)
struct FortPlayerTrackerBase_GetBaseFortitude final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_GetBaseFortitude) == 0x000004, "Wrong alignment on FortPlayerTrackerBase_GetBaseFortitude");
static_assert(sizeof(FortPlayerTrackerBase_GetBaseFortitude) == 0x000004, "Wrong size on FortPlayerTrackerBase_GetBaseFortitude");
static_assert(offsetof(FortPlayerTrackerBase_GetBaseFortitude, ReturnValue) == 0x000000, "Member 'FortPlayerTrackerBase_GetBaseFortitude::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.GetBaseOffense
// 0x0004 (0x0004 - 0x0000)
struct FortPlayerTrackerBase_GetBaseOffense final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_GetBaseOffense) == 0x000004, "Wrong alignment on FortPlayerTrackerBase_GetBaseOffense");
static_assert(sizeof(FortPlayerTrackerBase_GetBaseOffense) == 0x000004, "Wrong size on FortPlayerTrackerBase_GetBaseOffense");
static_assert(offsetof(FortPlayerTrackerBase_GetBaseOffense, ReturnValue) == 0x000000, "Member 'FortPlayerTrackerBase_GetBaseOffense::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.GetBaseResistance
// 0x0004 (0x0004 - 0x0000)
struct FortPlayerTrackerBase_GetBaseResistance final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_GetBaseResistance) == 0x000004, "Wrong alignment on FortPlayerTrackerBase_GetBaseResistance");
static_assert(sizeof(FortPlayerTrackerBase_GetBaseResistance) == 0x000004, "Wrong size on FortPlayerTrackerBase_GetBaseResistance");
static_assert(offsetof(FortPlayerTrackerBase_GetBaseResistance, ReturnValue) == 0x000000, "Member 'FortPlayerTrackerBase_GetBaseResistance::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.GetBaseTech
// 0x0004 (0x0004 - 0x0000)
struct FortPlayerTrackerBase_GetBaseTech final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_GetBaseTech) == 0x000004, "Wrong alignment on FortPlayerTrackerBase_GetBaseTech");
static_assert(sizeof(FortPlayerTrackerBase_GetBaseTech) == 0x000004, "Wrong size on FortPlayerTrackerBase_GetBaseTech");
static_assert(offsetof(FortPlayerTrackerBase_GetBaseTech, ReturnValue) == 0x000000, "Member 'FortPlayerTrackerBase_GetBaseTech::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.GetBuffedFortitude
// 0x0004 (0x0004 - 0x0000)
struct FortPlayerTrackerBase_GetBuffedFortitude final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_GetBuffedFortitude) == 0x000004, "Wrong alignment on FortPlayerTrackerBase_GetBuffedFortitude");
static_assert(sizeof(FortPlayerTrackerBase_GetBuffedFortitude) == 0x000004, "Wrong size on FortPlayerTrackerBase_GetBuffedFortitude");
static_assert(offsetof(FortPlayerTrackerBase_GetBuffedFortitude, ReturnValue) == 0x000000, "Member 'FortPlayerTrackerBase_GetBuffedFortitude::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.GetBuffedOffense
// 0x0004 (0x0004 - 0x0000)
struct FortPlayerTrackerBase_GetBuffedOffense final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_GetBuffedOffense) == 0x000004, "Wrong alignment on FortPlayerTrackerBase_GetBuffedOffense");
static_assert(sizeof(FortPlayerTrackerBase_GetBuffedOffense) == 0x000004, "Wrong size on FortPlayerTrackerBase_GetBuffedOffense");
static_assert(offsetof(FortPlayerTrackerBase_GetBuffedOffense, ReturnValue) == 0x000000, "Member 'FortPlayerTrackerBase_GetBuffedOffense::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.GetBuffedResistance
// 0x0004 (0x0004 - 0x0000)
struct FortPlayerTrackerBase_GetBuffedResistance final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_GetBuffedResistance) == 0x000004, "Wrong alignment on FortPlayerTrackerBase_GetBuffedResistance");
static_assert(sizeof(FortPlayerTrackerBase_GetBuffedResistance) == 0x000004, "Wrong size on FortPlayerTrackerBase_GetBuffedResistance");
static_assert(offsetof(FortPlayerTrackerBase_GetBuffedResistance, ReturnValue) == 0x000000, "Member 'FortPlayerTrackerBase_GetBuffedResistance::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.GetBuffedTech
// 0x0004 (0x0004 - 0x0000)
struct FortPlayerTrackerBase_GetBuffedTech final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_GetBuffedTech) == 0x000004, "Wrong alignment on FortPlayerTrackerBase_GetBuffedTech");
static_assert(sizeof(FortPlayerTrackerBase_GetBuffedTech) == 0x000004, "Wrong size on FortPlayerTrackerBase_GetBuffedTech");
static_assert(offsetof(FortPlayerTrackerBase_GetBuffedTech, ReturnValue) == 0x000000, "Member 'FortPlayerTrackerBase_GetBuffedTech::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.GetHomebaseRating
// 0x000C (0x000C - 0x0000)
struct FortPlayerTrackerBase_GetHomebaseRating final
{
public:
	int32                                         Rating;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ProgressFraction;                                  // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortPlayerTrackerBase_GetHomebaseRating) == 0x000004, "Wrong alignment on FortPlayerTrackerBase_GetHomebaseRating");
static_assert(sizeof(FortPlayerTrackerBase_GetHomebaseRating) == 0x00000C, "Wrong size on FortPlayerTrackerBase_GetHomebaseRating");
static_assert(offsetof(FortPlayerTrackerBase_GetHomebaseRating, Rating) == 0x000000, "Member 'FortPlayerTrackerBase_GetHomebaseRating::Rating' has a wrong offset!");
static_assert(offsetof(FortPlayerTrackerBase_GetHomebaseRating, ProgressFraction) == 0x000004, "Member 'FortPlayerTrackerBase_GetHomebaseRating::ProgressFraction' has a wrong offset!");
static_assert(offsetof(FortPlayerTrackerBase_GetHomebaseRating, ReturnValue) == 0x000008, "Member 'FortPlayerTrackerBase_GetHomebaseRating::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.GetModifiedHomebaseRating
// 0x000C (0x000C - 0x0000)
struct FortPlayerTrackerBase_GetModifiedHomebaseRating final
{
public:
	int32                                         Rating;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ProgressFraction;                                  // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortPlayerTrackerBase_GetModifiedHomebaseRating) == 0x000004, "Wrong alignment on FortPlayerTrackerBase_GetModifiedHomebaseRating");
static_assert(sizeof(FortPlayerTrackerBase_GetModifiedHomebaseRating) == 0x00000C, "Wrong size on FortPlayerTrackerBase_GetModifiedHomebaseRating");
static_assert(offsetof(FortPlayerTrackerBase_GetModifiedHomebaseRating, Rating) == 0x000000, "Member 'FortPlayerTrackerBase_GetModifiedHomebaseRating::Rating' has a wrong offset!");
static_assert(offsetof(FortPlayerTrackerBase_GetModifiedHomebaseRating, ProgressFraction) == 0x000004, "Member 'FortPlayerTrackerBase_GetModifiedHomebaseRating::ProgressFraction' has a wrong offset!");
static_assert(offsetof(FortPlayerTrackerBase_GetModifiedHomebaseRating, ReturnValue) == 0x000008, "Member 'FortPlayerTrackerBase_GetModifiedHomebaseRating::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.GetTeamFortitude
// 0x0004 (0x0004 - 0x0000)
struct FortPlayerTrackerBase_GetTeamFortitude final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_GetTeamFortitude) == 0x000004, "Wrong alignment on FortPlayerTrackerBase_GetTeamFortitude");
static_assert(sizeof(FortPlayerTrackerBase_GetTeamFortitude) == 0x000004, "Wrong size on FortPlayerTrackerBase_GetTeamFortitude");
static_assert(offsetof(FortPlayerTrackerBase_GetTeamFortitude, ReturnValue) == 0x000000, "Member 'FortPlayerTrackerBase_GetTeamFortitude::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.GetTeamOffense
// 0x0004 (0x0004 - 0x0000)
struct FortPlayerTrackerBase_GetTeamOffense final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_GetTeamOffense) == 0x000004, "Wrong alignment on FortPlayerTrackerBase_GetTeamOffense");
static_assert(sizeof(FortPlayerTrackerBase_GetTeamOffense) == 0x000004, "Wrong size on FortPlayerTrackerBase_GetTeamOffense");
static_assert(offsetof(FortPlayerTrackerBase_GetTeamOffense, ReturnValue) == 0x000000, "Member 'FortPlayerTrackerBase_GetTeamOffense::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.GetTeamResistance
// 0x0004 (0x0004 - 0x0000)
struct FortPlayerTrackerBase_GetTeamResistance final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_GetTeamResistance) == 0x000004, "Wrong alignment on FortPlayerTrackerBase_GetTeamResistance");
static_assert(sizeof(FortPlayerTrackerBase_GetTeamResistance) == 0x000004, "Wrong size on FortPlayerTrackerBase_GetTeamResistance");
static_assert(offsetof(FortPlayerTrackerBase_GetTeamResistance, ReturnValue) == 0x000000, "Member 'FortPlayerTrackerBase_GetTeamResistance::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.GetTeamTech
// 0x0004 (0x0004 - 0x0000)
struct FortPlayerTrackerBase_GetTeamTech final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_GetTeamTech) == 0x000004, "Wrong alignment on FortPlayerTrackerBase_GetTeamTech");
static_assert(sizeof(FortPlayerTrackerBase_GetTeamTech) == 0x000004, "Wrong size on FortPlayerTrackerBase_GetTeamTech");
static_assert(offsetof(FortPlayerTrackerBase_GetTeamTech, ReturnValue) == 0x000000, "Member 'FortPlayerTrackerBase_GetTeamTech::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPlayerTrackerBase.HasModifiedStats
// 0x0001 (0x0001 - 0x0000)
struct FortPlayerTrackerBase_HasModifiedStats final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPlayerTrackerBase_HasModifiedStats) == 0x000001, "Wrong alignment on FortPlayerTrackerBase_HasModifiedStats");
static_assert(sizeof(FortPlayerTrackerBase_HasModifiedStats) == 0x000001, "Wrong size on FortPlayerTrackerBase_HasModifiedStats");
static_assert(offsetof(FortPlayerTrackerBase_HasModifiedStats, ReturnValue) == 0x000000, "Member 'FortPlayerTrackerBase_HasModifiedStats::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortPrivacyBase.AddPrivacyButton
// 0x0010 (0x0010 - 0x0000)
struct FortPrivacyBase_AddPrivacyButton final
{
public:
	class UCommonButton*                          PrivacyButton;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPartyType                                    PartyType;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortPrivacyBase_AddPrivacyButton) == 0x000008, "Wrong alignment on FortPrivacyBase_AddPrivacyButton");
static_assert(sizeof(FortPrivacyBase_AddPrivacyButton) == 0x000010, "Wrong size on FortPrivacyBase_AddPrivacyButton");
static_assert(offsetof(FortPrivacyBase_AddPrivacyButton, PrivacyButton) == 0x000000, "Member 'FortPrivacyBase_AddPrivacyButton::PrivacyButton' has a wrong offset!");
static_assert(offsetof(FortPrivacyBase_AddPrivacyButton, PartyType) == 0x000008, "Member 'FortPrivacyBase_AddPrivacyButton::PartyType' has a wrong offset!");

// Function FortniteUI.FortPrivacyBase.HandleAllowFriendsButtonClicked
// 0x0008 (0x0008 - 0x0000)
struct FortPrivacyBase_HandleAllowFriendsButtonClicked final
{
public:
	class UCommonButton*                          SelectedPrivacyButton;                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPrivacyBase_HandleAllowFriendsButtonClicked) == 0x000008, "Wrong alignment on FortPrivacyBase_HandleAllowFriendsButtonClicked");
static_assert(sizeof(FortPrivacyBase_HandleAllowFriendsButtonClicked) == 0x000008, "Wrong size on FortPrivacyBase_HandleAllowFriendsButtonClicked");
static_assert(offsetof(FortPrivacyBase_HandleAllowFriendsButtonClicked, SelectedPrivacyButton) == 0x000000, "Member 'FortPrivacyBase_HandleAllowFriendsButtonClicked::SelectedPrivacyButton' has a wrong offset!");

// Function FortniteUI.FortPrivacyBase.HandlePrivacyButtonSelected
// 0x0010 (0x0010 - 0x0000)
struct FortPrivacyBase_HandlePrivacyButtonSelected final
{
public:
	class UCommonButton*                          SelectedPrivacyButton;                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ButtonIndex;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortPrivacyBase_HandlePrivacyButtonSelected) == 0x000008, "Wrong alignment on FortPrivacyBase_HandlePrivacyButtonSelected");
static_assert(sizeof(FortPrivacyBase_HandlePrivacyButtonSelected) == 0x000010, "Wrong size on FortPrivacyBase_HandlePrivacyButtonSelected");
static_assert(offsetof(FortPrivacyBase_HandlePrivacyButtonSelected, SelectedPrivacyButton) == 0x000000, "Member 'FortPrivacyBase_HandlePrivacyButtonSelected::SelectedPrivacyButton' has a wrong offset!");
static_assert(offsetof(FortPrivacyBase_HandlePrivacyButtonSelected, ButtonIndex) == 0x000008, "Member 'FortPrivacyBase_HandlePrivacyButtonSelected::ButtonIndex' has a wrong offset!");

// Function FortniteUI.FortPrivacyBase.SetTencentBuild
// 0x0001 (0x0001 - 0x0000)
struct FortPrivacyBase_SetTencentBuild final
{
public:
	bool                                          bInIsTencentBuild;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortPrivacyBase_SetTencentBuild) == 0x000001, "Wrong alignment on FortPrivacyBase_SetTencentBuild");
static_assert(sizeof(FortPrivacyBase_SetTencentBuild) == 0x000001, "Wrong size on FortPrivacyBase_SetTencentBuild");
static_assert(offsetof(FortPrivacyBase_SetTencentBuild, bInIsTencentBuild) == 0x000000, "Member 'FortPrivacyBase_SetTencentBuild::bInIsTencentBuild' has a wrong offset!");

// Function FortniteUI.FortQuestExpiresWidget.SetData
// 0x0008 (0x0008 - 0x0000)
struct FortQuestExpiresWidget_SetData final
{
public:
	class UFortQuestItem*                         InItem;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortQuestExpiresWidget_SetData) == 0x000008, "Wrong alignment on FortQuestExpiresWidget_SetData");
static_assert(sizeof(FortQuestExpiresWidget_SetData) == 0x000008, "Wrong size on FortQuestExpiresWidget_SetData");
static_assert(offsetof(FortQuestExpiresWidget_SetData, InItem) == 0x000000, "Member 'FortQuestExpiresWidget_SetData::InItem' has a wrong offset!");

// Function FortniteUI.FortQuestRewardChoiceWidget.SetQuest
// 0x0008 (0x0008 - 0x0000)
struct FortQuestRewardChoiceWidget_SetQuest final
{
public:
	const class UFortQuestItem*                   Quest;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortQuestRewardChoiceWidget_SetQuest) == 0x000008, "Wrong alignment on FortQuestRewardChoiceWidget_SetQuest");
static_assert(sizeof(FortQuestRewardChoiceWidget_SetQuest) == 0x000008, "Wrong size on FortQuestRewardChoiceWidget_SetQuest");
static_assert(offsetof(FortQuestRewardChoiceWidget_SetQuest, Quest) == 0x000000, "Member 'FortQuestRewardChoiceWidget_SetQuest::Quest' has a wrong offset!");

// Function FortniteUI.FortQuestTrackerEntry.HandleHUDObjectiveCompletion
// 0x0008 (0x0008 - 0x0000)
struct FortQuestTrackerEntry_HandleHUDObjectiveCompletion final
{
public:
	class UFortQuestObjectiveInfo*                QuestObjective;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortQuestTrackerEntry_HandleHUDObjectiveCompletion) == 0x000008, "Wrong alignment on FortQuestTrackerEntry_HandleHUDObjectiveCompletion");
static_assert(sizeof(FortQuestTrackerEntry_HandleHUDObjectiveCompletion) == 0x000008, "Wrong size on FortQuestTrackerEntry_HandleHUDObjectiveCompletion");
static_assert(offsetof(FortQuestTrackerEntry_HandleHUDObjectiveCompletion, QuestObjective) == 0x000000, "Member 'FortQuestTrackerEntry_HandleHUDObjectiveCompletion::QuestObjective' has a wrong offset!");

// Function FortniteUI.FortQuestTrackerEntry.HandleObjectiveEntryCreated
// 0x0008 (0x0008 - 0x0000)
struct FortQuestTrackerEntry_HandleObjectiveEntryCreated final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortQuestTrackerEntry_HandleObjectiveEntryCreated) == 0x000008, "Wrong alignment on FortQuestTrackerEntry_HandleObjectiveEntryCreated");
static_assert(sizeof(FortQuestTrackerEntry_HandleObjectiveEntryCreated) == 0x000008, "Wrong size on FortQuestTrackerEntry_HandleObjectiveEntryCreated");
static_assert(offsetof(FortQuestTrackerEntry_HandleObjectiveEntryCreated, Widget) == 0x000000, "Member 'FortQuestTrackerEntry_HandleObjectiveEntryCreated::Widget' has a wrong offset!");

// Function FortniteUI.FortQuestTrackerList.GetQuestsToDisplay
// 0x0010 (0x0010 - 0x0000)
struct FortQuestTrackerList_GetQuestsToDisplay final
{
public:
	TArray<class UFortQuestItem*>                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortQuestTrackerList_GetQuestsToDisplay) == 0x000008, "Wrong alignment on FortQuestTrackerList_GetQuestsToDisplay");
static_assert(sizeof(FortQuestTrackerList_GetQuestsToDisplay) == 0x000010, "Wrong size on FortQuestTrackerList_GetQuestsToDisplay");
static_assert(offsetof(FortQuestTrackerList_GetQuestsToDisplay, ReturnValue) == 0x000000, "Member 'FortQuestTrackerList_GetQuestsToDisplay::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortQuestTrackerList.HandleHUDFinalObjectiveHidden
// 0x0008 (0x0008 - 0x0000)
struct FortQuestTrackerList_HandleHUDFinalObjectiveHidden final
{
public:
	class UFortQuestItem*                         QuestItem;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortQuestTrackerList_HandleHUDFinalObjectiveHidden) == 0x000008, "Wrong alignment on FortQuestTrackerList_HandleHUDFinalObjectiveHidden");
static_assert(sizeof(FortQuestTrackerList_HandleHUDFinalObjectiveHidden) == 0x000008, "Wrong size on FortQuestTrackerList_HandleHUDFinalObjectiveHidden");
static_assert(offsetof(FortQuestTrackerList_HandleHUDFinalObjectiveHidden, QuestItem) == 0x000000, "Member 'FortQuestTrackerList_HandleHUDFinalObjectiveHidden::QuestItem' has a wrong offset!");

// Function FortniteUI.FortQuestTrackerList.HandleQuestEntryCreated
// 0x0008 (0x0008 - 0x0000)
struct FortQuestTrackerList_HandleQuestEntryCreated final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortQuestTrackerList_HandleQuestEntryCreated) == 0x000008, "Wrong alignment on FortQuestTrackerList_HandleQuestEntryCreated");
static_assert(sizeof(FortQuestTrackerList_HandleQuestEntryCreated) == 0x000008, "Wrong size on FortQuestTrackerList_HandleQuestEntryCreated");
static_assert(offsetof(FortQuestTrackerList_HandleQuestEntryCreated, Widget) == 0x000000, "Member 'FortQuestTrackerList_HandleQuestEntryCreated::Widget' has a wrong offset!");

// Function FortniteUI.FortQuestTrackerList.HandleSizeEstimateChanged
// 0x0008 (0x0008 - 0x0000)
struct FortQuestTrackerList_HandleSizeEstimateChanged final
{
public:
	class UObject*                                ChangedElement;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortQuestTrackerList_HandleSizeEstimateChanged) == 0x000008, "Wrong alignment on FortQuestTrackerList_HandleSizeEstimateChanged");
static_assert(sizeof(FortQuestTrackerList_HandleSizeEstimateChanged) == 0x000008, "Wrong size on FortQuestTrackerList_HandleSizeEstimateChanged");
static_assert(offsetof(FortQuestTrackerList_HandleSizeEstimateChanged, ChangedElement) == 0x000000, "Member 'FortQuestTrackerList_HandleSizeEstimateChanged::ChangedElement' has a wrong offset!");

// Function FortniteUI.FortQuestTreeItemWidget.ExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct FortQuestTreeItemWidget_ExpansionChanged final
{
public:
	bool                                          bExpanded;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortQuestTreeItemWidget_ExpansionChanged) == 0x000001, "Wrong alignment on FortQuestTreeItemWidget_ExpansionChanged");
static_assert(sizeof(FortQuestTreeItemWidget_ExpansionChanged) == 0x000001, "Wrong size on FortQuestTreeItemWidget_ExpansionChanged");
static_assert(offsetof(FortQuestTreeItemWidget_ExpansionChanged, bExpanded) == 0x000000, "Member 'FortQuestTreeItemWidget_ExpansionChanged::bExpanded' has a wrong offset!");

// Function FortniteUI.FortQuestTreeItemWidget.SetupAsCategory
// 0x0008 (0x0008 - 0x0000)
struct FortQuestTreeItemWidget_SetupAsCategory final
{
public:
	class UFortQuestCategory*                     Category;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortQuestTreeItemWidget_SetupAsCategory) == 0x000008, "Wrong alignment on FortQuestTreeItemWidget_SetupAsCategory");
static_assert(sizeof(FortQuestTreeItemWidget_SetupAsCategory) == 0x000008, "Wrong size on FortQuestTreeItemWidget_SetupAsCategory");
static_assert(offsetof(FortQuestTreeItemWidget_SetupAsCategory, Category) == 0x000000, "Member 'FortQuestTreeItemWidget_SetupAsCategory::Category' has a wrong offset!");

// Function FortniteUI.FortQuestTreeItemWidget.SetupAsQuest
// 0x0008 (0x0008 - 0x0000)
struct FortQuestTreeItemWidget_SetupAsQuest final
{
public:
	class UFortQuestItem*                         Category;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortQuestTreeItemWidget_SetupAsQuest) == 0x000008, "Wrong alignment on FortQuestTreeItemWidget_SetupAsQuest");
static_assert(sizeof(FortQuestTreeItemWidget_SetupAsQuest) == 0x000008, "Wrong size on FortQuestTreeItemWidget_SetupAsQuest");
static_assert(offsetof(FortQuestTreeItemWidget_SetupAsQuest, Category) == 0x000000, "Member 'FortQuestTreeItemWidget_SetupAsQuest::Category' has a wrong offset!");

// Function FortniteUI.FortRejoinWindowBase.StartTimeout
// 0x0004 (0x0004 - 0x0000)
struct FortRejoinWindowBase_StartTimeout final
{
public:
	float                                         TimeoutTime;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRejoinWindowBase_StartTimeout) == 0x000004, "Wrong alignment on FortRejoinWindowBase_StartTimeout");
static_assert(sizeof(FortRejoinWindowBase_StartTimeout) == 0x000004, "Wrong size on FortRejoinWindowBase_StartTimeout");
static_assert(offsetof(FortRejoinWindowBase_StartTimeout, TimeoutTime) == 0x000000, "Member 'FortRejoinWindowBase_StartTimeout::TimeoutTime' has a wrong offset!");

// Function FortniteUI.FortResultsSummaryScreenWidget.GetTotalScoreSortedScoreIndices
// 0x0018 (0x0018 - 0x0000)
struct FortResultsSummaryScreenWidget_GetTotalScoreSortedScoreIndices final
{
public:
	const class UFortUIScoreReport*               ScoreReport;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 OutSortedScoreIndices;                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortResultsSummaryScreenWidget_GetTotalScoreSortedScoreIndices) == 0x000008, "Wrong alignment on FortResultsSummaryScreenWidget_GetTotalScoreSortedScoreIndices");
static_assert(sizeof(FortResultsSummaryScreenWidget_GetTotalScoreSortedScoreIndices) == 0x000018, "Wrong size on FortResultsSummaryScreenWidget_GetTotalScoreSortedScoreIndices");
static_assert(offsetof(FortResultsSummaryScreenWidget_GetTotalScoreSortedScoreIndices, ScoreReport) == 0x000000, "Member 'FortResultsSummaryScreenWidget_GetTotalScoreSortedScoreIndices::ScoreReport' has a wrong offset!");
static_assert(offsetof(FortResultsSummaryScreenWidget_GetTotalScoreSortedScoreIndices, OutSortedScoreIndices) == 0x000008, "Member 'FortResultsSummaryScreenWidget_GetTotalScoreSortedScoreIndices::OutSortedScoreIndices' has a wrong offset!");

// Function FortniteUI.FortResultsTeleportScreenWidget.OnExitTimePercentagePassedUpdated
// 0x0004 (0x0004 - 0x0000)
struct FortResultsTeleportScreenWidget_OnExitTimePercentagePassedUpdated final
{
public:
	float                                         Percent;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortResultsTeleportScreenWidget_OnExitTimePercentagePassedUpdated) == 0x000004, "Wrong alignment on FortResultsTeleportScreenWidget_OnExitTimePercentagePassedUpdated");
static_assert(sizeof(FortResultsTeleportScreenWidget_OnExitTimePercentagePassedUpdated) == 0x000004, "Wrong size on FortResultsTeleportScreenWidget_OnExitTimePercentagePassedUpdated");
static_assert(offsetof(FortResultsTeleportScreenWidget_OnExitTimePercentagePassedUpdated, Percent) == 0x000000, "Member 'FortResultsTeleportScreenWidget_OnExitTimePercentagePassedUpdated::Percent' has a wrong offset!");

// Function FortniteUI.FortResultsTeleportScreenWidget.OnExitTimeRemainingUpdated
// 0x0004 (0x0004 - 0x0000)
struct FortResultsTeleportScreenWidget_OnExitTimeRemainingUpdated final
{
public:
	int32                                         TimeRemainingSeconds;                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortResultsTeleportScreenWidget_OnExitTimeRemainingUpdated) == 0x000004, "Wrong alignment on FortResultsTeleportScreenWidget_OnExitTimeRemainingUpdated");
static_assert(sizeof(FortResultsTeleportScreenWidget_OnExitTimeRemainingUpdated) == 0x000004, "Wrong size on FortResultsTeleportScreenWidget_OnExitTimeRemainingUpdated");
static_assert(offsetof(FortResultsTeleportScreenWidget_OnExitTimeRemainingUpdated, TimeRemainingSeconds) == 0x000000, "Member 'FortResultsTeleportScreenWidget_OnExitTimeRemainingUpdated::TimeRemainingSeconds' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotWidget.CreatePickerWidget
// 0x0008 (0x0008 - 0x0000)
struct FortItemGroupSlotWidget_CreatePickerWidget final
{
public:
	class UFortItemGroupSlotPicker*               ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotWidget_CreatePickerWidget) == 0x000008, "Wrong alignment on FortItemGroupSlotWidget_CreatePickerWidget");
static_assert(sizeof(FortItemGroupSlotWidget_CreatePickerWidget) == 0x000008, "Wrong size on FortItemGroupSlotWidget_CreatePickerWidget");
static_assert(offsetof(FortItemGroupSlotWidget_CreatePickerWidget, ReturnValue) == 0x000000, "Member 'FortItemGroupSlotWidget_CreatePickerWidget::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotWidget.HandleItemPickerSelectionCommittedInternal
// 0x0008 (0x0008 - 0x0000)
struct FortItemGroupSlotWidget_HandleItemPickerSelectionCommittedInternal final
{
public:
	const class UFortItem*                        SelectedItem;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotWidget_HandleItemPickerSelectionCommittedInternal) == 0x000008, "Wrong alignment on FortItemGroupSlotWidget_HandleItemPickerSelectionCommittedInternal");
static_assert(sizeof(FortItemGroupSlotWidget_HandleItemPickerSelectionCommittedInternal) == 0x000008, "Wrong size on FortItemGroupSlotWidget_HandleItemPickerSelectionCommittedInternal");
static_assert(offsetof(FortItemGroupSlotWidget_HandleItemPickerSelectionCommittedInternal, SelectedItem) == 0x000000, "Member 'FortItemGroupSlotWidget_HandleItemPickerSelectionCommittedInternal::SelectedItem' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotWidget.HandlePreviewStateChanged
// 0x0058 (0x0058 - 0x0000)
struct FortItemGroupSlotWidget_HandlePreviewStateChanged final
{
public:
	bool                                          IsSquadSlotAffectedByPreview;                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsBeingReplacedOrRelocated;                        // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          WouldHavePersonalitySynergy;                       // 0x0002(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          WouldHaveSetBonusMatch;                            // 0x0003(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayAttribute, float>        PreviewAttributeBonusValues;                       // 0x0008(0x0050)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotWidget_HandlePreviewStateChanged) == 0x000008, "Wrong alignment on FortItemGroupSlotWidget_HandlePreviewStateChanged");
static_assert(sizeof(FortItemGroupSlotWidget_HandlePreviewStateChanged) == 0x000058, "Wrong size on FortItemGroupSlotWidget_HandlePreviewStateChanged");
static_assert(offsetof(FortItemGroupSlotWidget_HandlePreviewStateChanged, IsSquadSlotAffectedByPreview) == 0x000000, "Member 'FortItemGroupSlotWidget_HandlePreviewStateChanged::IsSquadSlotAffectedByPreview' has a wrong offset!");
static_assert(offsetof(FortItemGroupSlotWidget_HandlePreviewStateChanged, IsBeingReplacedOrRelocated) == 0x000001, "Member 'FortItemGroupSlotWidget_HandlePreviewStateChanged::IsBeingReplacedOrRelocated' has a wrong offset!");
static_assert(offsetof(FortItemGroupSlotWidget_HandlePreviewStateChanged, WouldHavePersonalitySynergy) == 0x000002, "Member 'FortItemGroupSlotWidget_HandlePreviewStateChanged::WouldHavePersonalitySynergy' has a wrong offset!");
static_assert(offsetof(FortItemGroupSlotWidget_HandlePreviewStateChanged, WouldHaveSetBonusMatch) == 0x000003, "Member 'FortItemGroupSlotWidget_HandlePreviewStateChanged::WouldHaveSetBonusMatch' has a wrong offset!");
static_assert(offsetof(FortItemGroupSlotWidget_HandlePreviewStateChanged, PreviewAttributeBonusValues) == 0x000008, "Member 'FortItemGroupSlotWidget_HandlePreviewStateChanged::PreviewAttributeBonusValues' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotWidget.HandleTraitStateChanged
// 0x0001 (0x0001 - 0x0000)
struct FortItemGroupSlotWidget_HandleTraitStateChanged final
{
public:
	bool                                          SetBonusMatchStateChanged;                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotWidget_HandleTraitStateChanged) == 0x000001, "Wrong alignment on FortItemGroupSlotWidget_HandleTraitStateChanged");
static_assert(sizeof(FortItemGroupSlotWidget_HandleTraitStateChanged) == 0x000001, "Wrong size on FortItemGroupSlotWidget_HandleTraitStateChanged");
static_assert(offsetof(FortItemGroupSlotWidget_HandleTraitStateChanged, SetBonusMatchStateChanged) == 0x000000, "Member 'FortItemGroupSlotWidget_HandleTraitStateChanged::SetBonusMatchStateChanged' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotWidget.InitializeSlot
// 0x0010 (0x0010 - 0x0000)
struct FortItemGroupSlotWidget_InitializeSlot final
{
public:
	const class UFortItemGroupWidget*             Param_HostItemGroupWidget;                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Param_SlotIndexInGroup;                            // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemGroupSlotWidget_InitializeSlot) == 0x000008, "Wrong alignment on FortItemGroupSlotWidget_InitializeSlot");
static_assert(sizeof(FortItemGroupSlotWidget_InitializeSlot) == 0x000010, "Wrong size on FortItemGroupSlotWidget_InitializeSlot");
static_assert(offsetof(FortItemGroupSlotWidget_InitializeSlot, Param_HostItemGroupWidget) == 0x000000, "Member 'FortItemGroupSlotWidget_InitializeSlot::Param_HostItemGroupWidget' has a wrong offset!");
static_assert(offsetof(FortItemGroupSlotWidget_InitializeSlot, Param_SlotIndexInGroup) == 0x000008, "Member 'FortItemGroupSlotWidget_InitializeSlot::Param_SlotIndexInGroup' has a wrong offset!");

// DelegateFunction FortniteUI.FortItemGroupSlotWidget.OnAttributeBonusValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortItemGroupSlotWidget_OnAttributeBonusValueChanged__DelegateSignature final
{
public:
	class UFortItemGroupSlotWidget*               ItemSlotWidget;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotWidget_OnAttributeBonusValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on FortItemGroupSlotWidget_OnAttributeBonusValueChanged__DelegateSignature");
static_assert(sizeof(FortItemGroupSlotWidget_OnAttributeBonusValueChanged__DelegateSignature) == 0x000008, "Wrong size on FortItemGroupSlotWidget_OnAttributeBonusValueChanged__DelegateSignature");
static_assert(offsetof(FortItemGroupSlotWidget_OnAttributeBonusValueChanged__DelegateSignature, ItemSlotWidget) == 0x000000, "Member 'FortItemGroupSlotWidget_OnAttributeBonusValueChanged__DelegateSignature::ItemSlotWidget' has a wrong offset!");

// DelegateFunction FortniteUI.FortItemGroupSlotWidget.OnItemSet__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortItemGroupSlotWidget_OnItemSet__DelegateSignature final
{
public:
	class UFortItemGroupSlotWidget*               ItemSlotWidget;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotWidget_OnItemSet__DelegateSignature) == 0x000008, "Wrong alignment on FortItemGroupSlotWidget_OnItemSet__DelegateSignature");
static_assert(sizeof(FortItemGroupSlotWidget_OnItemSet__DelegateSignature) == 0x000008, "Wrong size on FortItemGroupSlotWidget_OnItemSet__DelegateSignature");
static_assert(offsetof(FortItemGroupSlotWidget_OnItemSet__DelegateSignature, ItemSlotWidget) == 0x000000, "Member 'FortItemGroupSlotWidget_OnItemSet__DelegateSignature::ItemSlotWidget' has a wrong offset!");

// DelegateFunction FortniteUI.FortItemGroupSlotWidget.OnItemSlotLockedStateChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortItemGroupSlotWidget_OnItemSlotLockedStateChanged__DelegateSignature final
{
public:
	class UFortItemGroupSlotWidget*               ItemSlotWidget;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotWidget_OnItemSlotLockedStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on FortItemGroupSlotWidget_OnItemSlotLockedStateChanged__DelegateSignature");
static_assert(sizeof(FortItemGroupSlotWidget_OnItemSlotLockedStateChanged__DelegateSignature) == 0x000008, "Wrong size on FortItemGroupSlotWidget_OnItemSlotLockedStateChanged__DelegateSignature");
static_assert(offsetof(FortItemGroupSlotWidget_OnItemSlotLockedStateChanged__DelegateSignature, ItemSlotWidget) == 0x000000, "Member 'FortItemGroupSlotWidget_OnItemSlotLockedStateChanged__DelegateSignature::ItemSlotWidget' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotWidget.SetItem
// 0x0008 (0x0008 - 0x0000)
struct FortItemGroupSlotWidget_SetItem final
{
public:
	const class UFortItem*                        ItemToSlot;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotWidget_SetItem) == 0x000008, "Wrong alignment on FortItemGroupSlotWidget_SetItem");
static_assert(sizeof(FortItemGroupSlotWidget_SetItem) == 0x000008, "Wrong size on FortItemGroupSlotWidget_SetItem");
static_assert(offsetof(FortItemGroupSlotWidget_SetItem, ItemToSlot) == 0x000000, "Member 'FortItemGroupSlotWidget_SetItem::ItemToSlot' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotWidget.SetSlottingPreviewItem
// 0x0008 (0x0008 - 0x0000)
struct FortItemGroupSlotWidget_SetSlottingPreviewItem final
{
public:
	const class UFortItem*                        Item;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotWidget_SetSlottingPreviewItem) == 0x000008, "Wrong alignment on FortItemGroupSlotWidget_SetSlottingPreviewItem");
static_assert(sizeof(FortItemGroupSlotWidget_SetSlottingPreviewItem) == 0x000008, "Wrong size on FortItemGroupSlotWidget_SetSlottingPreviewItem");
static_assert(offsetof(FortItemGroupSlotWidget_SetSlottingPreviewItem, Item) == 0x000000, "Member 'FortItemGroupSlotWidget_SetSlottingPreviewItem::Item' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotWidget.GetSquadId
// 0x0008 (0x0008 - 0x0000)
struct FortItemGroupSlotWidget_GetSquadId final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotWidget_GetSquadId) == 0x000004, "Wrong alignment on FortItemGroupSlotWidget_GetSquadId");
static_assert(sizeof(FortItemGroupSlotWidget_GetSquadId) == 0x000008, "Wrong size on FortItemGroupSlotWidget_GetSquadId");
static_assert(offsetof(FortItemGroupSlotWidget_GetSquadId, ReturnValue) == 0x000000, "Member 'FortItemGroupSlotWidget_GetSquadId::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotWidget.IsItemCompatible
// 0x0010 (0x0010 - 0x0000)
struct FortItemGroupSlotWidget_IsItemCompatible final
{
public:
	const class UFortItem*                        Item;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemGroupSlotWidget_IsItemCompatible) == 0x000008, "Wrong alignment on FortItemGroupSlotWidget_IsItemCompatible");
static_assert(sizeof(FortItemGroupSlotWidget_IsItemCompatible) == 0x000010, "Wrong size on FortItemGroupSlotWidget_IsItemCompatible");
static_assert(offsetof(FortItemGroupSlotWidget_IsItemCompatible, Item) == 0x000000, "Member 'FortItemGroupSlotWidget_IsItemCompatible::Item' has a wrong offset!");
static_assert(offsetof(FortItemGroupSlotWidget_IsItemCompatible, ReturnValue) == 0x000008, "Member 'FortItemGroupSlotWidget_IsItemCompatible::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotWidget.IsManagerSlot
// 0x0001 (0x0001 - 0x0000)
struct FortItemGroupSlotWidget_IsManagerSlot final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotWidget_IsManagerSlot) == 0x000001, "Wrong alignment on FortItemGroupSlotWidget_IsManagerSlot");
static_assert(sizeof(FortItemGroupSlotWidget_IsManagerSlot) == 0x000001, "Wrong size on FortItemGroupSlotWidget_IsManagerSlot");
static_assert(offsetof(FortItemGroupSlotWidget_IsManagerSlot, ReturnValue) == 0x000000, "Member 'FortItemGroupSlotWidget_IsManagerSlot::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotWidget.TryGetSquad
// 0x0090 (0x0090 - 0x0000)
struct FortItemGroupSlotWidget_TryGetSquad final
{
public:
	struct FHomebaseSquad                         OutSquad;                                          // 0x0000(0x0088)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemGroupSlotWidget_TryGetSquad) == 0x000008, "Wrong alignment on FortItemGroupSlotWidget_TryGetSquad");
static_assert(sizeof(FortItemGroupSlotWidget_TryGetSquad) == 0x000090, "Wrong size on FortItemGroupSlotWidget_TryGetSquad");
static_assert(offsetof(FortItemGroupSlotWidget_TryGetSquad, OutSquad) == 0x000000, "Member 'FortItemGroupSlotWidget_TryGetSquad::OutSquad' has a wrong offset!");
static_assert(offsetof(FortItemGroupSlotWidget_TryGetSquad, ReturnValue) == 0x000088, "Member 'FortItemGroupSlotWidget_TryGetSquad::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotWidget.TryGetSquadSlot
// 0x0068 (0x0068 - 0x0000)
struct FortItemGroupSlotWidget_TryGetSquadSlot final
{
public:
	struct FHomebaseSquadSlot                     OutSquadSlot;                                      // 0x0000(0x0060)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemGroupSlotWidget_TryGetSquadSlot) == 0x000008, "Wrong alignment on FortItemGroupSlotWidget_TryGetSquadSlot");
static_assert(sizeof(FortItemGroupSlotWidget_TryGetSquadSlot) == 0x000068, "Wrong size on FortItemGroupSlotWidget_TryGetSquadSlot");
static_assert(offsetof(FortItemGroupSlotWidget_TryGetSquadSlot, OutSquadSlot) == 0x000000, "Member 'FortItemGroupSlotWidget_TryGetSquadSlot::OutSquadSlot' has a wrong offset!");
static_assert(offsetof(FortItemGroupSlotWidget_TryGetSquadSlot, ReturnValue) == 0x000060, "Member 'FortItemGroupSlotWidget_TryGetSquadSlot::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortResultsWidget.GetRewardsByType
// 0x0018 (0x0018 - 0x0000)
struct FortResultsWidget_GetRewardsByType final
{
public:
	EFortRewardItemType                           Type;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortItem*>                      OutRewards;                                        // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortResultsWidget_GetRewardsByType) == 0x000008, "Wrong alignment on FortResultsWidget_GetRewardsByType");
static_assert(sizeof(FortResultsWidget_GetRewardsByType) == 0x000018, "Wrong size on FortResultsWidget_GetRewardsByType");
static_assert(offsetof(FortResultsWidget_GetRewardsByType, Type) == 0x000000, "Member 'FortResultsWidget_GetRewardsByType::Type' has a wrong offset!");
static_assert(offsetof(FortResultsWidget_GetRewardsByType, OutRewards) == 0x000008, "Member 'FortResultsWidget_GetRewardsByType::OutRewards' has a wrong offset!");

// Function FortniteUI.FortResultsWidget.GetTotalMissionPointsEarned
// 0x0004 (0x0004 - 0x0000)
struct FortResultsWidget_GetTotalMissionPointsEarned final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortResultsWidget_GetTotalMissionPointsEarned) == 0x000004, "Wrong alignment on FortResultsWidget_GetTotalMissionPointsEarned");
static_assert(sizeof(FortResultsWidget_GetTotalMissionPointsEarned) == 0x000004, "Wrong size on FortResultsWidget_GetTotalMissionPointsEarned");
static_assert(offsetof(FortResultsWidget_GetTotalMissionPointsEarned, ReturnValue) == 0x000000, "Member 'FortResultsWidget_GetTotalMissionPointsEarned::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortResultsWidget.SendEndOfRoundFriendInviteAnalytic
// 0x0038 (0x0038 - 0x0000)
struct FortResultsWidget_SendEndOfRoundFriendInviteAnalytic final
{
public:
	struct FUniqueNetIdRepl                       TargetId;                                          // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TargetPlayerName;                                  // 0x0028(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortResultsWidget_SendEndOfRoundFriendInviteAnalytic) == 0x000008, "Wrong alignment on FortResultsWidget_SendEndOfRoundFriendInviteAnalytic");
static_assert(sizeof(FortResultsWidget_SendEndOfRoundFriendInviteAnalytic) == 0x000038, "Wrong size on FortResultsWidget_SendEndOfRoundFriendInviteAnalytic");
static_assert(offsetof(FortResultsWidget_SendEndOfRoundFriendInviteAnalytic, TargetId) == 0x000000, "Member 'FortResultsWidget_SendEndOfRoundFriendInviteAnalytic::TargetId' has a wrong offset!");
static_assert(offsetof(FortResultsWidget_SendEndOfRoundFriendInviteAnalytic, TargetPlayerName) == 0x000028, "Member 'FortResultsWidget_SendEndOfRoundFriendInviteAnalytic::TargetPlayerName' has a wrong offset!");

// Function FortniteUI.FortResultsWidget.SendEndOfRoundScreenAnalytic
// 0x0018 (0x0018 - 0x0000)
struct FortResultsWidget_SendEndOfRoundScreenAnalytic final
{
public:
	class FString                                 ScreenName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Skipped;                                           // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeSpent;                                         // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortResultsWidget_SendEndOfRoundScreenAnalytic) == 0x000008, "Wrong alignment on FortResultsWidget_SendEndOfRoundScreenAnalytic");
static_assert(sizeof(FortResultsWidget_SendEndOfRoundScreenAnalytic) == 0x000018, "Wrong size on FortResultsWidget_SendEndOfRoundScreenAnalytic");
static_assert(offsetof(FortResultsWidget_SendEndOfRoundScreenAnalytic, ScreenName) == 0x000000, "Member 'FortResultsWidget_SendEndOfRoundScreenAnalytic::ScreenName' has a wrong offset!");
static_assert(offsetof(FortResultsWidget_SendEndOfRoundScreenAnalytic, Skipped) == 0x000010, "Member 'FortResultsWidget_SendEndOfRoundScreenAnalytic::Skipped' has a wrong offset!");
static_assert(offsetof(FortResultsWidget_SendEndOfRoundScreenAnalytic, TimeSpent) == 0x000014, "Member 'FortResultsWidget_SendEndOfRoundScreenAnalytic::TimeSpent' has a wrong offset!");

// Function FortniteUI.FortResultsWidget.SendEndOfRoundUpVoteAnalytic
// 0x0038 (0x0038 - 0x0000)
struct FortResultsWidget_SendEndOfRoundUpVoteAnalytic final
{
public:
	struct FUniqueNetIdRepl                       TargetId;                                          // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TargetPlayerName;                                  // 0x0028(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortResultsWidget_SendEndOfRoundUpVoteAnalytic) == 0x000008, "Wrong alignment on FortResultsWidget_SendEndOfRoundUpVoteAnalytic");
static_assert(sizeof(FortResultsWidget_SendEndOfRoundUpVoteAnalytic) == 0x000038, "Wrong size on FortResultsWidget_SendEndOfRoundUpVoteAnalytic");
static_assert(offsetof(FortResultsWidget_SendEndOfRoundUpVoteAnalytic, TargetId) == 0x000000, "Member 'FortResultsWidget_SendEndOfRoundUpVoteAnalytic::TargetId' has a wrong offset!");
static_assert(offsetof(FortResultsWidget_SendEndOfRoundUpVoteAnalytic, TargetPlayerName) == 0x000028, "Member 'FortResultsWidget_SendEndOfRoundUpVoteAnalytic::TargetPlayerName' has a wrong offset!");

// Function FortniteUI.FortResultsWidget.GetZoneCompletionResult
// 0x0001 (0x0001 - 0x0000)
struct FortResultsWidget_GetZoneCompletionResult final
{
public:
	EFortCompletionResult                         ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortResultsWidget_GetZoneCompletionResult) == 0x000001, "Wrong alignment on FortResultsWidget_GetZoneCompletionResult");
static_assert(sizeof(FortResultsWidget_GetZoneCompletionResult) == 0x000001, "Wrong size on FortResultsWidget_GetZoneCompletionResult");
static_assert(offsetof(FortResultsWidget_GetZoneCompletionResult, ReturnValue) == 0x000000, "Member 'FortResultsWidget_GetZoneCompletionResult::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortResultsWidget.IsDataFinalized
// 0x0001 (0x0001 - 0x0000)
struct FortResultsWidget_IsDataFinalized final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortResultsWidget_IsDataFinalized) == 0x000001, "Wrong alignment on FortResultsWidget_IsDataFinalized");
static_assert(sizeof(FortResultsWidget_IsDataFinalized) == 0x000001, "Wrong size on FortResultsWidget_IsDataFinalized");
static_assert(offsetof(FortResultsWidget_IsDataFinalized, ReturnValue) == 0x000000, "Member 'FortResultsWidget_IsDataFinalized::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortReticle.OnWeaponEquipped
// 0x0010 (0x0010 - 0x0000)
struct FortReticle_OnWeaponEquipped final
{
public:
	class AFortWeapon*                            NewWeapon;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AFortWeapon*                            PrevWeapon;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortReticle_OnWeaponEquipped) == 0x000008, "Wrong alignment on FortReticle_OnWeaponEquipped");
static_assert(sizeof(FortReticle_OnWeaponEquipped) == 0x000010, "Wrong size on FortReticle_OnWeaponEquipped");
static_assert(offsetof(FortReticle_OnWeaponEquipped, NewWeapon) == 0x000000, "Member 'FortReticle_OnWeaponEquipped::NewWeapon' has a wrong offset!");
static_assert(offsetof(FortReticle_OnWeaponEquipped, PrevWeapon) == 0x000008, "Member 'FortReticle_OnWeaponEquipped::PrevWeapon' has a wrong offset!");

// Function FortniteUI.FortRewardNotificationData.GetIconBrush
// 0x0080 (0x0080 - 0x0000)
struct FortRewardNotificationData_GetIconBrush final
{
public:
	struct FSlateBrush                            IconBrush;                                         // 0x0000(0x0078)(Parm, OutParm, NativeAccessSpecifierPublic)
	EFortBrushSize                                BrushSize;                                         // 0x0078(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0079(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortRewardNotificationData_GetIconBrush) == 0x000008, "Wrong alignment on FortRewardNotificationData_GetIconBrush");
static_assert(sizeof(FortRewardNotificationData_GetIconBrush) == 0x000080, "Wrong size on FortRewardNotificationData_GetIconBrush");
static_assert(offsetof(FortRewardNotificationData_GetIconBrush, IconBrush) == 0x000000, "Member 'FortRewardNotificationData_GetIconBrush::IconBrush' has a wrong offset!");
static_assert(offsetof(FortRewardNotificationData_GetIconBrush, BrushSize) == 0x000078, "Member 'FortRewardNotificationData_GetIconBrush::BrushSize' has a wrong offset!");
static_assert(offsetof(FortRewardNotificationData_GetIconBrush, ReturnValue) == 0x000079, "Member 'FortRewardNotificationData_GetIconBrush::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortRewardCollectionBookData.GetIconBrush
// 0x0080 (0x0080 - 0x0000)
struct FortRewardCollectionBookData_GetIconBrush final
{
public:
	struct FSlateBrush                            IconBrush;                                         // 0x0000(0x0078)(Parm, OutParm, NativeAccessSpecifierPublic)
	EFortBrushSize                                BrushSize;                                         // 0x0078(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0079(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortRewardCollectionBookData_GetIconBrush) == 0x000008, "Wrong alignment on FortRewardCollectionBookData_GetIconBrush");
static_assert(sizeof(FortRewardCollectionBookData_GetIconBrush) == 0x000080, "Wrong size on FortRewardCollectionBookData_GetIconBrush");
static_assert(offsetof(FortRewardCollectionBookData_GetIconBrush, IconBrush) == 0x000000, "Member 'FortRewardCollectionBookData_GetIconBrush::IconBrush' has a wrong offset!");
static_assert(offsetof(FortRewardCollectionBookData_GetIconBrush, BrushSize) == 0x000078, "Member 'FortRewardCollectionBookData_GetIconBrush::BrushSize' has a wrong offset!");
static_assert(offsetof(FortRewardCollectionBookData_GetIconBrush, ReturnValue) == 0x000079, "Member 'FortRewardCollectionBookData_GetIconBrush::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortRewardNotificationSubWidget.AddInputActionHandler
// 0x0020 (0x0020 - 0x0000)
struct FortRewardNotificationSubWidget_AddInputActionHandler final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RowName;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool* bPassThrough)>           CommittedEvent;                                    // 0x0010(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardNotificationSubWidget_AddInputActionHandler) == 0x000008, "Wrong alignment on FortRewardNotificationSubWidget_AddInputActionHandler");
static_assert(sizeof(FortRewardNotificationSubWidget_AddInputActionHandler) == 0x000020, "Wrong size on FortRewardNotificationSubWidget_AddInputActionHandler");
static_assert(offsetof(FortRewardNotificationSubWidget_AddInputActionHandler, DataTable) == 0x000000, "Member 'FortRewardNotificationSubWidget_AddInputActionHandler::DataTable' has a wrong offset!");
static_assert(offsetof(FortRewardNotificationSubWidget_AddInputActionHandler, RowName) == 0x000008, "Member 'FortRewardNotificationSubWidget_AddInputActionHandler::RowName' has a wrong offset!");
static_assert(offsetof(FortRewardNotificationSubWidget_AddInputActionHandler, CommittedEvent) == 0x000010, "Member 'FortRewardNotificationSubWidget_AddInputActionHandler::CommittedEvent' has a wrong offset!");

// Function FortniteUI.FortRewardNotificationSubWidget.Init
// 0x0008 (0x0008 - 0x0000)
struct FortRewardNotificationSubWidget_Init final
{
public:
	class UFortRewardNotificationWidget*          MainWidget;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardNotificationSubWidget_Init) == 0x000008, "Wrong alignment on FortRewardNotificationSubWidget_Init");
static_assert(sizeof(FortRewardNotificationSubWidget_Init) == 0x000008, "Wrong size on FortRewardNotificationSubWidget_Init");
static_assert(offsetof(FortRewardNotificationSubWidget_Init, MainWidget) == 0x000000, "Member 'FortRewardNotificationSubWidget_Init::MainWidget' has a wrong offset!");

// Function FortniteUI.FortRewardNotificationSubWidget.InspectItem
// 0x0008 (0x0008 - 0x0000)
struct FortRewardNotificationSubWidget_InspectItem final
{
public:
	class UFortItem*                              ItemToInspect;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardNotificationSubWidget_InspectItem) == 0x000008, "Wrong alignment on FortRewardNotificationSubWidget_InspectItem");
static_assert(sizeof(FortRewardNotificationSubWidget_InspectItem) == 0x000008, "Wrong size on FortRewardNotificationSubWidget_InspectItem");
static_assert(offsetof(FortRewardNotificationSubWidget_InspectItem, ItemToInspect) == 0x000000, "Member 'FortRewardNotificationSubWidget_InspectItem::ItemToInspect' has a wrong offset!");

// Function FortniteUI.FortRewardNotificationSubWidget.IsPrimaryActionEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortRewardNotificationSubWidget_IsPrimaryActionEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardNotificationSubWidget_IsPrimaryActionEnabled) == 0x000001, "Wrong alignment on FortRewardNotificationSubWidget_IsPrimaryActionEnabled");
static_assert(sizeof(FortRewardNotificationSubWidget_IsPrimaryActionEnabled) == 0x000001, "Wrong size on FortRewardNotificationSubWidget_IsPrimaryActionEnabled");
static_assert(offsetof(FortRewardNotificationSubWidget_IsPrimaryActionEnabled, bEnabled) == 0x000000, "Member 'FortRewardNotificationSubWidget_IsPrimaryActionEnabled::bEnabled' has a wrong offset!");

// Function FortniteUI.FortRewardNotificationSubWidget.IsPrimaryActionHidden
// 0x0001 (0x0001 - 0x0000)
struct FortRewardNotificationSubWidget_IsPrimaryActionHidden final
{
public:
	bool                                          bHidden;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardNotificationSubWidget_IsPrimaryActionHidden) == 0x000001, "Wrong alignment on FortRewardNotificationSubWidget_IsPrimaryActionHidden");
static_assert(sizeof(FortRewardNotificationSubWidget_IsPrimaryActionHidden) == 0x000001, "Wrong size on FortRewardNotificationSubWidget_IsPrimaryActionHidden");
static_assert(offsetof(FortRewardNotificationSubWidget_IsPrimaryActionHidden, bHidden) == 0x000000, "Member 'FortRewardNotificationSubWidget_IsPrimaryActionHidden::bHidden' has a wrong offset!");

// Function FortniteUI.FortRewardNotificationSubWidget.RemoveInputActionHandler
// 0x0010 (0x0010 - 0x0000)
struct FortRewardNotificationSubWidget_RemoveInputActionHandler final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardNotificationSubWidget_RemoveInputActionHandler) == 0x000008, "Wrong alignment on FortRewardNotificationSubWidget_RemoveInputActionHandler");
static_assert(sizeof(FortRewardNotificationSubWidget_RemoveInputActionHandler) == 0x000010, "Wrong size on FortRewardNotificationSubWidget_RemoveInputActionHandler");
static_assert(offsetof(FortRewardNotificationSubWidget_RemoveInputActionHandler, InputActionRow) == 0x000000, "Member 'FortRewardNotificationSubWidget_RemoveInputActionHandler::InputActionRow' has a wrong offset!");

// Function FortniteUI.FortRewardNotificationSubWidget.SetInputActionHandlerState
// 0x0018 (0x0018 - 0x0000)
struct FortRewardNotificationSubWidget_SetInputActionHandlerState final
{
public:
	class UDataTable*                             DataTable;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RowName;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInputActionState                             State;                                             // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortRewardNotificationSubWidget_SetInputActionHandlerState) == 0x000008, "Wrong alignment on FortRewardNotificationSubWidget_SetInputActionHandlerState");
static_assert(sizeof(FortRewardNotificationSubWidget_SetInputActionHandlerState) == 0x000018, "Wrong size on FortRewardNotificationSubWidget_SetInputActionHandlerState");
static_assert(offsetof(FortRewardNotificationSubWidget_SetInputActionHandlerState, DataTable) == 0x000000, "Member 'FortRewardNotificationSubWidget_SetInputActionHandlerState::DataTable' has a wrong offset!");
static_assert(offsetof(FortRewardNotificationSubWidget_SetInputActionHandlerState, RowName) == 0x000008, "Member 'FortRewardNotificationSubWidget_SetInputActionHandlerState::RowName' has a wrong offset!");
static_assert(offsetof(FortRewardNotificationSubWidget_SetInputActionHandlerState, State) == 0x000010, "Member 'FortRewardNotificationSubWidget_SetInputActionHandlerState::State' has a wrong offset!");

// Function FortniteUI.FortRewardNotificationSubWidget.SetPrimaryActionEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortRewardNotificationSubWidget_SetPrimaryActionEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardNotificationSubWidget_SetPrimaryActionEnabled) == 0x000001, "Wrong alignment on FortRewardNotificationSubWidget_SetPrimaryActionEnabled");
static_assert(sizeof(FortRewardNotificationSubWidget_SetPrimaryActionEnabled) == 0x000001, "Wrong size on FortRewardNotificationSubWidget_SetPrimaryActionEnabled");
static_assert(offsetof(FortRewardNotificationSubWidget_SetPrimaryActionEnabled, bEnabled) == 0x000000, "Member 'FortRewardNotificationSubWidget_SetPrimaryActionEnabled::bEnabled' has a wrong offset!");

// Function FortniteUI.FortRewardNotificationSubWidget.SetPrimaryActionText
// 0x0018 (0x0018 - 0x0000)
struct FortRewardNotificationSubWidget_SetPrimaryActionText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardNotificationSubWidget_SetPrimaryActionText) == 0x000008, "Wrong alignment on FortRewardNotificationSubWidget_SetPrimaryActionText");
static_assert(sizeof(FortRewardNotificationSubWidget_SetPrimaryActionText) == 0x000018, "Wrong size on FortRewardNotificationSubWidget_SetPrimaryActionText");
static_assert(offsetof(FortRewardNotificationSubWidget_SetPrimaryActionText, Text) == 0x000000, "Member 'FortRewardNotificationSubWidget_SetPrimaryActionText::Text' has a wrong offset!");

// Function FortniteUI.FortRewardConversationWidget.GetDataFromSentence
// 0x00E8 (0x00E8 - 0x0000)
struct FortRewardConversationWidget_GetDataFromSentence final
{
public:
	struct FFortConversationSentence              Sentence;                                          // 0x0000(0x00C8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   Text;                                              // 0x00C8(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	class UTexture2D*                             TalkingHeadTexture;                                // 0x00E0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardConversationWidget_GetDataFromSentence) == 0x000008, "Wrong alignment on FortRewardConversationWidget_GetDataFromSentence");
static_assert(sizeof(FortRewardConversationWidget_GetDataFromSentence) == 0x0000E8, "Wrong size on FortRewardConversationWidget_GetDataFromSentence");
static_assert(offsetof(FortRewardConversationWidget_GetDataFromSentence, Sentence) == 0x000000, "Member 'FortRewardConversationWidget_GetDataFromSentence::Sentence' has a wrong offset!");
static_assert(offsetof(FortRewardConversationWidget_GetDataFromSentence, Text) == 0x0000C8, "Member 'FortRewardConversationWidget_GetDataFromSentence::Text' has a wrong offset!");
static_assert(offsetof(FortRewardConversationWidget_GetDataFromSentence, TalkingHeadTexture) == 0x0000E0, "Member 'FortRewardConversationWidget_GetDataFromSentence::TalkingHeadTexture' has a wrong offset!");

// Function FortniteUI.FortRewardConversationWidget.IsValidConversation
// 0x0010 (0x0010 - 0x0000)
struct FortRewardConversationWidget_IsValidConversation final
{
public:
	const class UFortConversation*                Conversation;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortRewardConversationWidget_IsValidConversation) == 0x000008, "Wrong alignment on FortRewardConversationWidget_IsValidConversation");
static_assert(sizeof(FortRewardConversationWidget_IsValidConversation) == 0x000010, "Wrong size on FortRewardConversationWidget_IsValidConversation");
static_assert(offsetof(FortRewardConversationWidget_IsValidConversation, Conversation) == 0x000000, "Member 'FortRewardConversationWidget_IsValidConversation::Conversation' has a wrong offset!");
static_assert(offsetof(FortRewardConversationWidget_IsValidConversation, ReturnValue) == 0x000008, "Member 'FortRewardConversationWidget_IsValidConversation::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortRewardEpicQuestData.GetIconBrush
// 0x0080 (0x0080 - 0x0000)
struct FortRewardEpicQuestData_GetIconBrush final
{
public:
	struct FSlateBrush                            IconBrush;                                         // 0x0000(0x0078)(Parm, OutParm, NativeAccessSpecifierPublic)
	EFortBrushSize                                BrushSize;                                         // 0x0078(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0079(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortRewardEpicQuestData_GetIconBrush) == 0x000008, "Wrong alignment on FortRewardEpicQuestData_GetIconBrush");
static_assert(sizeof(FortRewardEpicQuestData_GetIconBrush) == 0x000080, "Wrong size on FortRewardEpicQuestData_GetIconBrush");
static_assert(offsetof(FortRewardEpicQuestData_GetIconBrush, IconBrush) == 0x000000, "Member 'FortRewardEpicQuestData_GetIconBrush::IconBrush' has a wrong offset!");
static_assert(offsetof(FortRewardEpicQuestData_GetIconBrush, BrushSize) == 0x000078, "Member 'FortRewardEpicQuestData_GetIconBrush::BrushSize' has a wrong offset!");
static_assert(offsetof(FortRewardEpicQuestData_GetIconBrush, ReturnValue) == 0x000079, "Member 'FortRewardEpicQuestData_GetIconBrush::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortRewardExpeditionData.GetIconBrush
// 0x0080 (0x0080 - 0x0000)
struct FortRewardExpeditionData_GetIconBrush final
{
public:
	struct FSlateBrush                            IconBrush;                                         // 0x0000(0x0078)(Parm, OutParm, NativeAccessSpecifierPublic)
	EFortBrushSize                                BrushSize;                                         // 0x0078(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0079(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortRewardExpeditionData_GetIconBrush) == 0x000008, "Wrong alignment on FortRewardExpeditionData_GetIconBrush");
static_assert(sizeof(FortRewardExpeditionData_GetIconBrush) == 0x000080, "Wrong size on FortRewardExpeditionData_GetIconBrush");
static_assert(offsetof(FortRewardExpeditionData_GetIconBrush, IconBrush) == 0x000000, "Member 'FortRewardExpeditionData_GetIconBrush::IconBrush' has a wrong offset!");
static_assert(offsetof(FortRewardExpeditionData_GetIconBrush, BrushSize) == 0x000078, "Member 'FortRewardExpeditionData_GetIconBrush::BrushSize' has a wrong offset!");
static_assert(offsetof(FortRewardExpeditionData_GetIconBrush, ReturnValue) == 0x000079, "Member 'FortRewardExpeditionData_GetIconBrush::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortRewardExpeditionWidget.CollectExpedition
// 0x0008 (0x0008 - 0x0000)
struct FortRewardExpeditionWidget_CollectExpedition final
{
public:
	class UFortExpeditionItem*                    Expedition;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardExpeditionWidget_CollectExpedition) == 0x000008, "Wrong alignment on FortRewardExpeditionWidget_CollectExpedition");
static_assert(sizeof(FortRewardExpeditionWidget_CollectExpedition) == 0x000008, "Wrong size on FortRewardExpeditionWidget_CollectExpedition");
static_assert(offsetof(FortRewardExpeditionWidget_CollectExpedition, Expedition) == 0x000000, "Member 'FortRewardExpeditionWidget_CollectExpedition::Expedition' has a wrong offset!");

// Function FortniteUI.FortRewardExpeditionWidget.OnCollectExpeditionCompleted
// 0x0020 (0x0020 - 0x0000)
struct FortRewardExpeditionWidget_OnCollectExpeditionCompleted final
{
public:
	const class UFortExpeditionItem*              Expedition;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSucceeded;                                        // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortItemInstanceQuantityPair>  Rewards;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardExpeditionWidget_OnCollectExpeditionCompleted) == 0x000008, "Wrong alignment on FortRewardExpeditionWidget_OnCollectExpeditionCompleted");
static_assert(sizeof(FortRewardExpeditionWidget_OnCollectExpeditionCompleted) == 0x000020, "Wrong size on FortRewardExpeditionWidget_OnCollectExpeditionCompleted");
static_assert(offsetof(FortRewardExpeditionWidget_OnCollectExpeditionCompleted, Expedition) == 0x000000, "Member 'FortRewardExpeditionWidget_OnCollectExpeditionCompleted::Expedition' has a wrong offset!");
static_assert(offsetof(FortRewardExpeditionWidget_OnCollectExpeditionCompleted, bSucceeded) == 0x000008, "Member 'FortRewardExpeditionWidget_OnCollectExpeditionCompleted::bSucceeded' has a wrong offset!");
static_assert(offsetof(FortRewardExpeditionWidget_OnCollectExpeditionCompleted, Rewards) == 0x000010, "Member 'FortRewardExpeditionWidget_OnCollectExpeditionCompleted::Rewards' has a wrong offset!");

// Function FortniteUI.FortRewardInfoButton.SetItemInstanceQuantityPair
// 0x0010 (0x0010 - 0x0000)
struct FortRewardInfoButton_SetItemInstanceQuantityPair final
{
public:
	struct FFortItemInstanceQuantityPair          ItemQuantityPair;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardInfoButton_SetItemInstanceQuantityPair) == 0x000008, "Wrong alignment on FortRewardInfoButton_SetItemInstanceQuantityPair");
static_assert(sizeof(FortRewardInfoButton_SetItemInstanceQuantityPair) == 0x000010, "Wrong size on FortRewardInfoButton_SetItemInstanceQuantityPair");
static_assert(offsetof(FortRewardInfoButton_SetItemInstanceQuantityPair, ItemQuantityPair) == 0x000000, "Member 'FortRewardInfoButton_SetItemInstanceQuantityPair::ItemQuantityPair' has a wrong offset!");

// Function FortniteUI.FortRewardInfoButton.SetShowDescription
// 0x0001 (0x0001 - 0x0000)
struct FortRewardInfoButton_SetShowDescription final
{
public:
	bool                                          bInShowDescription;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardInfoButton_SetShowDescription) == 0x000001, "Wrong alignment on FortRewardInfoButton_SetShowDescription");
static_assert(sizeof(FortRewardInfoButton_SetShowDescription) == 0x000001, "Wrong size on FortRewardInfoButton_SetShowDescription");
static_assert(offsetof(FortRewardInfoButton_SetShowDescription, bInShowDescription) == 0x000000, "Member 'FortRewardInfoButton_SetShowDescription::bInShowDescription' has a wrong offset!");

// Function FortniteUI.FortRewardInfoButton.SetShowDescriptionBP
// 0x0001 (0x0001 - 0x0000)
struct FortRewardInfoButton_SetShowDescriptionBP final
{
public:
	bool                                          bInShowDescription;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardInfoButton_SetShowDescriptionBP) == 0x000001, "Wrong alignment on FortRewardInfoButton_SetShowDescriptionBP");
static_assert(sizeof(FortRewardInfoButton_SetShowDescriptionBP) == 0x000001, "Wrong size on FortRewardInfoButton_SetShowDescriptionBP");
static_assert(offsetof(FortRewardInfoButton_SetShowDescriptionBP, bInShowDescription) == 0x000000, "Member 'FortRewardInfoButton_SetShowDescriptionBP::bInShowDescription' has a wrong offset!");

// Function FortniteUI.FortRewardInfoButton.GetItemInstance
// 0x0008 (0x0008 - 0x0000)
struct FortRewardInfoButton_GetItemInstance final
{
public:
	class UFortItem*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardInfoButton_GetItemInstance) == 0x000008, "Wrong alignment on FortRewardInfoButton_GetItemInstance");
static_assert(sizeof(FortRewardInfoButton_GetItemInstance) == 0x000008, "Wrong size on FortRewardInfoButton_GetItemInstance");
static_assert(offsetof(FortRewardInfoButton_GetItemInstance, ReturnValue) == 0x000000, "Member 'FortRewardInfoButton_GetItemInstance::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortRewardInfoButton.GetQuantity
// 0x0004 (0x0004 - 0x0000)
struct FortRewardInfoButton_GetQuantity final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardInfoButton_GetQuantity) == 0x000004, "Wrong alignment on FortRewardInfoButton_GetQuantity");
static_assert(sizeof(FortRewardInfoButton_GetQuantity) == 0x000004, "Wrong size on FortRewardInfoButton_GetQuantity");
static_assert(offsetof(FortRewardInfoButton_GetQuantity, ReturnValue) == 0x000000, "Member 'FortRewardInfoButton_GetQuantity::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortRewardInfoWidget.SetButtonGroup
// 0x0008 (0x0008 - 0x0000)
struct FortRewardInfoWidget_SetButtonGroup final
{
public:
	class UCommonButtonGroup*                     InButtonGroup;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardInfoWidget_SetButtonGroup) == 0x000008, "Wrong alignment on FortRewardInfoWidget_SetButtonGroup");
static_assert(sizeof(FortRewardInfoWidget_SetButtonGroup) == 0x000008, "Wrong size on FortRewardInfoWidget_SetButtonGroup");
static_assert(offsetof(FortRewardInfoWidget_SetButtonGroup, InButtonGroup) == 0x000000, "Member 'FortRewardInfoWidget_SetButtonGroup::InButtonGroup' has a wrong offset!");

// Function FortniteUI.FortRewardInfoWidget.SetReward
// 0x0030 (0x0030 - 0x0000)
struct FortRewardInfoWidget_SetReward final
{
public:
	struct FFortRewardInfo                        RewardsIn;                                         // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardInfoWidget_SetReward) == 0x000008, "Wrong alignment on FortRewardInfoWidget_SetReward");
static_assert(sizeof(FortRewardInfoWidget_SetReward) == 0x000030, "Wrong size on FortRewardInfoWidget_SetReward");
static_assert(offsetof(FortRewardInfoWidget_SetReward, RewardsIn) == 0x000000, "Member 'FortRewardInfoWidget_SetReward::RewardsIn' has a wrong offset!");

// Function FortniteUI.SeasonPassLevelWidget.OnAttemptClaimFinished
// 0x0002 (0x0002 - 0x0000)
struct SeasonPassLevelWidget_OnAttemptClaimFinished final
{
public:
	bool                                          FreeClaimed;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PaidClaimed;                                       // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SeasonPassLevelWidget_OnAttemptClaimFinished) == 0x000001, "Wrong alignment on SeasonPassLevelWidget_OnAttemptClaimFinished");
static_assert(sizeof(SeasonPassLevelWidget_OnAttemptClaimFinished) == 0x000002, "Wrong size on SeasonPassLevelWidget_OnAttemptClaimFinished");
static_assert(offsetof(SeasonPassLevelWidget_OnAttemptClaimFinished, FreeClaimed) == 0x000000, "Member 'SeasonPassLevelWidget_OnAttemptClaimFinished::FreeClaimed' has a wrong offset!");
static_assert(offsetof(SeasonPassLevelWidget_OnAttemptClaimFinished, PaidClaimed) == 0x000001, "Member 'SeasonPassLevelWidget_OnAttemptClaimFinished::PaidClaimed' has a wrong offset!");

// Function FortniteUI.SeasonPassLevelWidget.OnLockedStatusChanged
// 0x0002 (0x0002 - 0x0000)
struct SeasonPassLevelWidget_OnLockedStatusChanged final
{
public:
	bool                                          FreeUnlocked;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PaidUnlocked;                                      // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SeasonPassLevelWidget_OnLockedStatusChanged) == 0x000001, "Wrong alignment on SeasonPassLevelWidget_OnLockedStatusChanged");
static_assert(sizeof(SeasonPassLevelWidget_OnLockedStatusChanged) == 0x000002, "Wrong size on SeasonPassLevelWidget_OnLockedStatusChanged");
static_assert(offsetof(SeasonPassLevelWidget_OnLockedStatusChanged, FreeUnlocked) == 0x000000, "Member 'SeasonPassLevelWidget_OnLockedStatusChanged::FreeUnlocked' has a wrong offset!");
static_assert(offsetof(SeasonPassLevelWidget_OnLockedStatusChanged, PaidUnlocked) == 0x000001, "Member 'SeasonPassLevelWidget_OnLockedStatusChanged::PaidUnlocked' has a wrong offset!");

// Function FortniteUI.SeasonPassLevelWidget.GetLevelInfo
// 0x0008 (0x0008 - 0x0000)
struct SeasonPassLevelWidget_GetLevelInfo final
{
public:
	class UFortSeasonPassLevelInfo*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SeasonPassLevelWidget_GetLevelInfo) == 0x000008, "Wrong alignment on SeasonPassLevelWidget_GetLevelInfo");
static_assert(sizeof(SeasonPassLevelWidget_GetLevelInfo) == 0x000008, "Wrong size on SeasonPassLevelWidget_GetLevelInfo");
static_assert(offsetof(SeasonPassLevelWidget_GetLevelInfo, ReturnValue) == 0x000000, "Member 'SeasonPassLevelWidget_GetLevelInfo::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortRewardNewQuestWidget.GetDataFromSentence
// 0x00E8 (0x00E8 - 0x0000)
struct FortRewardNewQuestWidget_GetDataFromSentence final
{
public:
	struct FFortConversationSentence              Sentence;                                          // 0x0000(0x00C8)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   Text;                                              // 0x00C8(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	class UTexture2D*                             TalkingHeadTexture;                                // 0x00E0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardNewQuestWidget_GetDataFromSentence) == 0x000008, "Wrong alignment on FortRewardNewQuestWidget_GetDataFromSentence");
static_assert(sizeof(FortRewardNewQuestWidget_GetDataFromSentence) == 0x0000E8, "Wrong size on FortRewardNewQuestWidget_GetDataFromSentence");
static_assert(offsetof(FortRewardNewQuestWidget_GetDataFromSentence, Sentence) == 0x000000, "Member 'FortRewardNewQuestWidget_GetDataFromSentence::Sentence' has a wrong offset!");
static_assert(offsetof(FortRewardNewQuestWidget_GetDataFromSentence, Text) == 0x0000C8, "Member 'FortRewardNewQuestWidget_GetDataFromSentence::Text' has a wrong offset!");
static_assert(offsetof(FortRewardNewQuestWidget_GetDataFromSentence, TalkingHeadTexture) == 0x0000E0, "Member 'FortRewardNewQuestWidget_GetDataFromSentence::TalkingHeadTexture' has a wrong offset!");

// Function FortniteUI.FortRewardNewQuestWidget.IsValidConversation
// 0x0010 (0x0010 - 0x0000)
struct FortRewardNewQuestWidget_IsValidConversation final
{
public:
	const class UFortConversation*                Conversation;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortRewardNewQuestWidget_IsValidConversation) == 0x000008, "Wrong alignment on FortRewardNewQuestWidget_IsValidConversation");
static_assert(sizeof(FortRewardNewQuestWidget_IsValidConversation) == 0x000010, "Wrong size on FortRewardNewQuestWidget_IsValidConversation");
static_assert(offsetof(FortRewardNewQuestWidget_IsValidConversation, Conversation) == 0x000000, "Member 'FortRewardNewQuestWidget_IsValidConversation::Conversation' has a wrong offset!");
static_assert(offsetof(FortRewardNewQuestWidget_IsValidConversation, ReturnValue) == 0x000008, "Member 'FortRewardNewQuestWidget_IsValidConversation::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortRewardNotificationWidget.AddCollectionBookData
// 0x0070 (0x0070 - 0x0000)
struct FortRewardNotificationWidget_AddCollectionBookData final
{
public:
	struct FFortCollectionBookRewards             CollectionBookRewards;                             // 0x0000(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardNotificationWidget_AddCollectionBookData) == 0x000008, "Wrong alignment on FortRewardNotificationWidget_AddCollectionBookData");
static_assert(sizeof(FortRewardNotificationWidget_AddCollectionBookData) == 0x000070, "Wrong size on FortRewardNotificationWidget_AddCollectionBookData");
static_assert(offsetof(FortRewardNotificationWidget_AddCollectionBookData, CollectionBookRewards) == 0x000000, "Member 'FortRewardNotificationWidget_AddCollectionBookData::CollectionBookRewards' has a wrong offset!");

// Function FortniteUI.FortRewardNotificationWidget.AddEpicQuestData
// 0x0008 (0x0008 - 0x0000)
struct FortRewardNotificationWidget_AddEpicQuestData final
{
public:
	class UFortQuestItem*                         Quest;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardNotificationWidget_AddEpicQuestData) == 0x000008, "Wrong alignment on FortRewardNotificationWidget_AddEpicQuestData");
static_assert(sizeof(FortRewardNotificationWidget_AddEpicQuestData) == 0x000008, "Wrong size on FortRewardNotificationWidget_AddEpicQuestData");
static_assert(offsetof(FortRewardNotificationWidget_AddEpicQuestData, Quest) == 0x000000, "Member 'FortRewardNotificationWidget_AddEpicQuestData::Quest' has a wrong offset!");

// Function FortniteUI.FortRewardNotificationWidget.AddExpeditionData
// 0x0008 (0x0008 - 0x0000)
struct FortRewardNotificationWidget_AddExpeditionData final
{
public:
	class UFortExpeditionItem*                    ExpeditionItem;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardNotificationWidget_AddExpeditionData) == 0x000008, "Wrong alignment on FortRewardNotificationWidget_AddExpeditionData");
static_assert(sizeof(FortRewardNotificationWidget_AddExpeditionData) == 0x000008, "Wrong size on FortRewardNotificationWidget_AddExpeditionData");
static_assert(offsetof(FortRewardNotificationWidget_AddExpeditionData, ExpeditionItem) == 0x000000, "Member 'FortRewardNotificationWidget_AddExpeditionData::ExpeditionItem' has a wrong offset!");

// Function FortniteUI.FortRewardNotificationWidget.AddQuestData
// 0x0008 (0x0008 - 0x0000)
struct FortRewardNotificationWidget_AddQuestData final
{
public:
	class UFortQuestItem*                         Quest;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardNotificationWidget_AddQuestData) == 0x000008, "Wrong alignment on FortRewardNotificationWidget_AddQuestData");
static_assert(sizeof(FortRewardNotificationWidget_AddQuestData) == 0x000008, "Wrong size on FortRewardNotificationWidget_AddQuestData");
static_assert(offsetof(FortRewardNotificationWidget_AddQuestData, Quest) == 0x000000, "Member 'FortRewardNotificationWidget_AddQuestData::Quest' has a wrong offset!");

// Function FortniteUI.FortRewardNotificationWidget.InspectItem
// 0x0008 (0x0008 - 0x0000)
struct FortRewardNotificationWidget_InspectItem final
{
public:
	class UFortItem*                              ItemToInspect;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardNotificationWidget_InspectItem) == 0x000008, "Wrong alignment on FortRewardNotificationWidget_InspectItem");
static_assert(sizeof(FortRewardNotificationWidget_InspectItem) == 0x000008, "Wrong size on FortRewardNotificationWidget_InspectItem");
static_assert(offsetof(FortRewardNotificationWidget_InspectItem, ItemToInspect) == 0x000000, "Member 'FortRewardNotificationWidget_InspectItem::ItemToInspect' has a wrong offset!");

// Function FortniteUI.FortRewardNotificationWidget.IsPrimaryActionEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortRewardNotificationWidget_IsPrimaryActionEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardNotificationWidget_IsPrimaryActionEnabled) == 0x000001, "Wrong alignment on FortRewardNotificationWidget_IsPrimaryActionEnabled");
static_assert(sizeof(FortRewardNotificationWidget_IsPrimaryActionEnabled) == 0x000001, "Wrong size on FortRewardNotificationWidget_IsPrimaryActionEnabled");
static_assert(offsetof(FortRewardNotificationWidget_IsPrimaryActionEnabled, bEnabled) == 0x000000, "Member 'FortRewardNotificationWidget_IsPrimaryActionEnabled::bEnabled' has a wrong offset!");

// Function FortniteUI.FortRewardNotificationWidget.IsPrimaryActionHidden
// 0x0001 (0x0001 - 0x0000)
struct FortRewardNotificationWidget_IsPrimaryActionHidden final
{
public:
	bool                                          bHidden;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardNotificationWidget_IsPrimaryActionHidden) == 0x000001, "Wrong alignment on FortRewardNotificationWidget_IsPrimaryActionHidden");
static_assert(sizeof(FortRewardNotificationWidget_IsPrimaryActionHidden) == 0x000001, "Wrong size on FortRewardNotificationWidget_IsPrimaryActionHidden");
static_assert(offsetof(FortRewardNotificationWidget_IsPrimaryActionHidden, bHidden) == 0x000000, "Member 'FortRewardNotificationWidget_IsPrimaryActionHidden::bHidden' has a wrong offset!");

// Function FortniteUI.FortRewardNotificationWidget.OnPrimaryActionTextChanged
// 0x0018 (0x0018 - 0x0000)
struct FortRewardNotificationWidget_OnPrimaryActionTextChanged final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardNotificationWidget_OnPrimaryActionTextChanged) == 0x000008, "Wrong alignment on FortRewardNotificationWidget_OnPrimaryActionTextChanged");
static_assert(sizeof(FortRewardNotificationWidget_OnPrimaryActionTextChanged) == 0x000018, "Wrong size on FortRewardNotificationWidget_OnPrimaryActionTextChanged");
static_assert(offsetof(FortRewardNotificationWidget_OnPrimaryActionTextChanged, Text) == 0x000000, "Member 'FortRewardNotificationWidget_OnPrimaryActionTextChanged::Text' has a wrong offset!");

// Function FortniteUI.FortRewardNotificationWidget.SetPrimaryActionEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortRewardNotificationWidget_SetPrimaryActionEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardNotificationWidget_SetPrimaryActionEnabled) == 0x000001, "Wrong alignment on FortRewardNotificationWidget_SetPrimaryActionEnabled");
static_assert(sizeof(FortRewardNotificationWidget_SetPrimaryActionEnabled) == 0x000001, "Wrong size on FortRewardNotificationWidget_SetPrimaryActionEnabled");
static_assert(offsetof(FortRewardNotificationWidget_SetPrimaryActionEnabled, bEnabled) == 0x000000, "Member 'FortRewardNotificationWidget_SetPrimaryActionEnabled::bEnabled' has a wrong offset!");

// Function FortniteUI.FortRewardNotificationWidget.SetPrimaryActionText
// 0x0018 (0x0018 - 0x0000)
struct FortRewardNotificationWidget_SetPrimaryActionText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRewardNotificationWidget_SetPrimaryActionText) == 0x000008, "Wrong alignment on FortRewardNotificationWidget_SetPrimaryActionText");
static_assert(sizeof(FortRewardNotificationWidget_SetPrimaryActionText) == 0x000018, "Wrong size on FortRewardNotificationWidget_SetPrimaryActionText");
static_assert(offsetof(FortRewardNotificationWidget_SetPrimaryActionText, Text) == 0x000000, "Member 'FortRewardNotificationWidget_SetPrimaryActionText::Text' has a wrong offset!");

// Function FortniteUI.FortRewardQuestData.GetIconBrush
// 0x0080 (0x0080 - 0x0000)
struct FortRewardQuestData_GetIconBrush final
{
public:
	struct FSlateBrush                            IconBrush;                                         // 0x0000(0x0078)(Parm, OutParm, NativeAccessSpecifierPublic)
	EFortBrushSize                                BrushSize;                                         // 0x0078(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0079(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortRewardQuestData_GetIconBrush) == 0x000008, "Wrong alignment on FortRewardQuestData_GetIconBrush");
static_assert(sizeof(FortRewardQuestData_GetIconBrush) == 0x000080, "Wrong size on FortRewardQuestData_GetIconBrush");
static_assert(offsetof(FortRewardQuestData_GetIconBrush, IconBrush) == 0x000000, "Member 'FortRewardQuestData_GetIconBrush::IconBrush' has a wrong offset!");
static_assert(offsetof(FortRewardQuestData_GetIconBrush, BrushSize) == 0x000078, "Member 'FortRewardQuestData_GetIconBrush::BrushSize' has a wrong offset!");
static_assert(offsetof(FortRewardQuestData_GetIconBrush, ReturnValue) == 0x000079, "Member 'FortRewardQuestData_GetIconBrush::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortRichTextBlock.SetText
// 0x0018 (0x0018 - 0x0000)
struct FortRichTextBlock_SetText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortRichTextBlock_SetText) == 0x000008, "Wrong alignment on FortRichTextBlock_SetText");
static_assert(sizeof(FortRichTextBlock_SetText) == 0x000018, "Wrong size on FortRichTextBlock_SetText");
static_assert(offsetof(FortRichTextBlock_SetText, InText) == 0x000000, "Member 'FortRichTextBlock_SetText::InText' has a wrong offset!");

// Function FortniteUI.FortSkillTreeCanvas.HandleButtonGroupSelectionChanged
// 0x0010 (0x0010 - 0x0000)
struct FortSkillTreeCanvas_HandleButtonGroupSelectionChanged final
{
public:
	class UCommonButton*                          SelectedButton;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ButtonIndex;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSkillTreeCanvas_HandleButtonGroupSelectionChanged) == 0x000008, "Wrong alignment on FortSkillTreeCanvas_HandleButtonGroupSelectionChanged");
static_assert(sizeof(FortSkillTreeCanvas_HandleButtonGroupSelectionChanged) == 0x000010, "Wrong size on FortSkillTreeCanvas_HandleButtonGroupSelectionChanged");
static_assert(offsetof(FortSkillTreeCanvas_HandleButtonGroupSelectionChanged, SelectedButton) == 0x000000, "Member 'FortSkillTreeCanvas_HandleButtonGroupSelectionChanged::SelectedButton' has a wrong offset!");
static_assert(offsetof(FortSkillTreeCanvas_HandleButtonGroupSelectionChanged, ButtonIndex) == 0x000008, "Member 'FortSkillTreeCanvas_HandleButtonGroupSelectionChanged::ButtonIndex' has a wrong offset!");

// Function FortniteUI.FortSkillTreeCanvas.HandleNodeButtonClicked
// 0x0008 (0x0008 - 0x0000)
struct FortSkillTreeCanvas_HandleNodeButtonClicked final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreeCanvas_HandleNodeButtonClicked) == 0x000008, "Wrong alignment on FortSkillTreeCanvas_HandleNodeButtonClicked");
static_assert(sizeof(FortSkillTreeCanvas_HandleNodeButtonClicked) == 0x000008, "Wrong size on FortSkillTreeCanvas_HandleNodeButtonClicked");
static_assert(offsetof(FortSkillTreeCanvas_HandleNodeButtonClicked, Button) == 0x000000, "Member 'FortSkillTreeCanvas_HandleNodeButtonClicked::Button' has a wrong offset!");

// Function FortniteUI.FortSkillTreeCanvasNode.TryGetNodeDisplayData
// 0x02E0 (0x02E0 - 0x0000)
struct FortSkillTreeCanvasNode_TryGetNodeDisplayData final
{
public:
	struct FFortSkillTreeNodeDisplayData          OutDisplayData;                                    // 0x0000(0x02D8)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x02D8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSkillTreeCanvasNode_TryGetNodeDisplayData) == 0x000008, "Wrong alignment on FortSkillTreeCanvasNode_TryGetNodeDisplayData");
static_assert(sizeof(FortSkillTreeCanvasNode_TryGetNodeDisplayData) == 0x0002E0, "Wrong size on FortSkillTreeCanvasNode_TryGetNodeDisplayData");
static_assert(offsetof(FortSkillTreeCanvasNode_TryGetNodeDisplayData, OutDisplayData) == 0x000000, "Member 'FortSkillTreeCanvasNode_TryGetNodeDisplayData::OutDisplayData' has a wrong offset!");
static_assert(offsetof(FortSkillTreeCanvasNode_TryGetNodeDisplayData, ReturnValue) == 0x0002D8, "Member 'FortSkillTreeCanvasNode_TryGetNodeDisplayData::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreeCanvasNode.TryGetSkillTreeNodeState
// 0x000C (0x000C - 0x0000)
struct FortSkillTreeCanvasNode_TryGetSkillTreeNodeState final
{
public:
	struct FHomebaseNodeState                     OutNodeState;                                      // 0x0000(0x0008)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSkillTreeCanvasNode_TryGetSkillTreeNodeState) == 0x000004, "Wrong alignment on FortSkillTreeCanvasNode_TryGetSkillTreeNodeState");
static_assert(sizeof(FortSkillTreeCanvasNode_TryGetSkillTreeNodeState) == 0x00000C, "Wrong size on FortSkillTreeCanvasNode_TryGetSkillTreeNodeState");
static_assert(offsetof(FortSkillTreeCanvasNode_TryGetSkillTreeNodeState, OutNodeState) == 0x000000, "Member 'FortSkillTreeCanvasNode_TryGetSkillTreeNodeState::OutNodeState' has a wrong offset!");
static_assert(offsetof(FortSkillTreeCanvasNode_TryGetSkillTreeNodeState, ReturnValue) == 0x000008, "Member 'FortSkillTreeCanvasNode_TryGetSkillTreeNodeState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreeCanvasNode.TryGetStaticSkillTreeNodeData
// 0x00C8 (0x00C8 - 0x0000)
struct FortSkillTreeCanvasNode_TryGetStaticSkillTreeNodeData final
{
public:
	struct FHomebaseNode                          OutNodeData;                                       // 0x0000(0x00C0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSkillTreeCanvasNode_TryGetStaticSkillTreeNodeData) == 0x000008, "Wrong alignment on FortSkillTreeCanvasNode_TryGetStaticSkillTreeNodeData");
static_assert(sizeof(FortSkillTreeCanvasNode_TryGetStaticSkillTreeNodeData) == 0x0000C8, "Wrong size on FortSkillTreeCanvasNode_TryGetStaticSkillTreeNodeData");
static_assert(offsetof(FortSkillTreeCanvasNode_TryGetStaticSkillTreeNodeData, OutNodeData) == 0x000000, "Member 'FortSkillTreeCanvasNode_TryGetStaticSkillTreeNodeData::OutNodeData' has a wrong offset!");
static_assert(offsetof(FortSkillTreeCanvasNode_TryGetStaticSkillTreeNodeData, ReturnValue) == 0x0000C0, "Member 'FortSkillTreeCanvasNode_TryGetStaticSkillTreeNodeData::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreeCanvasEntityInterface.PlayIntroTransitionBP
// 0x0001 (0x0001 - 0x0000)
struct FortSkillTreeCanvasEntityInterface_PlayIntroTransitionBP final
{
public:
	EFortAnimSpeed                                AnimSpeed;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreeCanvasEntityInterface_PlayIntroTransitionBP) == 0x000001, "Wrong alignment on FortSkillTreeCanvasEntityInterface_PlayIntroTransitionBP");
static_assert(sizeof(FortSkillTreeCanvasEntityInterface_PlayIntroTransitionBP) == 0x000001, "Wrong size on FortSkillTreeCanvasEntityInterface_PlayIntroTransitionBP");
static_assert(offsetof(FortSkillTreeCanvasEntityInterface_PlayIntroTransitionBP, AnimSpeed) == 0x000000, "Member 'FortSkillTreeCanvasEntityInterface_PlayIntroTransitionBP::AnimSpeed' has a wrong offset!");

// Function FortniteUI.FortSkillTreeCanvasEntityInterface.PlayOutroTransitionBP
// 0x0001 (0x0001 - 0x0000)
struct FortSkillTreeCanvasEntityInterface_PlayOutroTransitionBP final
{
public:
	EFortAnimSpeed                                AnimSpeed;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreeCanvasEntityInterface_PlayOutroTransitionBP) == 0x000001, "Wrong alignment on FortSkillTreeCanvasEntityInterface_PlayOutroTransitionBP");
static_assert(sizeof(FortSkillTreeCanvasEntityInterface_PlayOutroTransitionBP) == 0x000001, "Wrong size on FortSkillTreeCanvasEntityInterface_PlayOutroTransitionBP");
static_assert(offsetof(FortSkillTreeCanvasEntityInterface_PlayOutroTransitionBP, AnimSpeed) == 0x000000, "Member 'FortSkillTreeCanvasEntityInterface_PlayOutroTransitionBP::AnimSpeed' has a wrong offset!");

// Function FortniteUI.FortSkillTreeCanvasSlot.SetPosition
// 0x0008 (0x0008 - 0x0000)
struct FortSkillTreeCanvasSlot_SetPosition final
{
public:
	struct FVector2D                              InPosition;                                        // 0x0000(0x0008)(Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreeCanvasSlot_SetPosition) == 0x000004, "Wrong alignment on FortSkillTreeCanvasSlot_SetPosition");
static_assert(sizeof(FortSkillTreeCanvasSlot_SetPosition) == 0x000008, "Wrong size on FortSkillTreeCanvasSlot_SetPosition");
static_assert(offsetof(FortSkillTreeCanvasSlot_SetPosition, InPosition) == 0x000000, "Member 'FortSkillTreeCanvasSlot_SetPosition::InPosition' has a wrong offset!");

// Function FortniteUI.FortSkillTreeCanvasSlot.SetZOrder
// 0x0004 (0x0004 - 0x0000)
struct FortSkillTreeCanvasSlot_SetZOrder final
{
public:
	int32                                         InZOrder;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreeCanvasSlot_SetZOrder) == 0x000004, "Wrong alignment on FortSkillTreeCanvasSlot_SetZOrder");
static_assert(sizeof(FortSkillTreeCanvasSlot_SetZOrder) == 0x000004, "Wrong size on FortSkillTreeCanvasSlot_SetZOrder");
static_assert(offsetof(FortSkillTreeCanvasSlot_SetZOrder, InZOrder) == 0x000000, "Member 'FortSkillTreeCanvasSlot_SetZOrder::InZOrder' has a wrong offset!");

// Function FortniteUI.FortSkillTreeCanvasSlot.GetBasePosition
// 0x0008 (0x0008 - 0x0000)
struct FortSkillTreeCanvasSlot_GetBasePosition final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreeCanvasSlot_GetBasePosition) == 0x000004, "Wrong alignment on FortSkillTreeCanvasSlot_GetBasePosition");
static_assert(sizeof(FortSkillTreeCanvasSlot_GetBasePosition) == 0x000008, "Wrong size on FortSkillTreeCanvasSlot_GetBasePosition");
static_assert(offsetof(FortSkillTreeCanvasSlot_GetBasePosition, ReturnValue) == 0x000000, "Member 'FortSkillTreeCanvasSlot_GetBasePosition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreeCanvasSlot.GetPosition
// 0x0008 (0x0008 - 0x0000)
struct FortSkillTreeCanvasSlot_GetPosition final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreeCanvasSlot_GetPosition) == 0x000004, "Wrong alignment on FortSkillTreeCanvasSlot_GetPosition");
static_assert(sizeof(FortSkillTreeCanvasSlot_GetPosition) == 0x000008, "Wrong size on FortSkillTreeCanvasSlot_GetPosition");
static_assert(offsetof(FortSkillTreeCanvasSlot_GetPosition, ReturnValue) == 0x000000, "Member 'FortSkillTreeCanvasSlot_GetPosition::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreeCanvasSlot.GetZOrder
// 0x0004 (0x0004 - 0x0000)
struct FortSkillTreeCanvasSlot_GetZOrder final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreeCanvasSlot_GetZOrder) == 0x000004, "Wrong alignment on FortSkillTreeCanvasSlot_GetZOrder");
static_assert(sizeof(FortSkillTreeCanvasSlot_GetZOrder) == 0x000004, "Wrong size on FortSkillTreeCanvasSlot_GetZOrder");
static_assert(offsetof(FortSkillTreeCanvasSlot_GetZOrder, ReturnValue) == 0x000000, "Member 'FortSkillTreeCanvasSlot_GetZOrder::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreePageSelectorButton.GetButtonNodeCompletionText
// 0x0018 (0x0018 - 0x0000)
struct FortSkillTreePageSelectorButton_GetButtonNodeCompletionText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreePageSelectorButton_GetButtonNodeCompletionText) == 0x000008, "Wrong alignment on FortSkillTreePageSelectorButton_GetButtonNodeCompletionText");
static_assert(sizeof(FortSkillTreePageSelectorButton_GetButtonNodeCompletionText) == 0x000018, "Wrong size on FortSkillTreePageSelectorButton_GetButtonNodeCompletionText");
static_assert(offsetof(FortSkillTreePageSelectorButton_GetButtonNodeCompletionText, ReturnValue) == 0x000000, "Member 'FortSkillTreePageSelectorButton_GetButtonNodeCompletionText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreePageSelectorButton.IsSkillTreePageLocked
// 0x0001 (0x0001 - 0x0000)
struct FortSkillTreePageSelectorButton_IsSkillTreePageLocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreePageSelectorButton_IsSkillTreePageLocked) == 0x000001, "Wrong alignment on FortSkillTreePageSelectorButton_IsSkillTreePageLocked");
static_assert(sizeof(FortSkillTreePageSelectorButton_IsSkillTreePageLocked) == 0x000001, "Wrong size on FortSkillTreePageSelectorButton_IsSkillTreePageLocked");
static_assert(offsetof(FortSkillTreePageSelectorButton_IsSkillTreePageLocked, ReturnValue) == 0x000000, "Member 'FortSkillTreePageSelectorButton_IsSkillTreePageLocked::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreePageSelectorButton.TryGetSkillTreeNodeState
// 0x0018 (0x0018 - 0x0000)
struct FortSkillTreePageSelectorButton_TryGetSkillTreeNodeState final
{
public:
	class FName                                   NodeID;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHomebaseNodeState                     OutNodeState;                                      // 0x0008(0x0008)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSkillTreePageSelectorButton_TryGetSkillTreeNodeState) == 0x000004, "Wrong alignment on FortSkillTreePageSelectorButton_TryGetSkillTreeNodeState");
static_assert(sizeof(FortSkillTreePageSelectorButton_TryGetSkillTreeNodeState) == 0x000018, "Wrong size on FortSkillTreePageSelectorButton_TryGetSkillTreeNodeState");
static_assert(offsetof(FortSkillTreePageSelectorButton_TryGetSkillTreeNodeState, NodeID) == 0x000000, "Member 'FortSkillTreePageSelectorButton_TryGetSkillTreeNodeState::NodeID' has a wrong offset!");
static_assert(offsetof(FortSkillTreePageSelectorButton_TryGetSkillTreeNodeState, OutNodeState) == 0x000008, "Member 'FortSkillTreePageSelectorButton_TryGetSkillTreeNodeState::OutNodeState' has a wrong offset!");
static_assert(offsetof(FortSkillTreePageSelectorButton_TryGetSkillTreeNodeState, ReturnValue) == 0x000010, "Member 'FortSkillTreePageSelectorButton_TryGetSkillTreeNodeState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreePageSelectorButton.TryGetStaticSkillTreePageData
// 0x0068 (0x0068 - 0x0000)
struct FortSkillTreePageSelectorButton_TryGetStaticSkillTreePageData final
{
public:
	struct FHomebaseNodePage                      OutStaticData;                                     // 0x0000(0x0060)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSkillTreePageSelectorButton_TryGetStaticSkillTreePageData) == 0x000008, "Wrong alignment on FortSkillTreePageSelectorButton_TryGetStaticSkillTreePageData");
static_assert(sizeof(FortSkillTreePageSelectorButton_TryGetStaticSkillTreePageData) == 0x000068, "Wrong size on FortSkillTreePageSelectorButton_TryGetStaticSkillTreePageData");
static_assert(offsetof(FortSkillTreePageSelectorButton_TryGetStaticSkillTreePageData, OutStaticData) == 0x000000, "Member 'FortSkillTreePageSelectorButton_TryGetStaticSkillTreePageData::OutStaticData' has a wrong offset!");
static_assert(offsetof(FortSkillTreePageSelectorButton_TryGetStaticSkillTreePageData, ReturnValue) == 0x000060, "Member 'FortSkillTreePageSelectorButton_TryGetStaticSkillTreePageData::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreeLandingPage.ClearEventSkillTrees
// 0x0001 (0x0001 - 0x0000)
struct FortSkillTreeLandingPage_ClearEventSkillTrees final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreeLandingPage_ClearEventSkillTrees) == 0x000001, "Wrong alignment on FortSkillTreeLandingPage_ClearEventSkillTrees");
static_assert(sizeof(FortSkillTreeLandingPage_ClearEventSkillTrees) == 0x000001, "Wrong size on FortSkillTreeLandingPage_ClearEventSkillTrees");
static_assert(offsetof(FortSkillTreeLandingPage_ClearEventSkillTrees, ReturnValue) == 0x000000, "Member 'FortSkillTreeLandingPage_ClearEventSkillTrees::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreeLandingPage.CreateAndAddPageButton
// 0x0018 (0x0018 - 0x0000)
struct FortSkillTreeLandingPage_CreateAndAddPageButton final
{
public:
	class FName                                   SkillTreePageId;                                   // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESkillTreePageType                            PageType;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bNewRow;                                           // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortSkillTreePageSelectorButton*       ReturnValue;                                       // 0x0010(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreeLandingPage_CreateAndAddPageButton) == 0x000008, "Wrong alignment on FortSkillTreeLandingPage_CreateAndAddPageButton");
static_assert(sizeof(FortSkillTreeLandingPage_CreateAndAddPageButton) == 0x000018, "Wrong size on FortSkillTreeLandingPage_CreateAndAddPageButton");
static_assert(offsetof(FortSkillTreeLandingPage_CreateAndAddPageButton, SkillTreePageId) == 0x000000, "Member 'FortSkillTreeLandingPage_CreateAndAddPageButton::SkillTreePageId' has a wrong offset!");
static_assert(offsetof(FortSkillTreeLandingPage_CreateAndAddPageButton, PageType) == 0x000008, "Member 'FortSkillTreeLandingPage_CreateAndAddPageButton::PageType' has a wrong offset!");
static_assert(offsetof(FortSkillTreeLandingPage_CreateAndAddPageButton, bNewRow) == 0x000009, "Member 'FortSkillTreeLandingPage_CreateAndAddPageButton::bNewRow' has a wrong offset!");
static_assert(offsetof(FortSkillTreeLandingPage_CreateAndAddPageButton, ReturnValue) == 0x000010, "Member 'FortSkillTreeLandingPage_CreateAndAddPageButton::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreeLandingPage.SetupEventBasedSkillTreePages
// 0x0010 (0x0010 - 0x0000)
struct FortSkillTreeLandingPage_SetupEventBasedSkillTreePages final
{
public:
	TArray<class FString>                         ActiveEventFlags;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreeLandingPage_SetupEventBasedSkillTreePages) == 0x000008, "Wrong alignment on FortSkillTreeLandingPage_SetupEventBasedSkillTreePages");
static_assert(sizeof(FortSkillTreeLandingPage_SetupEventBasedSkillTreePages) == 0x000010, "Wrong size on FortSkillTreeLandingPage_SetupEventBasedSkillTreePages");
static_assert(offsetof(FortSkillTreeLandingPage_SetupEventBasedSkillTreePages, ActiveEventFlags) == 0x000000, "Member 'FortSkillTreeLandingPage_SetupEventBasedSkillTreePages::ActiveEventFlags' has a wrong offset!");

// Function FortniteUI.FortSkillTreeNodeDetailsPanel.SetSkillTreeNodeToRepresent
// 0x0008 (0x0008 - 0x0000)
struct FortSkillTreeNodeDetailsPanel_SetSkillTreeNodeToRepresent final
{
public:
	class FName                                   SkillTreeNodeId;                                   // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreeNodeDetailsPanel_SetSkillTreeNodeToRepresent) == 0x000004, "Wrong alignment on FortSkillTreeNodeDetailsPanel_SetSkillTreeNodeToRepresent");
static_assert(sizeof(FortSkillTreeNodeDetailsPanel_SetSkillTreeNodeToRepresent) == 0x000008, "Wrong size on FortSkillTreeNodeDetailsPanel_SetSkillTreeNodeToRepresent");
static_assert(offsetof(FortSkillTreeNodeDetailsPanel_SetSkillTreeNodeToRepresent, SkillTreeNodeId) == 0x000000, "Member 'FortSkillTreeNodeDetailsPanel_SetSkillTreeNodeToRepresent::SkillTreeNodeId' has a wrong offset!");

// Function FortniteUI.FortSkillTreeNodeDetailsPanel.HasSkillTreeNodeToRepresent
// 0x0001 (0x0001 - 0x0000)
struct FortSkillTreeNodeDetailsPanel_HasSkillTreeNodeToRepresent final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreeNodeDetailsPanel_HasSkillTreeNodeToRepresent) == 0x000001, "Wrong alignment on FortSkillTreeNodeDetailsPanel_HasSkillTreeNodeToRepresent");
static_assert(sizeof(FortSkillTreeNodeDetailsPanel_HasSkillTreeNodeToRepresent) == 0x000001, "Wrong size on FortSkillTreeNodeDetailsPanel_HasSkillTreeNodeToRepresent");
static_assert(offsetof(FortSkillTreeNodeDetailsPanel_HasSkillTreeNodeToRepresent, ReturnValue) == 0x000000, "Member 'FortSkillTreeNodeDetailsPanel_HasSkillTreeNodeToRepresent::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreeNodeDetailsPanel.TryGetNodeDisplayData
// 0x03A0 (0x03A0 - 0x0000)
struct FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayData final
{
public:
	struct FHomebaseNode                          HomebaseNode;                                      // 0x0000(0x00C0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FFortSkillTreeNodeDisplayData          OutDisplayData;                                    // 0x00C0(0x02D8)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0398(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayData) == 0x000008, "Wrong alignment on FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayData");
static_assert(sizeof(FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayData) == 0x0003A0, "Wrong size on FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayData");
static_assert(offsetof(FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayData, HomebaseNode) == 0x000000, "Member 'FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayData::HomebaseNode' has a wrong offset!");
static_assert(offsetof(FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayData, OutDisplayData) == 0x0000C0, "Member 'FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayData::OutDisplayData' has a wrong offset!");
static_assert(offsetof(FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayData, ReturnValue) == 0x000398, "Member 'FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayData::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreeNodeDetailsPanel.TryGetNodeDisplayDataFromID
// 0x02E8 (0x02E8 - 0x0000)
struct FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayDataFromID final
{
public:
	class FName                                   HomeBaseNodeID;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortSkillTreeNodeDisplayData          OutDisplayData;                                    // 0x0008(0x02D8)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x02E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayDataFromID) == 0x000008, "Wrong alignment on FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayDataFromID");
static_assert(sizeof(FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayDataFromID) == 0x0002E8, "Wrong size on FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayDataFromID");
static_assert(offsetof(FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayDataFromID, HomeBaseNodeID) == 0x000000, "Member 'FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayDataFromID::HomeBaseNodeID' has a wrong offset!");
static_assert(offsetof(FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayDataFromID, OutDisplayData) == 0x000008, "Member 'FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayDataFromID::OutDisplayData' has a wrong offset!");
static_assert(offsetof(FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayDataFromID, ReturnValue) == 0x0002E0, "Member 'FortSkillTreeNodeDetailsPanel_TryGetNodeDisplayDataFromID::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreeNodeDetailsPanel.TryGetNodeSquadAttributeData
// 0x03C8 (0x03C8 - 0x0000)
struct FortSkillTreeNodeDetailsPanel_TryGetNodeSquadAttributeData final
{
public:
	struct FHomebaseNode                          HomebaseNode;                                      // 0x0000(0x00C0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   Param_Name;                                        // 0x00C0(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x00D8(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                    Brush;                                             // 0x00F0(0x02D0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x03C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSkillTreeNodeDetailsPanel_TryGetNodeSquadAttributeData) == 0x000008, "Wrong alignment on FortSkillTreeNodeDetailsPanel_TryGetNodeSquadAttributeData");
static_assert(sizeof(FortSkillTreeNodeDetailsPanel_TryGetNodeSquadAttributeData) == 0x0003C8, "Wrong size on FortSkillTreeNodeDetailsPanel_TryGetNodeSquadAttributeData");
static_assert(offsetof(FortSkillTreeNodeDetailsPanel_TryGetNodeSquadAttributeData, HomebaseNode) == 0x000000, "Member 'FortSkillTreeNodeDetailsPanel_TryGetNodeSquadAttributeData::HomebaseNode' has a wrong offset!");
static_assert(offsetof(FortSkillTreeNodeDetailsPanel_TryGetNodeSquadAttributeData, Param_Name) == 0x0000C0, "Member 'FortSkillTreeNodeDetailsPanel_TryGetNodeSquadAttributeData::Param_Name' has a wrong offset!");
static_assert(offsetof(FortSkillTreeNodeDetailsPanel_TryGetNodeSquadAttributeData, Description) == 0x0000D8, "Member 'FortSkillTreeNodeDetailsPanel_TryGetNodeSquadAttributeData::Description' has a wrong offset!");
static_assert(offsetof(FortSkillTreeNodeDetailsPanel_TryGetNodeSquadAttributeData, Brush) == 0x0000F0, "Member 'FortSkillTreeNodeDetailsPanel_TryGetNodeSquadAttributeData::Brush' has a wrong offset!");
static_assert(offsetof(FortSkillTreeNodeDetailsPanel_TryGetNodeSquadAttributeData, ReturnValue) == 0x0003C0, "Member 'FortSkillTreeNodeDetailsPanel_TryGetNodeSquadAttributeData::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreeNodeDetailsPanel.TryGetSkillTreeNodeState
// 0x000C (0x000C - 0x0000)
struct FortSkillTreeNodeDetailsPanel_TryGetSkillTreeNodeState final
{
public:
	struct FHomebaseNodeState                     OutNodeState;                                      // 0x0000(0x0008)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSkillTreeNodeDetailsPanel_TryGetSkillTreeNodeState) == 0x000004, "Wrong alignment on FortSkillTreeNodeDetailsPanel_TryGetSkillTreeNodeState");
static_assert(sizeof(FortSkillTreeNodeDetailsPanel_TryGetSkillTreeNodeState) == 0x00000C, "Wrong size on FortSkillTreeNodeDetailsPanel_TryGetSkillTreeNodeState");
static_assert(offsetof(FortSkillTreeNodeDetailsPanel_TryGetSkillTreeNodeState, OutNodeState) == 0x000000, "Member 'FortSkillTreeNodeDetailsPanel_TryGetSkillTreeNodeState::OutNodeState' has a wrong offset!");
static_assert(offsetof(FortSkillTreeNodeDetailsPanel_TryGetSkillTreeNodeState, ReturnValue) == 0x000008, "Member 'FortSkillTreeNodeDetailsPanel_TryGetSkillTreeNodeState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreePageWidget.PlayIntroTransitionBP
// 0x0001 (0x0001 - 0x0000)
struct FortSkillTreePageWidget_PlayIntroTransitionBP final
{
public:
	EFortAnimSpeed                                AnimSpeed;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreePageWidget_PlayIntroTransitionBP) == 0x000001, "Wrong alignment on FortSkillTreePageWidget_PlayIntroTransitionBP");
static_assert(sizeof(FortSkillTreePageWidget_PlayIntroTransitionBP) == 0x000001, "Wrong size on FortSkillTreePageWidget_PlayIntroTransitionBP");
static_assert(offsetof(FortSkillTreePageWidget_PlayIntroTransitionBP, AnimSpeed) == 0x000000, "Member 'FortSkillTreePageWidget_PlayIntroTransitionBP::AnimSpeed' has a wrong offset!");

// Function FortniteUI.FortSkillTreePageWidget.PlayOutroTransitionBP
// 0x0001 (0x0001 - 0x0000)
struct FortSkillTreePageWidget_PlayOutroTransitionBP final
{
public:
	EFortAnimSpeed                                AnimSpeed;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreePageWidget_PlayOutroTransitionBP) == 0x000001, "Wrong alignment on FortSkillTreePageWidget_PlayOutroTransitionBP");
static_assert(sizeof(FortSkillTreePageWidget_PlayOutroTransitionBP) == 0x000001, "Wrong size on FortSkillTreePageWidget_PlayOutroTransitionBP");
static_assert(offsetof(FortSkillTreePageWidget_PlayOutroTransitionBP, AnimSpeed) == 0x000000, "Member 'FortSkillTreePageWidget_PlayOutroTransitionBP::AnimSpeed' has a wrong offset!");

// Function FortniteUI.FortSkillTreePageWidget.TryGetStaticSkillTreePageData
// 0x0068 (0x0068 - 0x0000)
struct FortSkillTreePageWidget_TryGetStaticSkillTreePageData final
{
public:
	struct FHomebaseNodePage                      OutStaticData;                                     // 0x0000(0x0060)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSkillTreePageWidget_TryGetStaticSkillTreePageData) == 0x000008, "Wrong alignment on FortSkillTreePageWidget_TryGetStaticSkillTreePageData");
static_assert(sizeof(FortSkillTreePageWidget_TryGetStaticSkillTreePageData) == 0x000068, "Wrong size on FortSkillTreePageWidget_TryGetStaticSkillTreePageData");
static_assert(offsetof(FortSkillTreePageWidget_TryGetStaticSkillTreePageData, OutStaticData) == 0x000000, "Member 'FortSkillTreePageWidget_TryGetStaticSkillTreePageData::OutStaticData' has a wrong offset!");
static_assert(offsetof(FortSkillTreePageWidget_TryGetStaticSkillTreePageData, ReturnValue) == 0x000060, "Member 'FortSkillTreePageWidget_TryGetStaticSkillTreePageData::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreeViewer.BackOutOfSubPage
// 0x0001 (0x0001 - 0x0000)
struct FortSkillTreeViewer_BackOutOfSubPage final
{
public:
	EFortAnimSpeed                                TransitionSpeed;                                   // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreeViewer_BackOutOfSubPage) == 0x000001, "Wrong alignment on FortSkillTreeViewer_BackOutOfSubPage");
static_assert(sizeof(FortSkillTreeViewer_BackOutOfSubPage) == 0x000001, "Wrong size on FortSkillTreeViewer_BackOutOfSubPage");
static_assert(offsetof(FortSkillTreeViewer_BackOutOfSubPage, TransitionSpeed) == 0x000000, "Member 'FortSkillTreeViewer_BackOutOfSubPage::TransitionSpeed' has a wrong offset!");

// Function FortniteUI.FortSkillTreeViewer.DrillDownToSubPage
// 0x0010 (0x0010 - 0x0000)
struct FortSkillTreeViewer_DrillDownToSubPage final
{
public:
	class FName                                   DrillDownSkillTreeNodeId;                          // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortAnimSpeed                                TransitionSpeed;                                   // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSkillTreeViewer_DrillDownToSubPage) == 0x000004, "Wrong alignment on FortSkillTreeViewer_DrillDownToSubPage");
static_assert(sizeof(FortSkillTreeViewer_DrillDownToSubPage) == 0x000010, "Wrong size on FortSkillTreeViewer_DrillDownToSubPage");
static_assert(offsetof(FortSkillTreeViewer_DrillDownToSubPage, DrillDownSkillTreeNodeId) == 0x000000, "Member 'FortSkillTreeViewer_DrillDownToSubPage::DrillDownSkillTreeNodeId' has a wrong offset!");
static_assert(offsetof(FortSkillTreeViewer_DrillDownToSubPage, TransitionSpeed) == 0x000008, "Member 'FortSkillTreeViewer_DrillDownToSubPage::TransitionSpeed' has a wrong offset!");

// Function FortniteUI.FortSkillTreeViewer.GetPageAquiredNodes
// 0x0010 (0x0010 - 0x0000)
struct FortSkillTreeViewer_GetPageAquiredNodes final
{
public:
	class FName                                   SkillTreePageId;                                   // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSkillTreeViewer_GetPageAquiredNodes) == 0x000004, "Wrong alignment on FortSkillTreeViewer_GetPageAquiredNodes");
static_assert(sizeof(FortSkillTreeViewer_GetPageAquiredNodes) == 0x000010, "Wrong size on FortSkillTreeViewer_GetPageAquiredNodes");
static_assert(offsetof(FortSkillTreeViewer_GetPageAquiredNodes, SkillTreePageId) == 0x000000, "Member 'FortSkillTreeViewer_GetPageAquiredNodes::SkillTreePageId' has a wrong offset!");
static_assert(offsetof(FortSkillTreeViewer_GetPageAquiredNodes, ReturnValue) == 0x000008, "Member 'FortSkillTreeViewer_GetPageAquiredNodes::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreeViewer.GetPageLocked
// 0x0010 (0x0010 - 0x0000)
struct FortSkillTreeViewer_GetPageLocked final
{
public:
	class FName                                   SkillTreePageId;                                   // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSkillTreeViewer_GetPageLocked) == 0x000004, "Wrong alignment on FortSkillTreeViewer_GetPageLocked");
static_assert(sizeof(FortSkillTreeViewer_GetPageLocked) == 0x000010, "Wrong size on FortSkillTreeViewer_GetPageLocked");
static_assert(offsetof(FortSkillTreeViewer_GetPageLocked, SkillTreePageId) == 0x000000, "Member 'FortSkillTreeViewer_GetPageLocked::SkillTreePageId' has a wrong offset!");
static_assert(offsetof(FortSkillTreeViewer_GetPageLocked, ReturnValue) == 0x000008, "Member 'FortSkillTreeViewer_GetPageLocked::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreeViewer.GetPageTotalNodes
// 0x0010 (0x0010 - 0x0000)
struct FortSkillTreeViewer_GetPageTotalNodes final
{
public:
	class FName                                   SkillTreePageId;                                   // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSkillTreeViewer_GetPageTotalNodes) == 0x000004, "Wrong alignment on FortSkillTreeViewer_GetPageTotalNodes");
static_assert(sizeof(FortSkillTreeViewer_GetPageTotalNodes) == 0x000010, "Wrong size on FortSkillTreeViewer_GetPageTotalNodes");
static_assert(offsetof(FortSkillTreeViewer_GetPageTotalNodes, SkillTreePageId) == 0x000000, "Member 'FortSkillTreeViewer_GetPageTotalNodes::SkillTreePageId' has a wrong offset!");
static_assert(offsetof(FortSkillTreeViewer_GetPageTotalNodes, ReturnValue) == 0x000008, "Member 'FortSkillTreeViewer_GetPageTotalNodes::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreeViewer.HandleBackOutAction
// 0x0001 (0x0001 - 0x0000)
struct FortSkillTreeViewer_HandleBackOutAction final
{
public:
	bool                                          Passthrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreeViewer_HandleBackOutAction) == 0x000001, "Wrong alignment on FortSkillTreeViewer_HandleBackOutAction");
static_assert(sizeof(FortSkillTreeViewer_HandleBackOutAction) == 0x000001, "Wrong size on FortSkillTreeViewer_HandleBackOutAction");
static_assert(offsetof(FortSkillTreeViewer_HandleBackOutAction, Passthrough) == 0x000000, "Member 'FortSkillTreeViewer_HandleBackOutAction::Passthrough' has a wrong offset!");

// Function FortniteUI.FortSkillTreeViewer.NavigateTo
// 0x0010 (0x0010 - 0x0000)
struct FortSkillTreeViewer_NavigateTo final
{
public:
	class FName                                   SkillTreeNodeId;                                   // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShouldSelectNode;                                  // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortAnimSpeed                                TransitionSpeed;                                   // 0x0009(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSkillTreeViewer_NavigateTo) == 0x000004, "Wrong alignment on FortSkillTreeViewer_NavigateTo");
static_assert(sizeof(FortSkillTreeViewer_NavigateTo) == 0x000010, "Wrong size on FortSkillTreeViewer_NavigateTo");
static_assert(offsetof(FortSkillTreeViewer_NavigateTo, SkillTreeNodeId) == 0x000000, "Member 'FortSkillTreeViewer_NavigateTo::SkillTreeNodeId' has a wrong offset!");
static_assert(offsetof(FortSkillTreeViewer_NavigateTo, ShouldSelectNode) == 0x000008, "Member 'FortSkillTreeViewer_NavigateTo::ShouldSelectNode' has a wrong offset!");
static_assert(offsetof(FortSkillTreeViewer_NavigateTo, TransitionSpeed) == 0x000009, "Member 'FortSkillTreeViewer_NavigateTo::TransitionSpeed' has a wrong offset!");

// Function FortniteUI.FortSkillTreeViewer.ShowPage
// 0x0010 (0x0010 - 0x0000)
struct FortSkillTreeViewer_ShowPage final
{
public:
	class FName                                   SkillTreePageId;                                   // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortAnimSpeed                                TransitionSpeed;                                   // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSkillTreeViewer_ShowPage) == 0x000004, "Wrong alignment on FortSkillTreeViewer_ShowPage");
static_assert(sizeof(FortSkillTreeViewer_ShowPage) == 0x000010, "Wrong size on FortSkillTreeViewer_ShowPage");
static_assert(offsetof(FortSkillTreeViewer_ShowPage, SkillTreePageId) == 0x000000, "Member 'FortSkillTreeViewer_ShowPage::SkillTreePageId' has a wrong offset!");
static_assert(offsetof(FortSkillTreeViewer_ShowPage, TransitionSpeed) == 0x000008, "Member 'FortSkillTreeViewer_ShowPage::TransitionSpeed' has a wrong offset!");

// Function FortniteUI.FortSkillTreeViewer.CanBackOutOfSubPage
// 0x0001 (0x0001 - 0x0000)
struct FortSkillTreeViewer_CanBackOutOfSubPage final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreeViewer_CanBackOutOfSubPage) == 0x000001, "Wrong alignment on FortSkillTreeViewer_CanBackOutOfSubPage");
static_assert(sizeof(FortSkillTreeViewer_CanBackOutOfSubPage) == 0x000001, "Wrong size on FortSkillTreeViewer_CanBackOutOfSubPage");
static_assert(offsetof(FortSkillTreeViewer_CanBackOutOfSubPage, ReturnValue) == 0x000000, "Member 'FortSkillTreeViewer_CanBackOutOfSubPage::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreeViewer.GetCurrenciesNeededForPage
// 0x0018 (0x0018 - 0x0000)
struct FortSkillTreeViewer_GetCurrenciesNeededForPage final
{
public:
	class FName                                   SkillTreePageId;                                   // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UFortItemDefinition*>            OutCurrencies;                                     // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreeViewer_GetCurrenciesNeededForPage) == 0x000008, "Wrong alignment on FortSkillTreeViewer_GetCurrenciesNeededForPage");
static_assert(sizeof(FortSkillTreeViewer_GetCurrenciesNeededForPage) == 0x000018, "Wrong size on FortSkillTreeViewer_GetCurrenciesNeededForPage");
static_assert(offsetof(FortSkillTreeViewer_GetCurrenciesNeededForPage, SkillTreePageId) == 0x000000, "Member 'FortSkillTreeViewer_GetCurrenciesNeededForPage::SkillTreePageId' has a wrong offset!");
static_assert(offsetof(FortSkillTreeViewer_GetCurrenciesNeededForPage, OutCurrencies) == 0x000008, "Member 'FortSkillTreeViewer_GetCurrenciesNeededForPage::OutCurrencies' has a wrong offset!");

// Function FortniteUI.FortSkillTreeViewer.GetSelectedNodeId
// 0x0008 (0x0008 - 0x0000)
struct FortSkillTreeViewer_GetSelectedNodeId final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreeViewer_GetSelectedNodeId) == 0x000004, "Wrong alignment on FortSkillTreeViewer_GetSelectedNodeId");
static_assert(sizeof(FortSkillTreeViewer_GetSelectedNodeId) == 0x000008, "Wrong size on FortSkillTreeViewer_GetSelectedNodeId");
static_assert(offsetof(FortSkillTreeViewer_GetSelectedNodeId, ReturnValue) == 0x000000, "Member 'FortSkillTreeViewer_GetSelectedNodeId::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSkillTreeViewer.GetViewParameters
// 0x000C (0x000C - 0x0000)
struct FortSkillTreeViewer_GetViewParameters final
{
public:
	struct FVector2D                              OutPanOffset;                                      // 0x0000(0x0008)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutZoomLevel;                                      // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSkillTreeViewer_GetViewParameters) == 0x000004, "Wrong alignment on FortSkillTreeViewer_GetViewParameters");
static_assert(sizeof(FortSkillTreeViewer_GetViewParameters) == 0x00000C, "Wrong size on FortSkillTreeViewer_GetViewParameters");
static_assert(offsetof(FortSkillTreeViewer_GetViewParameters, OutPanOffset) == 0x000000, "Member 'FortSkillTreeViewer_GetViewParameters::OutPanOffset' has a wrong offset!");
static_assert(offsetof(FortSkillTreeViewer_GetViewParameters, OutZoomLevel) == 0x000008, "Member 'FortSkillTreeViewer_GetViewParameters::OutZoomLevel' has a wrong offset!");

// Function FortniteUI.FortSkillTreeViewer.TryGetSkillTreePageStaticData
// 0x0068 (0x0068 - 0x0000)
struct FortSkillTreeViewer_TryGetSkillTreePageStaticData final
{
public:
	struct FHomebaseNodePage                      OutData;                                           // 0x0000(0x0060)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSkillTreeViewer_TryGetSkillTreePageStaticData) == 0x000008, "Wrong alignment on FortSkillTreeViewer_TryGetSkillTreePageStaticData");
static_assert(sizeof(FortSkillTreeViewer_TryGetSkillTreePageStaticData) == 0x000068, "Wrong size on FortSkillTreeViewer_TryGetSkillTreePageStaticData");
static_assert(offsetof(FortSkillTreeViewer_TryGetSkillTreePageStaticData, OutData) == 0x000000, "Member 'FortSkillTreeViewer_TryGetSkillTreePageStaticData::OutData' has a wrong offset!");
static_assert(offsetof(FortSkillTreeViewer_TryGetSkillTreePageStaticData, ReturnValue) == 0x000060, "Member 'FortSkillTreeViewer_TryGetSkillTreePageStaticData::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVaultWidget.AddItemToRecycling
// 0x0008 (0x0008 - 0x0000)
struct FortVaultWidget_AddItemToRecycling final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultWidget_AddItemToRecycling) == 0x000008, "Wrong alignment on FortVaultWidget_AddItemToRecycling");
static_assert(sizeof(FortVaultWidget_AddItemToRecycling) == 0x000008, "Wrong size on FortVaultWidget_AddItemToRecycling");
static_assert(offsetof(FortVaultWidget_AddItemToRecycling, Item) == 0x000000, "Member 'FortVaultWidget_AddItemToRecycling::Item' has a wrong offset!");

// Function FortniteUI.FortVaultWidget.MarkVisibleItemsSeen
// 0x0010 (0x0010 - 0x0000)
struct FortVaultWidget_MarkVisibleItemsSeen final
{
public:
	TArray<class UFortAccountItem*>               InVisibleItems;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultWidget_MarkVisibleItemsSeen) == 0x000008, "Wrong alignment on FortVaultWidget_MarkVisibleItemsSeen");
static_assert(sizeof(FortVaultWidget_MarkVisibleItemsSeen) == 0x000010, "Wrong size on FortVaultWidget_MarkVisibleItemsSeen");
static_assert(offsetof(FortVaultWidget_MarkVisibleItemsSeen, InVisibleItems) == 0x000000, "Member 'FortVaultWidget_MarkVisibleItemsSeen::InVisibleItems' has a wrong offset!");

// DelegateFunction FortniteUI.FortVaultWidget.OnRecycleItemsChanged__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct FortVaultWidget_OnRecycleItemsChanged__DelegateSignature final
{
public:
	EVaultItemChangedType                         ChangeType;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortItem*>                      ChangedItems;                                      // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FFortItemQuantityPair>          Resources;                                         // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class UFortItem*>                      Param_RecycleItems;                                // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultWidget_OnRecycleItemsChanged__DelegateSignature) == 0x000008, "Wrong alignment on FortVaultWidget_OnRecycleItemsChanged__DelegateSignature");
static_assert(sizeof(FortVaultWidget_OnRecycleItemsChanged__DelegateSignature) == 0x000038, "Wrong size on FortVaultWidget_OnRecycleItemsChanged__DelegateSignature");
static_assert(offsetof(FortVaultWidget_OnRecycleItemsChanged__DelegateSignature, ChangeType) == 0x000000, "Member 'FortVaultWidget_OnRecycleItemsChanged__DelegateSignature::ChangeType' has a wrong offset!");
static_assert(offsetof(FortVaultWidget_OnRecycleItemsChanged__DelegateSignature, ChangedItems) == 0x000008, "Member 'FortVaultWidget_OnRecycleItemsChanged__DelegateSignature::ChangedItems' has a wrong offset!");
static_assert(offsetof(FortVaultWidget_OnRecycleItemsChanged__DelegateSignature, Resources) == 0x000018, "Member 'FortVaultWidget_OnRecycleItemsChanged__DelegateSignature::Resources' has a wrong offset!");
static_assert(offsetof(FortVaultWidget_OnRecycleItemsChanged__DelegateSignature, Param_RecycleItems) == 0x000028, "Member 'FortVaultWidget_OnRecycleItemsChanged__DelegateSignature::Param_RecycleItems' has a wrong offset!");

// Function FortniteUI.FortVaultWidget.RemoveItemFromRecycling
// 0x0008 (0x0008 - 0x0000)
struct FortVaultWidget_RemoveItemFromRecycling final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultWidget_RemoveItemFromRecycling) == 0x000008, "Wrong alignment on FortVaultWidget_RemoveItemFromRecycling");
static_assert(sizeof(FortVaultWidget_RemoveItemFromRecycling) == 0x000008, "Wrong size on FortVaultWidget_RemoveItemFromRecycling");
static_assert(offsetof(FortVaultWidget_RemoveItemFromRecycling, Item) == 0x000000, "Member 'FortVaultWidget_RemoveItemFromRecycling::Item' has a wrong offset!");

// Function FortniteUI.FortVaultWidget.SetCachedSortType
// 0x0002 (0x0002 - 0x0000)
struct FortVaultWidget_SetCachedSortType final
{
public:
	EInventoryContentSortType                     InSortType;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortInventoryFilter                          InContentSubType;                                  // 0x0001(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultWidget_SetCachedSortType) == 0x000001, "Wrong alignment on FortVaultWidget_SetCachedSortType");
static_assert(sizeof(FortVaultWidget_SetCachedSortType) == 0x000002, "Wrong size on FortVaultWidget_SetCachedSortType");
static_assert(offsetof(FortVaultWidget_SetCachedSortType, InSortType) == 0x000000, "Member 'FortVaultWidget_SetCachedSortType::InSortType' has a wrong offset!");
static_assert(offsetof(FortVaultWidget_SetCachedSortType, InContentSubType) == 0x000001, "Member 'FortVaultWidget_SetCachedSortType::InContentSubType' has a wrong offset!");

// Function FortniteUI.FortVaultWidget.ToggleItemRecycling
// 0x0010 (0x0010 - 0x0000)
struct FortVaultWidget_ToggleItemRecycling final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortVaultWidget_ToggleItemRecycling) == 0x000008, "Wrong alignment on FortVaultWidget_ToggleItemRecycling");
static_assert(sizeof(FortVaultWidget_ToggleItemRecycling) == 0x000010, "Wrong size on FortVaultWidget_ToggleItemRecycling");
static_assert(offsetof(FortVaultWidget_ToggleItemRecycling, Item) == 0x000000, "Member 'FortVaultWidget_ToggleItemRecycling::Item' has a wrong offset!");
static_assert(offsetof(FortVaultWidget_ToggleItemRecycling, ReturnValue) == 0x000008, "Member 'FortVaultWidget_ToggleItemRecycling::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVaultWidget.GetCachedSortType
// 0x0002 (0x0002 - 0x0000)
struct FortVaultWidget_GetCachedSortType final
{
public:
	EFortInventoryFilter                          InContentSubType;                                  // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInventoryContentSortType                     ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultWidget_GetCachedSortType) == 0x000001, "Wrong alignment on FortVaultWidget_GetCachedSortType");
static_assert(sizeof(FortVaultWidget_GetCachedSortType) == 0x000002, "Wrong size on FortVaultWidget_GetCachedSortType");
static_assert(offsetof(FortVaultWidget_GetCachedSortType, InContentSubType) == 0x000000, "Member 'FortVaultWidget_GetCachedSortType::InContentSubType' has a wrong offset!");
static_assert(offsetof(FortVaultWidget_GetCachedSortType, ReturnValue) == 0x000001, "Member 'FortVaultWidget_GetCachedSortType::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVaultWidget.GetItemList
// 0x0028 (0x0028 - 0x0000)
struct FortVaultWidget_GetItemList final
{
public:
	TArray<class UFortAccountItem*>               OutItemList;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVaultContentDetails                   Details;                                           // 0x0010(0x0018)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultWidget_GetItemList) == 0x000008, "Wrong alignment on FortVaultWidget_GetItemList");
static_assert(sizeof(FortVaultWidget_GetItemList) == 0x000028, "Wrong size on FortVaultWidget_GetItemList");
static_assert(offsetof(FortVaultWidget_GetItemList, OutItemList) == 0x000000, "Member 'FortVaultWidget_GetItemList::OutItemList' has a wrong offset!");
static_assert(offsetof(FortVaultWidget_GetItemList, Details) == 0x000010, "Member 'FortVaultWidget_GetItemList::Details' has a wrong offset!");

// Function FortniteUI.FortVaultWidget.GetTotalRecycleValue
// 0x0004 (0x0004 - 0x0000)
struct FortVaultWidget_GetTotalRecycleValue final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultWidget_GetTotalRecycleValue) == 0x000004, "Wrong alignment on FortVaultWidget_GetTotalRecycleValue");
static_assert(sizeof(FortVaultWidget_GetTotalRecycleValue) == 0x000004, "Wrong size on FortVaultWidget_GetTotalRecycleValue");
static_assert(offsetof(FortVaultWidget_GetTotalRecycleValue, ReturnValue) == 0x000000, "Member 'FortVaultWidget_GetTotalRecycleValue::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVaultWidget.IsRecycling
// 0x0001 (0x0001 - 0x0000)
struct FortVaultWidget_IsRecycling final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultWidget_IsRecycling) == 0x000001, "Wrong alignment on FortVaultWidget_IsRecycling");
static_assert(sizeof(FortVaultWidget_IsRecycling) == 0x000001, "Wrong size on FortVaultWidget_IsRecycling");
static_assert(offsetof(FortVaultWidget_IsRecycling, ReturnValue) == 0x000000, "Member 'FortVaultWidget_IsRecycling::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVaultWidget.IsRecyclingItem
// 0x0010 (0x0010 - 0x0000)
struct FortVaultWidget_IsRecyclingItem final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortVaultWidget_IsRecyclingItem) == 0x000008, "Wrong alignment on FortVaultWidget_IsRecyclingItem");
static_assert(sizeof(FortVaultWidget_IsRecyclingItem) == 0x000010, "Wrong size on FortVaultWidget_IsRecyclingItem");
static_assert(offsetof(FortVaultWidget_IsRecyclingItem, Item) == 0x000000, "Member 'FortVaultWidget_IsRecyclingItem::Item' has a wrong offset!");
static_assert(offsetof(FortVaultWidget_IsRecyclingItem, ReturnValue) == 0x000008, "Member 'FortVaultWidget_IsRecyclingItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVaultWidget.IsRecyclingItemWithLevel
// 0x0008 (0x0008 - 0x0000)
struct FortVaultWidget_IsRecyclingItemWithLevel final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortVaultWidget_IsRecyclingItemWithLevel) == 0x000004, "Wrong alignment on FortVaultWidget_IsRecyclingItemWithLevel");
static_assert(sizeof(FortVaultWidget_IsRecyclingItemWithLevel) == 0x000008, "Wrong size on FortVaultWidget_IsRecyclingItemWithLevel");
static_assert(offsetof(FortVaultWidget_IsRecyclingItemWithLevel, Level) == 0x000000, "Member 'FortVaultWidget_IsRecyclingItemWithLevel::Level' has a wrong offset!");
static_assert(offsetof(FortVaultWidget_IsRecyclingItemWithLevel, ReturnValue) == 0x000004, "Member 'FortVaultWidget_IsRecyclingItemWithLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVaultWidget.IsRecyclingItemWithRarity
// 0x0002 (0x0002 - 0x0000)
struct FortVaultWidget_IsRecyclingItemWithRarity final
{
public:
	EFortRarity                                   Rarity;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultWidget_IsRecyclingItemWithRarity) == 0x000001, "Wrong alignment on FortVaultWidget_IsRecyclingItemWithRarity");
static_assert(sizeof(FortVaultWidget_IsRecyclingItemWithRarity) == 0x000002, "Wrong size on FortVaultWidget_IsRecyclingItemWithRarity");
static_assert(offsetof(FortVaultWidget_IsRecyclingItemWithRarity, Rarity) == 0x000000, "Member 'FortVaultWidget_IsRecyclingItemWithRarity::Rarity' has a wrong offset!");
static_assert(offsetof(FortVaultWidget_IsRecyclingItemWithRarity, ReturnValue) == 0x000001, "Member 'FortVaultWidget_IsRecyclingItemWithRarity::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVaultWidget.IsRecyclingItemWithTier
// 0x0002 (0x0002 - 0x0000)
struct FortVaultWidget_IsRecyclingItemWithTier final
{
public:
	EFortItemTier                                 Tier;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultWidget_IsRecyclingItemWithTier) == 0x000001, "Wrong alignment on FortVaultWidget_IsRecyclingItemWithTier");
static_assert(sizeof(FortVaultWidget_IsRecyclingItemWithTier) == 0x000002, "Wrong size on FortVaultWidget_IsRecyclingItemWithTier");
static_assert(offsetof(FortVaultWidget_IsRecyclingItemWithTier, Tier) == 0x000000, "Member 'FortVaultWidget_IsRecyclingItemWithTier::Tier' has a wrong offset!");
static_assert(offsetof(FortVaultWidget_IsRecyclingItemWithTier, ReturnValue) == 0x000001, "Member 'FortVaultWidget_IsRecyclingItemWithTier::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVaultWidget.IsSupportedSortType
// 0x0003 (0x0003 - 0x0000)
struct FortVaultWidget_IsSupportedSortType final
{
public:
	EInventoryContentSortType                     InSortType;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortInventoryFilter                          InContentSubType;                                  // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVaultWidget_IsSupportedSortType) == 0x000001, "Wrong alignment on FortVaultWidget_IsSupportedSortType");
static_assert(sizeof(FortVaultWidget_IsSupportedSortType) == 0x000003, "Wrong size on FortVaultWidget_IsSupportedSortType");
static_assert(offsetof(FortVaultWidget_IsSupportedSortType, InSortType) == 0x000000, "Member 'FortVaultWidget_IsSupportedSortType::InSortType' has a wrong offset!");
static_assert(offsetof(FortVaultWidget_IsSupportedSortType, InContentSubType) == 0x000001, "Member 'FortVaultWidget_IsSupportedSortType::InContentSubType' has a wrong offset!");
static_assert(offsetof(FortVaultWidget_IsSupportedSortType, ReturnValue) == 0x000002, "Member 'FortVaultWidget_IsSupportedSortType::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSocialItemWidget.SetSocialItem
// 0x0008 (0x0008 - 0x0000)
struct FortSocialItemWidget_SetSocialItem final
{
public:
	class UFortSocialItem*                        InSocialItem;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSocialItemWidget_SetSocialItem) == 0x000008, "Wrong alignment on FortSocialItemWidget_SetSocialItem");
static_assert(sizeof(FortSocialItemWidget_SetSocialItem) == 0x000008, "Wrong size on FortSocialItemWidget_SetSocialItem");
static_assert(offsetof(FortSocialItemWidget_SetSocialItem, InSocialItem) == 0x000000, "Member 'FortSocialItemWidget_SetSocialItem::InSocialItem' has a wrong offset!");

// Function FortniteUI.FortSocialListView.SetList
// 0x0010 (0x0010 - 0x0000)
struct FortSocialListView_SetList final
{
public:
	TArray<class UFortSocialItem*>                InList;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSocialListView_SetList) == 0x000008, "Wrong alignment on FortSocialListView_SetList");
static_assert(sizeof(FortSocialListView_SetList) == 0x000010, "Wrong size on FortSocialListView_SetList");
static_assert(offsetof(FortSocialListView_SetList, InList) == 0x000000, "Member 'FortSocialListView_SetList::InList' has a wrong offset!");

// Function FortniteUI.FortSplashScreenWidget.CloseSplashScreen
// 0x0004 (0x0004 - 0x0000)
struct FortSplashScreenWidget_CloseSplashScreen final
{
public:
	int32                                         UserIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSplashScreenWidget_CloseSplashScreen) == 0x000004, "Wrong alignment on FortSplashScreenWidget_CloseSplashScreen");
static_assert(sizeof(FortSplashScreenWidget_CloseSplashScreen) == 0x000004, "Wrong size on FortSplashScreenWidget_CloseSplashScreen");
static_assert(offsetof(FortSplashScreenWidget_CloseSplashScreen, UserIndex) == 0x000000, "Member 'FortSplashScreenWidget_CloseSplashScreen::UserIndex' has a wrong offset!");

// Function FortniteUI.FortSplashScreenWidget.OnGameBootableInviteReceived
// 0x0004 (0x0004 - 0x0000)
struct FortSplashScreenWidget_OnGameBootableInviteReceived final
{
public:
	int32                                         UserIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSplashScreenWidget_OnGameBootableInviteReceived) == 0x000004, "Wrong alignment on FortSplashScreenWidget_OnGameBootableInviteReceived");
static_assert(sizeof(FortSplashScreenWidget_OnGameBootableInviteReceived) == 0x000004, "Wrong size on FortSplashScreenWidget_OnGameBootableInviteReceived");
static_assert(offsetof(FortSplashScreenWidget_OnGameBootableInviteReceived, UserIndex) == 0x000000, "Member 'FortSplashScreenWidget_OnGameBootableInviteReceived::UserIndex' has a wrong offset!");

// Function FortniteUI.FortSplashScreenWidget.ShouldBypassSplashScreen
// 0x0001 (0x0001 - 0x0000)
struct FortSplashScreenWidget_ShouldBypassSplashScreen final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSplashScreenWidget_ShouldBypassSplashScreen) == 0x000001, "Wrong alignment on FortSplashScreenWidget_ShouldBypassSplashScreen");
static_assert(sizeof(FortSplashScreenWidget_ShouldBypassSplashScreen) == 0x000001, "Wrong size on FortSplashScreenWidget_ShouldBypassSplashScreen");
static_assert(offsetof(FortSplashScreenWidget_ShouldBypassSplashScreen, ReturnValue) == 0x000000, "Member 'FortSplashScreenWidget_ShouldBypassSplashScreen::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadIcon.SetSquad
// 0x0008 (0x0008 - 0x0000)
struct FortSquadIcon_SetSquad final
{
public:
	class FName                                   InName;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadIcon_SetSquad) == 0x000004, "Wrong alignment on FortSquadIcon_SetSquad");
static_assert(sizeof(FortSquadIcon_SetSquad) == 0x000008, "Wrong size on FortSquadIcon_SetSquad");
static_assert(offsetof(FortSquadIcon_SetSquad, InName) == 0x000000, "Member 'FortSquadIcon_SetSquad::InName' has a wrong offset!");

// Function FortniteUI.FortSquadLandingPageDefenderSquadDetails.HandleAddDefenderSquadMemberBP
// 0x0010 (0x0010 - 0x0000)
struct FortSquadLandingPageDefenderSquadDetails_HandleAddDefenderSquadMemberBP final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadLandingPageDefenderSquadDetails_HandleAddDefenderSquadMemberBP) == 0x000004, "Wrong alignment on FortSquadLandingPageDefenderSquadDetails_HandleAddDefenderSquadMemberBP");
static_assert(sizeof(FortSquadLandingPageDefenderSquadDetails_HandleAddDefenderSquadMemberBP) == 0x000010, "Wrong size on FortSquadLandingPageDefenderSquadDetails_HandleAddDefenderSquadMemberBP");
static_assert(offsetof(FortSquadLandingPageDefenderSquadDetails_HandleAddDefenderSquadMemberBP, SquadId) == 0x000000, "Member 'FortSquadLandingPageDefenderSquadDetails_HandleAddDefenderSquadMemberBP::SquadId' has a wrong offset!");
static_assert(offsetof(FortSquadLandingPageDefenderSquadDetails_HandleAddDefenderSquadMemberBP, Param_Index) == 0x000008, "Member 'FortSquadLandingPageDefenderSquadDetails_HandleAddDefenderSquadMemberBP::Param_Index' has a wrong offset!");

// Function FortniteUI.FortSquadLandingPageDefenderSquadDetails.HandleDefenderSquadInfoSetBP
// 0x0030 (0x0030 - 0x0000)
struct FortSquadLandingPageDefenderSquadDetails_HandleDefenderSquadInfoSetBP final
{
public:
	struct FFortLandingPageDefenderSummaryInfo    DefenderSummaryInfo;                               // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadLandingPageDefenderSquadDetails_HandleDefenderSquadInfoSetBP) == 0x000008, "Wrong alignment on FortSquadLandingPageDefenderSquadDetails_HandleDefenderSquadInfoSetBP");
static_assert(sizeof(FortSquadLandingPageDefenderSquadDetails_HandleDefenderSquadInfoSetBP) == 0x000030, "Wrong size on FortSquadLandingPageDefenderSquadDetails_HandleDefenderSquadInfoSetBP");
static_assert(offsetof(FortSquadLandingPageDefenderSquadDetails_HandleDefenderSquadInfoSetBP, DefenderSummaryInfo) == 0x000000, "Member 'FortSquadLandingPageDefenderSquadDetails_HandleDefenderSquadInfoSetBP::DefenderSummaryInfo' has a wrong offset!");

// Function FortniteUI.FortSquadLandingPageDefenderSquadDetails.SetDefenderSquadInfo
// 0x0030 (0x0030 - 0x0000)
struct FortSquadLandingPageDefenderSquadDetails_SetDefenderSquadInfo final
{
public:
	struct FFortLandingPageDefenderSummaryInfo    DefenderSummaryInfo;                               // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadLandingPageDefenderSquadDetails_SetDefenderSquadInfo) == 0x000008, "Wrong alignment on FortSquadLandingPageDefenderSquadDetails_SetDefenderSquadInfo");
static_assert(sizeof(FortSquadLandingPageDefenderSquadDetails_SetDefenderSquadInfo) == 0x000030, "Wrong size on FortSquadLandingPageDefenderSquadDetails_SetDefenderSquadInfo");
static_assert(offsetof(FortSquadLandingPageDefenderSquadDetails_SetDefenderSquadInfo, DefenderSummaryInfo) == 0x000000, "Member 'FortSquadLandingPageDefenderSquadDetails_SetDefenderSquadInfo::DefenderSummaryInfo' has a wrong offset!");

// Function FortniteUI.FortSquadLandingPageDefenderSquadDetailsLocked.SetDefenderSquadInfo
// 0x0030 (0x0030 - 0x0000)
struct FortSquadLandingPageDefenderSquadDetailsLocked_SetDefenderSquadInfo final
{
public:
	struct FFortLandingPageDefenderSummaryInfo    DefenderSummaryInfo;                               // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadLandingPageDefenderSquadDetailsLocked_SetDefenderSquadInfo) == 0x000008, "Wrong alignment on FortSquadLandingPageDefenderSquadDetailsLocked_SetDefenderSquadInfo");
static_assert(sizeof(FortSquadLandingPageDefenderSquadDetailsLocked_SetDefenderSquadInfo) == 0x000030, "Wrong size on FortSquadLandingPageDefenderSquadDetailsLocked_SetDefenderSquadInfo");
static_assert(offsetof(FortSquadLandingPageDefenderSquadDetailsLocked_SetDefenderSquadInfo, DefenderSummaryInfo) == 0x000000, "Member 'FortSquadLandingPageDefenderSquadDetailsLocked_SetDefenderSquadInfo::DefenderSummaryInfo' has a wrong offset!");

// Function FortniteUI.FortSquadLandingPageDefenderSummary.HandleAddDefenderSquadDetailsBP
// 0x0030 (0x0030 - 0x0000)
struct FortSquadLandingPageDefenderSummary_HandleAddDefenderSquadDetailsBP final
{
public:
	struct FFortLandingPageDefenderSummaryInfo    DefenderSummaryInfo;                               // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadLandingPageDefenderSummary_HandleAddDefenderSquadDetailsBP) == 0x000008, "Wrong alignment on FortSquadLandingPageDefenderSummary_HandleAddDefenderSquadDetailsBP");
static_assert(sizeof(FortSquadLandingPageDefenderSummary_HandleAddDefenderSquadDetailsBP) == 0x000030, "Wrong size on FortSquadLandingPageDefenderSummary_HandleAddDefenderSquadDetailsBP");
static_assert(offsetof(FortSquadLandingPageDefenderSummary_HandleAddDefenderSquadDetailsBP, DefenderSummaryInfo) == 0x000000, "Member 'FortSquadLandingPageDefenderSummary_HandleAddDefenderSquadDetailsBP::DefenderSummaryInfo' has a wrong offset!");

// Function FortniteUI.FortSquadLandingPageDefenderSummary.HandleAddLockedDefenderSquadDetailsBP
// 0x0030 (0x0030 - 0x0000)
struct FortSquadLandingPageDefenderSummary_HandleAddLockedDefenderSquadDetailsBP final
{
public:
	struct FFortLandingPageDefenderSummaryInfo    DefenderSummaryInfo;                               // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadLandingPageDefenderSummary_HandleAddLockedDefenderSquadDetailsBP) == 0x000008, "Wrong alignment on FortSquadLandingPageDefenderSummary_HandleAddLockedDefenderSquadDetailsBP");
static_assert(sizeof(FortSquadLandingPageDefenderSummary_HandleAddLockedDefenderSquadDetailsBP) == 0x000030, "Wrong size on FortSquadLandingPageDefenderSummary_HandleAddLockedDefenderSquadDetailsBP");
static_assert(offsetof(FortSquadLandingPageDefenderSummary_HandleAddLockedDefenderSquadDetailsBP, DefenderSummaryInfo) == 0x000000, "Member 'FortSquadLandingPageDefenderSummary_HandleAddLockedDefenderSquadDetailsBP::DefenderSummaryInfo' has a wrong offset!");

// Function FortniteUI.FortSquadLandingPageSurvivorSummary.HandleAddSetBonusSummaryLineItemBP
// 0x0030 (0x0030 - 0x0000)
struct FortSquadLandingPageSurvivorSummary_HandleAddSetBonusSummaryLineItemBP final
{
public:
	struct FFortAttributeModifierAccumulation     AttributeModifierAccumulation;                     // 0x0000(0x0030)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadLandingPageSurvivorSummary_HandleAddSetBonusSummaryLineItemBP) == 0x000008, "Wrong alignment on FortSquadLandingPageSurvivorSummary_HandleAddSetBonusSummaryLineItemBP");
static_assert(sizeof(FortSquadLandingPageSurvivorSummary_HandleAddSetBonusSummaryLineItemBP) == 0x000030, "Wrong size on FortSquadLandingPageSurvivorSummary_HandleAddSetBonusSummaryLineItemBP");
static_assert(offsetof(FortSquadLandingPageSurvivorSummary_HandleAddSetBonusSummaryLineItemBP, AttributeModifierAccumulation) == 0x000000, "Member 'FortSquadLandingPageSurvivorSummary_HandleAddSetBonusSummaryLineItemBP::AttributeModifierAccumulation' has a wrong offset!");

// Function FortniteUI.FortSquadSlotDetailsPanel.SetIdOfSquadSlotToManageBP
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotDetailsPanel_SetIdOfSquadSlotToManageBP final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SquadSlotIndex;                                    // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadSlotDetailsPanel_SetIdOfSquadSlotToManageBP) == 0x000004, "Wrong alignment on FortSquadSlotDetailsPanel_SetIdOfSquadSlotToManageBP");
static_assert(sizeof(FortSquadSlotDetailsPanel_SetIdOfSquadSlotToManageBP) == 0x000010, "Wrong size on FortSquadSlotDetailsPanel_SetIdOfSquadSlotToManageBP");
static_assert(offsetof(FortSquadSlotDetailsPanel_SetIdOfSquadSlotToManageBP, SquadId) == 0x000000, "Member 'FortSquadSlotDetailsPanel_SetIdOfSquadSlotToManageBP::SquadId' has a wrong offset!");
static_assert(offsetof(FortSquadSlotDetailsPanel_SetIdOfSquadSlotToManageBP, SquadSlotIndex) == 0x000008, "Member 'FortSquadSlotDetailsPanel_SetIdOfSquadSlotToManageBP::SquadSlotIndex' has a wrong offset!");

// Function FortniteUI.FortSquadSlotDetailsPanel.GetIdOfSquadSlotToManageBP
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotDetailsPanel_GetIdOfSquadSlotToManageBP final
{
public:
	class FName                                   OutSquadId;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSquadSlotIndex;                                 // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadSlotDetailsPanel_GetIdOfSquadSlotToManageBP) == 0x000004, "Wrong alignment on FortSquadSlotDetailsPanel_GetIdOfSquadSlotToManageBP");
static_assert(sizeof(FortSquadSlotDetailsPanel_GetIdOfSquadSlotToManageBP) == 0x000010, "Wrong size on FortSquadSlotDetailsPanel_GetIdOfSquadSlotToManageBP");
static_assert(offsetof(FortSquadSlotDetailsPanel_GetIdOfSquadSlotToManageBP, OutSquadId) == 0x000000, "Member 'FortSquadSlotDetailsPanel_GetIdOfSquadSlotToManageBP::OutSquadId' has a wrong offset!");
static_assert(offsetof(FortSquadSlotDetailsPanel_GetIdOfSquadSlotToManageBP, OutSquadSlotIndex) == 0x000008, "Member 'FortSquadSlotDetailsPanel_GetIdOfSquadSlotToManageBP::OutSquadSlotIndex' has a wrong offset!");

// Function FortniteUI.FortSquadSlotDetailsPanel.GetItemInSquadSlotBP
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotDetailsPanel_GetItemInSquadSlotBP final
{
public:
	const class ULocalPlayer*                     LocalPlayer;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItem*                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotDetailsPanel_GetItemInSquadSlotBP) == 0x000008, "Wrong alignment on FortSquadSlotDetailsPanel_GetItemInSquadSlotBP");
static_assert(sizeof(FortSquadSlotDetailsPanel_GetItemInSquadSlotBP) == 0x000010, "Wrong size on FortSquadSlotDetailsPanel_GetItemInSquadSlotBP");
static_assert(offsetof(FortSquadSlotDetailsPanel_GetItemInSquadSlotBP, LocalPlayer) == 0x000000, "Member 'FortSquadSlotDetailsPanel_GetItemInSquadSlotBP::LocalPlayer' has a wrong offset!");
static_assert(offsetof(FortSquadSlotDetailsPanel_GetItemInSquadSlotBP, ReturnValue) == 0x000008, "Member 'FortSquadSlotDetailsPanel_GetItemInSquadSlotBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadSlotDetailsPanel.GetSlottingRestrictionReasons
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotDetailsPanel_GetSlottingRestrictionReasons final
{
public:
	TArray<EFortSquadSlottingRestrictionReason>   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotDetailsPanel_GetSlottingRestrictionReasons) == 0x000008, "Wrong alignment on FortSquadSlotDetailsPanel_GetSlottingRestrictionReasons");
static_assert(sizeof(FortSquadSlotDetailsPanel_GetSlottingRestrictionReasons) == 0x000010, "Wrong size on FortSquadSlotDetailsPanel_GetSlottingRestrictionReasons");
static_assert(offsetof(FortSquadSlotDetailsPanel_GetSlottingRestrictionReasons, ReturnValue) == 0x000000, "Member 'FortSquadSlotDetailsPanel_GetSlottingRestrictionReasons::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadSlotDetailsPanel.IsSquadSlotLockedBP
// 0x0001 (0x0001 - 0x0000)
struct FortSquadSlotDetailsPanel_IsSquadSlotLockedBP final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotDetailsPanel_IsSquadSlotLockedBP) == 0x000001, "Wrong alignment on FortSquadSlotDetailsPanel_IsSquadSlotLockedBP");
static_assert(sizeof(FortSquadSlotDetailsPanel_IsSquadSlotLockedBP) == 0x000001, "Wrong size on FortSquadSlotDetailsPanel_IsSquadSlotLockedBP");
static_assert(offsetof(FortSquadSlotDetailsPanel_IsSquadSlotLockedBP, ReturnValue) == 0x000000, "Member 'FortSquadSlotDetailsPanel_IsSquadSlotLockedBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadSlotDetailsPanel.TryGetItemToPreviewInSlot
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotDetailsPanel_TryGetItemToPreviewInSlot final
{
public:
	class UFortItem*                              OutItemToPreviewInSlot;                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadSlotDetailsPanel_TryGetItemToPreviewInSlot) == 0x000008, "Wrong alignment on FortSquadSlotDetailsPanel_TryGetItemToPreviewInSlot");
static_assert(sizeof(FortSquadSlotDetailsPanel_TryGetItemToPreviewInSlot) == 0x000010, "Wrong size on FortSquadSlotDetailsPanel_TryGetItemToPreviewInSlot");
static_assert(offsetof(FortSquadSlotDetailsPanel_TryGetItemToPreviewInSlot, OutItemToPreviewInSlot) == 0x000000, "Member 'FortSquadSlotDetailsPanel_TryGetItemToPreviewInSlot::OutItemToPreviewInSlot' has a wrong offset!");
static_assert(offsetof(FortSquadSlotDetailsPanel_TryGetItemToPreviewInSlot, ReturnValue) == 0x000008, "Member 'FortSquadSlotDetailsPanel_TryGetItemToPreviewInSlot::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadSlotItemDetailsHostPanel.SetIdOfSquadSlotToManageBP
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotItemDetailsHostPanel_SetIdOfSquadSlotToManageBP final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SquadSlotIndex;                                    // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadSlotItemDetailsHostPanel_SetIdOfSquadSlotToManageBP) == 0x000004, "Wrong alignment on FortSquadSlotItemDetailsHostPanel_SetIdOfSquadSlotToManageBP");
static_assert(sizeof(FortSquadSlotItemDetailsHostPanel_SetIdOfSquadSlotToManageBP) == 0x000010, "Wrong size on FortSquadSlotItemDetailsHostPanel_SetIdOfSquadSlotToManageBP");
static_assert(offsetof(FortSquadSlotItemDetailsHostPanel_SetIdOfSquadSlotToManageBP, SquadId) == 0x000000, "Member 'FortSquadSlotItemDetailsHostPanel_SetIdOfSquadSlotToManageBP::SquadId' has a wrong offset!");
static_assert(offsetof(FortSquadSlotItemDetailsHostPanel_SetIdOfSquadSlotToManageBP, SquadSlotIndex) == 0x000008, "Member 'FortSquadSlotItemDetailsHostPanel_SetIdOfSquadSlotToManageBP::SquadSlotIndex' has a wrong offset!");

// Function FortniteUI.FortSquadSlotItemDetailsHostPanel.GetIdOfSquadSlotToManageBP
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotItemDetailsHostPanel_GetIdOfSquadSlotToManageBP final
{
public:
	class FName                                   OutSquadId;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSquadSlotIndex;                                 // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadSlotItemDetailsHostPanel_GetIdOfSquadSlotToManageBP) == 0x000004, "Wrong alignment on FortSquadSlotItemDetailsHostPanel_GetIdOfSquadSlotToManageBP");
static_assert(sizeof(FortSquadSlotItemDetailsHostPanel_GetIdOfSquadSlotToManageBP) == 0x000010, "Wrong size on FortSquadSlotItemDetailsHostPanel_GetIdOfSquadSlotToManageBP");
static_assert(offsetof(FortSquadSlotItemDetailsHostPanel_GetIdOfSquadSlotToManageBP, OutSquadId) == 0x000000, "Member 'FortSquadSlotItemDetailsHostPanel_GetIdOfSquadSlotToManageBP::OutSquadId' has a wrong offset!");
static_assert(offsetof(FortSquadSlotItemDetailsHostPanel_GetIdOfSquadSlotToManageBP, OutSquadSlotIndex) == 0x000008, "Member 'FortSquadSlotItemDetailsHostPanel_GetIdOfSquadSlotToManageBP::OutSquadSlotIndex' has a wrong offset!");

// Function FortniteUI.FortSquadSlotItemDetailsHostPanel.GetItemInSquadSlotBP
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotItemDetailsHostPanel_GetItemInSquadSlotBP final
{
public:
	const class ULocalPlayer*                     LocalPlayer;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItem*                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotItemDetailsHostPanel_GetItemInSquadSlotBP) == 0x000008, "Wrong alignment on FortSquadSlotItemDetailsHostPanel_GetItemInSquadSlotBP");
static_assert(sizeof(FortSquadSlotItemDetailsHostPanel_GetItemInSquadSlotBP) == 0x000010, "Wrong size on FortSquadSlotItemDetailsHostPanel_GetItemInSquadSlotBP");
static_assert(offsetof(FortSquadSlotItemDetailsHostPanel_GetItemInSquadSlotBP, LocalPlayer) == 0x000000, "Member 'FortSquadSlotItemDetailsHostPanel_GetItemInSquadSlotBP::LocalPlayer' has a wrong offset!");
static_assert(offsetof(FortSquadSlotItemDetailsHostPanel_GetItemInSquadSlotBP, ReturnValue) == 0x000008, "Member 'FortSquadSlotItemDetailsHostPanel_GetItemInSquadSlotBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadSlotItemDetailsHostPanel.IsSquadSlotLockedBP
// 0x0001 (0x0001 - 0x0000)
struct FortSquadSlotItemDetailsHostPanel_IsSquadSlotLockedBP final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotItemDetailsHostPanel_IsSquadSlotLockedBP) == 0x000001, "Wrong alignment on FortSquadSlotItemDetailsHostPanel_IsSquadSlotLockedBP");
static_assert(sizeof(FortSquadSlotItemDetailsHostPanel_IsSquadSlotLockedBP) == 0x000001, "Wrong size on FortSquadSlotItemDetailsHostPanel_IsSquadSlotLockedBP");
static_assert(offsetof(FortSquadSlotItemDetailsHostPanel_IsSquadSlotLockedBP, ReturnValue) == 0x000000, "Member 'FortSquadSlotItemDetailsHostPanel_IsSquadSlotLockedBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadSlotItemPicker.SetIdOfSquadSlotToManageBP
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotItemPicker_SetIdOfSquadSlotToManageBP final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SquadSlotIndex;                                    // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadSlotItemPicker_SetIdOfSquadSlotToManageBP) == 0x000004, "Wrong alignment on FortSquadSlotItemPicker_SetIdOfSquadSlotToManageBP");
static_assert(sizeof(FortSquadSlotItemPicker_SetIdOfSquadSlotToManageBP) == 0x000010, "Wrong size on FortSquadSlotItemPicker_SetIdOfSquadSlotToManageBP");
static_assert(offsetof(FortSquadSlotItemPicker_SetIdOfSquadSlotToManageBP, SquadId) == 0x000000, "Member 'FortSquadSlotItemPicker_SetIdOfSquadSlotToManageBP::SquadId' has a wrong offset!");
static_assert(offsetof(FortSquadSlotItemPicker_SetIdOfSquadSlotToManageBP, SquadSlotIndex) == 0x000008, "Member 'FortSquadSlotItemPicker_SetIdOfSquadSlotToManageBP::SquadSlotIndex' has a wrong offset!");

// Function FortniteUI.FortSquadSlotItemPicker.GetIdOfSquadSlotToManageBP
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotItemPicker_GetIdOfSquadSlotToManageBP final
{
public:
	class FName                                   OutSquadId;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSquadSlotIndex;                                 // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadSlotItemPicker_GetIdOfSquadSlotToManageBP) == 0x000004, "Wrong alignment on FortSquadSlotItemPicker_GetIdOfSquadSlotToManageBP");
static_assert(sizeof(FortSquadSlotItemPicker_GetIdOfSquadSlotToManageBP) == 0x000010, "Wrong size on FortSquadSlotItemPicker_GetIdOfSquadSlotToManageBP");
static_assert(offsetof(FortSquadSlotItemPicker_GetIdOfSquadSlotToManageBP, OutSquadId) == 0x000000, "Member 'FortSquadSlotItemPicker_GetIdOfSquadSlotToManageBP::OutSquadId' has a wrong offset!");
static_assert(offsetof(FortSquadSlotItemPicker_GetIdOfSquadSlotToManageBP, OutSquadSlotIndex) == 0x000008, "Member 'FortSquadSlotItemPicker_GetIdOfSquadSlotToManageBP::OutSquadSlotIndex' has a wrong offset!");

// Function FortniteUI.FortSquadSlotItemPickerTileButton.HandleItemSlottedToDifferentSquad
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotItemPickerTileButton_HandleItemSlottedToDifferentSquad final
{
public:
	struct FHomebaseSquadSlotId                   SquadSlotId;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotItemPickerTileButton_HandleItemSlottedToDifferentSquad) == 0x000008, "Wrong alignment on FortSquadSlotItemPickerTileButton_HandleItemSlottedToDifferentSquad");
static_assert(sizeof(FortSquadSlotItemPickerTileButton_HandleItemSlottedToDifferentSquad) == 0x000010, "Wrong size on FortSquadSlotItemPickerTileButton_HandleItemSlottedToDifferentSquad");
static_assert(offsetof(FortSquadSlotItemPickerTileButton_HandleItemSlottedToDifferentSquad, SquadSlotId) == 0x000000, "Member 'FortSquadSlotItemPickerTileButton_HandleItemSlottedToDifferentSquad::SquadSlotId' has a wrong offset!");

// Function FortniteUI.FortSquadSlotItemPickerTileButton.GetSlottingRestrictionReasons
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotItemPickerTileButton_GetSlottingRestrictionReasons final
{
public:
	TArray<EFortSquadSlottingRestrictionReason>   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotItemPickerTileButton_GetSlottingRestrictionReasons) == 0x000008, "Wrong alignment on FortSquadSlotItemPickerTileButton_GetSlottingRestrictionReasons");
static_assert(sizeof(FortSquadSlotItemPickerTileButton_GetSlottingRestrictionReasons) == 0x000010, "Wrong size on FortSquadSlotItemPickerTileButton_GetSlottingRestrictionReasons");
static_assert(offsetof(FortSquadSlotItemPickerTileButton_GetSlottingRestrictionReasons, ReturnValue) == 0x000000, "Member 'FortSquadSlotItemPickerTileButton_GetSlottingRestrictionReasons::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadSlotSelectorButton.SetIdOfSquadSlotToManageBP
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotSelectorButton_SetIdOfSquadSlotToManageBP final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SquadSlotIndex;                                    // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadSlotSelectorButton_SetIdOfSquadSlotToManageBP) == 0x000004, "Wrong alignment on FortSquadSlotSelectorButton_SetIdOfSquadSlotToManageBP");
static_assert(sizeof(FortSquadSlotSelectorButton_SetIdOfSquadSlotToManageBP) == 0x000010, "Wrong size on FortSquadSlotSelectorButton_SetIdOfSquadSlotToManageBP");
static_assert(offsetof(FortSquadSlotSelectorButton_SetIdOfSquadSlotToManageBP, SquadId) == 0x000000, "Member 'FortSquadSlotSelectorButton_SetIdOfSquadSlotToManageBP::SquadId' has a wrong offset!");
static_assert(offsetof(FortSquadSlotSelectorButton_SetIdOfSquadSlotToManageBP, SquadSlotIndex) == 0x000008, "Member 'FortSquadSlotSelectorButton_SetIdOfSquadSlotToManageBP::SquadSlotIndex' has a wrong offset!");

// Function FortniteUI.FortSquadSlotSelectorButton.GetIdOfSquadSlotToManageBP
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotSelectorButton_GetIdOfSquadSlotToManageBP final
{
public:
	class FName                                   OutSquadId;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSquadSlotIndex;                                 // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadSlotSelectorButton_GetIdOfSquadSlotToManageBP) == 0x000004, "Wrong alignment on FortSquadSlotSelectorButton_GetIdOfSquadSlotToManageBP");
static_assert(sizeof(FortSquadSlotSelectorButton_GetIdOfSquadSlotToManageBP) == 0x000010, "Wrong size on FortSquadSlotSelectorButton_GetIdOfSquadSlotToManageBP");
static_assert(offsetof(FortSquadSlotSelectorButton_GetIdOfSquadSlotToManageBP, OutSquadId) == 0x000000, "Member 'FortSquadSlotSelectorButton_GetIdOfSquadSlotToManageBP::OutSquadId' has a wrong offset!");
static_assert(offsetof(FortSquadSlotSelectorButton_GetIdOfSquadSlotToManageBP, OutSquadSlotIndex) == 0x000008, "Member 'FortSquadSlotSelectorButton_GetIdOfSquadSlotToManageBP::OutSquadSlotIndex' has a wrong offset!");

// Function FortniteUI.FortSquadSlotSelectorButton.GetInPreviewMode
// 0x0001 (0x0001 - 0x0000)
struct FortSquadSlotSelectorButton_GetInPreviewMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotSelectorButton_GetInPreviewMode) == 0x000001, "Wrong alignment on FortSquadSlotSelectorButton_GetInPreviewMode");
static_assert(sizeof(FortSquadSlotSelectorButton_GetInPreviewMode) == 0x000001, "Wrong size on FortSquadSlotSelectorButton_GetInPreviewMode");
static_assert(offsetof(FortSquadSlotSelectorButton_GetInPreviewMode, ReturnValue) == 0x000000, "Member 'FortSquadSlotSelectorButton_GetInPreviewMode::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadSlotSelectorButton.IsSquadSlotLockedBP
// 0x0001 (0x0001 - 0x0000)
struct FortSquadSlotSelectorButton_IsSquadSlotLockedBP final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotSelectorButton_IsSquadSlotLockedBP) == 0x000001, "Wrong alignment on FortSquadSlotSelectorButton_IsSquadSlotLockedBP");
static_assert(sizeof(FortSquadSlotSelectorButton_IsSquadSlotLockedBP) == 0x000001, "Wrong size on FortSquadSlotSelectorButton_IsSquadSlotLockedBP");
static_assert(offsetof(FortSquadSlotSelectorButton_IsSquadSlotLockedBP, ReturnValue) == 0x000000, "Member 'FortSquadSlotSelectorButton_IsSquadSlotLockedBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadSlotWidget.SetCardSize
// 0x0001 (0x0001 - 0x0000)
struct FortSquadSlotWidget_SetCardSize final
{
public:
	EFortItemCardSize                             CardSize;                                          // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotWidget_SetCardSize) == 0x000001, "Wrong alignment on FortSquadSlotWidget_SetCardSize");
static_assert(sizeof(FortSquadSlotWidget_SetCardSize) == 0x000001, "Wrong size on FortSquadSlotWidget_SetCardSize");
static_assert(offsetof(FortSquadSlotWidget_SetCardSize, CardSize) == 0x000000, "Member 'FortSquadSlotWidget_SetCardSize::CardSize' has a wrong offset!");

// Function FortniteUI.FortSquadSlotWidget.SetIdOfSquadSlotToManageBP
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotWidget_SetIdOfSquadSlotToManageBP final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SquadSlotIndex;                                    // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadSlotWidget_SetIdOfSquadSlotToManageBP) == 0x000004, "Wrong alignment on FortSquadSlotWidget_SetIdOfSquadSlotToManageBP");
static_assert(sizeof(FortSquadSlotWidget_SetIdOfSquadSlotToManageBP) == 0x000010, "Wrong size on FortSquadSlotWidget_SetIdOfSquadSlotToManageBP");
static_assert(offsetof(FortSquadSlotWidget_SetIdOfSquadSlotToManageBP, SquadId) == 0x000000, "Member 'FortSquadSlotWidget_SetIdOfSquadSlotToManageBP::SquadId' has a wrong offset!");
static_assert(offsetof(FortSquadSlotWidget_SetIdOfSquadSlotToManageBP, SquadSlotIndex) == 0x000008, "Member 'FortSquadSlotWidget_SetIdOfSquadSlotToManageBP::SquadSlotIndex' has a wrong offset!");

// Function FortniteUI.FortSquadSlotWidget.GetIdOfSquadSlotToManageBP
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotWidget_GetIdOfSquadSlotToManageBP final
{
public:
	class FName                                   OutSquadId;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutSquadSlotIndex;                                 // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSquadSlotWidget_GetIdOfSquadSlotToManageBP) == 0x000004, "Wrong alignment on FortSquadSlotWidget_GetIdOfSquadSlotToManageBP");
static_assert(sizeof(FortSquadSlotWidget_GetIdOfSquadSlotToManageBP) == 0x000010, "Wrong size on FortSquadSlotWidget_GetIdOfSquadSlotToManageBP");
static_assert(offsetof(FortSquadSlotWidget_GetIdOfSquadSlotToManageBP, OutSquadId) == 0x000000, "Member 'FortSquadSlotWidget_GetIdOfSquadSlotToManageBP::OutSquadId' has a wrong offset!");
static_assert(offsetof(FortSquadSlotWidget_GetIdOfSquadSlotToManageBP, OutSquadSlotIndex) == 0x000008, "Member 'FortSquadSlotWidget_GetIdOfSquadSlotToManageBP::OutSquadSlotIndex' has a wrong offset!");

// Function FortniteUI.FortSquadSlotWidget.GetItemInSquadSlotBP
// 0x0010 (0x0010 - 0x0000)
struct FortSquadSlotWidget_GetItemInSquadSlotBP final
{
public:
	const class ULocalPlayer*                     LocalPlayer;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortItem*                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotWidget_GetItemInSquadSlotBP) == 0x000008, "Wrong alignment on FortSquadSlotWidget_GetItemInSquadSlotBP");
static_assert(sizeof(FortSquadSlotWidget_GetItemInSquadSlotBP) == 0x000010, "Wrong size on FortSquadSlotWidget_GetItemInSquadSlotBP");
static_assert(offsetof(FortSquadSlotWidget_GetItemInSquadSlotBP, LocalPlayer) == 0x000000, "Member 'FortSquadSlotWidget_GetItemInSquadSlotBP::LocalPlayer' has a wrong offset!");
static_assert(offsetof(FortSquadSlotWidget_GetItemInSquadSlotBP, ReturnValue) == 0x000008, "Member 'FortSquadSlotWidget_GetItemInSquadSlotBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadSlotWidget.IsSquadSlotLockedBP
// 0x0001 (0x0001 - 0x0000)
struct FortSquadSlotWidget_IsSquadSlotLockedBP final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadSlotWidget_IsSquadSlotLockedBP) == 0x000001, "Wrong alignment on FortSquadSlotWidget_IsSquadSlotLockedBP");
static_assert(sizeof(FortSquadSlotWidget_IsSquadSlotLockedBP) == 0x000001, "Wrong size on FortSquadSlotWidget_IsSquadSlotLockedBP");
static_assert(offsetof(FortSquadSlotWidget_IsSquadSlotLockedBP, ReturnValue) == 0x000000, "Member 'FortSquadSlotWidget_IsSquadSlotLockedBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadStatsWidgetBase.GetLocalPlayerId
// 0x0028 (0x0028 - 0x0000)
struct FortSquadStatsWidgetBase_GetLocalPlayerId final
{
public:
	struct FUniqueNetIdRepl                       ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadStatsWidgetBase_GetLocalPlayerId) == 0x000008, "Wrong alignment on FortSquadStatsWidgetBase_GetLocalPlayerId");
static_assert(sizeof(FortSquadStatsWidgetBase_GetLocalPlayerId) == 0x000028, "Wrong size on FortSquadStatsWidgetBase_GetLocalPlayerId");
static_assert(offsetof(FortSquadStatsWidgetBase_GetLocalPlayerId, ReturnValue) == 0x000000, "Member 'FortSquadStatsWidgetBase_GetLocalPlayerId::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadTypeLandingPageBase.CreateAndAddSquadButton
// 0x0010 (0x0010 - 0x0000)
struct FortSquadTypeLandingPageBase_CreateAndAddSquadButton final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortSquadSelectorButton*               ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadTypeLandingPageBase_CreateAndAddSquadButton) == 0x000008, "Wrong alignment on FortSquadTypeLandingPageBase_CreateAndAddSquadButton");
static_assert(sizeof(FortSquadTypeLandingPageBase_CreateAndAddSquadButton) == 0x000010, "Wrong size on FortSquadTypeLandingPageBase_CreateAndAddSquadButton");
static_assert(offsetof(FortSquadTypeLandingPageBase_CreateAndAddSquadButton, SquadId) == 0x000000, "Member 'FortSquadTypeLandingPageBase_CreateAndAddSquadButton::SquadId' has a wrong offset!");
static_assert(offsetof(FortSquadTypeLandingPageBase_CreateAndAddSquadButton, ReturnValue) == 0x000008, "Member 'FortSquadTypeLandingPageBase_CreateAndAddSquadButton::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSquadTypeLandingPageBase.HandleBackInputAction
// 0x0001 (0x0001 - 0x0000)
struct FortSquadTypeLandingPageBase_HandleBackInputAction final
{
public:
	bool                                          bPassThrough;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadTypeLandingPageBase_HandleBackInputAction) == 0x000001, "Wrong alignment on FortSquadTypeLandingPageBase_HandleBackInputAction");
static_assert(sizeof(FortSquadTypeLandingPageBase_HandleBackInputAction) == 0x000001, "Wrong size on FortSquadTypeLandingPageBase_HandleBackInputAction");
static_assert(offsetof(FortSquadTypeLandingPageBase_HandleBackInputAction, bPassThrough) == 0x000000, "Member 'FortSquadTypeLandingPageBase_HandleBackInputAction::bPassThrough' has a wrong offset!");

// Function FortniteUI.FortSquadTypeLandingPageBase.HandleManageInputAction
// 0x0001 (0x0001 - 0x0000)
struct FortSquadTypeLandingPageBase_HandleManageInputAction final
{
public:
	bool                                          bPassThrough;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSquadTypeLandingPageBase_HandleManageInputAction) == 0x000001, "Wrong alignment on FortSquadTypeLandingPageBase_HandleManageInputAction");
static_assert(sizeof(FortSquadTypeLandingPageBase_HandleManageInputAction) == 0x000001, "Wrong size on FortSquadTypeLandingPageBase_HandleManageInputAction");
static_assert(offsetof(FortSquadTypeLandingPageBase_HandleManageInputAction, bPassThrough) == 0x000000, "Member 'FortSquadTypeLandingPageBase_HandleManageInputAction::bPassThrough' has a wrong offset!");

// Function FortniteUI.FortStatIcon.SetAttribute
// 0x0020 (0x0020 - 0x0000)
struct FortStatIcon_SetAttribute final
{
public:
	struct FGameplayAttribute                     InAttribute;                                       // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStatIcon_SetAttribute) == 0x000008, "Wrong alignment on FortStatIcon_SetAttribute");
static_assert(sizeof(FortStatIcon_SetAttribute) == 0x000020, "Wrong size on FortStatIcon_SetAttribute");
static_assert(offsetof(FortStatIcon_SetAttribute, InAttribute) == 0x000000, "Member 'FortStatIcon_SetAttribute::InAttribute' has a wrong offset!");

// Function FortniteUI.FortStoreContext.CardAddedToSummaryComplete
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_CardAddedToSummaryComplete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_CardAddedToSummaryComplete) == 0x000001, "Wrong alignment on FortStoreContext_CardAddedToSummaryComplete");
static_assert(sizeof(FortStoreContext_CardAddedToSummaryComplete) == 0x000001, "Wrong size on FortStoreContext_CardAddedToSummaryComplete");
static_assert(offsetof(FortStoreContext_CardAddedToSummaryComplete, ReturnValue) == 0x000000, "Member 'FortStoreContext_CardAddedToSummaryComplete::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.CardBackRevealComplete
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_CardBackRevealComplete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_CardBackRevealComplete) == 0x000001, "Wrong alignment on FortStoreContext_CardBackRevealComplete");
static_assert(sizeof(FortStoreContext_CardBackRevealComplete) == 0x000001, "Wrong size on FortStoreContext_CardBackRevealComplete");
static_assert(offsetof(FortStoreContext_CardBackRevealComplete, ReturnValue) == 0x000000, "Member 'FortStoreContext_CardBackRevealComplete::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.CardEntryComplete
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_CardEntryComplete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_CardEntryComplete) == 0x000001, "Wrong alignment on FortStoreContext_CardEntryComplete");
static_assert(sizeof(FortStoreContext_CardEntryComplete) == 0x000001, "Wrong size on FortStoreContext_CardEntryComplete");
static_assert(offsetof(FortStoreContext_CardEntryComplete, ReturnValue) == 0x000000, "Member 'FortStoreContext_CardEntryComplete::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.CardExitComplete
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_CardExitComplete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_CardExitComplete) == 0x000001, "Wrong alignment on FortStoreContext_CardExitComplete");
static_assert(sizeof(FortStoreContext_CardExitComplete) == 0x000001, "Wrong size on FortStoreContext_CardExitComplete");
static_assert(offsetof(FortStoreContext_CardExitComplete, ReturnValue) == 0x000000, "Member 'FortStoreContext_CardExitComplete::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.CardFlipComplete
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_CardFlipComplete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_CardFlipComplete) == 0x000001, "Wrong alignment on FortStoreContext_CardFlipComplete");
static_assert(sizeof(FortStoreContext_CardFlipComplete) == 0x000001, "Wrong size on FortStoreContext_CardFlipComplete");
static_assert(offsetof(FortStoreContext_CardFlipComplete, ReturnValue) == 0x000000, "Member 'FortStoreContext_CardFlipComplete::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.CardFrontRevealComplete
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_CardFrontRevealComplete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_CardFrontRevealComplete) == 0x000001, "Wrong alignment on FortStoreContext_CardFrontRevealComplete");
static_assert(sizeof(FortStoreContext_CardFrontRevealComplete) == 0x000001, "Wrong size on FortStoreContext_CardFrontRevealComplete");
static_assert(offsetof(FortStoreContext_CardFrontRevealComplete, ReturnValue) == 0x000000, "Member 'FortStoreContext_CardFrontRevealComplete::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.CardPackDestroyComplete
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_CardPackDestroyComplete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_CardPackDestroyComplete) == 0x000001, "Wrong alignment on FortStoreContext_CardPackDestroyComplete");
static_assert(sizeof(FortStoreContext_CardPackDestroyComplete) == 0x000001, "Wrong size on FortStoreContext_CardPackDestroyComplete");
static_assert(offsetof(FortStoreContext_CardPackDestroyComplete, ReturnValue) == 0x000000, "Member 'FortStoreContext_CardPackDestroyComplete::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.CardPackOpeningComplete
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_CardPackOpeningComplete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_CardPackOpeningComplete) == 0x000001, "Wrong alignment on FortStoreContext_CardPackOpeningComplete");
static_assert(sizeof(FortStoreContext_CardPackOpeningComplete) == 0x000001, "Wrong size on FortStoreContext_CardPackOpeningComplete");
static_assert(offsetof(FortStoreContext_CardPackOpeningComplete, ReturnValue) == 0x000000, "Member 'FortStoreContext_CardPackOpeningComplete::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.ChoiceResultComplete
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_ChoiceResultComplete final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_ChoiceResultComplete) == 0x000001, "Wrong alignment on FortStoreContext_ChoiceResultComplete");
static_assert(sizeof(FortStoreContext_ChoiceResultComplete) == 0x000001, "Wrong size on FortStoreContext_ChoiceResultComplete");
static_assert(offsetof(FortStoreContext_ChoiceResultComplete, ReturnValue) == 0x000000, "Member 'FortStoreContext_ChoiceResultComplete::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.EnterCardPackStore
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_EnterCardPackStore final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_EnterCardPackStore) == 0x000001, "Wrong alignment on FortStoreContext_EnterCardPackStore");
static_assert(sizeof(FortStoreContext_EnterCardPackStore) == 0x000001, "Wrong size on FortStoreContext_EnterCardPackStore");
static_assert(offsetof(FortStoreContext_EnterCardPackStore, ReturnValue) == 0x000000, "Member 'FortStoreContext_EnterCardPackStore::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.EnterCurrencyStore
// 0x0018 (0x0018 - 0x0000)
struct FortStoreContext_EnterCurrencyStore final
{
public:
	class FString                                 AttemptedPurchaseCardPackId;                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortStoreContext_EnterCurrencyStore) == 0x000008, "Wrong alignment on FortStoreContext_EnterCurrencyStore");
static_assert(sizeof(FortStoreContext_EnterCurrencyStore) == 0x000018, "Wrong size on FortStoreContext_EnterCurrencyStore");
static_assert(offsetof(FortStoreContext_EnterCurrencyStore, AttemptedPurchaseCardPackId) == 0x000000, "Member 'FortStoreContext_EnterCurrencyStore::AttemptedPurchaseCardPackId' has a wrong offset!");
static_assert(offsetof(FortStoreContext_EnterCurrencyStore, ReturnValue) == 0x000010, "Member 'FortStoreContext_EnterCurrencyStore::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.ErrorOccurred
// 0x0018 (0x0018 - 0x0000)
struct FortStoreContext_ErrorOccurred final
{
public:
	class FString                                 ErrorAnalytics;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortStoreContext_ErrorOccurred) == 0x000008, "Wrong alignment on FortStoreContext_ErrorOccurred");
static_assert(sizeof(FortStoreContext_ErrorOccurred) == 0x000018, "Wrong size on FortStoreContext_ErrorOccurred");
static_assert(offsetof(FortStoreContext_ErrorOccurred, ErrorAnalytics) == 0x000000, "Member 'FortStoreContext_ErrorOccurred::ErrorAnalytics' has a wrong offset!");
static_assert(offsetof(FortStoreContext_ErrorOccurred, ReturnValue) == 0x000010, "Member 'FortStoreContext_ErrorOccurred::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.ExitCardPackStore
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_ExitCardPackStore final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_ExitCardPackStore) == 0x000001, "Wrong alignment on FortStoreContext_ExitCardPackStore");
static_assert(sizeof(FortStoreContext_ExitCardPackStore) == 0x000001, "Wrong size on FortStoreContext_ExitCardPackStore");
static_assert(offsetof(FortStoreContext_ExitCardPackStore, ReturnValue) == 0x000000, "Member 'FortStoreContext_ExitCardPackStore::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.ExitCurrencyStore
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_ExitCurrencyStore final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_ExitCurrencyStore) == 0x000001, "Wrong alignment on FortStoreContext_ExitCurrencyStore");
static_assert(sizeof(FortStoreContext_ExitCurrencyStore) == 0x000001, "Wrong size on FortStoreContext_ExitCurrencyStore");
static_assert(offsetof(FortStoreContext_ExitCurrencyStore, ReturnValue) == 0x000000, "Member 'FortStoreContext_ExitCurrencyStore::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.ExitSummary
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_ExitSummary final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_ExitSummary) == 0x000001, "Wrong alignment on FortStoreContext_ExitSummary");
static_assert(sizeof(FortStoreContext_ExitSummary) == 0x000001, "Wrong size on FortStoreContext_ExitSummary");
static_assert(offsetof(FortStoreContext_ExitSummary, ReturnValue) == 0x000000, "Member 'FortStoreContext_ExitSummary::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.ExitWebPayment
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_ExitWebPayment final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_ExitWebPayment) == 0x000001, "Wrong alignment on FortStoreContext_ExitWebPayment");
static_assert(sizeof(FortStoreContext_ExitWebPayment) == 0x000001, "Wrong size on FortStoreContext_ExitWebPayment");
static_assert(offsetof(FortStoreContext_ExitWebPayment, ReturnValue) == 0x000000, "Member 'FortStoreContext_ExitWebPayment::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.GetAccountItems
// 0x0020 (0x0020 - 0x0000)
struct FortStoreContext_GetAccountItems final
{
public:
	TArray<class UFortAccountItemDefinition*>     AccountItemDefinitions;                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class UFortAccountItem*>               AccountItems;                                      // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_GetAccountItems) == 0x000008, "Wrong alignment on FortStoreContext_GetAccountItems");
static_assert(sizeof(FortStoreContext_GetAccountItems) == 0x000020, "Wrong size on FortStoreContext_GetAccountItems");
static_assert(offsetof(FortStoreContext_GetAccountItems, AccountItemDefinitions) == 0x000000, "Member 'FortStoreContext_GetAccountItems::AccountItemDefinitions' has a wrong offset!");
static_assert(offsetof(FortStoreContext_GetAccountItems, AccountItems) == 0x000010, "Member 'FortStoreContext_GetAccountItems::AccountItems' has a wrong offset!");

// Function FortniteUI.FortStoreContext.GetRarityColor
// 0x0014 (0x0014 - 0x0000)
struct FortStoreContext_GetRarityColor final
{
public:
	EFortRarity                                   Rarity;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ReturnValue;                                       // 0x0004(0x0010)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_GetRarityColor) == 0x000004, "Wrong alignment on FortStoreContext_GetRarityColor");
static_assert(sizeof(FortStoreContext_GetRarityColor) == 0x000014, "Wrong size on FortStoreContext_GetRarityColor");
static_assert(offsetof(FortStoreContext_GetRarityColor, Rarity) == 0x000000, "Member 'FortStoreContext_GetRarityColor::Rarity' has a wrong offset!");
static_assert(offsetof(FortStoreContext_GetRarityColor, ReturnValue) == 0x000004, "Member 'FortStoreContext_GetRarityColor::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.GetTimeUntilDailyLimitReset
// 0x0008 (0x0008 - 0x0000)
struct FortStoreContext_GetTimeUntilDailyLimitReset final
{
public:
	struct FTimespan                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_GetTimeUntilDailyLimitReset) == 0x000008, "Wrong alignment on FortStoreContext_GetTimeUntilDailyLimitReset");
static_assert(sizeof(FortStoreContext_GetTimeUntilDailyLimitReset) == 0x000008, "Wrong size on FortStoreContext_GetTimeUntilDailyLimitReset");
static_assert(offsetof(FortStoreContext_GetTimeUntilDailyLimitReset, ReturnValue) == 0x000000, "Member 'FortStoreContext_GetTimeUntilDailyLimitReset::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.GetTimeUntilMarketplaceRefresh
// 0x0008 (0x0008 - 0x0000)
struct FortStoreContext_GetTimeUntilMarketplaceRefresh final
{
public:
	struct FTimespan                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_GetTimeUntilMarketplaceRefresh) == 0x000008, "Wrong alignment on FortStoreContext_GetTimeUntilMarketplaceRefresh");
static_assert(sizeof(FortStoreContext_GetTimeUntilMarketplaceRefresh) == 0x000008, "Wrong size on FortStoreContext_GetTimeUntilMarketplaceRefresh");
static_assert(offsetof(FortStoreContext_GetTimeUntilMarketplaceRefresh, ReturnValue) == 0x000000, "Member 'FortStoreContext_GetTimeUntilMarketplaceRefresh::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.MakeChoice
// 0x0008 (0x0008 - 0x0000)
struct FortStoreContext_MakeChoice final
{
public:
	int32                                         ChoiceIdx;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortStoreContext_MakeChoice) == 0x000004, "Wrong alignment on FortStoreContext_MakeChoice");
static_assert(sizeof(FortStoreContext_MakeChoice) == 0x000008, "Wrong size on FortStoreContext_MakeChoice");
static_assert(offsetof(FortStoreContext_MakeChoice, ChoiceIdx) == 0x000000, "Member 'FortStoreContext_MakeChoice::ChoiceIdx' has a wrong offset!");
static_assert(offsetof(FortStoreContext_MakeChoice, ReturnValue) == 0x000004, "Member 'FortStoreContext_MakeChoice::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.MakePurchase
// 0x0098 (0x0098 - 0x0000)
struct FortStoreContext_MakePurchase final
{
public:
	struct FCardPackOffer                         Offer;                                             // 0x0000(0x0090)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         Quantity;                                          // 0x0090(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECardPackPurchaseError                        ReturnValue;                                       // 0x0094(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortStoreContext_MakePurchase) == 0x000008, "Wrong alignment on FortStoreContext_MakePurchase");
static_assert(sizeof(FortStoreContext_MakePurchase) == 0x000098, "Wrong size on FortStoreContext_MakePurchase");
static_assert(offsetof(FortStoreContext_MakePurchase, Offer) == 0x000000, "Member 'FortStoreContext_MakePurchase::Offer' has a wrong offset!");
static_assert(offsetof(FortStoreContext_MakePurchase, Quantity) == 0x000090, "Member 'FortStoreContext_MakePurchase::Quantity' has a wrong offset!");
static_assert(offsetof(FortStoreContext_MakePurchase, ReturnValue) == 0x000094, "Member 'FortStoreContext_MakePurchase::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.OpenWebPayment
// 0x0018 (0x0018 - 0x0000)
struct FortStoreContext_OpenWebPayment final
{
public:
	class FString                                 AttemptedMTXOfferId;                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortStoreContext_OpenWebPayment) == 0x000008, "Wrong alignment on FortStoreContext_OpenWebPayment");
static_assert(sizeof(FortStoreContext_OpenWebPayment) == 0x000018, "Wrong size on FortStoreContext_OpenWebPayment");
static_assert(offsetof(FortStoreContext_OpenWebPayment, AttemptedMTXOfferId) == 0x000000, "Member 'FortStoreContext_OpenWebPayment::AttemptedMTXOfferId' has a wrong offset!");
static_assert(offsetof(FortStoreContext_OpenWebPayment, ReturnValue) == 0x000010, "Member 'FortStoreContext_OpenWebPayment::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.FireInteractionAnalyticsEvent
// 0x0020 (0x0020 - 0x0000)
struct FortStoreContext_FireInteractionAnalyticsEvent final
{
public:
	class FString                                 Interaction;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Details;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_FireInteractionAnalyticsEvent) == 0x000008, "Wrong alignment on FortStoreContext_FireInteractionAnalyticsEvent");
static_assert(sizeof(FortStoreContext_FireInteractionAnalyticsEvent) == 0x000020, "Wrong size on FortStoreContext_FireInteractionAnalyticsEvent");
static_assert(offsetof(FortStoreContext_FireInteractionAnalyticsEvent, Interaction) == 0x000000, "Member 'FortStoreContext_FireInteractionAnalyticsEvent::Interaction' has a wrong offset!");
static_assert(offsetof(FortStoreContext_FireInteractionAnalyticsEvent, Details) == 0x000010, "Member 'FortStoreContext_FireInteractionAnalyticsEvent::Details' has a wrong offset!");

// Function FortniteUI.FortStoreContext.GetCard
// 0x0028 (0x0028 - 0x0000)
struct FortStoreContext_GetCard final
{
public:
	int32                                         CardIdx;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCard                                  ResultOut;                                         // 0x0008(0x0018)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortStoreContext_GetCard) == 0x000008, "Wrong alignment on FortStoreContext_GetCard");
static_assert(sizeof(FortStoreContext_GetCard) == 0x000028, "Wrong size on FortStoreContext_GetCard");
static_assert(offsetof(FortStoreContext_GetCard, CardIdx) == 0x000000, "Member 'FortStoreContext_GetCard::CardIdx' has a wrong offset!");
static_assert(offsetof(FortStoreContext_GetCard, ResultOut) == 0x000008, "Member 'FortStoreContext_GetCard::ResultOut' has a wrong offset!");
static_assert(offsetof(FortStoreContext_GetCard, ReturnValue) == 0x000020, "Member 'FortStoreContext_GetCard::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.GetNumUnopenedCardPacksRemaining
// 0x0010 (0x0010 - 0x0000)
struct FortStoreContext_GetNumUnopenedCardPacksRemaining final
{
public:
	const class UFortCardPackItemDefinition*      PackType;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortStoreContext_GetNumUnopenedCardPacksRemaining) == 0x000008, "Wrong alignment on FortStoreContext_GetNumUnopenedCardPacksRemaining");
static_assert(sizeof(FortStoreContext_GetNumUnopenedCardPacksRemaining) == 0x000010, "Wrong size on FortStoreContext_GetNumUnopenedCardPacksRemaining");
static_assert(offsetof(FortStoreContext_GetNumUnopenedCardPacksRemaining, PackType) == 0x000000, "Member 'FortStoreContext_GetNumUnopenedCardPacksRemaining::PackType' has a wrong offset!");
static_assert(offsetof(FortStoreContext_GetNumUnopenedCardPacksRemaining, ReturnValue) == 0x000008, "Member 'FortStoreContext_GetNumUnopenedCardPacksRemaining::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.GetPreviousState
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_GetPreviousState final
{
public:
	EFortStoreState                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_GetPreviousState) == 0x000001, "Wrong alignment on FortStoreContext_GetPreviousState");
static_assert(sizeof(FortStoreContext_GetPreviousState) == 0x000001, "Wrong size on FortStoreContext_GetPreviousState");
static_assert(offsetof(FortStoreContext_GetPreviousState, ReturnValue) == 0x000000, "Member 'FortStoreContext_GetPreviousState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.GetStoreState
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_GetStoreState final
{
public:
	EFortStoreState                               ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_GetStoreState) == 0x000001, "Wrong alignment on FortStoreContext_GetStoreState");
static_assert(sizeof(FortStoreContext_GetStoreState) == 0x000001, "Wrong size on FortStoreContext_GetStoreState");
static_assert(offsetof(FortStoreContext_GetStoreState, ReturnValue) == 0x000000, "Member 'FortStoreContext_GetStoreState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreContext.IsWaitingForMcp
// 0x0001 (0x0001 - 0x0000)
struct FortStoreContext_IsWaitingForMcp final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreContext_IsWaitingForMcp) == 0x000001, "Wrong alignment on FortStoreContext_IsWaitingForMcp");
static_assert(sizeof(FortStoreContext_IsWaitingForMcp) == 0x000001, "Wrong size on FortStoreContext_IsWaitingForMcp");
static_assert(offsetof(FortStoreContext_IsWaitingForMcp, ReturnValue) == 0x000000, "Member 'FortStoreContext_IsWaitingForMcp::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortStoreSummary.SetCards
// 0x0010 (0x0010 - 0x0000)
struct FortStoreSummary_SetCards final
{
public:
	TArray<struct FCard>                          Cards;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortStoreSummary_SetCards) == 0x000008, "Wrong alignment on FortStoreSummary_SetCards");
static_assert(sizeof(FortStoreSummary_SetCards) == 0x000010, "Wrong size on FortStoreSummary_SetCards");
static_assert(offsetof(FortStoreSummary_SetCards, Cards) == 0x000000, "Member 'FortStoreSummary_SetCards::Cards' has a wrong offset!");

// Function FortniteUI.FortSubGameSelectBase.GetFullDescription
// 0x0028 (0x0028 - 0x0000)
struct FortSubGameSelectBase_GetFullDescription final
{
public:
	ESubGame                                      SubGame;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   FullDescription;                                   // 0x0008(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSubGameSelectBase_GetFullDescription) == 0x000008, "Wrong alignment on FortSubGameSelectBase_GetFullDescription");
static_assert(sizeof(FortSubGameSelectBase_GetFullDescription) == 0x000028, "Wrong size on FortSubGameSelectBase_GetFullDescription");
static_assert(offsetof(FortSubGameSelectBase_GetFullDescription, SubGame) == 0x000000, "Member 'FortSubGameSelectBase_GetFullDescription::SubGame' has a wrong offset!");
static_assert(offsetof(FortSubGameSelectBase_GetFullDescription, FullDescription) == 0x000008, "Member 'FortSubGameSelectBase_GetFullDescription::FullDescription' has a wrong offset!");
static_assert(offsetof(FortSubGameSelectBase_GetFullDescription, ReturnValue) == 0x000020, "Member 'FortSubGameSelectBase_GetFullDescription::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSubGameSelectBase.GetIsOnSale
// 0x0002 (0x0002 - 0x0000)
struct FortSubGameSelectBase_GetIsOnSale final
{
public:
	ESubGame                                      SubGame;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSubGameSelectBase_GetIsOnSale) == 0x000001, "Wrong alignment on FortSubGameSelectBase_GetIsOnSale");
static_assert(sizeof(FortSubGameSelectBase_GetIsOnSale) == 0x000002, "Wrong size on FortSubGameSelectBase_GetIsOnSale");
static_assert(offsetof(FortSubGameSelectBase_GetIsOnSale, SubGame) == 0x000000, "Member 'FortSubGameSelectBase_GetIsOnSale::SubGame' has a wrong offset!");
static_assert(offsetof(FortSubGameSelectBase_GetIsOnSale, ReturnValue) == 0x000001, "Member 'FortSubGameSelectBase_GetIsOnSale::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSubGameSelectBase.GetShortDescription
// 0x0028 (0x0028 - 0x0000)
struct FortSubGameSelectBase_GetShortDescription final
{
public:
	ESubGame                                      SubGame;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ShortDescription;                                  // 0x0008(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSubGameSelectBase_GetShortDescription) == 0x000008, "Wrong alignment on FortSubGameSelectBase_GetShortDescription");
static_assert(sizeof(FortSubGameSelectBase_GetShortDescription) == 0x000028, "Wrong size on FortSubGameSelectBase_GetShortDescription");
static_assert(offsetof(FortSubGameSelectBase_GetShortDescription, SubGame) == 0x000000, "Member 'FortSubGameSelectBase_GetShortDescription::SubGame' has a wrong offset!");
static_assert(offsetof(FortSubGameSelectBase_GetShortDescription, ShortDescription) == 0x000008, "Member 'FortSubGameSelectBase_GetShortDescription::ShortDescription' has a wrong offset!");
static_assert(offsetof(FortSubGameSelectBase_GetShortDescription, ReturnValue) == 0x000020, "Member 'FortSubGameSelectBase_GetShortDescription::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSubGameSelectButtonBase.UpdateButtonState
// 0x0001 (0x0001 - 0x0000)
struct FortSubGameSelectButtonBase_UpdateButtonState final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSubGameSelectButtonBase_UpdateButtonState) == 0x000001, "Wrong alignment on FortSubGameSelectButtonBase_UpdateButtonState");
static_assert(sizeof(FortSubGameSelectButtonBase_UpdateButtonState) == 0x000001, "Wrong size on FortSubGameSelectButtonBase_UpdateButtonState");
static_assert(offsetof(FortSubGameSelectButtonBase_UpdateButtonState, bVisible) == 0x000000, "Member 'FortSubGameSelectButtonBase_UpdateButtonState::bVisible' has a wrong offset!");

// Function FortniteUI.FortSurvivorSquadSelectorButton.TryGetPersonalityMatches
// 0x02E8 (0x02E8 - 0x0000)
struct FortSurvivorSquadSelectorButton_TryGetPersonalityMatches final
{
public:
	struct FFortSurvivorSquadSelectorButtonPersonalityMatches OutPersonalityMatches;                             // 0x0000(0x02E0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x02E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSurvivorSquadSelectorButton_TryGetPersonalityMatches) == 0x000008, "Wrong alignment on FortSurvivorSquadSelectorButton_TryGetPersonalityMatches");
static_assert(sizeof(FortSurvivorSquadSelectorButton_TryGetPersonalityMatches) == 0x0002E8, "Wrong size on FortSurvivorSquadSelectorButton_TryGetPersonalityMatches");
static_assert(offsetof(FortSurvivorSquadSelectorButton_TryGetPersonalityMatches, OutPersonalityMatches) == 0x000000, "Member 'FortSurvivorSquadSelectorButton_TryGetPersonalityMatches::OutPersonalityMatches' has a wrong offset!");
static_assert(offsetof(FortSurvivorSquadSelectorButton_TryGetPersonalityMatches, ReturnValue) == 0x0002E0, "Member 'FortSurvivorSquadSelectorButton_TryGetPersonalityMatches::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSurvivorSquadSelectorButton.TryGetSquadMembers
// 0x0018 (0x0018 - 0x0000)
struct FortSurvivorSquadSelectorButton_TryGetSquadMembers final
{
public:
	TArray<class UFortWorker*>                    OutSquadMembers;                                   // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSurvivorSquadSelectorButton_TryGetSquadMembers) == 0x000008, "Wrong alignment on FortSurvivorSquadSelectorButton_TryGetSquadMembers");
static_assert(sizeof(FortSurvivorSquadSelectorButton_TryGetSquadMembers) == 0x000018, "Wrong size on FortSurvivorSquadSelectorButton_TryGetSquadMembers");
static_assert(offsetof(FortSurvivorSquadSelectorButton_TryGetSquadMembers, OutSquadMembers) == 0x000000, "Member 'FortSurvivorSquadSelectorButton_TryGetSquadMembers::OutSquadMembers' has a wrong offset!");
static_assert(offsetof(FortSurvivorSquadSelectorButton_TryGetSquadMembers, ReturnValue) == 0x000010, "Member 'FortSurvivorSquadSelectorButton_TryGetSquadMembers::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSurvivorSquadSelectorButton.TryGetSummaryStats
// 0x0078 (0x0078 - 0x0000)
struct FortSurvivorSquadSelectorButton_TryGetSummaryStats final
{
public:
	struct FFortSurvivorSquadSelectorButtonSummaryStats OutSummaryStats;                                   // 0x0000(0x0070)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSurvivorSquadSelectorButton_TryGetSummaryStats) == 0x000008, "Wrong alignment on FortSurvivorSquadSelectorButton_TryGetSummaryStats");
static_assert(sizeof(FortSurvivorSquadSelectorButton_TryGetSummaryStats) == 0x000078, "Wrong size on FortSurvivorSquadSelectorButton_TryGetSummaryStats");
static_assert(offsetof(FortSurvivorSquadSelectorButton_TryGetSummaryStats, OutSummaryStats) == 0x000000, "Member 'FortSurvivorSquadSelectorButton_TryGetSummaryStats::OutSummaryStats' has a wrong offset!");
static_assert(offsetof(FortSurvivorSquadSelectorButton_TryGetSummaryStats, ReturnValue) == 0x000070, "Member 'FortSurvivorSquadSelectorButton_TryGetSummaryStats::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSurvivorSquadStatMatchBase.OnStatMatchUpdated
// 0x0310 (0x0310 - 0x0000)
struct FortSurvivorSquadStatMatchBase_OnStatMatchUpdated final
{
public:
	struct FFortUISurvivorSquadStatMatch          UpdatedMatch;                                      // 0x0000(0x0310)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSurvivorSquadStatMatchBase_OnStatMatchUpdated) == 0x000008, "Wrong alignment on FortSurvivorSquadStatMatchBase_OnStatMatchUpdated");
static_assert(sizeof(FortSurvivorSquadStatMatchBase_OnStatMatchUpdated) == 0x000310, "Wrong size on FortSurvivorSquadStatMatchBase_OnStatMatchUpdated");
static_assert(offsetof(FortSurvivorSquadStatMatchBase_OnStatMatchUpdated, UpdatedMatch) == 0x000000, "Member 'FortSurvivorSquadStatMatchBase_OnStatMatchUpdated::UpdatedMatch' has a wrong offset!");

// Function FortniteUI.FortSurvivorSquadStatMatchesBase.AddStatMatch
// 0x0008 (0x0008 - 0x0000)
struct FortSurvivorSquadStatMatchesBase_AddStatMatch final
{
public:
	class UFortSurvivorSquadStatMatchBase*        SetBonus;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSurvivorSquadStatMatchesBase_AddStatMatch) == 0x000008, "Wrong alignment on FortSurvivorSquadStatMatchesBase_AddStatMatch");
static_assert(sizeof(FortSurvivorSquadStatMatchesBase_AddStatMatch) == 0x000008, "Wrong size on FortSurvivorSquadStatMatchesBase_AddStatMatch");
static_assert(offsetof(FortSurvivorSquadStatMatchesBase_AddStatMatch, SetBonus) == 0x000000, "Member 'FortSurvivorSquadStatMatchesBase_AddStatMatch::SetBonus' has a wrong offset!");

// Function FortniteUI.FortSurvivorSquadStatMatchesBase.SetIdOfSquadToManageBP
// 0x0008 (0x0008 - 0x0000)
struct FortSurvivorSquadStatMatchesBase_SetIdOfSquadToManageBP final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSurvivorSquadStatMatchesBase_SetIdOfSquadToManageBP) == 0x000004, "Wrong alignment on FortSurvivorSquadStatMatchesBase_SetIdOfSquadToManageBP");
static_assert(sizeof(FortSurvivorSquadStatMatchesBase_SetIdOfSquadToManageBP) == 0x000008, "Wrong size on FortSurvivorSquadStatMatchesBase_SetIdOfSquadToManageBP");
static_assert(offsetof(FortSurvivorSquadStatMatchesBase_SetIdOfSquadToManageBP, SquadId) == 0x000000, "Member 'FortSurvivorSquadStatMatchesBase_SetIdOfSquadToManageBP::SquadId' has a wrong offset!");

// Function FortniteUI.FortSurvivorSquadStatMatchesBase.SetSummaryView
// 0x0001 (0x0001 - 0x0000)
struct FortSurvivorSquadStatMatchesBase_SetSummaryView final
{
public:
	bool                                          bInSummaryView;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSurvivorSquadStatMatchesBase_SetSummaryView) == 0x000001, "Wrong alignment on FortSurvivorSquadStatMatchesBase_SetSummaryView");
static_assert(sizeof(FortSurvivorSquadStatMatchesBase_SetSummaryView) == 0x000001, "Wrong size on FortSurvivorSquadStatMatchesBase_SetSummaryView");
static_assert(offsetof(FortSurvivorSquadStatMatchesBase_SetSummaryView, bInSummaryView) == 0x000000, "Member 'FortSurvivorSquadStatMatchesBase_SetSummaryView::bInSummaryView' has a wrong offset!");

// Function FortniteUI.FortSurvivorSquadStatMatchesBase.GetIdOfSquadToManageBP
// 0x0008 (0x0008 - 0x0000)
struct FortSurvivorSquadStatMatchesBase_GetIdOfSquadToManageBP final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSurvivorSquadStatMatchesBase_GetIdOfSquadToManageBP) == 0x000004, "Wrong alignment on FortSurvivorSquadStatMatchesBase_GetIdOfSquadToManageBP");
static_assert(sizeof(FortSurvivorSquadStatMatchesBase_GetIdOfSquadToManageBP) == 0x000008, "Wrong size on FortSurvivorSquadStatMatchesBase_GetIdOfSquadToManageBP");
static_assert(offsetof(FortSurvivorSquadStatMatchesBase_GetIdOfSquadToManageBP, ReturnValue) == 0x000000, "Member 'FortSurvivorSquadStatMatchesBase_GetIdOfSquadToManageBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSurvivorSquadStatMatchesBase.TryGetStaticSquadDataBP
// 0x0090 (0x0090 - 0x0000)
struct FortSurvivorSquadStatMatchesBase_TryGetStaticSquadDataBP final
{
public:
	struct FHomebaseSquad                         OutSquadData;                                      // 0x0000(0x0088)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortSurvivorSquadStatMatchesBase_TryGetStaticSquadDataBP) == 0x000008, "Wrong alignment on FortSurvivorSquadStatMatchesBase_TryGetStaticSquadDataBP");
static_assert(sizeof(FortSurvivorSquadStatMatchesBase_TryGetStaticSquadDataBP) == 0x000090, "Wrong size on FortSurvivorSquadStatMatchesBase_TryGetStaticSquadDataBP");
static_assert(offsetof(FortSurvivorSquadStatMatchesBase_TryGetStaticSquadDataBP, OutSquadData) == 0x000000, "Member 'FortSurvivorSquadStatMatchesBase_TryGetStaticSquadDataBP::OutSquadData' has a wrong offset!");
static_assert(offsetof(FortSurvivorSquadStatMatchesBase_TryGetStaticSquadDataBP, ReturnValue) == 0x000088, "Member 'FortSurvivorSquadStatMatchesBase_TryGetStaticSquadDataBP::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSurvivorSquadSummaryStatItem.SetAttributeModifierAccumulation
// 0x0030 (0x0030 - 0x0000)
struct FortSurvivorSquadSummaryStatItem_SetAttributeModifierAccumulation final
{
public:
	struct FFortAttributeModifierAccumulation     Accumulation;                                      // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSurvivorSquadSummaryStatItem_SetAttributeModifierAccumulation) == 0x000008, "Wrong alignment on FortSurvivorSquadSummaryStatItem_SetAttributeModifierAccumulation");
static_assert(sizeof(FortSurvivorSquadSummaryStatItem_SetAttributeModifierAccumulation) == 0x000030, "Wrong size on FortSurvivorSquadSummaryStatItem_SetAttributeModifierAccumulation");
static_assert(offsetof(FortSurvivorSquadSummaryStatItem_SetAttributeModifierAccumulation, Accumulation) == 0x000000, "Member 'FortSurvivorSquadSummaryStatItem_SetAttributeModifierAccumulation::Accumulation' has a wrong offset!");

// Function FortniteUI.FortTabButtonInterface.SetTabLabelInfo
// 0x0090 (0x0090 - 0x0000)
struct FortTabButtonInterface_SetTabLabelInfo final
{
public:
	struct FFortTabButtonLabelInfo                TabLabelInfo;                                      // 0x0000(0x0090)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTabButtonInterface_SetTabLabelInfo) == 0x000008, "Wrong alignment on FortTabButtonInterface_SetTabLabelInfo");
static_assert(sizeof(FortTabButtonInterface_SetTabLabelInfo) == 0x000090, "Wrong size on FortTabButtonInterface_SetTabLabelInfo");
static_assert(offsetof(FortTabButtonInterface_SetTabLabelInfo, TabLabelInfo) == 0x000000, "Member 'FortTabButtonInterface_SetTabLabelInfo::TabLabelInfo' has a wrong offset!");

// Function FortniteUI.FortTabListWidgetBase.GetPreregisteredTabInfo
// 0x00C8 (0x00C8 - 0x0000)
struct FortTabListWidgetBase_GetPreregisteredTabInfo final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortTabListRegistrationInfo           OutTabInfo;                                        // 0x0008(0x00B8)(Parm, OutParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortTabListWidgetBase_GetPreregisteredTabInfo) == 0x000008, "Wrong alignment on FortTabListWidgetBase_GetPreregisteredTabInfo");
static_assert(sizeof(FortTabListWidgetBase_GetPreregisteredTabInfo) == 0x0000C8, "Wrong size on FortTabListWidgetBase_GetPreregisteredTabInfo");
static_assert(offsetof(FortTabListWidgetBase_GetPreregisteredTabInfo, TabNameID) == 0x000000, "Member 'FortTabListWidgetBase_GetPreregisteredTabInfo::TabNameID' has a wrong offset!");
static_assert(offsetof(FortTabListWidgetBase_GetPreregisteredTabInfo, OutTabInfo) == 0x000008, "Member 'FortTabListWidgetBase_GetPreregisteredTabInfo::OutTabInfo' has a wrong offset!");
static_assert(offsetof(FortTabListWidgetBase_GetPreregisteredTabInfo, ReturnValue) == 0x0000C0, "Member 'FortTabListWidgetBase_GetPreregisteredTabInfo::ReturnValue' has a wrong offset!");

// DelegateFunction FortniteUI.FortTabListWidgetBase.OnTabContentCreated__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct FortTabListWidgetBase_OnTabContentCreated__DelegateSignature final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonUserWidget*                      TabWidget;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTabListWidgetBase_OnTabContentCreated__DelegateSignature) == 0x000008, "Wrong alignment on FortTabListWidgetBase_OnTabContentCreated__DelegateSignature");
static_assert(sizeof(FortTabListWidgetBase_OnTabContentCreated__DelegateSignature) == 0x000010, "Wrong size on FortTabListWidgetBase_OnTabContentCreated__DelegateSignature");
static_assert(offsetof(FortTabListWidgetBase_OnTabContentCreated__DelegateSignature, TabId) == 0x000000, "Member 'FortTabListWidgetBase_OnTabContentCreated__DelegateSignature::TabId' has a wrong offset!");
static_assert(offsetof(FortTabListWidgetBase_OnTabContentCreated__DelegateSignature, TabWidget) == 0x000008, "Member 'FortTabListWidgetBase_OnTabContentCreated__DelegateSignature::TabWidget' has a wrong offset!");

// Function FortniteUI.FortTabListWidgetBase.RegisterFortTab
// 0x00B0 (0x00B0 - 0x0000)
struct FortTabListWidgetBase_RegisterFortTab final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCommonButton>              TabButtonType;                                     // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortTabButtonLabelInfo                LabelInfo;                                         // 0x0010(0x0090)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UWidget*                                ContentWidget;                                     // 0x00A0(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortTabListWidgetBase_RegisterFortTab) == 0x000008, "Wrong alignment on FortTabListWidgetBase_RegisterFortTab");
static_assert(sizeof(FortTabListWidgetBase_RegisterFortTab) == 0x0000B0, "Wrong size on FortTabListWidgetBase_RegisterFortTab");
static_assert(offsetof(FortTabListWidgetBase_RegisterFortTab, TabNameID) == 0x000000, "Member 'FortTabListWidgetBase_RegisterFortTab::TabNameID' has a wrong offset!");
static_assert(offsetof(FortTabListWidgetBase_RegisterFortTab, TabButtonType) == 0x000008, "Member 'FortTabListWidgetBase_RegisterFortTab::TabButtonType' has a wrong offset!");
static_assert(offsetof(FortTabListWidgetBase_RegisterFortTab, LabelInfo) == 0x000010, "Member 'FortTabListWidgetBase_RegisterFortTab::LabelInfo' has a wrong offset!");
static_assert(offsetof(FortTabListWidgetBase_RegisterFortTab, ContentWidget) == 0x0000A0, "Member 'FortTabListWidgetBase_RegisterFortTab::ContentWidget' has a wrong offset!");
static_assert(offsetof(FortTabListWidgetBase_RegisterFortTab, ReturnValue) == 0x0000A8, "Member 'FortTabListWidgetBase_RegisterFortTab::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTabListWidgetBase.SetNextTabInputActionData
// 0x0010 (0x0010 - 0x0000)
struct FortTabListWidgetBase_SetNextTabInputActionData final
{
public:
	struct FDataTableRowHandle                    NextData;                                          // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTabListWidgetBase_SetNextTabInputActionData) == 0x000008, "Wrong alignment on FortTabListWidgetBase_SetNextTabInputActionData");
static_assert(sizeof(FortTabListWidgetBase_SetNextTabInputActionData) == 0x000010, "Wrong size on FortTabListWidgetBase_SetNextTabInputActionData");
static_assert(offsetof(FortTabListWidgetBase_SetNextTabInputActionData, NextData) == 0x000000, "Member 'FortTabListWidgetBase_SetNextTabInputActionData::NextData' has a wrong offset!");

// Function FortniteUI.FortTabListWidgetBase.SetPreviousTabInputActionData
// 0x0010 (0x0010 - 0x0000)
struct FortTabListWidgetBase_SetPreviousTabInputActionData final
{
public:
	struct FDataTableRowHandle                    PreviousData;                                      // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTabListWidgetBase_SetPreviousTabInputActionData) == 0x000008, "Wrong alignment on FortTabListWidgetBase_SetPreviousTabInputActionData");
static_assert(sizeof(FortTabListWidgetBase_SetPreviousTabInputActionData) == 0x000010, "Wrong size on FortTabListWidgetBase_SetPreviousTabInputActionData");
static_assert(offsetof(FortTabListWidgetBase_SetPreviousTabInputActionData, PreviousData) == 0x000000, "Member 'FortTabListWidgetBase_SetPreviousTabInputActionData::PreviousData' has a wrong offset!");

// Function FortniteUI.FortTabListWidgetBase.SetTabHiddenState
// 0x0010 (0x0010 - 0x0000)
struct FortTabListWidgetBase_SetTabHiddenState final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHidden;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortTabListWidgetBase_SetTabHiddenState) == 0x000004, "Wrong alignment on FortTabListWidgetBase_SetTabHiddenState");
static_assert(sizeof(FortTabListWidgetBase_SetTabHiddenState) == 0x000010, "Wrong size on FortTabListWidgetBase_SetTabHiddenState");
static_assert(offsetof(FortTabListWidgetBase_SetTabHiddenState, TabNameID) == 0x000000, "Member 'FortTabListWidgetBase_SetTabHiddenState::TabNameID' has a wrong offset!");
static_assert(offsetof(FortTabListWidgetBase_SetTabHiddenState, bHidden) == 0x000008, "Member 'FortTabListWidgetBase_SetTabHiddenState::bHidden' has a wrong offset!");

// Function FortniteUI.FortTabListWidgetBase.IsFirstTabActive
// 0x0001 (0x0001 - 0x0000)
struct FortTabListWidgetBase_IsFirstTabActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTabListWidgetBase_IsFirstTabActive) == 0x000001, "Wrong alignment on FortTabListWidgetBase_IsFirstTabActive");
static_assert(sizeof(FortTabListWidgetBase_IsFirstTabActive) == 0x000001, "Wrong size on FortTabListWidgetBase_IsFirstTabActive");
static_assert(offsetof(FortTabListWidgetBase_IsFirstTabActive, ReturnValue) == 0x000000, "Member 'FortTabListWidgetBase_IsFirstTabActive::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTabListWidgetBase.IsLastTabActive
// 0x0001 (0x0001 - 0x0000)
struct FortTabListWidgetBase_IsLastTabActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTabListWidgetBase_IsLastTabActive) == 0x000001, "Wrong alignment on FortTabListWidgetBase_IsLastTabActive");
static_assert(sizeof(FortTabListWidgetBase_IsLastTabActive) == 0x000001, "Wrong size on FortTabListWidgetBase_IsLastTabActive");
static_assert(offsetof(FortTabListWidgetBase_IsLastTabActive, ReturnValue) == 0x000000, "Member 'FortTabListWidgetBase_IsLastTabActive::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTextStyleList.GetTextStyles
// 0x0010 (0x0010 - 0x0000)
struct FortTextStyleList_GetTextStyles final
{
public:
	TArray<TSoftClassPtr<class UClass>>           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTextStyleList_GetTextStyles) == 0x000008, "Wrong alignment on FortTextStyleList_GetTextStyles");
static_assert(sizeof(FortTextStyleList_GetTextStyles) == 0x000010, "Wrong size on FortTextStyleList_GetTextStyles");
static_assert(offsetof(FortTextStyleList_GetTextStyles, ReturnValue) == 0x000000, "Member 'FortTextStyleList_GetTextStyles::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTheaterSelect.GetSurvivalCMSText
// 0x0038 (0x0038 - 0x0000)
struct FortTheaterSelect_GetSurvivalCMSText final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	class FText                                   Body;                                              // 0x0018(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortTheaterSelect_GetSurvivalCMSText) == 0x000008, "Wrong alignment on FortTheaterSelect_GetSurvivalCMSText");
static_assert(sizeof(FortTheaterSelect_GetSurvivalCMSText) == 0x000038, "Wrong size on FortTheaterSelect_GetSurvivalCMSText");
static_assert(offsetof(FortTheaterSelect_GetSurvivalCMSText, Title) == 0x000000, "Member 'FortTheaterSelect_GetSurvivalCMSText::Title' has a wrong offset!");
static_assert(offsetof(FortTheaterSelect_GetSurvivalCMSText, Body) == 0x000018, "Member 'FortTheaterSelect_GetSurvivalCMSText::Body' has a wrong offset!");
static_assert(offsetof(FortTheaterSelect_GetSurvivalCMSText, ReturnValue) == 0x000030, "Member 'FortTheaterSelect_GetSurvivalCMSText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTheaterSelect.GetTheaterRecommendedRatingRange
// 0x0020 (0x0020 - 0x0000)
struct FortTheaterSelect_GetTheaterRecommendedRatingRange final
{
public:
	class FString                                 UniqueId;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Minimum;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Maximum;                                           // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortTheaterSelect_GetTheaterRecommendedRatingRange) == 0x000008, "Wrong alignment on FortTheaterSelect_GetTheaterRecommendedRatingRange");
static_assert(sizeof(FortTheaterSelect_GetTheaterRecommendedRatingRange) == 0x000020, "Wrong size on FortTheaterSelect_GetTheaterRecommendedRatingRange");
static_assert(offsetof(FortTheaterSelect_GetTheaterRecommendedRatingRange, UniqueId) == 0x000000, "Member 'FortTheaterSelect_GetTheaterRecommendedRatingRange::UniqueId' has a wrong offset!");
static_assert(offsetof(FortTheaterSelect_GetTheaterRecommendedRatingRange, Minimum) == 0x000010, "Member 'FortTheaterSelect_GetTheaterRecommendedRatingRange::Minimum' has a wrong offset!");
static_assert(offsetof(FortTheaterSelect_GetTheaterRecommendedRatingRange, Maximum) == 0x000014, "Member 'FortTheaterSelect_GetTheaterRecommendedRatingRange::Maximum' has a wrong offset!");
static_assert(offsetof(FortTheaterSelect_GetTheaterRecommendedRatingRange, ReturnValue) == 0x000018, "Member 'FortTheaterSelect_GetTheaterRecommendedRatingRange::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTierIndicator.SetBrushSize
// 0x0001 (0x0001 - 0x0000)
struct FortTierIndicator_SetBrushSize final
{
public:
	EFortBrushSize                                Param_BrushSize;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTierIndicator_SetBrushSize) == 0x000001, "Wrong alignment on FortTierIndicator_SetBrushSize");
static_assert(sizeof(FortTierIndicator_SetBrushSize) == 0x000001, "Wrong size on FortTierIndicator_SetBrushSize");
static_assert(offsetof(FortTierIndicator_SetBrushSize, Param_BrushSize) == 0x000000, "Member 'FortTierIndicator_SetBrushSize::Param_BrushSize' has a wrong offset!");

// Function FortniteUI.FortTierIndicator.SetInterPipPadding
// 0x0004 (0x0004 - 0x0000)
struct FortTierIndicator_SetInterPipPadding final
{
public:
	float                                         Param_InterPipPadding;                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTierIndicator_SetInterPipPadding) == 0x000004, "Wrong alignment on FortTierIndicator_SetInterPipPadding");
static_assert(sizeof(FortTierIndicator_SetInterPipPadding) == 0x000004, "Wrong size on FortTierIndicator_SetInterPipPadding");
static_assert(offsetof(FortTierIndicator_SetInterPipPadding, Param_InterPipPadding) == 0x000000, "Member 'FortTierIndicator_SetInterPipPadding::Param_InterPipPadding' has a wrong offset!");

// Function FortniteUI.FortTierIndicator.SetItemToRepresent
// 0x0008 (0x0008 - 0x0000)
struct FortTierIndicator_SetItemToRepresent final
{
public:
	class UFortItem*                              Param_ItemToRepresent;                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTierIndicator_SetItemToRepresent) == 0x000008, "Wrong alignment on FortTierIndicator_SetItemToRepresent");
static_assert(sizeof(FortTierIndicator_SetItemToRepresent) == 0x000008, "Wrong size on FortTierIndicator_SetItemToRepresent");
static_assert(offsetof(FortTierIndicator_SetItemToRepresent, Param_ItemToRepresent) == 0x000000, "Member 'FortTierIndicator_SetItemToRepresent::Param_ItemToRepresent' has a wrong offset!");

// Function FortniteUI.FortTierIndicator.SetPreviewState
// 0x0004 (0x0004 - 0x0000)
struct FortTierIndicator_SetPreviewState final
{
public:
	int32                                         TierIncrease;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTierIndicator_SetPreviewState) == 0x000004, "Wrong alignment on FortTierIndicator_SetPreviewState");
static_assert(sizeof(FortTierIndicator_SetPreviewState) == 0x000004, "Wrong size on FortTierIndicator_SetPreviewState");
static_assert(offsetof(FortTierIndicator_SetPreviewState, TierIncrease) == 0x000000, "Member 'FortTierIndicator_SetPreviewState::TierIncrease' has a wrong offset!");

// Function FortniteUI.FortTooltipUIContext.GetCombinedDescription
// 0x0030 (0x0030 - 0x0000)
struct FortTooltipUIContext_GetCombinedDescription final
{
public:
	const class UObject*                          Object;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFortTooltipContext*              TooltipContext;                                    // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   OutDescription;                                    // 0x0010(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortTooltipUIContext_GetCombinedDescription) == 0x000008, "Wrong alignment on FortTooltipUIContext_GetCombinedDescription");
static_assert(sizeof(FortTooltipUIContext_GetCombinedDescription) == 0x000030, "Wrong size on FortTooltipUIContext_GetCombinedDescription");
static_assert(offsetof(FortTooltipUIContext_GetCombinedDescription, Object) == 0x000000, "Member 'FortTooltipUIContext_GetCombinedDescription::Object' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetCombinedDescription, TooltipContext) == 0x000008, "Member 'FortTooltipUIContext_GetCombinedDescription::TooltipContext' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetCombinedDescription, OutDescription) == 0x000010, "Member 'FortTooltipUIContext_GetCombinedDescription::OutDescription' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetCombinedDescription, ReturnValue) == 0x000028, "Member 'FortTooltipUIContext_GetCombinedDescription::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTooltipUIContext.GetComparisonStats
// 0x0028 (0x0028 - 0x0000)
struct FortTooltipUIContext_GetComparisonStats final
{
public:
	const class UObject*                          Object;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UObject*                          ComparisonObject;                                  // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFortTooltipContext*              TooltipContext;                                    // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortDisplayAttribute>          ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTooltipUIContext_GetComparisonStats) == 0x000008, "Wrong alignment on FortTooltipUIContext_GetComparisonStats");
static_assert(sizeof(FortTooltipUIContext_GetComparisonStats) == 0x000028, "Wrong size on FortTooltipUIContext_GetComparisonStats");
static_assert(offsetof(FortTooltipUIContext_GetComparisonStats, Object) == 0x000000, "Member 'FortTooltipUIContext_GetComparisonStats::Object' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetComparisonStats, ComparisonObject) == 0x000008, "Member 'FortTooltipUIContext_GetComparisonStats::ComparisonObject' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetComparisonStats, TooltipContext) == 0x000010, "Member 'FortTooltipUIContext_GetComparisonStats::TooltipContext' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetComparisonStats, ReturnValue) == 0x000018, "Member 'FortTooltipUIContext_GetComparisonStats::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTooltipUIContext.GetDescription
// 0x0028 (0x0028 - 0x0000)
struct FortTooltipUIContext_GetDescription final
{
public:
	const class UObject*                          Object;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFortTooltipContext*              TooltipContext;                                    // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FText>                           OutDescription;                                    // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortTooltipUIContext_GetDescription) == 0x000008, "Wrong alignment on FortTooltipUIContext_GetDescription");
static_assert(sizeof(FortTooltipUIContext_GetDescription) == 0x000028, "Wrong size on FortTooltipUIContext_GetDescription");
static_assert(offsetof(FortTooltipUIContext_GetDescription, Object) == 0x000000, "Member 'FortTooltipUIContext_GetDescription::Object' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetDescription, TooltipContext) == 0x000008, "Member 'FortTooltipUIContext_GetDescription::TooltipContext' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetDescription, OutDescription) == 0x000010, "Member 'FortTooltipUIContext_GetDescription::OutDescription' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetDescription, ReturnValue) == 0x000020, "Member 'FortTooltipUIContext_GetDescription::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTooltipUIContext.GetTooltipAttributes
// 0x0018 (0x0018 - 0x0000)
struct FortTooltipUIContext_GetTooltipAttributes final
{
public:
	const class UObject*                          Object;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayAttribute>             ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTooltipUIContext_GetTooltipAttributes) == 0x000008, "Wrong alignment on FortTooltipUIContext_GetTooltipAttributes");
static_assert(sizeof(FortTooltipUIContext_GetTooltipAttributes) == 0x000018, "Wrong size on FortTooltipUIContext_GetTooltipAttributes");
static_assert(offsetof(FortTooltipUIContext_GetTooltipAttributes, Object) == 0x000000, "Member 'FortTooltipUIContext_GetTooltipAttributes::Object' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetTooltipAttributes, ReturnValue) == 0x000008, "Member 'FortTooltipUIContext_GetTooltipAttributes::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTooltipUIContext.GetTooltipStat
// 0x0090 (0x0090 - 0x0000)
struct FortTooltipUIContext_GetTooltipStat final
{
public:
	const class UObject*                          Object;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTooltipContext*                    TooltipContext;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           Token;                                             // 0x0010(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortDisplayAttribute                  OutDisplayAttribute;                               // 0x0018(0x0070)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortTooltipUIContext_GetTooltipStat) == 0x000008, "Wrong alignment on FortTooltipUIContext_GetTooltipStat");
static_assert(sizeof(FortTooltipUIContext_GetTooltipStat) == 0x000090, "Wrong size on FortTooltipUIContext_GetTooltipStat");
static_assert(offsetof(FortTooltipUIContext_GetTooltipStat, Object) == 0x000000, "Member 'FortTooltipUIContext_GetTooltipStat::Object' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetTooltipStat, TooltipContext) == 0x000008, "Member 'FortTooltipUIContext_GetTooltipStat::TooltipContext' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetTooltipStat, Token) == 0x000010, "Member 'FortTooltipUIContext_GetTooltipStat::Token' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetTooltipStat, OutDisplayAttribute) == 0x000018, "Member 'FortTooltipUIContext_GetTooltipStat::OutDisplayAttribute' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetTooltipStat, ReturnValue) == 0x000088, "Member 'FortTooltipUIContext_GetTooltipStat::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTooltipUIContext.GetTooltipStats
// 0x0020 (0x0020 - 0x0000)
struct FortTooltipUIContext_GetTooltipStats final
{
public:
	const class UObject*                          Object;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UFortTooltipContext*              TooltipContext;                                    // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortDisplayAttribute>          ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTooltipUIContext_GetTooltipStats) == 0x000008, "Wrong alignment on FortTooltipUIContext_GetTooltipStats");
static_assert(sizeof(FortTooltipUIContext_GetTooltipStats) == 0x000020, "Wrong size on FortTooltipUIContext_GetTooltipStats");
static_assert(offsetof(FortTooltipUIContext_GetTooltipStats, Object) == 0x000000, "Member 'FortTooltipUIContext_GetTooltipStats::Object' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetTooltipStats, TooltipContext) == 0x000008, "Member 'FortTooltipUIContext_GetTooltipStats::TooltipContext' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetTooltipStats, ReturnValue) == 0x000010, "Member 'FortTooltipUIContext_GetTooltipStats::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTooltipUIContext.GetUpgradeStats
// 0x0020 (0x0020 - 0x0000)
struct FortTooltipUIContext_GetUpgradeStats final
{
public:
	const class UObject*                          Object;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortTooltipContext*                    TooltipContext;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFortDisplayAttribute>          ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTooltipUIContext_GetUpgradeStats) == 0x000008, "Wrong alignment on FortTooltipUIContext_GetUpgradeStats");
static_assert(sizeof(FortTooltipUIContext_GetUpgradeStats) == 0x000020, "Wrong size on FortTooltipUIContext_GetUpgradeStats");
static_assert(offsetof(FortTooltipUIContext_GetUpgradeStats, Object) == 0x000000, "Member 'FortTooltipUIContext_GetUpgradeStats::Object' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetUpgradeStats, TooltipContext) == 0x000008, "Member 'FortTooltipUIContext_GetUpgradeStats::TooltipContext' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetUpgradeStats, ReturnValue) == 0x000010, "Member 'FortTooltipUIContext_GetUpgradeStats::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTooltipUIContext.GetDisplayNameAndMultiBrushForTag
// 0x02F8 (0x02F8 - 0x0000)
struct FortTooltipUIContext_GetDisplayNameAndMultiBrushForTag final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   OutDisplayName;                                    // 0x0008(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                    OutBrush;                                          // 0x0020(0x02D0)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x02F0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortTooltipUIContext_GetDisplayNameAndMultiBrushForTag) == 0x000008, "Wrong alignment on FortTooltipUIContext_GetDisplayNameAndMultiBrushForTag");
static_assert(sizeof(FortTooltipUIContext_GetDisplayNameAndMultiBrushForTag) == 0x0002F8, "Wrong size on FortTooltipUIContext_GetDisplayNameAndMultiBrushForTag");
static_assert(offsetof(FortTooltipUIContext_GetDisplayNameAndMultiBrushForTag, Tag) == 0x000000, "Member 'FortTooltipUIContext_GetDisplayNameAndMultiBrushForTag::Tag' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetDisplayNameAndMultiBrushForTag, OutDisplayName) == 0x000008, "Member 'FortTooltipUIContext_GetDisplayNameAndMultiBrushForTag::OutDisplayName' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetDisplayNameAndMultiBrushForTag, OutBrush) == 0x000020, "Member 'FortTooltipUIContext_GetDisplayNameAndMultiBrushForTag::OutBrush' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetDisplayNameAndMultiBrushForTag, ReturnValue) == 0x0002F0, "Member 'FortTooltipUIContext_GetDisplayNameAndMultiBrushForTag::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTooltipUIContext.GetUIDataForTag
// 0x0318 (0x0318 - 0x0000)
struct FortTooltipUIContext_GetUIDataForTag final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortTagUIData                         OutData;                                           // 0x0008(0x0308)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0310(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortTooltipUIContext_GetUIDataForTag) == 0x000008, "Wrong alignment on FortTooltipUIContext_GetUIDataForTag");
static_assert(sizeof(FortTooltipUIContext_GetUIDataForTag) == 0x000318, "Wrong size on FortTooltipUIContext_GetUIDataForTag");
static_assert(offsetof(FortTooltipUIContext_GetUIDataForTag, Tag) == 0x000000, "Member 'FortTooltipUIContext_GetUIDataForTag::Tag' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetUIDataForTag, OutData) == 0x000008, "Member 'FortTooltipUIContext_GetUIDataForTag::OutData' has a wrong offset!");
static_assert(offsetof(FortTooltipUIContext_GetUIDataForTag, ReturnValue) == 0x000310, "Member 'FortTooltipUIContext_GetUIDataForTag::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTransformKeyPicker.RebuildTransformKeys
// 0x0010 (0x0010 - 0x0000)
struct FortTransformKeyPicker_RebuildTransformKeys final
{
public:
	TArray<class UObject*>                        InDataProvider;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTransformKeyPicker_RebuildTransformKeys) == 0x000008, "Wrong alignment on FortTransformKeyPicker_RebuildTransformKeys");
static_assert(sizeof(FortTransformKeyPicker_RebuildTransformKeys) == 0x000010, "Wrong size on FortTransformKeyPicker_RebuildTransformKeys");
static_assert(offsetof(FortTransformKeyPicker_RebuildTransformKeys, InDataProvider) == 0x000000, "Member 'FortTransformKeyPicker_RebuildTransformKeys::InDataProvider' has a wrong offset!");

// Function FortniteUI.FortTransformSlotItemPicker.RebuildSlottableItems
// 0x0028 (0x0028 - 0x0000)
struct FortTransformSlotItemPicker_RebuildSlottableItems final
{
public:
	TArray<EFortInventoryFilter>                  ItemFilters;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	EFortItemType                                 ItemType;                                          // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortItem*>                      ItemsToIgnore;                                     // 0x0018(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTransformSlotItemPicker_RebuildSlottableItems) == 0x000008, "Wrong alignment on FortTransformSlotItemPicker_RebuildSlottableItems");
static_assert(sizeof(FortTransformSlotItemPicker_RebuildSlottableItems) == 0x000028, "Wrong size on FortTransformSlotItemPicker_RebuildSlottableItems");
static_assert(offsetof(FortTransformSlotItemPicker_RebuildSlottableItems, ItemFilters) == 0x000000, "Member 'FortTransformSlotItemPicker_RebuildSlottableItems::ItemFilters' has a wrong offset!");
static_assert(offsetof(FortTransformSlotItemPicker_RebuildSlottableItems, ItemType) == 0x000010, "Member 'FortTransformSlotItemPicker_RebuildSlottableItems::ItemType' has a wrong offset!");
static_assert(offsetof(FortTransformSlotItemPicker_RebuildSlottableItems, ItemsToIgnore) == 0x000018, "Member 'FortTransformSlotItemPicker_RebuildSlottableItems::ItemsToIgnore' has a wrong offset!");

// Function FortniteUI.SeasonPassPageWidget.ContainsLevel
// 0x0008 (0x0008 - 0x0000)
struct SeasonPassPageWidget_ContainsLevel final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SeasonPassPageWidget_ContainsLevel) == 0x000004, "Wrong alignment on SeasonPassPageWidget_ContainsLevel");
static_assert(sizeof(SeasonPassPageWidget_ContainsLevel) == 0x000008, "Wrong size on SeasonPassPageWidget_ContainsLevel");
static_assert(offsetof(SeasonPassPageWidget_ContainsLevel, Level) == 0x000000, "Member 'SeasonPassPageWidget_ContainsLevel::Level' has a wrong offset!");
static_assert(offsetof(SeasonPassPageWidget_ContainsLevel, ReturnValue) == 0x000004, "Member 'SeasonPassPageWidget_ContainsLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.SeasonPassPageWidget.GetCurrentSeasonNumber
// 0x0004 (0x0004 - 0x0000)
struct SeasonPassPageWidget_GetCurrentSeasonNumber final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SeasonPassPageWidget_GetCurrentSeasonNumber) == 0x000004, "Wrong alignment on SeasonPassPageWidget_GetCurrentSeasonNumber");
static_assert(sizeof(SeasonPassPageWidget_GetCurrentSeasonNumber) == 0x000004, "Wrong size on SeasonPassPageWidget_GetCurrentSeasonNumber");
static_assert(offsetof(SeasonPassPageWidget_GetCurrentSeasonNumber, ReturnValue) == 0x000000, "Member 'SeasonPassPageWidget_GetCurrentSeasonNumber::ReturnValue' has a wrong offset!");

// Function FortniteUI.SeasonPassPageWidget.OwnsSeasonPass
// 0x0001 (0x0001 - 0x0000)
struct SeasonPassPageWidget_OwnsSeasonPass final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SeasonPassPageWidget_OwnsSeasonPass) == 0x000001, "Wrong alignment on SeasonPassPageWidget_OwnsSeasonPass");
static_assert(sizeof(SeasonPassPageWidget_OwnsSeasonPass) == 0x000001, "Wrong size on SeasonPassPageWidget_OwnsSeasonPass");
static_assert(offsetof(SeasonPassPageWidget_OwnsSeasonPass, ReturnValue) == 0x000000, "Member 'SeasonPassPageWidget_OwnsSeasonPass::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTrapDefenderItemPicker.HandleSelectionCommittedBP
// 0x0008 (0x0008 - 0x0000)
struct FortTrapDefenderItemPicker_HandleSelectionCommittedBP final
{
public:
	class UFortItem*                              CommittedItem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTrapDefenderItemPicker_HandleSelectionCommittedBP) == 0x000008, "Wrong alignment on FortTrapDefenderItemPicker_HandleSelectionCommittedBP");
static_assert(sizeof(FortTrapDefenderItemPicker_HandleSelectionCommittedBP) == 0x000008, "Wrong size on FortTrapDefenderItemPicker_HandleSelectionCommittedBP");
static_assert(offsetof(FortTrapDefenderItemPicker_HandleSelectionCommittedBP, CommittedItem) == 0x000000, "Member 'FortTrapDefenderItemPicker_HandleSelectionCommittedBP::CommittedItem' has a wrong offset!");

// Function FortniteUI.FortTutorialContext.DisableTutorialCallout
// 0x0008 (0x0008 - 0x0000)
struct FortTutorialContext_DisableTutorialCallout final
{
public:
	class FName                                   WidgetName;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTutorialContext_DisableTutorialCallout) == 0x000004, "Wrong alignment on FortTutorialContext_DisableTutorialCallout");
static_assert(sizeof(FortTutorialContext_DisableTutorialCallout) == 0x000008, "Wrong size on FortTutorialContext_DisableTutorialCallout");
static_assert(offsetof(FortTutorialContext_DisableTutorialCallout, WidgetName) == 0x000000, "Member 'FortTutorialContext_DisableTutorialCallout::WidgetName' has a wrong offset!");

// Function FortniteUI.FortTutorialContext.EnableTutorialCallout
// 0x0008 (0x0008 - 0x0000)
struct FortTutorialContext_EnableTutorialCallout final
{
public:
	class FName                                   WidgetName;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTutorialContext_EnableTutorialCallout) == 0x000004, "Wrong alignment on FortTutorialContext_EnableTutorialCallout");
static_assert(sizeof(FortTutorialContext_EnableTutorialCallout) == 0x000008, "Wrong size on FortTutorialContext_EnableTutorialCallout");
static_assert(offsetof(FortTutorialContext_EnableTutorialCallout, WidgetName) == 0x000000, "Member 'FortTutorialContext_EnableTutorialCallout::WidgetName' has a wrong offset!");

// Function FortniteUI.FortTutorialContext.GetHiddenTutorialCallouts
// 0x0010 (0x0010 - 0x0000)
struct FortTutorialContext_GetHiddenTutorialCallouts final
{
public:
	TArray<class FName>                           WidgetNames;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTutorialContext_GetHiddenTutorialCallouts) == 0x000008, "Wrong alignment on FortTutorialContext_GetHiddenTutorialCallouts");
static_assert(sizeof(FortTutorialContext_GetHiddenTutorialCallouts) == 0x000010, "Wrong size on FortTutorialContext_GetHiddenTutorialCallouts");
static_assert(offsetof(FortTutorialContext_GetHiddenTutorialCallouts, WidgetNames) == 0x000000, "Member 'FortTutorialContext_GetHiddenTutorialCallouts::WidgetNames' has a wrong offset!");

// Function FortniteUI.FortTutorialContext.GetTutorialCallouts
// 0x0010 (0x0010 - 0x0000)
struct FortTutorialContext_GetTutorialCallouts final
{
public:
	TArray<class FName>                           WidgetNames;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTutorialContext_GetTutorialCallouts) == 0x000008, "Wrong alignment on FortTutorialContext_GetTutorialCallouts");
static_assert(sizeof(FortTutorialContext_GetTutorialCallouts) == 0x000010, "Wrong size on FortTutorialContext_GetTutorialCallouts");
static_assert(offsetof(FortTutorialContext_GetTutorialCallouts, WidgetNames) == 0x000000, "Member 'FortTutorialContext_GetTutorialCallouts::WidgetNames' has a wrong offset!");

// Function FortniteUI.FortTutorialContext.HideTutorialCallout
// 0x0008 (0x0008 - 0x0000)
struct FortTutorialContext_HideTutorialCallout final
{
public:
	class FName                                   WidgetName;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTutorialContext_HideTutorialCallout) == 0x000004, "Wrong alignment on FortTutorialContext_HideTutorialCallout");
static_assert(sizeof(FortTutorialContext_HideTutorialCallout) == 0x000008, "Wrong size on FortTutorialContext_HideTutorialCallout");
static_assert(offsetof(FortTutorialContext_HideTutorialCallout, WidgetName) == 0x000000, "Member 'FortTutorialContext_HideTutorialCallout::WidgetName' has a wrong offset!");

// Function FortniteUI.FortTutorialContext.OnNewAnnouncementStartedOnClient
// 0x0008 (0x0008 - 0x0000)
struct FortTutorialContext_OnNewAnnouncementStartedOnClient final
{
public:
	class AFortClientAnnouncement*                NewAnnouncement;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTutorialContext_OnNewAnnouncementStartedOnClient) == 0x000008, "Wrong alignment on FortTutorialContext_OnNewAnnouncementStartedOnClient");
static_assert(sizeof(FortTutorialContext_OnNewAnnouncementStartedOnClient) == 0x000008, "Wrong size on FortTutorialContext_OnNewAnnouncementStartedOnClient");
static_assert(offsetof(FortTutorialContext_OnNewAnnouncementStartedOnClient, NewAnnouncement) == 0x000000, "Member 'FortTutorialContext_OnNewAnnouncementStartedOnClient::NewAnnouncement' has a wrong offset!");

// Function FortniteUI.FortTutorialContext.UnhideTutorialCallout
// 0x0008 (0x0008 - 0x0000)
struct FortTutorialContext_UnhideTutorialCallout final
{
public:
	class FName                                   WidgetName;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTutorialContext_UnhideTutorialCallout) == 0x000004, "Wrong alignment on FortTutorialContext_UnhideTutorialCallout");
static_assert(sizeof(FortTutorialContext_UnhideTutorialCallout) == 0x000008, "Wrong size on FortTutorialContext_UnhideTutorialCallout");
static_assert(offsetof(FortTutorialContext_UnhideTutorialCallout, WidgetName) == 0x000000, "Member 'FortTutorialContext_UnhideTutorialCallout::WidgetName' has a wrong offset!");

// Function FortniteUI.FortTutorialContext.UpdateTutorialAnnouncement
// 0x0130 (0x0130 - 0x0000)
struct FortTutorialContext_UpdateTutorialAnnouncement final
{
public:
	struct FFortClientAnnouncementData_Tutorial   AnnouncementData;                                  // 0x0000(0x0128)(Parm, NativeAccessSpecifierPublic)
	bool                                          bShow;                                             // 0x0128(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortTutorialContext_UpdateTutorialAnnouncement) == 0x000008, "Wrong alignment on FortTutorialContext_UpdateTutorialAnnouncement");
static_assert(sizeof(FortTutorialContext_UpdateTutorialAnnouncement) == 0x000130, "Wrong size on FortTutorialContext_UpdateTutorialAnnouncement");
static_assert(offsetof(FortTutorialContext_UpdateTutorialAnnouncement, AnnouncementData) == 0x000000, "Member 'FortTutorialContext_UpdateTutorialAnnouncement::AnnouncementData' has a wrong offset!");
static_assert(offsetof(FortTutorialContext_UpdateTutorialAnnouncement, bShow) == 0x000128, "Member 'FortTutorialContext_UpdateTutorialAnnouncement::bShow' has a wrong offset!");

// Function FortniteUI.FortTutorialContext.ShouldPromptToSkipTutorial
// 0x0001 (0x0001 - 0x0000)
struct FortTutorialContext_ShouldPromptToSkipTutorial final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTutorialContext_ShouldPromptToSkipTutorial) == 0x000001, "Wrong alignment on FortTutorialContext_ShouldPromptToSkipTutorial");
static_assert(sizeof(FortTutorialContext_ShouldPromptToSkipTutorial) == 0x000001, "Wrong size on FortTutorialContext_ShouldPromptToSkipTutorial");
static_assert(offsetof(FortTutorialContext_ShouldPromptToSkipTutorial, ReturnValue) == 0x000000, "Member 'FortTutorialContext_ShouldPromptToSkipTutorial::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTwitchLogin.GetAccountName
// 0x0010 (0x0010 - 0x0000)
struct FortTwitchLogin_GetAccountName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTwitchLogin_GetAccountName) == 0x000008, "Wrong alignment on FortTwitchLogin_GetAccountName");
static_assert(sizeof(FortTwitchLogin_GetAccountName) == 0x000010, "Wrong size on FortTwitchLogin_GetAccountName");
static_assert(offsetof(FortTwitchLogin_GetAccountName, ReturnValue) == 0x000000, "Member 'FortTwitchLogin_GetAccountName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTwitchLogin.GetLinkedTwitchAccountName
// 0x0010 (0x0010 - 0x0000)
struct FortTwitchLogin_GetLinkedTwitchAccountName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTwitchLogin_GetLinkedTwitchAccountName) == 0x000008, "Wrong alignment on FortTwitchLogin_GetLinkedTwitchAccountName");
static_assert(sizeof(FortTwitchLogin_GetLinkedTwitchAccountName) == 0x000010, "Wrong size on FortTwitchLogin_GetLinkedTwitchAccountName");
static_assert(offsetof(FortTwitchLogin_GetLinkedTwitchAccountName, ReturnValue) == 0x000000, "Member 'FortTwitchLogin_GetLinkedTwitchAccountName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTwitchLogin.IsLoggedIn
// 0x0001 (0x0001 - 0x0000)
struct FortTwitchLogin_IsLoggedIn final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTwitchLogin_IsLoggedIn) == 0x000001, "Wrong alignment on FortTwitchLogin_IsLoggedIn");
static_assert(sizeof(FortTwitchLogin_IsLoggedIn) == 0x000001, "Wrong size on FortTwitchLogin_IsLoggedIn");
static_assert(offsetof(FortTwitchLogin_IsLoggedIn, ReturnValue) == 0x000000, "Member 'FortTwitchLogin_IsLoggedIn::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortTwitchLogin.OnLinkedTwitchAccountChanged
// 0x0010 (0x0010 - 0x0000)
struct FortTwitchLogin_OnLinkedTwitchAccountChanged final
{
public:
	class FString                                 AccountName;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTwitchLogin_OnLinkedTwitchAccountChanged) == 0x000008, "Wrong alignment on FortTwitchLogin_OnLinkedTwitchAccountChanged");
static_assert(sizeof(FortTwitchLogin_OnLinkedTwitchAccountChanged) == 0x000010, "Wrong size on FortTwitchLogin_OnLinkedTwitchAccountChanged");
static_assert(offsetof(FortTwitchLogin_OnLinkedTwitchAccountChanged, AccountName) == 0x000000, "Member 'FortTwitchLogin_OnLinkedTwitchAccountChanged::AccountName' has a wrong offset!");

// Function FortniteUI.FortTwitchLogin.OnLoginFlowModalCreated
// 0x0008 (0x0008 - 0x0000)
struct FortTwitchLogin_OnLoginFlowModalCreated final
{
public:
	class UFortTwitchLoginModalWidget*            Modal;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTwitchLogin_OnLoginFlowModalCreated) == 0x000008, "Wrong alignment on FortTwitchLogin_OnLoginFlowModalCreated");
static_assert(sizeof(FortTwitchLogin_OnLoginFlowModalCreated) == 0x000008, "Wrong size on FortTwitchLogin_OnLoginFlowModalCreated");
static_assert(offsetof(FortTwitchLogin_OnLoginFlowModalCreated, Modal) == 0x000000, "Member 'FortTwitchLogin_OnLoginFlowModalCreated::Modal' has a wrong offset!");

// Function FortniteUI.FortTwitchLogin.OnLoginFlowModalDismissed
// 0x0008 (0x0008 - 0x0000)
struct FortTwitchLogin_OnLoginFlowModalDismissed final
{
public:
	class UFortTwitchLoginModalWidget*            Modal;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTwitchLogin_OnLoginFlowModalDismissed) == 0x000008, "Wrong alignment on FortTwitchLogin_OnLoginFlowModalDismissed");
static_assert(sizeof(FortTwitchLogin_OnLoginFlowModalDismissed) == 0x000008, "Wrong size on FortTwitchLogin_OnLoginFlowModalDismissed");
static_assert(offsetof(FortTwitchLogin_OnLoginFlowModalDismissed, Modal) == 0x000000, "Member 'FortTwitchLogin_OnLoginFlowModalDismissed::Modal' has a wrong offset!");

// Function FortniteUI.FortTwitchLogin.OnLoginStatusChanged
// 0x0018 (0x0018 - 0x0000)
struct FortTwitchLogin_OnLoginStatusChanged final
{
public:
	bool                                          bLoggedIn;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AccountName;                                       // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTwitchLogin_OnLoginStatusChanged) == 0x000008, "Wrong alignment on FortTwitchLogin_OnLoginStatusChanged");
static_assert(sizeof(FortTwitchLogin_OnLoginStatusChanged) == 0x000018, "Wrong size on FortTwitchLogin_OnLoginStatusChanged");
static_assert(offsetof(FortTwitchLogin_OnLoginStatusChanged, bLoggedIn) == 0x000000, "Member 'FortTwitchLogin_OnLoginStatusChanged::bLoggedIn' has a wrong offset!");
static_assert(offsetof(FortTwitchLogin_OnLoginStatusChanged, AccountName) == 0x000008, "Member 'FortTwitchLogin_OnLoginStatusChanged::AccountName' has a wrong offset!");

// Function FortniteUI.FortTwitchLogin.OnShowLoginError
// 0x0030 (0x0030 - 0x0000)
struct FortTwitchLogin_OnShowLoginError final
{
public:
	class FText                                   ErrorTitle;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   ErrorMessage;                                      // 0x0018(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortTwitchLogin_OnShowLoginError) == 0x000008, "Wrong alignment on FortTwitchLogin_OnShowLoginError");
static_assert(sizeof(FortTwitchLogin_OnShowLoginError) == 0x000030, "Wrong size on FortTwitchLogin_OnShowLoginError");
static_assert(offsetof(FortTwitchLogin_OnShowLoginError, ErrorTitle) == 0x000000, "Member 'FortTwitchLogin_OnShowLoginError::ErrorTitle' has a wrong offset!");
static_assert(offsetof(FortTwitchLogin_OnShowLoginError, ErrorMessage) == 0x000018, "Member 'FortTwitchLogin_OnShowLoginError::ErrorMessage' has a wrong offset!");

// Function FortniteUI.FortUIBlueprintFunctionLibrary.GetItemDefinitionSmallPreviewImageBrush
// 0x0088 (0x0088 - 0x0000)
struct FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageBrush final
{
public:
	const class UFortItemDefinition*              ItemDefinition;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortBrushSize                                BrushSize;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            ReturnValue;                                       // 0x0010(0x0078)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageBrush) == 0x000008, "Wrong alignment on FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageBrush");
static_assert(sizeof(FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageBrush) == 0x000088, "Wrong size on FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageBrush");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageBrush, ItemDefinition) == 0x000000, "Member 'FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageBrush::ItemDefinition' has a wrong offset!");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageBrush, BrushSize) == 0x000008, "Member 'FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageBrush::BrushSize' has a wrong offset!");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageBrush, ReturnValue) == 0x000010, "Member 'FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageBrush::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIBlueprintFunctionLibrary.GetItemDefinitionSmallPreviewImageMultiSizeBrush
// 0x02D8 (0x02D8 - 0x0000)
struct FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageMultiSizeBrush final
{
public:
	const class UFortItemDefinition*              ItemDefinition;                                    // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                    ReturnValue;                                       // 0x0008(0x02D0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageMultiSizeBrush) == 0x000008, "Wrong alignment on FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageMultiSizeBrush");
static_assert(sizeof(FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageMultiSizeBrush) == 0x0002D8, "Wrong size on FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageMultiSizeBrush");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageMultiSizeBrush, ItemDefinition) == 0x000000, "Member 'FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageMultiSizeBrush::ItemDefinition' has a wrong offset!");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageMultiSizeBrush, ReturnValue) == 0x000008, "Member 'FortUIBlueprintFunctionLibrary_GetItemDefinitionSmallPreviewImageMultiSizeBrush::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIBlueprintFunctionLibrary.GetItemSmallPreviewImageBrush
// 0x0088 (0x0088 - 0x0000)
struct FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageBrush final
{
public:
	const class UFortItem*                        Item;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortBrushSize                                BrushSize;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            ReturnValue;                                       // 0x0010(0x0078)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageBrush) == 0x000008, "Wrong alignment on FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageBrush");
static_assert(sizeof(FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageBrush) == 0x000088, "Wrong size on FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageBrush");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageBrush, Item) == 0x000000, "Member 'FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageBrush::Item' has a wrong offset!");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageBrush, BrushSize) == 0x000008, "Member 'FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageBrush::BrushSize' has a wrong offset!");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageBrush, ReturnValue) == 0x000010, "Member 'FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageBrush::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIBlueprintFunctionLibrary.GetItemSmallPreviewImageMultiSizeBrush
// 0x02D8 (0x02D8 - 0x0000)
struct FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageMultiSizeBrush final
{
public:
	const class UFortItem*                        Item;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortMultiSizeBrush                    ReturnValue;                                       // 0x0008(0x02D0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageMultiSizeBrush) == 0x000008, "Wrong alignment on FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageMultiSizeBrush");
static_assert(sizeof(FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageMultiSizeBrush) == 0x0002D8, "Wrong size on FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageMultiSizeBrush");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageMultiSizeBrush, Item) == 0x000000, "Member 'FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageMultiSizeBrush::Item' has a wrong offset!");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageMultiSizeBrush, ReturnValue) == 0x000008, "Member 'FortUIBlueprintFunctionLibrary_GetItemSmallPreviewImageMultiSizeBrush::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIBlueprintFunctionLibrary.GetMetaBoolOnOffer
// 0x00A8 (0x00A8 - 0x0000)
struct FortUIBlueprintFunctionLibrary_GetMetaBoolOnOffer final
{
public:
	struct FCardPackOffer                         Offer;                                             // 0x0000(0x0090)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0090(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDefaultValue;                                     // 0x00A0(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x00A1(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortUIBlueprintFunctionLibrary_GetMetaBoolOnOffer) == 0x000008, "Wrong alignment on FortUIBlueprintFunctionLibrary_GetMetaBoolOnOffer");
static_assert(sizeof(FortUIBlueprintFunctionLibrary_GetMetaBoolOnOffer) == 0x0000A8, "Wrong size on FortUIBlueprintFunctionLibrary_GetMetaBoolOnOffer");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetMetaBoolOnOffer, Offer) == 0x000000, "Member 'FortUIBlueprintFunctionLibrary_GetMetaBoolOnOffer::Offer' has a wrong offset!");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetMetaBoolOnOffer, Key) == 0x000090, "Member 'FortUIBlueprintFunctionLibrary_GetMetaBoolOnOffer::Key' has a wrong offset!");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetMetaBoolOnOffer, bDefaultValue) == 0x0000A0, "Member 'FortUIBlueprintFunctionLibrary_GetMetaBoolOnOffer::bDefaultValue' has a wrong offset!");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetMetaBoolOnOffer, ReturnValue) == 0x0000A1, "Member 'FortUIBlueprintFunctionLibrary_GetMetaBoolOnOffer::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIBlueprintFunctionLibrary.GetMetaIntOnOffer
// 0x00A8 (0x00A8 - 0x0000)
struct FortUIBlueprintFunctionLibrary_GetMetaIntOnOffer final
{
public:
	struct FCardPackOffer                         Offer;                                             // 0x0000(0x0090)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0090(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DefaultValue;                                      // 0x00A0(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x00A4(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIBlueprintFunctionLibrary_GetMetaIntOnOffer) == 0x000008, "Wrong alignment on FortUIBlueprintFunctionLibrary_GetMetaIntOnOffer");
static_assert(sizeof(FortUIBlueprintFunctionLibrary_GetMetaIntOnOffer) == 0x0000A8, "Wrong size on FortUIBlueprintFunctionLibrary_GetMetaIntOnOffer");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetMetaIntOnOffer, Offer) == 0x000000, "Member 'FortUIBlueprintFunctionLibrary_GetMetaIntOnOffer::Offer' has a wrong offset!");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetMetaIntOnOffer, Key) == 0x000090, "Member 'FortUIBlueprintFunctionLibrary_GetMetaIntOnOffer::Key' has a wrong offset!");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetMetaIntOnOffer, DefaultValue) == 0x0000A0, "Member 'FortUIBlueprintFunctionLibrary_GetMetaIntOnOffer::DefaultValue' has a wrong offset!");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetMetaIntOnOffer, ReturnValue) == 0x0000A4, "Member 'FortUIBlueprintFunctionLibrary_GetMetaIntOnOffer::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIBlueprintFunctionLibrary.GetMetaStringOnOffer
// 0x00B0 (0x00B0 - 0x0000)
struct FortUIBlueprintFunctionLibrary_GetMetaStringOnOffer final
{
public:
	struct FCardPackOffer                         Offer;                                             // 0x0000(0x0090)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0090(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x00A0(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIBlueprintFunctionLibrary_GetMetaStringOnOffer) == 0x000008, "Wrong alignment on FortUIBlueprintFunctionLibrary_GetMetaStringOnOffer");
static_assert(sizeof(FortUIBlueprintFunctionLibrary_GetMetaStringOnOffer) == 0x0000B0, "Wrong size on FortUIBlueprintFunctionLibrary_GetMetaStringOnOffer");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetMetaStringOnOffer, Offer) == 0x000000, "Member 'FortUIBlueprintFunctionLibrary_GetMetaStringOnOffer::Offer' has a wrong offset!");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetMetaStringOnOffer, Key) == 0x000090, "Member 'FortUIBlueprintFunctionLibrary_GetMetaStringOnOffer::Key' has a wrong offset!");
static_assert(offsetof(FortUIBlueprintFunctionLibrary_GetMetaStringOnOffer, ReturnValue) == 0x0000A0, "Member 'FortUIBlueprintFunctionLibrary_GetMetaStringOnOffer::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIDataConfiguration.GetDefenderSubtypeIconMultiSizeBrushByTag
// 0x0010 (0x0010 - 0x0000)
struct FortUIDataConfiguration_GetDefenderSubtypeIconMultiSizeBrushByTag final
{
public:
	struct FGameplayTag                           DefenderSubtypeTag;                                // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortMultiSizeBrushAsset*               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIDataConfiguration_GetDefenderSubtypeIconMultiSizeBrushByTag) == 0x000008, "Wrong alignment on FortUIDataConfiguration_GetDefenderSubtypeIconMultiSizeBrushByTag");
static_assert(sizeof(FortUIDataConfiguration_GetDefenderSubtypeIconMultiSizeBrushByTag) == 0x000010, "Wrong size on FortUIDataConfiguration_GetDefenderSubtypeIconMultiSizeBrushByTag");
static_assert(offsetof(FortUIDataConfiguration_GetDefenderSubtypeIconMultiSizeBrushByTag, DefenderSubtypeTag) == 0x000000, "Member 'FortUIDataConfiguration_GetDefenderSubtypeIconMultiSizeBrushByTag::DefenderSubtypeTag' has a wrong offset!");
static_assert(offsetof(FortUIDataConfiguration_GetDefenderSubtypeIconMultiSizeBrushByTag, ReturnValue) == 0x000008, "Member 'FortUIDataConfiguration_GetDefenderSubtypeIconMultiSizeBrushByTag::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIDataConfigurationContext.ArePartyFeaturesEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortUIDataConfigurationContext_ArePartyFeaturesEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIDataConfigurationContext_ArePartyFeaturesEnabled) == 0x000001, "Wrong alignment on FortUIDataConfigurationContext_ArePartyFeaturesEnabled");
static_assert(sizeof(FortUIDataConfigurationContext_ArePartyFeaturesEnabled) == 0x000001, "Wrong size on FortUIDataConfigurationContext_ArePartyFeaturesEnabled");
static_assert(offsetof(FortUIDataConfigurationContext_ArePartyFeaturesEnabled, ReturnValue) == 0x000000, "Member 'FortUIDataConfigurationContext_ArePartyFeaturesEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIDataConfigurationContext.AreSocialFeaturesEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortUIDataConfigurationContext_AreSocialFeaturesEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIDataConfigurationContext_AreSocialFeaturesEnabled) == 0x000001, "Wrong alignment on FortUIDataConfigurationContext_AreSocialFeaturesEnabled");
static_assert(sizeof(FortUIDataConfigurationContext_AreSocialFeaturesEnabled) == 0x000001, "Wrong size on FortUIDataConfigurationContext_AreSocialFeaturesEnabled");
static_assert(offsetof(FortUIDataConfigurationContext_AreSocialFeaturesEnabled, ReturnValue) == 0x000000, "Member 'FortUIDataConfigurationContext_AreSocialFeaturesEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIDataConfigurationContext.GetFrontEndFFSettings
// 0x0500 (0x0500 - 0x0000)
struct FortUIDataConfigurationContext_GetFrontEndFFSettings final
{
public:
	struct FPostProcessSettings                   ReturnValue;                                       // 0x0000(0x0500)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIDataConfigurationContext_GetFrontEndFFSettings) == 0x000010, "Wrong alignment on FortUIDataConfigurationContext_GetFrontEndFFSettings");
static_assert(sizeof(FortUIDataConfigurationContext_GetFrontEndFFSettings) == 0x000500, "Wrong size on FortUIDataConfigurationContext_GetFrontEndFFSettings");
static_assert(offsetof(FortUIDataConfigurationContext_GetFrontEndFFSettings, ReturnValue) == 0x000000, "Member 'FortUIDataConfigurationContext_GetFrontEndFFSettings::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIDataConfigurationContext.IsChatEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortUIDataConfigurationContext_IsChatEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIDataConfigurationContext_IsChatEnabled) == 0x000001, "Wrong alignment on FortUIDataConfigurationContext_IsChatEnabled");
static_assert(sizeof(FortUIDataConfigurationContext_IsChatEnabled) == 0x000001, "Wrong size on FortUIDataConfigurationContext_IsChatEnabled");
static_assert(offsetof(FortUIDataConfigurationContext_IsChatEnabled, ReturnValue) == 0x000000, "Member 'FortUIDataConfigurationContext_IsChatEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIDataConfigurationContext.IsLimitedToES2Features
// 0x0001 (0x0001 - 0x0000)
struct FortUIDataConfigurationContext_IsLimitedToES2Features final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIDataConfigurationContext_IsLimitedToES2Features) == 0x000001, "Wrong alignment on FortUIDataConfigurationContext_IsLimitedToES2Features");
static_assert(sizeof(FortUIDataConfigurationContext_IsLimitedToES2Features) == 0x000001, "Wrong size on FortUIDataConfigurationContext_IsLimitedToES2Features");
static_assert(offsetof(FortUIDataConfigurationContext_IsLimitedToES2Features, ReturnValue) == 0x000000, "Member 'FortUIDataConfigurationContext_IsLimitedToES2Features::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIDataConfigurationContext.IsQuestVOEnabled
// 0x0001 (0x0001 - 0x0000)
struct FortUIDataConfigurationContext_IsQuestVOEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIDataConfigurationContext_IsQuestVOEnabled) == 0x000001, "Wrong alignment on FortUIDataConfigurationContext_IsQuestVOEnabled");
static_assert(sizeof(FortUIDataConfigurationContext_IsQuestVOEnabled) == 0x000001, "Wrong size on FortUIDataConfigurationContext_IsQuestVOEnabled");
static_assert(offsetof(FortUIDataConfigurationContext_IsQuestVOEnabled, ReturnValue) == 0x000000, "Member 'FortUIDataConfigurationContext_IsQuestVOEnabled::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIDataConfigurationContext.UseSpecificPinataWeapon
// 0x0001 (0x0001 - 0x0000)
struct FortUIDataConfigurationContext_UseSpecificPinataWeapon final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIDataConfigurationContext_UseSpecificPinataWeapon) == 0x000001, "Wrong alignment on FortUIDataConfigurationContext_UseSpecificPinataWeapon");
static_assert(sizeof(FortUIDataConfigurationContext_UseSpecificPinataWeapon) == 0x000001, "Wrong size on FortUIDataConfigurationContext_UseSpecificPinataWeapon");
static_assert(offsetof(FortUIDataConfigurationContext_UseSpecificPinataWeapon, ReturnValue) == 0x000000, "Member 'FortUIDataConfigurationContext_UseSpecificPinataWeapon::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.CreateUIStateTrigger
// 0x0018 (0x0018 - 0x0000)
struct FortUIManagerWidget_CreateUIStateTrigger final
{
public:
	TSubclassOf<class UFortUIStateTrigger>        Param_Class;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                WorldContextObject;                                // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortUIStateTrigger*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_CreateUIStateTrigger) == 0x000008, "Wrong alignment on FortUIManagerWidget_CreateUIStateTrigger");
static_assert(sizeof(FortUIManagerWidget_CreateUIStateTrigger) == 0x000018, "Wrong size on FortUIManagerWidget_CreateUIStateTrigger");
static_assert(offsetof(FortUIManagerWidget_CreateUIStateTrigger, Param_Class) == 0x000000, "Member 'FortUIManagerWidget_CreateUIStateTrigger::Param_Class' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_CreateUIStateTrigger, WorldContextObject) == 0x000008, "Member 'FortUIManagerWidget_CreateUIStateTrigger::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_CreateUIStateTrigger, ReturnValue) == 0x000010, "Member 'FortUIManagerWidget_CreateUIStateTrigger::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.GetUIManagerWidget
// 0x0010 (0x0010 - 0x0000)
struct FortUIManagerWidget_GetUIManagerWidget final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortUIManagerWidget*                   ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_GetUIManagerWidget) == 0x000008, "Wrong alignment on FortUIManagerWidget_GetUIManagerWidget");
static_assert(sizeof(FortUIManagerWidget_GetUIManagerWidget) == 0x000010, "Wrong size on FortUIManagerWidget_GetUIManagerWidget");
static_assert(offsetof(FortUIManagerWidget_GetUIManagerWidget, WorldContextObject) == 0x000000, "Member 'FortUIManagerWidget_GetUIManagerWidget::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_GetUIManagerWidget, ReturnValue) == 0x000008, "Member 'FortUIManagerWidget_GetUIManagerWidget::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.KillConfirmationDialog
// 0x0008 (0x0008 - 0x0000)
struct FortUIManagerWidget_KillConfirmationDialog final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_KillConfirmationDialog) == 0x000008, "Wrong alignment on FortUIManagerWidget_KillConfirmationDialog");
static_assert(sizeof(FortUIManagerWidget_KillConfirmationDialog) == 0x000008, "Wrong size on FortUIManagerWidget_KillConfirmationDialog");
static_assert(offsetof(FortUIManagerWidget_KillConfirmationDialog, WorldContextObject) == 0x000000, "Member 'FortUIManagerWidget_KillConfirmationDialog::WorldContextObject' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.ShowErrorDialog
// 0x0048 (0x0048 - 0x0000)
struct FortUIManagerWidget_ShowErrorDialog final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   OperationDesc;                                     // 0x0008(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FText                                   DisplayMessage;                                    // 0x0020(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FString                                 ErrorCode;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_ShowErrorDialog) == 0x000008, "Wrong alignment on FortUIManagerWidget_ShowErrorDialog");
static_assert(sizeof(FortUIManagerWidget_ShowErrorDialog) == 0x000048, "Wrong size on FortUIManagerWidget_ShowErrorDialog");
static_assert(offsetof(FortUIManagerWidget_ShowErrorDialog, WorldContextObject) == 0x000000, "Member 'FortUIManagerWidget_ShowErrorDialog::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_ShowErrorDialog, OperationDesc) == 0x000008, "Member 'FortUIManagerWidget_ShowErrorDialog::OperationDesc' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_ShowErrorDialog, DisplayMessage) == 0x000020, "Member 'FortUIManagerWidget_ShowErrorDialog::DisplayMessage' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_ShowErrorDialog, ErrorCode) == 0x000038, "Member 'FortUIManagerWidget_ShowErrorDialog::ErrorCode' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.CreateNotification
// 0x0010 (0x0010 - 0x0000)
struct FortUIManagerWidget_CreateNotification final
{
public:
	TSubclassOf<class UFortUINotification>        UINotificationClass;                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortUINotification*                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_CreateNotification) == 0x000008, "Wrong alignment on FortUIManagerWidget_CreateNotification");
static_assert(sizeof(FortUIManagerWidget_CreateNotification) == 0x000010, "Wrong size on FortUIManagerWidget_CreateNotification");
static_assert(offsetof(FortUIManagerWidget_CreateNotification, UINotificationClass) == 0x000000, "Member 'FortUIManagerWidget_CreateNotification::UINotificationClass' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_CreateNotification, ReturnValue) == 0x000008, "Member 'FortUIManagerWidget_CreateNotification::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.DisplayErrorDialog
// 0x0080 (0x0080 - 0x0000)
struct FortUIManagerWidget_DisplayErrorDialog final
{
public:
	struct FFortErrorInfo                         Info;                                              // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_DisplayErrorDialog) == 0x000010, "Wrong alignment on FortUIManagerWidget_DisplayErrorDialog");
static_assert(sizeof(FortUIManagerWidget_DisplayErrorDialog) == 0x000080, "Wrong size on FortUIManagerWidget_DisplayErrorDialog");
static_assert(offsetof(FortUIManagerWidget_DisplayErrorDialog, Info) == 0x000000, "Member 'FortUIManagerWidget_DisplayErrorDialog::Info' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.DisplayStateContent
// 0x0001 (0x0001 - 0x0000)
struct FortUIManagerWidget_DisplayStateContent final
{
public:
	bool                                          bDisplay;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_DisplayStateContent) == 0x000001, "Wrong alignment on FortUIManagerWidget_DisplayStateContent");
static_assert(sizeof(FortUIManagerWidget_DisplayStateContent) == 0x000001, "Wrong size on FortUIManagerWidget_DisplayStateContent");
static_assert(offsetof(FortUIManagerWidget_DisplayStateContent, bDisplay) == 0x000000, "Member 'FortUIManagerWidget_DisplayStateContent::bDisplay' has a wrong offset!");

// DelegateFunction FortniteUI.FortUIManagerWidget.OnBeginSpokenDialog__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct FortUIManagerWidget_OnBeginSpokenDialog__DelegateSignature final
{
public:
	class UTexture2D*                             Image;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Title;                                             // 0x0008(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FText                                   Subtitle;                                          // 0x0020(0x0018)(Parm, NativeAccessSpecifierPublic)
	EFortAnnouncementDisplayPreference            DisplayPreference;                                 // 0x0038(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortUIManagerWidget_OnBeginSpokenDialog__DelegateSignature) == 0x000008, "Wrong alignment on FortUIManagerWidget_OnBeginSpokenDialog__DelegateSignature");
static_assert(sizeof(FortUIManagerWidget_OnBeginSpokenDialog__DelegateSignature) == 0x000040, "Wrong size on FortUIManagerWidget_OnBeginSpokenDialog__DelegateSignature");
static_assert(offsetof(FortUIManagerWidget_OnBeginSpokenDialog__DelegateSignature, Image) == 0x000000, "Member 'FortUIManagerWidget_OnBeginSpokenDialog__DelegateSignature::Image' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_OnBeginSpokenDialog__DelegateSignature, Title) == 0x000008, "Member 'FortUIManagerWidget_OnBeginSpokenDialog__DelegateSignature::Title' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_OnBeginSpokenDialog__DelegateSignature, Subtitle) == 0x000020, "Member 'FortUIManagerWidget_OnBeginSpokenDialog__DelegateSignature::Subtitle' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_OnBeginSpokenDialog__DelegateSignature, DisplayPreference) == 0x000038, "Member 'FortUIManagerWidget_OnBeginSpokenDialog__DelegateSignature::DisplayPreference' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.OnShowConfirmation
// 0x0150 (0x0150 - 0x0000)
struct FortUIManagerWidget_OnShowConfirmation final
{
public:
	struct FFortDialogDescription                 Description;                                       // 0x0000(0x0150)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_OnShowConfirmation) == 0x000010, "Wrong alignment on FortUIManagerWidget_OnShowConfirmation");
static_assert(sizeof(FortUIManagerWidget_OnShowConfirmation) == 0x000150, "Wrong size on FortUIManagerWidget_OnShowConfirmation");
static_assert(offsetof(FortUIManagerWidget_OnShowConfirmation, Description) == 0x000000, "Member 'FortUIManagerWidget_OnShowConfirmation::Description' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.OnShowConfirmation_NUI
// 0x0170 (0x0170 - 0x0000)
struct FortUIManagerWidget_OnShowConfirmation_NUI final
{
public:
	struct FFortDialogDescription_NUI             Description;                                       // 0x0000(0x0170)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_OnShowConfirmation_NUI) == 0x000010, "Wrong alignment on FortUIManagerWidget_OnShowConfirmation_NUI");
static_assert(sizeof(FortUIManagerWidget_OnShowConfirmation_NUI) == 0x000170, "Wrong size on FortUIManagerWidget_OnShowConfirmation_NUI");
static_assert(offsetof(FortUIManagerWidget_OnShowConfirmation_NUI, Description) == 0x000000, "Member 'FortUIManagerWidget_OnShowConfirmation_NUI::Description' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.QueueActionPanelIntoModalLayer
// 0x0010 (0x0010 - 0x0000)
struct FortUIManagerWidget_QueueActionPanelIntoModalLayer final
{
public:
	const class UFortActionHandlerPanel*          Panel;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          HorizontalAlignment;                               // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVerticalAlignment                            VerticalAlignment;                                 // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortUIManagerWidget_QueueActionPanelIntoModalLayer) == 0x000008, "Wrong alignment on FortUIManagerWidget_QueueActionPanelIntoModalLayer");
static_assert(sizeof(FortUIManagerWidget_QueueActionPanelIntoModalLayer) == 0x000010, "Wrong size on FortUIManagerWidget_QueueActionPanelIntoModalLayer");
static_assert(offsetof(FortUIManagerWidget_QueueActionPanelIntoModalLayer, Panel) == 0x000000, "Member 'FortUIManagerWidget_QueueActionPanelIntoModalLayer::Panel' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_QueueActionPanelIntoModalLayer, HorizontalAlignment) == 0x000008, "Member 'FortUIManagerWidget_QueueActionPanelIntoModalLayer::HorizontalAlignment' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_QueueActionPanelIntoModalLayer, VerticalAlignment) == 0x000009, "Member 'FortUIManagerWidget_QueueActionPanelIntoModalLayer::VerticalAlignment' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.QueueActivatablePanelIntoModalLayer
// 0x0008 (0x0008 - 0x0000)
struct FortUIManagerWidget_QueueActivatablePanelIntoModalLayer final
{
public:
	const class UCommonActivatablePanel*          Panel;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_QueueActivatablePanelIntoModalLayer) == 0x000008, "Wrong alignment on FortUIManagerWidget_QueueActivatablePanelIntoModalLayer");
static_assert(sizeof(FortUIManagerWidget_QueueActivatablePanelIntoModalLayer) == 0x000008, "Wrong size on FortUIManagerWidget_QueueActivatablePanelIntoModalLayer");
static_assert(offsetof(FortUIManagerWidget_QueueActivatablePanelIntoModalLayer, Panel) == 0x000000, "Member 'FortUIManagerWidget_QueueActivatablePanelIntoModalLayer::Panel' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.RegisterStateTrigger
// 0x0008 (0x0008 - 0x0000)
struct FortUIManagerWidget_RegisterStateTrigger final
{
public:
	class UFortUIStateTrigger*                    StateTrigger;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_RegisterStateTrigger) == 0x000008, "Wrong alignment on FortUIManagerWidget_RegisterStateTrigger");
static_assert(sizeof(FortUIManagerWidget_RegisterStateTrigger) == 0x000008, "Wrong size on FortUIManagerWidget_RegisterStateTrigger");
static_assert(offsetof(FortUIManagerWidget_RegisterStateTrigger, StateTrigger) == 0x000000, "Member 'FortUIManagerWidget_RegisterStateTrigger::StateTrigger' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.ReleaseNotification
// 0x0008 (0x0008 - 0x0000)
struct FortUIManagerWidget_ReleaseNotification final
{
public:
	class UFortUINotification*                    Notification;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_ReleaseNotification) == 0x000008, "Wrong alignment on FortUIManagerWidget_ReleaseNotification");
static_assert(sizeof(FortUIManagerWidget_ReleaseNotification) == 0x000008, "Wrong size on FortUIManagerWidget_ReleaseNotification");
static_assert(offsetof(FortUIManagerWidget_ReleaseNotification, Notification) == 0x000000, "Member 'FortUIManagerWidget_ReleaseNotification::Notification' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.SetStateContentDisplayed
// 0x0001 (0x0001 - 0x0000)
struct FortUIManagerWidget_SetStateContentDisplayed final
{
public:
	bool                                          bDisplay;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_SetStateContentDisplayed) == 0x000001, "Wrong alignment on FortUIManagerWidget_SetStateContentDisplayed");
static_assert(sizeof(FortUIManagerWidget_SetStateContentDisplayed) == 0x000001, "Wrong size on FortUIManagerWidget_SetStateContentDisplayed");
static_assert(offsetof(FortUIManagerWidget_SetStateContentDisplayed, bDisplay) == 0x000000, "Member 'FortUIManagerWidget_SetStateContentDisplayed::bDisplay' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.UnregisterStateTrigger
// 0x0008 (0x0008 - 0x0000)
struct FortUIManagerWidget_UnregisterStateTrigger final
{
public:
	class UFortUIStateTrigger*                    TriggerToRemove;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_UnregisterStateTrigger) == 0x000008, "Wrong alignment on FortUIManagerWidget_UnregisterStateTrigger");
static_assert(sizeof(FortUIManagerWidget_UnregisterStateTrigger) == 0x000008, "Wrong size on FortUIManagerWidget_UnregisterStateTrigger");
static_assert(offsetof(FortUIManagerWidget_UnregisterStateTrigger, TriggerToRemove) == 0x000000, "Member 'FortUIManagerWidget_UnregisterStateTrigger::TriggerToRemove' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.UpdateStateWidgetContent
// 0x0008 (0x0008 - 0x0000)
struct FortUIManagerWidget_UpdateStateWidgetContent final
{
public:
	class UFortUIStateWidget*                     StateWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_UpdateStateWidgetContent) == 0x000008, "Wrong alignment on FortUIManagerWidget_UpdateStateWidgetContent");
static_assert(sizeof(FortUIManagerWidget_UpdateStateWidgetContent) == 0x000008, "Wrong size on FortUIManagerWidget_UpdateStateWidgetContent");
static_assert(offsetof(FortUIManagerWidget_UpdateStateWidgetContent, StateWidget) == 0x000000, "Member 'FortUIManagerWidget_UpdateStateWidgetContent::StateWidget' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget._BPGetCurrentUIState
// 0x0001 (0x0001 - 0x0000)
struct FortUIManagerWidget__BPGetCurrentUIState final
{
public:
	EFortUIState                                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget__BPGetCurrentUIState) == 0x000001, "Wrong alignment on FortUIManagerWidget__BPGetCurrentUIState");
static_assert(sizeof(FortUIManagerWidget__BPGetCurrentUIState) == 0x000001, "Wrong size on FortUIManagerWidget__BPGetCurrentUIState");
static_assert(offsetof(FortUIManagerWidget__BPGetCurrentUIState, ReturnValue) == 0x000000, "Member 'FortUIManagerWidget__BPGetCurrentUIState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.GetCurrentUIStateWidget
// 0x0008 (0x0008 - 0x0000)
struct FortUIManagerWidget_GetCurrentUIStateWidget final
{
public:
	class UFortUIStateWidget*                     ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_GetCurrentUIStateWidget) == 0x000008, "Wrong alignment on FortUIManagerWidget_GetCurrentUIStateWidget");
static_assert(sizeof(FortUIManagerWidget_GetCurrentUIStateWidget) == 0x000008, "Wrong size on FortUIManagerWidget_GetCurrentUIStateWidget");
static_assert(offsetof(FortUIManagerWidget_GetCurrentUIStateWidget, ReturnValue) == 0x000000, "Member 'FortUIManagerWidget_GetCurrentUIStateWidget::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.GetNavigationManager
// 0x0008 (0x0008 - 0x0000)
struct FortUIManagerWidget_GetNavigationManager final
{
public:
	class UFortUINavigationManager*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_GetNavigationManager) == 0x000008, "Wrong alignment on FortUIManagerWidget_GetNavigationManager");
static_assert(sizeof(FortUIManagerWidget_GetNavigationManager) == 0x000008, "Wrong size on FortUIManagerWidget_GetNavigationManager");
static_assert(offsetof(FortUIManagerWidget_GetNavigationManager, ReturnValue) == 0x000000, "Member 'FortUIManagerWidget_GetNavigationManager::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget.IsStateContentDisplayed
// 0x0001 (0x0001 - 0x0000)
struct FortUIManagerWidget_IsStateContentDisplayed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_IsStateContentDisplayed) == 0x000001, "Wrong alignment on FortUIManagerWidget_IsStateContentDisplayed");
static_assert(sizeof(FortUIManagerWidget_IsStateContentDisplayed) == 0x000001, "Wrong size on FortUIManagerWidget_IsStateContentDisplayed");
static_assert(offsetof(FortUIManagerWidget_IsStateContentDisplayed, ReturnValue) == 0x000000, "Member 'FortUIManagerWidget_IsStateContentDisplayed::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.CreateUIStateTrigger
// 0x0018 (0x0018 - 0x0000)
struct FortUIManagerWidget_NUI_CreateUIStateTrigger final
{
public:
	TSubclassOf<class UFortUIStateTrigger>        Param_Class;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                WorldContextObject;                                // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortUIStateTrigger*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_CreateUIStateTrigger) == 0x000008, "Wrong alignment on FortUIManagerWidget_NUI_CreateUIStateTrigger");
static_assert(sizeof(FortUIManagerWidget_NUI_CreateUIStateTrigger) == 0x000018, "Wrong size on FortUIManagerWidget_NUI_CreateUIStateTrigger");
static_assert(offsetof(FortUIManagerWidget_NUI_CreateUIStateTrigger, Param_Class) == 0x000000, "Member 'FortUIManagerWidget_NUI_CreateUIStateTrigger::Param_Class' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_NUI_CreateUIStateTrigger, WorldContextObject) == 0x000008, "Member 'FortUIManagerWidget_NUI_CreateUIStateTrigger::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_NUI_CreateUIStateTrigger, ReturnValue) == 0x000010, "Member 'FortUIManagerWidget_NUI_CreateUIStateTrigger::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.GetUIManagerWidget
// 0x0010 (0x0010 - 0x0000)
struct FortUIManagerWidget_NUI_GetUIManagerWidget final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortUIManagerWidget_NUI*               ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_GetUIManagerWidget) == 0x000008, "Wrong alignment on FortUIManagerWidget_NUI_GetUIManagerWidget");
static_assert(sizeof(FortUIManagerWidget_NUI_GetUIManagerWidget) == 0x000010, "Wrong size on FortUIManagerWidget_NUI_GetUIManagerWidget");
static_assert(offsetof(FortUIManagerWidget_NUI_GetUIManagerWidget, WorldContextObject) == 0x000000, "Member 'FortUIManagerWidget_NUI_GetUIManagerWidget::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_NUI_GetUIManagerWidget, ReturnValue) == 0x000008, "Member 'FortUIManagerWidget_NUI_GetUIManagerWidget::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.GetUINavigationManager
// 0x0010 (0x0010 - 0x0000)
struct FortUIManagerWidget_NUI_GetUINavigationManager final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortUINavigationManager*               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_GetUINavigationManager) == 0x000008, "Wrong alignment on FortUIManagerWidget_NUI_GetUINavigationManager");
static_assert(sizeof(FortUIManagerWidget_NUI_GetUINavigationManager) == 0x000010, "Wrong size on FortUIManagerWidget_NUI_GetUINavigationManager");
static_assert(offsetof(FortUIManagerWidget_NUI_GetUINavigationManager, WorldContextObject) == 0x000000, "Member 'FortUIManagerWidget_NUI_GetUINavigationManager::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_NUI_GetUINavigationManager, ReturnValue) == 0x000008, "Member 'FortUIManagerWidget_NUI_GetUINavigationManager::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.GetUINotificationQueue
// 0x0018 (0x0018 - 0x0000)
struct FortUIManagerWidget_NUI_GetUINotificationQueue final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortNotificationQueueType                    QueueType;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUINotificationQueue*               ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_GetUINotificationQueue) == 0x000008, "Wrong alignment on FortUIManagerWidget_NUI_GetUINotificationQueue");
static_assert(sizeof(FortUIManagerWidget_NUI_GetUINotificationQueue) == 0x000018, "Wrong size on FortUIManagerWidget_NUI_GetUINotificationQueue");
static_assert(offsetof(FortUIManagerWidget_NUI_GetUINotificationQueue, WorldContextObject) == 0x000000, "Member 'FortUIManagerWidget_NUI_GetUINotificationQueue::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_NUI_GetUINotificationQueue, QueueType) == 0x000008, "Member 'FortUIManagerWidget_NUI_GetUINotificationQueue::QueueType' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_NUI_GetUINotificationQueue, ReturnValue) == 0x000010, "Member 'FortUIManagerWidget_NUI_GetUINotificationQueue::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.KillConfirmationDialog
// 0x0008 (0x0008 - 0x0000)
struct FortUIManagerWidget_NUI_KillConfirmationDialog final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_KillConfirmationDialog) == 0x000008, "Wrong alignment on FortUIManagerWidget_NUI_KillConfirmationDialog");
static_assert(sizeof(FortUIManagerWidget_NUI_KillConfirmationDialog) == 0x000008, "Wrong size on FortUIManagerWidget_NUI_KillConfirmationDialog");
static_assert(offsetof(FortUIManagerWidget_NUI_KillConfirmationDialog, WorldContextObject) == 0x000000, "Member 'FortUIManagerWidget_NUI_KillConfirmationDialog::WorldContextObject' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.ShowErrorDialog
// 0x0048 (0x0048 - 0x0000)
struct FortUIManagerWidget_NUI_ShowErrorDialog final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   OperationDesc;                                     // 0x0008(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FText                                   DisplayMessage;                                    // 0x0020(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FString                                 ErrorCode;                                         // 0x0038(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_ShowErrorDialog) == 0x000008, "Wrong alignment on FortUIManagerWidget_NUI_ShowErrorDialog");
static_assert(sizeof(FortUIManagerWidget_NUI_ShowErrorDialog) == 0x000048, "Wrong size on FortUIManagerWidget_NUI_ShowErrorDialog");
static_assert(offsetof(FortUIManagerWidget_NUI_ShowErrorDialog, WorldContextObject) == 0x000000, "Member 'FortUIManagerWidget_NUI_ShowErrorDialog::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_NUI_ShowErrorDialog, OperationDesc) == 0x000008, "Member 'FortUIManagerWidget_NUI_ShowErrorDialog::OperationDesc' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_NUI_ShowErrorDialog, DisplayMessage) == 0x000020, "Member 'FortUIManagerWidget_NUI_ShowErrorDialog::DisplayMessage' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_NUI_ShowErrorDialog, ErrorCode) == 0x000038, "Member 'FortUIManagerWidget_NUI_ShowErrorDialog::ErrorCode' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.CreateNotification
// 0x0010 (0x0010 - 0x0000)
struct FortUIManagerWidget_NUI_CreateNotification final
{
public:
	TSubclassOf<class UFortUINotification>        UINotificationClass;                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFortUINotification*                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_CreateNotification) == 0x000008, "Wrong alignment on FortUIManagerWidget_NUI_CreateNotification");
static_assert(sizeof(FortUIManagerWidget_NUI_CreateNotification) == 0x000010, "Wrong size on FortUIManagerWidget_NUI_CreateNotification");
static_assert(offsetof(FortUIManagerWidget_NUI_CreateNotification, UINotificationClass) == 0x000000, "Member 'FortUIManagerWidget_NUI_CreateNotification::UINotificationClass' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_NUI_CreateNotification, ReturnValue) == 0x000008, "Member 'FortUIManagerWidget_NUI_CreateNotification::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.DisplayErrorDialog
// 0x0080 (0x0080 - 0x0000)
struct FortUIManagerWidget_NUI_DisplayErrorDialog final
{
public:
	struct FFortErrorInfo                         Info;                                              // 0x0000(0x0080)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_DisplayErrorDialog) == 0x000010, "Wrong alignment on FortUIManagerWidget_NUI_DisplayErrorDialog");
static_assert(sizeof(FortUIManagerWidget_NUI_DisplayErrorDialog) == 0x000080, "Wrong size on FortUIManagerWidget_NUI_DisplayErrorDialog");
static_assert(offsetof(FortUIManagerWidget_NUI_DisplayErrorDialog, Info) == 0x000000, "Member 'FortUIManagerWidget_NUI_DisplayErrorDialog::Info' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.DisplayStateContent
// 0x0001 (0x0001 - 0x0000)
struct FortUIManagerWidget_NUI_DisplayStateContent final
{
public:
	bool                                          bDisplay;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_DisplayStateContent) == 0x000001, "Wrong alignment on FortUIManagerWidget_NUI_DisplayStateContent");
static_assert(sizeof(FortUIManagerWidget_NUI_DisplayStateContent) == 0x000001, "Wrong size on FortUIManagerWidget_NUI_DisplayStateContent");
static_assert(offsetof(FortUIManagerWidget_NUI_DisplayStateContent, bDisplay) == 0x000000, "Member 'FortUIManagerWidget_NUI_DisplayStateContent::bDisplay' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.GetCachedWidget
// 0x0010 (0x0010 - 0x0000)
struct FortUIManagerWidget_NUI_GetCachedWidget final
{
public:
	class UClass*                                 InClass;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                            ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_GetCachedWidget) == 0x000008, "Wrong alignment on FortUIManagerWidget_NUI_GetCachedWidget");
static_assert(sizeof(FortUIManagerWidget_NUI_GetCachedWidget) == 0x000010, "Wrong size on FortUIManagerWidget_NUI_GetCachedWidget");
static_assert(offsetof(FortUIManagerWidget_NUI_GetCachedWidget, InClass) == 0x000000, "Member 'FortUIManagerWidget_NUI_GetCachedWidget::InClass' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_NUI_GetCachedWidget, ReturnValue) == 0x000008, "Member 'FortUIManagerWidget_NUI_GetCachedWidget::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.IsShowingModalsConfirmationsErrors
// 0x0001 (0x0001 - 0x0000)
struct FortUIManagerWidget_NUI_IsShowingModalsConfirmationsErrors final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_IsShowingModalsConfirmationsErrors) == 0x000001, "Wrong alignment on FortUIManagerWidget_NUI_IsShowingModalsConfirmationsErrors");
static_assert(sizeof(FortUIManagerWidget_NUI_IsShowingModalsConfirmationsErrors) == 0x000001, "Wrong size on FortUIManagerWidget_NUI_IsShowingModalsConfirmationsErrors");
static_assert(offsetof(FortUIManagerWidget_NUI_IsShowingModalsConfirmationsErrors, ReturnValue) == 0x000000, "Member 'FortUIManagerWidget_NUI_IsShowingModalsConfirmationsErrors::ReturnValue' has a wrong offset!");

// DelegateFunction FortniteUI.FortUIManagerWidget_NUI.OnBeginSpokenDialog__DelegateSignature
// 0x0040 (0x0040 - 0x0000)
struct FortUIManagerWidget_NUI_OnBeginSpokenDialog__DelegateSignature final
{
public:
	class UTexture2D*                             Image;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Title;                                             // 0x0008(0x0018)(Parm, NativeAccessSpecifierPublic)
	class FText                                   Subtitle;                                          // 0x0020(0x0018)(Parm, NativeAccessSpecifierPublic)
	EFortAnnouncementDisplayPreference            DisplayPreference;                                 // 0x0038(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortUIManagerWidget_NUI_OnBeginSpokenDialog__DelegateSignature) == 0x000008, "Wrong alignment on FortUIManagerWidget_NUI_OnBeginSpokenDialog__DelegateSignature");
static_assert(sizeof(FortUIManagerWidget_NUI_OnBeginSpokenDialog__DelegateSignature) == 0x000040, "Wrong size on FortUIManagerWidget_NUI_OnBeginSpokenDialog__DelegateSignature");
static_assert(offsetof(FortUIManagerWidget_NUI_OnBeginSpokenDialog__DelegateSignature, Image) == 0x000000, "Member 'FortUIManagerWidget_NUI_OnBeginSpokenDialog__DelegateSignature::Image' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_NUI_OnBeginSpokenDialog__DelegateSignature, Title) == 0x000008, "Member 'FortUIManagerWidget_NUI_OnBeginSpokenDialog__DelegateSignature::Title' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_NUI_OnBeginSpokenDialog__DelegateSignature, Subtitle) == 0x000020, "Member 'FortUIManagerWidget_NUI_OnBeginSpokenDialog__DelegateSignature::Subtitle' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_NUI_OnBeginSpokenDialog__DelegateSignature, DisplayPreference) == 0x000038, "Member 'FortUIManagerWidget_NUI_OnBeginSpokenDialog__DelegateSignature::DisplayPreference' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.OnEndLatentWaitForConfirmationDialog
// 0x0004 (0x0004 - 0x0000)
struct FortUIManagerWidget_NUI_OnEndLatentWaitForConfirmationDialog final
{
public:
	struct FFortDialogExternalLatentActionHandle  WaitingDialogHandle;                               // 0x0000(0x0004)(Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_OnEndLatentWaitForConfirmationDialog) == 0x000004, "Wrong alignment on FortUIManagerWidget_NUI_OnEndLatentWaitForConfirmationDialog");
static_assert(sizeof(FortUIManagerWidget_NUI_OnEndLatentWaitForConfirmationDialog) == 0x000004, "Wrong size on FortUIManagerWidget_NUI_OnEndLatentWaitForConfirmationDialog");
static_assert(offsetof(FortUIManagerWidget_NUI_OnEndLatentWaitForConfirmationDialog, WaitingDialogHandle) == 0x000000, "Member 'FortUIManagerWidget_NUI_OnEndLatentWaitForConfirmationDialog::WaitingDialogHandle' has a wrong offset!");

// DelegateFunction FortniteUI.FortUIManagerWidget_NUI.OnShouldBlockSubtitlePortraitChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct FortUIManagerWidget_NUI_OnShouldBlockSubtitlePortraitChanged__DelegateSignature final
{
public:
	bool                                          bShouldBlockSubtitlePortrait;                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_OnShouldBlockSubtitlePortraitChanged__DelegateSignature) == 0x000001, "Wrong alignment on FortUIManagerWidget_NUI_OnShouldBlockSubtitlePortraitChanged__DelegateSignature");
static_assert(sizeof(FortUIManagerWidget_NUI_OnShouldBlockSubtitlePortraitChanged__DelegateSignature) == 0x000001, "Wrong size on FortUIManagerWidget_NUI_OnShouldBlockSubtitlePortraitChanged__DelegateSignature");
static_assert(offsetof(FortUIManagerWidget_NUI_OnShouldBlockSubtitlePortraitChanged__DelegateSignature, bShouldBlockSubtitlePortrait) == 0x000000, "Member 'FortUIManagerWidget_NUI_OnShouldBlockSubtitlePortraitChanged__DelegateSignature::bShouldBlockSubtitlePortrait' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.OnShowConfirmation
// 0x0150 (0x0150 - 0x0000)
struct FortUIManagerWidget_NUI_OnShowConfirmation final
{
public:
	struct FFortDialogDescription                 Description;                                       // 0x0000(0x0150)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_OnShowConfirmation) == 0x000010, "Wrong alignment on FortUIManagerWidget_NUI_OnShowConfirmation");
static_assert(sizeof(FortUIManagerWidget_NUI_OnShowConfirmation) == 0x000150, "Wrong size on FortUIManagerWidget_NUI_OnShowConfirmation");
static_assert(offsetof(FortUIManagerWidget_NUI_OnShowConfirmation, Description) == 0x000000, "Member 'FortUIManagerWidget_NUI_OnShowConfirmation::Description' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.OnShowConfirmation_NUI
// 0x0170 (0x0170 - 0x0000)
struct FortUIManagerWidget_NUI_OnShowConfirmation_NUI final
{
public:
	struct FFortDialogDescription_NUI             Description;                                       // 0x0000(0x0170)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_OnShowConfirmation_NUI) == 0x000010, "Wrong alignment on FortUIManagerWidget_NUI_OnShowConfirmation_NUI");
static_assert(sizeof(FortUIManagerWidget_NUI_OnShowConfirmation_NUI) == 0x000170, "Wrong size on FortUIManagerWidget_NUI_OnShowConfirmation_NUI");
static_assert(offsetof(FortUIManagerWidget_NUI_OnShowConfirmation_NUI, Description) == 0x000000, "Member 'FortUIManagerWidget_NUI_OnShowConfirmation_NUI::Description' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.PopActivatablePanelInModalLayer
// 0x0008 (0x0008 - 0x0000)
struct FortUIManagerWidget_NUI_PopActivatablePanelInModalLayer final
{
public:
	const class UCommonActivatablePanel*          Panel;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_PopActivatablePanelInModalLayer) == 0x000008, "Wrong alignment on FortUIManagerWidget_NUI_PopActivatablePanelInModalLayer");
static_assert(sizeof(FortUIManagerWidget_NUI_PopActivatablePanelInModalLayer) == 0x000008, "Wrong size on FortUIManagerWidget_NUI_PopActivatablePanelInModalLayer");
static_assert(offsetof(FortUIManagerWidget_NUI_PopActivatablePanelInModalLayer, Panel) == 0x000000, "Member 'FortUIManagerWidget_NUI_PopActivatablePanelInModalLayer::Panel' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.QueueActivatablePanelIntoModalLayer
// 0x0008 (0x0008 - 0x0000)
struct FortUIManagerWidget_NUI_QueueActivatablePanelIntoModalLayer final
{
public:
	const class UCommonActivatablePanel*          Panel;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_QueueActivatablePanelIntoModalLayer) == 0x000008, "Wrong alignment on FortUIManagerWidget_NUI_QueueActivatablePanelIntoModalLayer");
static_assert(sizeof(FortUIManagerWidget_NUI_QueueActivatablePanelIntoModalLayer) == 0x000008, "Wrong size on FortUIManagerWidget_NUI_QueueActivatablePanelIntoModalLayer");
static_assert(offsetof(FortUIManagerWidget_NUI_QueueActivatablePanelIntoModalLayer, Panel) == 0x000000, "Member 'FortUIManagerWidget_NUI_QueueActivatablePanelIntoModalLayer::Panel' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.RegisterStateTrigger
// 0x0008 (0x0008 - 0x0000)
struct FortUIManagerWidget_NUI_RegisterStateTrigger final
{
public:
	class UFortUIStateTrigger*                    StateTrigger;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_RegisterStateTrigger) == 0x000008, "Wrong alignment on FortUIManagerWidget_NUI_RegisterStateTrigger");
static_assert(sizeof(FortUIManagerWidget_NUI_RegisterStateTrigger) == 0x000008, "Wrong size on FortUIManagerWidget_NUI_RegisterStateTrigger");
static_assert(offsetof(FortUIManagerWidget_NUI_RegisterStateTrigger, StateTrigger) == 0x000000, "Member 'FortUIManagerWidget_NUI_RegisterStateTrigger::StateTrigger' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.ReleaseNotification
// 0x0008 (0x0008 - 0x0000)
struct FortUIManagerWidget_NUI_ReleaseNotification final
{
public:
	class UFortUINotification*                    Notification;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_ReleaseNotification) == 0x000008, "Wrong alignment on FortUIManagerWidget_NUI_ReleaseNotification");
static_assert(sizeof(FortUIManagerWidget_NUI_ReleaseNotification) == 0x000008, "Wrong size on FortUIManagerWidget_NUI_ReleaseNotification");
static_assert(offsetof(FortUIManagerWidget_NUI_ReleaseNotification, Notification) == 0x000000, "Member 'FortUIManagerWidget_NUI_ReleaseNotification::Notification' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.SetStateContentDisplayed
// 0x0001 (0x0001 - 0x0000)
struct FortUIManagerWidget_NUI_SetStateContentDisplayed final
{
public:
	bool                                          bDisplay;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_SetStateContentDisplayed) == 0x000001, "Wrong alignment on FortUIManagerWidget_NUI_SetStateContentDisplayed");
static_assert(sizeof(FortUIManagerWidget_NUI_SetStateContentDisplayed) == 0x000001, "Wrong size on FortUIManagerWidget_NUI_SetStateContentDisplayed");
static_assert(offsetof(FortUIManagerWidget_NUI_SetStateContentDisplayed, bDisplay) == 0x000000, "Member 'FortUIManagerWidget_NUI_SetStateContentDisplayed::bDisplay' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.UnregisterStateTrigger
// 0x0008 (0x0008 - 0x0000)
struct FortUIManagerWidget_NUI_UnregisterStateTrigger final
{
public:
	class UFortUIStateTrigger*                    TriggerToRemove;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_UnregisterStateTrigger) == 0x000008, "Wrong alignment on FortUIManagerWidget_NUI_UnregisterStateTrigger");
static_assert(sizeof(FortUIManagerWidget_NUI_UnregisterStateTrigger) == 0x000008, "Wrong size on FortUIManagerWidget_NUI_UnregisterStateTrigger");
static_assert(offsetof(FortUIManagerWidget_NUI_UnregisterStateTrigger, TriggerToRemove) == 0x000000, "Member 'FortUIManagerWidget_NUI_UnregisterStateTrigger::TriggerToRemove' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.UpdateStateWidgetContent
// 0x0008 (0x0008 - 0x0000)
struct FortUIManagerWidget_NUI_UpdateStateWidgetContent final
{
public:
	class UFortUIStateWidget_NUI*                 StateWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_UpdateStateWidgetContent) == 0x000008, "Wrong alignment on FortUIManagerWidget_NUI_UpdateStateWidgetContent");
static_assert(sizeof(FortUIManagerWidget_NUI_UpdateStateWidgetContent) == 0x000008, "Wrong size on FortUIManagerWidget_NUI_UpdateStateWidgetContent");
static_assert(offsetof(FortUIManagerWidget_NUI_UpdateStateWidgetContent, StateWidget) == 0x000000, "Member 'FortUIManagerWidget_NUI_UpdateStateWidgetContent::StateWidget' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI._BPGetCurrentUIState
// 0x0001 (0x0001 - 0x0000)
struct FortUIManagerWidget_NUI__BPGetCurrentUIState final
{
public:
	EFortUIState                                  ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI__BPGetCurrentUIState) == 0x000001, "Wrong alignment on FortUIManagerWidget_NUI__BPGetCurrentUIState");
static_assert(sizeof(FortUIManagerWidget_NUI__BPGetCurrentUIState) == 0x000001, "Wrong size on FortUIManagerWidget_NUI__BPGetCurrentUIState");
static_assert(offsetof(FortUIManagerWidget_NUI__BPGetCurrentUIState, ReturnValue) == 0x000000, "Member 'FortUIManagerWidget_NUI__BPGetCurrentUIState::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.GetCurrentUIStateWidget
// 0x0008 (0x0008 - 0x0000)
struct FortUIManagerWidget_NUI_GetCurrentUIStateWidget final
{
public:
	class UFortUIStateWidget_NUI*                 ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_GetCurrentUIStateWidget) == 0x000008, "Wrong alignment on FortUIManagerWidget_NUI_GetCurrentUIStateWidget");
static_assert(sizeof(FortUIManagerWidget_NUI_GetCurrentUIStateWidget) == 0x000008, "Wrong size on FortUIManagerWidget_NUI_GetCurrentUIStateWidget");
static_assert(offsetof(FortUIManagerWidget_NUI_GetCurrentUIStateWidget, ReturnValue) == 0x000000, "Member 'FortUIManagerWidget_NUI_GetCurrentUIStateWidget::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.GetNavigationManager
// 0x0008 (0x0008 - 0x0000)
struct FortUIManagerWidget_NUI_GetNavigationManager final
{
public:
	class UFortUINavigationManager*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_GetNavigationManager) == 0x000008, "Wrong alignment on FortUIManagerWidget_NUI_GetNavigationManager");
static_assert(sizeof(FortUIManagerWidget_NUI_GetNavigationManager) == 0x000008, "Wrong size on FortUIManagerWidget_NUI_GetNavigationManager");
static_assert(offsetof(FortUIManagerWidget_NUI_GetNavigationManager, ReturnValue) == 0x000000, "Member 'FortUIManagerWidget_NUI_GetNavigationManager::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.IsStateContentDisplayed
// 0x0001 (0x0001 - 0x0000)
struct FortUIManagerWidget_NUI_IsStateContentDisplayed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_IsStateContentDisplayed) == 0x000001, "Wrong alignment on FortUIManagerWidget_NUI_IsStateContentDisplayed");
static_assert(sizeof(FortUIManagerWidget_NUI_IsStateContentDisplayed) == 0x000001, "Wrong size on FortUIManagerWidget_NUI_IsStateContentDisplayed");
static_assert(offsetof(FortUIManagerWidget_NUI_IsStateContentDisplayed, ReturnValue) == 0x000000, "Member 'FortUIManagerWidget_NUI_IsStateContentDisplayed::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.PushContentWidget
// 0x0008 (0x0008 - 0x0000)
struct FortUIManagerWidget_NUI_PushContentWidget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_PushContentWidget) == 0x000008, "Wrong alignment on FortUIManagerWidget_NUI_PushContentWidget");
static_assert(sizeof(FortUIManagerWidget_NUI_PushContentWidget) == 0x000008, "Wrong size on FortUIManagerWidget_NUI_PushContentWidget");
static_assert(offsetof(FortUIManagerWidget_NUI_PushContentWidget, Widget) == 0x000000, "Member 'FortUIManagerWidget_NUI_PushContentWidget::Widget' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.PushContentWidgetAdvanced
// 0x0010 (0x0010 - 0x0000)
struct FortUIManagerWidget_NUI_PushContentWidgetAdvanced final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideHeader;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideFooter;                                       // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideChatWidget;                                   // 0x000A(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortUIManagerWidget_NUI_PushContentWidgetAdvanced) == 0x000008, "Wrong alignment on FortUIManagerWidget_NUI_PushContentWidgetAdvanced");
static_assert(sizeof(FortUIManagerWidget_NUI_PushContentWidgetAdvanced) == 0x000010, "Wrong size on FortUIManagerWidget_NUI_PushContentWidgetAdvanced");
static_assert(offsetof(FortUIManagerWidget_NUI_PushContentWidgetAdvanced, Widget) == 0x000000, "Member 'FortUIManagerWidget_NUI_PushContentWidgetAdvanced::Widget' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_NUI_PushContentWidgetAdvanced, bHideHeader) == 0x000008, "Member 'FortUIManagerWidget_NUI_PushContentWidgetAdvanced::bHideHeader' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_NUI_PushContentWidgetAdvanced, bHideFooter) == 0x000009, "Member 'FortUIManagerWidget_NUI_PushContentWidgetAdvanced::bHideFooter' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_NUI_PushContentWidgetAdvanced, bHideChatWidget) == 0x00000A, "Member 'FortUIManagerWidget_NUI_PushContentWidgetAdvanced::bHideChatWidget' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.SetFrontEndVisibility
// 0x0003 (0x0003 - 0x0000)
struct FortUIManagerWidget_NUI_SetFrontEndVisibility final
{
public:
	bool                                          bHideHeader;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideFooter;                                       // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideChatWidget;                                   // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_SetFrontEndVisibility) == 0x000001, "Wrong alignment on FortUIManagerWidget_NUI_SetFrontEndVisibility");
static_assert(sizeof(FortUIManagerWidget_NUI_SetFrontEndVisibility) == 0x000003, "Wrong size on FortUIManagerWidget_NUI_SetFrontEndVisibility");
static_assert(offsetof(FortUIManagerWidget_NUI_SetFrontEndVisibility, bHideHeader) == 0x000000, "Member 'FortUIManagerWidget_NUI_SetFrontEndVisibility::bHideHeader' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_NUI_SetFrontEndVisibility, bHideFooter) == 0x000001, "Member 'FortUIManagerWidget_NUI_SetFrontEndVisibility::bHideFooter' has a wrong offset!");
static_assert(offsetof(FortUIManagerWidget_NUI_SetFrontEndVisibility, bHideChatWidget) == 0x000002, "Member 'FortUIManagerWidget_NUI_SetFrontEndVisibility::bHideChatWidget' has a wrong offset!");

// Function FortniteUI.FortUIManagerWidget_NUI.ShouldBlockSubtitlePortrait
// 0x0001 (0x0001 - 0x0000)
struct FortUIManagerWidget_NUI_ShouldBlockSubtitlePortrait final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIManagerWidget_NUI_ShouldBlockSubtitlePortrait) == 0x000001, "Wrong alignment on FortUIManagerWidget_NUI_ShouldBlockSubtitlePortrait");
static_assert(sizeof(FortUIManagerWidget_NUI_ShouldBlockSubtitlePortrait) == 0x000001, "Wrong size on FortUIManagerWidget_NUI_ShouldBlockSubtitlePortrait");
static_assert(offsetof(FortUIManagerWidget_NUI_ShouldBlockSubtitlePortrait, ReturnValue) == 0x000000, "Member 'FortUIManagerWidget_NUI_ShouldBlockSubtitlePortrait::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIMessageItemWidget.OnStackSizeChanged
// 0x0004 (0x0004 - 0x0000)
struct FortUIMessageItemWidget_OnStackSizeChanged final
{
public:
	int32                                         OldStackSize;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIMessageItemWidget_OnStackSizeChanged) == 0x000004, "Wrong alignment on FortUIMessageItemWidget_OnStackSizeChanged");
static_assert(sizeof(FortUIMessageItemWidget_OnStackSizeChanged) == 0x000004, "Wrong size on FortUIMessageItemWidget_OnStackSizeChanged");
static_assert(offsetof(FortUIMessageItemWidget_OnStackSizeChanged, OldStackSize) == 0x000000, "Member 'FortUIMessageItemWidget_OnStackSizeChanged::OldStackSize' has a wrong offset!");

// Function FortniteUI.FortUIMessageManager.AddMessageItem
// 0x0028 (0x0028 - 0x0000)
struct FortUIMessageManager_AddMessageItem final
{
public:
	TSubclassOf<class UFortUIMessageItemWidget>   MessageItemClass;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      OwningPlayer;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MessageID;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StackCount;                                        // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUIMessageItemWidget*               ReturnValue;                                       // 0x0020(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIMessageManager_AddMessageItem) == 0x000008, "Wrong alignment on FortUIMessageManager_AddMessageItem");
static_assert(sizeof(FortUIMessageManager_AddMessageItem) == 0x000028, "Wrong size on FortUIMessageManager_AddMessageItem");
static_assert(offsetof(FortUIMessageManager_AddMessageItem, MessageItemClass) == 0x000000, "Member 'FortUIMessageManager_AddMessageItem::MessageItemClass' has a wrong offset!");
static_assert(offsetof(FortUIMessageManager_AddMessageItem, OwningPlayer) == 0x000008, "Member 'FortUIMessageManager_AddMessageItem::OwningPlayer' has a wrong offset!");
static_assert(offsetof(FortUIMessageManager_AddMessageItem, MessageID) == 0x000010, "Member 'FortUIMessageManager_AddMessageItem::MessageID' has a wrong offset!");
static_assert(offsetof(FortUIMessageManager_AddMessageItem, StackCount) == 0x000018, "Member 'FortUIMessageManager_AddMessageItem::StackCount' has a wrong offset!");
static_assert(offsetof(FortUIMessageManager_AddMessageItem, ReturnValue) == 0x000020, "Member 'FortUIMessageManager_AddMessageItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIMessageManager.GetNextMessageInQueue
// 0x0008 (0x0008 - 0x0000)
struct FortUIMessageManager_GetNextMessageInQueue final
{
public:
	class UFortUIMessageItemWidget*               ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIMessageManager_GetNextMessageInQueue) == 0x000008, "Wrong alignment on FortUIMessageManager_GetNextMessageInQueue");
static_assert(sizeof(FortUIMessageManager_GetNextMessageInQueue) == 0x000008, "Wrong size on FortUIMessageManager_GetNextMessageInQueue");
static_assert(offsetof(FortUIMessageManager_GetNextMessageInQueue, ReturnValue) == 0x000000, "Member 'FortUIMessageManager_GetNextMessageInQueue::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIMessageManager.HandleMessageDisplayed
// 0x0008 (0x0008 - 0x0000)
struct FortUIMessageManager_HandleMessageDisplayed final
{
public:
	class UFortUIMessageItemWidget*               MessageItem;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIMessageManager_HandleMessageDisplayed) == 0x000008, "Wrong alignment on FortUIMessageManager_HandleMessageDisplayed");
static_assert(sizeof(FortUIMessageManager_HandleMessageDisplayed) == 0x000008, "Wrong size on FortUIMessageManager_HandleMessageDisplayed");
static_assert(offsetof(FortUIMessageManager_HandleMessageDisplayed, MessageItem) == 0x000000, "Member 'FortUIMessageManager_HandleMessageDisplayed::MessageItem' has a wrong offset!");

// Function FortniteUI.FortUIMessageManager.HandleMessageRemoved
// 0x0008 (0x0008 - 0x0000)
struct FortUIMessageManager_HandleMessageRemoved final
{
public:
	class UFortUIMessageItemWidget*               MessageItem;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIMessageManager_HandleMessageRemoved) == 0x000008, "Wrong alignment on FortUIMessageManager_HandleMessageRemoved");
static_assert(sizeof(FortUIMessageManager_HandleMessageRemoved) == 0x000008, "Wrong size on FortUIMessageManager_HandleMessageRemoved");
static_assert(offsetof(FortUIMessageManager_HandleMessageRemoved, MessageItem) == 0x000000, "Member 'FortUIMessageManager_HandleMessageRemoved::MessageItem' has a wrong offset!");

// Function FortniteUI.FortUIMessageManager.GetNumDisplayedItems
// 0x0004 (0x0004 - 0x0000)
struct FortUIMessageManager_GetNumDisplayedItems final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIMessageManager_GetNumDisplayedItems) == 0x000004, "Wrong alignment on FortUIMessageManager_GetNumDisplayedItems");
static_assert(sizeof(FortUIMessageManager_GetNumDisplayedItems) == 0x000004, "Wrong size on FortUIMessageManager_GetNumDisplayedItems");
static_assert(offsetof(FortUIMessageManager_GetNumDisplayedItems, ReturnValue) == 0x000000, "Member 'FortUIMessageManager_GetNumDisplayedItems::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIMessagesPageBase.OnNotificationCleared
// 0x0008 (0x0008 - 0x0000)
struct FortUIMessagesPageBase_OnNotificationCleared final
{
public:
	class UFortUINotification*                    ClearedMessage;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIMessagesPageBase_OnNotificationCleared) == 0x000008, "Wrong alignment on FortUIMessagesPageBase_OnNotificationCleared");
static_assert(sizeof(FortUIMessagesPageBase_OnNotificationCleared) == 0x000008, "Wrong size on FortUIMessagesPageBase_OnNotificationCleared");
static_assert(offsetof(FortUIMessagesPageBase_OnNotificationCleared, ClearedMessage) == 0x000000, "Member 'FortUIMessagesPageBase_OnNotificationCleared::ClearedMessage' has a wrong offset!");

// Function FortniteUI.FortUINavigationManager.AttemptMatchmakeForQuest
// 0x0010 (0x0010 - 0x0000)
struct FortUINavigationManager_AttemptMatchmakeForQuest final
{
public:
	class UFortQuestItem*                         Quest;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutContentNotDownloaded;                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortUINavigationManager_AttemptMatchmakeForQuest) == 0x000008, "Wrong alignment on FortUINavigationManager_AttemptMatchmakeForQuest");
static_assert(sizeof(FortUINavigationManager_AttemptMatchmakeForQuest) == 0x000010, "Wrong size on FortUINavigationManager_AttemptMatchmakeForQuest");
static_assert(offsetof(FortUINavigationManager_AttemptMatchmakeForQuest, Quest) == 0x000000, "Member 'FortUINavigationManager_AttemptMatchmakeForQuest::Quest' has a wrong offset!");
static_assert(offsetof(FortUINavigationManager_AttemptMatchmakeForQuest, OutContentNotDownloaded) == 0x000008, "Member 'FortUINavigationManager_AttemptMatchmakeForQuest::OutContentNotDownloaded' has a wrong offset!");
static_assert(offsetof(FortUINavigationManager_AttemptMatchmakeForQuest, ReturnValue) == 0x000009, "Member 'FortUINavigationManager_AttemptMatchmakeForQuest::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUINavigationManager.AttemptPlayQuest
// 0x0008 (0x0008 - 0x0000)
struct FortUINavigationManager_AttemptPlayQuest final
{
public:
	class UFortQuestItem*                         Quest;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUINavigationManager_AttemptPlayQuest) == 0x000008, "Wrong alignment on FortUINavigationManager_AttemptPlayQuest");
static_assert(sizeof(FortUINavigationManager_AttemptPlayQuest) == 0x000008, "Wrong size on FortUINavigationManager_AttemptPlayQuest");
static_assert(offsetof(FortUINavigationManager_AttemptPlayQuest, Quest) == 0x000000, "Member 'FortUINavigationManager_AttemptPlayQuest::Quest' has a wrong offset!");

// Function FortniteUI.FortUINavigationManager.CanNavigateToQuestObjective
// 0x0010 (0x0010 - 0x0000)
struct FortUINavigationManager_CanNavigateToQuestObjective final
{
public:
	class UFortQuestItem*                         QuestItem;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortUINavigationManager_CanNavigateToQuestObjective) == 0x000008, "Wrong alignment on FortUINavigationManager_CanNavigateToQuestObjective");
static_assert(sizeof(FortUINavigationManager_CanNavigateToQuestObjective) == 0x000010, "Wrong size on FortUINavigationManager_CanNavigateToQuestObjective");
static_assert(offsetof(FortUINavigationManager_CanNavigateToQuestObjective, QuestItem) == 0x000000, "Member 'FortUINavigationManager_CanNavigateToQuestObjective::QuestItem' has a wrong offset!");
static_assert(offsetof(FortUINavigationManager_CanNavigateToQuestObjective, ReturnValue) == 0x000008, "Member 'FortUINavigationManager_CanNavigateToQuestObjective::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUINavigationManager.CenterWidget
// 0x0008 (0x0008 - 0x0000)
struct FortUINavigationManager_CenterWidget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUINavigationManager_CenterWidget) == 0x000008, "Wrong alignment on FortUINavigationManager_CenterWidget");
static_assert(sizeof(FortUINavigationManager_CenterWidget) == 0x000008, "Wrong size on FortUINavigationManager_CenterWidget");
static_assert(offsetof(FortUINavigationManager_CenterWidget, Widget) == 0x000000, "Member 'FortUINavigationManager_CenterWidget::Widget' has a wrong offset!");

// Function FortniteUI.FortUINavigationManager.CompletePendingNavigationOp
// 0x0001 (0x0001 - 0x0000)
struct FortUINavigationManager_CompletePendingNavigationOp final
{
public:
	EFortUINavigationOp                           NavigationOp;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUINavigationManager_CompletePendingNavigationOp) == 0x000001, "Wrong alignment on FortUINavigationManager_CompletePendingNavigationOp");
static_assert(sizeof(FortUINavigationManager_CompletePendingNavigationOp) == 0x000001, "Wrong size on FortUINavigationManager_CompletePendingNavigationOp");
static_assert(offsetof(FortUINavigationManager_CompletePendingNavigationOp, NavigationOp) == 0x000000, "Member 'FortUINavigationManager_CompletePendingNavigationOp::NavigationOp' has a wrong offset!");

// Function FortniteUI.FortUINavigationManager.HasPendingNavigationOp
// 0x0002 (0x0002 - 0x0000)
struct FortUINavigationManager_HasPendingNavigationOp final
{
public:
	EFortUINavigationOp                           NavigationOp;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUINavigationManager_HasPendingNavigationOp) == 0x000001, "Wrong alignment on FortUINavigationManager_HasPendingNavigationOp");
static_assert(sizeof(FortUINavigationManager_HasPendingNavigationOp) == 0x000002, "Wrong size on FortUINavigationManager_HasPendingNavigationOp");
static_assert(offsetof(FortUINavigationManager_HasPendingNavigationOp, NavigationOp) == 0x000000, "Member 'FortUINavigationManager_HasPendingNavigationOp::NavigationOp' has a wrong offset!");
static_assert(offsetof(FortUINavigationManager_HasPendingNavigationOp, ReturnValue) == 0x000001, "Member 'FortUINavigationManager_HasPendingNavigationOp::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUINavigationManager.NavigateToFeature
// 0x0001 (0x0001 - 0x0000)
struct FortUINavigationManager_NavigateToFeature final
{
public:
	EFortUIFeature                                Feature;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUINavigationManager_NavigateToFeature) == 0x000001, "Wrong alignment on FortUINavigationManager_NavigateToFeature");
static_assert(sizeof(FortUINavigationManager_NavigateToFeature) == 0x000001, "Wrong size on FortUINavigationManager_NavigateToFeature");
static_assert(offsetof(FortUINavigationManager_NavigateToFeature, Feature) == 0x000000, "Member 'FortUINavigationManager_NavigateToFeature::Feature' has a wrong offset!");

// Function FortniteUI.FortUINavigationManager.NavigateToItem
// 0x0008 (0x0008 - 0x0000)
struct FortUINavigationManager_NavigateToItem final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUINavigationManager_NavigateToItem) == 0x000008, "Wrong alignment on FortUINavigationManager_NavigateToItem");
static_assert(sizeof(FortUINavigationManager_NavigateToItem) == 0x000008, "Wrong size on FortUINavigationManager_NavigateToItem");
static_assert(offsetof(FortUINavigationManager_NavigateToItem, Item) == 0x000000, "Member 'FortUINavigationManager_NavigateToItem::Item' has a wrong offset!");

// Function FortniteUI.FortUINavigationManager.NavigateToItemManagementScreen
// 0x0001 (0x0001 - 0x0000)
struct FortUINavigationManager_NavigateToItemManagementScreen final
{
public:
	EFortFrontendInventoryFilter                  Filter;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUINavigationManager_NavigateToItemManagementScreen) == 0x000001, "Wrong alignment on FortUINavigationManager_NavigateToItemManagementScreen");
static_assert(sizeof(FortUINavigationManager_NavigateToItemManagementScreen) == 0x000001, "Wrong size on FortUINavigationManager_NavigateToItemManagementScreen");
static_assert(offsetof(FortUINavigationManager_NavigateToItemManagementScreen, Filter) == 0x000000, "Member 'FortUINavigationManager_NavigateToItemManagementScreen::Filter' has a wrong offset!");

// Function FortniteUI.FortUINavigationManager.NavigateToNodePage
// 0x0010 (0x0010 - 0x0000)
struct FortUINavigationManager_NavigateToNodePage final
{
public:
	class FName                                   PageId;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   NodeID;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUINavigationManager_NavigateToNodePage) == 0x000004, "Wrong alignment on FortUINavigationManager_NavigateToNodePage");
static_assert(sizeof(FortUINavigationManager_NavigateToNodePage) == 0x000010, "Wrong size on FortUINavigationManager_NavigateToNodePage");
static_assert(offsetof(FortUINavigationManager_NavigateToNodePage, PageId) == 0x000000, "Member 'FortUINavigationManager_NavigateToNodePage::PageId' has a wrong offset!");
static_assert(offsetof(FortUINavigationManager_NavigateToNodePage, NodeID) == 0x000008, "Member 'FortUINavigationManager_NavigateToNodePage::NodeID' has a wrong offset!");

// Function FortniteUI.FortUINavigationManager.NavigateToNodePageByGameplayTagContainer
// 0x0020 (0x0020 - 0x0000)
struct FortUINavigationManager_NavigateToNodePageByGameplayTagContainer final
{
public:
	struct FGameplayTagContainer                  GameplayTagContainer;                              // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUINavigationManager_NavigateToNodePageByGameplayTagContainer) == 0x000008, "Wrong alignment on FortUINavigationManager_NavigateToNodePageByGameplayTagContainer");
static_assert(sizeof(FortUINavigationManager_NavigateToNodePageByGameplayTagContainer) == 0x000020, "Wrong size on FortUINavigationManager_NavigateToNodePageByGameplayTagContainer");
static_assert(offsetof(FortUINavigationManager_NavigateToNodePageByGameplayTagContainer, GameplayTagContainer) == 0x000000, "Member 'FortUINavigationManager_NavigateToNodePageByGameplayTagContainer::GameplayTagContainer' has a wrong offset!");

// Function FortniteUI.FortUINavigationManager.NavigateToQuestObjective
// 0x0008 (0x0008 - 0x0000)
struct FortUINavigationManager_NavigateToQuestObjective final
{
public:
	class UFortQuestItem*                         QuestItem;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUINavigationManager_NavigateToQuestObjective) == 0x000008, "Wrong alignment on FortUINavigationManager_NavigateToQuestObjective");
static_assert(sizeof(FortUINavigationManager_NavigateToQuestObjective) == 0x000008, "Wrong size on FortUINavigationManager_NavigateToQuestObjective");
static_assert(offsetof(FortUINavigationManager_NavigateToQuestObjective, QuestItem) == 0x000000, "Member 'FortUINavigationManager_NavigateToQuestObjective::QuestItem' has a wrong offset!");

// Function FortniteUI.FortUINavigationManager.NavigateToSquadSlot
// 0x0010 (0x0010 - 0x0000)
struct FortUINavigationManager_NavigateToSquadSlot final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SquadSlotIndex;                                    // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortUINavigationManager_NavigateToSquadSlot) == 0x000004, "Wrong alignment on FortUINavigationManager_NavigateToSquadSlot");
static_assert(sizeof(FortUINavigationManager_NavigateToSquadSlot) == 0x000010, "Wrong size on FortUINavigationManager_NavigateToSquadSlot");
static_assert(offsetof(FortUINavigationManager_NavigateToSquadSlot, SquadId) == 0x000000, "Member 'FortUINavigationManager_NavigateToSquadSlot::SquadId' has a wrong offset!");
static_assert(offsetof(FortUINavigationManager_NavigateToSquadSlot, SquadSlotIndex) == 0x000008, "Member 'FortUINavigationManager_NavigateToSquadSlot::SquadSlotIndex' has a wrong offset!");

// Function FortniteUI.FortUINavigationManager.PushItemInspectionScreen
// 0x0020 (0x0020 - 0x0000)
struct FortUINavigationManager_PushItemInspectionScreen final
{
public:
	class UFortItem*                              ItemToInspect;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortItemInspectionMode                       Mode;                                              // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemTileView*                      CycleTileView;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReadOnly;                                         // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowFavoriting;                                  // 0x0019(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTemporaryItem;                                  // 0x001A(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowRarityUpgrading;                             // 0x001B(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortUINavigationManager_PushItemInspectionScreen) == 0x000008, "Wrong alignment on FortUINavigationManager_PushItemInspectionScreen");
static_assert(sizeof(FortUINavigationManager_PushItemInspectionScreen) == 0x000020, "Wrong size on FortUINavigationManager_PushItemInspectionScreen");
static_assert(offsetof(FortUINavigationManager_PushItemInspectionScreen, ItemToInspect) == 0x000000, "Member 'FortUINavigationManager_PushItemInspectionScreen::ItemToInspect' has a wrong offset!");
static_assert(offsetof(FortUINavigationManager_PushItemInspectionScreen, Mode) == 0x000008, "Member 'FortUINavigationManager_PushItemInspectionScreen::Mode' has a wrong offset!");
static_assert(offsetof(FortUINavigationManager_PushItemInspectionScreen, CycleTileView) == 0x000010, "Member 'FortUINavigationManager_PushItemInspectionScreen::CycleTileView' has a wrong offset!");
static_assert(offsetof(FortUINavigationManager_PushItemInspectionScreen, bReadOnly) == 0x000018, "Member 'FortUINavigationManager_PushItemInspectionScreen::bReadOnly' has a wrong offset!");
static_assert(offsetof(FortUINavigationManager_PushItemInspectionScreen, bAllowFavoriting) == 0x000019, "Member 'FortUINavigationManager_PushItemInspectionScreen::bAllowFavoriting' has a wrong offset!");
static_assert(offsetof(FortUINavigationManager_PushItemInspectionScreen, bIsTemporaryItem) == 0x00001A, "Member 'FortUINavigationManager_PushItemInspectionScreen::bIsTemporaryItem' has a wrong offset!");
static_assert(offsetof(FortUINavigationManager_PushItemInspectionScreen, bAllowRarityUpgrading) == 0x00001B, "Member 'FortUINavigationManager_PushItemInspectionScreen::bAllowRarityUpgrading' has a wrong offset!");

// Function FortniteUI.FortUINavigationManager.PushItemManagementScreen
// 0x0001 (0x0001 - 0x0000)
struct FortUINavigationManager_PushItemManagementScreen final
{
public:
	EFortFrontendInventoryFilter                  ItemManagementFilter;                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUINavigationManager_PushItemManagementScreen) == 0x000001, "Wrong alignment on FortUINavigationManager_PushItemManagementScreen");
static_assert(sizeof(FortUINavigationManager_PushItemManagementScreen) == 0x000001, "Wrong size on FortUINavigationManager_PushItemManagementScreen");
static_assert(offsetof(FortUINavigationManager_PushItemManagementScreen, ItemManagementFilter) == 0x000000, "Member 'FortUINavigationManager_PushItemManagementScreen::ItemManagementFilter' has a wrong offset!");

// Function FortniteUI.FortUINavigationManager.PushSkillTreeNode
// 0x0008 (0x0008 - 0x0000)
struct FortUINavigationManager_PushSkillTreeNode final
{
public:
	class FName                                   SkillTreeNodeId;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUINavigationManager_PushSkillTreeNode) == 0x000004, "Wrong alignment on FortUINavigationManager_PushSkillTreeNode");
static_assert(sizeof(FortUINavigationManager_PushSkillTreeNode) == 0x000008, "Wrong size on FortUINavigationManager_PushSkillTreeNode");
static_assert(offsetof(FortUINavigationManager_PushSkillTreeNode, SkillTreeNodeId) == 0x000000, "Member 'FortUINavigationManager_PushSkillTreeNode::SkillTreeNodeId' has a wrong offset!");

// Function FortniteUI.FortUINavigationManager.PushSkillTreePage
// 0x0008 (0x0008 - 0x0000)
struct FortUINavigationManager_PushSkillTreePage final
{
public:
	class FName                                   SkillTreePageId;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUINavigationManager_PushSkillTreePage) == 0x000004, "Wrong alignment on FortUINavigationManager_PushSkillTreePage");
static_assert(sizeof(FortUINavigationManager_PushSkillTreePage) == 0x000008, "Wrong size on FortUINavigationManager_PushSkillTreePage");
static_assert(offsetof(FortUINavigationManager_PushSkillTreePage, SkillTreePageId) == 0x000000, "Member 'FortUINavigationManager_PushSkillTreePage::SkillTreePageId' has a wrong offset!");

// Function FortniteUI.FortUINavigationManager.PushSquadManagementScreen
// 0x0010 (0x0010 - 0x0000)
struct FortUINavigationManager_PushSquadManagementScreen final
{
public:
	class FName                                   SquadId;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SquadSlotIndex;                                    // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortUINavigationManager_PushSquadManagementScreen) == 0x000004, "Wrong alignment on FortUINavigationManager_PushSquadManagementScreen");
static_assert(sizeof(FortUINavigationManager_PushSquadManagementScreen) == 0x000010, "Wrong size on FortUINavigationManager_PushSquadManagementScreen");
static_assert(offsetof(FortUINavigationManager_PushSquadManagementScreen, SquadId) == 0x000000, "Member 'FortUINavigationManager_PushSquadManagementScreen::SquadId' has a wrong offset!");
static_assert(offsetof(FortUINavigationManager_PushSquadManagementScreen, SquadSlotIndex) == 0x000008, "Member 'FortUINavigationManager_PushSquadManagementScreen::SquadSlotIndex' has a wrong offset!");

// Function FortniteUI.FortUINavigationManager.SetScrollWidget
// 0x0008 (0x0008 - 0x0000)
struct FortUINavigationManager_SetScrollWidget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUINavigationManager_SetScrollWidget) == 0x000008, "Wrong alignment on FortUINavigationManager_SetScrollWidget");
static_assert(sizeof(FortUINavigationManager_SetScrollWidget) == 0x000008, "Wrong size on FortUINavigationManager_SetScrollWidget");
static_assert(offsetof(FortUINavigationManager_SetScrollWidget, Widget) == 0x000000, "Member 'FortUINavigationManager_SetScrollWidget::Widget' has a wrong offset!");

// Function FortniteUI.FortUINavigationManager.TryGetPendingNavigationOp
// 0x0040 (0x0040 - 0x0000)
struct FortUINavigationManager_TryGetPendingNavigationOp final
{
public:
	struct FFortUINavigationOperation             NavigationOp;                                      // 0x0000(0x0038)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortUINavigationManager_TryGetPendingNavigationOp) == 0x000008, "Wrong alignment on FortUINavigationManager_TryGetPendingNavigationOp");
static_assert(sizeof(FortUINavigationManager_TryGetPendingNavigationOp) == 0x000040, "Wrong size on FortUINavigationManager_TryGetPendingNavigationOp");
static_assert(offsetof(FortUINavigationManager_TryGetPendingNavigationOp, NavigationOp) == 0x000000, "Member 'FortUINavigationManager_TryGetPendingNavigationOp::NavigationOp' has a wrong offset!");
static_assert(offsetof(FortUINavigationManager_TryGetPendingNavigationOp, ReturnValue) == 0x000038, "Member 'FortUINavigationManager_TryGetPendingNavigationOp::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUINotificationQueue.GetNextNotification
// 0x0008 (0x0008 - 0x0000)
struct FortUINotificationQueue_GetNextNotification final
{
public:
	class UFortUINotification*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUINotificationQueue_GetNextNotification) == 0x000008, "Wrong alignment on FortUINotificationQueue_GetNextNotification");
static_assert(sizeof(FortUINotificationQueue_GetNextNotification) == 0x000008, "Wrong size on FortUINotificationQueue_GetNextNotification");
static_assert(offsetof(FortUINotificationQueue_GetNextNotification, ReturnValue) == 0x000000, "Member 'FortUINotificationQueue_GetNextNotification::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUINotificationQueue.RegisterToReceiveNotifications
// 0x0010 (0x0010 - 0x0000)
struct FortUINotificationQueue_RegisterToReceiveNotifications final
{
public:
	TDelegate<void()>                             NotificationDelegate;                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUINotificationQueue_RegisterToReceiveNotifications) == 0x000004, "Wrong alignment on FortUINotificationQueue_RegisterToReceiveNotifications");
static_assert(sizeof(FortUINotificationQueue_RegisterToReceiveNotifications) == 0x000010, "Wrong size on FortUINotificationQueue_RegisterToReceiveNotifications");
static_assert(offsetof(FortUINotificationQueue_RegisterToReceiveNotifications, NotificationDelegate) == 0x000000, "Member 'FortUINotificationQueue_RegisterToReceiveNotifications::NotificationDelegate' has a wrong offset!");

// Function FortniteUI.FortUINotificationQueue.RemoveNotification
// 0x0008 (0x0008 - 0x0000)
struct FortUINotificationQueue_RemoveNotification final
{
public:
	const class UFortUINotification*              InNotificationDescription;                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUINotificationQueue_RemoveNotification) == 0x000008, "Wrong alignment on FortUINotificationQueue_RemoveNotification");
static_assert(sizeof(FortUINotificationQueue_RemoveNotification) == 0x000008, "Wrong size on FortUINotificationQueue_RemoveNotification");
static_assert(offsetof(FortUINotificationQueue_RemoveNotification, InNotificationDescription) == 0x000000, "Member 'FortUINotificationQueue_RemoveNotification::InNotificationDescription' has a wrong offset!");

// Function FortniteUI.FortUIRewardReport.GetRewardedChestIndex
// 0x0004 (0x0004 - 0x0000)
struct FortUIRewardReport_GetRewardedChestIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIRewardReport_GetRewardedChestIndex) == 0x000004, "Wrong alignment on FortUIRewardReport_GetRewardedChestIndex");
static_assert(sizeof(FortUIRewardReport_GetRewardedChestIndex) == 0x000004, "Wrong size on FortUIRewardReport_GetRewardedChestIndex");
static_assert(offsetof(FortUIRewardReport_GetRewardedChestIndex, ReturnValue) == 0x000000, "Member 'FortUIRewardReport_GetRewardedChestIndex::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIScoreReport.GetBadgeScore
// 0x0010 (0x0010 - 0x0000)
struct FortUIScoreReport_GetBadgeScore final
{
public:
	class UFortItem*                              BadgeItem;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortUIScoreReport_GetBadgeScore) == 0x000008, "Wrong alignment on FortUIScoreReport_GetBadgeScore");
static_assert(sizeof(FortUIScoreReport_GetBadgeScore) == 0x000010, "Wrong size on FortUIScoreReport_GetBadgeScore");
static_assert(offsetof(FortUIScoreReport_GetBadgeScore, BadgeItem) == 0x000000, "Member 'FortUIScoreReport_GetBadgeScore::BadgeItem' has a wrong offset!");
static_assert(offsetof(FortUIScoreReport_GetBadgeScore, ReturnValue) == 0x000008, "Member 'FortUIScoreReport_GetBadgeScore::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIScoreReport.GetCurrentPlayerPawn
// 0x0010 (0x0010 - 0x0000)
struct FortUIScoreReport_GetCurrentPlayerPawn final
{
public:
	int32                                         ScoreReportIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIScoreReport_GetCurrentPlayerPawn) == 0x000008, "Wrong alignment on FortUIScoreReport_GetCurrentPlayerPawn");
static_assert(sizeof(FortUIScoreReport_GetCurrentPlayerPawn) == 0x000010, "Wrong size on FortUIScoreReport_GetCurrentPlayerPawn");
static_assert(offsetof(FortUIScoreReport_GetCurrentPlayerPawn, ScoreReportIndex) == 0x000000, "Member 'FortUIScoreReport_GetCurrentPlayerPawn::ScoreReportIndex' has a wrong offset!");
static_assert(offsetof(FortUIScoreReport_GetCurrentPlayerPawn, ReturnValue) == 0x000008, "Member 'FortUIScoreReport_GetCurrentPlayerPawn::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIScoreReport.GetDifficultBonusMultiplier
// 0x0004 (0x0004 - 0x0000)
struct FortUIScoreReport_GetDifficultBonusMultiplier final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIScoreReport_GetDifficultBonusMultiplier) == 0x000004, "Wrong alignment on FortUIScoreReport_GetDifficultBonusMultiplier");
static_assert(sizeof(FortUIScoreReport_GetDifficultBonusMultiplier) == 0x000004, "Wrong size on FortUIScoreReport_GetDifficultBonusMultiplier");
static_assert(offsetof(FortUIScoreReport_GetDifficultBonusMultiplier, ReturnValue) == 0x000000, "Member 'FortUIScoreReport_GetDifficultBonusMultiplier::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIScoreReport.GetDifficultBonusScore
// 0x0004 (0x0004 - 0x0000)
struct FortUIScoreReport_GetDifficultBonusScore final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIScoreReport_GetDifficultBonusScore) == 0x000004, "Wrong alignment on FortUIScoreReport_GetDifficultBonusScore");
static_assert(sizeof(FortUIScoreReport_GetDifficultBonusScore) == 0x000004, "Wrong size on FortUIScoreReport_GetDifficultBonusScore");
static_assert(offsetof(FortUIScoreReport_GetDifficultBonusScore, ReturnValue) == 0x000000, "Member 'FortUIScoreReport_GetDifficultBonusScore::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIScoreReport.GetLevelProgress
// 0x000C (0x000C - 0x0000)
struct FortUIScoreReport_GetLevelProgress final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DisplayXp;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIScoreReport_GetLevelProgress) == 0x000004, "Wrong alignment on FortUIScoreReport_GetLevelProgress");
static_assert(sizeof(FortUIScoreReport_GetLevelProgress) == 0x00000C, "Wrong size on FortUIScoreReport_GetLevelProgress");
static_assert(offsetof(FortUIScoreReport_GetLevelProgress, Level) == 0x000000, "Member 'FortUIScoreReport_GetLevelProgress::Level' has a wrong offset!");
static_assert(offsetof(FortUIScoreReport_GetLevelProgress, DisplayXp) == 0x000004, "Member 'FortUIScoreReport_GetLevelProgress::DisplayXp' has a wrong offset!");
static_assert(offsetof(FortUIScoreReport_GetLevelProgress, ReturnValue) == 0x000008, "Member 'FortUIScoreReport_GetLevelProgress::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIScoreReport.GetPlayerCount
// 0x0004 (0x0004 - 0x0000)
struct FortUIScoreReport_GetPlayerCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIScoreReport_GetPlayerCount) == 0x000004, "Wrong alignment on FortUIScoreReport_GetPlayerCount");
static_assert(sizeof(FortUIScoreReport_GetPlayerCount) == 0x000004, "Wrong size on FortUIScoreReport_GetPlayerCount");
static_assert(offsetof(FortUIScoreReport_GetPlayerCount, ReturnValue) == 0x000000, "Member 'FortUIScoreReport_GetPlayerCount::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIScoreReport.GetPlayerIDFromScoreReportIndex
// 0x0030 (0x0030 - 0x0000)
struct FortUIScoreReport_GetPlayerIDFromScoreReportIndex final
{
public:
	int32                                         ScoreReportIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       OutUniqueNetIdRepl;                                // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIScoreReport_GetPlayerIDFromScoreReportIndex) == 0x000008, "Wrong alignment on FortUIScoreReport_GetPlayerIDFromScoreReportIndex");
static_assert(sizeof(FortUIScoreReport_GetPlayerIDFromScoreReportIndex) == 0x000030, "Wrong size on FortUIScoreReport_GetPlayerIDFromScoreReportIndex");
static_assert(offsetof(FortUIScoreReport_GetPlayerIDFromScoreReportIndex, ScoreReportIndex) == 0x000000, "Member 'FortUIScoreReport_GetPlayerIDFromScoreReportIndex::ScoreReportIndex' has a wrong offset!");
static_assert(offsetof(FortUIScoreReport_GetPlayerIDFromScoreReportIndex, OutUniqueNetIdRepl) == 0x000008, "Member 'FortUIScoreReport_GetPlayerIDFromScoreReportIndex::OutUniqueNetIdRepl' has a wrong offset!");

// Function FortniteUI.FortUIScoreReport.GetPlayerName
// 0x0020 (0x0020 - 0x0000)
struct FortUIScoreReport_GetPlayerName final
{
public:
	int32                                         ScoreReportIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIScoreReport_GetPlayerName) == 0x000008, "Wrong alignment on FortUIScoreReport_GetPlayerName");
static_assert(sizeof(FortUIScoreReport_GetPlayerName) == 0x000020, "Wrong size on FortUIScoreReport_GetPlayerName");
static_assert(offsetof(FortUIScoreReport_GetPlayerName, ScoreReportIndex) == 0x000000, "Member 'FortUIScoreReport_GetPlayerName::ScoreReportIndex' has a wrong offset!");
static_assert(offsetof(FortUIScoreReport_GetPlayerName, ReturnValue) == 0x000008, "Member 'FortUIScoreReport_GetPlayerName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIScoreReport.GetPlayerScore
// 0x000C (0x000C - 0x0000)
struct FortUIScoreReport_GetPlayerScore final
{
public:
	int32                                         ScoreReportIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFortUIScoreType                              ScoreType;                                         // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIScoreReport_GetPlayerScore) == 0x000004, "Wrong alignment on FortUIScoreReport_GetPlayerScore");
static_assert(sizeof(FortUIScoreReport_GetPlayerScore) == 0x00000C, "Wrong size on FortUIScoreReport_GetPlayerScore");
static_assert(offsetof(FortUIScoreReport_GetPlayerScore, ScoreReportIndex) == 0x000000, "Member 'FortUIScoreReport_GetPlayerScore::ScoreReportIndex' has a wrong offset!");
static_assert(offsetof(FortUIScoreReport_GetPlayerScore, ScoreType) == 0x000004, "Member 'FortUIScoreReport_GetPlayerScore::ScoreType' has a wrong offset!");
static_assert(offsetof(FortUIScoreReport_GetPlayerScore, ReturnValue) == 0x000008, "Member 'FortUIScoreReport_GetPlayerScore::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIScoreReport.GetScoreReportIndex
// 0x0030 (0x0030 - 0x0000)
struct FortUIScoreReport_GetScoreReportIndex final
{
public:
	struct FUniqueNetIdRepl                       PlayerID;                                          // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortUIScoreReport_GetScoreReportIndex) == 0x000008, "Wrong alignment on FortUIScoreReport_GetScoreReportIndex");
static_assert(sizeof(FortUIScoreReport_GetScoreReportIndex) == 0x000030, "Wrong size on FortUIScoreReport_GetScoreReportIndex");
static_assert(offsetof(FortUIScoreReport_GetScoreReportIndex, PlayerID) == 0x000000, "Member 'FortUIScoreReport_GetScoreReportIndex::PlayerID' has a wrong offset!");
static_assert(offsetof(FortUIScoreReport_GetScoreReportIndex, ReturnValue) == 0x000028, "Member 'FortUIScoreReport_GetScoreReportIndex::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIScoreReport.GetScoreReportIndicesByPlayerID
// 0x0010 (0x0010 - 0x0000)
struct FortUIScoreReport_GetScoreReportIndicesByPlayerID final
{
public:
	TArray<int32>                                 SortedScoreReportIndices;                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIScoreReport_GetScoreReportIndicesByPlayerID) == 0x000008, "Wrong alignment on FortUIScoreReport_GetScoreReportIndicesByPlayerID");
static_assert(sizeof(FortUIScoreReport_GetScoreReportIndicesByPlayerID) == 0x000010, "Wrong size on FortUIScoreReport_GetScoreReportIndicesByPlayerID");
static_assert(offsetof(FortUIScoreReport_GetScoreReportIndicesByPlayerID, SortedScoreReportIndices) == 0x000000, "Member 'FortUIScoreReport_GetScoreReportIndicesByPlayerID::SortedScoreReportIndices' has a wrong offset!");

// Function FortniteUI.FortUIScoreReport.GetTeamScore
// 0x0008 (0x0008 - 0x0000)
struct FortUIScoreReport_GetTeamScore final
{
public:
	EFortUIScoreType                              ScoreType;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIScoreReport_GetTeamScore) == 0x000004, "Wrong alignment on FortUIScoreReport_GetTeamScore");
static_assert(sizeof(FortUIScoreReport_GetTeamScore) == 0x000008, "Wrong size on FortUIScoreReport_GetTeamScore");
static_assert(offsetof(FortUIScoreReport_GetTeamScore, ScoreType) == 0x000000, "Member 'FortUIScoreReport_GetTeamScore::ScoreType' has a wrong offset!");
static_assert(offsetof(FortUIScoreReport_GetTeamScore, ReturnValue) == 0x000004, "Member 'FortUIScoreReport_GetTeamScore::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIScoreReport.GetXpInfo
// 0x0034 (0x0034 - 0x0000)
struct FortUIScoreReport_GetXpInfo final
{
public:
	int32                                         ScoreReportIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFortUIXpInfo                          OutXpInfo;                                         // 0x0004(0x002C)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortUIScoreReport_GetXpInfo) == 0x000004, "Wrong alignment on FortUIScoreReport_GetXpInfo");
static_assert(sizeof(FortUIScoreReport_GetXpInfo) == 0x000034, "Wrong size on FortUIScoreReport_GetXpInfo");
static_assert(offsetof(FortUIScoreReport_GetXpInfo, ScoreReportIndex) == 0x000000, "Member 'FortUIScoreReport_GetXpInfo::ScoreReportIndex' has a wrong offset!");
static_assert(offsetof(FortUIScoreReport_GetXpInfo, OutXpInfo) == 0x000004, "Member 'FortUIScoreReport_GetXpInfo::OutXpInfo' has a wrong offset!");
static_assert(offsetof(FortUIScoreReport_GetXpInfo, ReturnValue) == 0x000030, "Member 'FortUIScoreReport_GetXpInfo::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIScoreReport.GetXpToCompleteLevel
// 0x0008 (0x0008 - 0x0000)
struct FortUIScoreReport_GetXpToCompleteLevel final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIScoreReport_GetXpToCompleteLevel) == 0x000004, "Wrong alignment on FortUIScoreReport_GetXpToCompleteLevel");
static_assert(sizeof(FortUIScoreReport_GetXpToCompleteLevel) == 0x000008, "Wrong size on FortUIScoreReport_GetXpToCompleteLevel");
static_assert(offsetof(FortUIScoreReport_GetXpToCompleteLevel, Level) == 0x000000, "Member 'FortUIScoreReport_GetXpToCompleteLevel::Level' has a wrong offset!");
static_assert(offsetof(FortUIScoreReport_GetXpToCompleteLevel, ReturnValue) == 0x000004, "Member 'FortUIScoreReport_GetXpToCompleteLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIScoreReport.IsLocalPlayer
// 0x0008 (0x0008 - 0x0000)
struct FortUIScoreReport_IsLocalPlayer final
{
public:
	int32                                         ScoreReportIndex;                                  // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortUIScoreReport_IsLocalPlayer) == 0x000004, "Wrong alignment on FortUIScoreReport_IsLocalPlayer");
static_assert(sizeof(FortUIScoreReport_IsLocalPlayer) == 0x000008, "Wrong size on FortUIScoreReport_IsLocalPlayer");
static_assert(offsetof(FortUIScoreReport_IsLocalPlayer, ScoreReportIndex) == 0x000000, "Member 'FortUIScoreReport_IsLocalPlayer::ScoreReportIndex' has a wrong offset!");
static_assert(offsetof(FortUIScoreReport_IsLocalPlayer, ReturnValue) == 0x000004, "Member 'FortUIScoreReport_IsLocalPlayer::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget.OnEnterState
// 0x0001 (0x0001 - 0x0000)
struct FortUIStateWidget_OnEnterState final
{
public:
	EFortUIState                                  PreviousUIState;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_OnEnterState) == 0x000001, "Wrong alignment on FortUIStateWidget_OnEnterState");
static_assert(sizeof(FortUIStateWidget_OnEnterState) == 0x000001, "Wrong size on FortUIStateWidget_OnEnterState");
static_assert(offsetof(FortUIStateWidget_OnEnterState, PreviousUIState) == 0x000000, "Member 'FortUIStateWidget_OnEnterState::PreviousUIState' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget.OnExitState
// 0x0001 (0x0001 - 0x0000)
struct FortUIStateWidget_OnExitState final
{
public:
	EFortUIState                                  NextUIState;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_OnExitState) == 0x000001, "Wrong alignment on FortUIStateWidget_OnExitState");
static_assert(sizeof(FortUIStateWidget_OnExitState) == 0x000001, "Wrong size on FortUIStateWidget_OnExitState");
static_assert(offsetof(FortUIStateWidget_OnExitState, NextUIState) == 0x000000, "Member 'FortUIStateWidget_OnExitState::NextUIState' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_Login.CheckNetworkError
// 0x0001 (0x0001 - 0x0000)
struct FortUIStateWidget_Login_CheckNetworkError final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_Login_CheckNetworkError) == 0x000001, "Wrong alignment on FortUIStateWidget_Login_CheckNetworkError");
static_assert(sizeof(FortUIStateWidget_Login_CheckNetworkError) == 0x000001, "Wrong size on FortUIStateWidget_Login_CheckNetworkError");
static_assert(offsetof(FortUIStateWidget_Login_CheckNetworkError, ReturnValue) == 0x000000, "Member 'FortUIStateWidget_Login_CheckNetworkError::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_Login.IsLoggingOut
// 0x0001 (0x0001 - 0x0000)
struct FortUIStateWidget_Login_IsLoggingOut final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_Login_IsLoggingOut) == 0x000001, "Wrong alignment on FortUIStateWidget_Login_IsLoggingOut");
static_assert(sizeof(FortUIStateWidget_Login_IsLoggingOut) == 0x000001, "Wrong size on FortUIStateWidget_Login_IsLoggingOut");
static_assert(offsetof(FortUIStateWidget_Login_IsLoggingOut, ReturnValue) == 0x000000, "Member 'FortUIStateWidget_Login_IsLoggingOut::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_Login.OnEulaAvailable
// 0x0018 (0x0018 - 0x0000)
struct FortUIStateWidget_Login_OnEulaAvailable final
{
public:
	class FText                                   EulaText;                                          // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_Login_OnEulaAvailable) == 0x000008, "Wrong alignment on FortUIStateWidget_Login_OnEulaAvailable");
static_assert(sizeof(FortUIStateWidget_Login_OnEulaAvailable) == 0x000018, "Wrong size on FortUIStateWidget_Login_OnEulaAvailable");
static_assert(offsetof(FortUIStateWidget_Login_OnEulaAvailable, EulaText) == 0x000000, "Member 'FortUIStateWidget_Login_OnEulaAvailable::EulaText' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_Login.OnLoggedOutWithError
// 0x0018 (0x0018 - 0x0000)
struct FortUIStateWidget_Login_OnLoggedOutWithError final
{
public:
	class FText                                   ErrorText;                                         // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_Login_OnLoggedOutWithError) == 0x000008, "Wrong alignment on FortUIStateWidget_Login_OnLoggedOutWithError");
static_assert(sizeof(FortUIStateWidget_Login_OnLoggedOutWithError) == 0x000018, "Wrong size on FortUIStateWidget_Login_OnLoggedOutWithError");
static_assert(offsetof(FortUIStateWidget_Login_OnLoggedOutWithError, ErrorText) == 0x000000, "Member 'FortUIStateWidget_Login_OnLoggedOutWithError::ErrorText' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_Login.OnLoginFailed
// 0x0018 (0x0018 - 0x0000)
struct FortUIStateWidget_Login_OnLoginFailed final
{
public:
	class FText                                   Reason;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_Login_OnLoginFailed) == 0x000008, "Wrong alignment on FortUIStateWidget_Login_OnLoginFailed");
static_assert(sizeof(FortUIStateWidget_Login_OnLoginFailed) == 0x000018, "Wrong size on FortUIStateWidget_Login_OnLoginFailed");
static_assert(offsetof(FortUIStateWidget_Login_OnLoginFailed, Reason) == 0x000000, "Member 'FortUIStateWidget_Login_OnLoginFailed::Reason' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_Login.OnNeedsPurchaseOrAccountLinking
// 0x0001 (0x0001 - 0x0000)
struct FortUIStateWidget_Login_OnNeedsPurchaseOrAccountLinking final
{
public:
	bool                                          bLinkedAccountNeedsPurchase;                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_Login_OnNeedsPurchaseOrAccountLinking) == 0x000001, "Wrong alignment on FortUIStateWidget_Login_OnNeedsPurchaseOrAccountLinking");
static_assert(sizeof(FortUIStateWidget_Login_OnNeedsPurchaseOrAccountLinking) == 0x000001, "Wrong size on FortUIStateWidget_Login_OnNeedsPurchaseOrAccountLinking");
static_assert(offsetof(FortUIStateWidget_Login_OnNeedsPurchaseOrAccountLinking, bLinkedAccountNeedsPurchase) == 0x000000, "Member 'FortUIStateWidget_Login_OnNeedsPurchaseOrAccountLinking::bLinkedAccountNeedsPurchase' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_Login.OnPatchingComplete
// 0x0001 (0x0001 - 0x0000)
struct FortUIStateWidget_Login_OnPatchingComplete final
{
public:
	bool                                          bProceed;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_Login_OnPatchingComplete) == 0x000001, "Wrong alignment on FortUIStateWidget_Login_OnPatchingComplete");
static_assert(sizeof(FortUIStateWidget_Login_OnPatchingComplete) == 0x000001, "Wrong size on FortUIStateWidget_Login_OnPatchingComplete");
static_assert(offsetof(FortUIStateWidget_Login_OnPatchingComplete, bProceed) == 0x000000, "Member 'FortUIStateWidget_Login_OnPatchingComplete::bProceed' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_Login.OnPostLoginLogoutComplete
// 0x0018 (0x0018 - 0x0000)
struct FortUIStateWidget_Login_OnPostLoginLogoutComplete final
{
public:
	class FText                                   Reason;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_Login_OnPostLoginLogoutComplete) == 0x000008, "Wrong alignment on FortUIStateWidget_Login_OnPostLoginLogoutComplete");
static_assert(sizeof(FortUIStateWidget_Login_OnPostLoginLogoutComplete) == 0x000018, "Wrong size on FortUIStateWidget_Login_OnPostLoginLogoutComplete");
static_assert(offsetof(FortUIStateWidget_Login_OnPostLoginLogoutComplete, Reason) == 0x000000, "Member 'FortUIStateWidget_Login_OnPostLoginLogoutComplete::Reason' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_Login.OnShowHealthWarning
// 0x0010 (0x0010 - 0x0000)
struct FortUIStateWidget_Login_OnShowHealthWarning final
{
public:
	class FString                                 Country;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_Login_OnShowHealthWarning) == 0x000008, "Wrong alignment on FortUIStateWidget_Login_OnShowHealthWarning");
static_assert(sizeof(FortUIStateWidget_Login_OnShowHealthWarning) == 0x000010, "Wrong size on FortUIStateWidget_Login_OnShowHealthWarning");
static_assert(offsetof(FortUIStateWidget_Login_OnShowHealthWarning, Country) == 0x000000, "Member 'FortUIStateWidget_Login_OnShowHealthWarning::Country' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_Login.OnShowLoginMessage
// 0x0038 (0x0038 - 0x0000)
struct FortUIStateWidget_Login_OnShowLoginMessage final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Tile;                                              // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FText                                   Body;                                              // 0x0020(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_Login_OnShowLoginMessage) == 0x000008, "Wrong alignment on FortUIStateWidget_Login_OnShowLoginMessage");
static_assert(sizeof(FortUIStateWidget_Login_OnShowLoginMessage) == 0x000038, "Wrong size on FortUIStateWidget_Login_OnShowLoginMessage");
static_assert(offsetof(FortUIStateWidget_Login_OnShowLoginMessage, bShow) == 0x000000, "Member 'FortUIStateWidget_Login_OnShowLoginMessage::bShow' has a wrong offset!");
static_assert(offsetof(FortUIStateWidget_Login_OnShowLoginMessage, Tile) == 0x000008, "Member 'FortUIStateWidget_Login_OnShowLoginMessage::Tile' has a wrong offset!");
static_assert(offsetof(FortUIStateWidget_Login_OnShowLoginMessage, Body) == 0x000020, "Member 'FortUIStateWidget_Login_OnShowLoginMessage::Body' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_Login.SendEulaResponse
// 0x0001 (0x0001 - 0x0000)
struct FortUIStateWidget_Login_SendEulaResponse final
{
public:
	bool                                          bAccepted;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_Login_SendEulaResponse) == 0x000001, "Wrong alignment on FortUIStateWidget_Login_SendEulaResponse");
static_assert(sizeof(FortUIStateWidget_Login_SendEulaResponse) == 0x000001, "Wrong size on FortUIStateWidget_Login_SendEulaResponse");
static_assert(offsetof(FortUIStateWidget_Login_SendEulaResponse, bAccepted) == 0x000000, "Member 'FortUIStateWidget_Login_SendEulaResponse::bAccepted' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_Login.StartAutoLogin
// 0x0001 (0x0001 - 0x0000)
struct FortUIStateWidget_Login_StartAutoLogin final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_Login_StartAutoLogin) == 0x000001, "Wrong alignment on FortUIStateWidget_Login_StartAutoLogin");
static_assert(sizeof(FortUIStateWidget_Login_StartAutoLogin) == 0x000001, "Wrong size on FortUIStateWidget_Login_StartAutoLogin");
static_assert(offsetof(FortUIStateWidget_Login_StartAutoLogin, ReturnValue) == 0x000000, "Member 'FortUIStateWidget_Login_StartAutoLogin::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_Login.StartManualLogin
// 0x0028 (0x0028 - 0x0000)
struct FortUIStateWidget_Login_StartManualLogin final
{
public:
	class FString                                 InEmail;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InPassword;                                        // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortUIStateWidget_Login_StartManualLogin) == 0x000008, "Wrong alignment on FortUIStateWidget_Login_StartManualLogin");
static_assert(sizeof(FortUIStateWidget_Login_StartManualLogin) == 0x000028, "Wrong size on FortUIStateWidget_Login_StartManualLogin");
static_assert(offsetof(FortUIStateWidget_Login_StartManualLogin, InEmail) == 0x000000, "Member 'FortUIStateWidget_Login_StartManualLogin::InEmail' has a wrong offset!");
static_assert(offsetof(FortUIStateWidget_Login_StartManualLogin, InPassword) == 0x000010, "Member 'FortUIStateWidget_Login_StartManualLogin::InPassword' has a wrong offset!");
static_assert(offsetof(FortUIStateWidget_Login_StartManualLogin, ReturnValue) == 0x000020, "Member 'FortUIStateWidget_Login_StartManualLogin::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_Login.GetEULAText
// 0x0018 (0x0018 - 0x0000)
struct FortUIStateWidget_Login_GetEULAText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_Login_GetEULAText) == 0x000008, "Wrong alignment on FortUIStateWidget_Login_GetEULAText");
static_assert(sizeof(FortUIStateWidget_Login_GetEULAText) == 0x000018, "Wrong size on FortUIStateWidget_Login_GetEULAText");
static_assert(offsetof(FortUIStateWidget_Login_GetEULAText, ReturnValue) == 0x000000, "Member 'FortUIStateWidget_Login_GetEULAText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_Login.GetPlatformDisplayName
// 0x0018 (0x0018 - 0x0000)
struct FortUIStateWidget_Login_GetPlatformDisplayName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_Login_GetPlatformDisplayName) == 0x000008, "Wrong alignment on FortUIStateWidget_Login_GetPlatformDisplayName");
static_assert(sizeof(FortUIStateWidget_Login_GetPlatformDisplayName) == 0x000018, "Wrong size on FortUIStateWidget_Login_GetPlatformDisplayName");
static_assert(offsetof(FortUIStateWidget_Login_GetPlatformDisplayName, ReturnValue) == 0x000000, "Member 'FortUIStateWidget_Login_GetPlatformDisplayName::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUIStateWidget_Login.IsLoggedIn
// 0x0001 (0x0001 - 0x0000)
struct FortUIStateWidget_Login_IsLoggedIn final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUIStateWidget_Login_IsLoggedIn) == 0x000001, "Wrong alignment on FortUIStateWidget_Login_IsLoggedIn");
static_assert(sizeof(FortUIStateWidget_Login_IsLoggedIn) == 0x000001, "Wrong size on FortUIStateWidget_Login_IsLoggedIn");
static_assert(offsetof(FortUIStateWidget_Login_IsLoggedIn, ReturnValue) == 0x000000, "Member 'FortUIStateWidget_Login_IsLoggedIn::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortUserChoiceWidget.SetChoices
// 0x0030 (0x0030 - 0x0000)
struct FortUserChoiceWidget_SetChoices final
{
public:
	struct FChoiceData                            ChoiceItems;                                       // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortUserChoiceWidget_SetChoices) == 0x000008, "Wrong alignment on FortUserChoiceWidget_SetChoices");
static_assert(sizeof(FortUserChoiceWidget_SetChoices) == 0x000030, "Wrong size on FortUserChoiceWidget_SetChoices");
static_assert(offsetof(FortUserChoiceWidget_SetChoices, ChoiceItems) == 0x000000, "Member 'FortUserChoiceWidget_SetChoices::ChoiceItems' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.AntiAliasingQualityChanged
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_AntiAliasingQualityChanged final
{
public:
	int32                                         ButtonId;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_AntiAliasingQualityChanged) == 0x000004, "Wrong alignment on FortVideoOptions_AntiAliasingQualityChanged");
static_assert(sizeof(FortVideoOptions_AntiAliasingQualityChanged) == 0x000004, "Wrong size on FortVideoOptions_AntiAliasingQualityChanged");
static_assert(offsetof(FortVideoOptions_AntiAliasingQualityChanged, ButtonId) == 0x000000, "Member 'FortVideoOptions_AntiAliasingQualityChanged::ButtonId' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.DiscreteResolutionQualityChanged
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_DiscreteResolutionQualityChanged final
{
public:
	int32                                         ButtonId;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_DiscreteResolutionQualityChanged) == 0x000004, "Wrong alignment on FortVideoOptions_DiscreteResolutionQualityChanged");
static_assert(sizeof(FortVideoOptions_DiscreteResolutionQualityChanged) == 0x000004, "Wrong size on FortVideoOptions_DiscreteResolutionQualityChanged");
static_assert(offsetof(FortVideoOptions_DiscreteResolutionQualityChanged, ButtonId) == 0x000000, "Member 'FortVideoOptions_DiscreteResolutionQualityChanged::ButtonId' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.EffectsQualityChanged
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_EffectsQualityChanged final
{
public:
	int32                                         ButtonId;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_EffectsQualityChanged) == 0x000004, "Wrong alignment on FortVideoOptions_EffectsQualityChanged");
static_assert(sizeof(FortVideoOptions_EffectsQualityChanged) == 0x000004, "Wrong size on FortVideoOptions_EffectsQualityChanged");
static_assert(offsetof(FortVideoOptions_EffectsQualityChanged, ButtonId) == 0x000000, "Member 'FortVideoOptions_EffectsQualityChanged::ButtonId' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.FrameRateLimitChanged
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_FrameRateLimitChanged final
{
public:
	int32                                         FrameRateLimit;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_FrameRateLimitChanged) == 0x000004, "Wrong alignment on FortVideoOptions_FrameRateLimitChanged");
static_assert(sizeof(FortVideoOptions_FrameRateLimitChanged) == 0x000004, "Wrong size on FortVideoOptions_FrameRateLimitChanged");
static_assert(offsetof(FortVideoOptions_FrameRateLimitChanged, FrameRateLimit) == 0x000000, "Member 'FortVideoOptions_FrameRateLimitChanged::FrameRateLimit' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.GetAntiAliasingQuality
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_GetAntiAliasingQuality final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_GetAntiAliasingQuality) == 0x000004, "Wrong alignment on FortVideoOptions_GetAntiAliasingQuality");
static_assert(sizeof(FortVideoOptions_GetAntiAliasingQuality) == 0x000004, "Wrong size on FortVideoOptions_GetAntiAliasingQuality");
static_assert(offsetof(FortVideoOptions_GetAntiAliasingQuality, ReturnValue) == 0x000000, "Member 'FortVideoOptions_GetAntiAliasingQuality::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.GetCurrentDisplayResolution
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_GetCurrentDisplayResolution final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_GetCurrentDisplayResolution) == 0x000004, "Wrong alignment on FortVideoOptions_GetCurrentDisplayResolution");
static_assert(sizeof(FortVideoOptions_GetCurrentDisplayResolution) == 0x000004, "Wrong size on FortVideoOptions_GetCurrentDisplayResolution");
static_assert(offsetof(FortVideoOptions_GetCurrentDisplayResolution, ReturnValue) == 0x000000, "Member 'FortVideoOptions_GetCurrentDisplayResolution::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.GetCurrentFPS
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_GetCurrentFPS final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_GetCurrentFPS) == 0x000004, "Wrong alignment on FortVideoOptions_GetCurrentFPS");
static_assert(sizeof(FortVideoOptions_GetCurrentFPS) == 0x000004, "Wrong size on FortVideoOptions_GetCurrentFPS");
static_assert(offsetof(FortVideoOptions_GetCurrentFPS, ReturnValue) == 0x000000, "Member 'FortVideoOptions_GetCurrentFPS::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.GetCurrentWindowMode
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_GetCurrentWindowMode final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_GetCurrentWindowMode) == 0x000004, "Wrong alignment on FortVideoOptions_GetCurrentWindowMode");
static_assert(sizeof(FortVideoOptions_GetCurrentWindowMode) == 0x000004, "Wrong size on FortVideoOptions_GetCurrentWindowMode");
static_assert(offsetof(FortVideoOptions_GetCurrentWindowMode, ReturnValue) == 0x000000, "Member 'FortVideoOptions_GetCurrentWindowMode::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.GetDiscreteResolutionQuality
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_GetDiscreteResolutionQuality final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_GetDiscreteResolutionQuality) == 0x000004, "Wrong alignment on FortVideoOptions_GetDiscreteResolutionQuality");
static_assert(sizeof(FortVideoOptions_GetDiscreteResolutionQuality) == 0x000004, "Wrong size on FortVideoOptions_GetDiscreteResolutionQuality");
static_assert(offsetof(FortVideoOptions_GetDiscreteResolutionQuality, ReturnValue) == 0x000000, "Member 'FortVideoOptions_GetDiscreteResolutionQuality::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.GetEffectsQuality
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_GetEffectsQuality final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_GetEffectsQuality) == 0x000004, "Wrong alignment on FortVideoOptions_GetEffectsQuality");
static_assert(sizeof(FortVideoOptions_GetEffectsQuality) == 0x000004, "Wrong size on FortVideoOptions_GetEffectsQuality");
static_assert(offsetof(FortVideoOptions_GetEffectsQuality, ReturnValue) == 0x000000, "Member 'FortVideoOptions_GetEffectsQuality::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.GetMotionBlur
// 0x0001 (0x0001 - 0x0000)
struct FortVideoOptions_GetMotionBlur final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_GetMotionBlur) == 0x000001, "Wrong alignment on FortVideoOptions_GetMotionBlur");
static_assert(sizeof(FortVideoOptions_GetMotionBlur) == 0x000001, "Wrong size on FortVideoOptions_GetMotionBlur");
static_assert(offsetof(FortVideoOptions_GetMotionBlur, ReturnValue) == 0x000000, "Member 'FortVideoOptions_GetMotionBlur::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.GetPossibleDisplayResolutions
// 0x0010 (0x0010 - 0x0000)
struct FortVideoOptions_GetPossibleDisplayResolutions final
{
public:
	TArray<class FText>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_GetPossibleDisplayResolutions) == 0x000008, "Wrong alignment on FortVideoOptions_GetPossibleDisplayResolutions");
static_assert(sizeof(FortVideoOptions_GetPossibleDisplayResolutions) == 0x000010, "Wrong size on FortVideoOptions_GetPossibleDisplayResolutions");
static_assert(offsetof(FortVideoOptions_GetPossibleDisplayResolutions, ReturnValue) == 0x000000, "Member 'FortVideoOptions_GetPossibleDisplayResolutions::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.GetPossibleFPS
// 0x0010 (0x0010 - 0x0000)
struct FortVideoOptions_GetPossibleFPS final
{
public:
	TArray<class FText>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_GetPossibleFPS) == 0x000008, "Wrong alignment on FortVideoOptions_GetPossibleFPS");
static_assert(sizeof(FortVideoOptions_GetPossibleFPS) == 0x000010, "Wrong size on FortVideoOptions_GetPossibleFPS");
static_assert(offsetof(FortVideoOptions_GetPossibleFPS, ReturnValue) == 0x000000, "Member 'FortVideoOptions_GetPossibleFPS::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.GetPossibleWindowModes
// 0x0010 (0x0010 - 0x0000)
struct FortVideoOptions_GetPossibleWindowModes final
{
public:
	TArray<class FText>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_GetPossibleWindowModes) == 0x000008, "Wrong alignment on FortVideoOptions_GetPossibleWindowModes");
static_assert(sizeof(FortVideoOptions_GetPossibleWindowModes) == 0x000010, "Wrong size on FortVideoOptions_GetPossibleWindowModes");
static_assert(offsetof(FortVideoOptions_GetPossibleWindowModes, ReturnValue) == 0x000000, "Member 'FortVideoOptions_GetPossibleWindowModes::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.GetPostProcessQuality
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_GetPostProcessQuality final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_GetPostProcessQuality) == 0x000004, "Wrong alignment on FortVideoOptions_GetPostProcessQuality");
static_assert(sizeof(FortVideoOptions_GetPostProcessQuality) == 0x000004, "Wrong size on FortVideoOptions_GetPostProcessQuality");
static_assert(offsetof(FortVideoOptions_GetPostProcessQuality, ReturnValue) == 0x000000, "Member 'FortVideoOptions_GetPostProcessQuality::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.GetShadowQuality
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_GetShadowQuality final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_GetShadowQuality) == 0x000004, "Wrong alignment on FortVideoOptions_GetShadowQuality");
static_assert(sizeof(FortVideoOptions_GetShadowQuality) == 0x000004, "Wrong size on FortVideoOptions_GetShadowQuality");
static_assert(offsetof(FortVideoOptions_GetShadowQuality, ReturnValue) == 0x000000, "Member 'FortVideoOptions_GetShadowQuality::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.GetShowFPS
// 0x0001 (0x0001 - 0x0000)
struct FortVideoOptions_GetShowFPS final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_GetShowFPS) == 0x000001, "Wrong alignment on FortVideoOptions_GetShowFPS");
static_assert(sizeof(FortVideoOptions_GetShowFPS) == 0x000001, "Wrong size on FortVideoOptions_GetShowFPS");
static_assert(offsetof(FortVideoOptions_GetShowFPS, ReturnValue) == 0x000000, "Member 'FortVideoOptions_GetShowFPS::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.GetShowGrass
// 0x0001 (0x0001 - 0x0000)
struct FortVideoOptions_GetShowGrass final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_GetShowGrass) == 0x000001, "Wrong alignment on FortVideoOptions_GetShowGrass");
static_assert(sizeof(FortVideoOptions_GetShowGrass) == 0x000001, "Wrong size on FortVideoOptions_GetShowGrass");
static_assert(offsetof(FortVideoOptions_GetShowGrass, ReturnValue) == 0x000000, "Member 'FortVideoOptions_GetShowGrass::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.GetTextureQuality
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_GetTextureQuality final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_GetTextureQuality) == 0x000004, "Wrong alignment on FortVideoOptions_GetTextureQuality");
static_assert(sizeof(FortVideoOptions_GetTextureQuality) == 0x000004, "Wrong size on FortVideoOptions_GetTextureQuality");
static_assert(offsetof(FortVideoOptions_GetTextureQuality, ReturnValue) == 0x000000, "Member 'FortVideoOptions_GetTextureQuality::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.GetUseVsync
// 0x0001 (0x0001 - 0x0000)
struct FortVideoOptions_GetUseVsync final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_GetUseVsync) == 0x000001, "Wrong alignment on FortVideoOptions_GetUseVsync");
static_assert(sizeof(FortVideoOptions_GetUseVsync) == 0x000001, "Wrong size on FortVideoOptions_GetUseVsync");
static_assert(offsetof(FortVideoOptions_GetUseVsync, ReturnValue) == 0x000000, "Member 'FortVideoOptions_GetUseVsync::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.GetViewDistanceQuality
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_GetViewDistanceQuality final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_GetViewDistanceQuality) == 0x000004, "Wrong alignment on FortVideoOptions_GetViewDistanceQuality");
static_assert(sizeof(FortVideoOptions_GetViewDistanceQuality) == 0x000004, "Wrong size on FortVideoOptions_GetViewDistanceQuality");
static_assert(offsetof(FortVideoOptions_GetViewDistanceQuality, ReturnValue) == 0x000000, "Member 'FortVideoOptions_GetViewDistanceQuality::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.IsWindowedFullscreen
// 0x0008 (0x0008 - 0x0000)
struct FortVideoOptions_IsWindowedFullscreen final
{
public:
	int32                                         CurrentMode;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortVideoOptions_IsWindowedFullscreen) == 0x000004, "Wrong alignment on FortVideoOptions_IsWindowedFullscreen");
static_assert(sizeof(FortVideoOptions_IsWindowedFullscreen) == 0x000008, "Wrong size on FortVideoOptions_IsWindowedFullscreen");
static_assert(offsetof(FortVideoOptions_IsWindowedFullscreen, CurrentMode) == 0x000000, "Member 'FortVideoOptions_IsWindowedFullscreen::CurrentMode' has a wrong offset!");
static_assert(offsetof(FortVideoOptions_IsWindowedFullscreen, ReturnValue) == 0x000004, "Member 'FortVideoOptions_IsWindowedFullscreen::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.MotionBlurChanged
// 0x0001 (0x0001 - 0x0000)
struct FortVideoOptions_MotionBlurChanged final
{
public:
	bool                                          IsChecked;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_MotionBlurChanged) == 0x000001, "Wrong alignment on FortVideoOptions_MotionBlurChanged");
static_assert(sizeof(FortVideoOptions_MotionBlurChanged) == 0x000001, "Wrong size on FortVideoOptions_MotionBlurChanged");
static_assert(offsetof(FortVideoOptions_MotionBlurChanged, IsChecked) == 0x000000, "Member 'FortVideoOptions_MotionBlurChanged::IsChecked' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.OnQualitySelectorChanged
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_OnQualitySelectorChanged final
{
public:
	int32                                         ValueRef;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_OnQualitySelectorChanged) == 0x000004, "Wrong alignment on FortVideoOptions_OnQualitySelectorChanged");
static_assert(sizeof(FortVideoOptions_OnQualitySelectorChanged) == 0x000004, "Wrong size on FortVideoOptions_OnQualitySelectorChanged");
static_assert(offsetof(FortVideoOptions_OnQualitySelectorChanged, ValueRef) == 0x000000, "Member 'FortVideoOptions_OnQualitySelectorChanged::ValueRef' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.PostProcessQualityChanged
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_PostProcessQualityChanged final
{
public:
	int32                                         ButtonId;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_PostProcessQualityChanged) == 0x000004, "Wrong alignment on FortVideoOptions_PostProcessQualityChanged");
static_assert(sizeof(FortVideoOptions_PostProcessQualityChanged) == 0x000004, "Wrong size on FortVideoOptions_PostProcessQualityChanged");
static_assert(offsetof(FortVideoOptions_PostProcessQualityChanged, ButtonId) == 0x000000, "Member 'FortVideoOptions_PostProcessQualityChanged::ButtonId' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.ResolutionChanged
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_ResolutionChanged final
{
public:
	int32                                         NewResolution;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_ResolutionChanged) == 0x000004, "Wrong alignment on FortVideoOptions_ResolutionChanged");
static_assert(sizeof(FortVideoOptions_ResolutionChanged) == 0x000004, "Wrong size on FortVideoOptions_ResolutionChanged");
static_assert(offsetof(FortVideoOptions_ResolutionChanged, NewResolution) == 0x000000, "Member 'FortVideoOptions_ResolutionChanged::NewResolution' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.ShadowQualityChanged
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_ShadowQualityChanged final
{
public:
	int32                                         ButtonId;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_ShadowQualityChanged) == 0x000004, "Wrong alignment on FortVideoOptions_ShadowQualityChanged");
static_assert(sizeof(FortVideoOptions_ShadowQualityChanged) == 0x000004, "Wrong size on FortVideoOptions_ShadowQualityChanged");
static_assert(offsetof(FortVideoOptions_ShadowQualityChanged, ButtonId) == 0x000000, "Member 'FortVideoOptions_ShadowQualityChanged::ButtonId' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.ShowFPSChanged
// 0x0001 (0x0001 - 0x0000)
struct FortVideoOptions_ShowFPSChanged final
{
public:
	bool                                          IsChecked;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_ShowFPSChanged) == 0x000001, "Wrong alignment on FortVideoOptions_ShowFPSChanged");
static_assert(sizeof(FortVideoOptions_ShowFPSChanged) == 0x000001, "Wrong size on FortVideoOptions_ShowFPSChanged");
static_assert(offsetof(FortVideoOptions_ShowFPSChanged, IsChecked) == 0x000000, "Member 'FortVideoOptions_ShowFPSChanged::IsChecked' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.ShowGrassChanged
// 0x0001 (0x0001 - 0x0000)
struct FortVideoOptions_ShowGrassChanged final
{
public:
	bool                                          IsChecked;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_ShowGrassChanged) == 0x000001, "Wrong alignment on FortVideoOptions_ShowGrassChanged");
static_assert(sizeof(FortVideoOptions_ShowGrassChanged) == 0x000001, "Wrong size on FortVideoOptions_ShowGrassChanged");
static_assert(offsetof(FortVideoOptions_ShowGrassChanged, IsChecked) == 0x000000, "Member 'FortVideoOptions_ShowGrassChanged::IsChecked' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.TextureQualityChanged
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_TextureQualityChanged final
{
public:
	int32                                         ButtonId;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_TextureQualityChanged) == 0x000004, "Wrong alignment on FortVideoOptions_TextureQualityChanged");
static_assert(sizeof(FortVideoOptions_TextureQualityChanged) == 0x000004, "Wrong size on FortVideoOptions_TextureQualityChanged");
static_assert(offsetof(FortVideoOptions_TextureQualityChanged, ButtonId) == 0x000000, "Member 'FortVideoOptions_TextureQualityChanged::ButtonId' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.UseVsyncChanged
// 0x0001 (0x0001 - 0x0000)
struct FortVideoOptions_UseVsyncChanged final
{
public:
	bool                                          IsChecked;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_UseVsyncChanged) == 0x000001, "Wrong alignment on FortVideoOptions_UseVsyncChanged");
static_assert(sizeof(FortVideoOptions_UseVsyncChanged) == 0x000001, "Wrong size on FortVideoOptions_UseVsyncChanged");
static_assert(offsetof(FortVideoOptions_UseVsyncChanged, IsChecked) == 0x000000, "Member 'FortVideoOptions_UseVsyncChanged::IsChecked' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.ViewDistanceQualityChanged
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_ViewDistanceQualityChanged final
{
public:
	int32                                         ButtonId;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_ViewDistanceQualityChanged) == 0x000004, "Wrong alignment on FortVideoOptions_ViewDistanceQualityChanged");
static_assert(sizeof(FortVideoOptions_ViewDistanceQualityChanged) == 0x000004, "Wrong size on FortVideoOptions_ViewDistanceQualityChanged");
static_assert(offsetof(FortVideoOptions_ViewDistanceQualityChanged, ButtonId) == 0x000000, "Member 'FortVideoOptions_ViewDistanceQualityChanged::ButtonId' has a wrong offset!");

// Function FortniteUI.FortVideoOptions.WindowModeChanged
// 0x0004 (0x0004 - 0x0000)
struct FortVideoOptions_WindowModeChanged final
{
public:
	int32                                         NewMode;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortVideoOptions_WindowModeChanged) == 0x000004, "Wrong alignment on FortVideoOptions_WindowModeChanged");
static_assert(sizeof(FortVideoOptions_WindowModeChanged) == 0x000004, "Wrong size on FortVideoOptions_WindowModeChanged");
static_assert(offsetof(FortVideoOptions_WindowModeChanged, NewMode) == 0x000000, "Member 'FortVideoOptions_WindowModeChanged::NewMode' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotPicker.GetItemSlottingRestrictionReasonText
// 0x0020 (0x0020 - 0x0000)
struct FortItemGroupSlotPicker_GetItemSlottingRestrictionReasonText final
{
public:
	ESquadSlotItemRestrictionReason               Reason;                                            // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotPicker_GetItemSlottingRestrictionReasonText) == 0x000008, "Wrong alignment on FortItemGroupSlotPicker_GetItemSlottingRestrictionReasonText");
static_assert(sizeof(FortItemGroupSlotPicker_GetItemSlottingRestrictionReasonText) == 0x000020, "Wrong size on FortItemGroupSlotPicker_GetItemSlottingRestrictionReasonText");
static_assert(offsetof(FortItemGroupSlotPicker_GetItemSlottingRestrictionReasonText, Reason) == 0x000000, "Member 'FortItemGroupSlotPicker_GetItemSlottingRestrictionReasonText::Reason' has a wrong offset!");
static_assert(offsetof(FortItemGroupSlotPicker_GetItemSlottingRestrictionReasonText, ReturnValue) == 0x000008, "Member 'FortItemGroupSlotPicker_GetItemSlottingRestrictionReasonText::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotPicker.CreateSlottedItemDetailsWidget
// 0x0010 (0x0010 - 0x0000)
struct FortItemGroupSlotPicker_CreateSlottedItemDetailsWidget final
{
public:
	const class UFortItem*                        Item;                                              // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotPicker_CreateSlottedItemDetailsWidget) == 0x000008, "Wrong alignment on FortItemGroupSlotPicker_CreateSlottedItemDetailsWidget");
static_assert(sizeof(FortItemGroupSlotPicker_CreateSlottedItemDetailsWidget) == 0x000010, "Wrong size on FortItemGroupSlotPicker_CreateSlottedItemDetailsWidget");
static_assert(offsetof(FortItemGroupSlotPicker_CreateSlottedItemDetailsWidget, Item) == 0x000000, "Member 'FortItemGroupSlotPicker_CreateSlottedItemDetailsWidget::Item' has a wrong offset!");
static_assert(offsetof(FortItemGroupSlotPicker_CreateSlottedItemDetailsWidget, ReturnValue) == 0x000008, "Member 'FortItemGroupSlotPicker_CreateSlottedItemDetailsWidget::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotPicker.HandleItemSetInternal
// 0x0008 (0x0008 - 0x0000)
struct FortItemGroupSlotPicker_HandleItemSetInternal final
{
public:
	const class UFortItemGroupSlotWidget*         ItemGroupSlotWidget;                               // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotPicker_HandleItemSetInternal) == 0x000008, "Wrong alignment on FortItemGroupSlotPicker_HandleItemSetInternal");
static_assert(sizeof(FortItemGroupSlotPicker_HandleItemSetInternal) == 0x000008, "Wrong size on FortItemGroupSlotPicker_HandleItemSetInternal");
static_assert(offsetof(FortItemGroupSlotPicker_HandleItemSetInternal, ItemGroupSlotWidget) == 0x000000, "Member 'FortItemGroupSlotPicker_HandleItemSetInternal::ItemGroupSlotWidget' has a wrong offset!");

// DelegateFunction FortniteUI.FortItemGroupSlotPicker.OnItemPickerSelectionChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FortItemGroupSlotPicker_OnItemPickerSelectionChanged__DelegateSignature final
{
public:
	class UFortItem*                              SelectedItem;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotPicker_OnItemPickerSelectionChanged__DelegateSignature) == 0x000008, "Wrong alignment on FortItemGroupSlotPicker_OnItemPickerSelectionChanged__DelegateSignature");
static_assert(sizeof(FortItemGroupSlotPicker_OnItemPickerSelectionChanged__DelegateSignature) == 0x000008, "Wrong size on FortItemGroupSlotPicker_OnItemPickerSelectionChanged__DelegateSignature");
static_assert(offsetof(FortItemGroupSlotPicker_OnItemPickerSelectionChanged__DelegateSignature, SelectedItem) == 0x000000, "Member 'FortItemGroupSlotPicker_OnItemPickerSelectionChanged__DelegateSignature::SelectedItem' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotPicker.SetSelection
// 0x0008 (0x0008 - 0x0000)
struct FortItemGroupSlotPicker_SetSelection final
{
public:
	const class UFortItem*                        SelectedItem;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotPicker_SetSelection) == 0x000008, "Wrong alignment on FortItemGroupSlotPicker_SetSelection");
static_assert(sizeof(FortItemGroupSlotPicker_SetSelection) == 0x000008, "Wrong size on FortItemGroupSlotPicker_SetSelection");
static_assert(offsetof(FortItemGroupSlotPicker_SetSelection, SelectedItem) == 0x000000, "Member 'FortItemGroupSlotPicker_SetSelection::SelectedItem' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotPicker.SignalSelectionCommitted
// 0x0008 (0x0008 - 0x0000)
struct FortItemGroupSlotPicker_SignalSelectionCommitted final
{
public:
	const class UFortItem*                        SelectedItem;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotPicker_SignalSelectionCommitted) == 0x000008, "Wrong alignment on FortItemGroupSlotPicker_SignalSelectionCommitted");
static_assert(sizeof(FortItemGroupSlotPicker_SignalSelectionCommitted) == 0x000008, "Wrong size on FortItemGroupSlotPicker_SignalSelectionCommitted");
static_assert(offsetof(FortItemGroupSlotPicker_SignalSelectionCommitted, SelectedItem) == 0x000000, "Member 'FortItemGroupSlotPicker_SignalSelectionCommitted::SelectedItem' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotPicker.DetectCandidateSynergiesAndMatches
// 0x0010 (0x0010 - 0x0000)
struct FortItemGroupSlotPicker_DetectCandidateSynergiesAndMatches final
{
public:
	const class UFortItem*                        Candidate;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutHasSquadManagerSynergy;                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutHasPersonalitySynergy;                          // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutHasSetBonusMatch;                               // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemGroupSlotPicker_DetectCandidateSynergiesAndMatches) == 0x000008, "Wrong alignment on FortItemGroupSlotPicker_DetectCandidateSynergiesAndMatches");
static_assert(sizeof(FortItemGroupSlotPicker_DetectCandidateSynergiesAndMatches) == 0x000010, "Wrong size on FortItemGroupSlotPicker_DetectCandidateSynergiesAndMatches");
static_assert(offsetof(FortItemGroupSlotPicker_DetectCandidateSynergiesAndMatches, Candidate) == 0x000000, "Member 'FortItemGroupSlotPicker_DetectCandidateSynergiesAndMatches::Candidate' has a wrong offset!");
static_assert(offsetof(FortItemGroupSlotPicker_DetectCandidateSynergiesAndMatches, OutHasSquadManagerSynergy) == 0x000008, "Member 'FortItemGroupSlotPicker_DetectCandidateSynergiesAndMatches::OutHasSquadManagerSynergy' has a wrong offset!");
static_assert(offsetof(FortItemGroupSlotPicker_DetectCandidateSynergiesAndMatches, OutHasPersonalitySynergy) == 0x000009, "Member 'FortItemGroupSlotPicker_DetectCandidateSynergiesAndMatches::OutHasPersonalitySynergy' has a wrong offset!");
static_assert(offsetof(FortItemGroupSlotPicker_DetectCandidateSynergiesAndMatches, OutHasSetBonusMatch) == 0x00000A, "Member 'FortItemGroupSlotPicker_DetectCandidateSynergiesAndMatches::OutHasSetBonusMatch' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotPicker.GetCandidateFitnessValueForSlot
// 0x0010 (0x0010 - 0x0000)
struct FortItemGroupSlotPicker_GetCandidateFitnessValueForSlot final
{
public:
	const class UFortItem*                        Candidate;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemGroupSlotPicker_GetCandidateFitnessValueForSlot) == 0x000008, "Wrong alignment on FortItemGroupSlotPicker_GetCandidateFitnessValueForSlot");
static_assert(sizeof(FortItemGroupSlotPicker_GetCandidateFitnessValueForSlot) == 0x000010, "Wrong size on FortItemGroupSlotPicker_GetCandidateFitnessValueForSlot");
static_assert(offsetof(FortItemGroupSlotPicker_GetCandidateFitnessValueForSlot, Candidate) == 0x000000, "Member 'FortItemGroupSlotPicker_GetCandidateFitnessValueForSlot::Candidate' has a wrong offset!");
static_assert(offsetof(FortItemGroupSlotPicker_GetCandidateFitnessValueForSlot, ReturnValue) == 0x000008, "Member 'FortItemGroupSlotPicker_GetCandidateFitnessValueForSlot::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotPicker.GetCandidateItemSlottingRestrictions
// 0x0018 (0x0018 - 0x0000)
struct FortItemGroupSlotPicker_GetCandidateItemSlottingRestrictions final
{
public:
	const class UFortItem*                        CandidateItem;                                     // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<ESquadSlotItemRestrictionReason>       OutRestrictions;                                   // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotPicker_GetCandidateItemSlottingRestrictions) == 0x000008, "Wrong alignment on FortItemGroupSlotPicker_GetCandidateItemSlottingRestrictions");
static_assert(sizeof(FortItemGroupSlotPicker_GetCandidateItemSlottingRestrictions) == 0x000018, "Wrong size on FortItemGroupSlotPicker_GetCandidateItemSlottingRestrictions");
static_assert(offsetof(FortItemGroupSlotPicker_GetCandidateItemSlottingRestrictions, CandidateItem) == 0x000000, "Member 'FortItemGroupSlotPicker_GetCandidateItemSlottingRestrictions::CandidateItem' has a wrong offset!");
static_assert(offsetof(FortItemGroupSlotPicker_GetCandidateItemSlottingRestrictions, OutRestrictions) == 0x000008, "Member 'FortItemGroupSlotPicker_GetCandidateItemSlottingRestrictions::OutRestrictions' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotPicker.GetCompatibleCandidateItems
// 0x0010 (0x0010 - 0x0000)
struct FortItemGroupSlotPicker_GetCompatibleCandidateItems final
{
public:
	TArray<class UFortItem*>                      ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotPicker_GetCompatibleCandidateItems) == 0x000008, "Wrong alignment on FortItemGroupSlotPicker_GetCompatibleCandidateItems");
static_assert(sizeof(FortItemGroupSlotPicker_GetCompatibleCandidateItems) == 0x000010, "Wrong size on FortItemGroupSlotPicker_GetCompatibleCandidateItems");
static_assert(offsetof(FortItemGroupSlotPicker_GetCompatibleCandidateItems, ReturnValue) == 0x000000, "Member 'FortItemGroupSlotPicker_GetCompatibleCandidateItems::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotPicker.GetCurrentlySlottedItem
// 0x0008 (0x0008 - 0x0000)
struct FortItemGroupSlotPicker_GetCurrentlySlottedItem final
{
public:
	class UFortItem*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotPicker_GetCurrentlySlottedItem) == 0x000008, "Wrong alignment on FortItemGroupSlotPicker_GetCurrentlySlottedItem");
static_assert(sizeof(FortItemGroupSlotPicker_GetCurrentlySlottedItem) == 0x000008, "Wrong size on FortItemGroupSlotPicker_GetCurrentlySlottedItem");
static_assert(offsetof(FortItemGroupSlotPicker_GetCurrentlySlottedItem, ReturnValue) == 0x000000, "Member 'FortItemGroupSlotPicker_GetCurrentlySlottedItem::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotPicker.GetSlotIndexInGroup
// 0x0004 (0x0004 - 0x0000)
struct FortItemGroupSlotPicker_GetSlotIndexInGroup final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotPicker_GetSlotIndexInGroup) == 0x000004, "Wrong alignment on FortItemGroupSlotPicker_GetSlotIndexInGroup");
static_assert(sizeof(FortItemGroupSlotPicker_GetSlotIndexInGroup) == 0x000004, "Wrong size on FortItemGroupSlotPicker_GetSlotIndexInGroup");
static_assert(offsetof(FortItemGroupSlotPicker_GetSlotIndexInGroup, ReturnValue) == 0x000000, "Member 'FortItemGroupSlotPicker_GetSlotIndexInGroup::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemGroupSlotPicker.GetSquadId
// 0x0008 (0x0008 - 0x0000)
struct FortItemGroupSlotPicker_GetSquadId final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupSlotPicker_GetSquadId) == 0x000004, "Wrong alignment on FortItemGroupSlotPicker_GetSquadId");
static_assert(sizeof(FortItemGroupSlotPicker_GetSquadId) == 0x000008, "Wrong size on FortItemGroupSlotPicker_GetSquadId");
static_assert(offsetof(FortItemGroupSlotPicker_GetSquadId, ReturnValue) == 0x000000, "Member 'FortItemGroupSlotPicker_GetSquadId::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemGroupWidget.HandleItemSlotAdded
// 0x0010 (0x0010 - 0x0000)
struct FortItemGroupWidget_HandleItemSlotAdded final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItemGroupSlotWidget*               ItemSlotWidget;                                    // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupWidget_HandleItemSlotAdded) == 0x000008, "Wrong alignment on FortItemGroupWidget_HandleItemSlotAdded");
static_assert(sizeof(FortItemGroupWidget_HandleItemSlotAdded) == 0x000010, "Wrong size on FortItemGroupWidget_HandleItemSlotAdded");
static_assert(offsetof(FortItemGroupWidget_HandleItemSlotAdded, SlotIndex) == 0x000000, "Member 'FortItemGroupWidget_HandleItemSlotAdded::SlotIndex' has a wrong offset!");
static_assert(offsetof(FortItemGroupWidget_HandleItemSlotAdded, ItemSlotWidget) == 0x000008, "Member 'FortItemGroupWidget_HandleItemSlotAdded::ItemSlotWidget' has a wrong offset!");

// Function FortniteUI.FortItemGroupWidget.SetSquad
// 0x0008 (0x0008 - 0x0000)
struct FortItemGroupWidget_SetSquad final
{
public:
	class FName                                   Param_SquadId;                                     // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupWidget_SetSquad) == 0x000004, "Wrong alignment on FortItemGroupWidget_SetSquad");
static_assert(sizeof(FortItemGroupWidget_SetSquad) == 0x000008, "Wrong size on FortItemGroupWidget_SetSquad");
static_assert(offsetof(FortItemGroupWidget_SetSquad, Param_SquadId) == 0x000000, "Member 'FortItemGroupWidget_SetSquad::Param_SquadId' has a wrong offset!");

// Function FortniteUI.FortItemGroupWidget.GetActiveSetBonusTags
// 0x0010 (0x0010 - 0x0000)
struct FortItemGroupWidget_GetActiveSetBonusTags final
{
public:
	TArray<struct FGameplayTag>                   OutActiveSetBonusTags;                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupWidget_GetActiveSetBonusTags) == 0x000008, "Wrong alignment on FortItemGroupWidget_GetActiveSetBonusTags");
static_assert(sizeof(FortItemGroupWidget_GetActiveSetBonusTags) == 0x000010, "Wrong size on FortItemGroupWidget_GetActiveSetBonusTags");
static_assert(offsetof(FortItemGroupWidget_GetActiveSetBonusTags, OutActiveSetBonusTags) == 0x000000, "Member 'FortItemGroupWidget_GetActiveSetBonusTags::OutActiveSetBonusTags' has a wrong offset!");

// Function FortniteUI.FortItemGroupWidget.GetSquadId
// 0x0008 (0x0008 - 0x0000)
struct FortItemGroupWidget_GetSquadId final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupWidget_GetSquadId) == 0x000004, "Wrong alignment on FortItemGroupWidget_GetSquadId");
static_assert(sizeof(FortItemGroupWidget_GetSquadId) == 0x000008, "Wrong size on FortItemGroupWidget_GetSquadId");
static_assert(offsetof(FortItemGroupWidget_GetSquadId, ReturnValue) == 0x000000, "Member 'FortItemGroupWidget_GetSquadId::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortItemGroupWidget.GetTotalAttributeBonuses
// 0x0010 (0x0010 - 0x0000)
struct FortItemGroupWidget_GetTotalAttributeBonuses final
{
public:
	TArray<struct FFortAttributeModifierDisplayData> OutModifiers;                                      // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortItemGroupWidget_GetTotalAttributeBonuses) == 0x000008, "Wrong alignment on FortItemGroupWidget_GetTotalAttributeBonuses");
static_assert(sizeof(FortItemGroupWidget_GetTotalAttributeBonuses) == 0x000010, "Wrong size on FortItemGroupWidget_GetTotalAttributeBonuses");
static_assert(offsetof(FortItemGroupWidget_GetTotalAttributeBonuses, OutModifiers) == 0x000000, "Member 'FortItemGroupWidget_GetTotalAttributeBonuses::OutModifiers' has a wrong offset!");

// Function FortniteUI.FortItemGroupWidget.TryGetSquad
// 0x0090 (0x0090 - 0x0000)
struct FortItemGroupWidget_TryGetSquad final
{
public:
	struct FHomebaseSquad                         OutSquad;                                          // 0x0000(0x0088)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0088(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FortItemGroupWidget_TryGetSquad) == 0x000008, "Wrong alignment on FortItemGroupWidget_TryGetSquad");
static_assert(sizeof(FortItemGroupWidget_TryGetSquad) == 0x000090, "Wrong size on FortItemGroupWidget_TryGetSquad");
static_assert(offsetof(FortItemGroupWidget_TryGetSquad, OutSquad) == 0x000000, "Member 'FortItemGroupWidget_TryGetSquad::OutSquad' has a wrong offset!");
static_assert(offsetof(FortItemGroupWidget_TryGetSquad, ReturnValue) == 0x000088, "Member 'FortItemGroupWidget_TryGetSquad::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSeasonPassLevelInfo.GetLevel
// 0x0004 (0x0004 - 0x0000)
struct FortSeasonPassLevelInfo_GetLevel final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSeasonPassLevelInfo_GetLevel) == 0x000004, "Wrong alignment on FortSeasonPassLevelInfo_GetLevel");
static_assert(sizeof(FortSeasonPassLevelInfo_GetLevel) == 0x000004, "Wrong size on FortSeasonPassLevelInfo_GetLevel");
static_assert(offsetof(FortSeasonPassLevelInfo_GetLevel, ReturnValue) == 0x000000, "Member 'FortSeasonPassLevelInfo_GetLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSeasonPassLevelInfo.GetLevelProgress
// 0x0004 (0x0004 - 0x0000)
struct FortSeasonPassLevelInfo_GetLevelProgress final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSeasonPassLevelInfo_GetLevelProgress) == 0x000004, "Wrong alignment on FortSeasonPassLevelInfo_GetLevelProgress");
static_assert(sizeof(FortSeasonPassLevelInfo_GetLevelProgress) == 0x000004, "Wrong size on FortSeasonPassLevelInfo_GetLevelProgress");
static_assert(offsetof(FortSeasonPassLevelInfo_GetLevelProgress, ReturnValue) == 0x000000, "Member 'FortSeasonPassLevelInfo_GetLevelProgress::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSeasonPassLevelInfo.GetNumRewardItems
// 0x0008 (0x0008 - 0x0000)
struct FortSeasonPassLevelInfo_GetNumRewardItems final
{
public:
	EAthenaSeasonRewardTrack                      Track;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSeasonPassLevelInfo_GetNumRewardItems) == 0x000004, "Wrong alignment on FortSeasonPassLevelInfo_GetNumRewardItems");
static_assert(sizeof(FortSeasonPassLevelInfo_GetNumRewardItems) == 0x000008, "Wrong size on FortSeasonPassLevelInfo_GetNumRewardItems");
static_assert(offsetof(FortSeasonPassLevelInfo_GetNumRewardItems, Track) == 0x000000, "Member 'FortSeasonPassLevelInfo_GetNumRewardItems::Track' has a wrong offset!");
static_assert(offsetof(FortSeasonPassLevelInfo_GetNumRewardItems, ReturnValue) == 0x000004, "Member 'FortSeasonPassLevelInfo_GetNumRewardItems::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSeasonPassLevelInfo.GetRewardItems
// 0x0018 (0x0018 - 0x0000)
struct FortSeasonPassLevelInfo_GetRewardItems final
{
public:
	EAthenaSeasonRewardTrack                      Track;                                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortItem*>                      ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSeasonPassLevelInfo_GetRewardItems) == 0x000008, "Wrong alignment on FortSeasonPassLevelInfo_GetRewardItems");
static_assert(sizeof(FortSeasonPassLevelInfo_GetRewardItems) == 0x000018, "Wrong size on FortSeasonPassLevelInfo_GetRewardItems");
static_assert(offsetof(FortSeasonPassLevelInfo_GetRewardItems, Track) == 0x000000, "Member 'FortSeasonPassLevelInfo_GetRewardItems::Track' has a wrong offset!");
static_assert(offsetof(FortSeasonPassLevelInfo_GetRewardItems, ReturnValue) == 0x000008, "Member 'FortSeasonPassLevelInfo_GetRewardItems::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSeasonPassLevelInfo.GetSeasonPassMaxLevel
// 0x0004 (0x0004 - 0x0000)
struct FortSeasonPassLevelInfo_GetSeasonPassMaxLevel final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSeasonPassLevelInfo_GetSeasonPassMaxLevel) == 0x000004, "Wrong alignment on FortSeasonPassLevelInfo_GetSeasonPassMaxLevel");
static_assert(sizeof(FortSeasonPassLevelInfo_GetSeasonPassMaxLevel) == 0x000004, "Wrong size on FortSeasonPassLevelInfo_GetSeasonPassMaxLevel");
static_assert(offsetof(FortSeasonPassLevelInfo_GetSeasonPassMaxLevel, ReturnValue) == 0x000000, "Member 'FortSeasonPassLevelInfo_GetSeasonPassMaxLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSeasonPassLevelInfo.IsFreeClaimed
// 0x0001 (0x0001 - 0x0000)
struct FortSeasonPassLevelInfo_IsFreeClaimed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSeasonPassLevelInfo_IsFreeClaimed) == 0x000001, "Wrong alignment on FortSeasonPassLevelInfo_IsFreeClaimed");
static_assert(sizeof(FortSeasonPassLevelInfo_IsFreeClaimed) == 0x000001, "Wrong size on FortSeasonPassLevelInfo_IsFreeClaimed");
static_assert(offsetof(FortSeasonPassLevelInfo_IsFreeClaimed, ReturnValue) == 0x000000, "Member 'FortSeasonPassLevelInfo_IsFreeClaimed::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSeasonPassLevelInfo.IsFreeUnlocked
// 0x0001 (0x0001 - 0x0000)
struct FortSeasonPassLevelInfo_IsFreeUnlocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSeasonPassLevelInfo_IsFreeUnlocked) == 0x000001, "Wrong alignment on FortSeasonPassLevelInfo_IsFreeUnlocked");
static_assert(sizeof(FortSeasonPassLevelInfo_IsFreeUnlocked) == 0x000001, "Wrong size on FortSeasonPassLevelInfo_IsFreeUnlocked");
static_assert(offsetof(FortSeasonPassLevelInfo_IsFreeUnlocked, ReturnValue) == 0x000000, "Member 'FortSeasonPassLevelInfo_IsFreeUnlocked::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSeasonPassLevelInfo.IsPaidClaimed
// 0x0001 (0x0001 - 0x0000)
struct FortSeasonPassLevelInfo_IsPaidClaimed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSeasonPassLevelInfo_IsPaidClaimed) == 0x000001, "Wrong alignment on FortSeasonPassLevelInfo_IsPaidClaimed");
static_assert(sizeof(FortSeasonPassLevelInfo_IsPaidClaimed) == 0x000001, "Wrong size on FortSeasonPassLevelInfo_IsPaidClaimed");
static_assert(offsetof(FortSeasonPassLevelInfo_IsPaidClaimed, ReturnValue) == 0x000000, "Member 'FortSeasonPassLevelInfo_IsPaidClaimed::ReturnValue' has a wrong offset!");

// Function FortniteUI.FortSeasonPassLevelInfo.IsPaidUnlocked
// 0x0001 (0x0001 - 0x0000)
struct FortSeasonPassLevelInfo_IsPaidUnlocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FortSeasonPassLevelInfo_IsPaidUnlocked) == 0x000001, "Wrong alignment on FortSeasonPassLevelInfo_IsPaidUnlocked");
static_assert(sizeof(FortSeasonPassLevelInfo_IsPaidUnlocked) == 0x000001, "Wrong size on FortSeasonPassLevelInfo_IsPaidUnlocked");
static_assert(offsetof(FortSeasonPassLevelInfo_IsPaidUnlocked, ReturnValue) == 0x000000, "Member 'FortSeasonPassLevelInfo_IsPaidUnlocked::ReturnValue' has a wrong offset!");

// Function FortniteUI.SeasonPassLevelPanel.OnLockedStatusChanged
// 0x0002 (0x0002 - 0x0000)
struct SeasonPassLevelPanel_OnLockedStatusChanged final
{
public:
	bool                                          FreeUnlocked;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PaidUnlocked;                                      // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SeasonPassLevelPanel_OnLockedStatusChanged) == 0x000001, "Wrong alignment on SeasonPassLevelPanel_OnLockedStatusChanged");
static_assert(sizeof(SeasonPassLevelPanel_OnLockedStatusChanged) == 0x000002, "Wrong size on SeasonPassLevelPanel_OnLockedStatusChanged");
static_assert(offsetof(SeasonPassLevelPanel_OnLockedStatusChanged, FreeUnlocked) == 0x000000, "Member 'SeasonPassLevelPanel_OnLockedStatusChanged::FreeUnlocked' has a wrong offset!");
static_assert(offsetof(SeasonPassLevelPanel_OnLockedStatusChanged, PaidUnlocked) == 0x000001, "Member 'SeasonPassLevelPanel_OnLockedStatusChanged::PaidUnlocked' has a wrong offset!");

// Function FortniteUI.SeasonPassLevelPanel.Setup
// 0x0008 (0x0008 - 0x0000)
struct SeasonPassLevelPanel_Setup final
{
public:
	class UFortSeasonPassLevelInfo*               Info;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SeasonPassLevelPanel_Setup) == 0x000008, "Wrong alignment on SeasonPassLevelPanel_Setup");
static_assert(sizeof(SeasonPassLevelPanel_Setup) == 0x000008, "Wrong size on SeasonPassLevelPanel_Setup");
static_assert(offsetof(SeasonPassLevelPanel_Setup, Info) == 0x000000, "Member 'SeasonPassLevelPanel_Setup::Info' has a wrong offset!");

// Function FortniteUI.SeasonPassLevelPanel.GetLevelInfo
// 0x0008 (0x0008 - 0x0000)
struct SeasonPassLevelPanel_GetLevelInfo final
{
public:
	class UFortSeasonPassLevelInfo*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SeasonPassLevelPanel_GetLevelInfo) == 0x000008, "Wrong alignment on SeasonPassLevelPanel_GetLevelInfo");
static_assert(sizeof(SeasonPassLevelPanel_GetLevelInfo) == 0x000008, "Wrong size on SeasonPassLevelPanel_GetLevelInfo");
static_assert(offsetof(SeasonPassLevelPanel_GetLevelInfo, ReturnValue) == 0x000000, "Member 'SeasonPassLevelPanel_GetLevelInfo::ReturnValue' has a wrong offset!");

// Function FortniteUI.SeasonPassScreenBase.GenerateLevelWidgets
// 0x0018 (0x0018 - 0x0000)
struct SeasonPassScreenBase_GenerateLevelWidgets final
{
public:
	class UFortSeasonPassLevelInfo*               LevelInfo;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USeasonPassLevelWidget*>         ReturnValue;                                       // 0x0008(0x0010)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(SeasonPassScreenBase_GenerateLevelWidgets) == 0x000008, "Wrong alignment on SeasonPassScreenBase_GenerateLevelWidgets");
static_assert(sizeof(SeasonPassScreenBase_GenerateLevelWidgets) == 0x000018, "Wrong size on SeasonPassScreenBase_GenerateLevelWidgets");
static_assert(offsetof(SeasonPassScreenBase_GenerateLevelWidgets, LevelInfo) == 0x000000, "Member 'SeasonPassScreenBase_GenerateLevelWidgets::LevelInfo' has a wrong offset!");
static_assert(offsetof(SeasonPassScreenBase_GenerateLevelWidgets, ReturnValue) == 0x000008, "Member 'SeasonPassScreenBase_GenerateLevelWidgets::ReturnValue' has a wrong offset!");

// Function FortniteUI.SeasonPassScreenBase.NavigateToLevel
// 0x0004 (0x0004 - 0x0000)
struct SeasonPassScreenBase_NavigateToLevel final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SeasonPassScreenBase_NavigateToLevel) == 0x000004, "Wrong alignment on SeasonPassScreenBase_NavigateToLevel");
static_assert(sizeof(SeasonPassScreenBase_NavigateToLevel) == 0x000004, "Wrong size on SeasonPassScreenBase_NavigateToLevel");
static_assert(offsetof(SeasonPassScreenBase_NavigateToLevel, Level) == 0x000000, "Member 'SeasonPassScreenBase_NavigateToLevel::Level' has a wrong offset!");

// Function FortniteUI.SeasonPassScreenBase.OnNavigateToLevel
// 0x0004 (0x0004 - 0x0000)
struct SeasonPassScreenBase_OnNavigateToLevel final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SeasonPassScreenBase_OnNavigateToLevel) == 0x000004, "Wrong alignment on SeasonPassScreenBase_OnNavigateToLevel");
static_assert(sizeof(SeasonPassScreenBase_OnNavigateToLevel) == 0x000004, "Wrong size on SeasonPassScreenBase_OnNavigateToLevel");
static_assert(offsetof(SeasonPassScreenBase_OnNavigateToLevel, Level) == 0x000000, "Member 'SeasonPassScreenBase_OnNavigateToLevel::Level' has a wrong offset!");

// Function FortniteUI.SeasonPassScreenBase.GetAllLevelInfos
// 0x0050 (0x0050 - 0x0000)
struct SeasonPassScreenBase_GetAllLevelInfos final
{
public:
	TMap<int32, class UFortSeasonPassLevelInfo*>  ReturnValue;                                       // 0x0000(0x0050)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SeasonPassScreenBase_GetAllLevelInfos) == 0x000008, "Wrong alignment on SeasonPassScreenBase_GetAllLevelInfos");
static_assert(sizeof(SeasonPassScreenBase_GetAllLevelInfos) == 0x000050, "Wrong size on SeasonPassScreenBase_GetAllLevelInfos");
static_assert(offsetof(SeasonPassScreenBase_GetAllLevelInfos, ReturnValue) == 0x000000, "Member 'SeasonPassScreenBase_GetAllLevelInfos::ReturnValue' has a wrong offset!");

// Function FortniteUI.SeasonPassScreenBase.GetLevelInfo
// 0x0010 (0x0010 - 0x0000)
struct SeasonPassScreenBase_GetLevelInfo final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortSeasonPassLevelInfo*               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SeasonPassScreenBase_GetLevelInfo) == 0x000008, "Wrong alignment on SeasonPassScreenBase_GetLevelInfo");
static_assert(sizeof(SeasonPassScreenBase_GetLevelInfo) == 0x000010, "Wrong size on SeasonPassScreenBase_GetLevelInfo");
static_assert(offsetof(SeasonPassScreenBase_GetLevelInfo, Level) == 0x000000, "Member 'SeasonPassScreenBase_GetLevelInfo::Level' has a wrong offset!");
static_assert(offsetof(SeasonPassScreenBase_GetLevelInfo, ReturnValue) == 0x000008, "Member 'SeasonPassScreenBase_GetLevelInfo::ReturnValue' has a wrong offset!");

// Function FortniteUI.SeasonPassScreenBase.GetSeasonEndDate
// 0x0008 (0x0008 - 0x0000)
struct SeasonPassScreenBase_GetSeasonEndDate final
{
public:
	struct FDateTime                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SeasonPassScreenBase_GetSeasonEndDate) == 0x000008, "Wrong alignment on SeasonPassScreenBase_GetSeasonEndDate");
static_assert(sizeof(SeasonPassScreenBase_GetSeasonEndDate) == 0x000008, "Wrong size on SeasonPassScreenBase_GetSeasonEndDate");
static_assert(offsetof(SeasonPassScreenBase_GetSeasonEndDate, ReturnValue) == 0x000000, "Member 'SeasonPassScreenBase_GetSeasonEndDate::ReturnValue' has a wrong offset!");

// Function FortniteUI.SeasonPassScreenBase.GetSeasonPassLevel
// 0x0004 (0x0004 - 0x0000)
struct SeasonPassScreenBase_GetSeasonPassLevel final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SeasonPassScreenBase_GetSeasonPassLevel) == 0x000004, "Wrong alignment on SeasonPassScreenBase_GetSeasonPassLevel");
static_assert(sizeof(SeasonPassScreenBase_GetSeasonPassLevel) == 0x000004, "Wrong size on SeasonPassScreenBase_GetSeasonPassLevel");
static_assert(offsetof(SeasonPassScreenBase_GetSeasonPassLevel, ReturnValue) == 0x000000, "Member 'SeasonPassScreenBase_GetSeasonPassLevel::ReturnValue' has a wrong offset!");

// Function FortniteUI.SeasonPassScreenBase.GetSeasonPassLevelMax
// 0x0004 (0x0004 - 0x0000)
struct SeasonPassScreenBase_GetSeasonPassLevelMax final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SeasonPassScreenBase_GetSeasonPassLevelMax) == 0x000004, "Wrong alignment on SeasonPassScreenBase_GetSeasonPassLevelMax");
static_assert(sizeof(SeasonPassScreenBase_GetSeasonPassLevelMax) == 0x000004, "Wrong size on SeasonPassScreenBase_GetSeasonPassLevelMax");
static_assert(offsetof(SeasonPassScreenBase_GetSeasonPassLevelMax, ReturnValue) == 0x000000, "Member 'SeasonPassScreenBase_GetSeasonPassLevelMax::ReturnValue' has a wrong offset!");

// Function FortniteUI.SeasonPassScreenBase.OwnsSeasonPass
// 0x0001 (0x0001 - 0x0000)
struct SeasonPassScreenBase_OwnsSeasonPass final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SeasonPassScreenBase_OwnsSeasonPass) == 0x000001, "Wrong alignment on SeasonPassScreenBase_OwnsSeasonPass");
static_assert(sizeof(SeasonPassScreenBase_OwnsSeasonPass) == 0x000001, "Wrong size on SeasonPassScreenBase_OwnsSeasonPass");
static_assert(offsetof(SeasonPassScreenBase_OwnsSeasonPass, ReturnValue) == 0x000000, "Member 'SeasonPassScreenBase_OwnsSeasonPass::ReturnValue' has a wrong offset!");

}

