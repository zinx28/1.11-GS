#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_SupplyDrop

#include "Basic.hpp"

#include "SupplyDropUnlocks_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GAT_GenericActiveAbilityNoCommit_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_SupplyDrop.GA_SupplyDrop_C
// 0x0200 (0x0D80 - 0x0B80)
class UGA_SupplyDrop_C final : public UGAT_GenericActiveAbilityNoCommit_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_SupplyDrop_C;                    // 0x0B80(0x0008)(Transient, DuplicateTransient)
	struct FGameplayTag                           EventComplete;                                     // 0x0B88(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EventActivation;                                   // 0x0B90(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FFortAbilityTargetSelection            T_Explosion;                                       // 0x0B98(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             ActivationSound;                                   // 0x0BF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData_0;                                       // 0x0C00(0x00A8)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         AbilityMultiplier;                                 // 0x0CA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CAC[0x4];                                      // 0x0CAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TC_CoreResourceUpgrade1;                           // 0x0CB0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_CoreResourceUpgrade2;                           // 0x0CD0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_RandomItemUpgrade1;                             // 0x0CF0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_RandomItemUpgrade2;                             // 0x0D10(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_RandomItemUpgrade3;                             // 0x0D30(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSupplyDropUnlocks                     UnlockTiers;                                       // 0x0D50(0x0005)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	uint8                                         Pad_D55[0x3];                                      // 0x0D55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WoodCount;                                         // 0x0D58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ExtraCraftingCount;                                // 0x0D5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MetalCount;                                        // 0x0D60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StoneCount;                                        // 0x0D64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WoodItems;                                         // 0x0D68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StoneItems;                                        // 0x0D6C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MetalItems;                                        // 0x0D70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CraftingItems;                                     // 0x0D74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTraps;                                            // 0x0D78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_GA_SupplyDrop(int32 EntryPoint);
	void GetAttributeValue();
	void Setup_Ability(class UAbilitySystemComponent* AbilitySystemComponentRef);
	void SetTierOneData(bool Condition);
	void SetTierTwoData(bool Conditions);
	void SetTierThreeData(bool Condition);
	void SetTierFourData(bool Condition);
	void SetTierFiveData(bool Condition);
	void K2_ActivateAbility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_SupplyDrop_C">();
	}
	static class UGA_SupplyDrop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_SupplyDrop_C>();
	}
};
static_assert(alignof(UGA_SupplyDrop_C) == 0x000008, "Wrong alignment on UGA_SupplyDrop_C");
static_assert(sizeof(UGA_SupplyDrop_C) == 0x000D80, "Wrong size on UGA_SupplyDrop_C");
static_assert(offsetof(UGA_SupplyDrop_C, UberGraphFrame_GA_SupplyDrop_C) == 0x000B80, "Member 'UGA_SupplyDrop_C::UberGraphFrame_GA_SupplyDrop_C' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, EventComplete) == 0x000B88, "Member 'UGA_SupplyDrop_C::EventComplete' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, EventActivation) == 0x000B90, "Member 'UGA_SupplyDrop_C::EventActivation' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, T_Explosion) == 0x000B98, "Member 'UGA_SupplyDrop_C::T_Explosion' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, ActivationSound) == 0x000BF8, "Member 'UGA_SupplyDrop_C::ActivationSound' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, EventData_0) == 0x000C00, "Member 'UGA_SupplyDrop_C::EventData_0' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, AbilityMultiplier) == 0x000CA8, "Member 'UGA_SupplyDrop_C::AbilityMultiplier' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, TC_CoreResourceUpgrade1) == 0x000CB0, "Member 'UGA_SupplyDrop_C::TC_CoreResourceUpgrade1' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, TC_CoreResourceUpgrade2) == 0x000CD0, "Member 'UGA_SupplyDrop_C::TC_CoreResourceUpgrade2' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, TC_RandomItemUpgrade1) == 0x000CF0, "Member 'UGA_SupplyDrop_C::TC_RandomItemUpgrade1' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, TC_RandomItemUpgrade2) == 0x000D10, "Member 'UGA_SupplyDrop_C::TC_RandomItemUpgrade2' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, TC_RandomItemUpgrade3) == 0x000D30, "Member 'UGA_SupplyDrop_C::TC_RandomItemUpgrade3' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, UnlockTiers) == 0x000D50, "Member 'UGA_SupplyDrop_C::UnlockTiers' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, WoodCount) == 0x000D58, "Member 'UGA_SupplyDrop_C::WoodCount' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, ExtraCraftingCount) == 0x000D5C, "Member 'UGA_SupplyDrop_C::ExtraCraftingCount' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, MetalCount) == 0x000D60, "Member 'UGA_SupplyDrop_C::MetalCount' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, StoneCount) == 0x000D64, "Member 'UGA_SupplyDrop_C::StoneCount' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, WoodItems) == 0x000D68, "Member 'UGA_SupplyDrop_C::WoodItems' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, StoneItems) == 0x000D6C, "Member 'UGA_SupplyDrop_C::StoneItems' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, MetalItems) == 0x000D70, "Member 'UGA_SupplyDrop_C::MetalItems' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, CraftingItems) == 0x000D74, "Member 'UGA_SupplyDrop_C::CraftingItems' has a wrong offset!");
static_assert(offsetof(UGA_SupplyDrop_C, bTraps) == 0x000D78, "Member 'UGA_SupplyDrop_C::bTraps' has a wrong offset!");

}

