#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_GM_Fury

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GCNL_GM_Fury.GCNL_GM_Fury_C.ExecuteUbergraph_GCNL_GM_Fury
// 0x0050 (0x0050 - 0x0000)
struct GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DeadActor;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              K2Node_CustomEvent_InstigatedBy;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DeadActor, float Damage, class AFortPawn* InstigatedBy, const struct FVector& HitLocation, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	class AEnemyPawn_Parent_C*                    K2Node_CustomEvent_EnemyPawnParentReference;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury) == 0x000008, "Wrong alignment on GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury");
static_assert(sizeof(GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury) == 0x000050, "Wrong size on GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury");
static_assert(offsetof(GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury, EntryPoint) == 0x000000, "Member 'GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury::EntryPoint' has a wrong offset!");
static_assert(offsetof(GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury, K2Node_CustomEvent_DeadActor) == 0x000008, "Member 'GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury::K2Node_CustomEvent_DeadActor' has a wrong offset!");
static_assert(offsetof(GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury, K2Node_CustomEvent_Damage) == 0x000010, "Member 'GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury, K2Node_CustomEvent_InstigatedBy) == 0x000018, "Member 'GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury::K2Node_CustomEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury, K2Node_CustomEvent_HitLocation) == 0x000020, "Member 'GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury, K2Node_CustomEvent_DamageCauser) == 0x000030, "Member 'GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury, K2Node_CustomEvent_EnemyPawnParentReference) == 0x000048, "Member 'GCNL_GM_Fury_C_ExecuteUbergraph_GCNL_GM_Fury::K2Node_CustomEvent_EnemyPawnParentReference' has a wrong offset!");

// Function GCNL_GM_Fury.GCNL_GM_Fury_C.OnEnemyDeath
// 0x0030 (0x0030 - 0x0000)
struct GCNL_GM_Fury_C_OnEnemyDeath final
{
public:
	class AActor*                                 DeadActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 DamageCauser;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_GM_Fury_C_OnEnemyDeath) == 0x000008, "Wrong alignment on GCNL_GM_Fury_C_OnEnemyDeath");
static_assert(sizeof(GCNL_GM_Fury_C_OnEnemyDeath) == 0x000030, "Wrong size on GCNL_GM_Fury_C_OnEnemyDeath");
static_assert(offsetof(GCNL_GM_Fury_C_OnEnemyDeath, DeadActor) == 0x000000, "Member 'GCNL_GM_Fury_C_OnEnemyDeath::DeadActor' has a wrong offset!");
static_assert(offsetof(GCNL_GM_Fury_C_OnEnemyDeath, Damage) == 0x000008, "Member 'GCNL_GM_Fury_C_OnEnemyDeath::Damage' has a wrong offset!");
static_assert(offsetof(GCNL_GM_Fury_C_OnEnemyDeath, InstigatedBy) == 0x000010, "Member 'GCNL_GM_Fury_C_OnEnemyDeath::InstigatedBy' has a wrong offset!");
static_assert(offsetof(GCNL_GM_Fury_C_OnEnemyDeath, HitLocation) == 0x000018, "Member 'GCNL_GM_Fury_C_OnEnemyDeath::HitLocation' has a wrong offset!");
static_assert(offsetof(GCNL_GM_Fury_C_OnEnemyDeath, DamageCauser) == 0x000028, "Member 'GCNL_GM_Fury_C_OnEnemyDeath::DamageCauser' has a wrong offset!");

// Function GCNL_GM_Fury.GCNL_GM_Fury_C.BindOnDied
// 0x0008 (0x0008 - 0x0000)
struct GCNL_GM_Fury_C_BindOnDied final
{
public:
	class AEnemyPawn_Parent_C*                    EnemyPawnParentReference;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_GM_Fury_C_BindOnDied) == 0x000008, "Wrong alignment on GCNL_GM_Fury_C_BindOnDied");
static_assert(sizeof(GCNL_GM_Fury_C_BindOnDied) == 0x000008, "Wrong size on GCNL_GM_Fury_C_BindOnDied");
static_assert(offsetof(GCNL_GM_Fury_C_BindOnDied, EnemyPawnParentReference) == 0x000000, "Member 'GCNL_GM_Fury_C_BindOnDied::EnemyPawnParentReference' has a wrong offset!");

// Function GCNL_GM_Fury.GCNL_GM_Fury_C.OnActive
// 0x0180 (0x0180 - 0x0000)
struct GCNL_GM_Fury_C_OnActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEnemyPawn_Parent_C*                    K2Node_DynamicCast_AsEnemy_Pawn_Parent;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0xF];                                       // 0x00D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam;                // 0x00E0(0x0080)(IsPlainOldData, NoDestructor)
	TArray<struct FParticleSysParam>              K2Node_MakeArray_Array;                            // 0x0160(0x0010)(ZeroConstructor, ReferenceParm)
	class UParticleSystemComponent*               CallFunc_SpawnParticleSystemOnCharacterMesh_PSComponentReference; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GCNL_GM_Fury_C_OnActive) == 0x000010, "Wrong alignment on GCNL_GM_Fury_C_OnActive");
static_assert(sizeof(GCNL_GM_Fury_C_OnActive) == 0x000180, "Wrong size on GCNL_GM_Fury_C_OnActive");
static_assert(offsetof(GCNL_GM_Fury_C_OnActive, MyTarget) == 0x000000, "Member 'GCNL_GM_Fury_C_OnActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GCNL_GM_Fury_C_OnActive, Parameters) == 0x000008, "Member 'GCNL_GM_Fury_C_OnActive::Parameters' has a wrong offset!");
static_assert(offsetof(GCNL_GM_Fury_C_OnActive, ReturnValue) == 0x0000C0, "Member 'GCNL_GM_Fury_C_OnActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GCNL_GM_Fury_C_OnActive, K2Node_DynamicCast_AsEnemy_Pawn_Parent) == 0x0000C8, "Member 'GCNL_GM_Fury_C_OnActive::K2Node_DynamicCast_AsEnemy_Pawn_Parent' has a wrong offset!");
static_assert(offsetof(GCNL_GM_Fury_C_OnActive, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'GCNL_GM_Fury_C_OnActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GCNL_GM_Fury_C_OnActive, K2Node_MakeStruct_ParticleSysParam) == 0x0000E0, "Member 'GCNL_GM_Fury_C_OnActive::K2Node_MakeStruct_ParticleSysParam' has a wrong offset!");
static_assert(offsetof(GCNL_GM_Fury_C_OnActive, K2Node_MakeArray_Array) == 0x000160, "Member 'GCNL_GM_Fury_C_OnActive::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GCNL_GM_Fury_C_OnActive, CallFunc_SpawnParticleSystemOnCharacterMesh_PSComponentReference) == 0x000170, "Member 'GCNL_GM_Fury_C_OnActive::CallFunc_SpawnParticleSystemOnCharacterMesh_PSComponentReference' has a wrong offset!");

// Function GCNL_GM_Fury.GCNL_GM_Fury_C.DisableFuryPS
// 0x0001 (0x0001 - 0x0000)
struct GCNL_GM_Fury_C_DisableFuryPS final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GCNL_GM_Fury_C_DisableFuryPS) == 0x000001, "Wrong alignment on GCNL_GM_Fury_C_DisableFuryPS");
static_assert(sizeof(GCNL_GM_Fury_C_DisableFuryPS) == 0x000001, "Wrong size on GCNL_GM_Fury_C_DisableFuryPS");
static_assert(offsetof(GCNL_GM_Fury_C_DisableFuryPS, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'GCNL_GM_Fury_C_DisableFuryPS::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

