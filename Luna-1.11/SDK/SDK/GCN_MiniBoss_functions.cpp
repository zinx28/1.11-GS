#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCN_MiniBoss

#include "Basic.hpp"

#include "GCN_MiniBoss_classes.hpp"
#include "GCN_MiniBoss_parameters.hpp"


namespace SDK
{

// Function GCN_MiniBoss.GCN_MiniBoss_C.ExecuteUbergraph_GCN_MiniBoss
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCN_MiniBoss_C::ExecuteUbergraph_GCN_MiniBoss(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_MiniBoss_C", "ExecuteUbergraph_GCN_MiniBoss");

	Params::GCN_MiniBoss_C_ExecuteUbergraph_GCN_MiniBoss Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GCN_MiniBoss.GCN_MiniBoss_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AGCN_MiniBoss_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_MiniBoss_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_MiniBoss.GCN_MiniBoss_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AGCN_MiniBoss_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_MiniBoss_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_MiniBoss.GCN_MiniBoss_C.SetMiniBossGCNColors
// (Public, BlueprintCallable, BlueprintEvent)

void AGCN_MiniBoss_C::SetMiniBossGCNColors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_MiniBoss_C", "SetMiniBossGCNColors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_MiniBoss.GCN_MiniBoss_C.HideMiniBossGCN
// (Public, BlueprintCallable, BlueprintEvent)

void AGCN_MiniBoss_C::HideMiniBossGCN()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_MiniBoss_C", "HideMiniBossGCN");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GCN_MiniBoss.GCN_MiniBoss_C.OnRemove
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AGCN_MiniBoss_C::OnRemove(class AActor* MyTarget, struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_MiniBoss_C", "OnRemove");

	Params::GCN_MiniBoss_C_OnRemove Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	Parameters = std::move(Parms.Parameters);

	return Parms.ReturnValue;
}


// Function GCN_MiniBoss.GCN_MiniBoss_C.OnActive
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MyTarget                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AGCN_MiniBoss_C::OnActive(class AActor* MyTarget, struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_MiniBoss_C", "OnActive");

	Params::GCN_MiniBoss_C_OnActive Parms{};

	Parms.MyTarget = MyTarget;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);

	Parameters = std::move(Parms.Parameters);

	return Parms.ReturnValue;
}


// Function GCN_MiniBoss.GCN_MiniBoss_C.OverwriteElementalParticles
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AEnemyPawn_Parent_C*              Enemy_Pawn_Parent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGCN_MiniBoss_C::OverwriteElementalParticles(class AEnemyPawn_Parent_C* Enemy_Pawn_Parent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GCN_MiniBoss_C", "OverwriteElementalParticles");

	Params::GCN_MiniBoss_C_OverwriteElementalParticles Parms{};

	Parms.Enemy_Pawn_Parent = Enemy_Pawn_Parent;

	UObject::ProcessEvent(Func, &Parms);
}

}

