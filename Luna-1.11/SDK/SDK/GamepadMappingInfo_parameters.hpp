#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GamepadMappingInfo

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function GamepadMappingInfo.GamepadMappingInfo_C.Update Displayed Mapping
// 0x00D0 (0x00D0 - 0x0000)
struct GamepadMappingInfo_C_Update_Displayed_Mapping final
{
public:
	int32                                         Platform;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Mode;                                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Configuration;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             T_Mode_Combat;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             T_Mode_Build;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             T_PS4_Lines;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             T_XboxOne_Lines;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             T_PS4;                                             // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             T_XboxOne;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable4;                               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable2;                                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable3;                                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable2;                               // 0x0070(0x0018)()
	int32                                         Temp_int_Variable4;                                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select2_Default;                            // 0x0090(0x0018)()
	int32                                         Temp_int_Variable5;                                // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable6;                                // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select3_Default;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select4_Default;                            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select5_Default;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select6_Default;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GamepadMappingInfo_C_Update_Displayed_Mapping) == 0x000008, "Wrong alignment on GamepadMappingInfo_C_Update_Displayed_Mapping");
static_assert(sizeof(GamepadMappingInfo_C_Update_Displayed_Mapping) == 0x0000D0, "Wrong size on GamepadMappingInfo_C_Update_Displayed_Mapping");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Platform) == 0x000000, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Platform' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Mode) == 0x000004, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Mode' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Configuration) == 0x000008, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Configuration' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, T_Mode_Combat) == 0x000010, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::T_Mode_Combat' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, T_Mode_Build) == 0x000018, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::T_Mode_Build' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, T_PS4_Lines) == 0x000020, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::T_PS4_Lines' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, T_XboxOne_Lines) == 0x000028, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::T_XboxOne_Lines' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, T_PS4) == 0x000030, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::T_PS4' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, T_XboxOne) == 0x000038, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::T_XboxOne' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_byte_Variable) == 0x000040, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_byte_Variable2) == 0x000041, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_int_Variable) == 0x000044, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_byte_Variable3) == 0x000048, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_byte_Variable4) == 0x000049, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_int_Variable2) == 0x00004C, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, K2Node_Select_Default) == 0x000050, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_int_Variable3) == 0x000054, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_text_Variable) == 0x000058, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_text_Variable2) == 0x000070, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_text_Variable2' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_int_Variable4) == 0x000088, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_int_Variable4' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, K2Node_Select2_Default) == 0x000090, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_int_Variable5) == 0x0000A8, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_int_Variable5' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, Temp_int_Variable6) == 0x0000AC, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::Temp_int_Variable6' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, K2Node_Select3_Default) == 0x0000B0, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, K2Node_Select4_Default) == 0x0000B8, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, K2Node_Select5_Default) == 0x0000C0, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::K2Node_Select5_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_Update_Displayed_Mapping, K2Node_Select6_Default) == 0x0000C8, "Member 'GamepadMappingInfo_C_Update_Displayed_Mapping::K2Node_Select6_Default' has a wrong offset!");

// Function GamepadMappingInfo.GamepadMappingInfo_C.OnConfigChanged
// 0x0018 (0x0018 - 0x0000)
struct GamepadMappingInfo_C_OnConfigChanged final
{
public:
	int32                                         Mode;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Config;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESubGame                                      CallFunc_GetSubGame_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GamepadMappingInfo_C_OnConfigChanged) == 0x000008, "Wrong alignment on GamepadMappingInfo_C_OnConfigChanged");
static_assert(sizeof(GamepadMappingInfo_C_OnConfigChanged) == 0x000018, "Wrong size on GamepadMappingInfo_C_OnConfigChanged");
static_assert(offsetof(GamepadMappingInfo_C_OnConfigChanged, Mode) == 0x000000, "Member 'GamepadMappingInfo_C_OnConfigChanged::Mode' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_OnConfigChanged, Config) == 0x000004, "Member 'GamepadMappingInfo_C_OnConfigChanged::Config' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_OnConfigChanged, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'GamepadMappingInfo_C_OnConfigChanged::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_OnConfigChanged, CallFunc_GetSubGame_ReturnValue) == 0x000010, "Member 'GamepadMappingInfo_C_OnConfigChanged::CallFunc_GetSubGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_OnConfigChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'GamepadMappingInfo_C_OnConfigChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function GamepadMappingInfo.GamepadMappingInfo_C.HandleConfigChanged_Athena
// 0x1580 (0x1580 - 0x0000)
struct GamepadMappingInfo_C_HandleConfigChanged_Athena final
{
public:
	int32                                         Mode;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Config;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)()
	class FText                                   Temp_text_Variable2;                               // 0x0028(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0048(0x0018)()
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable2;                                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable3;                               // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable4;                               // 0x0080(0x0018)()
	class FText                                   Temp_text_Variable5;                               // 0x0098(0x0018)()
	int32                                         Temp_int_Variable3;                                // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select2_Default;                            // 0x00B8(0x0018)()
	class FText                                   Temp_text_Variable6;                               // 0x00D0(0x0018)()
	class FText                                   Temp_text_Variable7;                               // 0x00E8(0x0018)()
	class FText                                   Temp_text_Variable8;                               // 0x0100(0x0018)()
	bool                                          Temp_bool_Variable2;                               // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select3_Default;                            // 0x0120(0x0018)()
	ESlateVisibility                              Temp_byte_Variable4;                               // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable3;                               // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable5;                               // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable6;                               // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable4;                               // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable7;                               // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable8;                               // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable5;                               // 0x013F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable9;                               // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable10;                              // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable4;                                // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable9;                               // 0x0148(0x0018)()
	class FText                                   Temp_text_Variable10;                              // 0x0160(0x0018)()
	class FText                                   Temp_text_Variable11;                              // 0x0178(0x0018)()
	int32                                         Temp_int_Variable5;                                // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select4_Default;                            // 0x0198(0x0018)()
	class FText                                   Temp_text_Variable12;                              // 0x01B0(0x0018)()
	class FText                                   Temp_text_Variable13;                              // 0x01C8(0x0018)()
	class FText                                   Temp_text_Variable14;                              // 0x01E0(0x0018)()
	int32                                         Temp_int_Variable6;                                // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select5_Default;                            // 0x0200(0x0018)()
	class FText                                   Temp_text_Variable15;                              // 0x0218(0x0018)()
	class FText                                   Temp_text_Variable16;                              // 0x0230(0x0018)()
	class FText                                   Temp_text_Variable17;                              // 0x0248(0x0018)()
	int32                                         Temp_int_Variable7;                                // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select6_Default;                            // 0x0268(0x0018)()
	class FText                                   Temp_text_Variable18;                              // 0x0280(0x0018)()
	class FText                                   Temp_text_Variable19;                              // 0x0298(0x0018)()
	class FText                                   Temp_text_Variable20;                              // 0x02B0(0x0018)()
	int32                                         Temp_int_Variable8;                                // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select7_Default;                            // 0x02D0(0x0018)()
	class FText                                   Temp_text_Variable21;                              // 0x02E8(0x0018)()
	class FText                                   Temp_text_Variable22;                              // 0x0300(0x0018)()
	class FText                                   Temp_text_Variable23;                              // 0x0318(0x0018)()
	int32                                         Temp_int_Variable9;                                // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select8_Default;                            // 0x0338(0x0018)()
	class FText                                   Temp_text_Variable24;                              // 0x0350(0x0018)()
	class FText                                   Temp_text_Variable25;                              // 0x0368(0x0018)()
	class FText                                   Temp_text_Variable26;                              // 0x0380(0x0018)()
	int32                                         Temp_int_Variable10;                               // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select9_Default;                            // 0x03A0(0x0018)()
	class FText                                   Temp_text_Variable27;                              // 0x03B8(0x0018)()
	class FText                                   Temp_text_Variable28;                              // 0x03D0(0x0018)()
	class FText                                   Temp_text_Variable29;                              // 0x03E8(0x0018)()
	int32                                         Temp_int_Variable11;                               // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select10_Default;                           // 0x0408(0x0018)()
	class FText                                   Temp_text_Variable30;                              // 0x0420(0x0018)()
	class FText                                   Temp_text_Variable31;                              // 0x0438(0x0018)()
	class FText                                   Temp_text_Variable32;                              // 0x0450(0x0018)()
	int32                                         Temp_int_Variable12;                               // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select11_Default;                           // 0x0470(0x0018)()
	class FText                                   Temp_text_Variable33;                              // 0x0488(0x0018)()
	class FText                                   Temp_text_Variable34;                              // 0x04A0(0x0018)()
	class FText                                   Temp_text_Variable35;                              // 0x04B8(0x0018)()
	int32                                         Temp_int_Variable13;                               // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4[0x4];                                      // 0x04D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12_Default;                           // 0x04D8(0x0018)()
	class FText                                   Temp_text_Variable36;                              // 0x04F0(0x0018)()
	class FText                                   Temp_text_Variable37;                              // 0x0508(0x0018)()
	class FText                                   Temp_text_Variable38;                              // 0x0520(0x0018)()
	int32                                         Temp_int_Variable14;                               // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C[0x4];                                      // 0x053C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select13_Default;                           // 0x0540(0x0018)()
	class FText                                   Temp_text_Variable39;                              // 0x0558(0x0018)()
	class FText                                   Temp_text_Variable40;                              // 0x0570(0x0018)()
	class FText                                   Temp_text_Variable41;                              // 0x0588(0x0018)()
	int32                                         Temp_int_Variable15;                               // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4[0x4];                                      // 0x05A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select14_Default;                           // 0x05A8(0x0018)()
	class FText                                   Temp_text_Variable42;                              // 0x05C0(0x0018)()
	class FText                                   Temp_text_Variable43;                              // 0x05D8(0x0018)()
	class FText                                   Temp_text_Variable44;                              // 0x05F0(0x0018)()
	int32                                         Temp_int_Variable16;                               // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60C[0x4];                                      // 0x060C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select15_Default;                           // 0x0610(0x0018)()
	class FText                                   Temp_text_Variable45;                              // 0x0628(0x0018)()
	class FText                                   Temp_text_Variable46;                              // 0x0640(0x0018)()
	class FText                                   Temp_text_Variable47;                              // 0x0658(0x0018)()
	int32                                         Temp_int_Variable17;                               // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_674[0x4];                                      // 0x0674(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select16_Default;                           // 0x0678(0x0018)()
	class FText                                   Temp_text_Variable48;                              // 0x0690(0x0018)()
	class FText                                   Temp_text_Variable49;                              // 0x06A8(0x0018)()
	class FText                                   Temp_text_Variable50;                              // 0x06C0(0x0018)()
	int32                                         Temp_int_Variable18;                               // 0x06D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DC[0x4];                                      // 0x06DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select17_Default;                           // 0x06E0(0x0018)()
	class FText                                   Temp_text_Variable51;                              // 0x06F8(0x0018)()
	class FText                                   Temp_text_Variable52;                              // 0x0710(0x0018)()
	class FText                                   Temp_text_Variable53;                              // 0x0728(0x0018)()
	int32                                         Temp_int_Variable19;                               // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_744[0x4];                                      // 0x0744(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select18_Default;                           // 0x0748(0x0018)()
	class FText                                   Temp_text_Variable54;                              // 0x0760(0x0018)()
	class FText                                   Temp_text_Variable55;                              // 0x0778(0x0018)()
	class FText                                   Temp_text_Variable56;                              // 0x0790(0x0018)()
	int32                                         Temp_int_Variable20;                               // 0x07A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7AC[0x4];                                      // 0x07AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select19_Default;                           // 0x07B0(0x0018)()
	class FText                                   Temp_text_Variable57;                              // 0x07C8(0x0018)()
	class FText                                   Temp_text_Variable58;                              // 0x07E0(0x0018)()
	class FText                                   Temp_text_Variable59;                              // 0x07F8(0x0018)()
	int32                                         Temp_int_Variable21;                               // 0x0810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_814[0x4];                                      // 0x0814(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select20_Default;                           // 0x0818(0x0018)()
	class FText                                   Temp_text_Variable60;                              // 0x0830(0x0018)()
	class FText                                   Temp_text_Variable61;                              // 0x0848(0x0018)()
	class FText                                   Temp_text_Variable62;                              // 0x0860(0x0018)()
	int32                                         Temp_int_Variable22;                               // 0x0878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87C[0x4];                                      // 0x087C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select21_Default;                           // 0x0880(0x0018)()
	class FText                                   Temp_text_Variable63;                              // 0x0898(0x0018)()
	class FText                                   Temp_text_Variable64;                              // 0x08B0(0x0018)()
	class FText                                   Temp_text_Variable65;                              // 0x08C8(0x0018)()
	int32                                         Temp_int_Variable23;                               // 0x08E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E4[0x4];                                      // 0x08E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select22_Default;                           // 0x08E8(0x0018)()
	class FText                                   Temp_text_Variable66;                              // 0x0900(0x0018)()
	class FText                                   Temp_text_Variable67;                              // 0x0918(0x0018)()
	class FText                                   Temp_text_Variable68;                              // 0x0930(0x0018)()
	int32                                         Temp_int_Variable24;                               // 0x0948(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94C[0x4];                                      // 0x094C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select23_Default;                           // 0x0950(0x0018)()
	class FText                                   Temp_text_Variable69;                              // 0x0968(0x0018)()
	class FText                                   Temp_text_Variable70;                              // 0x0980(0x0018)()
	class FText                                   Temp_text_Variable71;                              // 0x0998(0x0018)()
	int32                                         Temp_int_Variable25;                               // 0x09B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B4[0x4];                                      // 0x09B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select24_Default;                           // 0x09B8(0x0018)()
	class FText                                   Temp_text_Variable72;                              // 0x09D0(0x0018)()
	class FText                                   Temp_text_Variable73;                              // 0x09E8(0x0018)()
	class FText                                   Temp_text_Variable74;                              // 0x0A00(0x0018)()
	int32                                         Temp_int_Variable26;                               // 0x0A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1C[0x4];                                      // 0x0A1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select25_Default;                           // 0x0A20(0x0018)()
	class FText                                   Temp_text_Variable75;                              // 0x0A38(0x0018)()
	class FText                                   Temp_text_Variable76;                              // 0x0A50(0x0018)()
	class FText                                   Temp_text_Variable77;                              // 0x0A68(0x0018)()
	int32                                         Temp_int_Variable27;                               // 0x0A80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A84[0x4];                                      // 0x0A84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select26_Default;                           // 0x0A88(0x0018)()
	class FText                                   Temp_text_Variable78;                              // 0x0AA0(0x0018)()
	class FText                                   Temp_text_Variable79;                              // 0x0AB8(0x0018)()
	class FText                                   Temp_text_Variable80;                              // 0x0AD0(0x0018)()
	int32                                         Temp_int_Variable28;                               // 0x0AE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AEC[0x4];                                      // 0x0AEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select27_Default;                           // 0x0AF0(0x0018)()
	class FText                                   Temp_text_Variable81;                              // 0x0B08(0x0018)()
	class FText                                   Temp_text_Variable82;                              // 0x0B20(0x0018)()
	class FText                                   Temp_text_Variable83;                              // 0x0B38(0x0018)()
	int32                                         Temp_int_Variable29;                               // 0x0B50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B54[0x4];                                      // 0x0B54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select28_Default;                           // 0x0B58(0x0018)()
	class FText                                   Temp_text_Variable84;                              // 0x0B70(0x0018)()
	class FText                                   Temp_text_Variable85;                              // 0x0B88(0x0018)()
	int32                                         Temp_int_Variable30;                               // 0x0BA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA4[0x4];                                      // 0x0BA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select29_Default;                           // 0x0BA8(0x0018)()
	class FText                                   Temp_text_Variable86;                              // 0x0BC0(0x0018)()
	class FText                                   Temp_text_Variable87;                              // 0x0BD8(0x0018)()
	class FText                                   Temp_text_Variable88;                              // 0x0BF0(0x0018)()
	int32                                         Temp_int_Variable31;                               // 0x0C08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C0C[0x4];                                      // 0x0C0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select30_Default;                           // 0x0C10(0x0018)()
	class FText                                   Temp_text_Variable89;                              // 0x0C28(0x0018)()
	class FText                                   Temp_text_Variable90;                              // 0x0C40(0x0018)()
	class FText                                   Temp_text_Variable91;                              // 0x0C58(0x0018)()
	int32                                         Temp_int_Variable32;                               // 0x0C70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C74[0x4];                                      // 0x0C74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select31_Default;                           // 0x0C78(0x0018)()
	class FText                                   Temp_text_Variable92;                              // 0x0C90(0x0018)()
	class FText                                   Temp_text_Variable93;                              // 0x0CA8(0x0018)()
	class FText                                   Temp_text_Variable94;                              // 0x0CC0(0x0018)()
	int32                                         Temp_int_Variable33;                               // 0x0CD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CDC[0x4];                                      // 0x0CDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select32_Default;                           // 0x0CE0(0x0018)()
	class FText                                   Temp_text_Variable95;                              // 0x0CF8(0x0018)()
	class FText                                   Temp_text_Variable96;                              // 0x0D10(0x0018)()
	class FText                                   Temp_text_Variable97;                              // 0x0D28(0x0018)()
	int32                                         Temp_int_Variable34;                               // 0x0D40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D44[0x4];                                      // 0x0D44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select33_Default;                           // 0x0D48(0x0018)()
	class FText                                   Temp_text_Variable98;                              // 0x0D60(0x0018)()
	class FText                                   Temp_text_Variable99;                              // 0x0D78(0x0018)()
	class FText                                   Temp_text_Variable100;                             // 0x0D90(0x0018)()
	int32                                         Temp_int_Variable35;                               // 0x0DA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DAC[0x4];                                      // 0x0DAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select34_Default;                           // 0x0DB0(0x0018)()
	class FText                                   Temp_text_Variable101;                             // 0x0DC8(0x0018)()
	class FText                                   Temp_text_Variable102;                             // 0x0DE0(0x0018)()
	class FText                                   Temp_text_Variable103;                             // 0x0DF8(0x0018)()
	int32                                         Temp_int_Variable36;                               // 0x0E10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E14[0x4];                                      // 0x0E14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select35_Default;                           // 0x0E18(0x0018)()
	class FText                                   Temp_text_Variable104;                             // 0x0E30(0x0018)()
	class FText                                   Temp_text_Variable105;                             // 0x0E48(0x0018)()
	class FText                                   Temp_text_Variable106;                             // 0x0E60(0x0018)()
	int32                                         Temp_int_Variable37;                               // 0x0E78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E7C[0x4];                                      // 0x0E7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select36_Default;                           // 0x0E80(0x0018)()
	class FText                                   Temp_text_Variable107;                             // 0x0E98(0x0018)()
	class FText                                   Temp_text_Variable108;                             // 0x0EB0(0x0018)()
	class FText                                   Temp_text_Variable109;                             // 0x0EC8(0x0018)()
	int32                                         Temp_int_Variable38;                               // 0x0EE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE4[0x4];                                      // 0x0EE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select37_Default;                           // 0x0EE8(0x0018)()
	class FText                                   Temp_text_Variable110;                             // 0x0F00(0x0018)()
	class FText                                   Temp_text_Variable111;                             // 0x0F18(0x0018)()
	class FText                                   Temp_text_Variable112;                             // 0x0F30(0x0018)()
	int32                                         Temp_int_Variable39;                               // 0x0F48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4C[0x4];                                      // 0x0F4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select38_Default;                           // 0x0F50(0x0018)()
	class FText                                   Temp_text_Variable113;                             // 0x0F68(0x0018)()
	class FText                                   Temp_text_Variable114;                             // 0x0F80(0x0018)()
	class FText                                   Temp_text_Variable115;                             // 0x0F98(0x0018)()
	int32                                         Temp_int_Variable40;                               // 0x0FB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB4[0x4];                                      // 0x0FB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select39_Default;                           // 0x0FB8(0x0018)()
	class FText                                   Temp_text_Variable116;                             // 0x0FD0(0x0018)()
	class FText                                   Temp_text_Variable117;                             // 0x0FE8(0x0018)()
	class FText                                   Temp_text_Variable118;                             // 0x1000(0x0018)()
	int32                                         Temp_int_Variable41;                               // 0x1018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101C[0x4];                                     // 0x101C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select40_Default;                           // 0x1020(0x0018)()
	class FText                                   Temp_text_Variable119;                             // 0x1038(0x0018)()
	class FText                                   Temp_text_Variable120;                             // 0x1050(0x0018)()
	class FText                                   Temp_text_Variable121;                             // 0x1068(0x0018)()
	int32                                         Temp_int_Variable42;                               // 0x1080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1084[0x4];                                     // 0x1084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select41_Default;                           // 0x1088(0x0018)()
	class FText                                   Temp_text_Variable122;                             // 0x10A0(0x0018)()
	class FText                                   Temp_text_Variable123;                             // 0x10B8(0x0018)()
	class FText                                   Temp_text_Variable124;                             // 0x10D0(0x0018)()
	int32                                         Temp_int_Variable43;                               // 0x10E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10EC[0x4];                                     // 0x10EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select42_Default;                           // 0x10F0(0x0018)()
	class FText                                   Temp_text_Variable125;                             // 0x1108(0x0018)()
	class FText                                   Temp_text_Variable126;                             // 0x1120(0x0018)()
	class FText                                   Temp_text_Variable127;                             // 0x1138(0x0018)()
	int32                                         Temp_int_Variable44;                               // 0x1150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1154[0x4];                                     // 0x1154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select43_Default;                           // 0x1158(0x0018)()
	class FText                                   Temp_text_Variable128;                             // 0x1170(0x0018)()
	class FText                                   Temp_text_Variable129;                             // 0x1188(0x0018)()
	class FText                                   Temp_text_Variable130;                             // 0x11A0(0x0018)()
	int32                                         Temp_int_Variable45;                               // 0x11B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11BC[0x4];                                     // 0x11BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select44_Default;                           // 0x11C0(0x0018)()
	class FText                                   Temp_text_Variable131;                             // 0x11D8(0x0018)()
	class FText                                   Temp_text_Variable132;                             // 0x11F0(0x0018)()
	class FText                                   Temp_text_Variable133;                             // 0x1208(0x0018)()
	int32                                         Temp_int_Variable46;                               // 0x1220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1224[0x4];                                     // 0x1224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select45_Default;                           // 0x1228(0x0018)()
	class FText                                   Temp_text_Variable134;                             // 0x1240(0x0018)()
	class FText                                   Temp_text_Variable135;                             // 0x1258(0x0018)()
	class FText                                   Temp_text_Variable136;                             // 0x1270(0x0018)()
	int32                                         Temp_int_Variable47;                               // 0x1288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_128C[0x4];                                     // 0x128C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select46_Default;                           // 0x1290(0x0018)()
	class FText                                   Temp_text_Variable137;                             // 0x12A8(0x0018)()
	class FText                                   Temp_text_Variable138;                             // 0x12C0(0x0018)()
	class FText                                   Temp_text_Variable139;                             // 0x12D8(0x0018)()
	int32                                         Temp_int_Variable48;                               // 0x12F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12F4[0x4];                                     // 0x12F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select47_Default;                           // 0x12F8(0x0018)()
	class FText                                   Temp_text_Variable140;                             // 0x1310(0x0018)()
	class FText                                   Temp_text_Variable141;                             // 0x1328(0x0018)()
	class FText                                   Temp_text_Variable142;                             // 0x1340(0x0018)()
	int32                                         Temp_int_Variable49;                               // 0x1358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135C[0x4];                                     // 0x135C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select48_Default;                           // 0x1360(0x0018)()
	class FText                                   Temp_text_Variable143;                             // 0x1378(0x0018)()
	class FText                                   Temp_text_Variable144;                             // 0x1390(0x0018)()
	class FText                                   Temp_text_Variable145;                             // 0x13A8(0x0018)()
	int32                                         Temp_int_Variable50;                               // 0x13C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C4[0x4];                                     // 0x13C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select49_Default;                           // 0x13C8(0x0018)()
	class FText                                   Temp_text_Variable146;                             // 0x13E0(0x0018)()
	class FText                                   Temp_text_Variable147;                             // 0x13F8(0x0018)()
	class FText                                   Temp_text_Variable148;                             // 0x1410(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x1428(0x0018)()
	class FText                                   K2Node_Select50_Default;                           // 0x1440(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x1458(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x1470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1471[0x7];                                     // 0x1471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue2;             // 0x1478(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue2;                     // 0x1490(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue2;         // 0x14A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select51_Default;                           // 0x14A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14AA[0x6];                                     // 0x14AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue3;             // 0x14B0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue4;             // 0x14C8(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue5;             // 0x14E0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue6;             // 0x14F8(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue3;                     // 0x1510(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue4;                     // 0x1528(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue3;         // 0x1540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue4;         // 0x1541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select52_Default;                           // 0x1542(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select53_Default;                           // 0x1543(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1544[0x4];                                     // 0x1544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue5;                     // 0x1548(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue6;                     // 0x1560(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue5;         // 0x1578(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue6;         // 0x1579(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select54_Default;                           // 0x157A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select55_Default;                           // 0x157B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable11;                              // 0x157C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable12;                              // 0x157D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable6;                               // 0x157E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select56_Default;                           // 0x157F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GamepadMappingInfo_C_HandleConfigChanged_Athena) == 0x000008, "Wrong alignment on GamepadMappingInfo_C_HandleConfigChanged_Athena");
static_assert(sizeof(GamepadMappingInfo_C_HandleConfigChanged_Athena) == 0x001580, "Wrong size on GamepadMappingInfo_C_HandleConfigChanged_Athena");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Mode) == 0x000000, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Mode' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Config) == 0x000004, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Config' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable) == 0x000008, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_SwitchInteger_CmpSuccess) == 0x00000C, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable) == 0x000010, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable2) == 0x000028, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable2' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_bool_Variable) == 0x000040, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select_Default) == 0x000048, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable) == 0x000060, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable2) == 0x000061, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable2) == 0x000064, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable3) == 0x000068, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable3' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable4) == 0x000080, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable4' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable5) == 0x000098, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable5' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable3) == 0x0000B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select2_Default) == 0x0000B8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable6) == 0x0000D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable6' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable7) == 0x0000E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable7' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable8) == 0x000100, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable8' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_bool_Variable2) == 0x000118, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable3) == 0x000119, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select3_Default) == 0x000120, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable4) == 0x000138, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_bool_Variable3) == 0x000139, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable5) == 0x00013A, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable6) == 0x00013B, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable6' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_bool_Variable4) == 0x00013C, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable7) == 0x00013D, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable7' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable8) == 0x00013E, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable8' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_bool_Variable5) == 0x00013F, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable9) == 0x000140, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable9' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable10) == 0x000141, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable10' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable4) == 0x000144, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable4' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable9) == 0x000148, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable9' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable10) == 0x000160, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable10' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable11) == 0x000178, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable11' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable5) == 0x000190, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable5' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select4_Default) == 0x000198, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable12) == 0x0001B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable13) == 0x0001C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable13' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable14) == 0x0001E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable14' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable6) == 0x0001F8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable6' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select5_Default) == 0x000200, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select5_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable15) == 0x000218, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable15' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable16) == 0x000230, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable16' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable17) == 0x000248, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable17' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable7) == 0x000260, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable7' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select6_Default) == 0x000268, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select6_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable18) == 0x000280, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable18' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable19) == 0x000298, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable19' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable20) == 0x0002B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable20' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable8) == 0x0002C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable8' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select7_Default) == 0x0002D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select7_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable21) == 0x0002E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable21' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable22) == 0x000300, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable22' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable23) == 0x000318, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable23' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable9) == 0x000330, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable9' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select8_Default) == 0x000338, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select8_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable24) == 0x000350, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable24' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable25) == 0x000368, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable25' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable26) == 0x000380, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable26' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable10) == 0x000398, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable10' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select9_Default) == 0x0003A0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select9_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable27) == 0x0003B8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable27' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable28) == 0x0003D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable28' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable29) == 0x0003E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable29' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable11) == 0x000400, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable11' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select10_Default) == 0x000408, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select10_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable30) == 0x000420, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable30' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable31) == 0x000438, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable31' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable32) == 0x000450, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable32' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable12) == 0x000468, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select11_Default) == 0x000470, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select11_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable33) == 0x000488, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable33' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable34) == 0x0004A0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable34' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable35) == 0x0004B8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable35' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable13) == 0x0004D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable13' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select12_Default) == 0x0004D8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select12_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable36) == 0x0004F0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable36' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable37) == 0x000508, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable37' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable38) == 0x000520, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable38' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable14) == 0x000538, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable14' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select13_Default) == 0x000540, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select13_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable39) == 0x000558, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable39' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable40) == 0x000570, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable40' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable41) == 0x000588, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable41' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable15) == 0x0005A0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable15' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select14_Default) == 0x0005A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select14_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable42) == 0x0005C0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable42' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable43) == 0x0005D8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable43' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable44) == 0x0005F0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable44' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable16) == 0x000608, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable16' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select15_Default) == 0x000610, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select15_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable45) == 0x000628, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable45' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable46) == 0x000640, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable46' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable47) == 0x000658, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable47' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable17) == 0x000670, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable17' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select16_Default) == 0x000678, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select16_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable48) == 0x000690, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable48' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable49) == 0x0006A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable49' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable50) == 0x0006C0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable50' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable18) == 0x0006D8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable18' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select17_Default) == 0x0006E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select17_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable51) == 0x0006F8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable51' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable52) == 0x000710, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable52' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable53) == 0x000728, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable53' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable19) == 0x000740, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable19' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select18_Default) == 0x000748, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select18_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable54) == 0x000760, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable54' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable55) == 0x000778, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable55' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable56) == 0x000790, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable56' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable20) == 0x0007A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable20' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select19_Default) == 0x0007B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select19_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable57) == 0x0007C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable57' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable58) == 0x0007E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable58' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable59) == 0x0007F8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable59' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable21) == 0x000810, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable21' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select20_Default) == 0x000818, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select20_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable60) == 0x000830, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable60' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable61) == 0x000848, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable61' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable62) == 0x000860, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable62' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable22) == 0x000878, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable22' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select21_Default) == 0x000880, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select21_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable63) == 0x000898, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable63' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable64) == 0x0008B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable64' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable65) == 0x0008C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable65' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable23) == 0x0008E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable23' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select22_Default) == 0x0008E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select22_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable66) == 0x000900, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable66' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable67) == 0x000918, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable67' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable68) == 0x000930, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable68' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable24) == 0x000948, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable24' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select23_Default) == 0x000950, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select23_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable69) == 0x000968, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable69' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable70) == 0x000980, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable70' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable71) == 0x000998, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable71' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable25) == 0x0009B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable25' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select24_Default) == 0x0009B8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select24_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable72) == 0x0009D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable72' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable73) == 0x0009E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable73' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable74) == 0x000A00, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable74' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable26) == 0x000A18, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable26' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select25_Default) == 0x000A20, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select25_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable75) == 0x000A38, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable75' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable76) == 0x000A50, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable76' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable77) == 0x000A68, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable77' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable27) == 0x000A80, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable27' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select26_Default) == 0x000A88, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select26_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable78) == 0x000AA0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable78' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable79) == 0x000AB8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable79' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable80) == 0x000AD0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable80' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable28) == 0x000AE8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable28' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select27_Default) == 0x000AF0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select27_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable81) == 0x000B08, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable81' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable82) == 0x000B20, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable82' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable83) == 0x000B38, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable83' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable29) == 0x000B50, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable29' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select28_Default) == 0x000B58, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select28_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable84) == 0x000B70, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable84' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable85) == 0x000B88, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable85' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable30) == 0x000BA0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable30' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select29_Default) == 0x000BA8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select29_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable86) == 0x000BC0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable86' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable87) == 0x000BD8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable87' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable88) == 0x000BF0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable88' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable31) == 0x000C08, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable31' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select30_Default) == 0x000C10, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select30_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable89) == 0x000C28, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable89' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable90) == 0x000C40, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable90' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable91) == 0x000C58, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable91' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable32) == 0x000C70, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable32' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select31_Default) == 0x000C78, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select31_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable92) == 0x000C90, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable92' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable93) == 0x000CA8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable93' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable94) == 0x000CC0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable94' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable33) == 0x000CD8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable33' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select32_Default) == 0x000CE0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select32_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable95) == 0x000CF8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable95' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable96) == 0x000D10, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable96' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable97) == 0x000D28, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable97' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable34) == 0x000D40, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable34' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select33_Default) == 0x000D48, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select33_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable98) == 0x000D60, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable98' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable99) == 0x000D78, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable99' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable100) == 0x000D90, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable100' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable35) == 0x000DA8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable35' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select34_Default) == 0x000DB0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select34_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable101) == 0x000DC8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable101' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable102) == 0x000DE0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable102' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable103) == 0x000DF8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable103' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable36) == 0x000E10, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable36' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select35_Default) == 0x000E18, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select35_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable104) == 0x000E30, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable104' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable105) == 0x000E48, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable105' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable106) == 0x000E60, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable106' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable37) == 0x000E78, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable37' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select36_Default) == 0x000E80, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select36_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable107) == 0x000E98, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable107' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable108) == 0x000EB0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable108' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable109) == 0x000EC8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable109' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable38) == 0x000EE0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable38' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select37_Default) == 0x000EE8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select37_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable110) == 0x000F00, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable110' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable111) == 0x000F18, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable111' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable112) == 0x000F30, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable112' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable39) == 0x000F48, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable39' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select38_Default) == 0x000F50, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select38_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable113) == 0x000F68, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable113' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable114) == 0x000F80, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable114' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable115) == 0x000F98, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable115' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable40) == 0x000FB0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable40' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select39_Default) == 0x000FB8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select39_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable116) == 0x000FD0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable116' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable117) == 0x000FE8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable117' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable118) == 0x001000, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable118' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable41) == 0x001018, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable41' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select40_Default) == 0x001020, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select40_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable119) == 0x001038, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable119' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable120) == 0x001050, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable120' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable121) == 0x001068, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable121' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable42) == 0x001080, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable42' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select41_Default) == 0x001088, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select41_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable122) == 0x0010A0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable122' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable123) == 0x0010B8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable123' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable124) == 0x0010D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable124' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable43) == 0x0010E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable43' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select42_Default) == 0x0010F0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select42_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable125) == 0x001108, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable125' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable126) == 0x001120, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable126' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable127) == 0x001138, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable127' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable44) == 0x001150, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable44' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select43_Default) == 0x001158, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select43_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable128) == 0x001170, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable128' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable129) == 0x001188, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable129' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable130) == 0x0011A0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable130' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable45) == 0x0011B8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable45' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select44_Default) == 0x0011C0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select44_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable131) == 0x0011D8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable131' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable132) == 0x0011F0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable132' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable133) == 0x001208, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable133' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable46) == 0x001220, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable46' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select45_Default) == 0x001228, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select45_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable134) == 0x001240, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable134' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable135) == 0x001258, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable135' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable136) == 0x001270, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable136' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable47) == 0x001288, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable47' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select46_Default) == 0x001290, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select46_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable137) == 0x0012A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable137' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable138) == 0x0012C0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable138' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable139) == 0x0012D8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable139' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable48) == 0x0012F0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable48' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select47_Default) == 0x0012F8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select47_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable140) == 0x001310, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable140' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable141) == 0x001328, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable141' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable142) == 0x001340, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable142' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable49) == 0x001358, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable49' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select48_Default) == 0x001360, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select48_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable143) == 0x001378, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable143' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable144) == 0x001390, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable144' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable145) == 0x0013A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable145' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_int_Variable50) == 0x0013C0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_int_Variable50' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select49_Default) == 0x0013C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select49_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable146) == 0x0013E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable146' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable147) == 0x0013F8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable147' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_text_Variable148) == 0x001410, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_text_Variable148' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_GetText_ReturnValue) == 0x001428, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select50_Default) == 0x001440, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select50_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_MakeLiteralText_ReturnValue) == 0x001458, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_EqualEqual_TextText_ReturnValue) == 0x001470, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_MakeLiteralText_ReturnValue2) == 0x001478, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_MakeLiteralText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_GetText_ReturnValue2) == 0x001490, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_GetText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_EqualEqual_TextText_ReturnValue2) == 0x0014A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_EqualEqual_TextText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select51_Default) == 0x0014A9, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select51_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_MakeLiteralText_ReturnValue3) == 0x0014B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_MakeLiteralText_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_MakeLiteralText_ReturnValue4) == 0x0014C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_MakeLiteralText_ReturnValue4' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_MakeLiteralText_ReturnValue5) == 0x0014E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_MakeLiteralText_ReturnValue5' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_MakeLiteralText_ReturnValue6) == 0x0014F8, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_MakeLiteralText_ReturnValue6' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_GetText_ReturnValue3) == 0x001510, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_GetText_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_GetText_ReturnValue4) == 0x001528, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_GetText_ReturnValue4' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_EqualEqual_TextText_ReturnValue3) == 0x001540, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_EqualEqual_TextText_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_EqualEqual_TextText_ReturnValue4) == 0x001541, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_EqualEqual_TextText_ReturnValue4' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select52_Default) == 0x001542, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select52_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select53_Default) == 0x001543, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select53_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_GetText_ReturnValue5) == 0x001548, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_GetText_ReturnValue5' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_GetText_ReturnValue6) == 0x001560, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_GetText_ReturnValue6' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_EqualEqual_TextText_ReturnValue5) == 0x001578, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_EqualEqual_TextText_ReturnValue5' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, CallFunc_EqualEqual_TextText_ReturnValue6) == 0x001579, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::CallFunc_EqualEqual_TextText_ReturnValue6' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select54_Default) == 0x00157A, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select54_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select55_Default) == 0x00157B, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select55_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable11) == 0x00157C, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable11' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_byte_Variable12) == 0x00157D, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_byte_Variable12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, Temp_bool_Variable6) == 0x00157E, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::Temp_bool_Variable6' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged_Athena, K2Node_Select56_Default) == 0x00157F, "Member 'GamepadMappingInfo_C_HandleConfigChanged_Athena::K2Node_Select56_Default' has a wrong offset!");

// Function GamepadMappingInfo.GamepadMappingInfo_C.HandleConfigChanged
// 0x10C0 (0x10C0 - 0x0000)
struct GamepadMappingInfo_C_HandleConfigChanged final
{
public:
	int32                                         Mode;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Config;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)()
	class FText                                   Temp_text_Variable2;                               // 0x0028(0x0018)()
	int32                                         Temp_int_Variable2;                                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0048(0x0018)()
	class FText                                   Temp_text_Variable3;                               // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable4;                               // 0x0078(0x0018)()
	bool                                          Temp_bool_Variable2;                               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select2_Default;                            // 0x0098(0x0018)()
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable4;                               // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable3;                               // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable5;                               // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable6;                               // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable4;                               // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable7;                               // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable8;                               // 0x00B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable5;                               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable9;                               // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable10;                              // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB[0x1];                                       // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable3;                                // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable5;                               // 0x00C0(0x0018)()
	class FText                                   Temp_text_Variable6;                               // 0x00D8(0x0018)()
	int32                                         Temp_int_Variable4;                                // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select3_Default;                            // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable7;                               // 0x0110(0x0018)()
	class FText                                   Temp_text_Variable8;                               // 0x0128(0x0018)()
	int32                                         Temp_int_Variable5;                                // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select4_Default;                            // 0x0148(0x0018)()
	class FText                                   Temp_text_Variable9;                               // 0x0160(0x0018)()
	class FText                                   Temp_text_Variable10;                              // 0x0178(0x0018)()
	int32                                         Temp_int_Variable6;                                // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select5_Default;                            // 0x0198(0x0018)()
	class FText                                   Temp_text_Variable11;                              // 0x01B0(0x0018)()
	class FText                                   Temp_text_Variable12;                              // 0x01C8(0x0018)()
	int32                                         Temp_int_Variable7;                                // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select6_Default;                            // 0x01E8(0x0018)()
	class FText                                   Temp_text_Variable13;                              // 0x0200(0x0018)()
	class FText                                   Temp_text_Variable14;                              // 0x0218(0x0018)()
	int32                                         Temp_int_Variable8;                                // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select7_Default;                            // 0x0238(0x0018)()
	class FText                                   Temp_text_Variable15;                              // 0x0250(0x0018)()
	class FText                                   Temp_text_Variable16;                              // 0x0268(0x0018)()
	int32                                         Temp_int_Variable9;                                // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select8_Default;                            // 0x0288(0x0018)()
	class FText                                   Temp_text_Variable17;                              // 0x02A0(0x0018)()
	class FText                                   Temp_text_Variable18;                              // 0x02B8(0x0018)()
	int32                                         Temp_int_Variable10;                               // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select9_Default;                            // 0x02D8(0x0018)()
	class FText                                   Temp_text_Variable19;                              // 0x02F0(0x0018)()
	class FText                                   Temp_text_Variable20;                              // 0x0308(0x0018)()
	int32                                         Temp_int_Variable11;                               // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select10_Default;                           // 0x0328(0x0018)()
	class FText                                   Temp_text_Variable21;                              // 0x0340(0x0018)()
	class FText                                   Temp_text_Variable22;                              // 0x0358(0x0018)()
	int32                                         Temp_int_Variable12;                               // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select11_Default;                           // 0x0378(0x0018)()
	class FText                                   Temp_text_Variable23;                              // 0x0390(0x0018)()
	class FText                                   Temp_text_Variable24;                              // 0x03A8(0x0018)()
	int32                                         Temp_int_Variable13;                               // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select12_Default;                           // 0x03C8(0x0018)()
	class FText                                   Temp_text_Variable25;                              // 0x03E0(0x0018)()
	class FText                                   Temp_text_Variable26;                              // 0x03F8(0x0018)()
	int32                                         Temp_int_Variable14;                               // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select13_Default;                           // 0x0418(0x0018)()
	class FText                                   Temp_text_Variable27;                              // 0x0430(0x0018)()
	class FText                                   Temp_text_Variable28;                              // 0x0448(0x0018)()
	int32                                         Temp_int_Variable15;                               // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select14_Default;                           // 0x0468(0x0018)()
	class FText                                   Temp_text_Variable29;                              // 0x0480(0x0018)()
	class FText                                   Temp_text_Variable30;                              // 0x0498(0x0018)()
	int32                                         Temp_int_Variable16;                               // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B4[0x4];                                      // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select15_Default;                           // 0x04B8(0x0018)()
	class FText                                   Temp_text_Variable31;                              // 0x04D0(0x0018)()
	class FText                                   Temp_text_Variable32;                              // 0x04E8(0x0018)()
	int32                                         Temp_int_Variable17;                               // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_504[0x4];                                      // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select16_Default;                           // 0x0508(0x0018)()
	class FText                                   Temp_text_Variable33;                              // 0x0520(0x0018)()
	class FText                                   Temp_text_Variable34;                              // 0x0538(0x0018)()
	int32                                         Temp_int_Variable18;                               // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554[0x4];                                      // 0x0554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select17_Default;                           // 0x0558(0x0018)()
	class FText                                   Temp_text_Variable35;                              // 0x0570(0x0018)()
	class FText                                   Temp_text_Variable36;                              // 0x0588(0x0018)()
	int32                                         Temp_int_Variable19;                               // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4[0x4];                                      // 0x05A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select18_Default;                           // 0x05A8(0x0018)()
	class FText                                   Temp_text_Variable37;                              // 0x05C0(0x0018)()
	class FText                                   Temp_text_Variable38;                              // 0x05D8(0x0018)()
	int32                                         Temp_int_Variable20;                               // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4[0x4];                                      // 0x05F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select19_Default;                           // 0x05F8(0x0018)()
	class FText                                   Temp_text_Variable39;                              // 0x0610(0x0018)()
	class FText                                   Temp_text_Variable40;                              // 0x0628(0x0018)()
	int32                                         Temp_int_Variable21;                               // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_644[0x4];                                      // 0x0644(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select20_Default;                           // 0x0648(0x0018)()
	class FText                                   Temp_text_Variable41;                              // 0x0660(0x0018)()
	class FText                                   Temp_text_Variable42;                              // 0x0678(0x0018)()
	int32                                         Temp_int_Variable22;                               // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_694[0x4];                                      // 0x0694(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select21_Default;                           // 0x0698(0x0018)()
	class FText                                   Temp_text_Variable43;                              // 0x06B0(0x0018)()
	class FText                                   Temp_text_Variable44;                              // 0x06C8(0x0018)()
	int32                                         Temp_int_Variable23;                               // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E4[0x4];                                      // 0x06E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select22_Default;                           // 0x06E8(0x0018)()
	class FText                                   Temp_text_Variable45;                              // 0x0700(0x0018)()
	class FText                                   Temp_text_Variable46;                              // 0x0718(0x0018)()
	int32                                         Temp_int_Variable24;                               // 0x0730(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_734[0x4];                                      // 0x0734(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select23_Default;                           // 0x0738(0x0018)()
	class FText                                   Temp_text_Variable47;                              // 0x0750(0x0018)()
	class FText                                   Temp_text_Variable48;                              // 0x0768(0x0018)()
	int32                                         Temp_int_Variable25;                               // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_784[0x4];                                      // 0x0784(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select24_Default;                           // 0x0788(0x0018)()
	class FText                                   Temp_text_Variable49;                              // 0x07A0(0x0018)()
	class FText                                   Temp_text_Variable50;                              // 0x07B8(0x0018)()
	int32                                         Temp_int_Variable26;                               // 0x07D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D4[0x4];                                      // 0x07D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select25_Default;                           // 0x07D8(0x0018)()
	class FText                                   Temp_text_Variable51;                              // 0x07F0(0x0018)()
	class FText                                   Temp_text_Variable52;                              // 0x0808(0x0018)()
	int32                                         Temp_int_Variable27;                               // 0x0820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_824[0x4];                                      // 0x0824(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select26_Default;                           // 0x0828(0x0018)()
	class FText                                   Temp_text_Variable53;                              // 0x0840(0x0018)()
	class FText                                   Temp_text_Variable54;                              // 0x0858(0x0018)()
	int32                                         Temp_int_Variable28;                               // 0x0870(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_874[0x4];                                      // 0x0874(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select27_Default;                           // 0x0878(0x0018)()
	class FText                                   Temp_text_Variable55;                              // 0x0890(0x0018)()
	class FText                                   Temp_text_Variable56;                              // 0x08A8(0x0018)()
	int32                                         Temp_int_Variable29;                               // 0x08C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C4[0x4];                                      // 0x08C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select28_Default;                           // 0x08C8(0x0018)()
	class FText                                   Temp_text_Variable57;                              // 0x08E0(0x0018)()
	class FText                                   Temp_text_Variable58;                              // 0x08F8(0x0018)()
	int32                                         Temp_int_Variable30;                               // 0x0910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_914[0x4];                                      // 0x0914(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select29_Default;                           // 0x0918(0x0018)()
	class FText                                   Temp_text_Variable59;                              // 0x0930(0x0018)()
	class FText                                   Temp_text_Variable60;                              // 0x0948(0x0018)()
	int32                                         Temp_int_Variable31;                               // 0x0960(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_964[0x4];                                      // 0x0964(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select30_Default;                           // 0x0968(0x0018)()
	class FText                                   Temp_text_Variable61;                              // 0x0980(0x0018)()
	class FText                                   Temp_text_Variable62;                              // 0x0998(0x0018)()
	int32                                         Temp_int_Variable32;                               // 0x09B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B4[0x4];                                      // 0x09B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select31_Default;                           // 0x09B8(0x0018)()
	class FText                                   Temp_text_Variable63;                              // 0x09D0(0x0018)()
	class FText                                   Temp_text_Variable64;                              // 0x09E8(0x0018)()
	int32                                         Temp_int_Variable33;                               // 0x0A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A04[0x4];                                      // 0x0A04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select32_Default;                           // 0x0A08(0x0018)()
	class FText                                   Temp_text_Variable65;                              // 0x0A20(0x0018)()
	class FText                                   Temp_text_Variable66;                              // 0x0A38(0x0018)()
	int32                                         Temp_int_Variable34;                               // 0x0A50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A54[0x4];                                      // 0x0A54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select33_Default;                           // 0x0A58(0x0018)()
	class FText                                   Temp_text_Variable67;                              // 0x0A70(0x0018)()
	class FText                                   Temp_text_Variable68;                              // 0x0A88(0x0018)()
	int32                                         Temp_int_Variable35;                               // 0x0AA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA4[0x4];                                      // 0x0AA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select34_Default;                           // 0x0AA8(0x0018)()
	class FText                                   Temp_text_Variable69;                              // 0x0AC0(0x0018)()
	class FText                                   Temp_text_Variable70;                              // 0x0AD8(0x0018)()
	int32                                         Temp_int_Variable36;                               // 0x0AF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AF4[0x4];                                      // 0x0AF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select35_Default;                           // 0x0AF8(0x0018)()
	class FText                                   Temp_text_Variable71;                              // 0x0B10(0x0018)()
	class FText                                   Temp_text_Variable72;                              // 0x0B28(0x0018)()
	int32                                         Temp_int_Variable37;                               // 0x0B40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B44[0x4];                                      // 0x0B44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select36_Default;                           // 0x0B48(0x0018)()
	class FText                                   Temp_text_Variable73;                              // 0x0B60(0x0018)()
	class FText                                   Temp_text_Variable74;                              // 0x0B78(0x0018)()
	int32                                         Temp_int_Variable38;                               // 0x0B90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B94[0x4];                                      // 0x0B94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select37_Default;                           // 0x0B98(0x0018)()
	class FText                                   Temp_text_Variable75;                              // 0x0BB0(0x0018)()
	class FText                                   Temp_text_Variable76;                              // 0x0BC8(0x0018)()
	int32                                         Temp_int_Variable39;                               // 0x0BE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE4[0x4];                                      // 0x0BE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select38_Default;                           // 0x0BE8(0x0018)()
	class FText                                   Temp_text_Variable77;                              // 0x0C00(0x0018)()
	class FText                                   Temp_text_Variable78;                              // 0x0C18(0x0018)()
	int32                                         Temp_int_Variable40;                               // 0x0C30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C34[0x4];                                      // 0x0C34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select39_Default;                           // 0x0C38(0x0018)()
	class FText                                   Temp_text_Variable79;                              // 0x0C50(0x0018)()
	class FText                                   Temp_text_Variable80;                              // 0x0C68(0x0018)()
	int32                                         Temp_int_Variable41;                               // 0x0C80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C84[0x4];                                      // 0x0C84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select40_Default;                           // 0x0C88(0x0018)()
	class FText                                   Temp_text_Variable81;                              // 0x0CA0(0x0018)()
	class FText                                   Temp_text_Variable82;                              // 0x0CB8(0x0018)()
	int32                                         Temp_int_Variable42;                               // 0x0CD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD4[0x4];                                      // 0x0CD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select41_Default;                           // 0x0CD8(0x0018)()
	class FText                                   Temp_text_Variable83;                              // 0x0CF0(0x0018)()
	class FText                                   Temp_text_Variable84;                              // 0x0D08(0x0018)()
	int32                                         Temp_int_Variable43;                               // 0x0D20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D24[0x4];                                      // 0x0D24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select42_Default;                           // 0x0D28(0x0018)()
	class FText                                   Temp_text_Variable85;                              // 0x0D40(0x0018)()
	class FText                                   Temp_text_Variable86;                              // 0x0D58(0x0018)()
	int32                                         Temp_int_Variable44;                               // 0x0D70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D74[0x4];                                      // 0x0D74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select43_Default;                           // 0x0D78(0x0018)()
	class FText                                   Temp_text_Variable87;                              // 0x0D90(0x0018)()
	class FText                                   Temp_text_Variable88;                              // 0x0DA8(0x0018)()
	int32                                         Temp_int_Variable45;                               // 0x0DC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC4[0x4];                                      // 0x0DC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select44_Default;                           // 0x0DC8(0x0018)()
	class FText                                   Temp_text_Variable89;                              // 0x0DE0(0x0018)()
	class FText                                   Temp_text_Variable90;                              // 0x0DF8(0x0018)()
	int32                                         Temp_int_Variable46;                               // 0x0E10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E14[0x4];                                      // 0x0E14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select45_Default;                           // 0x0E18(0x0018)()
	class FText                                   Temp_text_Variable91;                              // 0x0E30(0x0018)()
	class FText                                   Temp_text_Variable92;                              // 0x0E48(0x0018)()
	int32                                         Temp_int_Variable47;                               // 0x0E60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E64[0x4];                                      // 0x0E64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select46_Default;                           // 0x0E68(0x0018)()
	class FText                                   Temp_text_Variable93;                              // 0x0E80(0x0018)()
	class FText                                   Temp_text_Variable94;                              // 0x0E98(0x0018)()
	int32                                         Temp_int_Variable48;                               // 0x0EB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EB4[0x4];                                      // 0x0EB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select47_Default;                           // 0x0EB8(0x0018)()
	class FText                                   Temp_text_Variable95;                              // 0x0ED0(0x0018)()
	class FText                                   Temp_text_Variable96;                              // 0x0EE8(0x0018)()
	int32                                         Temp_int_Variable49;                               // 0x0F00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F04[0x4];                                      // 0x0F04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select48_Default;                           // 0x0F08(0x0018)()
	class FText                                   Temp_text_Variable97;                              // 0x0F20(0x0018)()
	class FText                                   Temp_text_Variable98;                              // 0x0F38(0x0018)()
	class FText                                   K2Node_Select49_Default;                           // 0x0F50(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0F68(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0F80(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0F98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select50_Default;                           // 0x0F99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9A[0x6];                                      // 0x0F9A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue2;             // 0x0FA0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue3;             // 0x0FB8(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue4;             // 0x0FD0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue5;             // 0x0FE8(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue2;                     // 0x1000(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue3;                     // 0x1018(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue2;         // 0x1030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue3;         // 0x1031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select51_Default;                           // 0x1032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select52_Default;                           // 0x1033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1034[0x4];                                     // 0x1034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue4;                     // 0x1038(0x0018)()
	class FText                                   CallFunc_GetText_ReturnValue5;                     // 0x1050(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue4;         // 0x1068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue5;         // 0x1069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select53_Default;                           // 0x106A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select54_Default;                           // 0x106B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_106C[0x4];                                     // 0x106C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable99;                              // 0x1070(0x0018)()
	class FText                                   Temp_text_Variable100;                             // 0x1088(0x0018)()
	int32                                         Temp_int_Variable50;                               // 0x10A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A4[0x4];                                     // 0x10A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select55_Default;                           // 0x10A8(0x0018)()
};
static_assert(alignof(GamepadMappingInfo_C_HandleConfigChanged) == 0x000008, "Wrong alignment on GamepadMappingInfo_C_HandleConfigChanged");
static_assert(sizeof(GamepadMappingInfo_C_HandleConfigChanged) == 0x0010C0, "Wrong size on GamepadMappingInfo_C_HandleConfigChanged");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Mode) == 0x000000, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Mode' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Config) == 0x000004, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Config' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_bool_Variable) == 0x000008, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_SwitchInteger_CmpSuccess) == 0x000009, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable) == 0x00000A, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable2) == 0x00000B, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable) == 0x00000C, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable) == 0x000010, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable2) == 0x000028, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable2' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable2) == 0x000040, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select_Default) == 0x000048, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable3) == 0x000060, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable3' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable4) == 0x000078, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable4' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_bool_Variable2) == 0x000090, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select2_Default) == 0x000098, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable3) == 0x0000B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable4) == 0x0000B1, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_bool_Variable3) == 0x0000B2, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable5) == 0x0000B3, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable6) == 0x0000B4, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable6' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_bool_Variable4) == 0x0000B5, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable7) == 0x0000B6, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable7' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable8) == 0x0000B7, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable8' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_bool_Variable5) == 0x0000B8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable9) == 0x0000B9, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable9' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_byte_Variable10) == 0x0000BA, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_byte_Variable10' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable3) == 0x0000BC, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable5) == 0x0000C0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable5' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable6) == 0x0000D8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable6' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable4) == 0x0000F0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable4' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select3_Default) == 0x0000F8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable7) == 0x000110, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable7' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable8) == 0x000128, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable8' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable5) == 0x000140, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable5' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select4_Default) == 0x000148, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable9) == 0x000160, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable9' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable10) == 0x000178, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable10' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable6) == 0x000190, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable6' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select5_Default) == 0x000198, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select5_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable11) == 0x0001B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable11' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable12) == 0x0001C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable7) == 0x0001E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable7' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select6_Default) == 0x0001E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select6_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable13) == 0x000200, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable13' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable14) == 0x000218, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable14' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable8) == 0x000230, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable8' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select7_Default) == 0x000238, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select7_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable15) == 0x000250, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable15' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable16) == 0x000268, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable16' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable9) == 0x000280, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable9' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select8_Default) == 0x000288, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select8_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable17) == 0x0002A0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable17' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable18) == 0x0002B8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable18' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable10) == 0x0002D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable10' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select9_Default) == 0x0002D8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select9_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable19) == 0x0002F0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable19' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable20) == 0x000308, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable20' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable11) == 0x000320, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable11' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select10_Default) == 0x000328, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select10_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable21) == 0x000340, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable21' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable22) == 0x000358, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable22' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable12) == 0x000370, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable12' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select11_Default) == 0x000378, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select11_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable23) == 0x000390, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable23' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable24) == 0x0003A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable24' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable13) == 0x0003C0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable13' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select12_Default) == 0x0003C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select12_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable25) == 0x0003E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable25' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable26) == 0x0003F8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable26' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable14) == 0x000410, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable14' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select13_Default) == 0x000418, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select13_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable27) == 0x000430, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable27' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable28) == 0x000448, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable28' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable15) == 0x000460, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable15' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select14_Default) == 0x000468, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select14_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable29) == 0x000480, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable29' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable30) == 0x000498, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable30' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable16) == 0x0004B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable16' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select15_Default) == 0x0004B8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select15_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable31) == 0x0004D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable31' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable32) == 0x0004E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable32' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable17) == 0x000500, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable17' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select16_Default) == 0x000508, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select16_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable33) == 0x000520, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable33' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable34) == 0x000538, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable34' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable18) == 0x000550, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable18' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select17_Default) == 0x000558, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select17_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable35) == 0x000570, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable35' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable36) == 0x000588, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable36' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable19) == 0x0005A0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable19' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select18_Default) == 0x0005A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select18_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable37) == 0x0005C0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable37' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable38) == 0x0005D8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable38' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable20) == 0x0005F0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable20' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select19_Default) == 0x0005F8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select19_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable39) == 0x000610, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable39' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable40) == 0x000628, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable40' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable21) == 0x000640, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable21' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select20_Default) == 0x000648, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select20_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable41) == 0x000660, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable41' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable42) == 0x000678, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable42' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable22) == 0x000690, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable22' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select21_Default) == 0x000698, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select21_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable43) == 0x0006B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable43' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable44) == 0x0006C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable44' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable23) == 0x0006E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable23' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select22_Default) == 0x0006E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select22_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable45) == 0x000700, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable45' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable46) == 0x000718, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable46' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable24) == 0x000730, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable24' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select23_Default) == 0x000738, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select23_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable47) == 0x000750, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable47' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable48) == 0x000768, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable48' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable25) == 0x000780, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable25' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select24_Default) == 0x000788, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select24_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable49) == 0x0007A0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable49' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable50) == 0x0007B8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable50' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable26) == 0x0007D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable26' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select25_Default) == 0x0007D8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select25_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable51) == 0x0007F0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable51' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable52) == 0x000808, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable52' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable27) == 0x000820, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable27' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select26_Default) == 0x000828, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select26_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable53) == 0x000840, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable53' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable54) == 0x000858, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable54' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable28) == 0x000870, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable28' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select27_Default) == 0x000878, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select27_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable55) == 0x000890, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable55' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable56) == 0x0008A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable56' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable29) == 0x0008C0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable29' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select28_Default) == 0x0008C8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select28_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable57) == 0x0008E0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable57' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable58) == 0x0008F8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable58' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable30) == 0x000910, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable30' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select29_Default) == 0x000918, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select29_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable59) == 0x000930, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable59' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable60) == 0x000948, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable60' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable31) == 0x000960, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable31' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select30_Default) == 0x000968, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select30_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable61) == 0x000980, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable61' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable62) == 0x000998, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable62' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable32) == 0x0009B0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable32' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select31_Default) == 0x0009B8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select31_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable63) == 0x0009D0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable63' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable64) == 0x0009E8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable64' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable33) == 0x000A00, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable33' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select32_Default) == 0x000A08, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select32_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable65) == 0x000A20, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable65' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable66) == 0x000A38, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable66' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable34) == 0x000A50, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable34' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select33_Default) == 0x000A58, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select33_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable67) == 0x000A70, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable67' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable68) == 0x000A88, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable68' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable35) == 0x000AA0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable35' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select34_Default) == 0x000AA8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select34_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable69) == 0x000AC0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable69' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable70) == 0x000AD8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable70' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable36) == 0x000AF0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable36' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select35_Default) == 0x000AF8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select35_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable71) == 0x000B10, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable71' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable72) == 0x000B28, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable72' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable37) == 0x000B40, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable37' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select36_Default) == 0x000B48, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select36_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable73) == 0x000B60, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable73' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable74) == 0x000B78, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable74' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable38) == 0x000B90, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable38' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select37_Default) == 0x000B98, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select37_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable75) == 0x000BB0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable75' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable76) == 0x000BC8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable76' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable39) == 0x000BE0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable39' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select38_Default) == 0x000BE8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select38_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable77) == 0x000C00, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable77' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable78) == 0x000C18, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable78' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable40) == 0x000C30, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable40' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select39_Default) == 0x000C38, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select39_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable79) == 0x000C50, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable79' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable80) == 0x000C68, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable80' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable41) == 0x000C80, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable41' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select40_Default) == 0x000C88, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select40_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable81) == 0x000CA0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable81' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable82) == 0x000CB8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable82' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable42) == 0x000CD0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable42' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select41_Default) == 0x000CD8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select41_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable83) == 0x000CF0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable83' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable84) == 0x000D08, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable84' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable43) == 0x000D20, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable43' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select42_Default) == 0x000D28, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select42_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable85) == 0x000D40, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable85' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable86) == 0x000D58, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable86' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable44) == 0x000D70, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable44' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select43_Default) == 0x000D78, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select43_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable87) == 0x000D90, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable87' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable88) == 0x000DA8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable88' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable45) == 0x000DC0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable45' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select44_Default) == 0x000DC8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select44_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable89) == 0x000DE0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable89' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable90) == 0x000DF8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable90' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable46) == 0x000E10, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable46' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select45_Default) == 0x000E18, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select45_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable91) == 0x000E30, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable91' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable92) == 0x000E48, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable92' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable47) == 0x000E60, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable47' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select46_Default) == 0x000E68, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select46_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable93) == 0x000E80, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable93' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable94) == 0x000E98, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable94' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable48) == 0x000EB0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable48' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select47_Default) == 0x000EB8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select47_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable95) == 0x000ED0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable95' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable96) == 0x000EE8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable96' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable49) == 0x000F00, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable49' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select48_Default) == 0x000F08, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select48_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable97) == 0x000F20, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable97' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable98) == 0x000F38, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable98' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select49_Default) == 0x000F50, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select49_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_MakeLiteralText_ReturnValue) == 0x000F68, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_GetText_ReturnValue) == 0x000F80, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000F98, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select50_Default) == 0x000F99, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select50_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_MakeLiteralText_ReturnValue2) == 0x000FA0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_MakeLiteralText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_MakeLiteralText_ReturnValue3) == 0x000FB8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_MakeLiteralText_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_MakeLiteralText_ReturnValue4) == 0x000FD0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_MakeLiteralText_ReturnValue4' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_MakeLiteralText_ReturnValue5) == 0x000FE8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_MakeLiteralText_ReturnValue5' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_GetText_ReturnValue2) == 0x001000, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_GetText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_GetText_ReturnValue3) == 0x001018, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_GetText_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_EqualEqual_TextText_ReturnValue2) == 0x001030, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_EqualEqual_TextText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_EqualEqual_TextText_ReturnValue3) == 0x001031, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_EqualEqual_TextText_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select51_Default) == 0x001032, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select51_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select52_Default) == 0x001033, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select52_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_GetText_ReturnValue4) == 0x001038, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_GetText_ReturnValue4' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_GetText_ReturnValue5) == 0x001050, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_GetText_ReturnValue5' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_EqualEqual_TextText_ReturnValue4) == 0x001068, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_EqualEqual_TextText_ReturnValue4' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, CallFunc_EqualEqual_TextText_ReturnValue5) == 0x001069, "Member 'GamepadMappingInfo_C_HandleConfigChanged::CallFunc_EqualEqual_TextText_ReturnValue5' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select53_Default) == 0x00106A, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select53_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select54_Default) == 0x00106B, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select54_Default' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable99) == 0x001070, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable99' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_text_Variable100) == 0x001088, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_text_Variable100' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, Temp_int_Variable50) == 0x0010A0, "Member 'GamepadMappingInfo_C_HandleConfigChanged::Temp_int_Variable50' has a wrong offset!");
static_assert(offsetof(GamepadMappingInfo_C_HandleConfigChanged, K2Node_Select55_Default) == 0x0010A8, "Member 'GamepadMappingInfo_C_HandleConfigChanged::K2Node_Select55_Default' has a wrong offset!");

}

