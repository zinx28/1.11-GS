#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HBOnboardingFlow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FortniteUI_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Rejoin_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass HBOnboardingFlow.HBOnboardingFlow_C
// 0x00A0 (0x0408 - 0x0368)
class AHBOnboardingFlow_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0368(0x0008)(Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItemDefinition*               OnboardingQuest;                                   // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItemDefinition*               PlayPeriodicEventMovieQuest;                       // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayedPeriodicEventMovie;                         // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bHasRecheckedNeedToPlayPeriodicEventMovie;         // 0x0389(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A[0x6];                                      // 0x038A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CompleteZoneObjective;                             // 0x0390(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    NameHomebaseObjective;                             // 0x03A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FMargin                                NotificationPadding;                               // 0x03B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    PlaySatelliteCineObjective;                        // 0x03C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UFortAccountItemDefinition*             ShowNewsToken;                                     // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ClientQuestLoginRetryCount;                        // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ClientQuestLoginNumRetries;                        // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    PlayPeriodicEventCineObjective;                    // 0x03E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FDataTableRowHandle                    StormShieldDefenseObjective;                       // 0x03F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UClass*                                 PeriodicEventMovieAnnouncmentClass;                // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_HBOnboardingFlow(int32 EntryPoint);
	void HandleClientEvent_PlayEventMovie(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent);
	void HandleMobileManagementRestricted();
	void HandlePlayEventCine();
	void HandleForcedLogout(const class FText& Reason_Title, const class FText& Reason);
	void HandleNoEntitlement();
	void HandleCompanionAppOnboardingAbort();
	void HandleClientEvent_OnRejoinGameAbandoned(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent);
	void HandleSubGameSelection();
	void HandleClientEvent_SubGameSelected(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent);
	void Handle_Client_Quest_Login_Retries_Exhausted();
	void Handle_Client_Quest_Login_Failed_Retry();
	void HandleNameHomebase();
	void HandlePlaySatelliteCine();
	void HandleSwitchToHomeBase();
	void HandleCheckOnboardingZoneComplete();
	void HandleCheckExistingSession();
	void RejoinCheckCompleted(ERejoinStatus RejoinStatus);
	void StartFlow();
	void StartOnboardingZone();
	void HandleClientEvent_HomebasePersonalized(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent);
	void StartNameHomebase();
	void StartPlaySatelliteCine();
	void OnSuccess_7D1C261A4BE47E3567B8D2885C9E298B();
	void OnFailure_7D1C261A4BE47E3567B8D2885C9E298B();
	void OnSuccess_50CD26324B96B121A5B49DA66113AE5D();
	void OnIgnored_50CD26324B96B121A5B49DA66113AE5D();
	void OnFailure_50CD26324B96B121A5B49DA66113AE5D();
	void OnStateEntered_7E48C3B34B1AC823ECCC5BB9D4D63515();
	void DialogResult_1D81E4B94CE33A3425130BABD5A7283B(EFortDialogResult Result, class FName ResultName);
	void OnStateEntered_B1212BA945BD8297BCCDC69BA3015CC2();
	void OnStateEntered_7FBC276641DD576B7417ED97A4734318();
	void OnStateEntered_D3C1532F46B8ACB52198EBB597FE9EF0();
	void OnSuccess_74930F274B5470B17CF720953FE7E260();
	void OnFailure_74930F274B5470B17CF720953FE7E260();
	void OnStateEntered_99CD286F4BDD72A81163058464B73990();
	void OnStateEntered_FEE56B7E40F9EBA0E7D44DBF3391C2D6();
	void OnStateEntered_6973C4804831A19E4BDA22AFFEE0F251();
	void OnAllClientsReady_856A325D44ECC73B857CE5B35313D7CD();
	void OnCanceled_856A325D44ECC73B857CE5B35313D7CD();
	void OnStateEntered_CC1C02F844ADF1F9F5546C8115CF00F0();
	void OnSuccess_F17CF9054AFDDDAF314AC4911BC9818F();
	void OnIgnored_F17CF9054AFDDDAF314AC4911BC9818F();
	void OnFailure_F17CF9054AFDDDAF314AC4911BC9818F();
	void OnSuccess_0A5ABC9C483947108FD9FB9980E7C62F();
	void OnIgnored_0A5ABC9C483947108FD9FB9980E7C62F();
	void OnFailure_0A5ABC9C483947108FD9FB9980E7C62F();
	void OnAllClientsReady_856A325D44ECC73B857CE5B301E90D33();
	void OnCanceled_856A325D44ECC73B857CE5B301E90D33();
	void OnAllClientsReady_C2C889344301B8DBF8F046A2A175D133();
	void OnCanceled_C2C889344301B8DBF8F046A2A175D133();
	void UserConstructionScript();
	void HandleMcpFailure();
	void ShowBannerSelect();
	void Handle_Client_Quest_Login_Failed();
	bool NeedsToPlayEventMovie();
	void RecheckNeedToPlayEventMovie(bool* WaitingToCheckAgain);
	void CanAccessManagementFeatures(bool* Can_Manage);
	void GetOnboardingQuestItem(class UFortQuestItem** Result);
	void GetCampaignQuestManager(class UFortQuestManager** QuestManager);
	bool HasCompletedOnboardingObjective();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HBOnboardingFlow_C">();
	}
	static class AHBOnboardingFlow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHBOnboardingFlow_C>();
	}
};
static_assert(alignof(AHBOnboardingFlow_C) == 0x000008, "Wrong alignment on AHBOnboardingFlow_C");
static_assert(sizeof(AHBOnboardingFlow_C) == 0x000408, "Wrong size on AHBOnboardingFlow_C");
static_assert(offsetof(AHBOnboardingFlow_C, UberGraphFrame) == 0x000368, "Member 'AHBOnboardingFlow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AHBOnboardingFlow_C, DefaultSceneRoot) == 0x000370, "Member 'AHBOnboardingFlow_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AHBOnboardingFlow_C, OnboardingQuest) == 0x000378, "Member 'AHBOnboardingFlow_C::OnboardingQuest' has a wrong offset!");
static_assert(offsetof(AHBOnboardingFlow_C, PlayPeriodicEventMovieQuest) == 0x000380, "Member 'AHBOnboardingFlow_C::PlayPeriodicEventMovieQuest' has a wrong offset!");
static_assert(offsetof(AHBOnboardingFlow_C, bPlayedPeriodicEventMovie) == 0x000388, "Member 'AHBOnboardingFlow_C::bPlayedPeriodicEventMovie' has a wrong offset!");
static_assert(offsetof(AHBOnboardingFlow_C, bHasRecheckedNeedToPlayPeriodicEventMovie) == 0x000389, "Member 'AHBOnboardingFlow_C::bHasRecheckedNeedToPlayPeriodicEventMovie' has a wrong offset!");
static_assert(offsetof(AHBOnboardingFlow_C, CompleteZoneObjective) == 0x000390, "Member 'AHBOnboardingFlow_C::CompleteZoneObjective' has a wrong offset!");
static_assert(offsetof(AHBOnboardingFlow_C, NameHomebaseObjective) == 0x0003A0, "Member 'AHBOnboardingFlow_C::NameHomebaseObjective' has a wrong offset!");
static_assert(offsetof(AHBOnboardingFlow_C, NotificationPadding) == 0x0003B0, "Member 'AHBOnboardingFlow_C::NotificationPadding' has a wrong offset!");
static_assert(offsetof(AHBOnboardingFlow_C, PlaySatelliteCineObjective) == 0x0003C0, "Member 'AHBOnboardingFlow_C::PlaySatelliteCineObjective' has a wrong offset!");
static_assert(offsetof(AHBOnboardingFlow_C, ShowNewsToken) == 0x0003D0, "Member 'AHBOnboardingFlow_C::ShowNewsToken' has a wrong offset!");
static_assert(offsetof(AHBOnboardingFlow_C, ClientQuestLoginRetryCount) == 0x0003D8, "Member 'AHBOnboardingFlow_C::ClientQuestLoginRetryCount' has a wrong offset!");
static_assert(offsetof(AHBOnboardingFlow_C, ClientQuestLoginNumRetries) == 0x0003DC, "Member 'AHBOnboardingFlow_C::ClientQuestLoginNumRetries' has a wrong offset!");
static_assert(offsetof(AHBOnboardingFlow_C, PlayPeriodicEventCineObjective) == 0x0003E0, "Member 'AHBOnboardingFlow_C::PlayPeriodicEventCineObjective' has a wrong offset!");
static_assert(offsetof(AHBOnboardingFlow_C, StormShieldDefenseObjective) == 0x0003F0, "Member 'AHBOnboardingFlow_C::StormShieldDefenseObjective' has a wrong offset!");
static_assert(offsetof(AHBOnboardingFlow_C, PeriodicEventMovieAnnouncmentClass) == 0x000400, "Member 'AHBOnboardingFlow_C::PeriodicEventMovieAnnouncmentClass' has a wrong offset!");

}

