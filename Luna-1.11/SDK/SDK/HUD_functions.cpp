#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD

#include "Basic.hpp"

#include "HUD_classes.hpp"
#include "HUD_parameters.hpp"


namespace SDK
{

// Function HUD.HUD_C.ExecuteUbergraph_HUD
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_C::ExecuteUbergraph_HUD(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "ExecuteUbergraph_HUD");

	Params::HUD_C_ExecuteUbergraph_HUD Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD.HUD_C.BndEvt__BP_FortLiveStreamGrantWindowExpires_K2Node_ComponentBoundEvent_13_StreamTimerStarted__DelegateSignature
// (BlueprintEvent)

void UHUD_C::BndEvt__BP_FortLiveStreamGrantWindowExpires_K2Node_ComponentBoundEvent_13_StreamTimerStarted__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "BndEvt__BP_FortLiveStreamGrantWindowExpires_K2Node_ComponentBoundEvent_13_StreamTimerStarted__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD.HUD_C.BndEvt__BP_FortLiveStreamGrantWindowExpires_K2Node_ComponentBoundEvent_8_StreamTimerExpired__DelegateSignature
// (BlueprintEvent)

void UHUD_C::BndEvt__BP_FortLiveStreamGrantWindowExpires_K2Node_ComponentBoundEvent_8_StreamTimerExpired__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "BndEvt__BP_FortLiveStreamGrantWindowExpires_K2Node_ComponentBoundEvent_8_StreamTimerExpired__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD.HUD_C.HandleInputMethodChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UsingGamepad                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHUD_C::HandleInputMethodChanged(bool UsingGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "HandleInputMethodChanged");

	Params::HUD_C_HandleInputMethodChanged Parms{};

	Parms.UsingGamepad = UsingGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD.HUD_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UHUD_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD.HUD_C.PushContentWidgetInternal
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FContentPushState                State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UHUD_C::PushContentWidgetInternal(class UWidget* Widget, const struct FContentPushState& State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "PushContentWidgetInternal");

	Params::HUD_C_PushContentWidgetInternal Parms{};

	Parms.Widget = Widget;
	Parms.State = std::move(State);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD.HUD_C.EndOfDayRecapEnded
// (BlueprintCallable, BlueprintEvent)

void UHUD_C::EndOfDayRecapEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "EndOfDayRecapEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD.HUD_C.EndOfDayRecapStarted
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FEndOfDayRecap                   EndOfDayRecap                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UHUD_C::EndOfDayRecapStarted(const struct FEndOfDayRecap& EndOfDayRecap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "EndOfDayRecapStarted");

	Params::HUD_C_EndOfDayRecapStarted Parms{};

	Parms.EndOfDayRecap = std::move(EndOfDayRecap);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD.HUD_C.LoadingScreenChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHUD_C::LoadingScreenChanged(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "LoadingScreenChanged");

	Params::HUD_C_LoadingScreenChanged Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD.HUD_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UHUD_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD.HUD_C.QuestsCompleted
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UFortQuestItem*>           Quests                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void UHUD_C::QuestsCompleted(const TArray<class UFortQuestItem*>& Quests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "QuestsCompleted");

	Params::HUD_C_QuestsCompleted Parms{};

	Parms.Quests = std::move(Quests);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD.HUD_C.OnEnterState
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortUIState                            PreviousUIState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_C::OnEnterState(EFortUIState PreviousUIState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "OnEnterState");

	Params::HUD_C_OnEnterState Parms{};

	Parms.PreviousUIState = PreviousUIState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD.HUD_C.OnConfirmed_0E0300084F8A9EB1D6CB5E836DBF8C7A
// (BlueprintCallable, BlueprintEvent)

void UHUD_C::OnConfirmed_0E0300084F8A9EB1D6CB5E836DBF8C7A()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "OnConfirmed_0E0300084F8A9EB1D6CB5E836DBF8C7A");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD.HUD_C.OnDeclined_0E0300084F8A9EB1D6CB5E836DBF8C7A
// (BlueprintCallable, BlueprintEvent)

void UHUD_C::OnDeclined_0E0300084F8A9EB1D6CB5E836DBF8C7A()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "OnDeclined_0E0300084F8A9EB1D6CB5E836DBF8C7A");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD.HUD_C.HandleCursorModeChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             ActionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      CursorModeContentCustomWidget                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_C::HandleCursorModeChanged(bool IsEnabled, class FName ActionName, class UUserWidget* CursorModeContentCustomWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "HandleCursorModeChanged");

	Params::HUD_C_HandleCursorModeChanged Parms{};

	Parms.IsEnabled = IsEnabled;
	Parms.ActionName = ActionName;
	Parms.CursorModeContentCustomWidget = CursorModeContentCustomWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD.HUD_C.HandleQuickbarSlotFocusSlotChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortQuickBars                          Quickbar_Index                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Slot                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_C::HandleQuickbarSlotFocusSlotChanged(EFortQuickBars Quickbar_Index, int32 Param_Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "HandleQuickbarSlotFocusSlotChanged");

	Params::HUD_C_HandleQuickbarSlotFocusSlotChanged Parms{};

	Parms.Quickbar_Index = Quickbar_Index;
	Parms.Param_Slot = Param_Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD.HUD_C.SetQuickbarSizes
// (Public, BlueprintCallable, BlueprintEvent)

void UHUD_C::SetQuickbarSizes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "SetQuickbarSizes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD.HUD_C.OnHandleAction
// (HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FEventReply                      Result                                                 (Parm, OutParm)
// bool                                    bPassThrough                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHUD_C::OnHandleAction(struct FEventReply* Result, bool* bPassThrough)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "OnHandleAction");

	Params::HUD_C_OnHandleAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);

	if (bPassThrough != nullptr)
		*bPassThrough = Parms.bPassThrough;
}


// Function HUD.HUD_C.HandleZoneCompleted
// (Public, BlueprintCallable, BlueprintEvent)

void UHUD_C::HandleZoneCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "HandleZoneCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD.HUD_C.HandleKeybindsChanged
// (Public, BlueprintCallable, BlueprintEvent)

void UHUD_C::HandleKeybindsChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "HandleKeybindsChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD.HUD_C.OnPlayerTargetingChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTargeting                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHUD_C::OnPlayerTargetingChanged(bool IsTargeting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "OnPlayerTargetingChanged");

	Params::HUD_C_OnPlayerTargetingChanged Parms{};

	Parms.IsTargeting = IsTargeting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD.HUD_C.SetGameMode
// (Public, BlueprintCallable, BlueprintEvent)

void UHUD_C::SetGameMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "SetGameMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD.HUD_C.SetCursorModeContent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      CustomWidget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ActionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_C::SetCursorModeContent(class UUserWidget* CustomWidget, class FName& ActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "SetCursorModeContent");

	Params::HUD_C_SetCursorModeContent Parms{};

	Parms.CustomWidget = CustomWidget;
	Parms.ActionName = ActionName;

	UObject::ProcessEvent(Func, &Parms);

	ActionName = Parms.ActionName;
}


// Function HUD.HUD_C.HandleIndicatorModeChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InidicatorsEnabled                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHUD_C::HandleIndicatorModeChanged(bool InidicatorsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "HandleIndicatorModeChanged");

	Params::HUD_C_HandleIndicatorModeChanged Parms{};

	Parms.InidicatorsEnabled = InidicatorsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD.HUD_C.SetPersistentHUDContentVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHUD_C::SetPersistentHUDContentVisibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "SetPersistentHUDContentVisibility");

	Params::HUD_C_SetPersistentHUDContentVisibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD.HUD_C.ToggleChat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHUD_C::ToggleChat(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "ToggleChat");

	Params::HUD_C_ToggleChat Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD.HUD_C.ToggleTopLevelMenu
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHUD_C::ToggleTopLevelMenu(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "ToggleTopLevelMenu");

	Params::HUD_C_ToggleTopLevelMenu Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD.HUD_C.HandleFocusChat
// (Public, BlueprintCallable, BlueprintEvent)

void UHUD_C::HandleFocusChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "HandleFocusChat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD.HUD_C.HandleHordeTierComplete
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortCompletionResult                   Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_C::HandleHordeTierComplete(EFortCompletionResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "HandleHordeTierComplete");

	Params::HUD_C_HandleHordeTierComplete Parms{};

	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD.HUD_C.OnHordeTierCompleteWidgetFinished
// (Public, BlueprintCallable, BlueprintEvent)

void UHUD_C::OnHordeTierCompleteWidgetFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "OnHordeTierCompleteWidgetFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD.HUD_C.ShowPicker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortPickerMode                         Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   InitialOption                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IgnoreFirstAccept                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHUD_C::ShowPicker(EFortPickerMode Mode, int32 InitialOption, bool IgnoreFirstAccept)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "ShowPicker");

	Params::HUD_C_ShowPicker Parms{};

	Parms.Mode = Mode;
	Parms.InitialOption = InitialOption;
	Parms.IgnoreFirstAccept = IgnoreFirstAccept;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD.HUD_C.HandleOnPointOfInterestAdded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PointOfInterest                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             DisplayText                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// class UTexture2D*                       DisplayImage                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_C::HandleOnPointOfInterestAdded(class AActor* PointOfInterest, const class FText& DisplayText, class UTexture2D* DisplayImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "HandleOnPointOfInterestAdded");

	Params::HUD_C_HandleOnPointOfInterestAdded Parms{};

	Parms.PointOfInterest = PointOfInterest;
	Parms.DisplayText = std::move(DisplayText);
	Parms.DisplayImage = DisplayImage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD.HUD_C.HandleOnPointOfInterestRemoved
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           PointOfInterest                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_C::HandleOnPointOfInterestRemoved(class AActor* PointOfInterest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "HandleOnPointOfInterestRemoved");

	Params::HUD_C_HandleOnPointOfInterestRemoved Parms{};

	Parms.PointOfInterest = PointOfInterest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD.HUD_C.CreateInterestIndicatorWidget
// (Public, BlueprintCallable, BlueprintEvent)

void UHUD_C::CreateInterestIndicatorWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "CreateInterestIndicatorWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD.HUD_C.PopContentWidgetInternal
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FContentPushState                State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidget* UHUD_C::PopContentWidgetInternal(const struct FContentPushState& State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "PopContentWidgetInternal");

	Params::HUD_C_PopContentWidgetInternal Parms{};

	Parms.State = std::move(State);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function HUD.HUD_C.OnManagementTabSelected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             TabName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_C::OnManagementTabSelected(class FName TabName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "OnManagementTabSelected");

	Params::HUD_C_OnManagementTabSelected Parms{};

	Parms.TabName = TabName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HUD.HUD_C.OnHUDElementVisibilityChanged
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            HiddenHUDElementTags                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UHUD_C::OnHUDElementVisibilityChanged(struct FGameplayTagContainer& HiddenHUDElementTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "OnHUDElementVisibilityChanged");

	Params::HUD_C_OnHUDElementVisibilityChanged Parms{};

	Parms.HiddenHUDElementTags = std::move(HiddenHUDElementTags);

	UObject::ProcessEvent(Func, &Parms);

	HiddenHUDElementTags = std::move(Parms.HiddenHUDElementTags);
}


// Function HUD.HUD_C.CheckHUDElementVisibility
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            HiddenHUDElementTags                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FGameplayTag                     HUDElementTagToCheck                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          HUDElement                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHUD_C::CheckHUDElementVisibility(struct FGameplayTagContainer& HiddenHUDElementTags, const struct FGameplayTag& HUDElementTagToCheck, class UWidget*& HUDElement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "CheckHUDElementVisibility");

	Params::HUD_C_CheckHUDElementVisibility Parms{};

	Parms.HiddenHUDElementTags = std::move(HiddenHUDElementTags);
	Parms.HUDElementTagToCheck = std::move(HUDElementTagToCheck);
	Parms.HUDElement = HUDElement;

	UObject::ProcessEvent(Func, &Parms);

	HiddenHUDElementTags = std::move(Parms.HiddenHUDElementTags);
	HUDElement = Parms.HUDElement;
}


// Function HUD.HUD_C.OpenSocialMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UHUD_C::OpenSocialMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "OpenSocialMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HUD.HUD_C.PrepareMgmtMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UHUD_C::PrepareMgmtMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUD_C", "PrepareMgmtMenu");

	UObject::ProcessEvent(Func, nullptr);
}

}

