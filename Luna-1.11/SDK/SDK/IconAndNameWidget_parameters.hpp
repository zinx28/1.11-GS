#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IconAndNameWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function IconAndNameWidget.IconAndNameWidget_C.ExecuteUbergraph_IconAndNameWidget
// 0x0030 (0x0030 - 0x0000)
struct IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                 Temp_class_Variable;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable2;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select2_Default;                            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget) == 0x000008, "Wrong alignment on IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget");
static_assert(sizeof(IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget) == 0x000030, "Wrong size on IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget");
static_assert(offsetof(IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget, EntryPoint) == 0x000000, "Member 'IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget, Temp_bool_Variable) == 0x000004, "Member 'IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget, Temp_byte_Variable) == 0x000005, "Member 'IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget, Temp_byte_Variable2) == 0x000006, "Member 'IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget, Temp_bool_Variable2) == 0x000007, "Member 'IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget, Temp_class_Variable) == 0x000008, "Member 'IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget, Temp_class_Variable2) == 0x000010, "Member 'IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget::Temp_class_Variable2' has a wrong offset!");
static_assert(offsetof(IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget, K2Node_Event_IsDesignTime) == 0x000018, "Member 'IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget, K2Node_Select_Default) == 0x000020, "Member 'IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget, K2Node_Select2_Default) == 0x000028, "Member 'IconAndNameWidget_C_ExecuteUbergraph_IconAndNameWidget::K2Node_Select2_Default' has a wrong offset!");

// Function IconAndNameWidget.IconAndNameWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct IconAndNameWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(IconAndNameWidget_C_PreConstruct) == 0x000001, "Wrong alignment on IconAndNameWidget_C_PreConstruct");
static_assert(sizeof(IconAndNameWidget_C_PreConstruct) == 0x000001, "Wrong size on IconAndNameWidget_C_PreConstruct");
static_assert(offsetof(IconAndNameWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'IconAndNameWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function IconAndNameWidget.IconAndNameWidget_C.Setup Border
// 0x0018 (0x0018 - 0x0000)
struct IconAndNameWidget_C_Setup_Border final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IconAndNameWidget_C_Setup_Border) == 0x000008, "Wrong alignment on IconAndNameWidget_C_Setup_Border");
static_assert(sizeof(IconAndNameWidget_C_Setup_Border) == 0x000018, "Wrong size on IconAndNameWidget_C_Setup_Border");
static_assert(offsetof(IconAndNameWidget_C_Setup_Border, Temp_bool_Variable) == 0x000000, "Member 'IconAndNameWidget_C_Setup_Border::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(IconAndNameWidget_C_Setup_Border, Temp_byte_Variable) == 0x000001, "Member 'IconAndNameWidget_C_Setup_Border::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(IconAndNameWidget_C_Setup_Border, Temp_byte_Variable2) == 0x000002, "Member 'IconAndNameWidget_C_Setup_Border::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(IconAndNameWidget_C_Setup_Border, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'IconAndNameWidget_C_Setup_Border::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(IconAndNameWidget_C_Setup_Border, K2Node_Select_Default) == 0x000010, "Member 'IconAndNameWidget_C_Setup_Border::K2Node_Select_Default' has a wrong offset!");

// Function IconAndNameWidget.IconAndNameWidget_C.Setup Text
// 0x0005 (0x0005 - 0x0000)
struct IconAndNameWidget_C_Setup_Text final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IconAndNameWidget_C_Setup_Text) == 0x000001, "Wrong alignment on IconAndNameWidget_C_Setup_Text");
static_assert(sizeof(IconAndNameWidget_C_Setup_Text) == 0x000005, "Wrong size on IconAndNameWidget_C_Setup_Text");
static_assert(offsetof(IconAndNameWidget_C_Setup_Text, Temp_bool_Variable) == 0x000000, "Member 'IconAndNameWidget_C_Setup_Text::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(IconAndNameWidget_C_Setup_Text, Temp_byte_Variable) == 0x000001, "Member 'IconAndNameWidget_C_Setup_Text::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(IconAndNameWidget_C_Setup_Text, Temp_byte_Variable2) == 0x000002, "Member 'IconAndNameWidget_C_Setup_Text::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(IconAndNameWidget_C_Setup_Text, CallFunc_TextIsEmpty_ReturnValue) == 0x000003, "Member 'IconAndNameWidget_C_Setup_Text::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(IconAndNameWidget_C_Setup_Text, K2Node_Select_Default) == 0x000004, "Member 'IconAndNameWidget_C_Setup_Text::K2Node_Select_Default' has a wrong offset!");

// Function IconAndNameWidget.IconAndNameWidget_C.Set Border Color
// 0x0010 (0x0010 - 0x0000)
struct IconAndNameWidget_C_Set_Border_Color final
{
public:
	struct FLinearColor                           Value;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IconAndNameWidget_C_Set_Border_Color) == 0x000004, "Wrong alignment on IconAndNameWidget_C_Set_Border_Color");
static_assert(sizeof(IconAndNameWidget_C_Set_Border_Color) == 0x000010, "Wrong size on IconAndNameWidget_C_Set_Border_Color");
static_assert(offsetof(IconAndNameWidget_C_Set_Border_Color, Value) == 0x000000, "Member 'IconAndNameWidget_C_Set_Border_Color::Value' has a wrong offset!");

}

