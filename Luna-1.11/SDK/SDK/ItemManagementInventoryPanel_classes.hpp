#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemManagementInventoryPanel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ItemManagementInventoryPanel.ItemManagementInventoryPanel_C
// 0x00D0 (0x03E0 - 0x0310)
class UItemManagementInventoryPanel_C final : public UFortItemManagementInventoryPanel
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0310(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeMessage;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItemManagementInventoryLimitStatusIndicator_C* AccountLimit;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           BackpackHeader;                                    // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          BorderMessage;                                     // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorderEquipSlots;                            // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CurrentFilterLabel;                                // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CurrentFilterLabelWorldItems;                      // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItemManagementEquipSlot_C*             EquipSlot1;                                        // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItemManagementEquipSlot_C*             EquipSlot2;                                        // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItemManagementEquipSlot_C*             EquipSlot3;                                        // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        FilterBarSwitcher;                                 // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          Filters;                                           // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        FilterSortSwitcher;                                // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItemManagementFocusSwitcher_C*         FocusSwitcher;                                     // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        InventoryLimitSwitcher;                            // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UItemCraftingIngredientList_C*          ItemCraftingIngredientList;                        // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PageTitle;                                         // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       RecycleItemCountText;                              // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       RecycleTitle;                                      // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          Recycling;                                         // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      SortTypeButton;                                    // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      SortTypeButtonWorldItems;                          // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       StorageText;                                       // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         UpgradeResourcesBox;                               // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bUseRetire;                                        // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bHideCount;                                        // 0x03D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bHideResources;                                    // 0x03DA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bHideTitle;                                        // 0x03DB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ItemManagementInventoryPanel(int32 EntryPoint);
	void HandleCursorModeChangedBP(bool bCursorModeEnabled, class FName ActionName, class UUserWidget* CursorModeContentWidget);
	void BndEvt__SortTypeButtonWorldItems_K2Node_ComponentBoundEvent_282_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void HandleQuickBarChangedBP(EFortQuickBars QuickBarType);
	void HandleDifferentFrontendInventoryFilterSetBP();
	void BndEvt__CraftingTileView_K2Node_ComponentBoundEvent_126_OnListViewItemSelected__DelegateSignature(class UObject* Item, bool bIsSelected);
	void Destruct();
	void Construct();
	void HandleSetOfItemsToMulchChangedBP();
	void HandleDifferentItemManagementModeSetBP();
	void BndEvt__SortTypeButton_K2Node_ComponentBoundEvent_36_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void HandleDifferentSortTypeSetBP();
	void HandleDifferentFilterSetBP();
	void SetUniqueFeatures();
	void UpdateRecycleInfo();
	void UpdateEquipSlots();
	void UpdateEquipSlotsVisibility();
	void ProcessSlotAction();
	void GetSelectedEquipSlot(int32* Param_Slot);
	void HandlePinnedSchematicsChanged();
	void ShowEquipSlotDragTargets();
	void HideEquipSlotDragTargets();
	void SelectTrapByTag(const struct FGameplayTag& Tag, bool* Success);
	void SelectTrapByItem(class UFortItem* Item, bool* Success);
	void PrepOpeningInventory(class FName ActionName);
	void UpdateStorageTextVisbility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ItemManagementInventoryPanel_C">();
	}
	static class UItemManagementInventoryPanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UItemManagementInventoryPanel_C>();
	}
};
static_assert(alignof(UItemManagementInventoryPanel_C) == 0x000008, "Wrong alignment on UItemManagementInventoryPanel_C");
static_assert(sizeof(UItemManagementInventoryPanel_C) == 0x0003E0, "Wrong size on UItemManagementInventoryPanel_C");
static_assert(offsetof(UItemManagementInventoryPanel_C, UberGraphFrame) == 0x000310, "Member 'UItemManagementInventoryPanel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, FadeMessage) == 0x000318, "Member 'UItemManagementInventoryPanel_C::FadeMessage' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, AccountLimit) == 0x000320, "Member 'UItemManagementInventoryPanel_C::AccountLimit' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, BackpackHeader) == 0x000328, "Member 'UItemManagementInventoryPanel_C::BackpackHeader' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, BorderMessage) == 0x000330, "Member 'UItemManagementInventoryPanel_C::BorderMessage' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, CommonBorderEquipSlots) == 0x000338, "Member 'UItemManagementInventoryPanel_C::CommonBorderEquipSlots' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, CurrentFilterLabel) == 0x000340, "Member 'UItemManagementInventoryPanel_C::CurrentFilterLabel' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, CurrentFilterLabelWorldItems) == 0x000348, "Member 'UItemManagementInventoryPanel_C::CurrentFilterLabelWorldItems' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, EquipSlot1) == 0x000350, "Member 'UItemManagementInventoryPanel_C::EquipSlot1' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, EquipSlot2) == 0x000358, "Member 'UItemManagementInventoryPanel_C::EquipSlot2' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, EquipSlot3) == 0x000360, "Member 'UItemManagementInventoryPanel_C::EquipSlot3' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, FilterBarSwitcher) == 0x000368, "Member 'UItemManagementInventoryPanel_C::FilterBarSwitcher' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, Filters) == 0x000370, "Member 'UItemManagementInventoryPanel_C::Filters' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, FilterSortSwitcher) == 0x000378, "Member 'UItemManagementInventoryPanel_C::FilterSortSwitcher' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, FocusSwitcher) == 0x000380, "Member 'UItemManagementInventoryPanel_C::FocusSwitcher' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, InventoryLimitSwitcher) == 0x000388, "Member 'UItemManagementInventoryPanel_C::InventoryLimitSwitcher' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, ItemCraftingIngredientList) == 0x000390, "Member 'UItemManagementInventoryPanel_C::ItemCraftingIngredientList' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, PageTitle) == 0x000398, "Member 'UItemManagementInventoryPanel_C::PageTitle' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, RecycleItemCountText) == 0x0003A0, "Member 'UItemManagementInventoryPanel_C::RecycleItemCountText' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, RecycleTitle) == 0x0003A8, "Member 'UItemManagementInventoryPanel_C::RecycleTitle' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, Recycling) == 0x0003B0, "Member 'UItemManagementInventoryPanel_C::Recycling' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, SortTypeButton) == 0x0003B8, "Member 'UItemManagementInventoryPanel_C::SortTypeButton' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, SortTypeButtonWorldItems) == 0x0003C0, "Member 'UItemManagementInventoryPanel_C::SortTypeButtonWorldItems' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, StorageText) == 0x0003C8, "Member 'UItemManagementInventoryPanel_C::StorageText' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, UpgradeResourcesBox) == 0x0003D0, "Member 'UItemManagementInventoryPanel_C::UpgradeResourcesBox' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, bUseRetire) == 0x0003D8, "Member 'UItemManagementInventoryPanel_C::bUseRetire' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, bHideCount) == 0x0003D9, "Member 'UItemManagementInventoryPanel_C::bHideCount' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, bHideResources) == 0x0003DA, "Member 'UItemManagementInventoryPanel_C::bHideResources' has a wrong offset!");
static_assert(offsetof(UItemManagementInventoryPanel_C, bHideTitle) == 0x0003DB, "Member 'UItemManagementInventoryPanel_C::bHideTitle' has a wrong offset!");

}

