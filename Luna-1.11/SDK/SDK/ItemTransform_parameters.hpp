#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemTransform

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function ItemTransform.ItemTransform_C.ExecuteUbergraph_ItemTransform
// 0x00A8 (0x00A8 - 0x0000)
struct ItemTransform_C_ExecuteUbergraph_ItemTransform final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              K2Node_ComponentBoundEvent_Key;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TArray<struct FFortItemInstanceQuantityPair>& TransmoggedItems, TArray<struct FFortItemInstanceQuantityPair>& RecycledItems)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FText& ErrorMessage)>    K2Node_CreateDelegate_OutputDelegate2;             // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_ComponentBoundEvent_ActiveWidget;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_ActiveWidgetIndex;      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleSelect_PassThrough;                 // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_TransformActive;        // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57[0x1];                                       // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue2;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HandleClosePicker_PassThrough;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue2;        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemTransform_C_ExecuteUbergraph_ItemTransform) == 0x000008, "Wrong alignment on ItemTransform_C_ExecuteUbergraph_ItemTransform");
static_assert(sizeof(ItemTransform_C_ExecuteUbergraph_ItemTransform) == 0x0000A8, "Wrong size on ItemTransform_C_ExecuteUbergraph_ItemTransform");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, EntryPoint) == 0x000000, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::EntryPoint' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, K2Node_ComponentBoundEvent_Key) == 0x000008, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::K2Node_ComponentBoundEvent_Key' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, Temp_object_Variable) == 0x000010, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, CallFunc_GetContext_ReturnValue) == 0x000028, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, K2Node_CreateDelegate_OutputDelegate2) == 0x000030, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, K2Node_ComponentBoundEvent_ActiveWidget) == 0x000048, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::K2Node_ComponentBoundEvent_ActiveWidget' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, K2Node_ComponentBoundEvent_ActiveWidgetIndex) == 0x000050, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::K2Node_ComponentBoundEvent_ActiveWidgetIndex' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, K2Node_SwitchInteger_CmpSuccess) == 0x000054, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, CallFunc_HandleSelect_PassThrough) == 0x000055, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::CallFunc_HandleSelect_PassThrough' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, K2Node_ComponentBoundEvent_TransformActive) == 0x000056, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::K2Node_ComponentBoundEvent_TransformActive' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000058, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00005C, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, K2Node_CreateDelegate_OutputDelegate3) == 0x000060, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, K2Node_CreateDelegate_OutputDelegate4) == 0x000070, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, Temp_int_Variable) == 0x000080, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, CallFunc_GetContext_ReturnValue2) == 0x000088, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000090, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, CallFunc_HandleClosePicker_PassThrough) == 0x000098, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::CallFunc_HandleClosePicker_PassThrough' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, CallFunc_GetActiveWidgetIndex_ReturnValue2) == 0x00009C, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::CallFunc_GetActiveWidgetIndex_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ExecuteUbergraph_ItemTransform, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x0000A0, "Member 'ItemTransform_C_ExecuteUbergraph_ItemTransform::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");

// Function ItemTransform.ItemTransform_C.BndEvt__SlotScreen_K2Node_ComponentBoundEvent_598_OnTransformButtonUpdated__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct ItemTransform_C_BndEvt__SlotScreen_K2Node_ComponentBoundEvent_598_OnTransformButtonUpdated__DelegateSignature final
{
public:
	bool                                          TransformActive;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemTransform_C_BndEvt__SlotScreen_K2Node_ComponentBoundEvent_598_OnTransformButtonUpdated__DelegateSignature) == 0x000001, "Wrong alignment on ItemTransform_C_BndEvt__SlotScreen_K2Node_ComponentBoundEvent_598_OnTransformButtonUpdated__DelegateSignature");
static_assert(sizeof(ItemTransform_C_BndEvt__SlotScreen_K2Node_ComponentBoundEvent_598_OnTransformButtonUpdated__DelegateSignature) == 0x000001, "Wrong size on ItemTransform_C_BndEvt__SlotScreen_K2Node_ComponentBoundEvent_598_OnTransformButtonUpdated__DelegateSignature");
static_assert(offsetof(ItemTransform_C_BndEvt__SlotScreen_K2Node_ComponentBoundEvent_598_OnTransformButtonUpdated__DelegateSignature, TransformActive) == 0x000000, "Member 'ItemTransform_C_BndEvt__SlotScreen_K2Node_ComponentBoundEvent_598_OnTransformButtonUpdated__DelegateSignature::TransformActive' has a wrong offset!");

// Function ItemTransform.ItemTransform_C.BndEvt__TransformScreenSwitcher_K2Node_ComponentBoundEvent_213_OnActiveWidgetChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ItemTransform_C_BndEvt__TransformScreenSwitcher_K2Node_ComponentBoundEvent_213_OnActiveWidgetChanged__DelegateSignature final
{
public:
	class UWidget*                                ActiveWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActiveWidgetIndex;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemTransform_C_BndEvt__TransformScreenSwitcher_K2Node_ComponentBoundEvent_213_OnActiveWidgetChanged__DelegateSignature) == 0x000008, "Wrong alignment on ItemTransform_C_BndEvt__TransformScreenSwitcher_K2Node_ComponentBoundEvent_213_OnActiveWidgetChanged__DelegateSignature");
static_assert(sizeof(ItemTransform_C_BndEvt__TransformScreenSwitcher_K2Node_ComponentBoundEvent_213_OnActiveWidgetChanged__DelegateSignature) == 0x000010, "Wrong size on ItemTransform_C_BndEvt__TransformScreenSwitcher_K2Node_ComponentBoundEvent_213_OnActiveWidgetChanged__DelegateSignature");
static_assert(offsetof(ItemTransform_C_BndEvt__TransformScreenSwitcher_K2Node_ComponentBoundEvent_213_OnActiveWidgetChanged__DelegateSignature, ActiveWidget) == 0x000000, "Member 'ItemTransform_C_BndEvt__TransformScreenSwitcher_K2Node_ComponentBoundEvent_213_OnActiveWidgetChanged__DelegateSignature::ActiveWidget' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_BndEvt__TransformScreenSwitcher_K2Node_ComponentBoundEvent_213_OnActiveWidgetChanged__DelegateSignature, ActiveWidgetIndex) == 0x000008, "Member 'ItemTransform_C_BndEvt__TransformScreenSwitcher_K2Node_ComponentBoundEvent_213_OnActiveWidgetChanged__DelegateSignature::ActiveWidgetIndex' has a wrong offset!");

// Function ItemTransform.ItemTransform_C.BndEvt__KeyScreen_K2Node_ComponentBoundEvent_6_OnKeySelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct ItemTransform_C_BndEvt__KeyScreen_K2Node_ComponentBoundEvent_6_OnKeySelected__DelegateSignature final
{
public:
	class UFortItem*                              Key;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemTransform_C_BndEvt__KeyScreen_K2Node_ComponentBoundEvent_6_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on ItemTransform_C_BndEvt__KeyScreen_K2Node_ComponentBoundEvent_6_OnKeySelected__DelegateSignature");
static_assert(sizeof(ItemTransform_C_BndEvt__KeyScreen_K2Node_ComponentBoundEvent_6_OnKeySelected__DelegateSignature) == 0x000008, "Wrong size on ItemTransform_C_BndEvt__KeyScreen_K2Node_ComponentBoundEvent_6_OnKeySelected__DelegateSignature");
static_assert(offsetof(ItemTransform_C_BndEvt__KeyScreen_K2Node_ComponentBoundEvent_6_OnKeySelected__DelegateSignature, Key) == 0x000000, "Member 'ItemTransform_C_BndEvt__KeyScreen_K2Node_ComponentBoundEvent_6_OnKeySelected__DelegateSignature::Key' has a wrong offset!");

// Function ItemTransform.ItemTransform_C.OpenItemTransform
// 0x0008 (0x0008 - 0x0000)
struct ItemTransform_C_OpenItemTransform final
{
public:
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemTransform_C_OpenItemTransform) == 0x000008, "Wrong alignment on ItemTransform_C_OpenItemTransform");
static_assert(sizeof(ItemTransform_C_OpenItemTransform) == 0x000008, "Wrong size on ItemTransform_C_OpenItemTransform");
static_assert(offsetof(ItemTransform_C_OpenItemTransform, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'ItemTransform_C_OpenItemTransform::CallFunc_GetContext_ReturnValue' has a wrong offset!");

// Function ItemTransform.ItemTransform_C.SetupActionHandlers
// 0x0060 (0x0060 - 0x0000)
struct alignas(0x08) ItemTransform_C_SetupActionHandlers final
{
public:
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate2;             // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate3;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate4;             // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate5;             // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool* bPassThrough)>           K2Node_CreateDelegate_OutputDelegate6;             // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ItemTransform_C_SetupActionHandlers) == 0x000008, "Wrong alignment on ItemTransform_C_SetupActionHandlers");
static_assert(sizeof(ItemTransform_C_SetupActionHandlers) == 0x000060, "Wrong size on ItemTransform_C_SetupActionHandlers");
static_assert(offsetof(ItemTransform_C_SetupActionHandlers, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'ItemTransform_C_SetupActionHandlers::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_SetupActionHandlers, K2Node_CreateDelegate_OutputDelegate2) == 0x000010, "Member 'ItemTransform_C_SetupActionHandlers::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_SetupActionHandlers, K2Node_CreateDelegate_OutputDelegate3) == 0x000020, "Member 'ItemTransform_C_SetupActionHandlers::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_SetupActionHandlers, K2Node_CreateDelegate_OutputDelegate4) == 0x000030, "Member 'ItemTransform_C_SetupActionHandlers::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_SetupActionHandlers, K2Node_CreateDelegate_OutputDelegate5) == 0x000040, "Member 'ItemTransform_C_SetupActionHandlers::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_SetupActionHandlers, K2Node_CreateDelegate_OutputDelegate6) == 0x000050, "Member 'ItemTransform_C_SetupActionHandlers::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");

// Function ItemTransform.ItemTransform_C.HandleBack
// 0x0018 (0x0018 - 0x0000)
struct ItemTransform_C_HandleBack final
{
public:
	bool                                          Passthrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemTransform_C_HandleBack) == 0x000008, "Wrong alignment on ItemTransform_C_HandleBack");
static_assert(sizeof(ItemTransform_C_HandleBack) == 0x000018, "Wrong size on ItemTransform_C_HandleBack");
static_assert(offsetof(ItemTransform_C_HandleBack, Passthrough) == 0x000000, "Member 'ItemTransform_C_HandleBack::Passthrough' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_HandleBack, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000008, "Member 'ItemTransform_C_HandleBack::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_HandleBack, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000010, "Member 'ItemTransform_C_HandleBack::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_HandleBack, K2Node_SwitchInteger_CmpSuccess) == 0x000014, "Member 'ItemTransform_C_HandleBack::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function ItemTransform.ItemTransform_C.HandleSelect
// 0x000C (0x000C - 0x0000)
struct ItemTransform_C_HandleSelect final
{
public:
	bool                                          Passthrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemTransform_C_HandleSelect) == 0x000004, "Wrong alignment on ItemTransform_C_HandleSelect");
static_assert(sizeof(ItemTransform_C_HandleSelect) == 0x00000C, "Wrong size on ItemTransform_C_HandleSelect");
static_assert(offsetof(ItemTransform_C_HandleSelect, Passthrough) == 0x000000, "Member 'ItemTransform_C_HandleSelect::Passthrough' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_HandleSelect, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000004, "Member 'ItemTransform_C_HandleSelect::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_HandleSelect, K2Node_SwitchInteger_CmpSuccess) == 0x000008, "Member 'ItemTransform_C_HandleSelect::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

// Function ItemTransform.ItemTransform_C.OpenConfirmation
// 0x0040 (0x0040 - 0x0000)
struct ItemTransform_C_OpenConfirmation final
{
public:
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class UItemTransformConfirmationModal_C*      CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemTransform_C_OpenConfirmation) == 0x000008, "Wrong alignment on ItemTransform_C_OpenConfirmation");
static_assert(sizeof(ItemTransform_C_OpenConfirmation) == 0x000040, "Wrong size on ItemTransform_C_OpenConfirmation");
static_assert(offsetof(ItemTransform_C_OpenConfirmation, CallFunc_GetUINavigationManager_ReturnValue) == 0x000000, "Member 'ItemTransform_C_OpenConfirmation::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_OpenConfirmation, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'ItemTransform_C_OpenConfirmation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_OpenConfirmation, K2Node_CreateDelegate_OutputDelegate2) == 0x000018, "Member 'ItemTransform_C_OpenConfirmation::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_OpenConfirmation, CallFunc_Create_ReturnValue) == 0x000028, "Member 'ItemTransform_C_OpenConfirmation::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_OpenConfirmation, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'ItemTransform_C_OpenConfirmation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_OpenConfirmation, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000038, "Member 'ItemTransform_C_OpenConfirmation::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");

// Function ItemTransform.ItemTransform_C.HandleTransformConfirm
// 0x0020 (0x0020 - 0x0000)
struct ItemTransform_C_HandleTransformConfirm final
{
public:
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemDefinition*                    CallFunc_GetItemDefinitionBP_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortConversionControlItemDefinition*   K2Node_DynamicCast_AsFort_Conversion_Control_Item_Definition; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemTransform_C_HandleTransformConfirm) == 0x000008, "Wrong alignment on ItemTransform_C_HandleTransformConfirm");
static_assert(sizeof(ItemTransform_C_HandleTransformConfirm) == 0x000020, "Wrong size on ItemTransform_C_HandleTransformConfirm");
static_assert(offsetof(ItemTransform_C_HandleTransformConfirm, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'ItemTransform_C_HandleTransformConfirm::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_HandleTransformConfirm, CallFunc_GetItemDefinitionBP_ReturnValue) == 0x000008, "Member 'ItemTransform_C_HandleTransformConfirm::CallFunc_GetItemDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_HandleTransformConfirm, K2Node_DynamicCast_AsFort_Conversion_Control_Item_Definition) == 0x000010, "Member 'ItemTransform_C_HandleTransformConfirm::K2Node_DynamicCast_AsFort_Conversion_Control_Item_Definition' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_HandleTransformConfirm, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ItemTransform_C_HandleTransformConfirm::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ItemTransform.ItemTransform_C.OpenResult
// 0x0060 (0x0060 - 0x0000)
struct ItemTransform_C_OpenResult final
{
public:
	TArray<struct FFortItemInstanceQuantityPair>  RewardItems;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FFortItemInstanceQuantityPair>  SacrificeItems;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetCachedWidget_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemTransformResultModal_C*            K2Node_DynamicCast_AsItem_Transform_Result_Modal;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemTransform_C_OpenResult) == 0x000008, "Wrong alignment on ItemTransform_C_OpenResult");
static_assert(sizeof(ItemTransform_C_OpenResult) == 0x000060, "Wrong size on ItemTransform_C_OpenResult");
static_assert(offsetof(ItemTransform_C_OpenResult, RewardItems) == 0x000000, "Member 'ItemTransform_C_OpenResult::RewardItems' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_OpenResult, SacrificeItems) == 0x000010, "Member 'ItemTransform_C_OpenResult::SacrificeItems' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_OpenResult, CallFunc_GetUINavigationManager_ReturnValue) == 0x000020, "Member 'ItemTransform_C_OpenResult::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_OpenResult, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'ItemTransform_C_OpenResult::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_OpenResult, CallFunc_GetContext_ReturnValue) == 0x000038, "Member 'ItemTransform_C_OpenResult::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_OpenResult, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000040, "Member 'ItemTransform_C_OpenResult::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_OpenResult, CallFunc_GetCachedWidget_ReturnValue) == 0x000048, "Member 'ItemTransform_C_OpenResult::CallFunc_GetCachedWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_OpenResult, K2Node_DynamicCast_AsItem_Transform_Result_Modal) == 0x000050, "Member 'ItemTransform_C_OpenResult::K2Node_DynamicCast_AsItem_Transform_Result_Modal' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_OpenResult, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'ItemTransform_C_OpenResult::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ItemTransform.ItemTransform_C.HandleTransformSucceeded
// 0x0020 (0x0020 - 0x0000)
struct ItemTransform_C_HandleTransformSucceeded final
{
public:
	TArray<struct FFortItemInstanceQuantityPair>  RewardedItems;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FFortItemInstanceQuantityPair>  SacrificedItems;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(ItemTransform_C_HandleTransformSucceeded) == 0x000008, "Wrong alignment on ItemTransform_C_HandleTransformSucceeded");
static_assert(sizeof(ItemTransform_C_HandleTransformSucceeded) == 0x000020, "Wrong size on ItemTransform_C_HandleTransformSucceeded");
static_assert(offsetof(ItemTransform_C_HandleTransformSucceeded, RewardedItems) == 0x000000, "Member 'ItemTransform_C_HandleTransformSucceeded::RewardedItems' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_HandleTransformSucceeded, SacrificedItems) == 0x000010, "Member 'ItemTransform_C_HandleTransformSucceeded::SacrificedItems' has a wrong offset!");

// Function ItemTransform.ItemTransform_C.HandleTransformFailed
// 0x0018 (0x0018 - 0x0000)
struct ItemTransform_C_HandleTransformFailed final
{
public:
	class FText                                   ErrorMessage;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(ItemTransform_C_HandleTransformFailed) == 0x000008, "Wrong alignment on ItemTransform_C_HandleTransformFailed");
static_assert(sizeof(ItemTransform_C_HandleTransformFailed) == 0x000018, "Wrong size on ItemTransform_C_HandleTransformFailed");
static_assert(offsetof(ItemTransform_C_HandleTransformFailed, ErrorMessage) == 0x000000, "Member 'ItemTransform_C_HandleTransformFailed::ErrorMessage' has a wrong offset!");

// Function ItemTransform.ItemTransform_C.ResetItemTransform
// 0x0018 (0x0018 - 0x0000)
struct ItemTransform_C_ResetItemTransform final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemTransform_C_ResetItemTransform) == 0x000008, "Wrong alignment on ItemTransform_C_ResetItemTransform");
static_assert(sizeof(ItemTransform_C_ResetItemTransform) == 0x000018, "Wrong size on ItemTransform_C_ResetItemTransform");
static_assert(offsetof(ItemTransform_C_ResetItemTransform, Temp_int_Variable) == 0x000000, "Member 'ItemTransform_C_ResetItemTransform::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ResetItemTransform, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000004, "Member 'ItemTransform_C_ResetItemTransform::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ResetItemTransform, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ItemTransform_C_ResetItemTransform::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_ResetItemTransform, Temp_object_Variable) == 0x000010, "Member 'ItemTransform_C_ResetItemTransform::Temp_object_Variable' has a wrong offset!");

// Function ItemTransform.ItemTransform_C.HandleTransformAction
// 0x0020 (0x0020 - 0x0000)
struct ItemTransform_C_HandleTransformAction final
{
public:
	bool                                          Passthrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortItem*>                      CallFunc_Get_Transform_Data_SacrificeItems;        // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Get_Transform_Data_CurrentSacrificePoints; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Transform_Data_CurrentTier;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemTransform_C_HandleTransformAction) == 0x000008, "Wrong alignment on ItemTransform_C_HandleTransformAction");
static_assert(sizeof(ItemTransform_C_HandleTransformAction) == 0x000020, "Wrong size on ItemTransform_C_HandleTransformAction");
static_assert(offsetof(ItemTransform_C_HandleTransformAction, Passthrough) == 0x000000, "Member 'ItemTransform_C_HandleTransformAction::Passthrough' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_HandleTransformAction, CallFunc_Get_Transform_Data_SacrificeItems) == 0x000008, "Member 'ItemTransform_C_HandleTransformAction::CallFunc_Get_Transform_Data_SacrificeItems' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_HandleTransformAction, CallFunc_Get_Transform_Data_CurrentSacrificePoints) == 0x000018, "Member 'ItemTransform_C_HandleTransformAction::CallFunc_Get_Transform_Data_CurrentSacrificePoints' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_HandleTransformAction, CallFunc_Get_Transform_Data_CurrentTier) == 0x00001C, "Member 'ItemTransform_C_HandleTransformAction::CallFunc_Get_Transform_Data_CurrentTier' has a wrong offset!");

// Function ItemTransform.ItemTransform_C.HandleSelectKeyAction
// 0x0002 (0x0002 - 0x0000)
struct ItemTransform_C_HandleSelectKeyAction final
{
public:
	bool                                          Passthrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HandleSelect_PassThrough;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemTransform_C_HandleSelectKeyAction) == 0x000001, "Wrong alignment on ItemTransform_C_HandleSelectKeyAction");
static_assert(sizeof(ItemTransform_C_HandleSelectKeyAction) == 0x000002, "Wrong size on ItemTransform_C_HandleSelectKeyAction");
static_assert(offsetof(ItemTransform_C_HandleSelectKeyAction, Passthrough) == 0x000000, "Member 'ItemTransform_C_HandleSelectKeyAction::Passthrough' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_HandleSelectKeyAction, CallFunc_HandleSelect_PassThrough) == 0x000001, "Member 'ItemTransform_C_HandleSelectKeyAction::CallFunc_HandleSelect_PassThrough' has a wrong offset!");

// Function ItemTransform.ItemTransform_C.Handle Select Key Activated
// 0x0010 (0x0010 - 0x0000)
struct ItemTransform_C_Handle_Select_Key_Activated final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              CallFunc_Get_Selected_Item_SelectedKey;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ItemTransform_C_Handle_Select_Key_Activated) == 0x000008, "Wrong alignment on ItemTransform_C_Handle_Select_Key_Activated");
static_assert(sizeof(ItemTransform_C_Handle_Select_Key_Activated) == 0x000010, "Wrong size on ItemTransform_C_Handle_Select_Key_Activated");
static_assert(offsetof(ItemTransform_C_Handle_Select_Key_Activated, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ItemTransform_C_Handle_Select_Key_Activated::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemTransform_C_Handle_Select_Key_Activated, CallFunc_Get_Selected_Item_SelectedKey) == 0x000008, "Member 'ItemTransform_C_Handle_Select_Key_Activated::CallFunc_Get_Selected_Item_SelectedKey' has a wrong offset!");

// Function ItemTransform.ItemTransform_C.UpdateTransformAction
// 0x0001 (0x0001 - 0x0000)
struct ItemTransform_C_UpdateTransformAction final
{
public:
	bool                                          TransformActive;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemTransform_C_UpdateTransformAction) == 0x000001, "Wrong alignment on ItemTransform_C_UpdateTransformAction");
static_assert(sizeof(ItemTransform_C_UpdateTransformAction) == 0x000001, "Wrong size on ItemTransform_C_UpdateTransformAction");
static_assert(offsetof(ItemTransform_C_UpdateTransformAction, TransformActive) == 0x000000, "Member 'ItemTransform_C_UpdateTransformAction::TransformActive' has a wrong offset!");

// Function ItemTransform.ItemTransform_C.HandleClosePicker
// 0x0001 (0x0001 - 0x0000)
struct ItemTransform_C_HandleClosePicker final
{
public:
	bool                                          Passthrough;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemTransform_C_HandleClosePicker) == 0x000001, "Wrong alignment on ItemTransform_C_HandleClosePicker");
static_assert(sizeof(ItemTransform_C_HandleClosePicker) == 0x000001, "Wrong size on ItemTransform_C_HandleClosePicker");
static_assert(offsetof(ItemTransform_C_HandleClosePicker, Passthrough) == 0x000000, "Member 'ItemTransform_C_HandleClosePicker::Passthrough' has a wrong offset!");

}

