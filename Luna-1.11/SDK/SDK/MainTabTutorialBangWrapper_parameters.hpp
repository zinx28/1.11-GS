#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MainTabTutorialBangWrapper

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function MainTabTutorialBangWrapper.MainTabTutorialBangWrapper_C.ExecuteUbergraph_MainTabTutorialBangWrapper
// 0x0078 (0x0078 - 0x0000)
struct MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnabled;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Count;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue2;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortUIFeatureState                           CallFunc_GetFeatureState_OutFeatureState;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortUIFeatureStateReason                     CallFunc_GetFeatureState_OutReason;                // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47[0x1];                                       // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTabRevealMeassage_C*                   CallFunc_Create_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper) == 0x000008, "Wrong alignment on MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper");
static_assert(sizeof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper) == 0x000078, "Wrong size on MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper");
static_assert(offsetof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper, EntryPoint) == 0x000000, "Member 'MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper::EntryPoint' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper, K2Node_Event_bEnabled) == 0x000010, "Member 'MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper::K2Node_Event_bEnabled' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper, K2Node_Event_Count) == 0x000014, "Member 'MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper::K2Node_Event_Count' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper, K2Node_Event_IsDesignTime) == 0x000018, "Member 'MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper, CallFunc_GetContext_ReturnValue2) == 0x000038, "Member 'MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper, Temp_byte_Variable) == 0x000040, "Member 'MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper, CallFunc_GetFeatureState_OutFeatureState) == 0x000041, "Member 'MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper::CallFunc_GetFeatureState_OutFeatureState' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper, CallFunc_GetFeatureState_OutReason) == 0x000042, "Member 'MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper::CallFunc_GetFeatureState_OutReason' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000043, "Member 'MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000044, "Member 'MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper, Temp_byte_Variable2) == 0x000045, "Member 'MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper, CallFunc_BooleanAND_ReturnValue) == 0x000046, "Member 'MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000048, "Member 'MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper, CallFunc_GetOwningPlayer_ReturnValue) == 0x000050, "Member 'MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper, CallFunc_Create_ReturnValue) == 0x000058, "Member 'MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper, Temp_bool_Variable) == 0x000060, "Member 'MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper, K2Node_Select_Default) == 0x000061, "Member 'MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper, K2Node_CreateDelegate_OutputDelegate) == 0x000068, "Member 'MainTabTutorialBangWrapper_C_ExecuteUbergraph_MainTabTutorialBangWrapper::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function MainTabTutorialBangWrapper.MainTabTutorialBangWrapper_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct MainTabTutorialBangWrapper_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MainTabTutorialBangWrapper_C_PreConstruct) == 0x000001, "Wrong alignment on MainTabTutorialBangWrapper_C_PreConstruct");
static_assert(sizeof(MainTabTutorialBangWrapper_C_PreConstruct) == 0x000001, "Wrong size on MainTabTutorialBangWrapper_C_PreConstruct");
static_assert(offsetof(MainTabTutorialBangWrapper_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'MainTabTutorialBangWrapper_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function MainTabTutorialBangWrapper.MainTabTutorialBangWrapper_C.OnBangStateChanged
// 0x0008 (0x0008 - 0x0000)
struct MainTabTutorialBangWrapper_C_OnBangStateChanged final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Count;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainTabTutorialBangWrapper_C_OnBangStateChanged) == 0x000004, "Wrong alignment on MainTabTutorialBangWrapper_C_OnBangStateChanged");
static_assert(sizeof(MainTabTutorialBangWrapper_C_OnBangStateChanged) == 0x000008, "Wrong size on MainTabTutorialBangWrapper_C_OnBangStateChanged");
static_assert(offsetof(MainTabTutorialBangWrapper_C_OnBangStateChanged, bEnabled) == 0x000000, "Member 'MainTabTutorialBangWrapper_C_OnBangStateChanged::bEnabled' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_OnBangStateChanged, Param_Count) == 0x000004, "Member 'MainTabTutorialBangWrapper_C_OnBangStateChanged::Param_Count' has a wrong offset!");

// Function MainTabTutorialBangWrapper.MainTabTutorialBangWrapper_C.SetTutorialBorderStyle
// 0x0008 (0x0008 - 0x0000)
struct MainTabTutorialBangWrapper_C_SetTutorialBorderStyle final
{
public:
	class UClass*                                 BorderStyle;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainTabTutorialBangWrapper_C_SetTutorialBorderStyle) == 0x000008, "Wrong alignment on MainTabTutorialBangWrapper_C_SetTutorialBorderStyle");
static_assert(sizeof(MainTabTutorialBangWrapper_C_SetTutorialBorderStyle) == 0x000008, "Wrong size on MainTabTutorialBangWrapper_C_SetTutorialBorderStyle");
static_assert(offsetof(MainTabTutorialBangWrapper_C_SetTutorialBorderStyle, BorderStyle) == 0x000000, "Member 'MainTabTutorialBangWrapper_C_SetTutorialBorderStyle::BorderStyle' has a wrong offset!");

// Function MainTabTutorialBangWrapper.MainTabTutorialBangWrapper_C.Update Bang Icon Version
// 0x0024 (0x0024 - 0x0000)
struct MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version final
{
public:
	int32                                         InCount;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable3;                                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable4;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select2_Default;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version) == 0x000004, "Wrong alignment on MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version");
static_assert(sizeof(MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version) == 0x000024, "Wrong size on MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version");
static_assert(offsetof(MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version, InCount) == 0x000000, "Member 'MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version::InCount' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version, Temp_int_Variable) == 0x000004, "Member 'MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version, Temp_int_Variable2) == 0x000008, "Member 'MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version, Temp_bool_Variable) == 0x00000C, "Member 'MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version, Temp_int_Variable3) == 0x000010, "Member 'MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version, Temp_int_Variable4) == 0x000014, "Member 'MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version::Temp_int_Variable4' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version, Temp_bool_Variable2) == 0x000018, "Member 'MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001A, "Member 'MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version, K2Node_Select_Default) == 0x00001C, "Member 'MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version, K2Node_Select2_Default) == 0x000020, "Member 'MainTabTutorialBangWrapper_C_Update_Bang_Icon_Version::K2Node_Select2_Default' has a wrong offset!");

// Function MainTabTutorialBangWrapper.MainTabTutorialBangWrapper_C.Adjust Bang Image Translation
// 0x0008 (0x0008 - 0x0000)
struct MainTabTutorialBangWrapper_C_Adjust_Bang_Image_Translation final
{
public:
	struct FVector2D                              Translation;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MainTabTutorialBangWrapper_C_Adjust_Bang_Image_Translation) == 0x000004, "Wrong alignment on MainTabTutorialBangWrapper_C_Adjust_Bang_Image_Translation");
static_assert(sizeof(MainTabTutorialBangWrapper_C_Adjust_Bang_Image_Translation) == 0x000008, "Wrong size on MainTabTutorialBangWrapper_C_Adjust_Bang_Image_Translation");
static_assert(offsetof(MainTabTutorialBangWrapper_C_Adjust_Bang_Image_Translation, Translation) == 0x000000, "Member 'MainTabTutorialBangWrapper_C_Adjust_Bang_Image_Translation::Translation' has a wrong offset!");

// Function MainTabTutorialBangWrapper.MainTabTutorialBangWrapper_C.SetUIFeatureRevealData
// 0x0020 (0x0020 - 0x0000)
struct MainTabTutorialBangWrapper_C_SetUIFeatureRevealData final
{
public:
	EFortUIFeature                                UIFeature;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   RevealText;                                        // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(MainTabTutorialBangWrapper_C_SetUIFeatureRevealData) == 0x000008, "Wrong alignment on MainTabTutorialBangWrapper_C_SetUIFeatureRevealData");
static_assert(sizeof(MainTabTutorialBangWrapper_C_SetUIFeatureRevealData) == 0x000020, "Wrong size on MainTabTutorialBangWrapper_C_SetUIFeatureRevealData");
static_assert(offsetof(MainTabTutorialBangWrapper_C_SetUIFeatureRevealData, UIFeature) == 0x000000, "Member 'MainTabTutorialBangWrapper_C_SetUIFeatureRevealData::UIFeature' has a wrong offset!");
static_assert(offsetof(MainTabTutorialBangWrapper_C_SetUIFeatureRevealData, RevealText) == 0x000008, "Member 'MainTabTutorialBangWrapper_C_SetUIFeatureRevealData::RevealText' has a wrong offset!");

}

