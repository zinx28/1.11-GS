#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Parent_Tree

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function Parent_Tree.Parent_Tree_C.ExecuteUbergraph_Parent_Tree
// 0x000C (0x000C - 0x0000)
struct Parent_Tree_C_ExecuteUbergraph_Parent_Tree final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Intensity;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Time_It_Takes_To_Reach_New_Intensity; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Parent_Tree_C_ExecuteUbergraph_Parent_Tree) == 0x000004, "Wrong alignment on Parent_Tree_C_ExecuteUbergraph_Parent_Tree");
static_assert(sizeof(Parent_Tree_C_ExecuteUbergraph_Parent_Tree) == 0x00000C, "Wrong size on Parent_Tree_C_ExecuteUbergraph_Parent_Tree");
static_assert(offsetof(Parent_Tree_C_ExecuteUbergraph_Parent_Tree, EntryPoint) == 0x000000, "Member 'Parent_Tree_C_ExecuteUbergraph_Parent_Tree::EntryPoint' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_ExecuteUbergraph_Parent_Tree, K2Node_CustomEvent_Intensity) == 0x000004, "Member 'Parent_Tree_C_ExecuteUbergraph_Parent_Tree::K2Node_CustomEvent_Intensity' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_ExecuteUbergraph_Parent_Tree, K2Node_CustomEvent_Time_It_Takes_To_Reach_New_Intensity) == 0x000008, "Member 'Parent_Tree_C_ExecuteUbergraph_Parent_Tree::K2Node_CustomEvent_Time_It_Takes_To_Reach_New_Intensity' has a wrong offset!");

// Function Parent_Tree.Parent_Tree_C.ChangeWindIntensity
// 0x0008 (0x0008 - 0x0000)
struct Parent_Tree_C_ChangeWindIntensity final
{
public:
	float                                         Intensity;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time_It_Takes_To_Reach_New_Intensity;              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Parent_Tree_C_ChangeWindIntensity) == 0x000004, "Wrong alignment on Parent_Tree_C_ChangeWindIntensity");
static_assert(sizeof(Parent_Tree_C_ChangeWindIntensity) == 0x000008, "Wrong size on Parent_Tree_C_ChangeWindIntensity");
static_assert(offsetof(Parent_Tree_C_ChangeWindIntensity, Intensity) == 0x000000, "Member 'Parent_Tree_C_ChangeWindIntensity::Intensity' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_ChangeWindIntensity, Time_It_Takes_To_Reach_New_Intensity) == 0x000004, "Member 'Parent_Tree_C_ChangeWindIntensity::Time_It_Takes_To_Reach_New_Intensity' has a wrong offset!");

// Function Parent_Tree.Parent_Tree_C.UserConstructionScript
// 0x01D0 (0x01D0 - 0x0000)
struct Parent_Tree_C_UserConstructionScript final
{
public:
	TArray<class UMaterialInterface*>             IntenseWindMaterialsForPreview;                    // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UMaterialInterface*>             OriginalMaterials;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, ReferenceParm)
	class UCurveLinearColor*                      CallFunc_GetWindPannerSpeedCurveForPreview_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue2;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      CallFunc_GetWindSpeedCurveForPreview_ReturnValue;  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetBuildingMeshComponent_ReturnValue;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetIntenseWindMaterialsForPreview_Materials; // 0x00E0(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_GetIntenseWindMaterialsForPreview_ReturnValue; // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item2;                          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      K2Node_DynamicCast_AsMaterial_Instance2;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0138(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0144(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0160(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveLinearColor*                      CallFunc_GetWindPannerSpeedCurveForPreview_ReturnValue2; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveLinearColor*                      CallFunc_GetWindSpeedCurveForPreview_ReturnValue2; // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x0180(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakColor_R;                             // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue2;         // 0x01A4(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetBuildingMeshComponent_ReturnValue2;    // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R2;                            // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G2;                            // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B2;                            // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A2;                            // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Parent_Tree_C_UserConstructionScript) == 0x000010, "Wrong alignment on Parent_Tree_C_UserConstructionScript");
static_assert(sizeof(Parent_Tree_C_UserConstructionScript) == 0x0001D0, "Wrong size on Parent_Tree_C_UserConstructionScript");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, IntenseWindMaterialsForPreview) == 0x000000, "Member 'Parent_Tree_C_UserConstructionScript::IntenseWindMaterialsForPreview' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, OriginalMaterials) == 0x000010, "Member 'Parent_Tree_C_UserConstructionScript::OriginalMaterials' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000020, "Member 'Parent_Tree_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue) == 0x000028, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue2) == 0x00003C, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetMaterials_ReturnValue) == 0x000048, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetWindPannerSpeedCurveForPreview_ReturnValue) == 0x000058, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetWindPannerSpeedCurveForPreview_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetDisplayName_ReturnValue2) == 0x000068, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetDisplayName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_IsValid_ReturnValue2) == 0x000078, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetWindSpeedCurveForPreview_ReturnValue) == 0x000080, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetWindSpeedCurveForPreview_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetBuildingMeshComponent_ReturnValue) == 0x000088, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetBuildingMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_IsValid_ReturnValue3) == 0x000090, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000094, "Member 'Parent_Tree_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, Temp_struct_Variable) == 0x0000A0, "Member 'Parent_Tree_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x0000D0, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x0000D8, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetIntenseWindMaterialsForPreview_Materials) == 0x0000E0, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetIntenseWindMaterialsForPreview_Materials' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetIntenseWindMaterialsForPreview_ReturnValue) == 0x0000F0, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetIntenseWindMaterialsForPreview_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, K2Node_DynamicCast_AsMaterial_Instance) == 0x000100, "Member 'Parent_Tree_C_UserConstructionScript::K2Node_DynamicCast_AsMaterial_Instance' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'Parent_Tree_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_Array_Get_Item2) == 0x000110, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue3) == 0x000118, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, K2Node_DynamicCast_AsMaterial_Instance2) == 0x000120, "Member 'Parent_Tree_C_UserConstructionScript::K2Node_DynamicCast_AsMaterial_Instance2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, K2Node_DynamicCast_bSuccess2) == 0x000128, "Member 'Parent_Tree_C_UserConstructionScript::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000129, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000130, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000138, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_RotateAngleAxis_ReturnValue) == 0x000144, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000150, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000154, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000158, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x00015C, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_MakeColor_ReturnValue) == 0x000160, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetWindPannerSpeedCurveForPreview_ReturnValue2) == 0x000170, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetWindPannerSpeedCurveForPreview_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetWindSpeedCurveForPreview_ReturnValue2) == 0x000178, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetWindSpeedCurveForPreview_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetLinearColorValue_ReturnValue) == 0x000180, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_IsValid_ReturnValue4) == 0x000190, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakColor_R) == 0x000194, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakColor_G) == 0x000198, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakColor_B) == 0x00019C, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakColor_A) == 0x0001A0, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetLinearColorValue_ReturnValue2) == 0x0001A4, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetLinearColorValue_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_GetBuildingMeshComponent_ReturnValue2) == 0x0001B8, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_GetBuildingMeshComponent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakColor_R2) == 0x0001C0, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakColor_R2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakColor_G2) == 0x0001C4, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakColor_G2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakColor_B2) == 0x0001C8, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakColor_B2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_UserConstructionScript, CallFunc_BreakColor_A2) == 0x0001CC, "Member 'Parent_Tree_C_UserConstructionScript::CallFunc_BreakColor_A2' has a wrong offset!");

// Function Parent_Tree.Parent_Tree_C.FX_UpdateEmitterStates
// 0x0020 (0x0020 - 0x0000)
struct Parent_Tree_C_FX_UpdateEmitterStates final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Parent_Tree_C_FX_UpdateEmitterStates) == 0x000008, "Wrong alignment on Parent_Tree_C_FX_UpdateEmitterStates");
static_assert(sizeof(Parent_Tree_C_FX_UpdateEmitterStates) == 0x000020, "Wrong size on Parent_Tree_C_FX_UpdateEmitterStates");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterStates, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Parent_Tree_C_FX_UpdateEmitterStates::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterStates, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Parent_Tree_C_FX_UpdateEmitterStates::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterStates, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Parent_Tree_C_FX_UpdateEmitterStates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterStates, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'Parent_Tree_C_FX_UpdateEmitterStates::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterStates, CallFunc_Array_Get_Item) == 0x000010, "Member 'Parent_Tree_C_FX_UpdateEmitterStates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterStates, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'Parent_Tree_C_FX_UpdateEmitterStates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterStates, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'Parent_Tree_C_FX_UpdateEmitterStates::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Parent_Tree.Parent_Tree_C.FX_UpdateEmitterParameters
// 0x0068 (0x0068 - 0x0000)
struct Parent_Tree_C_FX_UpdateEmitterParameters final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable3;                               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable5;                               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetShadowQuality_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select2_Default;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select3_Default;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select4_Default;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select5_Default;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Parent_Tree_C_FX_UpdateEmitterParameters) == 0x000008, "Wrong alignment on Parent_Tree_C_FX_UpdateEmitterParameters");
static_assert(sizeof(Parent_Tree_C_FX_UpdateEmitterParameters) == 0x000068, "Wrong size on Parent_Tree_C_FX_UpdateEmitterParameters");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterParameters, Temp_bool_Variable) == 0x000000, "Member 'Parent_Tree_C_FX_UpdateEmitterParameters::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterParameters, Temp_bool_Variable2) == 0x000001, "Member 'Parent_Tree_C_FX_UpdateEmitterParameters::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterParameters, Temp_bool_Variable3) == 0x000002, "Member 'Parent_Tree_C_FX_UpdateEmitterParameters::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterParameters, Temp_bool_Variable4) == 0x000003, "Member 'Parent_Tree_C_FX_UpdateEmitterParameters::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterParameters, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'Parent_Tree_C_FX_UpdateEmitterParameters::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterParameters, Temp_bool_Variable5) == 0x000010, "Member 'Parent_Tree_C_FX_UpdateEmitterParameters::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterParameters, CallFunc_GetShadowQuality_ReturnValue) == 0x000014, "Member 'Parent_Tree_C_FX_UpdateEmitterParameters::CallFunc_GetShadowQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterParameters, Temp_int_Variable) == 0x000018, "Member 'Parent_Tree_C_FX_UpdateEmitterParameters::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterParameters, K2Node_SwitchInteger_CmpSuccess) == 0x00001C, "Member 'Parent_Tree_C_FX_UpdateEmitterParameters::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterParameters, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'Parent_Tree_C_FX_UpdateEmitterParameters::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterParameters, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'Parent_Tree_C_FX_UpdateEmitterParameters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterParameters, K2Node_Select_Default) == 0x000028, "Member 'Parent_Tree_C_FX_UpdateEmitterParameters::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterParameters, K2Node_Select2_Default) == 0x000030, "Member 'Parent_Tree_C_FX_UpdateEmitterParameters::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterParameters, K2Node_Select3_Default) == 0x000038, "Member 'Parent_Tree_C_FX_UpdateEmitterParameters::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterParameters, CallFunc_GetNumMaterials_ReturnValue) == 0x000040, "Member 'Parent_Tree_C_FX_UpdateEmitterParameters::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterParameters, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'Parent_Tree_C_FX_UpdateEmitterParameters::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterParameters, K2Node_Select4_Default) == 0x000048, "Member 'Parent_Tree_C_FX_UpdateEmitterParameters::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterParameters, K2Node_SwitchEnum_CmpSuccess) == 0x000050, "Member 'Parent_Tree_C_FX_UpdateEmitterParameters::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterParameters, K2Node_Select5_Default) == 0x000054, "Member 'Parent_Tree_C_FX_UpdateEmitterParameters::K2Node_Select5_Default' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_FX_UpdateEmitterParameters, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000058, "Member 'Parent_Tree_C_FX_UpdateEmitterParameters::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function Parent_Tree.Parent_Tree_C.AddTestWind
// 0x00C8 (0x00C8 - 0x0000)
struct Parent_Tree_C_AddTestWind final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Magnitude;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWindManager*                       CallFunc_GetWindManager_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWindManager*                       CallFunc_GetWindManager_ReturnValue2;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetWindLocationFromWorldLocation_WindWorldLocation; // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetWindLocationFromWorldLocation_ReturnValue; // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0050(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X2;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x006C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortWindImpulseRadius                 CallFunc_MakeWindImpulseRadius_ReturnValue;        // 0x0078(0x004C)(NoDestructor)
	struct FFortWindImpulseHandle                 CallFunc_AddWindImpulse_ReturnValue;               // 0x00C4(0x0004)(NoDestructor)
};
static_assert(alignof(Parent_Tree_C_AddTestWind) == 0x000008, "Wrong alignment on Parent_Tree_C_AddTestWind");
static_assert(sizeof(Parent_Tree_C_AddTestWind) == 0x0000C8, "Wrong size on Parent_Tree_C_AddTestWind");
static_assert(offsetof(Parent_Tree_C_AddTestWind, BlendTime) == 0x000000, "Member 'Parent_Tree_C_AddTestWind::BlendTime' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_AddTestWind, Magnitude) == 0x000004, "Member 'Parent_Tree_C_AddTestWind::Magnitude' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_AddTestWind, Temp_bool_Variable) == 0x000008, "Member 'Parent_Tree_C_AddTestWind::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_AddTestWind, CallFunc_GetWindManager_ReturnValue) == 0x000010, "Member 'Parent_Tree_C_AddTestWind::CallFunc_GetWindManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_AddTestWind, CallFunc_GetWindManager_ReturnValue2) == 0x000018, "Member 'Parent_Tree_C_AddTestWind::CallFunc_GetWindManager_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_AddTestWind, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Parent_Tree_C_AddTestWind::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_AddTestWind, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'Parent_Tree_C_AddTestWind::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_AddTestWind, CallFunc_GetWindLocationFromWorldLocation_WindWorldLocation) == 0x000030, "Member 'Parent_Tree_C_AddTestWind::CallFunc_GetWindLocationFromWorldLocation_WindWorldLocation' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_AddTestWind, CallFunc_GetWindLocationFromWorldLocation_ReturnValue) == 0x00003C, "Member 'Parent_Tree_C_AddTestWind::CallFunc_GetWindLocationFromWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_AddTestWind, CallFunc_BreakVector_X) == 0x000040, "Member 'Parent_Tree_C_AddTestWind::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_AddTestWind, CallFunc_BreakVector_Y) == 0x000044, "Member 'Parent_Tree_C_AddTestWind::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_AddTestWind, CallFunc_BreakVector_Z) == 0x000048, "Member 'Parent_Tree_C_AddTestWind::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_AddTestWind, CallFunc_FMax_ReturnValue) == 0x00004C, "Member 'Parent_Tree_C_AddTestWind::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_AddTestWind, K2Node_Select_Default) == 0x000050, "Member 'Parent_Tree_C_AddTestWind::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_AddTestWind, CallFunc_BreakVector_X2) == 0x00005C, "Member 'Parent_Tree_C_AddTestWind::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_AddTestWind, CallFunc_BreakVector_Y2) == 0x000060, "Member 'Parent_Tree_C_AddTestWind::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_AddTestWind, CallFunc_BreakVector_Z2) == 0x000064, "Member 'Parent_Tree_C_AddTestWind::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_AddTestWind, CallFunc_Add_FloatFloat_ReturnValue) == 0x000068, "Member 'Parent_Tree_C_AddTestWind::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_AddTestWind, CallFunc_MakeVector_ReturnValue) == 0x00006C, "Member 'Parent_Tree_C_AddTestWind::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_AddTestWind, CallFunc_MakeWindImpulseRadius_ReturnValue) == 0x000078, "Member 'Parent_Tree_C_AddTestWind::CallFunc_MakeWindImpulseRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_AddTestWind, CallFunc_AddWindImpulse_ReturnValue) == 0x0000C4, "Member 'Parent_Tree_C_AddTestWind::CallFunc_AddWindImpulse_ReturnValue' has a wrong offset!");

// Function Parent_Tree.Parent_Tree_C.RemoveTestWind
// 0x0018 (0x0018 - 0x0000)
struct Parent_Tree_C_RemoveTestWind final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWindManager*                       CallFunc_GetWindManager_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasWindImpulse_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Parent_Tree_C_RemoveTestWind) == 0x000008, "Wrong alignment on Parent_Tree_C_RemoveTestWind");
static_assert(sizeof(Parent_Tree_C_RemoveTestWind) == 0x000018, "Wrong size on Parent_Tree_C_RemoveTestWind");
static_assert(offsetof(Parent_Tree_C_RemoveTestWind, BlendTime) == 0x000000, "Member 'Parent_Tree_C_RemoveTestWind::BlendTime' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_RemoveTestWind, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'Parent_Tree_C_RemoveTestWind::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_RemoveTestWind, CallFunc_GetWindManager_ReturnValue) == 0x000008, "Member 'Parent_Tree_C_RemoveTestWind::CallFunc_GetWindManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_RemoveTestWind, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Parent_Tree_C_RemoveTestWind::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Parent_Tree_C_RemoveTestWind, CallFunc_HasWindImpulse_ReturnValue) == 0x000011, "Member 'Parent_Tree_C_RemoveTestWind::CallFunc_HasWindImpulse_ReturnValue' has a wrong offset!");

}

