#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PinnedSchematicItemWidget

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function PinnedSchematicItemWidget.PinnedSchematicItemWidget_C.ExecuteUbergraph_PinnedSchematicItemWidget
// 0x0020 (0x0020 - 0x0000)
struct PinnedSchematicItemWidget_C_ExecuteUbergraph_PinnedSchematicItemWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortBaseButton*                        K2Node_CustomEvent_NewParam;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetSchematicPinned_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PinnedSchematicItemWidget_C_ExecuteUbergraph_PinnedSchematicItemWidget) == 0x000008, "Wrong alignment on PinnedSchematicItemWidget_C_ExecuteUbergraph_PinnedSchematicItemWidget");
static_assert(sizeof(PinnedSchematicItemWidget_C_ExecuteUbergraph_PinnedSchematicItemWidget) == 0x000020, "Wrong size on PinnedSchematicItemWidget_C_ExecuteUbergraph_PinnedSchematicItemWidget");
static_assert(offsetof(PinnedSchematicItemWidget_C_ExecuteUbergraph_PinnedSchematicItemWidget, EntryPoint) == 0x000000, "Member 'PinnedSchematicItemWidget_C_ExecuteUbergraph_PinnedSchematicItemWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_ExecuteUbergraph_PinnedSchematicItemWidget, K2Node_CustomEvent_NewParam) == 0x000008, "Member 'PinnedSchematicItemWidget_C_ExecuteUbergraph_PinnedSchematicItemWidget::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_ExecuteUbergraph_PinnedSchematicItemWidget, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'PinnedSchematicItemWidget_C_ExecuteUbergraph_PinnedSchematicItemWidget::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_ExecuteUbergraph_PinnedSchematicItemWidget, CallFunc_SetSchematicPinned_ReturnValue) == 0x000018, "Member 'PinnedSchematicItemWidget_C_ExecuteUbergraph_PinnedSchematicItemWidget::CallFunc_SetSchematicPinned_ReturnValue' has a wrong offset!");

// Function PinnedSchematicItemWidget.PinnedSchematicItemWidget_C.PinButton_Clicked
// 0x0008 (0x0008 - 0x0000)
struct PinnedSchematicItemWidget_C_PinButton_Clicked final
{
public:
	class UFortBaseButton*                        NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PinnedSchematicItemWidget_C_PinButton_Clicked) == 0x000008, "Wrong alignment on PinnedSchematicItemWidget_C_PinButton_Clicked");
static_assert(sizeof(PinnedSchematicItemWidget_C_PinButton_Clicked) == 0x000008, "Wrong size on PinnedSchematicItemWidget_C_PinButton_Clicked");
static_assert(offsetof(PinnedSchematicItemWidget_C_PinButton_Clicked, NewParam) == 0x000000, "Member 'PinnedSchematicItemWidget_C_PinButton_Clicked::NewParam' has a wrong offset!");

// Function PinnedSchematicItemWidget.PinnedSchematicItemWidget_C.Refresh
// 0x0020 (0x0020 - 0x0000)
struct PinnedSchematicItemWidget_C_Refresh final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCraftingIngredient_C*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PinnedSchematicItemWidget_C_Refresh) == 0x000008, "Wrong alignment on PinnedSchematicItemWidget_C_Refresh");
static_assert(sizeof(PinnedSchematicItemWidget_C_Refresh) == 0x000020, "Wrong size on PinnedSchematicItemWidget_C_Refresh");
static_assert(offsetof(PinnedSchematicItemWidget_C_Refresh, Temp_int_Array_Index_Variable) == 0x000000, "Member 'PinnedSchematicItemWidget_C_Refresh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_Refresh, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'PinnedSchematicItemWidget_C_Refresh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_Refresh, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'PinnedSchematicItemWidget_C_Refresh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_Refresh, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'PinnedSchematicItemWidget_C_Refresh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_Refresh, CallFunc_Array_Get_Item) == 0x000010, "Member 'PinnedSchematicItemWidget_C_Refresh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_Refresh, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'PinnedSchematicItemWidget_C_Refresh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_Refresh, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'PinnedSchematicItemWidget_C_Refresh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function PinnedSchematicItemWidget.PinnedSchematicItemWidget_C.SetPinnedSchematic
// 0x0060 (0x0060 - 0x0000)
struct PinnedSchematicItemWidget_C_SetPinnedSchematic final
{
public:
	class UFortSchematicItem*                     NewPinnedSchematic;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetRarityColor_ReturnValue;               // 0x000C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0020(0x0028)()
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0048(0x0018)()
};
static_assert(alignof(PinnedSchematicItemWidget_C_SetPinnedSchematic) == 0x000008, "Wrong alignment on PinnedSchematicItemWidget_C_SetPinnedSchematic");
static_assert(sizeof(PinnedSchematicItemWidget_C_SetPinnedSchematic) == 0x000060, "Wrong size on PinnedSchematicItemWidget_C_SetPinnedSchematic");
static_assert(offsetof(PinnedSchematicItemWidget_C_SetPinnedSchematic, NewPinnedSchematic) == 0x000000, "Member 'PinnedSchematicItemWidget_C_SetPinnedSchematic::NewPinnedSchematic' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_SetPinnedSchematic, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'PinnedSchematicItemWidget_C_SetPinnedSchematic::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_SetPinnedSchematic, CallFunc_GetRarityColor_ReturnValue) == 0x00000C, "Member 'PinnedSchematicItemWidget_C_SetPinnedSchematic::CallFunc_GetRarityColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_SetPinnedSchematic, K2Node_MakeStruct_SlateColor) == 0x000020, "Member 'PinnedSchematicItemWidget_C_SetPinnedSchematic::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_SetPinnedSchematic, CallFunc_GetDisplayName_ReturnValue) == 0x000048, "Member 'PinnedSchematicItemWidget_C_SetPinnedSchematic::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");

// Function PinnedSchematicItemWidget.PinnedSchematicItemWidget_C.BindDelegates
// 0x0070 (0x0070 - 0x0000)
struct PinnedSchematicItemWidget_C_BindDelegates final
{
public:
	TDelegate<void(TArray<class UFortWorldItem*>& ItemsAdded, TArray<class UFortWorldItem*>& ItemsRemoved)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged)> K2Node_CreateDelegate_OutputDelegate3;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UFortSchematicItem* Schematic)> K2Node_CreateDelegate_OutputDelegate4;             // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bCursorModeEnabled, class FName ActionName, class UUserWidget* CursorModeContentWidget)> K2Node_CreateDelegate_OutputDelegate5;             // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate6;             // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue2;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PinnedSchematicItemWidget_C_BindDelegates) == 0x000008, "Wrong alignment on PinnedSchematicItemWidget_C_BindDelegates");
static_assert(sizeof(PinnedSchematicItemWidget_C_BindDelegates) == 0x000070, "Wrong size on PinnedSchematicItemWidget_C_BindDelegates");
static_assert(offsetof(PinnedSchematicItemWidget_C_BindDelegates, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'PinnedSchematicItemWidget_C_BindDelegates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_BindDelegates, K2Node_CreateDelegate_OutputDelegate2) == 0x000010, "Member 'PinnedSchematicItemWidget_C_BindDelegates::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_BindDelegates, K2Node_CreateDelegate_OutputDelegate3) == 0x000020, "Member 'PinnedSchematicItemWidget_C_BindDelegates::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_BindDelegates, K2Node_CreateDelegate_OutputDelegate4) == 0x000030, "Member 'PinnedSchematicItemWidget_C_BindDelegates::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_BindDelegates, K2Node_CreateDelegate_OutputDelegate5) == 0x000040, "Member 'PinnedSchematicItemWidget_C_BindDelegates::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_BindDelegates, CallFunc_GetContext_ReturnValue) == 0x000050, "Member 'PinnedSchematicItemWidget_C_BindDelegates::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_BindDelegates, K2Node_CreateDelegate_OutputDelegate6) == 0x000058, "Member 'PinnedSchematicItemWidget_C_BindDelegates::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_BindDelegates, CallFunc_GetContext_ReturnValue2) == 0x000068, "Member 'PinnedSchematicItemWidget_C_BindDelegates::CallFunc_GetContext_ReturnValue2' has a wrong offset!");

// Function PinnedSchematicItemWidget.PinnedSchematicItemWidget_C.HandleOnSchematicUnlocked
// 0x0010 (0x0010 - 0x0000)
struct PinnedSchematicItemWidget_C_HandleOnSchematicUnlocked final
{
public:
	class UFortSchematicItem*                     Schematic;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PinnedSchematicItemWidget_C_HandleOnSchematicUnlocked) == 0x000008, "Wrong alignment on PinnedSchematicItemWidget_C_HandleOnSchematicUnlocked");
static_assert(sizeof(PinnedSchematicItemWidget_C_HandleOnSchematicUnlocked) == 0x000010, "Wrong size on PinnedSchematicItemWidget_C_HandleOnSchematicUnlocked");
static_assert(offsetof(PinnedSchematicItemWidget_C_HandleOnSchematicUnlocked, Schematic) == 0x000000, "Member 'PinnedSchematicItemWidget_C_HandleOnSchematicUnlocked::Schematic' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_HandleOnSchematicUnlocked, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'PinnedSchematicItemWidget_C_HandleOnSchematicUnlocked::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function PinnedSchematicItemWidget.PinnedSchematicItemWidget_C.HandleWorldItemListChanged
// 0x0020 (0x0020 - 0x0000)
struct PinnedSchematicItemWidget_C_HandleWorldItemListChanged final
{
public:
	TArray<class UFortWorldItem*>                 ItemsAdded;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UFortWorldItem*>                 ItemsRemoved;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(PinnedSchematicItemWidget_C_HandleWorldItemListChanged) == 0x000008, "Wrong alignment on PinnedSchematicItemWidget_C_HandleWorldItemListChanged");
static_assert(sizeof(PinnedSchematicItemWidget_C_HandleWorldItemListChanged) == 0x000020, "Wrong size on PinnedSchematicItemWidget_C_HandleWorldItemListChanged");
static_assert(offsetof(PinnedSchematicItemWidget_C_HandleWorldItemListChanged, ItemsAdded) == 0x000000, "Member 'PinnedSchematicItemWidget_C_HandleWorldItemListChanged::ItemsAdded' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_HandleWorldItemListChanged, ItemsRemoved) == 0x000010, "Member 'PinnedSchematicItemWidget_C_HandleWorldItemListChanged::ItemsRemoved' has a wrong offset!");

// Function PinnedSchematicItemWidget.PinnedSchematicItemWidget_C.SetupIngredients
// 0x00C0 (0x00C0 - 0x0000)
struct PinnedSchematicItemWidget_C_SetupIngredients final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCraftingIngredient_C*                  CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRecipe                                CallFunc_GetSchematicRecipe_ReturnValue;           // 0x0020(0x0058)()
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortItemQuantityPair                  CallFunc_Array_Get_Item;                           // 0x0088(0x0030)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PinnedSchematicItemWidget_C_SetupIngredients) == 0x000008, "Wrong alignment on PinnedSchematicItemWidget_C_SetupIngredients");
static_assert(sizeof(PinnedSchematicItemWidget_C_SetupIngredients) == 0x0000C0, "Wrong size on PinnedSchematicItemWidget_C_SetupIngredients");
static_assert(offsetof(PinnedSchematicItemWidget_C_SetupIngredients, Temp_int_Array_Index_Variable) == 0x000000, "Member 'PinnedSchematicItemWidget_C_SetupIngredients::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_SetupIngredients, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'PinnedSchematicItemWidget_C_SetupIngredients::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_SetupIngredients, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'PinnedSchematicItemWidget_C_SetupIngredients::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_SetupIngredients, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'PinnedSchematicItemWidget_C_SetupIngredients::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_SetupIngredients, CallFunc_Create_ReturnValue) == 0x000018, "Member 'PinnedSchematicItemWidget_C_SetupIngredients::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_SetupIngredients, CallFunc_GetSchematicRecipe_ReturnValue) == 0x000020, "Member 'PinnedSchematicItemWidget_C_SetupIngredients::CallFunc_GetSchematicRecipe_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_SetupIngredients, CallFunc_AddChild_ReturnValue) == 0x000078, "Member 'PinnedSchematicItemWidget_C_SetupIngredients::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_SetupIngredients, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'PinnedSchematicItemWidget_C_SetupIngredients::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_SetupIngredients, CallFunc_Array_Get_Item) == 0x000088, "Member 'PinnedSchematicItemWidget_C_SetupIngredients::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_SetupIngredients, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'PinnedSchematicItemWidget_C_SetupIngredients::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_SetupIngredients, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'PinnedSchematicItemWidget_C_SetupIngredients::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function PinnedSchematicItemWidget.PinnedSchematicItemWidget_C.HandleItemChanged
// 0x0003 (0x0003 - 0x0000)
struct PinnedSchematicItemWidget_C_HandleItemChanged final
{
public:
	bool                                          ItemChanged;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AmmoChanged;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IngredientsChanged;                                // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PinnedSchematicItemWidget_C_HandleItemChanged) == 0x000001, "Wrong alignment on PinnedSchematicItemWidget_C_HandleItemChanged");
static_assert(sizeof(PinnedSchematicItemWidget_C_HandleItemChanged) == 0x000003, "Wrong size on PinnedSchematicItemWidget_C_HandleItemChanged");
static_assert(offsetof(PinnedSchematicItemWidget_C_HandleItemChanged, ItemChanged) == 0x000000, "Member 'PinnedSchematicItemWidget_C_HandleItemChanged::ItemChanged' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_HandleItemChanged, AmmoChanged) == 0x000001, "Member 'PinnedSchematicItemWidget_C_HandleItemChanged::AmmoChanged' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_HandleItemChanged, IngredientsChanged) == 0x000002, "Member 'PinnedSchematicItemWidget_C_HandleItemChanged::IngredientsChanged' has a wrong offset!");

// Function PinnedSchematicItemWidget.PinnedSchematicItemWidget_C.UnbindDelegates
// 0x0078 (0x0078 - 0x0000)
struct PinnedSchematicItemWidget_C_UnbindDelegates final
{
public:
	TDelegate<void(bool bCursorModeEnabled, class FName ActionName, class UUserWidget* CursorModeContentWidget)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TArray<class UFortWorldItem*>& ItemsAdded, TArray<class UFortWorldItem*>& ItemsRemoved)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged)> K2Node_CreateDelegate_OutputDelegate4;             // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UFortSchematicItem* Schematic)> K2Node_CreateDelegate_OutputDelegate5;             // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate6;             // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue2;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PinnedSchematicItemWidget_C_UnbindDelegates) == 0x000008, "Wrong alignment on PinnedSchematicItemWidget_C_UnbindDelegates");
static_assert(sizeof(PinnedSchematicItemWidget_C_UnbindDelegates) == 0x000078, "Wrong size on PinnedSchematicItemWidget_C_UnbindDelegates");
static_assert(offsetof(PinnedSchematicItemWidget_C_UnbindDelegates, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'PinnedSchematicItemWidget_C_UnbindDelegates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_UnbindDelegates, K2Node_CreateDelegate_OutputDelegate2) == 0x000010, "Member 'PinnedSchematicItemWidget_C_UnbindDelegates::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_UnbindDelegates, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'PinnedSchematicItemWidget_C_UnbindDelegates::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_UnbindDelegates, K2Node_CreateDelegate_OutputDelegate3) == 0x000028, "Member 'PinnedSchematicItemWidget_C_UnbindDelegates::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_UnbindDelegates, K2Node_CreateDelegate_OutputDelegate4) == 0x000038, "Member 'PinnedSchematicItemWidget_C_UnbindDelegates::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_UnbindDelegates, K2Node_CreateDelegate_OutputDelegate5) == 0x000048, "Member 'PinnedSchematicItemWidget_C_UnbindDelegates::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_UnbindDelegates, CallFunc_GetContext_ReturnValue) == 0x000058, "Member 'PinnedSchematicItemWidget_C_UnbindDelegates::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_UnbindDelegates, K2Node_CreateDelegate_OutputDelegate6) == 0x000060, "Member 'PinnedSchematicItemWidget_C_UnbindDelegates::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_UnbindDelegates, CallFunc_GetContext_ReturnValue2) == 0x000070, "Member 'PinnedSchematicItemWidget_C_UnbindDelegates::CallFunc_GetContext_ReturnValue2' has a wrong offset!");

// Function PinnedSchematicItemWidget.PinnedSchematicItemWidget_C.HandleCursorModeChanged
// 0x0018 (0x0018 - 0x0000)
struct PinnedSchematicItemWidget_C_HandleCursorModeChanged final
{
public:
	bool                                          CursorModeEnabled;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ActionName;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CursorModeContentWidget;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PinnedSchematicItemWidget_C_HandleCursorModeChanged) == 0x000008, "Wrong alignment on PinnedSchematicItemWidget_C_HandleCursorModeChanged");
static_assert(sizeof(PinnedSchematicItemWidget_C_HandleCursorModeChanged) == 0x000018, "Wrong size on PinnedSchematicItemWidget_C_HandleCursorModeChanged");
static_assert(offsetof(PinnedSchematicItemWidget_C_HandleCursorModeChanged, CursorModeEnabled) == 0x000000, "Member 'PinnedSchematicItemWidget_C_HandleCursorModeChanged::CursorModeEnabled' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_HandleCursorModeChanged, ActionName) == 0x000008, "Member 'PinnedSchematicItemWidget_C_HandleCursorModeChanged::ActionName' has a wrong offset!");
static_assert(offsetof(PinnedSchematicItemWidget_C_HandleCursorModeChanged, CursorModeContentWidget) == 0x000010, "Member 'PinnedSchematicItemWidget_C_HandleCursorModeChanged::CursorModeContentWidget' has a wrong offset!");

}

