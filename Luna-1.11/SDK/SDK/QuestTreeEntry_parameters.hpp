#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestTreeEntry

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function QuestTreeEntry.QuestTreeEntry_C.ExecuteUbergraph_QuestTreeEntry
// 0x0130 (0x0130 - 0x0000)
struct QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue2;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue2;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue3;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue3;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestCategory*                     K2Node_Event_Category2;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItem*                         K2Node_Event_Category;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bExpanded;                            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetSmallPreviewImage_ReturnValue;         // 0x0068(0x0028)(HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAssetNull_ReturnValue;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItemDefinition*               CallFunc_Get_Quest_Item_Def_AsFort_Quest_Item_Definition; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuestType                                CallFunc_GetQuestType_ReturnValue;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select2_Default;                            // 0x00C4(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItem*                         K2Node_CustomEvent_Quest;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UFortQuestItem* Quest)>  K2Node_CreateDelegate_OutputDelegate;              // 0x00E8(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable3;                                // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0100(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable4;                                // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0118(0x0010)(ZeroConstructor, NoDestructor)
	EFortQuestState                               Temp_byte_Variable3;                               // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select3_Default;                            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry) == 0x000008, "Wrong alignment on QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry");
static_assert(sizeof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry) == 0x000130, "Wrong size on QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, EntryPoint) == 0x000000, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::EntryPoint' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, Temp_bool_Variable) == 0x000004, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_GetContext_ReturnValue2) == 0x000010, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_GetQuestManager_ReturnValue) == 0x000018, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_IsValid_ReturnValue2) == 0x000021, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_GetQuestManager_ReturnValue2) == 0x000028, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_GetQuestManager_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_GetContext_ReturnValue3) == 0x000030, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_GetContext_ReturnValue3' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_IsValid_ReturnValue3) == 0x000038, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_IsValid_ReturnValue4) == 0x000039, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_GetQuestManager_ReturnValue3) == 0x000040, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_GetQuestManager_ReturnValue3' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_IsValid_ReturnValue5) == 0x000048, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, K2Node_Event_Category2) == 0x000050, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::K2Node_Event_Category2' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, K2Node_Event_Category) == 0x000058, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::K2Node_Event_Category' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, K2Node_Event_bExpanded) == 0x000060, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::K2Node_Event_bExpanded' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000064, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_GetSmallPreviewImage_ReturnValue) == 0x000068, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_GetSmallPreviewImage_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, Temp_byte_Variable) == 0x000090, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000098, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, K2Node_DynamicCast_AsTexture_2D) == 0x0000A0, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_IsAssetNull_ReturnValue) == 0x0000A9, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_IsAssetNull_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_Get_Quest_Item_Def_AsFort_Quest_Item_Definition) == 0x0000B0, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_Get_Quest_Item_Def_AsFort_Quest_Item_Definition' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_GetQuestType_ReturnValue) == 0x0000B8, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_GetQuestType_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, Temp_byte_Variable2) == 0x0000B9, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000BA, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x0000BB, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x0000BC, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_BooleanOR_ReturnValue) == 0x0000BD, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, Temp_bool_Variable2) == 0x0000BE, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, CallFunc_BooleanOR_ReturnValue2) == 0x0000BF, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, K2Node_Select_Default) == 0x0000C0, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, K2Node_Select2_Default) == 0x0000C4, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, Temp_int_Variable) == 0x0000D4, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, Temp_int_Variable2) == 0x0000D8, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, K2Node_CustomEvent_Quest) == 0x0000E0, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::K2Node_CustomEvent_Quest' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, K2Node_CreateDelegate_OutputDelegate) == 0x0000E8, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, Temp_int_Variable3) == 0x0000F8, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, K2Node_CreateDelegate_OutputDelegate2) == 0x000100, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, Temp_int_Variable4) == 0x000110, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::Temp_int_Variable4' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, K2Node_CreateDelegate_OutputDelegate3) == 0x000118, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, Temp_byte_Variable3) == 0x000128, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry, K2Node_Select3_Default) == 0x00012C, "Member 'QuestTreeEntry_C_ExecuteUbergraph_QuestTreeEntry::K2Node_Select3_Default' has a wrong offset!");

// Function QuestTreeEntry.QuestTreeEntry_C.OnQuestSeen_Event_0
// 0x0008 (0x0008 - 0x0000)
struct QuestTreeEntry_C_OnQuestSeen_Event_0 final
{
public:
	class UFortQuestItem*                         Quest;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestTreeEntry_C_OnQuestSeen_Event_0) == 0x000008, "Wrong alignment on QuestTreeEntry_C_OnQuestSeen_Event_0");
static_assert(sizeof(QuestTreeEntry_C_OnQuestSeen_Event_0) == 0x000008, "Wrong size on QuestTreeEntry_C_OnQuestSeen_Event_0");
static_assert(offsetof(QuestTreeEntry_C_OnQuestSeen_Event_0, Quest) == 0x000000, "Member 'QuestTreeEntry_C_OnQuestSeen_Event_0::Quest' has a wrong offset!");

// Function QuestTreeEntry.QuestTreeEntry_C.ExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct QuestTreeEntry_C_ExpansionChanged final
{
public:
	bool                                          bExpanded;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuestTreeEntry_C_ExpansionChanged) == 0x000001, "Wrong alignment on QuestTreeEntry_C_ExpansionChanged");
static_assert(sizeof(QuestTreeEntry_C_ExpansionChanged) == 0x000001, "Wrong size on QuestTreeEntry_C_ExpansionChanged");
static_assert(offsetof(QuestTreeEntry_C_ExpansionChanged, bExpanded) == 0x000000, "Member 'QuestTreeEntry_C_ExpansionChanged::bExpanded' has a wrong offset!");

// Function QuestTreeEntry.QuestTreeEntry_C.SetupAsQuest
// 0x0008 (0x0008 - 0x0000)
struct QuestTreeEntry_C_SetupAsQuest final
{
public:
	class UFortQuestItem*                         Category;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestTreeEntry_C_SetupAsQuest) == 0x000008, "Wrong alignment on QuestTreeEntry_C_SetupAsQuest");
static_assert(sizeof(QuestTreeEntry_C_SetupAsQuest) == 0x000008, "Wrong size on QuestTreeEntry_C_SetupAsQuest");
static_assert(offsetof(QuestTreeEntry_C_SetupAsQuest, Category) == 0x000000, "Member 'QuestTreeEntry_C_SetupAsQuest::Category' has a wrong offset!");

// Function QuestTreeEntry.QuestTreeEntry_C.SetupAsCategory
// 0x0008 (0x0008 - 0x0000)
struct QuestTreeEntry_C_SetupAsCategory final
{
public:
	class UFortQuestCategory*                     Category;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestTreeEntry_C_SetupAsCategory) == 0x000008, "Wrong alignment on QuestTreeEntry_C_SetupAsCategory");
static_assert(sizeof(QuestTreeEntry_C_SetupAsCategory) == 0x000008, "Wrong size on QuestTreeEntry_C_SetupAsCategory");
static_assert(offsetof(QuestTreeEntry_C_SetupAsCategory, Category) == 0x000000, "Member 'QuestTreeEntry_C_SetupAsCategory::Category' has a wrong offset!");

// Function QuestTreeEntry.QuestTreeEntry_C.SetPinnedState
// 0x000C (0x000C - 0x0000)
struct QuestTreeEntry_C_SetPinnedState final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsQuestPinned_ReturnValue;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuestTreeEntry_C_SetPinnedState) == 0x000004, "Wrong alignment on QuestTreeEntry_C_SetPinnedState");
static_assert(sizeof(QuestTreeEntry_C_SetPinnedState) == 0x00000C, "Wrong size on QuestTreeEntry_C_SetPinnedState");
static_assert(offsetof(QuestTreeEntry_C_SetPinnedState, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'QuestTreeEntry_C_SetPinnedState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_SetPinnedState, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000004, "Member 'QuestTreeEntry_C_SetPinnedState::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_SetPinnedState, CallFunc_IsQuestPinned_ReturnValue) == 0x000008, "Member 'QuestTreeEntry_C_SetPinnedState::CallFunc_IsQuestPinned_ReturnValue' has a wrong offset!");

// Function QuestTreeEntry.QuestTreeEntry_C.SetCompletionPercentage
// 0x0090 (0x0090 - 0x0000)
struct QuestTreeEntry_C_SetCompletionPercentage final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPercentageComplete_ReturnValue;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0018)()
};
static_assert(alignof(QuestTreeEntry_C_SetCompletionPercentage) == 0x000008, "Wrong alignment on QuestTreeEntry_C_SetCompletionPercentage");
static_assert(sizeof(QuestTreeEntry_C_SetCompletionPercentage) == 0x000090, "Wrong size on QuestTreeEntry_C_SetCompletionPercentage");
static_assert(offsetof(QuestTreeEntry_C_SetCompletionPercentage, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'QuestTreeEntry_C_SetCompletionPercentage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_SetCompletionPercentage, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'QuestTreeEntry_C_SetCompletionPercentage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_SetCompletionPercentage, CallFunc_GetPercentageComplete_ReturnValue) == 0x000004, "Member 'QuestTreeEntry_C_SetCompletionPercentage::CallFunc_GetPercentageComplete_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_SetCompletionPercentage, CallFunc_FFloor_ReturnValue) == 0x000008, "Member 'QuestTreeEntry_C_SetCompletionPercentage::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_SetCompletionPercentage, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'QuestTreeEntry_C_SetCompletionPercentage::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_SetCompletionPercentage, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'QuestTreeEntry_C_SetCompletionPercentage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_SetCompletionPercentage, K2Node_MakeArray_Array) == 0x000068, "Member 'QuestTreeEntry_C_SetCompletionPercentage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_SetCompletionPercentage, CallFunc_Format_ReturnValue) == 0x000078, "Member 'QuestTreeEntry_C_SetCompletionPercentage::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function QuestTreeEntry.QuestTreeEntry_C.Update Quest Item Bang State
// 0x0006 (0x0006 - 0x0000)
struct QuestTreeEntry_C_Update_Quest_Item_Bang_State final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedQuest_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasBeenSeenLocally_ReturnValue;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuestTreeEntry_C_Update_Quest_Item_Bang_State) == 0x000001, "Wrong alignment on QuestTreeEntry_C_Update_Quest_Item_Bang_State");
static_assert(sizeof(QuestTreeEntry_C_Update_Quest_Item_Bang_State) == 0x000006, "Wrong size on QuestTreeEntry_C_Update_Quest_Item_Bang_State");
static_assert(offsetof(QuestTreeEntry_C_Update_Quest_Item_Bang_State, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'QuestTreeEntry_C_Update_Quest_Item_Bang_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Update_Quest_Item_Bang_State, CallFunc_HasCompletedQuest_ReturnValue) == 0x000001, "Member 'QuestTreeEntry_C_Update_Quest_Item_Bang_State::CallFunc_HasCompletedQuest_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Update_Quest_Item_Bang_State, CallFunc_HasBeenSeenLocally_ReturnValue) == 0x000002, "Member 'QuestTreeEntry_C_Update_Quest_Item_Bang_State::CallFunc_HasBeenSeenLocally_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Update_Quest_Item_Bang_State, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'QuestTreeEntry_C_Update_Quest_Item_Bang_State::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Update_Quest_Item_Bang_State, CallFunc_Not_PreBool_ReturnValue2) == 0x000004, "Member 'QuestTreeEntry_C_Update_Quest_Item_Bang_State::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Update_Quest_Item_Bang_State, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'QuestTreeEntry_C_Update_Quest_Item_Bang_State::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function QuestTreeEntry.QuestTreeEntry_C.Update Quest Item Seen
// 0x0018 (0x0018 - 0x0000)
struct QuestTreeEntry_C_Update_Quest_Item_Seen final
{
public:
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasBeenSeenLocally_ReturnValue;           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuestTreeEntry_C_Update_Quest_Item_Seen) == 0x000008, "Wrong alignment on QuestTreeEntry_C_Update_Quest_Item_Seen");
static_assert(sizeof(QuestTreeEntry_C_Update_Quest_Item_Seen) == 0x000018, "Wrong size on QuestTreeEntry_C_Update_Quest_Item_Seen");
static_assert(offsetof(QuestTreeEntry_C_Update_Quest_Item_Seen, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'QuestTreeEntry_C_Update_Quest_Item_Seen::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Update_Quest_Item_Seen, CallFunc_GetQuestManager_ReturnValue) == 0x000008, "Member 'QuestTreeEntry_C_Update_Quest_Item_Seen::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Update_Quest_Item_Seen, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'QuestTreeEntry_C_Update_Quest_Item_Seen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Update_Quest_Item_Seen, CallFunc_IsValid_ReturnValue2) == 0x000011, "Member 'QuestTreeEntry_C_Update_Quest_Item_Seen::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Update_Quest_Item_Seen, CallFunc_HasBeenSeenLocally_ReturnValue) == 0x000012, "Member 'QuestTreeEntry_C_Update_Quest_Item_Seen::CallFunc_HasBeenSeenLocally_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Update_Quest_Item_Seen, CallFunc_Not_PreBool_ReturnValue) == 0x000013, "Member 'QuestTreeEntry_C_Update_Quest_Item_Seen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function QuestTreeEntry.QuestTreeEntry_C.Update Quest Category Bang State
// 0x0002 (0x0002 - 0x0000)
struct QuestTreeEntry_C_Update_Quest_Category_Bang_State final
{
public:
	bool                                          CallFunc_Quest_Category_Have_Unseen_Quests_HasUnseen; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuestTreeEntry_C_Update_Quest_Category_Bang_State) == 0x000001, "Wrong alignment on QuestTreeEntry_C_Update_Quest_Category_Bang_State");
static_assert(sizeof(QuestTreeEntry_C_Update_Quest_Category_Bang_State) == 0x000002, "Wrong size on QuestTreeEntry_C_Update_Quest_Category_Bang_State");
static_assert(offsetof(QuestTreeEntry_C_Update_Quest_Category_Bang_State, CallFunc_Quest_Category_Have_Unseen_Quests_HasUnseen) == 0x000000, "Member 'QuestTreeEntry_C_Update_Quest_Category_Bang_State::CallFunc_Quest_Category_Have_Unseen_Quests_HasUnseen' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Update_Quest_Category_Bang_State, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'QuestTreeEntry_C_Update_Quest_Category_Bang_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function QuestTreeEntry.QuestTreeEntry_C.Quest Category Have Unseen Quests
// 0x0030 (0x0030 - 0x0000)
struct QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests final
{
public:
	bool                                          HasUnseen;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LocalHasUnseen;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItem*                         CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCompletedQuest_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasBeenSeenLocally_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests) == 0x000008, "Wrong alignment on QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests");
static_assert(sizeof(QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests) == 0x000030, "Wrong size on QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests");
static_assert(offsetof(QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests, HasUnseen) == 0x000000, "Member 'QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests::HasUnseen' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests, LocalHasUnseen) == 0x000001, "Member 'QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests::LocalHasUnseen' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests, Temp_bool_True_if_break_was_hit_Variable) == 0x000002, "Member 'QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests, Temp_int_Array_Index_Variable) == 0x000004, "Member 'QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests, CallFunc_Array_Get_Item) == 0x000018, "Member 'QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests, CallFunc_HasCompletedQuest_ReturnValue) == 0x000020, "Member 'QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests::CallFunc_HasCompletedQuest_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests, CallFunc_HasBeenSeenLocally_ReturnValue) == 0x000021, "Member 'QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests::CallFunc_HasBeenSeenLocally_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests, CallFunc_Not_PreBool_ReturnValue2) == 0x000022, "Member 'QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests, CallFunc_Not_PreBool_ReturnValue3) == 0x000023, "Member 'QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests, CallFunc_Less_IntInt_ReturnValue) == 0x000029, "Member 'QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests, CallFunc_BooleanAND_ReturnValue2) == 0x00002A, "Member 'QuestTreeEntry_C_Quest_Category_Have_Unseen_Quests::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function QuestTreeEntry.QuestTreeEntry_C.Get Quest Item Def
// 0x0020 (0x0020 - 0x0000)
struct QuestTreeEntry_C_Get_Quest_Item_Def final
{
public:
	class UFortQuestItemDefinition*               AsFort_Quest_Item_Definition;                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemDefinition*                    CallFunc_GetItemDefinitionBP_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItemDefinition*               K2Node_DynamicCast_AsFort_Quest_Item_Definition;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuestTreeEntry_C_Get_Quest_Item_Def) == 0x000008, "Wrong alignment on QuestTreeEntry_C_Get_Quest_Item_Def");
static_assert(sizeof(QuestTreeEntry_C_Get_Quest_Item_Def) == 0x000020, "Wrong size on QuestTreeEntry_C_Get_Quest_Item_Def");
static_assert(offsetof(QuestTreeEntry_C_Get_Quest_Item_Def, AsFort_Quest_Item_Definition) == 0x000000, "Member 'QuestTreeEntry_C_Get_Quest_Item_Def::AsFort_Quest_Item_Definition' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Quest_Item_Def, CallFunc_GetItemDefinitionBP_ReturnValue) == 0x000008, "Member 'QuestTreeEntry_C_Get_Quest_Item_Def::CallFunc_GetItemDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Quest_Item_Def, K2Node_DynamicCast_AsFort_Quest_Item_Definition) == 0x000010, "Member 'QuestTreeEntry_C_Get_Quest_Item_Def::K2Node_DynamicCast_AsFort_Quest_Item_Definition' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Quest_Item_Def, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'QuestTreeEntry_C_Get_Quest_Item_Def::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function QuestTreeEntry.QuestTreeEntry_C.Set Quest Display Name
// 0x0118 (0x0118 - 0x0000)
struct QuestTreeEntry_C_Set_Quest_Display_Name final
{
public:
	class FText                                   LocalQuestName;                                    // 0x0000(0x0018)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Get_Streaming_Attached_Quest_Name_ModifiedName; // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x0078(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Is_Streaming_Quest_bStreamingQuest;       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00E8(0x0018)()
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0100(0x0018)()
};
static_assert(alignof(QuestTreeEntry_C_Set_Quest_Display_Name) == 0x000008, "Wrong alignment on QuestTreeEntry_C_Set_Quest_Display_Name");
static_assert(sizeof(QuestTreeEntry_C_Set_Quest_Display_Name) == 0x000118, "Wrong size on QuestTreeEntry_C_Set_Quest_Display_Name");
static_assert(offsetof(QuestTreeEntry_C_Set_Quest_Display_Name, LocalQuestName) == 0x000000, "Member 'QuestTreeEntry_C_Set_Quest_Display_Name::LocalQuestName' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Set_Quest_Display_Name, Temp_bool_Variable) == 0x000018, "Member 'QuestTreeEntry_C_Set_Quest_Display_Name::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Set_Quest_Display_Name, CallFunc_Get_Streaming_Attached_Quest_Name_ModifiedName) == 0x000020, "Member 'QuestTreeEntry_C_Set_Quest_Display_Name::CallFunc_Get_Streaming_Attached_Quest_Name_ModifiedName' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Set_Quest_Display_Name, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'QuestTreeEntry_C_Set_Quest_Display_Name::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Set_Quest_Display_Name, K2Node_MakeStruct_FormatArgumentData2) == 0x000078, "Member 'QuestTreeEntry_C_Set_Quest_Display_Name::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Set_Quest_Display_Name, K2Node_MakeArray_Array) == 0x0000B8, "Member 'QuestTreeEntry_C_Set_Quest_Display_Name::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Set_Quest_Display_Name, CallFunc_Is_Streaming_Quest_bStreamingQuest) == 0x0000C8, "Member 'QuestTreeEntry_C_Set_Quest_Display_Name::CallFunc_Is_Streaming_Quest_bStreamingQuest' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Set_Quest_Display_Name, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'QuestTreeEntry_C_Set_Quest_Display_Name::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Set_Quest_Display_Name, K2Node_Select_Default) == 0x0000E8, "Member 'QuestTreeEntry_C_Set_Quest_Display_Name::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Set_Quest_Display_Name, CallFunc_GetDisplayName_ReturnValue) == 0x000100, "Member 'QuestTreeEntry_C_Set_Quest_Display_Name::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");

// Function QuestTreeEntry.QuestTreeEntry_C.Is Streaming Quest
// 0x0018 (0x0018 - 0x0000)
struct QuestTreeEntry_C_Is_Streaming_Quest final
{
public:
	bool                                          bStreamingQuest;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItemDefinition*               CallFunc_Get_Quest_Item_Def_AsFort_Quest_Item_Definition; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuestType                                CallFunc_GetQuestType_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuestTreeEntry_C_Is_Streaming_Quest) == 0x000008, "Wrong alignment on QuestTreeEntry_C_Is_Streaming_Quest");
static_assert(sizeof(QuestTreeEntry_C_Is_Streaming_Quest) == 0x000018, "Wrong size on QuestTreeEntry_C_Is_Streaming_Quest");
static_assert(offsetof(QuestTreeEntry_C_Is_Streaming_Quest, bStreamingQuest) == 0x000000, "Member 'QuestTreeEntry_C_Is_Streaming_Quest::bStreamingQuest' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Is_Streaming_Quest, CallFunc_Get_Quest_Item_Def_AsFort_Quest_Item_Definition) == 0x000008, "Member 'QuestTreeEntry_C_Is_Streaming_Quest::CallFunc_Get_Quest_Item_Def_AsFort_Quest_Item_Definition' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Is_Streaming_Quest, CallFunc_GetQuestType_ReturnValue) == 0x000010, "Member 'QuestTreeEntry_C_Is_Streaming_Quest::CallFunc_GetQuestType_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Is_Streaming_Quest, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'QuestTreeEntry_C_Is_Streaming_Quest::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Is_Streaming_Quest, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000012, "Member 'QuestTreeEntry_C_Is_Streaming_Quest::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Is_Streaming_Quest, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x000013, "Member 'QuestTreeEntry_C_Is_Streaming_Quest::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Is_Streaming_Quest, CallFunc_BooleanOR_ReturnValue) == 0x000014, "Member 'QuestTreeEntry_C_Is_Streaming_Quest::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Is_Streaming_Quest, CallFunc_BooleanOR_ReturnValue2) == 0x000015, "Member 'QuestTreeEntry_C_Is_Streaming_Quest::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");

// Function QuestTreeEntry.QuestTreeEntry_C.Get Streaming Attached Quest Name
// 0x01B0 (0x01B0 - 0x0000)
struct QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name final
{
public:
	class FText                                   ModifiedName;                                      // 0x0000(0x0018)(Parm, OutParm)
	EFortQuestType                                Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable2;                               // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable3;                               // 0x0050(0x0018)()
	class FText                                   Temp_text_Variable4;                               // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable5;                               // 0x0080(0x0018)()
	class FText                                   Temp_text_Variable6;                               // 0x0098(0x0018)()
	class FText                                   Temp_text_Variable7;                               // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable8;                               // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable9;                               // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable10;                              // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable11;                              // 0x0110(0x0018)()
	class FText                                   Temp_text_Variable12;                              // 0x0128(0x0018)()
	class FText                                   Temp_text_Variable13;                              // 0x0140(0x0018)()
	class FText                                   Temp_text_Variable14;                              // 0x0158(0x0018)()
	class FText                                   Temp_text_Variable15;                              // 0x0170(0x0018)()
	class UFortQuestItemDefinition*               CallFunc_Get_Quest_Item_Def_AsFort_Quest_Item_Definition; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuestType                                CallFunc_GetQuestType_ReturnValue;                 // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0198(0x0018)()
};
static_assert(alignof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name) == 0x000008, "Wrong alignment on QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name");
static_assert(sizeof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name) == 0x0001B0, "Wrong size on QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name");
static_assert(offsetof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name, ModifiedName) == 0x000000, "Member 'QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name::ModifiedName' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name, Temp_byte_Variable) == 0x000018, "Member 'QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name, Temp_text_Variable) == 0x000020, "Member 'QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name, Temp_text_Variable2) == 0x000038, "Member 'QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name::Temp_text_Variable2' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name, Temp_text_Variable3) == 0x000050, "Member 'QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name::Temp_text_Variable3' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name, Temp_text_Variable4) == 0x000068, "Member 'QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name::Temp_text_Variable4' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name, Temp_text_Variable5) == 0x000080, "Member 'QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name::Temp_text_Variable5' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name, Temp_text_Variable6) == 0x000098, "Member 'QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name::Temp_text_Variable6' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name, Temp_text_Variable7) == 0x0000B0, "Member 'QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name::Temp_text_Variable7' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name, Temp_text_Variable8) == 0x0000C8, "Member 'QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name::Temp_text_Variable8' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name, Temp_text_Variable9) == 0x0000E0, "Member 'QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name::Temp_text_Variable9' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name, Temp_text_Variable10) == 0x0000F8, "Member 'QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name::Temp_text_Variable10' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name, Temp_text_Variable11) == 0x000110, "Member 'QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name::Temp_text_Variable11' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name, Temp_text_Variable12) == 0x000128, "Member 'QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name::Temp_text_Variable12' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name, Temp_text_Variable13) == 0x000140, "Member 'QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name::Temp_text_Variable13' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name, Temp_text_Variable14) == 0x000158, "Member 'QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name::Temp_text_Variable14' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name, Temp_text_Variable15) == 0x000170, "Member 'QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name::Temp_text_Variable15' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name, CallFunc_Get_Quest_Item_Def_AsFort_Quest_Item_Definition) == 0x000188, "Member 'QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name::CallFunc_Get_Quest_Item_Def_AsFort_Quest_Item_Definition' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name, CallFunc_GetQuestType_ReturnValue) == 0x000190, "Member 'QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name::CallFunc_GetQuestType_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name, K2Node_Select_Default) == 0x000198, "Member 'QuestTreeEntry_C_Get_Streaming_Attached_Quest_Name::K2Node_Select_Default' has a wrong offset!");

}

