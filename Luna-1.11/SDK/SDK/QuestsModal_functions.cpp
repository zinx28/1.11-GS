#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestsModal

#include "Basic.hpp"

#include "QuestsModal_classes.hpp"
#include "QuestsModal_parameters.hpp"


namespace SDK
{

// Function QuestsModal.QuestsModal_C.ExecuteUbergraph_QuestsModal
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuestsModal_C::ExecuteUbergraph_QuestsModal(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestsModal_C", "ExecuteUbergraph_QuestsModal");

	Params::QuestsModal_C_ExecuteUbergraph_QuestsModal Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuestsModal.QuestsModal_C.OnActivated
// (Event, Protected, BlueprintEvent)

void UQuestsModal_C::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestsModal_C", "OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestsModal.QuestsModal_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UQuestsModal_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestsModal_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuestsModal.QuestsModal_C.ClosePanel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCommitted                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UQuestsModal_C::ClosePanel(bool* bCommitted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuestsModal_C", "ClosePanel");

	Params::QuestsModal_C_ClosePanel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCommitted != nullptr)
		*bCommitted = Parms.bCommitted;
}

}

