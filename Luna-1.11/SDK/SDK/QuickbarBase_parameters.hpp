#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuickbarBase

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function QuickbarBase.QuickbarBase_C.ExecuteUbergraph_QuickbarBase
// 0x0258 (0x0258 - 0x0000)
struct QuickbarBase_C_ExecuteUbergraph_QuickbarBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFortWorldItem*>                 K2Node_CustomEvent_ItemsAdded;                     // 0x0008(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<class UFortWorldItem*>                 K2Node_CustomEvent_ItemsRemoved;                   // 0x0018(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Is_Valid_Slot_Is_Valid;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Is_Valid_Slot_Array_Index;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Valid_Slot_Is_Valid2;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Is_Valid_Slot_Array_Index2;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item2;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuickBars                                K2Node_CustomEvent_QuickbarIndex4;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Slot2;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Valid_Slot_Is_Valid3;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Is_Valid_Slot_Array_Index3;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item3;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldRefreshQuickbarItem_Result;         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortQuickBars                                K2Node_CustomEvent_QuickbarIndex3;                 // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortQuickBars                                K2Node_CustomEvent_QuickbarIndex2;                 // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuickBars                                K2Node_CustomEvent_QuickbarIndex;                  // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87[0x1];                                       // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Slot;                           // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldRefreshQuickbarItem_Result2;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item4;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue2;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue3;                  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortPlayerDeathReport                 K2Node_CustomEvent_DeathReport;                    // 0x00C8(0x0050)(ConstParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0118(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0128(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(struct FFortPlayerDeathReport& DeathReport)> K2Node_CreateDelegate_OutputDelegate4;             // 0x0138(0x0010)(ZeroConstructor, NoDestructor)
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue4;                  // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EFortQuickBars QuickbarIndex)> K2Node_CreateDelegate_OutputDelegate5;             // 0x0150(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TArray<class UFortWorldItem*>& ItemsAdded, TArray<class UFortWorldItem*>& ItemsRemoved)> K2Node_CreateDelegate_OutputDelegate6;             // 0x0160(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EFortQuickBars QuickbarIndex, int32 Slot)> K2Node_CreateDelegate_OutputDelegate7;             // 0x0170(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EFortQuickBars QuickbarIndex, int32 Slot)> K2Node_CreateDelegate_OutputDelegate8;             // 0x0180(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EFortQuickBars QuickbarIndex)> K2Node_CreateDelegate_OutputDelegate9;             // 0x0190(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate10;            // 0x01A0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EFortQuickBars QuickbarIndex, int32 Slot)> K2Node_CreateDelegate_OutputDelegate11;            // 0x01B0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EFortQuickBars QuickbarIndex)> K2Node_CreateDelegate_OutputDelegate12;            // 0x01C0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EFortQuickBars QuickbarIndex)> K2Node_CreateDelegate_OutputDelegate13;            // 0x01D0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(struct FFortPlayerDeathReport& DeathReport)> K2Node_CreateDelegate_OutputDelegate14;            // 0x01E0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate15;            // 0x01F0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate16;            // 0x0200(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EFortQuickBars QuickbarIndex, int32 Slot)> K2Node_CreateDelegate_OutputDelegate17;            // 0x0210(0x0010)(ZeroConstructor, NoDestructor)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue5;                  // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TArray<class UFortWorldItem*>& ItemsAdded, TArray<class UFortWorldItem*>& ItemsRemoved)> K2Node_CreateDelegate_OutputDelegate18;            // 0x0228(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue4;         // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23A[0x6];                                      // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue6;                  // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item5;                          // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuickBars                                CallFunc_UpdateCurrentFocusedQuickbar_PreviousFocusedQuickbar; // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuickBars                                CallFunc_UpdateCurrentFocusedQuickbar_CurrentFocusedQuickbar; // 0x0255(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0256(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0257(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase) == 0x000008, "Wrong alignment on QuickbarBase_C_ExecuteUbergraph_QuickbarBase");
static_assert(sizeof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase) == 0x000258, "Wrong size on QuickbarBase_C_ExecuteUbergraph_QuickbarBase");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, EntryPoint) == 0x000000, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_ItemsAdded) == 0x000008, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_ItemsAdded' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_ItemsRemoved) == 0x000018, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_ItemsRemoved' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Is_Valid_Slot_Is_Valid) == 0x000028, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Is_Valid_Slot_Is_Valid' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Is_Valid_Slot_Array_Index) == 0x00002C, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Is_Valid_Slot_Array_Index' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Is_Valid_Slot_Is_Valid2) == 0x000030, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Is_Valid_Slot_Is_Valid2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Is_Valid_Slot_Array_Index2) == 0x000034, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Is_Valid_Slot_Array_Index2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Array_Get_Item) == 0x000038, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, Temp_int_Array_Index_Variable) == 0x000040, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, Temp_int_Array_Index_Variable2) == 0x000044, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate) == 0x000048, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Array_Get_Item2) == 0x000058, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_QuickbarIndex4) == 0x000060, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_QuickbarIndex4' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_Slot2) == 0x000064, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_Slot2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000070, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Is_Valid_Slot_Is_Valid3) == 0x000071, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Is_Valid_Slot_Is_Valid3' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Is_Valid_Slot_Array_Index3) == 0x000074, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Is_Valid_Slot_Array_Index3' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Array_Get_Item3) == 0x000078, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_ShouldRefreshQuickbarItem_Result) == 0x000080, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_ShouldRefreshQuickbarItem_Result' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000081, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_QuickbarIndex3) == 0x000082, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_QuickbarIndex3' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_BooleanAND_ReturnValue) == 0x000083, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000084, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_QuickbarIndex2) == 0x000085, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_QuickbarIndex2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_QuickbarIndex) == 0x000086, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_QuickbarIndex' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_Slot) == 0x000088, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_Slot' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetContext_ReturnValue) == 0x000090, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_ShouldRefreshQuickbarItem_Result2) == 0x000098, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_ShouldRefreshQuickbarItem_Result2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Array_Get_Item4) == 0x0000A0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, Temp_int_Loop_Counter_Variable2) == 0x0000AC, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Add_IntInt_ReturnValue2) == 0x0000B4, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetContext_ReturnValue2) == 0x0000B8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetContext_ReturnValue3) == 0x0000C0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetContext_ReturnValue3' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CustomEvent_DeathReport) == 0x0000C8, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CustomEvent_DeathReport' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate2) == 0x000118, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate3) == 0x000128, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate4) == 0x000138, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetContext_ReturnValue4) == 0x000148, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetContext_ReturnValue4' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate5) == 0x000150, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate6) == 0x000160, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate7) == 0x000170, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate8) == 0x000180, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate9) == 0x000190, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate10) == 0x0001A0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate10' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate11) == 0x0001B0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate11' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate12) == 0x0001C0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate13) == 0x0001D0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate13' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate14) == 0x0001E0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate14' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate15) == 0x0001F0, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate15' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate16) == 0x000200, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate16' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate17) == 0x000210, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate17' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetContext_ReturnValue5) == 0x000220, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetContext_ReturnValue5' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, K2Node_CreateDelegate_OutputDelegate18) == 0x000228, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::K2Node_CreateDelegate_OutputDelegate18' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x000238, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_EqualEqual_ByteByte_ReturnValue4) == 0x000239, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_EqualEqual_ByteByte_ReturnValue4' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_GetContext_ReturnValue6) == 0x000240, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_GetContext_ReturnValue6' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Array_Get_Item5) == 0x000248, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Array_Length_ReturnValue2) == 0x000250, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_UpdateCurrentFocusedQuickbar_PreviousFocusedQuickbar) == 0x000254, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_UpdateCurrentFocusedQuickbar_PreviousFocusedQuickbar' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_UpdateCurrentFocusedQuickbar_CurrentFocusedQuickbar) == 0x000255, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_UpdateCurrentFocusedQuickbar_CurrentFocusedQuickbar' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_Less_IntInt_ReturnValue2) == 0x000256, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ExecuteUbergraph_QuickbarBase, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000257, "Member 'QuickbarBase_C_ExecuteUbergraph_QuickbarBase::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.OnLocalPlayerDied
// 0x0050 (0x0050 - 0x0000)
struct QuickbarBase_C_OnLocalPlayerDied final
{
public:
	struct FFortPlayerDeathReport                 DeathReport;                                       // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(QuickbarBase_C_OnLocalPlayerDied) == 0x000008, "Wrong alignment on QuickbarBase_C_OnLocalPlayerDied");
static_assert(sizeof(QuickbarBase_C_OnLocalPlayerDied) == 0x000050, "Wrong size on QuickbarBase_C_OnLocalPlayerDied");
static_assert(offsetof(QuickbarBase_C_OnLocalPlayerDied, DeathReport) == 0x000000, "Member 'QuickbarBase_C_OnLocalPlayerDied::DeathReport' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.OnQuickbarSecondarySlotFocusChanged_Event_0
// 0x0008 (0x0008 - 0x0000)
struct QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0 final
{
public:
	EFortQuickBars                                QuickbarIndex;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Slot;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0) == 0x000004, "Wrong alignment on QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0");
static_assert(sizeof(QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0) == 0x000008, "Wrong size on QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0");
static_assert(offsetof(QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0, QuickbarIndex) == 0x000000, "Member 'QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0::QuickbarIndex' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0, Param_Slot) == 0x000004, "Member 'QuickbarBase_C_OnQuickbarSecondarySlotFocusChanged_Event_0::Param_Slot' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.OnQuickbarForceFullUpdate
// 0x0001 (0x0001 - 0x0000)
struct QuickbarBase_C_OnQuickbarForceFullUpdate final
{
public:
	EFortQuickBars                                QuickbarIndex;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuickbarBase_C_OnQuickbarForceFullUpdate) == 0x000001, "Wrong alignment on QuickbarBase_C_OnQuickbarForceFullUpdate");
static_assert(sizeof(QuickbarBase_C_OnQuickbarForceFullUpdate) == 0x000001, "Wrong size on QuickbarBase_C_OnQuickbarForceFullUpdate");
static_assert(offsetof(QuickbarBase_C_OnQuickbarForceFullUpdate, QuickbarIndex) == 0x000000, "Member 'QuickbarBase_C_OnQuickbarForceFullUpdate::QuickbarIndex' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.OnQuickbarContentsChanged
// 0x0001 (0x0001 - 0x0000)
struct QuickbarBase_C_OnQuickbarContentsChanged final
{
public:
	EFortQuickBars                                QuickbarIndex;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuickbarBase_C_OnQuickbarContentsChanged) == 0x000001, "Wrong alignment on QuickbarBase_C_OnQuickbarContentsChanged");
static_assert(sizeof(QuickbarBase_C_OnQuickbarContentsChanged) == 0x000001, "Wrong size on QuickbarBase_C_OnQuickbarContentsChanged");
static_assert(offsetof(QuickbarBase_C_OnQuickbarContentsChanged, QuickbarIndex) == 0x000000, "Member 'QuickbarBase_C_OnQuickbarContentsChanged::QuickbarIndex' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.OnQuickbarSlotFocusChanged
// 0x0008 (0x0008 - 0x0000)
struct QuickbarBase_C_OnQuickbarSlotFocusChanged final
{
public:
	EFortQuickBars                                QuickbarIndex;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_Slot;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuickbarBase_C_OnQuickbarSlotFocusChanged) == 0x000004, "Wrong alignment on QuickbarBase_C_OnQuickbarSlotFocusChanged");
static_assert(sizeof(QuickbarBase_C_OnQuickbarSlotFocusChanged) == 0x000008, "Wrong size on QuickbarBase_C_OnQuickbarSlotFocusChanged");
static_assert(offsetof(QuickbarBase_C_OnQuickbarSlotFocusChanged, QuickbarIndex) == 0x000000, "Member 'QuickbarBase_C_OnQuickbarSlotFocusChanged::QuickbarIndex' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_OnQuickbarSlotFocusChanged, Param_Slot) == 0x000004, "Member 'QuickbarBase_C_OnQuickbarSlotFocusChanged::Param_Slot' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.OnWorldItemListChanged
// 0x0020 (0x0020 - 0x0000)
struct QuickbarBase_C_OnWorldItemListChanged final
{
public:
	TArray<class UFortWorldItem*>                 ItemsAdded;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class UFortWorldItem*>                 ItemsRemoved;                                      // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(QuickbarBase_C_OnWorldItemListChanged) == 0x000008, "Wrong alignment on QuickbarBase_C_OnWorldItemListChanged");
static_assert(sizeof(QuickbarBase_C_OnWorldItemListChanged) == 0x000020, "Wrong size on QuickbarBase_C_OnWorldItemListChanged");
static_assert(offsetof(QuickbarBase_C_OnWorldItemListChanged, ItemsAdded) == 0x000000, "Member 'QuickbarBase_C_OnWorldItemListChanged::ItemsAdded' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_OnWorldItemListChanged, ItemsRemoved) == 0x000010, "Member 'QuickbarBase_C_OnWorldItemListChanged::ItemsRemoved' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.Is Valid Slot
// 0x0038 (0x0038 - 0x0000)
struct QuickbarBase_C_Is_Valid_Slot final
{
public:
	int32                                         Param_Slot;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Valid;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Array_Index;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_Is_Valid_Slot) == 0x000008, "Wrong alignment on QuickbarBase_C_Is_Valid_Slot");
static_assert(sizeof(QuickbarBase_C_Is_Valid_Slot) == 0x000038, "Wrong size on QuickbarBase_C_Is_Valid_Slot");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, Param_Slot) == 0x000000, "Member 'QuickbarBase_C_Is_Valid_Slot::Param_Slot' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, Is_Valid) == 0x000004, "Member 'QuickbarBase_C_Is_Valid_Slot::Is_Valid' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, Array_Index) == 0x000008, "Member 'QuickbarBase_C_Is_Valid_Slot::Array_Index' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, Temp_bool_True_if_break_was_hit_Variable) == 0x00000C, "Member 'QuickbarBase_C_Is_Valid_Slot::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, Temp_int_Array_Index_Variable) == 0x000010, "Member 'QuickbarBase_C_Is_Valid_Slot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'QuickbarBase_C_Is_Valid_Slot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'QuickbarBase_C_Is_Valid_Slot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'QuickbarBase_C_Is_Valid_Slot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'QuickbarBase_C_Is_Valid_Slot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, CallFunc_Array_Get_Item) == 0x000028, "Member 'QuickbarBase_C_Is_Valid_Slot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'QuickbarBase_C_Is_Valid_Slot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'QuickbarBase_C_Is_Valid_Slot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Is_Valid_Slot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000032, "Member 'QuickbarBase_C_Is_Valid_Slot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.Maximize
// 0x0020 (0x0020 - 0x0000)
struct QuickbarBase_C_Maximize final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_Maximize) == 0x000008, "Wrong alignment on QuickbarBase_C_Maximize");
static_assert(sizeof(QuickbarBase_C_Maximize) == 0x000020, "Wrong size on QuickbarBase_C_Maximize");
static_assert(offsetof(QuickbarBase_C_Maximize, Temp_int_Array_Index_Variable) == 0x000000, "Member 'QuickbarBase_C_Maximize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'QuickbarBase_C_Maximize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'QuickbarBase_C_Maximize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'QuickbarBase_C_Maximize::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, CallFunc_Array_Get_Item) == 0x000010, "Member 'QuickbarBase_C_Maximize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'QuickbarBase_C_Maximize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Maximize, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'QuickbarBase_C_Maximize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.Minimize
// 0x0020 (0x0020 - 0x0000)
struct QuickbarBase_C_Minimize final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_Minimize) == 0x000008, "Wrong alignment on QuickbarBase_C_Minimize");
static_assert(sizeof(QuickbarBase_C_Minimize) == 0x000020, "Wrong size on QuickbarBase_C_Minimize");
static_assert(offsetof(QuickbarBase_C_Minimize, Temp_int_Array_Index_Variable) == 0x000000, "Member 'QuickbarBase_C_Minimize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'QuickbarBase_C_Minimize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'QuickbarBase_C_Minimize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'QuickbarBase_C_Minimize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, CallFunc_Array_Get_Item) == 0x000010, "Member 'QuickbarBase_C_Minimize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_Minimize, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'QuickbarBase_C_Minimize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.HandleKeybindsChanged
// 0x0020 (0x0020 - 0x0000)
struct QuickbarBase_C_HandleKeybindsChanged final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_HandleKeybindsChanged) == 0x000008, "Wrong alignment on QuickbarBase_C_HandleKeybindsChanged");
static_assert(sizeof(QuickbarBase_C_HandleKeybindsChanged) == 0x000020, "Wrong size on QuickbarBase_C_HandleKeybindsChanged");
static_assert(offsetof(QuickbarBase_C_HandleKeybindsChanged, Temp_int_Array_Index_Variable) == 0x000000, "Member 'QuickbarBase_C_HandleKeybindsChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleKeybindsChanged, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'QuickbarBase_C_HandleKeybindsChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleKeybindsChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'QuickbarBase_C_HandleKeybindsChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleKeybindsChanged, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'QuickbarBase_C_HandleKeybindsChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleKeybindsChanged, CallFunc_Array_Get_Item) == 0x000010, "Member 'QuickbarBase_C_HandleKeybindsChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_HandleKeybindsChanged, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'QuickbarBase_C_HandleKeybindsChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.RefreshQuickbar
// 0x0020 (0x0020 - 0x0000)
struct QuickbarBase_C_RefreshQuickbar final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_RefreshQuickbar) == 0x000008, "Wrong alignment on QuickbarBase_C_RefreshQuickbar");
static_assert(sizeof(QuickbarBase_C_RefreshQuickbar) == 0x000020, "Wrong size on QuickbarBase_C_RefreshQuickbar");
static_assert(offsetof(QuickbarBase_C_RefreshQuickbar, Temp_int_Array_Index_Variable) == 0x000000, "Member 'QuickbarBase_C_RefreshQuickbar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_RefreshQuickbar, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'QuickbarBase_C_RefreshQuickbar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_RefreshQuickbar, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'QuickbarBase_C_RefreshQuickbar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_RefreshQuickbar, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'QuickbarBase_C_RefreshQuickbar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_RefreshQuickbar, CallFunc_Array_Get_Item) == 0x000010, "Member 'QuickbarBase_C_RefreshQuickbar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_RefreshQuickbar, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'QuickbarBase_C_RefreshQuickbar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.ShouldRefreshQuickbarItem
// 0x0030 (0x0030 - 0x0000)
struct QuickbarBase_C_ShouldRefreshQuickbarItem final
{
public:
	int32                                         RequestedSlot;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentSlot;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortQuickBars                                CallFunc_GetQuickbarFocus_OutQuickBar;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetQuickbarFocus_OutSlot;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetQuickbarFocus_OutSecondarySlot;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot;  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarBase_C_ShouldRefreshQuickbarItem) == 0x000008, "Wrong alignment on QuickbarBase_C_ShouldRefreshQuickbarItem");
static_assert(sizeof(QuickbarBase_C_ShouldRefreshQuickbarItem) == 0x000030, "Wrong size on QuickbarBase_C_ShouldRefreshQuickbarItem");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, RequestedSlot) == 0x000000, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::RequestedSlot' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, CurrentSlot) == 0x000004, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::CurrentSlot' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, Result) == 0x000008, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::Result' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, CallFunc_GetQuickbarFocus_OutQuickBar) == 0x000019, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::CallFunc_GetQuickbarFocus_OutQuickBar' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, CallFunc_GetQuickbarFocus_OutSlot) == 0x00001C, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::CallFunc_GetQuickbarFocus_OutSlot' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, CallFunc_GetQuickbarFocus_OutSecondarySlot) == 0x000020, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::CallFunc_GetQuickbarFocus_OutSecondarySlot' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot) == 0x000024, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x000028, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_ShouldRefreshQuickbarItem, CallFunc_BooleanOR_ReturnValue) == 0x000029, "Member 'QuickbarBase_C_ShouldRefreshQuickbarItem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function QuickbarBase.QuickbarBase_C.UpdateCurrentFocusedQuickbar
// 0x0020 (0x0020 - 0x0000)
struct QuickbarBase_C_UpdateCurrentFocusedQuickbar final
{
public:
	EFortQuickBars                                PreviousFocusedQuickbar;                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuickBars                                CurrentFocusedQuickbar;                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuickBars                                PrevFocusedQuickbarIndex;                          // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuickBars                                CallFunc_GetQuickbarFocus_OutQuickBar;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetQuickbarFocus_OutSlot;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetQuickbarFocus_OutSecondarySlot;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot;  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuickbarBase_C_UpdateCurrentFocusedQuickbar) == 0x000008, "Wrong alignment on QuickbarBase_C_UpdateCurrentFocusedQuickbar");
static_assert(sizeof(QuickbarBase_C_UpdateCurrentFocusedQuickbar) == 0x000020, "Wrong size on QuickbarBase_C_UpdateCurrentFocusedQuickbar");
static_assert(offsetof(QuickbarBase_C_UpdateCurrentFocusedQuickbar, PreviousFocusedQuickbar) == 0x000000, "Member 'QuickbarBase_C_UpdateCurrentFocusedQuickbar::PreviousFocusedQuickbar' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateCurrentFocusedQuickbar, CurrentFocusedQuickbar) == 0x000001, "Member 'QuickbarBase_C_UpdateCurrentFocusedQuickbar::CurrentFocusedQuickbar' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateCurrentFocusedQuickbar, PrevFocusedQuickbarIndex) == 0x000002, "Member 'QuickbarBase_C_UpdateCurrentFocusedQuickbar::PrevFocusedQuickbarIndex' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateCurrentFocusedQuickbar, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'QuickbarBase_C_UpdateCurrentFocusedQuickbar::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateCurrentFocusedQuickbar, CallFunc_GetQuickbarFocus_OutQuickBar) == 0x000010, "Member 'QuickbarBase_C_UpdateCurrentFocusedQuickbar::CallFunc_GetQuickbarFocus_OutQuickBar' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateCurrentFocusedQuickbar, CallFunc_GetQuickbarFocus_OutSlot) == 0x000014, "Member 'QuickbarBase_C_UpdateCurrentFocusedQuickbar::CallFunc_GetQuickbarFocus_OutSlot' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateCurrentFocusedQuickbar, CallFunc_GetQuickbarFocus_OutSecondarySlot) == 0x000018, "Member 'QuickbarBase_C_UpdateCurrentFocusedQuickbar::CallFunc_GetQuickbarFocus_OutSecondarySlot' has a wrong offset!");
static_assert(offsetof(QuickbarBase_C_UpdateCurrentFocusedQuickbar, CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot) == 0x00001C, "Member 'QuickbarBase_C_UpdateCurrentFocusedQuickbar::CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot' has a wrong offset!");

}

