#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuickbarPrimary

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "QuickbarBase_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass QuickbarPrimary.QuickbarPrimary_C
// 0x00A8 (0x0308 - 0x0260)
class UQuickbarPrimary_C final : public UQuickbarBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_QuickbarPrimary_C;                  // 0x0260(0x0008)(Transient, DuplicateTransient)
	class UImage*                                 _Image__Separator;                                 // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        Quickbar_Slot_1;                                   // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        Quickbar_Slot_2;                                   // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        Quickbar_Slot_3;                                   // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        Quickbar_Slot_4;                                   // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        Quickbar_Slot_5;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        Quickbar_Slot_6;                                   // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        Quickbar_Slot_7;                                   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        Quickbar_Slot_8;                                   // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UQuickbarSlot_C*                        Quickbar_Slot_9;                                   // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_WeaponsRail;                               // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortBangWrapper*                       TutorialQBP1;                                      // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortBangWrapper*                       TutorialQBP2;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortBangWrapper*                       TutorialQBP3;                                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortBangWrapper*                       TutorialQBP4;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortBangWrapper*                       TutorialQBP5;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortBangWrapper*                       TutorialQBP6;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortBangWrapper*                       TutorialQBP7;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortBangWrapper*                       TutorialQBP8;                                      // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortBangWrapper*                       TutorialQBP9;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_QuickbarPrimary(int32 EntryPoint);
	void Destruct();
	void HandleInputMethodChanged(bool bUsingGamepad);
	void Show_Primary_Quickbar_Rail(bool Show);
	void HasOneNonHarvestWeapon(bool* HasNonHarvestWeapon);
	void Construct();
	void RefreshQuickbar();
	void HandleKeybindsChanged();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QuickbarPrimary_C">();
	}
	static class UQuickbarPrimary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuickbarPrimary_C>();
	}
};
static_assert(alignof(UQuickbarPrimary_C) == 0x000008, "Wrong alignment on UQuickbarPrimary_C");
static_assert(sizeof(UQuickbarPrimary_C) == 0x000308, "Wrong size on UQuickbarPrimary_C");
static_assert(offsetof(UQuickbarPrimary_C, UberGraphFrame_QuickbarPrimary_C) == 0x000260, "Member 'UQuickbarPrimary_C::UberGraphFrame_QuickbarPrimary_C' has a wrong offset!");
static_assert(offsetof(UQuickbarPrimary_C, _Image__Separator) == 0x000268, "Member 'UQuickbarPrimary_C::_Image__Separator' has a wrong offset!");
static_assert(offsetof(UQuickbarPrimary_C, Quickbar_Slot_1) == 0x000270, "Member 'UQuickbarPrimary_C::Quickbar_Slot_1' has a wrong offset!");
static_assert(offsetof(UQuickbarPrimary_C, Quickbar_Slot_2) == 0x000278, "Member 'UQuickbarPrimary_C::Quickbar_Slot_2' has a wrong offset!");
static_assert(offsetof(UQuickbarPrimary_C, Quickbar_Slot_3) == 0x000280, "Member 'UQuickbarPrimary_C::Quickbar_Slot_3' has a wrong offset!");
static_assert(offsetof(UQuickbarPrimary_C, Quickbar_Slot_4) == 0x000288, "Member 'UQuickbarPrimary_C::Quickbar_Slot_4' has a wrong offset!");
static_assert(offsetof(UQuickbarPrimary_C, Quickbar_Slot_5) == 0x000290, "Member 'UQuickbarPrimary_C::Quickbar_Slot_5' has a wrong offset!");
static_assert(offsetof(UQuickbarPrimary_C, Quickbar_Slot_6) == 0x000298, "Member 'UQuickbarPrimary_C::Quickbar_Slot_6' has a wrong offset!");
static_assert(offsetof(UQuickbarPrimary_C, Quickbar_Slot_7) == 0x0002A0, "Member 'UQuickbarPrimary_C::Quickbar_Slot_7' has a wrong offset!");
static_assert(offsetof(UQuickbarPrimary_C, Quickbar_Slot_8) == 0x0002A8, "Member 'UQuickbarPrimary_C::Quickbar_Slot_8' has a wrong offset!");
static_assert(offsetof(UQuickbarPrimary_C, Quickbar_Slot_9) == 0x0002B0, "Member 'UQuickbarPrimary_C::Quickbar_Slot_9' has a wrong offset!");
static_assert(offsetof(UQuickbarPrimary_C, SizeBox_WeaponsRail) == 0x0002B8, "Member 'UQuickbarPrimary_C::SizeBox_WeaponsRail' has a wrong offset!");
static_assert(offsetof(UQuickbarPrimary_C, TutorialQBP1) == 0x0002C0, "Member 'UQuickbarPrimary_C::TutorialQBP1' has a wrong offset!");
static_assert(offsetof(UQuickbarPrimary_C, TutorialQBP2) == 0x0002C8, "Member 'UQuickbarPrimary_C::TutorialQBP2' has a wrong offset!");
static_assert(offsetof(UQuickbarPrimary_C, TutorialQBP3) == 0x0002D0, "Member 'UQuickbarPrimary_C::TutorialQBP3' has a wrong offset!");
static_assert(offsetof(UQuickbarPrimary_C, TutorialQBP4) == 0x0002D8, "Member 'UQuickbarPrimary_C::TutorialQBP4' has a wrong offset!");
static_assert(offsetof(UQuickbarPrimary_C, TutorialQBP5) == 0x0002E0, "Member 'UQuickbarPrimary_C::TutorialQBP5' has a wrong offset!");
static_assert(offsetof(UQuickbarPrimary_C, TutorialQBP6) == 0x0002E8, "Member 'UQuickbarPrimary_C::TutorialQBP6' has a wrong offset!");
static_assert(offsetof(UQuickbarPrimary_C, TutorialQBP7) == 0x0002F0, "Member 'UQuickbarPrimary_C::TutorialQBP7' has a wrong offset!");
static_assert(offsetof(UQuickbarPrimary_C, TutorialQBP8) == 0x0002F8, "Member 'UQuickbarPrimary_C::TutorialQBP8' has a wrong offset!");
static_assert(offsetof(UQuickbarPrimary_C, TutorialQBP9) == 0x000300, "Member 'UQuickbarPrimary_C::TutorialQBP9' has a wrong offset!");

}

