#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuickbarPrimary

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function QuickbarPrimary.QuickbarPrimary_C.ExecuteUbergraph_QuickbarPrimary
// 0x0080 (0x0080 - 0x0000)
struct QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bUsingGamepad)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TArray<class UQuickbarSlot_C*>                K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	class UCommonUIContext*                       CallFunc_GetContext_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bUsingGamepad;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue2;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingGamepad_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bUsingGamepad)>           K2Node_CreateDelegate_OutputDelegate2;             // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	class UCommonUIContext*                       CallFunc_GetContext_ReturnValue3;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasOneNonHarvestWeapon_HasNonHarvestWeapon; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue4;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuickBars                                CallFunc_GetQuickbarFocus_OutQuickBar;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetQuickbarFocus_OutSlot;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetQuickbarFocus_OutSecondarySlot;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot;  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary) == 0x000008, "Wrong alignment on QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary");
static_assert(sizeof(QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary) == 0x000080, "Wrong size on QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary");
static_assert(offsetof(QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary, EntryPoint) == 0x000000, "Member 'QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary::EntryPoint' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary, K2Node_MakeArray_Array) == 0x000018, "Member 'QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary, CallFunc_GetContext_ReturnValue) == 0x000028, "Member 'QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary, K2Node_CustomEvent_bUsingGamepad) == 0x000030, "Member 'QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary::K2Node_CustomEvent_bUsingGamepad' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary, CallFunc_GetContext_ReturnValue2) == 0x000038, "Member 'QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary, CallFunc_IsUsingGamepad_ReturnValue) == 0x000040, "Member 'QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary::CallFunc_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary, K2Node_CreateDelegate_OutputDelegate2) == 0x000048, "Member 'QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary, CallFunc_GetContext_ReturnValue3) == 0x000058, "Member 'QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary::CallFunc_GetContext_ReturnValue3' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary, CallFunc_HasOneNonHarvestWeapon_HasNonHarvestWeapon) == 0x000060, "Member 'QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary::CallFunc_HasOneNonHarvestWeapon_HasNonHarvestWeapon' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary, CallFunc_BooleanAND_ReturnValue) == 0x000061, "Member 'QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary, CallFunc_GetContext_ReturnValue4) == 0x000068, "Member 'QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary::CallFunc_GetContext_ReturnValue4' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary, CallFunc_GetQuickbarFocus_OutQuickBar) == 0x000070, "Member 'QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary::CallFunc_GetQuickbarFocus_OutQuickBar' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary, CallFunc_GetQuickbarFocus_OutSlot) == 0x000074, "Member 'QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary::CallFunc_GetQuickbarFocus_OutSlot' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary, CallFunc_GetQuickbarFocus_OutSecondarySlot) == 0x000078, "Member 'QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary::CallFunc_GetQuickbarFocus_OutSecondarySlot' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary, CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot) == 0x00007C, "Member 'QuickbarPrimary_C_ExecuteUbergraph_QuickbarPrimary::CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot' has a wrong offset!");

// Function QuickbarPrimary.QuickbarPrimary_C.HandleInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct QuickbarPrimary_C_HandleInputMethodChanged final
{
public:
	bool                                          bUsingGamepad;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarPrimary_C_HandleInputMethodChanged) == 0x000001, "Wrong alignment on QuickbarPrimary_C_HandleInputMethodChanged");
static_assert(sizeof(QuickbarPrimary_C_HandleInputMethodChanged) == 0x000001, "Wrong size on QuickbarPrimary_C_HandleInputMethodChanged");
static_assert(offsetof(QuickbarPrimary_C_HandleInputMethodChanged, bUsingGamepad) == 0x000000, "Member 'QuickbarPrimary_C_HandleInputMethodChanged::bUsingGamepad' has a wrong offset!");

// Function QuickbarPrimary.QuickbarPrimary_C.Show Primary Quickbar Rail
// 0x0005 (0x0005 - 0x0000)
struct QuickbarPrimary_C_Show_Primary_Quickbar_Rail final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuickbarPrimary_C_Show_Primary_Quickbar_Rail) == 0x000001, "Wrong alignment on QuickbarPrimary_C_Show_Primary_Quickbar_Rail");
static_assert(sizeof(QuickbarPrimary_C_Show_Primary_Quickbar_Rail) == 0x000005, "Wrong size on QuickbarPrimary_C_Show_Primary_Quickbar_Rail");
static_assert(offsetof(QuickbarPrimary_C_Show_Primary_Quickbar_Rail, Show) == 0x000000, "Member 'QuickbarPrimary_C_Show_Primary_Quickbar_Rail::Show' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_Show_Primary_Quickbar_Rail, Temp_bool_Variable) == 0x000001, "Member 'QuickbarPrimary_C_Show_Primary_Quickbar_Rail::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_Show_Primary_Quickbar_Rail, Temp_byte_Variable) == 0x000002, "Member 'QuickbarPrimary_C_Show_Primary_Quickbar_Rail::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_Show_Primary_Quickbar_Rail, Temp_byte_Variable2) == 0x000003, "Member 'QuickbarPrimary_C_Show_Primary_Quickbar_Rail::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_Show_Primary_Quickbar_Rail, K2Node_Select_Default) == 0x000004, "Member 'QuickbarPrimary_C_Show_Primary_Quickbar_Rail::K2Node_Select_Default' has a wrong offset!");

// Function QuickbarPrimary.QuickbarPrimary_C.HasOneNonHarvestWeapon
// 0x0006 (0x0006 - 0x0000)
struct QuickbarPrimary_C_HasOneNonHarvestWeapon final
{
public:
	bool                                          HasNonHarvestWeapon;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QuickbarPrimary_C_HasOneNonHarvestWeapon) == 0x000001, "Wrong alignment on QuickbarPrimary_C_HasOneNonHarvestWeapon");
static_assert(sizeof(QuickbarPrimary_C_HasOneNonHarvestWeapon) == 0x000006, "Wrong size on QuickbarPrimary_C_HasOneNonHarvestWeapon");
static_assert(offsetof(QuickbarPrimary_C_HasOneNonHarvestWeapon, HasNonHarvestWeapon) == 0x000000, "Member 'QuickbarPrimary_C_HasOneNonHarvestWeapon::HasNonHarvestWeapon' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_HasOneNonHarvestWeapon, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'QuickbarPrimary_C_HasOneNonHarvestWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_HasOneNonHarvestWeapon, CallFunc_IsValid_ReturnValue2) == 0x000002, "Member 'QuickbarPrimary_C_HasOneNonHarvestWeapon::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_HasOneNonHarvestWeapon, CallFunc_IsValid_ReturnValue3) == 0x000003, "Member 'QuickbarPrimary_C_HasOneNonHarvestWeapon::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_HasOneNonHarvestWeapon, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'QuickbarPrimary_C_HasOneNonHarvestWeapon::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuickbarPrimary_C_HasOneNonHarvestWeapon, CallFunc_BooleanOR_ReturnValue2) == 0x000005, "Member 'QuickbarPrimary_C_HasOneNonHarvestWeapon::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");

}

