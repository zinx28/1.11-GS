#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RatingWidget_NUI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass RatingWidget_NUI.RatingWidget_NUI_C
// 0x1278 (0x1488 - 0x0210)
class URatingWidget_NUI_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0210(0x0008)(Transient, DuplicateTransient)
	class UCommonNumericTextBlock*                CommonNumericTextRatingValue;                      // 0x0218(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox;                                     // 0x0220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x0228(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x0230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         RatingValue;                                       // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       UniqueId;                                          // 0x0240(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         InterpDuration;                                    // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortMultiSizeBrush                    MBrush_Silhouette;                                 // 0x0270(0x02D0)(Edit, BlueprintVisible)
	struct FFortMultiSizeBrush                    MBrush_Chamfer;                                    // 0x0540(0x02D0)(Edit, BlueprintVisible)
	struct FFortMultiSizeBrush                    MBrush_Shadow;                                     // 0x0810(0x02D0)(Edit, BlueprintVisible)
	struct FFortMultiSizeBrush                    MBrush_Icon;                                       // 0x0AE0(0x02D0)(Edit, BlueprintVisible)
	bool                                          OverrideDefaultColor;                              // 0x0DB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB1[0x3];                                      // 0x0DB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color_Light;                                       // 0x0DB4(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_Medium;                                      // 0x0DC4(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_Dark;                                        // 0x0DD4(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Default_Color_Light;                               // 0x0DE4(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Default_Color_Medium;                              // 0x0DF4(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Default_Color_Dark;                                // 0x0E04(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E14[0x4];                                      // 0x0E14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortMultiSizeBrush                    MBrush_Icon_Alt;                                   // 0x0E18(0x02D0)(Edit, BlueprintVisible)
	bool                                          UseAlternateIcon;                                  // 0x10E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_10E9[0x7];                                     // 0x10E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortMultiSizeBrush                    MBrush_Shadow_Alt;                                 // 0x10F0(0x02D0)(Edit, BlueprintVisible)
	struct FFortMultiSizeMargin                   MMargin_Alt;                                       // 0x13C0(0x0060)(Edit, BlueprintVisible, NoDestructor)
	struct FFortMultiSizeMargin                   MMargin;                                           // 0x1420(0x0060)(Edit, BlueprintVisible, NoDestructor)
	bool                                          ShowTeamPowerRating;                               // 0x1480(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EFortBrushSize                                Brush_Size;                                        // 0x1481(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseRatingValuesFromPlayer;                        // 0x1482(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_RatingWidget_NUI(int32 EntryPoint);
	void PlayerStateChanged(const struct FFortTeamMemberInfo& PlayerInfo);
	void Construct();
	void PlayerInfoChanged(const struct FUniqueNetIdRepl& Param_UniqueId);
	void PreConstruct(bool IsDesignTime);
	void Update_Rating_Value(int32 Rating);
	void Update();
	void Set_Unique_ID(const struct FUniqueNetIdRepl& ID);
	void Update_From_Unique_ID();
	void Set_Texture2D_Parameter_From_Multi_Size_Brush(class UMaterialInstanceDynamic* Mid, class FName Parameter, const struct FFortMultiSizeBrush& MBrush);
	void Override_Default_Color_Set(bool Override, const struct FLinearColor& Light_Color, const struct FLinearColor& Medium_Color, const struct FLinearColor& Dark_Color);
	void SetShouldShowTeamPowerRating(bool ShowTeamRating);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RatingWidget_NUI_C">();
	}
	static class URatingWidget_NUI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<URatingWidget_NUI_C>();
	}
};
static_assert(alignof(URatingWidget_NUI_C) == 0x000008, "Wrong alignment on URatingWidget_NUI_C");
static_assert(sizeof(URatingWidget_NUI_C) == 0x001488, "Wrong size on URatingWidget_NUI_C");
static_assert(offsetof(URatingWidget_NUI_C, UberGraphFrame) == 0x000210, "Member 'URatingWidget_NUI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, CommonNumericTextRatingValue) == 0x000218, "Member 'URatingWidget_NUI_C::CommonNumericTextRatingValue' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, HorizontalBox) == 0x000220, "Member 'URatingWidget_NUI_C::HorizontalBox' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, Image_0) == 0x000228, "Member 'URatingWidget_NUI_C::Image_0' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, SizeBox) == 0x000230, "Member 'URatingWidget_NUI_C::SizeBox' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, RatingValue) == 0x000238, "Member 'URatingWidget_NUI_C::RatingValue' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, UniqueId) == 0x000240, "Member 'URatingWidget_NUI_C::UniqueId' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, InterpDuration) == 0x000268, "Member 'URatingWidget_NUI_C::InterpDuration' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, MBrush_Silhouette) == 0x000270, "Member 'URatingWidget_NUI_C::MBrush_Silhouette' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, MBrush_Chamfer) == 0x000540, "Member 'URatingWidget_NUI_C::MBrush_Chamfer' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, MBrush_Shadow) == 0x000810, "Member 'URatingWidget_NUI_C::MBrush_Shadow' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, MBrush_Icon) == 0x000AE0, "Member 'URatingWidget_NUI_C::MBrush_Icon' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, OverrideDefaultColor) == 0x000DB0, "Member 'URatingWidget_NUI_C::OverrideDefaultColor' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, Color_Light) == 0x000DB4, "Member 'URatingWidget_NUI_C::Color_Light' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, Color_Medium) == 0x000DC4, "Member 'URatingWidget_NUI_C::Color_Medium' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, Color_Dark) == 0x000DD4, "Member 'URatingWidget_NUI_C::Color_Dark' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, Default_Color_Light) == 0x000DE4, "Member 'URatingWidget_NUI_C::Default_Color_Light' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, Default_Color_Medium) == 0x000DF4, "Member 'URatingWidget_NUI_C::Default_Color_Medium' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, Default_Color_Dark) == 0x000E04, "Member 'URatingWidget_NUI_C::Default_Color_Dark' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, MBrush_Icon_Alt) == 0x000E18, "Member 'URatingWidget_NUI_C::MBrush_Icon_Alt' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, UseAlternateIcon) == 0x0010E8, "Member 'URatingWidget_NUI_C::UseAlternateIcon' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, MBrush_Shadow_Alt) == 0x0010F0, "Member 'URatingWidget_NUI_C::MBrush_Shadow_Alt' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, MMargin_Alt) == 0x0013C0, "Member 'URatingWidget_NUI_C::MMargin_Alt' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, MMargin) == 0x001420, "Member 'URatingWidget_NUI_C::MMargin' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, ShowTeamPowerRating) == 0x001480, "Member 'URatingWidget_NUI_C::ShowTeamPowerRating' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, Brush_Size) == 0x001481, "Member 'URatingWidget_NUI_C::Brush_Size' has a wrong offset!");
static_assert(offsetof(URatingWidget_NUI_C, bUseRatingValuesFromPlayer) == 0x001482, "Member 'URatingWidget_NUI_C::bUseRatingValuesFromPlayer' has a wrong offset!");

}

