#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Results_BonusXpType

#include "Basic.hpp"

#include "Results_BonusXpType_classes.hpp"
#include "Results_BonusXpType_parameters.hpp"


namespace SDK
{

// Function Results_BonusXpType.Results_BonusXpType_C.ExecuteUbergraph_Results_BonusXpType
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UResults_BonusXpType_C::ExecuteUbergraph_Results_BonusXpType(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Results_BonusXpType_C", "ExecuteUbergraph_Results_BonusXpType");

	Params::Results_BonusXpType_C_ExecuteUbergraph_Results_BonusXpType Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Results_BonusXpType.Results_BonusXpType_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UResults_BonusXpType_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Results_BonusXpType_C", "PreConstruct");

	Params::Results_BonusXpType_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Results_BonusXpType.Results_BonusXpType_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UResults_BonusXpType_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Results_BonusXpType_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Results_BonusXpType.Results_BonusXpType_C.setInformation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InXPAmount                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class FName                             InType                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UResults_BonusXpType_C::SetInformation(int32 InXPAmount, const class FText& PlayerName, class FName InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Results_BonusXpType_C", "setInformation");

	Params::Results_BonusXpType_C_SetInformation Parms{};

	Parms.InXPAmount = InXPAmount;
	Parms.PlayerName = std::move(PlayerName);
	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}

}

