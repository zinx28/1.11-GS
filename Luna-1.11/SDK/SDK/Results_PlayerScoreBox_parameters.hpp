#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Results_PlayerScoreBox

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function Results_PlayerScoreBox.Results_PlayerScoreBox_C.ExecuteUbergraph_Results_PlayerScoreBox
// 0x0028 (0x0028 - 0x0000)
struct Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonNumericTextBlock*                K2Node_ComponentBoundEvent_NumericTextBlock;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_HadCompleted;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox) == 0x000008, "Wrong alignment on Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox");
static_assert(sizeof(Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox) == 0x000028, "Wrong size on Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox");
static_assert(offsetof(Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox, EntryPoint) == 0x000000, "Member 'Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox, K2Node_Event_IsDesignTime) == 0x000004, "Member 'Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000008, "Member 'Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox, CallFunc_RandomBool_ReturnValue) == 0x000010, "Member 'Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000014, "Member 'Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox, K2Node_ComponentBoundEvent_NumericTextBlock) == 0x000018, "Member 'Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox::K2Node_ComponentBoundEvent_NumericTextBlock' has a wrong offset!");
static_assert(offsetof(Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox, K2Node_ComponentBoundEvent_HadCompleted) == 0x000020, "Member 'Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox::K2Node_ComponentBoundEvent_HadCompleted' has a wrong offset!");
static_assert(offsetof(Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000021, "Member 'Results_PlayerScoreBox_C_ExecuteUbergraph_Results_PlayerScoreBox::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function Results_PlayerScoreBox.Results_PlayerScoreBox_C.BndEvt__TextScore_K2Node_ComponentBoundEvent_0_OnInterpolationEnded__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct Results_PlayerScoreBox_C_BndEvt__TextScore_K2Node_ComponentBoundEvent_0_OnInterpolationEnded__DelegateSignature final
{
public:
	class UCommonNumericTextBlock*                NumericTextBlock;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HadCompleted;                                      // 0x0008(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Results_PlayerScoreBox_C_BndEvt__TextScore_K2Node_ComponentBoundEvent_0_OnInterpolationEnded__DelegateSignature) == 0x000008, "Wrong alignment on Results_PlayerScoreBox_C_BndEvt__TextScore_K2Node_ComponentBoundEvent_0_OnInterpolationEnded__DelegateSignature");
static_assert(sizeof(Results_PlayerScoreBox_C_BndEvt__TextScore_K2Node_ComponentBoundEvent_0_OnInterpolationEnded__DelegateSignature) == 0x000010, "Wrong size on Results_PlayerScoreBox_C_BndEvt__TextScore_K2Node_ComponentBoundEvent_0_OnInterpolationEnded__DelegateSignature");
static_assert(offsetof(Results_PlayerScoreBox_C_BndEvt__TextScore_K2Node_ComponentBoundEvent_0_OnInterpolationEnded__DelegateSignature, NumericTextBlock) == 0x000000, "Member 'Results_PlayerScoreBox_C_BndEvt__TextScore_K2Node_ComponentBoundEvent_0_OnInterpolationEnded__DelegateSignature::NumericTextBlock' has a wrong offset!");
static_assert(offsetof(Results_PlayerScoreBox_C_BndEvt__TextScore_K2Node_ComponentBoundEvent_0_OnInterpolationEnded__DelegateSignature, HadCompleted) == 0x000008, "Member 'Results_PlayerScoreBox_C_BndEvt__TextScore_K2Node_ComponentBoundEvent_0_OnInterpolationEnded__DelegateSignature::HadCompleted' has a wrong offset!");

// Function Results_PlayerScoreBox.Results_PlayerScoreBox_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Results_PlayerScoreBox_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Results_PlayerScoreBox_C_PreConstruct) == 0x000001, "Wrong alignment on Results_PlayerScoreBox_C_PreConstruct");
static_assert(sizeof(Results_PlayerScoreBox_C_PreConstruct) == 0x000001, "Wrong size on Results_PlayerScoreBox_C_PreConstruct");
static_assert(offsetof(Results_PlayerScoreBox_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Results_PlayerScoreBox_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Results_PlayerScoreBox.Results_PlayerScoreBox_C.Initialize
// 0x0010 (0x0010 - 0x0000)
struct Results_PlayerScoreBox_C_Initialize final
{
public:
	int32                                         Param_Score;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_PlayRate;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Results_PlayerScoreBox_C_Initialize) == 0x000004, "Wrong alignment on Results_PlayerScoreBox_C_Initialize");
static_assert(sizeof(Results_PlayerScoreBox_C_Initialize) == 0x000010, "Wrong size on Results_PlayerScoreBox_C_Initialize");
static_assert(offsetof(Results_PlayerScoreBox_C_Initialize, Param_Score) == 0x000000, "Member 'Results_PlayerScoreBox_C_Initialize::Param_Score' has a wrong offset!");
static_assert(offsetof(Results_PlayerScoreBox_C_Initialize, Param_PlayRate) == 0x000004, "Member 'Results_PlayerScoreBox_C_Initialize::Param_PlayRate' has a wrong offset!");
static_assert(offsetof(Results_PlayerScoreBox_C_Initialize, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'Results_PlayerScoreBox_C_Initialize::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Results_PlayerScoreBox_C_Initialize, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x00000C, "Member 'Results_PlayerScoreBox_C_Initialize::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");

// Function Results_PlayerScoreBox.Results_PlayerScoreBox_C.SetIsBestScore
// 0x0050 (0x0050 - 0x0000)
struct Results_PlayerScoreBox_C_SetIsBestScore final
{
public:
	bool                                          Param_bIsBestScore;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ScoreColor;                                        // 0x0004(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Texture;                                           // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0020(0x0028)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Results_PlayerScoreBox_C_SetIsBestScore) == 0x000008, "Wrong alignment on Results_PlayerScoreBox_C_SetIsBestScore");
static_assert(sizeof(Results_PlayerScoreBox_C_SetIsBestScore) == 0x000050, "Wrong size on Results_PlayerScoreBox_C_SetIsBestScore");
static_assert(offsetof(Results_PlayerScoreBox_C_SetIsBestScore, Param_bIsBestScore) == 0x000000, "Member 'Results_PlayerScoreBox_C_SetIsBestScore::Param_bIsBestScore' has a wrong offset!");
static_assert(offsetof(Results_PlayerScoreBox_C_SetIsBestScore, ScoreColor) == 0x000004, "Member 'Results_PlayerScoreBox_C_SetIsBestScore::ScoreColor' has a wrong offset!");
static_assert(offsetof(Results_PlayerScoreBox_C_SetIsBestScore, Texture) == 0x000018, "Member 'Results_PlayerScoreBox_C_SetIsBestScore::Texture' has a wrong offset!");
static_assert(offsetof(Results_PlayerScoreBox_C_SetIsBestScore, K2Node_MakeStruct_SlateColor) == 0x000020, "Member 'Results_PlayerScoreBox_C_SetIsBestScore::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(Results_PlayerScoreBox_C_SetIsBestScore, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000048, "Member 'Results_PlayerScoreBox_C_SetIsBestScore::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function Results_PlayerScoreBox.Results_PlayerScoreBox_C.SetSkippingToEnd
// 0x000C (0x000C - 0x0000)
struct Results_PlayerScoreBox_C_SetSkippingToEnd final
{
public:
	bool                                          CallFunc_IsInterpolatingNumericValue_ReturnValue;  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Results_PlayerScoreBox_C_SetSkippingToEnd) == 0x000004, "Wrong alignment on Results_PlayerScoreBox_C_SetSkippingToEnd");
static_assert(sizeof(Results_PlayerScoreBox_C_SetSkippingToEnd) == 0x00000C, "Wrong size on Results_PlayerScoreBox_C_SetSkippingToEnd");
static_assert(offsetof(Results_PlayerScoreBox_C_SetSkippingToEnd, CallFunc_IsInterpolatingNumericValue_ReturnValue) == 0x000000, "Member 'Results_PlayerScoreBox_C_SetSkippingToEnd::CallFunc_IsInterpolatingNumericValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Results_PlayerScoreBox_C_SetSkippingToEnd, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'Results_PlayerScoreBox_C_SetSkippingToEnd::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Results_PlayerScoreBox_C_SetSkippingToEnd, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000008, "Member 'Results_PlayerScoreBox_C_SetSkippingToEnd::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");

// Function Results_PlayerScoreBox.Results_PlayerScoreBox_C.SetIsValidScoreBox
// 0x0001 (0x0001 - 0x0000)
struct Results_PlayerScoreBox_C_SetIsValidScoreBox final
{
public:
	bool                                          Param_bIsValidScoreBox;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Results_PlayerScoreBox_C_SetIsValidScoreBox) == 0x000001, "Wrong alignment on Results_PlayerScoreBox_C_SetIsValidScoreBox");
static_assert(sizeof(Results_PlayerScoreBox_C_SetIsValidScoreBox) == 0x000001, "Wrong size on Results_PlayerScoreBox_C_SetIsValidScoreBox");
static_assert(offsetof(Results_PlayerScoreBox_C_SetIsValidScoreBox, Param_bIsValidScoreBox) == 0x000000, "Member 'Results_PlayerScoreBox_C_SetIsValidScoreBox::Param_bIsValidScoreBox' has a wrong offset!");

// Function Results_PlayerScoreBox.Results_PlayerScoreBox_C.GetIsValidScoreBox
// 0x0001 (0x0001 - 0x0000)
struct Results_PlayerScoreBox_C_GetIsValidScoreBox final
{
public:
	bool                                          Param_bIsValidScoreBox;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Results_PlayerScoreBox_C_GetIsValidScoreBox) == 0x000001, "Wrong alignment on Results_PlayerScoreBox_C_GetIsValidScoreBox");
static_assert(sizeof(Results_PlayerScoreBox_C_GetIsValidScoreBox) == 0x000001, "Wrong size on Results_PlayerScoreBox_C_GetIsValidScoreBox");
static_assert(offsetof(Results_PlayerScoreBox_C_GetIsValidScoreBox, Param_bIsValidScoreBox) == 0x000000, "Member 'Results_PlayerScoreBox_C_GetIsValidScoreBox::Param_bIsValidScoreBox' has a wrong offset!");

}

