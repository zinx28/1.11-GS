#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Rewards_ItemCard

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Slate_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Rewards_ItemCard.Rewards_ItemCard_C.OnSlideAnimationFinished__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Rewards_ItemCard_C_OnSlideAnimationFinished__DelegateSignature final
{
public:
	class URewards_ItemCard_C*                    RewardsItemCard;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rewards_ItemCard_C_OnSlideAnimationFinished__DelegateSignature) == 0x000008, "Wrong alignment on Rewards_ItemCard_C_OnSlideAnimationFinished__DelegateSignature");
static_assert(sizeof(Rewards_ItemCard_C_OnSlideAnimationFinished__DelegateSignature) == 0x000008, "Wrong size on Rewards_ItemCard_C_OnSlideAnimationFinished__DelegateSignature");
static_assert(offsetof(Rewards_ItemCard_C_OnSlideAnimationFinished__DelegateSignature, RewardsItemCard) == 0x000000, "Member 'Rewards_ItemCard_C_OnSlideAnimationFinished__DelegateSignature::RewardsItemCard' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.OnInspectClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Rewards_ItemCard_C_OnInspectClicked__DelegateSignature final
{
public:
	class URewards_ItemCard_C*                    Card;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rewards_ItemCard_C_OnInspectClicked__DelegateSignature) == 0x000008, "Wrong alignment on Rewards_ItemCard_C_OnInspectClicked__DelegateSignature");
static_assert(sizeof(Rewards_ItemCard_C_OnInspectClicked__DelegateSignature) == 0x000008, "Wrong size on Rewards_ItemCard_C_OnInspectClicked__DelegateSignature");
static_assert(offsetof(Rewards_ItemCard_C_OnInspectClicked__DelegateSignature, Card) == 0x000000, "Member 'Rewards_ItemCard_C_OnInspectClicked__DelegateSignature::Card' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.OnResizeAnimationFinished__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Rewards_ItemCard_C_OnResizeAnimationFinished__DelegateSignature final
{
public:
	class URewards_ItemCard_C*                    RewardsItemCard;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rewards_ItemCard_C_OnResizeAnimationFinished__DelegateSignature) == 0x000008, "Wrong alignment on Rewards_ItemCard_C_OnResizeAnimationFinished__DelegateSignature");
static_assert(sizeof(Rewards_ItemCard_C_OnResizeAnimationFinished__DelegateSignature) == 0x000008, "Wrong size on Rewards_ItemCard_C_OnResizeAnimationFinished__DelegateSignature");
static_assert(offsetof(Rewards_ItemCard_C_OnResizeAnimationFinished__DelegateSignature, RewardsItemCard) == 0x000000, "Member 'Rewards_ItemCard_C_OnResizeAnimationFinished__DelegateSignature::RewardsItemCard' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.ExecuteUbergraph_Rewards_ItemCard
// 0x0028 (0x0028 - 0x0000)
struct Rewards_ItemCard_C_ExecuteUbergraph_Rewards_ItemCard final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Rewards_ItemCard_C_ExecuteUbergraph_Rewards_ItemCard) == 0x000008, "Wrong alignment on Rewards_ItemCard_C_ExecuteUbergraph_Rewards_ItemCard");
static_assert(sizeof(Rewards_ItemCard_C_ExecuteUbergraph_Rewards_ItemCard) == 0x000028, "Wrong size on Rewards_ItemCard_C_ExecuteUbergraph_Rewards_ItemCard");
static_assert(offsetof(Rewards_ItemCard_C_ExecuteUbergraph_Rewards_ItemCard, EntryPoint) == 0x000000, "Member 'Rewards_ItemCard_C_ExecuteUbergraph_Rewards_ItemCard::EntryPoint' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_ExecuteUbergraph_Rewards_ItemCard, K2Node_ComponentBoundEvent_Button) == 0x000008, "Member 'Rewards_ItemCard_C_ExecuteUbergraph_Rewards_ItemCard::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_ExecuteUbergraph_Rewards_ItemCard, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Rewards_ItemCard_C_ExecuteUbergraph_Rewards_ItemCard::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_ExecuteUbergraph_Rewards_ItemCard, K2Node_Event_IsDesignTime) == 0x000020, "Member 'Rewards_ItemCard_C_ExecuteUbergraph_Rewards_ItemCard::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.BndEvt__ButtonInspect_K2Node_ComponentBoundEvent_5_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Rewards_ItemCard_C_BndEvt__ButtonInspect_K2Node_ComponentBoundEvent_5_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rewards_ItemCard_C_BndEvt__ButtonInspect_K2Node_ComponentBoundEvent_5_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on Rewards_ItemCard_C_BndEvt__ButtonInspect_K2Node_ComponentBoundEvent_5_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(Rewards_ItemCard_C_BndEvt__ButtonInspect_K2Node_ComponentBoundEvent_5_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on Rewards_ItemCard_C_BndEvt__ButtonInspect_K2Node_ComponentBoundEvent_5_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(Rewards_ItemCard_C_BndEvt__ButtonInspect_K2Node_ComponentBoundEvent_5_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'Rewards_ItemCard_C_BndEvt__ButtonInspect_K2Node_ComponentBoundEvent_5_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Rewards_ItemCard_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Rewards_ItemCard_C_PreConstruct) == 0x000001, "Wrong alignment on Rewards_ItemCard_C_PreConstruct");
static_assert(sizeof(Rewards_ItemCard_C_PreConstruct) == 0x000001, "Wrong size on Rewards_ItemCard_C_PreConstruct");
static_assert(offsetof(Rewards_ItemCard_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Rewards_ItemCard_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.SetItemToRepresent
// 0x0008 (0x0008 - 0x0000)
struct Rewards_ItemCard_C_SetItemToRepresent final
{
public:
	class UFortItem*                              Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rewards_ItemCard_C_SetItemToRepresent) == 0x000008, "Wrong alignment on Rewards_ItemCard_C_SetItemToRepresent");
static_assert(sizeof(Rewards_ItemCard_C_SetItemToRepresent) == 0x000008, "Wrong size on Rewards_ItemCard_C_SetItemToRepresent");
static_assert(offsetof(Rewards_ItemCard_C_SetItemToRepresent, Item) == 0x000000, "Member 'Rewards_ItemCard_C_SetItemToRepresent::Item' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.TickSlideAnimation
// 0x0110 (0x0110 - 0x0000)
struct Rewards_ItemCard_C_TickSlideAnimation final
{
public:
	class UCanvasPanelSlot*                       CanvasSlot;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X2;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y2;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                CallFunc_GetOffsets_ReturnValue;                   // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue2;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue3;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0040(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X3;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y3;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X4;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y4;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X5;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y5;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X6;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y6;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue4;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue5;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue6;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue7;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue2;                // 0x0078(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue3;                // 0x0080(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0088(0x0010)(NoDestructor)
	float                                         CallFunc_Ease_ReturnValue8;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x009C(0x0010)(NoDestructor)
	float                                         CallFunc_Ease_ReturnValue9;                        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue4;                // 0x00B0(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X7;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y7;                         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x00C0(0x001C)(NoDestructor)
	float                                         CallFunc_BreakVector2D_X8;                         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y8;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue10;                       // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue11;                       // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue5;                // 0x00F8(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Rewards_ItemCard_C_TickSlideAnimation) == 0x000008, "Wrong alignment on Rewards_ItemCard_C_TickSlideAnimation");
static_assert(sizeof(Rewards_ItemCard_C_TickSlideAnimation) == 0x000110, "Wrong size on Rewards_ItemCard_C_TickSlideAnimation");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CanvasSlot) == 0x000000, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CanvasSlot' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, Alpha) == 0x000008, "Member 'Rewards_ItemCard_C_TickSlideAnimation::Alpha' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x00000C, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_BreakVector2D_X) == 0x000010, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_BreakVector2D_Y) == 0x000014, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_BreakVector2D_X2) == 0x000018, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_BreakVector2D_X2' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_BreakVector2D_Y2) == 0x00001C, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_BreakVector2D_Y2' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_GetOffsets_ReturnValue) == 0x000020, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_GetOffsets_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_Ease_ReturnValue) == 0x000034, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_Ease_ReturnValue2) == 0x000038, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_Ease_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_Ease_ReturnValue3) == 0x00003C, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_Ease_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_MakeVector2D_ReturnValue) == 0x000040, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_BreakVector2D_X3) == 0x000048, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_BreakVector2D_X3' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_BreakVector2D_Y3) == 0x00004C, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_BreakVector2D_Y3' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_BreakVector2D_X4) == 0x000050, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_BreakVector2D_X4' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_BreakVector2D_Y4) == 0x000054, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_BreakVector2D_Y4' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_BreakVector2D_X5) == 0x000058, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_BreakVector2D_X5' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_BreakVector2D_Y5) == 0x00005C, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_BreakVector2D_Y5' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_BreakVector2D_X6) == 0x000060, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_BreakVector2D_X6' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_BreakVector2D_Y6) == 0x000064, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_BreakVector2D_Y6' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_Ease_ReturnValue4) == 0x000068, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_Ease_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_Ease_ReturnValue5) == 0x00006C, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_Ease_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_Ease_ReturnValue6) == 0x000070, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_Ease_ReturnValue6' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_Ease_ReturnValue7) == 0x000074, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_Ease_ReturnValue7' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_MakeVector2D_ReturnValue2) == 0x000078, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_MakeVector2D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_MakeVector2D_ReturnValue3) == 0x000080, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_MakeVector2D_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, K2Node_MakeStruct_Anchors) == 0x000088, "Member 'Rewards_ItemCard_C_TickSlideAnimation::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_Ease_ReturnValue8) == 0x000098, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_Ease_ReturnValue8' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, K2Node_MakeStruct_Margin) == 0x00009C, "Member 'Rewards_ItemCard_C_TickSlideAnimation::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_Ease_ReturnValue9) == 0x0000AC, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_Ease_ReturnValue9' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_MakeVector2D_ReturnValue4) == 0x0000B0, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_MakeVector2D_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_BreakVector2D_X7) == 0x0000B8, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_BreakVector2D_X7' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_BreakVector2D_Y7) == 0x0000BC, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_BreakVector2D_Y7' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, K2Node_MakeStruct_WidgetTransform) == 0x0000C0, "Member 'Rewards_ItemCard_C_TickSlideAnimation::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_BreakVector2D_X8) == 0x0000DC, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_BreakVector2D_X8' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_BreakVector2D_Y8) == 0x0000E0, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_BreakVector2D_Y8' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000E4, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_Ease_ReturnValue10) == 0x0000E8, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_Ease_ReturnValue10' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000EC, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_Ease_ReturnValue11) == 0x0000F0, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_Ease_ReturnValue11' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_FMin_ReturnValue) == 0x0000F4, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, CallFunc_MakeVector2D_ReturnValue5) == 0x0000F8, "Member 'Rewards_ItemCard_C_TickSlideAnimation::CallFunc_MakeVector2D_ReturnValue5' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000100, "Member 'Rewards_ItemCard_C_TickSlideAnimation::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickSlideAnimation, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'Rewards_ItemCard_C_TickSlideAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.PlaySlideAnimation
// 0x0098 (0x0098 - 0x0000)
struct Rewards_ItemCard_C_PlaySlideAnimation final
{
public:
	struct FVector2D                              TargetAlignment;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               TargetAnchors;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         TargetScale;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetOffset;                                      // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetAngle;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StaggerDelay;                                      // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TargetTranslation;                                 // 0x002C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                CallFunc_GetOffsets_ReturnValue;                   // 0x0064(0x0010)(NoDestructor)
	struct FAnchors                               CallFunc_GetAnchors_ReturnValue;                   // 0x0074(0x0010)(NoDestructor)
	struct FVector2D                              CallFunc_GetAlignment_ReturnValue;                 // 0x0084(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rewards_ItemCard_C_PlaySlideAnimation) == 0x000008, "Wrong alignment on Rewards_ItemCard_C_PlaySlideAnimation");
static_assert(sizeof(Rewards_ItemCard_C_PlaySlideAnimation) == 0x000098, "Wrong size on Rewards_ItemCard_C_PlaySlideAnimation");
static_assert(offsetof(Rewards_ItemCard_C_PlaySlideAnimation, TargetAlignment) == 0x000000, "Member 'Rewards_ItemCard_C_PlaySlideAnimation::TargetAlignment' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlaySlideAnimation, TargetAnchors) == 0x000008, "Member 'Rewards_ItemCard_C_PlaySlideAnimation::TargetAnchors' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlaySlideAnimation, TargetScale) == 0x000018, "Member 'Rewards_ItemCard_C_PlaySlideAnimation::TargetScale' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlaySlideAnimation, TargetOffset) == 0x00001C, "Member 'Rewards_ItemCard_C_PlaySlideAnimation::TargetOffset' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlaySlideAnimation, TargetAngle) == 0x000020, "Member 'Rewards_ItemCard_C_PlaySlideAnimation::TargetAngle' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlaySlideAnimation, Duration) == 0x000024, "Member 'Rewards_ItemCard_C_PlaySlideAnimation::Duration' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlaySlideAnimation, StaggerDelay) == 0x000028, "Member 'Rewards_ItemCard_C_PlaySlideAnimation::StaggerDelay' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlaySlideAnimation, TargetTranslation) == 0x00002C, "Member 'Rewards_ItemCard_C_PlaySlideAnimation::TargetTranslation' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlaySlideAnimation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000034, "Member 'Rewards_ItemCard_C_PlaySlideAnimation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlaySlideAnimation, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'Rewards_ItemCard_C_PlaySlideAnimation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlaySlideAnimation, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'Rewards_ItemCard_C_PlaySlideAnimation::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlaySlideAnimation, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000050, "Member 'Rewards_ItemCard_C_PlaySlideAnimation::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlaySlideAnimation, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000058, "Member 'Rewards_ItemCard_C_PlaySlideAnimation::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlaySlideAnimation, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'Rewards_ItemCard_C_PlaySlideAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlaySlideAnimation, CallFunc_GetOffsets_ReturnValue) == 0x000064, "Member 'Rewards_ItemCard_C_PlaySlideAnimation::CallFunc_GetOffsets_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlaySlideAnimation, CallFunc_GetAnchors_ReturnValue) == 0x000074, "Member 'Rewards_ItemCard_C_PlaySlideAnimation::CallFunc_GetAnchors_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlaySlideAnimation, CallFunc_GetAlignment_ReturnValue) == 0x000084, "Member 'Rewards_ItemCard_C_PlaySlideAnimation::CallFunc_GetAlignment_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlaySlideAnimation, CallFunc_BreakVector2D_X) == 0x00008C, "Member 'Rewards_ItemCard_C_PlaySlideAnimation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlaySlideAnimation, CallFunc_BreakVector2D_Y) == 0x000090, "Member 'Rewards_ItemCard_C_PlaySlideAnimation::CallFunc_BreakVector2D_Y' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.StartSlideAnimation
// 0x0020 (0x0020 - 0x0000)
struct Rewards_ItemCard_C_StartSlideAnimation final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor)
};
static_assert(alignof(Rewards_ItemCard_C_StartSlideAnimation) == 0x000008, "Wrong alignment on Rewards_ItemCard_C_StartSlideAnimation");
static_assert(sizeof(Rewards_ItemCard_C_StartSlideAnimation) == 0x000020, "Wrong size on Rewards_ItemCard_C_StartSlideAnimation");
static_assert(offsetof(Rewards_ItemCard_C_StartSlideAnimation, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Rewards_ItemCard_C_StartSlideAnimation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_StartSlideAnimation, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000010, "Member 'Rewards_ItemCard_C_StartSlideAnimation::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_StartSlideAnimation, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'Rewards_ItemCard_C_StartSlideAnimation::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.PlayScaleAnimation
// 0x0038 (0x0038 - 0x0000)
struct Rewards_ItemCard_C_PlayScaleAnimation final
{
public:
	float                                         TargetScale;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DropShadowDepth;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDropShadowDepth_DropShadowDepth;       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rewards_ItemCard_C_PlayScaleAnimation) == 0x000008, "Wrong alignment on Rewards_ItemCard_C_PlayScaleAnimation");
static_assert(sizeof(Rewards_ItemCard_C_PlayScaleAnimation) == 0x000038, "Wrong size on Rewards_ItemCard_C_PlayScaleAnimation");
static_assert(offsetof(Rewards_ItemCard_C_PlayScaleAnimation, TargetScale) == 0x000000, "Member 'Rewards_ItemCard_C_PlayScaleAnimation::TargetScale' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlayScaleAnimation, Duration) == 0x000004, "Member 'Rewards_ItemCard_C_PlayScaleAnimation::Duration' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlayScaleAnimation, DropShadowDepth) == 0x000008, "Member 'Rewards_ItemCard_C_PlayScaleAnimation::DropShadowDepth' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlayScaleAnimation, CallFunc_GetDropShadowDepth_DropShadowDepth) == 0x00000C, "Member 'Rewards_ItemCard_C_PlayScaleAnimation::CallFunc_GetDropShadowDepth_DropShadowDepth' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlayScaleAnimation, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Rewards_ItemCard_C_PlayScaleAnimation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlayScaleAnimation, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000020, "Member 'Rewards_ItemCard_C_PlayScaleAnimation::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlayScaleAnimation, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'Rewards_ItemCard_C_PlayScaleAnimation::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlayScaleAnimation, CallFunc_BreakVector2D_X) == 0x000030, "Member 'Rewards_ItemCard_C_PlayScaleAnimation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_PlayScaleAnimation, CallFunc_BreakVector2D_Y) == 0x000034, "Member 'Rewards_ItemCard_C_PlayScaleAnimation::CallFunc_BreakVector2D_Y' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.TickScaleAnimation
// 0x0044 (0x0044 - 0x0000)
struct Rewards_ItemCard_C_TickScaleAnimation final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue2;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0028(0x001C)(NoDestructor)
};
static_assert(alignof(Rewards_ItemCard_C_TickScaleAnimation) == 0x000004, "Wrong alignment on Rewards_ItemCard_C_TickScaleAnimation");
static_assert(sizeof(Rewards_ItemCard_C_TickScaleAnimation) == 0x000044, "Wrong size on Rewards_ItemCard_C_TickScaleAnimation");
static_assert(offsetof(Rewards_ItemCard_C_TickScaleAnimation, Alpha) == 0x000000, "Member 'Rewards_ItemCard_C_TickScaleAnimation::Alpha' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickScaleAnimation, CallFunc_Ease_ReturnValue) == 0x000004, "Member 'Rewards_ItemCard_C_TickScaleAnimation::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickScaleAnimation, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'Rewards_ItemCard_C_TickScaleAnimation::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickScaleAnimation, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x00000C, "Member 'Rewards_ItemCard_C_TickScaleAnimation::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickScaleAnimation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'Rewards_ItemCard_C_TickScaleAnimation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickScaleAnimation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'Rewards_ItemCard_C_TickScaleAnimation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickScaleAnimation, CallFunc_FMin_ReturnValue) == 0x000018, "Member 'Rewards_ItemCard_C_TickScaleAnimation::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickScaleAnimation, CallFunc_Ease_ReturnValue2) == 0x00001C, "Member 'Rewards_ItemCard_C_TickScaleAnimation::CallFunc_Ease_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickScaleAnimation, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'Rewards_ItemCard_C_TickScaleAnimation::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickScaleAnimation, K2Node_MakeStruct_WidgetTransform) == 0x000028, "Member 'Rewards_ItemCard_C_TickScaleAnimation::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.SetInspectAction
// 0x0010 (0x0010 - 0x0000)
struct Rewards_ItemCard_C_SetInspectAction final
{
public:
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0000(0x0010)(NoDestructor)
};
static_assert(alignof(Rewards_ItemCard_C_SetInspectAction) == 0x000008, "Wrong alignment on Rewards_ItemCard_C_SetInspectAction");
static_assert(sizeof(Rewards_ItemCard_C_SetInspectAction) == 0x000010, "Wrong size on Rewards_ItemCard_C_SetInspectAction");
static_assert(offsetof(Rewards_ItemCard_C_SetInspectAction, K2Node_MakeStruct_DataTableRowHandle) == 0x000000, "Member 'Rewards_ItemCard_C_SetInspectAction::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.GetItemToRepresent
// 0x0008 (0x0008 - 0x0000)
struct Rewards_ItemCard_C_GetItemToRepresent final
{
public:
	class UFortItem*                              Param_ItemToRepresent;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rewards_ItemCard_C_GetItemToRepresent) == 0x000008, "Wrong alignment on Rewards_ItemCard_C_GetItemToRepresent");
static_assert(sizeof(Rewards_ItemCard_C_GetItemToRepresent) == 0x000008, "Wrong size on Rewards_ItemCard_C_GetItemToRepresent");
static_assert(offsetof(Rewards_ItemCard_C_GetItemToRepresent, Param_ItemToRepresent) == 0x000000, "Member 'Rewards_ItemCard_C_GetItemToRepresent::Param_ItemToRepresent' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.GetCardSize
// 0x0014 (0x0014 - 0x0000)
struct Rewards_ItemCard_C_GetCardSize final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldUseNewItemCards_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortItemCardSize                             CallFunc_GetCardSize_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetCardDimensions_ReturnValue;            // 0x000C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rewards_ItemCard_C_GetCardSize) == 0x000004, "Wrong alignment on Rewards_ItemCard_C_GetCardSize");
static_assert(sizeof(Rewards_ItemCard_C_GetCardSize) == 0x000014, "Wrong size on Rewards_ItemCard_C_GetCardSize");
static_assert(offsetof(Rewards_ItemCard_C_GetCardSize, ReturnValue) == 0x000000, "Member 'Rewards_ItemCard_C_GetCardSize::ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_GetCardSize, CallFunc_ShouldUseNewItemCards_ReturnValue) == 0x000008, "Member 'Rewards_ItemCard_C_GetCardSize::CallFunc_ShouldUseNewItemCards_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_GetCardSize, CallFunc_GetCardSize_ReturnValue) == 0x000009, "Member 'Rewards_ItemCard_C_GetCardSize::CallFunc_GetCardSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_GetCardSize, CallFunc_GetCardDimensions_ReturnValue) == 0x00000C, "Member 'Rewards_ItemCard_C_GetCardSize::CallFunc_GetCardDimensions_ReturnValue' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.SizeDown
// 0x0090 (0x0090 - 0x0000)
struct Rewards_ItemCard_C_SizeDown final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delay;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DropShadowDepth;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldUseNewItemCards_ReturnValue;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldUseNewItemCards_ReturnValue2;       // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldUseNewItemCards_ReturnValue3;       // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortItemCardSize                             CallFunc_GetCardSize_ReturnValue;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemCardSize                             CallFunc_GetCardSize_ReturnValue2;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetCardDimensions_ReturnValue;            // 0x0014(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemCardSize                             CallFunc_GetCardSize_ReturnValue3;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCardDimensions_ReturnValue2;           // 0x0028(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X2;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y2;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemCardSize                             CallFunc_GetCardSize_ReturnValue4;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetCardDimensions_ReturnValue3;           // 0x003C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X3;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y3;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDropShadowDepth_DropShadowDepth;       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0068(0x0008)(NoDestructor)
	bool                                          CallFunc_ShouldUseNewItemCards_ReturnValue4;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetCardDimensions_ReturnValue4;           // 0x0074(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X4;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y4;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Rewards_ItemCard_C_SizeDown) == 0x000008, "Wrong alignment on Rewards_ItemCard_C_SizeDown");
static_assert(sizeof(Rewards_ItemCard_C_SizeDown) == 0x000090, "Wrong size on Rewards_ItemCard_C_SizeDown");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, Duration) == 0x000000, "Member 'Rewards_ItemCard_C_SizeDown::Duration' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, Delay) == 0x000004, "Member 'Rewards_ItemCard_C_SizeDown::Delay' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, DropShadowDepth) == 0x000008, "Member 'Rewards_ItemCard_C_SizeDown::DropShadowDepth' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_ShouldUseNewItemCards_ReturnValue) == 0x00000C, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_ShouldUseNewItemCards_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_ShouldUseNewItemCards_ReturnValue2) == 0x00000D, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_ShouldUseNewItemCards_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_ShouldUseNewItemCards_ReturnValue3) == 0x00000E, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_ShouldUseNewItemCards_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_GetCardSize_ReturnValue) == 0x00000F, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_GetCardSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_GetCardSize_ReturnValue2) == 0x000010, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_GetCardSize_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_GetCardDimensions_ReturnValue) == 0x000014, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_GetCardDimensions_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_GetCardSize_ReturnValue3) == 0x00001C, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_GetCardSize_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_BreakVector2D_X) == 0x000020, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_GetCardDimensions_ReturnValue2) == 0x000028, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_GetCardDimensions_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_BreakVector2D_X2) == 0x000030, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_BreakVector2D_X2' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_BreakVector2D_Y2) == 0x000034, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_BreakVector2D_Y2' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_GetCardSize_ReturnValue4) == 0x000038, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_GetCardSize_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_GetCardDimensions_ReturnValue3) == 0x00003C, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_GetCardDimensions_ReturnValue3' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_BreakVector2D_X3) == 0x000044, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_BreakVector2D_X3' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_BreakVector2D_Y3) == 0x000048, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_BreakVector2D_Y3' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_GetDropShadowDepth_DropShadowDepth) == 0x00004C, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_GetDropShadowDepth_DropShadowDepth' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000050, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000054, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'Rewards_ItemCard_C_SizeDown::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000068, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_ShouldUseNewItemCards_ReturnValue4) == 0x000070, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_ShouldUseNewItemCards_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_GetCardDimensions_ReturnValue4) == 0x000074, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_GetCardDimensions_ReturnValue4' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_BreakVector2D_X4) == 0x00007C, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_BreakVector2D_X4' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_BreakVector2D_Y4) == 0x000080, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_BreakVector2D_Y4' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x000084, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000088, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_Not_PreBool_ReturnValue) == 0x000089, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00008A, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeDown, CallFunc_BooleanAND_ReturnValue) == 0x00008B, "Member 'Rewards_ItemCard_C_SizeDown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.TickResizeAnimation
// 0x0040 (0x0040 - 0x0000)
struct Rewards_ItemCard_C_TickResizeAnimation final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemCardSize                             CallFunc_GetCardSize_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Ease_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldUseNewItemCards_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Ease_ReturnValue2;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCardDimensions_ReturnValue;            // 0x0028(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0030(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rewards_ItemCard_C_TickResizeAnimation) == 0x000004, "Wrong alignment on Rewards_ItemCard_C_TickResizeAnimation");
static_assert(sizeof(Rewards_ItemCard_C_TickResizeAnimation) == 0x000040, "Wrong size on Rewards_ItemCard_C_TickResizeAnimation");
static_assert(offsetof(Rewards_ItemCard_C_TickResizeAnimation, Alpha) == 0x000000, "Member 'Rewards_ItemCard_C_TickResizeAnimation::Alpha' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickResizeAnimation, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000004, "Member 'Rewards_ItemCard_C_TickResizeAnimation::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickResizeAnimation, CallFunc_GetCardSize_ReturnValue) == 0x000008, "Member 'Rewards_ItemCard_C_TickResizeAnimation::CallFunc_GetCardSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickResizeAnimation, CallFunc_Ease_ReturnValue) == 0x00000C, "Member 'Rewards_ItemCard_C_TickResizeAnimation::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickResizeAnimation, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'Rewards_ItemCard_C_TickResizeAnimation::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickResizeAnimation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'Rewards_ItemCard_C_TickResizeAnimation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickResizeAnimation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'Rewards_ItemCard_C_TickResizeAnimation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickResizeAnimation, CallFunc_FMin_ReturnValue) == 0x00001C, "Member 'Rewards_ItemCard_C_TickResizeAnimation::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickResizeAnimation, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'Rewards_ItemCard_C_TickResizeAnimation::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickResizeAnimation, CallFunc_ShouldUseNewItemCards_ReturnValue) == 0x000021, "Member 'Rewards_ItemCard_C_TickResizeAnimation::CallFunc_ShouldUseNewItemCards_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickResizeAnimation, CallFunc_Ease_ReturnValue2) == 0x000024, "Member 'Rewards_ItemCard_C_TickResizeAnimation::CallFunc_Ease_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickResizeAnimation, CallFunc_GetCardDimensions_ReturnValue) == 0x000028, "Member 'Rewards_ItemCard_C_TickResizeAnimation::CallFunc_GetCardDimensions_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickResizeAnimation, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000030, "Member 'Rewards_ItemCard_C_TickResizeAnimation::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickResizeAnimation, CallFunc_BreakVector2D_X) == 0x000038, "Member 'Rewards_ItemCard_C_TickResizeAnimation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_TickResizeAnimation, CallFunc_BreakVector2D_Y) == 0x00003C, "Member 'Rewards_ItemCard_C_TickResizeAnimation::CallFunc_BreakVector2D_Y' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.SizeUp
// 0x0060 (0x0060 - 0x0000)
struct Rewards_ItemCard_C_SizeUp final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delay;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DropShadowDepth;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldUseNewItemCards_ReturnValue;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldUseNewItemCards_ReturnValue2;       // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortItemCardSize                             CallFunc_GetCardSize_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemCardSize                             CallFunc_GetCardSize_ReturnValue2;                 // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCardDimensions_ReturnValue;            // 0x0010(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetCardDimensions_ReturnValue2;           // 0x0018(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X2;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y2;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDropShadowDepth_DropShadowDepth;       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0050(0x0008)(NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Rewards_ItemCard_C_SizeUp) == 0x000008, "Wrong alignment on Rewards_ItemCard_C_SizeUp");
static_assert(sizeof(Rewards_ItemCard_C_SizeUp) == 0x000060, "Wrong size on Rewards_ItemCard_C_SizeUp");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, Duration) == 0x000000, "Member 'Rewards_ItemCard_C_SizeUp::Duration' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, Delay) == 0x000004, "Member 'Rewards_ItemCard_C_SizeUp::Delay' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, DropShadowDepth) == 0x000008, "Member 'Rewards_ItemCard_C_SizeUp::DropShadowDepth' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, CallFunc_ShouldUseNewItemCards_ReturnValue) == 0x00000C, "Member 'Rewards_ItemCard_C_SizeUp::CallFunc_ShouldUseNewItemCards_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, CallFunc_ShouldUseNewItemCards_ReturnValue2) == 0x00000D, "Member 'Rewards_ItemCard_C_SizeUp::CallFunc_ShouldUseNewItemCards_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, CallFunc_GetCardSize_ReturnValue) == 0x00000E, "Member 'Rewards_ItemCard_C_SizeUp::CallFunc_GetCardSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, CallFunc_GetCardSize_ReturnValue2) == 0x00000F, "Member 'Rewards_ItemCard_C_SizeUp::CallFunc_GetCardSize_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, CallFunc_GetCardDimensions_ReturnValue) == 0x000010, "Member 'Rewards_ItemCard_C_SizeUp::CallFunc_GetCardDimensions_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, CallFunc_GetCardDimensions_ReturnValue2) == 0x000018, "Member 'Rewards_ItemCard_C_SizeUp::CallFunc_GetCardDimensions_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, CallFunc_BreakVector2D_X) == 0x000020, "Member 'Rewards_ItemCard_C_SizeUp::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'Rewards_ItemCard_C_SizeUp::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, CallFunc_BreakVector2D_X2) == 0x000028, "Member 'Rewards_ItemCard_C_SizeUp::CallFunc_BreakVector2D_X2' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, CallFunc_BreakVector2D_Y2) == 0x00002C, "Member 'Rewards_ItemCard_C_SizeUp::CallFunc_BreakVector2D_Y2' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'Rewards_ItemCard_C_SizeUp::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, CallFunc_GetDropShadowDepth_DropShadowDepth) == 0x000034, "Member 'Rewards_ItemCard_C_SizeUp::CallFunc_GetDropShadowDepth_DropShadowDepth' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'Rewards_ItemCard_C_SizeUp::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000048, "Member 'Rewards_ItemCard_C_SizeUp::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000050, "Member 'Rewards_ItemCard_C_SizeUp::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000058, "Member 'Rewards_ItemCard_C_SizeUp::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, CallFunc_Not_PreBool_ReturnValue) == 0x000059, "Member 'Rewards_ItemCard_C_SizeUp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00005A, "Member 'Rewards_ItemCard_C_SizeUp::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SizeUp, CallFunc_BooleanAND_ReturnValue) == 0x00005B, "Member 'Rewards_ItemCard_C_SizeUp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.StartResizeAnimation
// 0x0020 (0x0020 - 0x0000)
struct Rewards_ItemCard_C_StartResizeAnimation final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor)
};
static_assert(alignof(Rewards_ItemCard_C_StartResizeAnimation) == 0x000008, "Wrong alignment on Rewards_ItemCard_C_StartResizeAnimation");
static_assert(sizeof(Rewards_ItemCard_C_StartResizeAnimation) == 0x000020, "Wrong size on Rewards_ItemCard_C_StartResizeAnimation");
static_assert(offsetof(Rewards_ItemCard_C_StartResizeAnimation, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'Rewards_ItemCard_C_StartResizeAnimation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_StartResizeAnimation, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000010, "Member 'Rewards_ItemCard_C_StartResizeAnimation::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_StartResizeAnimation, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'Rewards_ItemCard_C_StartResizeAnimation::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.ShowDropShadow
// 0x0004 (0x0004 - 0x0000)
struct Rewards_ItemCard_C_ShowDropShadow final
{
public:
	float                                         ShadowDepth;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rewards_ItemCard_C_ShowDropShadow) == 0x000004, "Wrong alignment on Rewards_ItemCard_C_ShowDropShadow");
static_assert(sizeof(Rewards_ItemCard_C_ShowDropShadow) == 0x000004, "Wrong size on Rewards_ItemCard_C_ShowDropShadow");
static_assert(offsetof(Rewards_ItemCard_C_ShowDropShadow, ShadowDepth) == 0x000000, "Member 'Rewards_ItemCard_C_ShowDropShadow::ShadowDepth' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.SetDropShadowDepth
// 0x0010 (0x0010 - 0x0000)
struct Rewards_ItemCard_C_SetDropShadowDepth final
{
public:
	float                                         ShadowDepth;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0008(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rewards_ItemCard_C_SetDropShadowDepth) == 0x000004, "Wrong alignment on Rewards_ItemCard_C_SetDropShadowDepth");
static_assert(sizeof(Rewards_ItemCard_C_SetDropShadowDepth) == 0x000010, "Wrong size on Rewards_ItemCard_C_SetDropShadowDepth");
static_assert(offsetof(Rewards_ItemCard_C_SetDropShadowDepth, ShadowDepth) == 0x000000, "Member 'Rewards_ItemCard_C_SetDropShadowDepth::ShadowDepth' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SetDropShadowDepth, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'Rewards_ItemCard_C_SetDropShadowDepth::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SetDropShadowDepth, CallFunc_MakeVector2D_ReturnValue) == 0x000008, "Member 'Rewards_ItemCard_C_SetDropShadowDepth::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.SetDropShadowSize
// 0x0024 (0x0024 - 0x0000)
struct Rewards_ItemCard_C_SetDropShadowSize final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldUseNewItemCards_ReturnValue;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemCardSize                             CallFunc_GetCardSize_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetCardDimensions_ReturnValue;            // 0x0010(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rewards_ItemCard_C_SetDropShadowSize) == 0x000004, "Wrong alignment on Rewards_ItemCard_C_SetDropShadowSize");
static_assert(sizeof(Rewards_ItemCard_C_SetDropShadowSize) == 0x000024, "Wrong size on Rewards_ItemCard_C_SetDropShadowSize");
static_assert(offsetof(Rewards_ItemCard_C_SetDropShadowSize, Scale) == 0x000000, "Member 'Rewards_ItemCard_C_SetDropShadowSize::Scale' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SetDropShadowSize, CallFunc_ShouldUseNewItemCards_ReturnValue) == 0x000004, "Member 'Rewards_ItemCard_C_SetDropShadowSize::CallFunc_ShouldUseNewItemCards_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SetDropShadowSize, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'Rewards_ItemCard_C_SetDropShadowSize::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SetDropShadowSize, CallFunc_GetCardSize_ReturnValue) == 0x00000C, "Member 'Rewards_ItemCard_C_SetDropShadowSize::CallFunc_GetCardSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SetDropShadowSize, CallFunc_GetCardDimensions_ReturnValue) == 0x000010, "Member 'Rewards_ItemCard_C_SetDropShadowSize::CallFunc_GetCardDimensions_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SetDropShadowSize, CallFunc_BreakVector2D_X) == 0x000018, "Member 'Rewards_ItemCard_C_SetDropShadowSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SetDropShadowSize, CallFunc_BreakVector2D_Y) == 0x00001C, "Member 'Rewards_ItemCard_C_SetDropShadowSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SetDropShadowSize, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'Rewards_ItemCard_C_SetDropShadowSize::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.InitDropShadow
// 0x0020 (0x0020 - 0x0000)
struct Rewards_ItemCard_C_InitDropShadow final
{
public:
	bool                                          CallFunc_ShouldUseNewItemCards_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetCardDimensions_ReturnValue;            // 0x0004(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rewards_ItemCard_C_InitDropShadow) == 0x000004, "Wrong alignment on Rewards_ItemCard_C_InitDropShadow");
static_assert(sizeof(Rewards_ItemCard_C_InitDropShadow) == 0x000020, "Wrong size on Rewards_ItemCard_C_InitDropShadow");
static_assert(offsetof(Rewards_ItemCard_C_InitDropShadow, CallFunc_ShouldUseNewItemCards_ReturnValue) == 0x000000, "Member 'Rewards_ItemCard_C_InitDropShadow::CallFunc_ShouldUseNewItemCards_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_InitDropShadow, CallFunc_GetCardDimensions_ReturnValue) == 0x000004, "Member 'Rewards_ItemCard_C_InitDropShadow::CallFunc_GetCardDimensions_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_InitDropShadow, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'Rewards_ItemCard_C_InitDropShadow::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_InitDropShadow, CallFunc_BreakVector2D_X) == 0x000010, "Member 'Rewards_ItemCard_C_InitDropShadow::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_InitDropShadow, CallFunc_BreakVector2D_Y) == 0x000014, "Member 'Rewards_ItemCard_C_InitDropShadow::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_InitDropShadow, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'Rewards_ItemCard_C_InitDropShadow::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_InitDropShadow, CallFunc_Add_FloatFloat_ReturnValue2) == 0x00001C, "Member 'Rewards_ItemCard_C_InitDropShadow::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.GetDropShadowDepth
// 0x000C (0x000C - 0x0000)
struct Rewards_ItemCard_C_GetDropShadowDepth final
{
public:
	float                                         DropShadowDepth;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rewards_ItemCard_C_GetDropShadowDepth) == 0x000004, "Wrong alignment on Rewards_ItemCard_C_GetDropShadowDepth");
static_assert(sizeof(Rewards_ItemCard_C_GetDropShadowDepth) == 0x00000C, "Wrong size on Rewards_ItemCard_C_GetDropShadowDepth");
static_assert(offsetof(Rewards_ItemCard_C_GetDropShadowDepth, DropShadowDepth) == 0x000000, "Member 'Rewards_ItemCard_C_GetDropShadowDepth::DropShadowDepth' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_GetDropShadowDepth, CallFunc_BreakVector2D_X) == 0x000004, "Member 'Rewards_ItemCard_C_GetDropShadowDepth::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_GetDropShadowDepth, CallFunc_BreakVector2D_Y) == 0x000008, "Member 'Rewards_ItemCard_C_GetDropShadowDepth::CallFunc_BreakVector2D_Y' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.SetOutpostInventoryNotification
// 0x0005 (0x0005 - 0x0000)
struct Rewards_ItemCard_C_SetOutpostInventoryNotification final
{
public:
	bool                                          ShouldShow;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rewards_ItemCard_C_SetOutpostInventoryNotification) == 0x000001, "Wrong alignment on Rewards_ItemCard_C_SetOutpostInventoryNotification");
static_assert(sizeof(Rewards_ItemCard_C_SetOutpostInventoryNotification) == 0x000005, "Wrong size on Rewards_ItemCard_C_SetOutpostInventoryNotification");
static_assert(offsetof(Rewards_ItemCard_C_SetOutpostInventoryNotification, ShouldShow) == 0x000000, "Member 'Rewards_ItemCard_C_SetOutpostInventoryNotification::ShouldShow' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SetOutpostInventoryNotification, Temp_bool_Variable) == 0x000001, "Member 'Rewards_ItemCard_C_SetOutpostInventoryNotification::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SetOutpostInventoryNotification, Temp_byte_Variable) == 0x000002, "Member 'Rewards_ItemCard_C_SetOutpostInventoryNotification::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SetOutpostInventoryNotification, Temp_byte_Variable2) == 0x000003, "Member 'Rewards_ItemCard_C_SetOutpostInventoryNotification::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(Rewards_ItemCard_C_SetOutpostInventoryNotification, K2Node_Select_Default) == 0x000004, "Member 'Rewards_ItemCard_C_SetOutpostInventoryNotification::K2Node_Select_Default' has a wrong offset!");

// Function Rewards_ItemCard.Rewards_ItemCard_C.SetQuantityOverride
// 0x0004 (0x0004 - 0x0000)
struct Rewards_ItemCard_C_SetQuantityOverride final
{
public:
	int32                                         QuantityOverride;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Rewards_ItemCard_C_SetQuantityOverride) == 0x000004, "Wrong alignment on Rewards_ItemCard_C_SetQuantityOverride");
static_assert(sizeof(Rewards_ItemCard_C_SetQuantityOverride) == 0x000004, "Wrong size on Rewards_ItemCard_C_SetQuantityOverride");
static_assert(offsetof(Rewards_ItemCard_C_SetQuantityOverride, QuantityOverride) == 0x000000, "Member 'Rewards_ItemCard_C_SetQuantityOverride::QuantityOverride' has a wrong offset!");

}

