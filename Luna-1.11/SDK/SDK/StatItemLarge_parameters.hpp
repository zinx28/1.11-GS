#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StatItemLarge

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function StatItemLarge.StatItemLarge_C.ExecuteUbergraph_StatItemLarge
// 0x000C (0x000C - 0x0000)
struct StatItemLarge_C_ExecuteUbergraph_StatItemLarge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Delta;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StatItemLarge_C_ExecuteUbergraph_StatItemLarge) == 0x000004, "Wrong alignment on StatItemLarge_C_ExecuteUbergraph_StatItemLarge");
static_assert(sizeof(StatItemLarge_C_ExecuteUbergraph_StatItemLarge) == 0x00000C, "Wrong size on StatItemLarge_C_ExecuteUbergraph_StatItemLarge");
static_assert(offsetof(StatItemLarge_C_ExecuteUbergraph_StatItemLarge, EntryPoint) == 0x000000, "Member 'StatItemLarge_C_ExecuteUbergraph_StatItemLarge::EntryPoint' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_ExecuteUbergraph_StatItemLarge, K2Node_Event_Delta) == 0x000004, "Member 'StatItemLarge_C_ExecuteUbergraph_StatItemLarge::K2Node_Event_Delta' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_ExecuteUbergraph_StatItemLarge, K2Node_Event_IsDesignTime) == 0x000008, "Member 'StatItemLarge_C_ExecuteUbergraph_StatItemLarge::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function StatItemLarge.StatItemLarge_C.ValueChanged
// 0x0004 (0x0004 - 0x0000)
struct StatItemLarge_C_ValueChanged final
{
public:
	float                                         Delta;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StatItemLarge_C_ValueChanged) == 0x000004, "Wrong alignment on StatItemLarge_C_ValueChanged");
static_assert(sizeof(StatItemLarge_C_ValueChanged) == 0x000004, "Wrong size on StatItemLarge_C_ValueChanged");
static_assert(offsetof(StatItemLarge_C_ValueChanged, Delta) == 0x000000, "Member 'StatItemLarge_C_ValueChanged::Delta' has a wrong offset!");

// Function StatItemLarge.StatItemLarge_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct StatItemLarge_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StatItemLarge_C_PreConstruct) == 0x000001, "Wrong alignment on StatItemLarge_C_PreConstruct");
static_assert(sizeof(StatItemLarge_C_PreConstruct) == 0x000001, "Wrong size on StatItemLarge_C_PreConstruct");
static_assert(offsetof(StatItemLarge_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'StatItemLarge_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function StatItemLarge.StatItemLarge_C.GetLocalPlayerId
// 0x0068 (0x0068 - 0x0000)
struct StatItemLarge_C_GetLocalPlayerId final
{
public:
	struct FUniqueNetIdRepl                       LocalPlayerNetId;                                  // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerState*                       K2Node_DynamicCast_AsFort_Player_State;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       CallFunc_GetUniqueID_ReturnValue;                  // 0x0040(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(StatItemLarge_C_GetLocalPlayerId) == 0x000008, "Wrong alignment on StatItemLarge_C_GetLocalPlayerId");
static_assert(sizeof(StatItemLarge_C_GetLocalPlayerId) == 0x000068, "Wrong size on StatItemLarge_C_GetLocalPlayerId");
static_assert(offsetof(StatItemLarge_C_GetLocalPlayerId, LocalPlayerNetId) == 0x000000, "Member 'StatItemLarge_C_GetLocalPlayerId::LocalPlayerNetId' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_GetLocalPlayerId, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'StatItemLarge_C_GetLocalPlayerId::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_GetLocalPlayerId, K2Node_DynamicCast_AsFort_Player_State) == 0x000030, "Member 'StatItemLarge_C_GetLocalPlayerId::K2Node_DynamicCast_AsFort_Player_State' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_GetLocalPlayerId, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'StatItemLarge_C_GetLocalPlayerId::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_GetLocalPlayerId, CallFunc_GetUniqueID_ReturnValue) == 0x000040, "Member 'StatItemLarge_C_GetLocalPlayerId::CallFunc_GetUniqueID_ReturnValue' has a wrong offset!");

// Function StatItemLarge.StatItemLarge_C.UpdateDisplayData
// 0x0098 (0x0098 - 0x0000)
struct StatItemLarge_C_UpdateDisplayData final
{
public:
	EFortStatValueDisplayType                     DisplayState;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuffState                                BuffState;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NewValue;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   DisplayName;                                       // 0x0008(0x0018)(Edit, BlueprintVisible)
	float                                         CurrentValue;                                      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortDisplayAttribute                  CallFunc_GetCurrentAttributeCopy_OutDisplayAttribute; // 0x0028(0x0070)()
};
static_assert(alignof(StatItemLarge_C_UpdateDisplayData) == 0x000008, "Wrong alignment on StatItemLarge_C_UpdateDisplayData");
static_assert(sizeof(StatItemLarge_C_UpdateDisplayData) == 0x000098, "Wrong size on StatItemLarge_C_UpdateDisplayData");
static_assert(offsetof(StatItemLarge_C_UpdateDisplayData, DisplayState) == 0x000000, "Member 'StatItemLarge_C_UpdateDisplayData::DisplayState' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateDisplayData, BuffState) == 0x000001, "Member 'StatItemLarge_C_UpdateDisplayData::BuffState' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateDisplayData, NewValue) == 0x000004, "Member 'StatItemLarge_C_UpdateDisplayData::NewValue' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateDisplayData, DisplayName) == 0x000008, "Member 'StatItemLarge_C_UpdateDisplayData::DisplayName' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateDisplayData, CurrentValue) == 0x000020, "Member 'StatItemLarge_C_UpdateDisplayData::CurrentValue' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateDisplayData, CallFunc_GetCurrentAttributeCopy_OutDisplayAttribute) == 0x000028, "Member 'StatItemLarge_C_UpdateDisplayData::CallFunc_GetCurrentAttributeCopy_OutDisplayAttribute' has a wrong offset!");

// Function StatItemLarge.StatItemLarge_C.UpdateValue
// 0x00A8 (0x00A8 - 0x0000)
struct StatItemLarge_C_UpdateValue final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentValue;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortStatValueDisplayType                     DisplayType;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuffState                                BuffState;                                         // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           BuffColor;                                         // 0x000C(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BaseColor;                                         // 0x001C(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortStatValueDisplayType                     LocalDisplayType;                                  // 0x002C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuffState                                LocalBuffState;                                    // 0x002D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LocalCurrentValue;                                 // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalNewValue;                                     // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuffState                                Temp_byte_Variable4;                               // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable;                              // 0x003C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Base___Buff_Colors_Base;              // 0x0044(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Base___Buff_Colors_Buff;              // 0x0054(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable2;                             // 0x0064(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable3;                             // 0x006C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuffState                                Temp_byte_Variable5;                               // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable4;                             // 0x0078(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0088(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select2_Default;                            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuffState                                Temp_byte_Variable6;                               // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93[0x1];                                       // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select3_Default;                            // 0x0094(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StatItemLarge_C_UpdateValue) == 0x000004, "Wrong alignment on StatItemLarge_C_UpdateValue");
static_assert(sizeof(StatItemLarge_C_UpdateValue) == 0x0000A8, "Wrong size on StatItemLarge_C_UpdateValue");
static_assert(offsetof(StatItemLarge_C_UpdateValue, NewValue) == 0x000000, "Member 'StatItemLarge_C_UpdateValue::NewValue' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, CurrentValue) == 0x000004, "Member 'StatItemLarge_C_UpdateValue::CurrentValue' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, DisplayType) == 0x000008, "Member 'StatItemLarge_C_UpdateValue::DisplayType' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, BuffState) == 0x000009, "Member 'StatItemLarge_C_UpdateValue::BuffState' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, BuffColor) == 0x00000C, "Member 'StatItemLarge_C_UpdateValue::BuffColor' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, BaseColor) == 0x00001C, "Member 'StatItemLarge_C_UpdateValue::BaseColor' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, LocalDisplayType) == 0x00002C, "Member 'StatItemLarge_C_UpdateValue::LocalDisplayType' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, LocalBuffState) == 0x00002D, "Member 'StatItemLarge_C_UpdateValue::LocalBuffState' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, LocalCurrentValue) == 0x000030, "Member 'StatItemLarge_C_UpdateValue::LocalCurrentValue' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, LocalNewValue) == 0x000034, "Member 'StatItemLarge_C_UpdateValue::LocalNewValue' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, Temp_byte_Variable) == 0x000038, "Member 'StatItemLarge_C_UpdateValue::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, Temp_byte_Variable2) == 0x000039, "Member 'StatItemLarge_C_UpdateValue::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, Temp_byte_Variable3) == 0x00003A, "Member 'StatItemLarge_C_UpdateValue::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, Temp_byte_Variable4) == 0x00003B, "Member 'StatItemLarge_C_UpdateValue::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, Temp_struct_Variable) == 0x00003C, "Member 'StatItemLarge_C_UpdateValue::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, CallFunc_Get_Base___Buff_Colors_Base) == 0x000044, "Member 'StatItemLarge_C_UpdateValue::CallFunc_Get_Base___Buff_Colors_Base' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, CallFunc_Get_Base___Buff_Colors_Buff) == 0x000054, "Member 'StatItemLarge_C_UpdateValue::CallFunc_Get_Base___Buff_Colors_Buff' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, Temp_struct_Variable2) == 0x000064, "Member 'StatItemLarge_C_UpdateValue::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, Temp_struct_Variable3) == 0x00006C, "Member 'StatItemLarge_C_UpdateValue::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, Temp_byte_Variable5) == 0x000074, "Member 'StatItemLarge_C_UpdateValue::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, Temp_struct_Variable4) == 0x000078, "Member 'StatItemLarge_C_UpdateValue::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, K2Node_Select_Default) == 0x000088, "Member 'StatItemLarge_C_UpdateValue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, K2Node_Select2_Default) == 0x000090, "Member 'StatItemLarge_C_UpdateValue::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, Temp_byte_Variable6) == 0x000091, "Member 'StatItemLarge_C_UpdateValue::Temp_byte_Variable6' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000092, "Member 'StatItemLarge_C_UpdateValue::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, K2Node_Select3_Default) == 0x000094, "Member 'StatItemLarge_C_UpdateValue::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(StatItemLarge_C_UpdateValue, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x0000A4, "Member 'StatItemLarge_C_UpdateValue::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

}

