#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TT_Commando_FragGrenade

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function TT_Commando_FragGrenade.TT_Commando_FragGrenade_C.InitializeAbilityInstanceInternal
// 0x0020 (0x0020 - 0x0000)
struct TT_Commando_FragGrenade_C_InitializeAbilityInstanceInternal final
{
public:
	class UGameplayAbility*                       AbilityInstance;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortTooltipContext*                    Context;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGA_Commando_FragGrenade_WithTrajectory_C* K2Node_DynamicCast_AsGA_Commando_Frag_Grenade_with_Trajectory; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TT_Commando_FragGrenade_C_InitializeAbilityInstanceInternal) == 0x000008, "Wrong alignment on TT_Commando_FragGrenade_C_InitializeAbilityInstanceInternal");
static_assert(sizeof(TT_Commando_FragGrenade_C_InitializeAbilityInstanceInternal) == 0x000020, "Wrong size on TT_Commando_FragGrenade_C_InitializeAbilityInstanceInternal");
static_assert(offsetof(TT_Commando_FragGrenade_C_InitializeAbilityInstanceInternal, AbilityInstance) == 0x000000, "Member 'TT_Commando_FragGrenade_C_InitializeAbilityInstanceInternal::AbilityInstance' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_InitializeAbilityInstanceInternal, Context) == 0x000008, "Member 'TT_Commando_FragGrenade_C_InitializeAbilityInstanceInternal::Context' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_InitializeAbilityInstanceInternal, K2Node_DynamicCast_AsGA_Commando_Frag_Grenade_with_Trajectory) == 0x000010, "Member 'TT_Commando_FragGrenade_C_InitializeAbilityInstanceInternal::K2Node_DynamicCast_AsGA_Commando_Frag_Grenade_with_Trajectory' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_InitializeAbilityInstanceInternal, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'TT_Commando_FragGrenade_C_InitializeAbilityInstanceInternal::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TT_Commando_FragGrenade.TT_Commando_FragGrenade_C.GetTextForTokenFromAbilityInstanceInternal
// 0x01F0 (0x01F0 - 0x0000)
struct TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal final
{
public:
	class UGameplayAbility*                       AbilityInstance;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Tag;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UFortTooltipContext*                    Context;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Token;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class FText                                   OutText;                                           // 0x0020(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0040(0x0018)()
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGA_Commando_FragGrenade_WithTrajectory_C* K2Node_DynamicCast_AsGA_Commando_Frag_Grenade_with_Trajectory; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0078(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0090(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable2;                               // 0x0100(0x0018)()
	class FText                                   Temp_text_Variable3;                               // 0x0118(0x0018)()
	bool                                          Temp_bool_Variable2;                               // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0138(0x0018)()
	class FText                                   Temp_text_Variable4;                               // 0x0150(0x0018)()
	class FText                                   Temp_text_Variable5;                               // 0x0168(0x0018)()
	class FText                                   Temp_text_Variable6;                               // 0x0180(0x0018)()
	class FText                                   K2Node_Select2_Default;                            // 0x0198(0x0018)()
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue2;              // 0x01B8(0x0018)()
	bool                                          Temp_bool_Variable3;                               // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select3_Default;                            // 0x01D8(0x0018)()
};
static_assert(alignof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal) == 0x000008, "Wrong alignment on TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal");
static_assert(sizeof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal) == 0x0001F0, "Wrong size on TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, AbilityInstance) == 0x000000, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::AbilityInstance' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, Tag) == 0x000008, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::Tag' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, Context) == 0x000010, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::Context' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, Token) == 0x000018, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::Token' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, OutText) == 0x000020, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::OutText' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, ReturnValue) == 0x000038, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, Temp_text_Variable) == 0x000040, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000058, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, K2Node_DynamicCast_AsGA_Commando_Frag_Grenade_with_Trajectory) == 0x000060, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::K2Node_DynamicCast_AsGA_Commando_Frag_Grenade_with_Trajectory' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00006C, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000070, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, CallFunc_Conv_IntToText_ReturnValue) == 0x000078, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, K2Node_MakeStruct_FormatArgumentData) == 0x000090, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, K2Node_MakeArray_Array) == 0x0000D0, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, Temp_bool_Variable) == 0x0000F8, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, Temp_text_Variable2) == 0x000100, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::Temp_text_Variable2' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, Temp_text_Variable3) == 0x000118, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::Temp_text_Variable3' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, Temp_bool_Variable2) == 0x000130, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, K2Node_Select_Default) == 0x000138, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, Temp_text_Variable4) == 0x000150, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::Temp_text_Variable4' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, Temp_text_Variable5) == 0x000168, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::Temp_text_Variable5' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, Temp_text_Variable6) == 0x000180, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::Temp_text_Variable6' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, K2Node_Select2_Default) == 0x000198, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, CallFunc_MakeLiteralInt_ReturnValue) == 0x0001B0, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, CallFunc_Conv_IntToText_ReturnValue2) == 0x0001B8, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::CallFunc_Conv_IntToText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, Temp_bool_Variable3) == 0x0001D0, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal, K2Node_Select3_Default) == 0x0001D8, "Member 'TT_Commando_FragGrenade_C_GetTextForTokenFromAbilityInstanceInternal::K2Node_Select3_Default' has a wrong offset!");

// Function TT_Commando_FragGrenade.TT_Commando_FragGrenade_C.GetApplicationTag
// 0x0028 (0x0028 - 0x0000)
struct TT_Commando_FragGrenade_C_GetApplicationTag final
{
public:
	class UGameplayAbility*                       AbilityInstance;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           OutTag;                                            // 0x0008(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGA_Commando_FragGrenade_WithTrajectory_C* K2Node_DynamicCast_AsGA_Commando_Frag_Grenade_with_Trajectory; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TT_Commando_FragGrenade_C_GetApplicationTag) == 0x000008, "Wrong alignment on TT_Commando_FragGrenade_C_GetApplicationTag");
static_assert(sizeof(TT_Commando_FragGrenade_C_GetApplicationTag) == 0x000028, "Wrong size on TT_Commando_FragGrenade_C_GetApplicationTag");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetApplicationTag, AbilityInstance) == 0x000000, "Member 'TT_Commando_FragGrenade_C_GetApplicationTag::AbilityInstance' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetApplicationTag, OutTag) == 0x000008, "Member 'TT_Commando_FragGrenade_C_GetApplicationTag::OutTag' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetApplicationTag, ReturnValue) == 0x000010, "Member 'TT_Commando_FragGrenade_C_GetApplicationTag::ReturnValue' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetApplicationTag, K2Node_DynamicCast_AsGA_Commando_Frag_Grenade_with_Trajectory) == 0x000018, "Member 'TT_Commando_FragGrenade_C_GetApplicationTag::K2Node_DynamicCast_AsGA_Commando_Frag_Grenade_with_Trajectory' has a wrong offset!");
static_assert(offsetof(TT_Commando_FragGrenade_C_GetApplicationTag, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'TT_Commando_FragGrenade_C_GetApplicationTag::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

