#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WM_Pin_Master

#include "Basic.hpp"

#include "WM_Pin_Master_classes.hpp"
#include "WM_Pin_Master_parameters.hpp"


namespace SDK
{

// Function WM_Pin_Master.WM_Pin_Master_C.ExecuteUbergraph_WM_Pin_Master
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWM_Pin_Master_C::ExecuteUbergraph_WM_Pin_Master(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WM_Pin_Master_C", "ExecuteUbergraph_WM_Pin_Master");

	Params::WM_Pin_Master_C_ExecuteUbergraph_WM_Pin_Master Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WM_Pin_Master.WM_Pin_Master_C.OnTheaterIdSet
// (Event, Public, BlueprintEvent)

void AWM_Pin_Master_C::OnTheaterIdSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WM_Pin_Master_C", "OnTheaterIdSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WM_Pin_Master.WM_Pin_Master_C.HandleOnEndCursorOver
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TouchedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWM_Pin_Master_C::HandleOnEndCursorOver(class AActor* TouchedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WM_Pin_Master_C", "HandleOnEndCursorOver");

	Params::WM_Pin_Master_C_HandleOnEndCursorOver Parms{};

	Parms.TouchedActor = TouchedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WM_Pin_Master.WM_Pin_Master_C.HandleOnBeginCursorOver
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TouchedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWM_Pin_Master_C::HandleOnBeginCursorOver(class AActor* TouchedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WM_Pin_Master_C", "HandleOnBeginCursorOver");

	Params::WM_Pin_Master_C_HandleOnBeginCursorOver Parms{};

	Parms.TouchedActor = TouchedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WM_Pin_Master.WM_Pin_Master_C.HandleOnClicked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TouchedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             ButtonPressed                                          (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AWM_Pin_Master_C::HandleOnClicked(class AActor* TouchedActor, const struct FKey& ButtonPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WM_Pin_Master_C", "HandleOnClicked");

	Params::WM_Pin_Master_C_HandleOnClicked Parms{};

	Parms.TouchedActor = TouchedActor;
	Parms.ButtonPressed = std::move(ButtonPressed);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WM_Pin_Master.WM_Pin_Master_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AWM_Pin_Master_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WM_Pin_Master_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WM_Pin_Master.WM_Pin_Master_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AWM_Pin_Master_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WM_Pin_Master_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WM_Pin_Master.WM_Pin_Master_C.IsLeader
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Enabled                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWM_Pin_Master_C::IsLeader(bool* Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WM_Pin_Master_C", "IsLeader");

	Params::WM_Pin_Master_C_IsLeader Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Enabled != nullptr)
		*Enabled = Parms.Enabled;
}


// Function WM_Pin_Master.WM_Pin_Master_C.CanAccessPin
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Accessible                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AWM_Pin_Master_C::CanAccessPin(bool* Accessible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WM_Pin_Master_C", "CanAccessPin");

	Params::WM_Pin_Master_C_CanAccessPin Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Accessible != nullptr)
		*Accessible = Parms.Accessible;
}


// Function WM_Pin_Master.WM_Pin_Master_C.GetRequiredText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             RequirementText                                        (Parm, OutParm)

void AWM_Pin_Master_C::GetRequiredText(class FText* RequirementText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WM_Pin_Master_C", "GetRequiredText");

	Params::WM_Pin_Master_C_GetRequiredText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RequirementText != nullptr)
		*RequirementText = std::move(Parms.RequirementText);
}


// Function WM_Pin_Master.WM_Pin_Master_C.UpdateVisuals
// (Public, BlueprintCallable, BlueprintEvent)

void AWM_Pin_Master_C::UpdateVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WM_Pin_Master_C", "UpdateVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WM_Pin_Master.WM_Pin_Master_C.InitializeContextEvents
// (Public, BlueprintCallable, BlueprintEvent)

void AWM_Pin_Master_C::InitializeContextEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WM_Pin_Master_C", "InitializeContextEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WM_Pin_Master.WM_Pin_Master_C.OnSetPreviewedSceneTheater
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_PreviewedTheaterId                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AWM_Pin_Master_C::OnSetPreviewedSceneTheater(const class FString& Param_PreviewedTheaterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WM_Pin_Master_C", "OnSetPreviewedSceneTheater");

	Params::WM_Pin_Master_C_OnSetPreviewedSceneTheater Parms{};

	Parms.Param_PreviewedTheaterId = std::move(Param_PreviewedTheaterId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WM_Pin_Master.WM_Pin_Master_C.OnTheaterSelected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_TheaterId                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AWM_Pin_Master_C::OnTheaterSelected(const class FString& Param_TheaterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WM_Pin_Master_C", "OnTheaterSelected");

	Params::WM_Pin_Master_C_OnTheaterSelected Parms{};

	Parms.Param_TheaterId = std::move(Param_TheaterId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WM_Pin_Master.WM_Pin_Master_C.OnQuestsCompleted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UFortQuestItem*>           QuestItems                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void AWM_Pin_Master_C::OnQuestsCompleted(TArray<class UFortQuestItem*>& QuestItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WM_Pin_Master_C", "OnQuestsCompleted");

	Params::WM_Pin_Master_C_OnQuestsCompleted Parms{};

	Parms.QuestItems = std::move(QuestItems);

	UObject::ProcessEvent(Func, &Parms);

	QuestItems = std::move(Parms.QuestItems);
}


// Function WM_Pin_Master.WM_Pin_Master_C.UpdateSelectionState
// (Public, BlueprintCallable, BlueprintEvent)

void AWM_Pin_Master_C::UpdateSelectionState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WM_Pin_Master_C", "UpdateSelectionState");

	UObject::ProcessEvent(Func, nullptr);
}

}

