#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XpBoostQuantities

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function XpBoostQuantities.XpBoostQuantities_C.ExecuteUbergraph_XpBoostQuantities
// 0x0068 (0x0068 - 0x0000)
struct XpBoostQuantities_C_ExecuteUbergraph_XpBoostQuantities final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FFortPublicAccountInfo& NewInfo)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 BoostAmount)>            K2Node_CreateDelegate_OutputDelegate2;             // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortPublicAccountInfo                 K2Node_CustomEvent_NewInfo;                        // 0x0030(0x0034)(NoDestructor)
	int32                                         K2Node_CustomEvent_BoostAmount;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(XpBoostQuantities_C_ExecuteUbergraph_XpBoostQuantities) == 0x000008, "Wrong alignment on XpBoostQuantities_C_ExecuteUbergraph_XpBoostQuantities");
static_assert(sizeof(XpBoostQuantities_C_ExecuteUbergraph_XpBoostQuantities) == 0x000068, "Wrong size on XpBoostQuantities_C_ExecuteUbergraph_XpBoostQuantities");
static_assert(offsetof(XpBoostQuantities_C_ExecuteUbergraph_XpBoostQuantities, EntryPoint) == 0x000000, "Member 'XpBoostQuantities_C_ExecuteUbergraph_XpBoostQuantities::EntryPoint' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ExecuteUbergraph_XpBoostQuantities, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'XpBoostQuantities_C_ExecuteUbergraph_XpBoostQuantities::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ExecuteUbergraph_XpBoostQuantities, K2Node_CreateDelegate_OutputDelegate2) == 0x000018, "Member 'XpBoostQuantities_C_ExecuteUbergraph_XpBoostQuantities::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ExecuteUbergraph_XpBoostQuantities, CallFunc_GetContext_ReturnValue) == 0x000028, "Member 'XpBoostQuantities_C_ExecuteUbergraph_XpBoostQuantities::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ExecuteUbergraph_XpBoostQuantities, K2Node_CustomEvent_NewInfo) == 0x000030, "Member 'XpBoostQuantities_C_ExecuteUbergraph_XpBoostQuantities::K2Node_CustomEvent_NewInfo' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ExecuteUbergraph_XpBoostQuantities, K2Node_CustomEvent_BoostAmount) == 0x000064, "Member 'XpBoostQuantities_C_ExecuteUbergraph_XpBoostQuantities::K2Node_CustomEvent_BoostAmount' has a wrong offset!");

// Function XpBoostQuantities.XpBoostQuantities_C.Xp Boost Changed
// 0x0004 (0x0004 - 0x0000)
struct XpBoostQuantities_C_Xp_Boost_Changed final
{
public:
	int32                                         BoostAmount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(XpBoostQuantities_C_Xp_Boost_Changed) == 0x000004, "Wrong alignment on XpBoostQuantities_C_Xp_Boost_Changed");
static_assert(sizeof(XpBoostQuantities_C_Xp_Boost_Changed) == 0x000004, "Wrong size on XpBoostQuantities_C_Xp_Boost_Changed");
static_assert(offsetof(XpBoostQuantities_C_Xp_Boost_Changed, BoostAmount) == 0x000000, "Member 'XpBoostQuantities_C_Xp_Boost_Changed::BoostAmount' has a wrong offset!");

// Function XpBoostQuantities.XpBoostQuantities_C.HandleAccountUpdate
// 0x0034 (0x0034 - 0x0000)
struct XpBoostQuantities_C_HandleAccountUpdate final
{
public:
	struct FFortPublicAccountInfo                 NewInfo;                                           // 0x0000(0x0034)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(XpBoostQuantities_C_HandleAccountUpdate) == 0x000004, "Wrong alignment on XpBoostQuantities_C_HandleAccountUpdate");
static_assert(sizeof(XpBoostQuantities_C_HandleAccountUpdate) == 0x000034, "Wrong size on XpBoostQuantities_C_HandleAccountUpdate");
static_assert(offsetof(XpBoostQuantities_C_HandleAccountUpdate, NewInfo) == 0x000000, "Member 'XpBoostQuantities_C_HandleAccountUpdate::NewInfo' has a wrong offset!");

// Function XpBoostQuantities.XpBoostQuantities_C.UpdateXPQuantitiesInfo
// 0x0228 (0x0228 - 0x0000)
struct XpBoostQuantities_C_UpdateXPQuantitiesInfo final
{
public:
	int32                                         CurrentXP;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         XPToLevel;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0018)()
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue2;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortPublicAccountInfo                 CallFunc_GetCurrentlyViewedAccountInfo_Result;     // 0x0030(0x0034)(NoDestructor)
	int32                                         CallFunc_ScaledBoostBalance_ReturnValue;           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B8(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ScaledRestBalance_ReturnValue;            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortItemQuantityPair>          CallFunc_GetAccountLevelUpRewards_Rewards;         // 0x00E0(0x0010)(ZeroConstructor, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x00F0(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array2;                           // 0x0138(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue2;                      // 0x0150(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0168(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData3;             // 0x0180(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData4;             // 0x01C0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array3;                           // 0x0200(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue3;                      // 0x0210(0x0018)()
};
static_assert(alignof(XpBoostQuantities_C_UpdateXPQuantitiesInfo) == 0x000008, "Wrong alignment on XpBoostQuantities_C_UpdateXPQuantitiesInfo");
static_assert(sizeof(XpBoostQuantities_C_UpdateXPQuantitiesInfo) == 0x000228, "Wrong size on XpBoostQuantities_C_UpdateXPQuantitiesInfo");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, CurrentXP) == 0x000000, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::CurrentXP' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, XPToLevel) == 0x000004, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::XPToLevel' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, CallFunc_GetContext_ReturnValue) == 0x000020, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, CallFunc_GetContext_ReturnValue2) == 0x000028, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, CallFunc_GetCurrentlyViewedAccountInfo_Result) == 0x000030, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::CallFunc_GetCurrentlyViewedAccountInfo_Result' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, CallFunc_ScaledBoostBalance_ReturnValue) == 0x000064, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::CallFunc_ScaledBoostBalance_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, K2Node_MakeArray_Array) == 0x0000A8, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, CallFunc_Format_ReturnValue) == 0x0000B8, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, CallFunc_ScaledRestBalance_ReturnValue) == 0x0000D8, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::CallFunc_ScaledRestBalance_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, CallFunc_GetAccountLevelUpRewards_Rewards) == 0x0000E0, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::CallFunc_GetAccountLevelUpRewards_Rewards' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, K2Node_MakeStruct_FormatArgumentData2) == 0x0000F0, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, CallFunc_Array_Length_ReturnValue) == 0x000130, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, K2Node_MakeArray_Array2) == 0x000138, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, CallFunc_Greater_IntInt_ReturnValue) == 0x000148, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, CallFunc_Format_ReturnValue2) == 0x000150, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::CallFunc_Format_ReturnValue2' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, CallFunc_Conv_IntToText_ReturnValue) == 0x000168, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, K2Node_MakeStruct_FormatArgumentData3) == 0x000180, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::K2Node_MakeStruct_FormatArgumentData3' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, K2Node_MakeStruct_FormatArgumentData4) == 0x0001C0, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::K2Node_MakeStruct_FormatArgumentData4' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, K2Node_MakeArray_Array3) == 0x000200, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::K2Node_MakeArray_Array3' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_UpdateXPQuantitiesInfo, CallFunc_Format_ReturnValue3) == 0x000210, "Member 'XpBoostQuantities_C_UpdateXPQuantitiesInfo::CallFunc_Format_ReturnValue3' has a wrong offset!");

// Function XpBoostQuantities.XpBoostQuantities_C.ScaledBoostBalance
// 0x0038 (0x0038 - 0x0000)
struct XpBoostQuantities_C_ScaledBoostBalance final
{
public:
	int32                                         AmountToLevel;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Xp_For_Level;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetXpBoostBalance_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(XpBoostQuantities_C_ScaledBoostBalance) == 0x000008, "Wrong alignment on XpBoostQuantities_C_ScaledBoostBalance");
static_assert(sizeof(XpBoostQuantities_C_ScaledBoostBalance) == 0x000038, "Wrong size on XpBoostQuantities_C_ScaledBoostBalance");
static_assert(offsetof(XpBoostQuantities_C_ScaledBoostBalance, AmountToLevel) == 0x000000, "Member 'XpBoostQuantities_C_ScaledBoostBalance::AmountToLevel' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ScaledBoostBalance, ReturnValue) == 0x000004, "Member 'XpBoostQuantities_C_ScaledBoostBalance::ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ScaledBoostBalance, Xp_For_Level) == 0x000008, "Member 'XpBoostQuantities_C_ScaledBoostBalance::Xp_For_Level' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ScaledBoostBalance, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'XpBoostQuantities_C_ScaledBoostBalance::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ScaledBoostBalance, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000010, "Member 'XpBoostQuantities_C_ScaledBoostBalance::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ScaledBoostBalance, CallFunc_GetContext_ReturnValue) == 0x000018, "Member 'XpBoostQuantities_C_ScaledBoostBalance::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ScaledBoostBalance, CallFunc_GetXpBoostBalance_ReturnValue) == 0x000020, "Member 'XpBoostQuantities_C_ScaledBoostBalance::CallFunc_GetXpBoostBalance_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ScaledBoostBalance, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000024, "Member 'XpBoostQuantities_C_ScaledBoostBalance::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ScaledBoostBalance, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'XpBoostQuantities_C_ScaledBoostBalance::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ScaledBoostBalance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'XpBoostQuantities_C_ScaledBoostBalance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ScaledBoostBalance, CallFunc_FTrunc_ReturnValue) == 0x000030, "Member 'XpBoostQuantities_C_ScaledBoostBalance::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function XpBoostQuantities.XpBoostQuantities_C.ScaledRestBalance
// 0x0038 (0x0038 - 0x0000)
struct XpBoostQuantities_C_ScaledRestBalance final
{
public:
	int32                                         AmountToLevel;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Xp_For_Level;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRestXpBalance_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(XpBoostQuantities_C_ScaledRestBalance) == 0x000008, "Wrong alignment on XpBoostQuantities_C_ScaledRestBalance");
static_assert(sizeof(XpBoostQuantities_C_ScaledRestBalance) == 0x000038, "Wrong size on XpBoostQuantities_C_ScaledRestBalance");
static_assert(offsetof(XpBoostQuantities_C_ScaledRestBalance, AmountToLevel) == 0x000000, "Member 'XpBoostQuantities_C_ScaledRestBalance::AmountToLevel' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ScaledRestBalance, ReturnValue) == 0x000004, "Member 'XpBoostQuantities_C_ScaledRestBalance::ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ScaledRestBalance, Xp_For_Level) == 0x000008, "Member 'XpBoostQuantities_C_ScaledRestBalance::Xp_For_Level' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ScaledRestBalance, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'XpBoostQuantities_C_ScaledRestBalance::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ScaledRestBalance, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000010, "Member 'XpBoostQuantities_C_ScaledRestBalance::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ScaledRestBalance, CallFunc_GetContext_ReturnValue) == 0x000018, "Member 'XpBoostQuantities_C_ScaledRestBalance::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ScaledRestBalance, CallFunc_GetRestXpBalance_ReturnValue) == 0x000020, "Member 'XpBoostQuantities_C_ScaledRestBalance::CallFunc_GetRestXpBalance_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ScaledRestBalance, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000024, "Member 'XpBoostQuantities_C_ScaledRestBalance::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ScaledRestBalance, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'XpBoostQuantities_C_ScaledRestBalance::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ScaledRestBalance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'XpBoostQuantities_C_ScaledRestBalance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBoostQuantities_C_ScaledRestBalance, CallFunc_FTrunc_ReturnValue) == 0x000030, "Member 'XpBoostQuantities_C_ScaledRestBalance::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

}

