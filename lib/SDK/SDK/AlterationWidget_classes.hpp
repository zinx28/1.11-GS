#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AlterationWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AlterationWidget.AlterationWidget_C
// 0x0108 (0x0330 - 0x0228)
class UAlterationWidget_C final : public UFortAlterationWidget_NUI
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0228(0x0008)(Transient, DuplicateTransient)
	class UCommonTextBlock*                       AlterationDescription;                             // 0x0230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       AlterationName;                                    // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       AlterationShortDescription;                        // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          EvolutionBorder;                                   // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_6;                                           // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_7;                                           // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_8;                                           // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_22;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_26;                                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_32;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageAlteration;                                   // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageBackground;                                   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageLocked;                                       // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageLockPerk;                                     // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  InfoSwitcher;                                      // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       LargeInfo;                                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       LevelRequired;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       LevelText;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         LockedBox;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  LockedRaritySwitcher;                              // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        PrimarySwitcher;                                   // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  RaritySwitcher;                                    // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBoxIcon;                                      // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           SmallInfo;                                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  UnlockedRaritySwitcher;                            // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bIncludeName;                                      // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          bIncludeShortDescription;                          // 0x0311(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          bIncludeDescription;                               // 0x0312(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	EFortBrushSize                                IconSize;                                          // 0x0313(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bUseLargeFormatName;                               // 0x0314(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_315[0x3];                                      // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Locked_Description_Style;                          // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Locked_Text_Style;                                 // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldShowRarity;                                  // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_AlterationWidget(int32 EntryPoint);
	void Construct();
	struct FLinearColor GetHighlightColor();
	bool ShouldFadeAlteration();
	void InitIcon();
	void InitText();
	void SetLevelText();
	void UpdateRaritySwitcherVisiblity();
	void SetEvolutionDetails();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AlterationWidget_C">();
	}
	static class UAlterationWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAlterationWidget_C>();
	}
};
static_assert(alignof(UAlterationWidget_C) == 0x000008, "Wrong alignment on UAlterationWidget_C");
static_assert(sizeof(UAlterationWidget_C) == 0x000330, "Wrong size on UAlterationWidget_C");
static_assert(offsetof(UAlterationWidget_C, UberGraphFrame) == 0x000228, "Member 'UAlterationWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, AlterationDescription) == 0x000230, "Member 'UAlterationWidget_C::AlterationDescription' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, AlterationName) == 0x000238, "Member 'UAlterationWidget_C::AlterationName' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, AlterationShortDescription) == 0x000240, "Member 'UAlterationWidget_C::AlterationShortDescription' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, EvolutionBorder) == 0x000248, "Member 'UAlterationWidget_C::EvolutionBorder' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, Image_0) == 0x000250, "Member 'UAlterationWidget_C::Image_0' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, Image_1) == 0x000258, "Member 'UAlterationWidget_C::Image_1' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, Image_2) == 0x000260, "Member 'UAlterationWidget_C::Image_2' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, Image_6) == 0x000268, "Member 'UAlterationWidget_C::Image_6' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, Image_7) == 0x000270, "Member 'UAlterationWidget_C::Image_7' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, Image_8) == 0x000278, "Member 'UAlterationWidget_C::Image_8' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, Image_22) == 0x000280, "Member 'UAlterationWidget_C::Image_22' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, Image_26) == 0x000288, "Member 'UAlterationWidget_C::Image_26' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, Image_32) == 0x000290, "Member 'UAlterationWidget_C::Image_32' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, ImageAlteration) == 0x000298, "Member 'UAlterationWidget_C::ImageAlteration' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, ImageBackground) == 0x0002A0, "Member 'UAlterationWidget_C::ImageBackground' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, ImageLocked) == 0x0002A8, "Member 'UAlterationWidget_C::ImageLocked' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, ImageLockPerk) == 0x0002B0, "Member 'UAlterationWidget_C::ImageLockPerk' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, InfoSwitcher) == 0x0002B8, "Member 'UAlterationWidget_C::InfoSwitcher' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, LargeInfo) == 0x0002C0, "Member 'UAlterationWidget_C::LargeInfo' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, LevelRequired) == 0x0002C8, "Member 'UAlterationWidget_C::LevelRequired' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, LevelText) == 0x0002D0, "Member 'UAlterationWidget_C::LevelText' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, LockedBox) == 0x0002D8, "Member 'UAlterationWidget_C::LockedBox' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, LockedRaritySwitcher) == 0x0002E0, "Member 'UAlterationWidget_C::LockedRaritySwitcher' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, PrimarySwitcher) == 0x0002E8, "Member 'UAlterationWidget_C::PrimarySwitcher' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, RaritySwitcher) == 0x0002F0, "Member 'UAlterationWidget_C::RaritySwitcher' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, ScaleBoxIcon) == 0x0002F8, "Member 'UAlterationWidget_C::ScaleBoxIcon' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, SmallInfo) == 0x000300, "Member 'UAlterationWidget_C::SmallInfo' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, UnlockedRaritySwitcher) == 0x000308, "Member 'UAlterationWidget_C::UnlockedRaritySwitcher' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, bIncludeName) == 0x000310, "Member 'UAlterationWidget_C::bIncludeName' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, bIncludeShortDescription) == 0x000311, "Member 'UAlterationWidget_C::bIncludeShortDescription' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, bIncludeDescription) == 0x000312, "Member 'UAlterationWidget_C::bIncludeDescription' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, IconSize) == 0x000313, "Member 'UAlterationWidget_C::IconSize' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, bUseLargeFormatName) == 0x000314, "Member 'UAlterationWidget_C::bUseLargeFormatName' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, Locked_Description_Style) == 0x000318, "Member 'UAlterationWidget_C::Locked_Description_Style' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, Locked_Text_Style) == 0x000320, "Member 'UAlterationWidget_C::Locked_Text_Style' has a wrong offset!");
static_assert(offsetof(UAlterationWidget_C, ShouldShowRarity) == 0x000328, "Member 'UAlterationWidget_C::ShouldShowRarity' has a wrong offset!");

}

