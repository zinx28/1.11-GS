#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaPlayerLevel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function AthenaPlayerLevel.AthenaPlayerLevel_C.LevelChanged__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct AthenaPlayerLevel_C_LevelChanged__DelegateSignature final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaPlayerLevel_C_LevelChanged__DelegateSignature) == 0x000004, "Wrong alignment on AthenaPlayerLevel_C_LevelChanged__DelegateSignature");
static_assert(sizeof(AthenaPlayerLevel_C_LevelChanged__DelegateSignature) == 0x000004, "Wrong size on AthenaPlayerLevel_C_LevelChanged__DelegateSignature");
static_assert(offsetof(AthenaPlayerLevel_C_LevelChanged__DelegateSignature, Level) == 0x000000, "Member 'AthenaPlayerLevel_C_LevelChanged__DelegateSignature::Level' has a wrong offset!");

// Function AthenaPlayerLevel.AthenaPlayerLevel_C.ExecuteUbergraph_AthenaPlayerLevel
// 0x00C8 (0x00C8 - 0x0000)
struct AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAthenaMatchXpReward                   K2Node_CustomEvent_Reward;                         // 0x0008(0x0020)(ConstParm)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0028(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_XpToAdd;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMcpProfileAthena*                  CallFunc_GetAthenaProfile_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAthenaSeasonRewardLevelInfo           CallFunc_GetSeasonLevelInfo_ReturnValue;           // 0x00A0(0x0020)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel) == 0x000008, "Wrong alignment on AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel");
static_assert(sizeof(AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel) == 0x0000C8, "Wrong size on AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel");
static_assert(offsetof(AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel, EntryPoint) == 0x000000, "Member 'AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel::EntryPoint' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel, K2Node_CustomEvent_Reward) == 0x000008, "Member 'AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel::K2Node_CustomEvent_Reward' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel, K2Node_Event_MyGeometry) == 0x000028, "Member 'AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel, K2Node_Event_InDeltaTime) == 0x000060, "Member 'AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000068, "Member 'AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x00006C, "Member 'AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel, CallFunc_Lerp_ReturnValue) == 0x000070, "Member 'AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel, CallFunc_FTrunc_ReturnValue) == 0x000074, "Member 'AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel, K2Node_CustomEvent_XpToAdd) == 0x000078, "Member 'AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel::K2Node_CustomEvent_XpToAdd' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel, CallFunc_Subtract_IntInt_ReturnValue) == 0x00007C, "Member 'AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel, CallFunc_Add_IntInt_ReturnValue2) == 0x000080, "Member 'AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel, CallFunc_GetContext_ReturnValue) == 0x000088, "Member 'AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel, CallFunc_GetAthenaProfile_ReturnValue) == 0x000090, "Member 'AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel::CallFunc_GetAthenaProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000099, "Member 'AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel, CallFunc_GetSeasonLevelInfo_ReturnValue) == 0x0000A0, "Member 'AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel::CallFunc_GetSeasonLevelInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'AthenaPlayerLevel_C_ExecuteUbergraph_AthenaPlayerLevel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function AthenaPlayerLevel.AthenaPlayerLevel_C.Play XP Reward Directly
// 0x0004 (0x0004 - 0x0000)
struct AthenaPlayerLevel_C_Play_XP_Reward_Directly final
{
public:
	int32                                         Param_XpToAdd;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaPlayerLevel_C_Play_XP_Reward_Directly) == 0x000004, "Wrong alignment on AthenaPlayerLevel_C_Play_XP_Reward_Directly");
static_assert(sizeof(AthenaPlayerLevel_C_Play_XP_Reward_Directly) == 0x000004, "Wrong size on AthenaPlayerLevel_C_Play_XP_Reward_Directly");
static_assert(offsetof(AthenaPlayerLevel_C_Play_XP_Reward_Directly, Param_XpToAdd) == 0x000000, "Member 'AthenaPlayerLevel_C_Play_XP_Reward_Directly::Param_XpToAdd' has a wrong offset!");

// Function AthenaPlayerLevel.AthenaPlayerLevel_C.Tick
// 0x003C (0x003C - 0x0000)
struct AthenaPlayerLevel_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaPlayerLevel_C_Tick) == 0x000004, "Wrong alignment on AthenaPlayerLevel_C_Tick");
static_assert(sizeof(AthenaPlayerLevel_C_Tick) == 0x00003C, "Wrong size on AthenaPlayerLevel_C_Tick");
static_assert(offsetof(AthenaPlayerLevel_C_Tick, MyGeometry) == 0x000000, "Member 'AthenaPlayerLevel_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_Tick, InDeltaTime) == 0x000038, "Member 'AthenaPlayerLevel_C_Tick::InDeltaTime' has a wrong offset!");

// Function AthenaPlayerLevel.AthenaPlayerLevel_C.Play Xp Reward
// 0x0020 (0x0020 - 0x0000)
struct AthenaPlayerLevel_C_Play_Xp_Reward final
{
public:
	struct FAthenaMatchXpReward                   Reward;                                            // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(AthenaPlayerLevel_C_Play_Xp_Reward) == 0x000008, "Wrong alignment on AthenaPlayerLevel_C_Play_Xp_Reward");
static_assert(sizeof(AthenaPlayerLevel_C_Play_Xp_Reward) == 0x000020, "Wrong size on AthenaPlayerLevel_C_Play_Xp_Reward");
static_assert(offsetof(AthenaPlayerLevel_C_Play_Xp_Reward, Reward) == 0x000000, "Member 'AthenaPlayerLevel_C_Play_Xp_Reward::Reward' has a wrong offset!");

// Function AthenaPlayerLevel.AthenaPlayerLevel_C.InitializeFromAccount
// 0x0034 (0x0034 - 0x0000)
struct AthenaPlayerLevel_C_InitializeFromAccount final
{
public:
	struct FFortPublicAccountInfo                 FortPublicAccountInfo;                             // 0x0000(0x0034)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(AthenaPlayerLevel_C_InitializeFromAccount) == 0x000004, "Wrong alignment on AthenaPlayerLevel_C_InitializeFromAccount");
static_assert(sizeof(AthenaPlayerLevel_C_InitializeFromAccount) == 0x000034, "Wrong size on AthenaPlayerLevel_C_InitializeFromAccount");
static_assert(offsetof(AthenaPlayerLevel_C_InitializeFromAccount, FortPublicAccountInfo) == 0x000000, "Member 'AthenaPlayerLevel_C_InitializeFromAccount::FortPublicAccountInfo' has a wrong offset!");

// Function AthenaPlayerLevel.AthenaPlayerLevel_C.InitializeFromLevelInfo
// 0x0024 (0x0024 - 0x0000)
struct AthenaPlayerLevel_C_InitializeFromLevelInfo final
{
public:
	struct FAthenaLevelInfo                       LevelInfo;                                         // 0x0000(0x0024)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(AthenaPlayerLevel_C_InitializeFromLevelInfo) == 0x000004, "Wrong alignment on AthenaPlayerLevel_C_InitializeFromLevelInfo");
static_assert(sizeof(AthenaPlayerLevel_C_InitializeFromLevelInfo) == 0x000024, "Wrong size on AthenaPlayerLevel_C_InitializeFromLevelInfo");
static_assert(offsetof(AthenaPlayerLevel_C_InitializeFromLevelInfo, LevelInfo) == 0x000000, "Member 'AthenaPlayerLevel_C_InitializeFromLevelInfo::LevelInfo' has a wrong offset!");

// Function AthenaPlayerLevel.AthenaPlayerLevel_C.IsReadyForNextXpReward
// 0x0002 (0x0002 - 0x0000)
struct AthenaPlayerLevel_C_IsReadyForNextXpReward final
{
public:
	bool                                          Ready;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AthenaPlayerLevel_C_IsReadyForNextXpReward) == 0x000001, "Wrong alignment on AthenaPlayerLevel_C_IsReadyForNextXpReward");
static_assert(sizeof(AthenaPlayerLevel_C_IsReadyForNextXpReward) == 0x000002, "Wrong size on AthenaPlayerLevel_C_IsReadyForNextXpReward");
static_assert(offsetof(AthenaPlayerLevel_C_IsReadyForNextXpReward, Ready) == 0x000000, "Member 'AthenaPlayerLevel_C_IsReadyForNextXpReward::Ready' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_IsReadyForNextXpReward, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'AthenaPlayerLevel_C_IsReadyForNextXpReward::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function AthenaPlayerLevel.AthenaPlayerLevel_C.UpdateXp
// 0x0088 (0x0088 - 0x0000)
struct AthenaPlayerLevel_C_UpdateXp final
{
public:
	int32                                         LevelXp;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_LevelXpForLevel;                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_MaxLevel;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue2;              // 0x0038(0x0018)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0018)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AthenaPlayerLevel_C_UpdateXp) == 0x000008, "Wrong alignment on AthenaPlayerLevel_C_UpdateXp");
static_assert(sizeof(AthenaPlayerLevel_C_UpdateXp) == 0x000088, "Wrong size on AthenaPlayerLevel_C_UpdateXp");
static_assert(offsetof(AthenaPlayerLevel_C_UpdateXp, LevelXp) == 0x000000, "Member 'AthenaPlayerLevel_C_UpdateXp::LevelXp' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_UpdateXp, Param_LevelXpForLevel) == 0x000004, "Member 'AthenaPlayerLevel_C_UpdateXp::Param_LevelXpForLevel' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_UpdateXp, Level) == 0x000008, "Member 'AthenaPlayerLevel_C_UpdateXp::Level' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_UpdateXp, Param_MaxLevel) == 0x00000C, "Member 'AthenaPlayerLevel_C_UpdateXp::Param_MaxLevel' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_UpdateXp, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'AthenaPlayerLevel_C_UpdateXp::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_UpdateXp, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'AthenaPlayerLevel_C_UpdateXp::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_UpdateXp, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000030, "Member 'AthenaPlayerLevel_C_UpdateXp::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_UpdateXp, CallFunc_Conv_IntToText_ReturnValue2) == 0x000038, "Member 'AthenaPlayerLevel_C_UpdateXp::CallFunc_Conv_IntToText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_UpdateXp, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000050, "Member 'AthenaPlayerLevel_C_UpdateXp::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_UpdateXp, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000054, "Member 'AthenaPlayerLevel_C_UpdateXp::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_UpdateXp, K2Node_MakeArray_Array) == 0x000058, "Member 'AthenaPlayerLevel_C_UpdateXp::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_UpdateXp, CallFunc_Format_ReturnValue) == 0x000068, "Member 'AthenaPlayerLevel_C_UpdateXp::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_UpdateXp, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000080, "Member 'AthenaPlayerLevel_C_UpdateXp::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function AthenaPlayerLevel.AthenaPlayerLevel_C.UpdateLevel
// 0x0020 (0x0020 - 0x0000)
struct AthenaPlayerLevel_C_UpdateLevel final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(AthenaPlayerLevel_C_UpdateLevel) == 0x000008, "Wrong alignment on AthenaPlayerLevel_C_UpdateLevel");
static_assert(sizeof(AthenaPlayerLevel_C_UpdateLevel) == 0x000020, "Wrong size on AthenaPlayerLevel_C_UpdateLevel");
static_assert(offsetof(AthenaPlayerLevel_C_UpdateLevel, Value) == 0x000000, "Member 'AthenaPlayerLevel_C_UpdateLevel::Value' has a wrong offset!");
static_assert(offsetof(AthenaPlayerLevel_C_UpdateLevel, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'AthenaPlayerLevel_C_UpdateLevel::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

}

