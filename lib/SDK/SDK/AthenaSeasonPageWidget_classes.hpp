#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AthenaSeasonPageWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass AthenaSeasonPageWidget.AthenaSeasonPageWidget_C
// 0x00F0 (0x0350 - 0x0260)
class UAthenaSeasonPageWidget_C final : public USeasonPassPageWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(Transient, DuplicateTransient)
	class UCommonTextBlock*                       BGActiveSeasonNumberText;                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          BorderGradFree;                                    // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          BorderGradPurchasable;                             // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               EndBarRight;                                       // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               EndBarTopRight;                                    // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_129;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftArrowFree;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftArrowPurchasable;                              // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPanelButton_C*                         LeftFreeBtn;                                       // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPanelButton_C*                         LeftPaidBtn;                                       // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Lock;                                              // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             MainGridPanel;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightArrowFree;                                    // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightArrowPurchasable;                             // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPanelButton_C*                         RightFreeBtn;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPanelButton_C*                         RightPaidBtn;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         ColumnsForFull;                                    // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ColumnsForInsert;                                  // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinLevel;                                          // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxLevel;                                          // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   PageLeft;                                          // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   PageRight;                                         // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         MAX_COLUMNS;                                       // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                FirstFree;                                         // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                LastFree;                                          // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                FirstPaid;                                         // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                LastPaid;                                          // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SeasonPassMaxLevel;                                // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void PageLeft__DelegateSignature();
	void PageRight__DelegateSignature();
	void ExecuteUbergraph_AthenaSeasonPageWidget(int32 EntryPoint);
	void OnBattlePassChanged();
	void NavigatePageLeft();
	void NavigatePageRight();
	void Destruct();
	void Construct();
	void BndEvt__LeftPaidBtn_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__LeftFreeBtn_K2Node_ComponentBoundEvent_0_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__RightFreeBtn_K2Node_ComponentBoundEvent_148_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__RightPaidBtn_K2Node_ComponentBoundEvent_131_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void AddLevelWidgets(class UFortSeasonPassLevelInfo* LevelInfo, TArray<class USeasonPassLevelWidget*>* LevelWidgets);
	void IsFull(bool* Full);
	bool ContainsLevel(int32 Level);
	void PagePopulationComplete();
	void AddPaidRewards(int32 InColumn, class UFortSeasonPassLevelInfo* LevelInfo, class UAthenaSeasonLevelPaidRewardsWidget_C** OutputPin);
	class UAthenaSeasonLevelFreeRewardsWidget_C* AddFreeRewards(int32 InColumn, class UFortSeasonPassLevelInfo* LevelInfo);
	void HandleUsingGamepadChanged(bool UsingGamepad);
	void GetFirstLevel(int32* FirstLevel);
	void UpdateDynamicData();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AthenaSeasonPageWidget_C">();
	}
	static class UAthenaSeasonPageWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAthenaSeasonPageWidget_C>();
	}
};
static_assert(alignof(UAthenaSeasonPageWidget_C) == 0x000008, "Wrong alignment on UAthenaSeasonPageWidget_C");
static_assert(sizeof(UAthenaSeasonPageWidget_C) == 0x000350, "Wrong size on UAthenaSeasonPageWidget_C");
static_assert(offsetof(UAthenaSeasonPageWidget_C, UberGraphFrame) == 0x000260, "Member 'UAthenaSeasonPageWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, BGActiveSeasonNumberText) == 0x000268, "Member 'UAthenaSeasonPageWidget_C::BGActiveSeasonNumberText' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, BorderGradFree) == 0x000270, "Member 'UAthenaSeasonPageWidget_C::BorderGradFree' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, BorderGradPurchasable) == 0x000278, "Member 'UAthenaSeasonPageWidget_C::BorderGradPurchasable' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, EndBarRight) == 0x000280, "Member 'UAthenaSeasonPageWidget_C::EndBarRight' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, EndBarTopRight) == 0x000288, "Member 'UAthenaSeasonPageWidget_C::EndBarTopRight' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, Image_0) == 0x000290, "Member 'UAthenaSeasonPageWidget_C::Image_0' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, Image_129) == 0x000298, "Member 'UAthenaSeasonPageWidget_C::Image_129' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, LeftArrowFree) == 0x0002A0, "Member 'UAthenaSeasonPageWidget_C::LeftArrowFree' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, LeftArrowPurchasable) == 0x0002A8, "Member 'UAthenaSeasonPageWidget_C::LeftArrowPurchasable' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, LeftFreeBtn) == 0x0002B0, "Member 'UAthenaSeasonPageWidget_C::LeftFreeBtn' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, LeftPaidBtn) == 0x0002B8, "Member 'UAthenaSeasonPageWidget_C::LeftPaidBtn' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, Lock) == 0x0002C0, "Member 'UAthenaSeasonPageWidget_C::Lock' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, MainGridPanel) == 0x0002C8, "Member 'UAthenaSeasonPageWidget_C::MainGridPanel' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, RightArrowFree) == 0x0002D0, "Member 'UAthenaSeasonPageWidget_C::RightArrowFree' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, RightArrowPurchasable) == 0x0002D8, "Member 'UAthenaSeasonPageWidget_C::RightArrowPurchasable' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, RightFreeBtn) == 0x0002E0, "Member 'UAthenaSeasonPageWidget_C::RightFreeBtn' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, RightPaidBtn) == 0x0002E8, "Member 'UAthenaSeasonPageWidget_C::RightPaidBtn' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, ColumnsForFull) == 0x0002F0, "Member 'UAthenaSeasonPageWidget_C::ColumnsForFull' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, ColumnsForInsert) == 0x0002F4, "Member 'UAthenaSeasonPageWidget_C::ColumnsForInsert' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, MinLevel) == 0x0002F8, "Member 'UAthenaSeasonPageWidget_C::MinLevel' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, MaxLevel) == 0x0002FC, "Member 'UAthenaSeasonPageWidget_C::MaxLevel' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, PageLeft) == 0x000300, "Member 'UAthenaSeasonPageWidget_C::PageLeft' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, PageRight) == 0x000310, "Member 'UAthenaSeasonPageWidget_C::PageRight' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, MAX_COLUMNS) == 0x000320, "Member 'UAthenaSeasonPageWidget_C::MAX_COLUMNS' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, FirstFree) == 0x000328, "Member 'UAthenaSeasonPageWidget_C::FirstFree' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, LastFree) == 0x000330, "Member 'UAthenaSeasonPageWidget_C::LastFree' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, FirstPaid) == 0x000338, "Member 'UAthenaSeasonPageWidget_C::FirstPaid' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, LastPaid) == 0x000340, "Member 'UAthenaSeasonPageWidget_C::LastPaid' has a wrong offset!");
static_assert(offsetof(UAthenaSeasonPageWidget_C, SeasonPassMaxLevel) == 0x000348, "Member 'UAthenaSeasonPageWidget_C::SeasonPassMaxLevel' has a wrong offset!");

}

