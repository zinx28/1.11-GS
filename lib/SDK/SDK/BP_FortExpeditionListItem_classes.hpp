#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FortExpeditionListItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_FortExpeditionListItem.BP_FortExpeditionListItem_C
// 0x0058 (0x07F0 - 0x0798)
class UBP_FortExpeditionListItem_C final : public UFortExpeditionListItemWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0798(0x0008)(Transient, DuplicateTransient)
	class UBasicRatingWidget_C*                   BasicRatingWidget;                                 // 0x07A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_FortExpeditionExpiresWidget_C*      BP_FortExpeditionExpiresWidget;                    // 0x07A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_FortExpeditionReturnsWidget_C*      BP_FortExpeditionReturnsWidget;                    // 0x07B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ExpeditionDuration;                                // 0x07B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ExpeditionName;                                    // 0x07C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  InProgressSwitcher;                                // 0x07C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNormalBangWrapper_C*                   NormalBangWrapper;                                 // 0x07D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         RewardsSet;                                        // 0x07D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonNumericTextBlock*                SuccessChance;                                     // 0x07E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 VechileImage;                                      // 0x07E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FortExpeditionListItem(int32 EntryPoint);
	void OnHovered();
	void BndEvt__InProgressSwitcher_K2Node_ComponentBoundEvent_17_OnActiveWidgetChanged__DelegateSignature(class UWidget* ActiveWidget, int32 ActiveWidgetIndex);
	void OnDeselected();
	void OnItemChanged();
	void OnSelected();
	void SetData(class UObject* InData, class UCommonListView* OwningList);
	void Setup_Base_Item_Data(class UFortExpeditionItem* Expedition);
	void Set_Name(class UFortItem* Param_Item);
	void Get_Expedition_Item_Definition(class UFortItem* Param_Item, class UFortExpeditionItemDefinition** Item_Def);
	void Set_Rewards(class UFortItem* Param_Item);
	void Set_Rating(class UFortExpeditionItem* Param_Item);
	void Set_Rarity(class UFortItem* Param_Item);
	void Set_Remaining_Expiration_Time(class UFortExpeditionItem* Param_Item);
	void Set_In_Progress_State(class UFortExpeditionItem* Param_Item);
	void Set_Expedition_Returns_Data(class UFortExpeditionItem* InputPin);
	void Set_Vehicle_Icon(class UFortExpeditionItem* Expedition);
	void Set_Success_Chance(class UFortExpeditionItem* Param_Item);
	void Update_Bang_State(class UFortAccountItem* Param_Item);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FortExpeditionListItem_C">();
	}
	static class UBP_FortExpeditionListItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_FortExpeditionListItem_C>();
	}
};
static_assert(alignof(UBP_FortExpeditionListItem_C) == 0x000008, "Wrong alignment on UBP_FortExpeditionListItem_C");
static_assert(sizeof(UBP_FortExpeditionListItem_C) == 0x0007F0, "Wrong size on UBP_FortExpeditionListItem_C");
static_assert(offsetof(UBP_FortExpeditionListItem_C, UberGraphFrame) == 0x000798, "Member 'UBP_FortExpeditionListItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_FortExpeditionListItem_C, BasicRatingWidget) == 0x0007A0, "Member 'UBP_FortExpeditionListItem_C::BasicRatingWidget' has a wrong offset!");
static_assert(offsetof(UBP_FortExpeditionListItem_C, BP_FortExpeditionExpiresWidget) == 0x0007A8, "Member 'UBP_FortExpeditionListItem_C::BP_FortExpeditionExpiresWidget' has a wrong offset!");
static_assert(offsetof(UBP_FortExpeditionListItem_C, BP_FortExpeditionReturnsWidget) == 0x0007B0, "Member 'UBP_FortExpeditionListItem_C::BP_FortExpeditionReturnsWidget' has a wrong offset!");
static_assert(offsetof(UBP_FortExpeditionListItem_C, ExpeditionDuration) == 0x0007B8, "Member 'UBP_FortExpeditionListItem_C::ExpeditionDuration' has a wrong offset!");
static_assert(offsetof(UBP_FortExpeditionListItem_C, ExpeditionName) == 0x0007C0, "Member 'UBP_FortExpeditionListItem_C::ExpeditionName' has a wrong offset!");
static_assert(offsetof(UBP_FortExpeditionListItem_C, InProgressSwitcher) == 0x0007C8, "Member 'UBP_FortExpeditionListItem_C::InProgressSwitcher' has a wrong offset!");
static_assert(offsetof(UBP_FortExpeditionListItem_C, NormalBangWrapper) == 0x0007D0, "Member 'UBP_FortExpeditionListItem_C::NormalBangWrapper' has a wrong offset!");
static_assert(offsetof(UBP_FortExpeditionListItem_C, RewardsSet) == 0x0007D8, "Member 'UBP_FortExpeditionListItem_C::RewardsSet' has a wrong offset!");
static_assert(offsetof(UBP_FortExpeditionListItem_C, SuccessChance) == 0x0007E0, "Member 'UBP_FortExpeditionListItem_C::SuccessChance' has a wrong offset!");
static_assert(offsetof(UBP_FortExpeditionListItem_C, VechileImage) == 0x0007E8, "Member 'UBP_FortExpeditionListItem_C::VechileImage' has a wrong offset!");

}

