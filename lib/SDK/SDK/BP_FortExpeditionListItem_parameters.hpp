#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FortExpeditionListItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_FortExpeditionListItem.BP_FortExpeditionListItem_C.ExecuteUbergraph_BP_FortExpeditionListItem
// 0x0040 (0x0040 - 0x0000)
struct BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_InData;                               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonListView*                        K2Node_Event_OwningList;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortExpeditionItem*                    K2Node_DynamicCast_AsFort_Expedition_Item;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_ComponentBoundEvent_ActiveWidget;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_ActiveWidgetIndex;      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem) == 0x000008, "Wrong alignment on BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem");
static_assert(sizeof(BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem) == 0x000040, "Wrong size on BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem");
static_assert(offsetof(BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem, EntryPoint) == 0x000000, "Member 'BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem, Temp_byte_Variable) == 0x000004, "Member 'BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem, K2Node_Event_InData) == 0x000008, "Member 'BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem::K2Node_Event_InData' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem, K2Node_Event_OwningList) == 0x000010, "Member 'BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem::K2Node_Event_OwningList' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem, K2Node_DynamicCast_AsFort_Expedition_Item) == 0x000018, "Member 'BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem::K2Node_DynamicCast_AsFort_Expedition_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem, Temp_int_Variable) == 0x000024, "Member 'BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem, CallFunc_IsValid_ReturnValue2) == 0x000028, "Member 'BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem, K2Node_ComponentBoundEvent_ActiveWidget) == 0x000030, "Member 'BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem::K2Node_ComponentBoundEvent_ActiveWidget' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem, K2Node_ComponentBoundEvent_ActiveWidgetIndex) == 0x000038, "Member 'BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem::K2Node_ComponentBoundEvent_ActiveWidgetIndex' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem, Temp_byte_Variable2) == 0x00003C, "Member 'BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem, K2Node_Select_Default) == 0x00003D, "Member 'BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem, CallFunc_IsValid_ReturnValue3) == 0x00003E, "Member 'BP_FortExpeditionListItem_C_ExecuteUbergraph_BP_FortExpeditionListItem::CallFunc_IsValid_ReturnValue3' has a wrong offset!");

// Function BP_FortExpeditionListItem.BP_FortExpeditionListItem_C.BndEvt__InProgressSwitcher_K2Node_ComponentBoundEvent_17_OnActiveWidgetChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_FortExpeditionListItem_C_BndEvt__InProgressSwitcher_K2Node_ComponentBoundEvent_17_OnActiveWidgetChanged__DelegateSignature final
{
public:
	class UWidget*                                ActiveWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActiveWidgetIndex;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionListItem_C_BndEvt__InProgressSwitcher_K2Node_ComponentBoundEvent_17_OnActiveWidgetChanged__DelegateSignature) == 0x000008, "Wrong alignment on BP_FortExpeditionListItem_C_BndEvt__InProgressSwitcher_K2Node_ComponentBoundEvent_17_OnActiveWidgetChanged__DelegateSignature");
static_assert(sizeof(BP_FortExpeditionListItem_C_BndEvt__InProgressSwitcher_K2Node_ComponentBoundEvent_17_OnActiveWidgetChanged__DelegateSignature) == 0x000010, "Wrong size on BP_FortExpeditionListItem_C_BndEvt__InProgressSwitcher_K2Node_ComponentBoundEvent_17_OnActiveWidgetChanged__DelegateSignature");
static_assert(offsetof(BP_FortExpeditionListItem_C_BndEvt__InProgressSwitcher_K2Node_ComponentBoundEvent_17_OnActiveWidgetChanged__DelegateSignature, ActiveWidget) == 0x000000, "Member 'BP_FortExpeditionListItem_C_BndEvt__InProgressSwitcher_K2Node_ComponentBoundEvent_17_OnActiveWidgetChanged__DelegateSignature::ActiveWidget' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_BndEvt__InProgressSwitcher_K2Node_ComponentBoundEvent_17_OnActiveWidgetChanged__DelegateSignature, ActiveWidgetIndex) == 0x000008, "Member 'BP_FortExpeditionListItem_C_BndEvt__InProgressSwitcher_K2Node_ComponentBoundEvent_17_OnActiveWidgetChanged__DelegateSignature::ActiveWidgetIndex' has a wrong offset!");

// Function BP_FortExpeditionListItem.BP_FortExpeditionListItem_C.SetData
// 0x0010 (0x0010 - 0x0000)
struct BP_FortExpeditionListItem_C_SetData final
{
public:
	class UObject*                                InData;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonListView*                        OwningList;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionListItem_C_SetData) == 0x000008, "Wrong alignment on BP_FortExpeditionListItem_C_SetData");
static_assert(sizeof(BP_FortExpeditionListItem_C_SetData) == 0x000010, "Wrong size on BP_FortExpeditionListItem_C_SetData");
static_assert(offsetof(BP_FortExpeditionListItem_C_SetData, InData) == 0x000000, "Member 'BP_FortExpeditionListItem_C_SetData::InData' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_SetData, OwningList) == 0x000008, "Member 'BP_FortExpeditionListItem_C_SetData::OwningList' has a wrong offset!");

// Function BP_FortExpeditionListItem.BP_FortExpeditionListItem_C.Setup Base Item Data
// 0x00A0 (0x00A0 - 0x0000)
struct BP_FortExpeditionListItem_C_Setup_Base_Item_Data final
{
public:
	class UFortExpeditionItem*                    Expedition;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortExpeditionItemDefinition*          CallFunc_Get_Expedition_Item_Definition_Item_Def;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_FromMinutes_ReturnValue;                  // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTimespanAsText_ReturnValue;            // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
};
static_assert(alignof(BP_FortExpeditionListItem_C_Setup_Base_Item_Data) == 0x000008, "Wrong alignment on BP_FortExpeditionListItem_C_Setup_Base_Item_Data");
static_assert(sizeof(BP_FortExpeditionListItem_C_Setup_Base_Item_Data) == 0x0000A0, "Wrong size on BP_FortExpeditionListItem_C_Setup_Base_Item_Data");
static_assert(offsetof(BP_FortExpeditionListItem_C_Setup_Base_Item_Data, Expedition) == 0x000000, "Member 'BP_FortExpeditionListItem_C_Setup_Base_Item_Data::Expedition' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Setup_Base_Item_Data, CallFunc_Get_Expedition_Item_Definition_Item_Def) == 0x000008, "Member 'BP_FortExpeditionListItem_C_Setup_Base_Item_Data::CallFunc_Get_Expedition_Item_Definition_Item_Def' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Setup_Base_Item_Data, CallFunc_Less_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionListItem_C_Setup_Base_Item_Data::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Setup_Base_Item_Data, CallFunc_FromMinutes_ReturnValue) == 0x000018, "Member 'BP_FortExpeditionListItem_C_Setup_Base_Item_Data::CallFunc_FromMinutes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Setup_Base_Item_Data, CallFunc_GetTimespanAsText_ReturnValue) == 0x000020, "Member 'BP_FortExpeditionListItem_C_Setup_Base_Item_Data::CallFunc_GetTimespanAsText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Setup_Base_Item_Data, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'BP_FortExpeditionListItem_C_Setup_Base_Item_Data::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Setup_Base_Item_Data, K2Node_MakeArray_Array) == 0x000078, "Member 'BP_FortExpeditionListItem_C_Setup_Base_Item_Data::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Setup_Base_Item_Data, CallFunc_Format_ReturnValue) == 0x000088, "Member 'BP_FortExpeditionListItem_C_Setup_Base_Item_Data::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionListItem.BP_FortExpeditionListItem_C.Set Name
// 0x0020 (0x0020 - 0x0000)
struct BP_FortExpeditionListItem_C_Set_Name final
{
public:
	class UFortItem*                              Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(BP_FortExpeditionListItem_C_Set_Name) == 0x000008, "Wrong alignment on BP_FortExpeditionListItem_C_Set_Name");
static_assert(sizeof(BP_FortExpeditionListItem_C_Set_Name) == 0x000020, "Wrong size on BP_FortExpeditionListItem_C_Set_Name");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Name, Param_Item) == 0x000000, "Member 'BP_FortExpeditionListItem_C_Set_Name::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Name, CallFunc_GetDisplayName_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionListItem_C_Set_Name::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionListItem.BP_FortExpeditionListItem_C.Get Expedition Item Definition
// 0x0028 (0x0028 - 0x0000)
struct BP_FortExpeditionListItem_C_Get_Expedition_Item_Definition final
{
public:
	class UFortItem*                              Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortExpeditionItemDefinition*          Item_Def;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemDefinition*                    CallFunc_GetItemDefinitionBP_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortExpeditionItemDefinition*          K2Node_DynamicCast_AsFort_Expedition_Item_Definition; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionListItem_C_Get_Expedition_Item_Definition) == 0x000008, "Wrong alignment on BP_FortExpeditionListItem_C_Get_Expedition_Item_Definition");
static_assert(sizeof(BP_FortExpeditionListItem_C_Get_Expedition_Item_Definition) == 0x000028, "Wrong size on BP_FortExpeditionListItem_C_Get_Expedition_Item_Definition");
static_assert(offsetof(BP_FortExpeditionListItem_C_Get_Expedition_Item_Definition, Param_Item) == 0x000000, "Member 'BP_FortExpeditionListItem_C_Get_Expedition_Item_Definition::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Get_Expedition_Item_Definition, Item_Def) == 0x000008, "Member 'BP_FortExpeditionListItem_C_Get_Expedition_Item_Definition::Item_Def' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Get_Expedition_Item_Definition, CallFunc_GetItemDefinitionBP_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionListItem_C_Get_Expedition_Item_Definition::CallFunc_GetItemDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Get_Expedition_Item_Definition, K2Node_DynamicCast_AsFort_Expedition_Item_Definition) == 0x000018, "Member 'BP_FortExpeditionListItem_C_Get_Expedition_Item_Definition::K2Node_DynamicCast_AsFort_Expedition_Item_Definition' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Get_Expedition_Item_Definition, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_FortExpeditionListItem_C_Get_Expedition_Item_Definition::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_FortExpeditionListItem.BP_FortExpeditionListItem_C.Set Rewards
// 0x00D8 (0x00D8 - 0x0000)
struct BP_FortExpeditionListItem_C_Set_Rewards final
{
public:
	class UFortItem*                              Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortExpeditionItemDefinition*          CallFunc_Get_Expedition_Item_Definition_Item_Def;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortCardPackItemDefinition*>    CallFunc_GetAllRewards_OutRewards;                 // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	class UFortCardPackItemDefinition*            CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue; // 0x0038(0x0078)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SimpleItemWidget_C*                 CallFunc_Create_ReturnValue;                       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddChildToHorizontalBox_ReturnValue;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionListItem_C_Set_Rewards) == 0x000008, "Wrong alignment on BP_FortExpeditionListItem_C_Set_Rewards");
static_assert(sizeof(BP_FortExpeditionListItem_C_Set_Rewards) == 0x0000D8, "Wrong size on BP_FortExpeditionListItem_C_Set_Rewards");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Rewards, Param_Item) == 0x000000, "Member 'BP_FortExpeditionListItem_C_Set_Rewards::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Rewards, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_FortExpeditionListItem_C_Set_Rewards::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Rewards, CallFunc_Get_Expedition_Item_Definition_Item_Def) == 0x000010, "Member 'BP_FortExpeditionListItem_C_Set_Rewards::CallFunc_Get_Expedition_Item_Definition_Item_Def' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Rewards, CallFunc_GetAllRewards_OutRewards) == 0x000018, "Member 'BP_FortExpeditionListItem_C_Set_Rewards::CallFunc_GetAllRewards_OutRewards' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Rewards, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_FortExpeditionListItem_C_Set_Rewards::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Rewards, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_FortExpeditionListItem_C_Set_Rewards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Rewards, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BP_FortExpeditionListItem_C_Set_Rewards::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Rewards, CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue) == 0x000038, "Member 'BP_FortExpeditionListItem_C_Set_Rewards::CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Rewards, Temp_int_Loop_Counter_Variable) == 0x0000B0, "Member 'BP_FortExpeditionListItem_C_Set_Rewards::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Rewards, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_FortExpeditionListItem_C_Set_Rewards::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Rewards, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_FortExpeditionListItem_C_Set_Rewards::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Rewards, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000C0, "Member 'BP_FortExpeditionListItem_C_Set_Rewards::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Rewards, CallFunc_Create_ReturnValue) == 0x0000C8, "Member 'BP_FortExpeditionListItem_C_Set_Rewards::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Rewards, CallFunc_AddChildToHorizontalBox_ReturnValue) == 0x0000D0, "Member 'BP_FortExpeditionListItem_C_Set_Rewards::CallFunc_AddChildToHorizontalBox_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionListItem.BP_FortExpeditionListItem_C.Set Rating
// 0x0010 (0x0010 - 0x0000)
struct BP_FortExpeditionListItem_C_Set_Rating final
{
public:
	class UFortExpeditionItem*                    Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetPowerLevel_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionListItem_C_Set_Rating) == 0x000008, "Wrong alignment on BP_FortExpeditionListItem_C_Set_Rating");
static_assert(sizeof(BP_FortExpeditionListItem_C_Set_Rating) == 0x000010, "Wrong size on BP_FortExpeditionListItem_C_Set_Rating");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Rating, Param_Item) == 0x000000, "Member 'BP_FortExpeditionListItem_C_Set_Rating::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Rating, CallFunc_GetTargetPowerLevel_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionListItem_C_Set_Rating::CallFunc_GetTargetPowerLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Rating, CallFunc_FTrunc_ReturnValue) == 0x00000C, "Member 'BP_FortExpeditionListItem_C_Set_Rating::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionListItem.BP_FortExpeditionListItem_C.Set Rarity
// 0x0090 (0x0090 - 0x0000)
struct BP_FortExpeditionListItem_C_Set_Rarity final
{
public:
	class UFortItem*                              Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortRarity                                   CallFunc_GetRarity_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortRarityItemData                    CallFunc_BPGetRarityData_ReturnValue;              // 0x0010(0x0080)()
};
static_assert(alignof(BP_FortExpeditionListItem_C_Set_Rarity) == 0x000008, "Wrong alignment on BP_FortExpeditionListItem_C_Set_Rarity");
static_assert(sizeof(BP_FortExpeditionListItem_C_Set_Rarity) == 0x000090, "Wrong size on BP_FortExpeditionListItem_C_Set_Rarity");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Rarity, Param_Item) == 0x000000, "Member 'BP_FortExpeditionListItem_C_Set_Rarity::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Rarity, CallFunc_GetRarity_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionListItem_C_Set_Rarity::CallFunc_GetRarity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Rarity, CallFunc_BPGetRarityData_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionListItem_C_Set_Rarity::CallFunc_BPGetRarityData_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionListItem.BP_FortExpeditionListItem_C.Set Remaining Expiration Time
// 0x0008 (0x0008 - 0x0000)
struct BP_FortExpeditionListItem_C_Set_Remaining_Expiration_Time final
{
public:
	class UFortExpeditionItem*                    Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionListItem_C_Set_Remaining_Expiration_Time) == 0x000008, "Wrong alignment on BP_FortExpeditionListItem_C_Set_Remaining_Expiration_Time");
static_assert(sizeof(BP_FortExpeditionListItem_C_Set_Remaining_Expiration_Time) == 0x000008, "Wrong size on BP_FortExpeditionListItem_C_Set_Remaining_Expiration_Time");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Remaining_Expiration_Time, Param_Item) == 0x000000, "Member 'BP_FortExpeditionListItem_C_Set_Remaining_Expiration_Time::Param_Item' has a wrong offset!");

// Function BP_FortExpeditionListItem.BP_FortExpeditionListItem_C.Set In Progress State
// 0x0018 (0x0018 - 0x0000)
struct BP_FortExpeditionListItem_C_Set_In_Progress_State final
{
public:
	class UFortExpeditionItem*                    Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsExpeditionInProgress_ReturnValue;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionListItem_C_Set_In_Progress_State) == 0x000008, "Wrong alignment on BP_FortExpeditionListItem_C_Set_In_Progress_State");
static_assert(sizeof(BP_FortExpeditionListItem_C_Set_In_Progress_State) == 0x000018, "Wrong size on BP_FortExpeditionListItem_C_Set_In_Progress_State");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_In_Progress_State, Param_Item) == 0x000000, "Member 'BP_FortExpeditionListItem_C_Set_In_Progress_State::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_In_Progress_State, Temp_bool_Variable) == 0x000008, "Member 'BP_FortExpeditionListItem_C_Set_In_Progress_State::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_In_Progress_State, CallFunc_IsExpeditionInProgress_ReturnValue) == 0x000009, "Member 'BP_FortExpeditionListItem_C_Set_In_Progress_State::CallFunc_IsExpeditionInProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_In_Progress_State, Temp_int_Variable) == 0x00000C, "Member 'BP_FortExpeditionListItem_C_Set_In_Progress_State::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_In_Progress_State, Temp_int_Variable2) == 0x000010, "Member 'BP_FortExpeditionListItem_C_Set_In_Progress_State::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_In_Progress_State, K2Node_Select_Default) == 0x000014, "Member 'BP_FortExpeditionListItem_C_Set_In_Progress_State::K2Node_Select_Default' has a wrong offset!");

// Function BP_FortExpeditionListItem.BP_FortExpeditionListItem_C.Set Expedition Returns Data
// 0x0008 (0x0008 - 0x0000)
struct BP_FortExpeditionListItem_C_Set_Expedition_Returns_Data final
{
public:
	class UFortExpeditionItem*                    InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionListItem_C_Set_Expedition_Returns_Data) == 0x000008, "Wrong alignment on BP_FortExpeditionListItem_C_Set_Expedition_Returns_Data");
static_assert(sizeof(BP_FortExpeditionListItem_C_Set_Expedition_Returns_Data) == 0x000008, "Wrong size on BP_FortExpeditionListItem_C_Set_Expedition_Returns_Data");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Expedition_Returns_Data, InputPin) == 0x000000, "Member 'BP_FortExpeditionListItem_C_Set_Expedition_Returns_Data::InputPin' has a wrong offset!");

// Function BP_FortExpeditionListItem.BP_FortExpeditionListItem_C.Set Vehicle Icon
// 0x0328 (0x0328 - 0x0000)
struct BP_FortExpeditionListItem_C_Set_Vehicle_Icon final
{
public:
	class UFortExpeditionItem*                    Expedition;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortTooltipUIContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetVehicleTagRequiredForExpedition_ReturnValue; // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FFortTagUIData                         CallFunc_GetUIDataForTag_OutData;                  // 0x0018(0x0308)()
	bool                                          CallFunc_GetUIDataForTag_ReturnValue;              // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionListItem_C_Set_Vehicle_Icon) == 0x000008, "Wrong alignment on BP_FortExpeditionListItem_C_Set_Vehicle_Icon");
static_assert(sizeof(BP_FortExpeditionListItem_C_Set_Vehicle_Icon) == 0x000328, "Wrong size on BP_FortExpeditionListItem_C_Set_Vehicle_Icon");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Vehicle_Icon, Expedition) == 0x000000, "Member 'BP_FortExpeditionListItem_C_Set_Vehicle_Icon::Expedition' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Vehicle_Icon, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionListItem_C_Set_Vehicle_Icon::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Vehicle_Icon, CallFunc_GetVehicleTagRequiredForExpedition_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionListItem_C_Set_Vehicle_Icon::CallFunc_GetVehicleTagRequiredForExpedition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Vehicle_Icon, CallFunc_GetUIDataForTag_OutData) == 0x000018, "Member 'BP_FortExpeditionListItem_C_Set_Vehicle_Icon::CallFunc_GetUIDataForTag_OutData' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Vehicle_Icon, CallFunc_GetUIDataForTag_ReturnValue) == 0x000320, "Member 'BP_FortExpeditionListItem_C_Set_Vehicle_Icon::CallFunc_GetUIDataForTag_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionListItem.BP_FortExpeditionListItem_C.Set Success Chance
// 0x0060 (0x0060 - 0x0000)
struct BP_FortExpeditionListItem_C_Set_Success_Chance final
{
public:
	class UFortExpeditionItem*                    Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SquadId;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetExpeditionSquadId_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExpeditionInProgress_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHomeBaseContext*                       CallFunc_GetContext_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortItem*>                      CallFunc_GetItemsInSquad_ReturnValue;              // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_CalculateTotalPower_ReturnValue;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateExpeditionPercentageChanceForSuccess_ReturnValue; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FortExpeditionListItem_C_Set_Success_Chance) == 0x000008, "Wrong alignment on BP_FortExpeditionListItem_C_Set_Success_Chance");
static_assert(sizeof(BP_FortExpeditionListItem_C_Set_Success_Chance) == 0x000060, "Wrong size on BP_FortExpeditionListItem_C_Set_Success_Chance");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Success_Chance, Param_Item) == 0x000000, "Member 'BP_FortExpeditionListItem_C_Set_Success_Chance::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Success_Chance, SquadId) == 0x000008, "Member 'BP_FortExpeditionListItem_C_Set_Success_Chance::SquadId' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Success_Chance, CallFunc_GetExpeditionSquadId_ReturnValue) == 0x000010, "Member 'BP_FortExpeditionListItem_C_Set_Success_Chance::CallFunc_GetExpeditionSquadId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Success_Chance, CallFunc_IsExpeditionInProgress_ReturnValue) == 0x000018, "Member 'BP_FortExpeditionListItem_C_Set_Success_Chance::CallFunc_IsExpeditionInProgress_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Success_Chance, CallFunc_GetContext_ReturnValue) == 0x000020, "Member 'BP_FortExpeditionListItem_C_Set_Success_Chance::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Success_Chance, CallFunc_GetItemsInSquad_ReturnValue) == 0x000028, "Member 'BP_FortExpeditionListItem_C_Set_Success_Chance::CallFunc_GetItemsInSquad_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Success_Chance, CallFunc_NotEqual_NameName_ReturnValue) == 0x000038, "Member 'BP_FortExpeditionListItem_C_Set_Success_Chance::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Success_Chance, CallFunc_GetOwningPlayer_ReturnValue) == 0x000040, "Member 'BP_FortExpeditionListItem_C_Set_Success_Chance::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Success_Chance, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000048, "Member 'BP_FortExpeditionListItem_C_Set_Success_Chance::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Success_Chance, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_FortExpeditionListItem_C_Set_Success_Chance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Success_Chance, CallFunc_CalculateTotalPower_ReturnValue) == 0x000054, "Member 'BP_FortExpeditionListItem_C_Set_Success_Chance::CallFunc_CalculateTotalPower_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Set_Success_Chance, CallFunc_CalculateExpeditionPercentageChanceForSuccess_ReturnValue) == 0x000058, "Member 'BP_FortExpeditionListItem_C_Set_Success_Chance::CallFunc_CalculateExpeditionPercentageChanceForSuccess_ReturnValue' has a wrong offset!");

// Function BP_FortExpeditionListItem.BP_FortExpeditionListItem_C.Update Bang State
// 0x0010 (0x0010 - 0x0000)
struct BP_FortExpeditionListItem_C_Update_Bang_State final
{
public:
	class UFortAccountItem*                       Param_Item;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasBeenSeenLocally_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FortExpeditionListItem_C_Update_Bang_State) == 0x000008, "Wrong alignment on BP_FortExpeditionListItem_C_Update_Bang_State");
static_assert(sizeof(BP_FortExpeditionListItem_C_Update_Bang_State) == 0x000010, "Wrong size on BP_FortExpeditionListItem_C_Update_Bang_State");
static_assert(offsetof(BP_FortExpeditionListItem_C_Update_Bang_State, Param_Item) == 0x000000, "Member 'BP_FortExpeditionListItem_C_Update_Bang_State::Param_Item' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Update_Bang_State, CallFunc_HasBeenSeenLocally_ReturnValue) == 0x000008, "Member 'BP_FortExpeditionListItem_C_Update_Bang_State::CallFunc_HasBeenSeenLocally_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FortExpeditionListItem_C_Update_Bang_State, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_FortExpeditionListItem_C_Update_Bang_State::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

