#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Hex_CriticalMission

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_Hex_PARENT_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Hex_CriticalMission.BP_Hex_CriticalMission_C
// 0x00C8 (0x07E0 - 0x0718)
class ABP_Hex_CriticalMission_C final : public ABP_Hex_PARENT_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Hex_CriticalMission_C;           // 0x0718(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_QuickplaySmoke;                                  // 0x0720(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Particle03;                                        // 0x0728(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Particle01;                                        // 0x0730(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_HexCloudRadar_Wire;                              // 0x0738(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_HexCloudRadar_02;                                // 0x0740(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_HexCloudRadar_01;                                // 0x0748(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_HexCloudRadar_03;                                // 0x0750(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CriticalMission_Rotate01;                       // 0x0758(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_HexCloudCircle_04;                               // 0x0760(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_HexCloudCircle_03;                               // 0x0768(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_HexCloudCircle_02;                               // 0x0770(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CloudRotateDummy;                                  // 0x0778(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_HexRadarFalloffMesh;                             // 0x0780(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Rotate_MPCRotation_0011687F41B08479D913F5901B8B4F9D; // 0x0788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rotate_MeshRotation_0011687F41B08479D913F5901B8B4F9D; // 0x078C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Rotate__Direction_0011687F41B08479D913F5901B8B4F9D; // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_791[0x7];                                      // 0x0791(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Rotate;                                            // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Hex_PARENT_C*>               ActiveTilesArray;                                  // 0x07A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               RadarWireMID;                                      // 0x07B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CloudHeightZ;                                      // 0x07B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7BC[0x4];                                      // 0x07BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DMMinusCloud01;                                    // 0x07C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMMinusCloud02;                                    // 0x07C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CloudLightVector;                                  // 0x07D0(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Hex_CriticalMission(int32 EntryPoint);
	void ActivateCriticalMission();
	void DeactivateCriticalMission();
	void Rotate__UpdateFunc();
	void Rotate__FinishedFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Hex_CriticalMission_C">();
	}
	static class ABP_Hex_CriticalMission_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Hex_CriticalMission_C>();
	}
};
static_assert(alignof(ABP_Hex_CriticalMission_C) == 0x000008, "Wrong alignment on ABP_Hex_CriticalMission_C");
static_assert(sizeof(ABP_Hex_CriticalMission_C) == 0x0007E0, "Wrong size on ABP_Hex_CriticalMission_C");
static_assert(offsetof(ABP_Hex_CriticalMission_C, UberGraphFrame_BP_Hex_CriticalMission_C) == 0x000718, "Member 'ABP_Hex_CriticalMission_C::UberGraphFrame_BP_Hex_CriticalMission_C' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, P_QuickplaySmoke) == 0x000720, "Member 'ABP_Hex_CriticalMission_C::P_QuickplaySmoke' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, Particle03) == 0x000728, "Member 'ABP_Hex_CriticalMission_C::Particle03' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, Particle01) == 0x000730, "Member 'ABP_Hex_CriticalMission_C::Particle01' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, S_HexCloudRadar_Wire) == 0x000738, "Member 'ABP_Hex_CriticalMission_C::S_HexCloudRadar_Wire' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, S_HexCloudRadar_02) == 0x000740, "Member 'ABP_Hex_CriticalMission_C::S_HexCloudRadar_02' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, S_HexCloudRadar_01) == 0x000748, "Member 'ABP_Hex_CriticalMission_C::S_HexCloudRadar_01' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, S_HexCloudRadar_03) == 0x000750, "Member 'ABP_Hex_CriticalMission_C::S_HexCloudRadar_03' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, SM_CriticalMission_Rotate01) == 0x000758, "Member 'ABP_Hex_CriticalMission_C::SM_CriticalMission_Rotate01' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, S_HexCloudCircle_04) == 0x000760, "Member 'ABP_Hex_CriticalMission_C::S_HexCloudCircle_04' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, S_HexCloudCircle_03) == 0x000768, "Member 'ABP_Hex_CriticalMission_C::S_HexCloudCircle_03' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, S_HexCloudCircle_02) == 0x000770, "Member 'ABP_Hex_CriticalMission_C::S_HexCloudCircle_02' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, CloudRotateDummy) == 0x000778, "Member 'ABP_Hex_CriticalMission_C::CloudRotateDummy' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, S_HexRadarFalloffMesh) == 0x000780, "Member 'ABP_Hex_CriticalMission_C::S_HexRadarFalloffMesh' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, Rotate_MPCRotation_0011687F41B08479D913F5901B8B4F9D) == 0x000788, "Member 'ABP_Hex_CriticalMission_C::Rotate_MPCRotation_0011687F41B08479D913F5901B8B4F9D' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, Rotate_MeshRotation_0011687F41B08479D913F5901B8B4F9D) == 0x00078C, "Member 'ABP_Hex_CriticalMission_C::Rotate_MeshRotation_0011687F41B08479D913F5901B8B4F9D' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, Rotate__Direction_0011687F41B08479D913F5901B8B4F9D) == 0x000790, "Member 'ABP_Hex_CriticalMission_C::Rotate__Direction_0011687F41B08479D913F5901B8B4F9D' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, Rotate) == 0x000798, "Member 'ABP_Hex_CriticalMission_C::Rotate' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, ActiveTilesArray) == 0x0007A0, "Member 'ABP_Hex_CriticalMission_C::ActiveTilesArray' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, RadarWireMID) == 0x0007B0, "Member 'ABP_Hex_CriticalMission_C::RadarWireMID' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, CloudHeightZ) == 0x0007B8, "Member 'ABP_Hex_CriticalMission_C::CloudHeightZ' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, DMMinusCloud01) == 0x0007C0, "Member 'ABP_Hex_CriticalMission_C::DMMinusCloud01' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, DMMinusCloud02) == 0x0007C8, "Member 'ABP_Hex_CriticalMission_C::DMMinusCloud02' has a wrong offset!");
static_assert(offsetof(ABP_Hex_CriticalMission_C, CloudLightVector) == 0x0007D0, "Member 'ABP_Hex_CriticalMission_C::CloudLightVector' has a wrong offset!");

}

