#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Proj_Athena_Bandage

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_Proj_Athena_Bandage.B_Proj_Athena_Bandage_C.ExecuteUbergraph_B_Proj_Athena_Bandage
// 0x01D0 (0x01D0 - 0x0000)
struct B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0008(0x0080)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x00AC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x00B8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x00C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit3;                                 // 0x00D0(0x0080)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             K2Node_Event_Hit2;                                 // 0x0150(0x0080)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage) == 0x000008, "Wrong alignment on B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage");
static_assert(sizeof(B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage) == 0x0001D0, "Wrong size on B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage, EntryPoint) == 0x000000, "Member 'B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage, K2Node_Event_Hit) == 0x000008, "Member 'B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage, Temp_bool_Has_Been_Initd_Variable) == 0x000088, "Member 'B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage, Temp_bool_IsClosed_Variable) == 0x000089, "Member 'B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage, K2Node_Event_MyComp) == 0x000090, "Member 'B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage, K2Node_Event_Other) == 0x000098, "Member 'B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage, K2Node_Event_OtherComp) == 0x0000A0, "Member 'B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage, K2Node_Event_bSelfMoved) == 0x0000A8, "Member 'B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage, K2Node_Event_HitLocation) == 0x0000AC, "Member 'B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage, K2Node_Event_HitNormal) == 0x0000B8, "Member 'B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage, K2Node_Event_NormalImpulse) == 0x0000C4, "Member 'B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage, K2Node_Event_Hit3) == 0x0000D0, "Member 'B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage::K2Node_Event_Hit3' has a wrong offset!");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage, K2Node_Event_Hit2) == 0x000150, "Member 'B_Proj_Athena_Bandage_C_ExecuteUbergraph_B_Proj_Athena_Bandage::K2Node_Event_Hit2' has a wrong offset!");

// Function B_Proj_Athena_Bandage.B_Proj_Athena_Bandage_C.OnBounce
// 0x0080 (0x0080 - 0x0000)
struct B_Proj_Athena_Bandage_C_OnBounce final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0080)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_Proj_Athena_Bandage_C_OnBounce) == 0x000008, "Wrong alignment on B_Proj_Athena_Bandage_C_OnBounce");
static_assert(sizeof(B_Proj_Athena_Bandage_C_OnBounce) == 0x000080, "Wrong size on B_Proj_Athena_Bandage_C_OnBounce");
static_assert(offsetof(B_Proj_Athena_Bandage_C_OnBounce, Hit) == 0x000000, "Member 'B_Proj_Athena_Bandage_C_OnBounce::Hit' has a wrong offset!");

// Function B_Proj_Athena_Bandage.B_Proj_Athena_Bandage_C.OnStop
// 0x0080 (0x0080 - 0x0000)
struct B_Proj_Athena_Bandage_C_OnStop final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0080)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_Proj_Athena_Bandage_C_OnStop) == 0x000008, "Wrong alignment on B_Proj_Athena_Bandage_C_OnStop");
static_assert(sizeof(B_Proj_Athena_Bandage_C_OnStop) == 0x000080, "Wrong size on B_Proj_Athena_Bandage_C_OnStop");
static_assert(offsetof(B_Proj_Athena_Bandage_C_OnStop, Hit) == 0x000000, "Member 'B_Proj_Athena_Bandage_C_OnStop::Hit' has a wrong offset!");

// Function B_Proj_Athena_Bandage.B_Proj_Athena_Bandage_C.ReceiveHit
// 0x00C0 (0x00C0 - 0x0000)
struct B_Proj_Athena_Bandage_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x0080)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_Proj_Athena_Bandage_C_ReceiveHit) == 0x000008, "Wrong alignment on B_Proj_Athena_Bandage_C_ReceiveHit");
static_assert(sizeof(B_Proj_Athena_Bandage_C_ReceiveHit) == 0x0000C0, "Wrong size on B_Proj_Athena_Bandage_C_ReceiveHit");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ReceiveHit, MyComp) == 0x000000, "Member 'B_Proj_Athena_Bandage_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ReceiveHit, Other) == 0x000008, "Member 'B_Proj_Athena_Bandage_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ReceiveHit, OtherComp) == 0x000010, "Member 'B_Proj_Athena_Bandage_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'B_Proj_Athena_Bandage_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'B_Proj_Athena_Bandage_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ReceiveHit, HitNormal) == 0x000028, "Member 'B_Proj_Athena_Bandage_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'B_Proj_Athena_Bandage_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_Proj_Athena_Bandage_C_ReceiveHit, Hit) == 0x000040, "Member 'B_Proj_Athena_Bandage_C_ReceiveHit::Hit' has a wrong offset!");

}

