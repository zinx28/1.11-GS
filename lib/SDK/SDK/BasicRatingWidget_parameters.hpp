#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BasicRatingWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function BasicRatingWidget.BasicRatingWidget_C.ExecuteUbergraph_BasicRatingWidget
// 0x00C8 (0x00C8 - 0x0000)
struct BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBrushSize                                Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0008(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable2;                             // 0x0010(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable3;                             // 0x0018(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable4;                             // 0x0020(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable5;                             // 0x0028(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable6;                             // 0x0030(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_GetBorderVisibility_Visibility;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x0040(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0048(0x0078)()
	ESlateVisibility                              K2Node_Select2_Default;                            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget) == 0x000008, "Wrong alignment on BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget");
static_assert(sizeof(BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget) == 0x0000C8, "Wrong size on BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget");
static_assert(offsetof(BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget, EntryPoint) == 0x000000, "Member 'BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget, Temp_byte_Variable) == 0x000004, "Member 'BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget, Temp_struct_Variable) == 0x000008, "Member 'BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget, Temp_struct_Variable2) == 0x000010, "Member 'BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget, Temp_struct_Variable3) == 0x000018, "Member 'BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget, Temp_struct_Variable4) == 0x000020, "Member 'BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget, Temp_struct_Variable5) == 0x000028, "Member 'BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget::Temp_struct_Variable5' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget, Temp_struct_Variable6) == 0x000030, "Member 'BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget::Temp_struct_Variable6' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget, Temp_bool_Variable) == 0x000038, "Member 'BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget, Temp_byte_Variable2) == 0x000039, "Member 'BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget, Temp_byte_Variable3) == 0x00003A, "Member 'BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget, K2Node_Event_IsDesignTime) == 0x00003B, "Member 'BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget, CallFunc_GetBorderVisibility_Visibility) == 0x00003C, "Member 'BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget::CallFunc_GetBorderVisibility_Visibility' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget, K2Node_Select_Default) == 0x000040, "Member 'BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget, K2Node_MakeStruct_SlateBrush) == 0x000048, "Member 'BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget, K2Node_Select2_Default) == 0x0000C0, "Member 'BasicRatingWidget_C_ExecuteUbergraph_BasicRatingWidget::K2Node_Select2_Default' has a wrong offset!");

// Function BasicRatingWidget.BasicRatingWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BasicRatingWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BasicRatingWidget_C_PreConstruct) == 0x000001, "Wrong alignment on BasicRatingWidget_C_PreConstruct");
static_assert(sizeof(BasicRatingWidget_C_PreConstruct) == 0x000001, "Wrong size on BasicRatingWidget_C_PreConstruct");
static_assert(offsetof(BasicRatingWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BasicRatingWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BasicRatingWidget.BasicRatingWidget_C.GetBorderVisibility
// 0x0005 (0x0005 - 0x0000)
struct BasicRatingWidget_C_GetBorderVisibility final
{
public:
	ESlateVisibility                              Param_Visibility;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BasicRatingWidget_C_GetBorderVisibility) == 0x000001, "Wrong alignment on BasicRatingWidget_C_GetBorderVisibility");
static_assert(sizeof(BasicRatingWidget_C_GetBorderVisibility) == 0x000005, "Wrong size on BasicRatingWidget_C_GetBorderVisibility");
static_assert(offsetof(BasicRatingWidget_C_GetBorderVisibility, Param_Visibility) == 0x000000, "Member 'BasicRatingWidget_C_GetBorderVisibility::Param_Visibility' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_GetBorderVisibility, Temp_bool_Variable) == 0x000001, "Member 'BasicRatingWidget_C_GetBorderVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_GetBorderVisibility, Temp_byte_Variable) == 0x000002, "Member 'BasicRatingWidget_C_GetBorderVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_GetBorderVisibility, Temp_byte_Variable2) == 0x000003, "Member 'BasicRatingWidget_C_GetBorderVisibility::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_GetBorderVisibility, K2Node_Select_Default) == 0x000004, "Member 'BasicRatingWidget_C_GetBorderVisibility::K2Node_Select_Default' has a wrong offset!");

// Function BasicRatingWidget.BasicRatingWidget_C.Update Power Rating Value
// 0x0008 (0x0008 - 0x0000)
struct BasicRatingWidget_C_Update_Power_Rating_Value final
{
public:
	int32                                         Rating;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BasicRatingWidget_C_Update_Power_Rating_Value) == 0x000004, "Wrong alignment on BasicRatingWidget_C_Update_Power_Rating_Value");
static_assert(sizeof(BasicRatingWidget_C_Update_Power_Rating_Value) == 0x000008, "Wrong size on BasicRatingWidget_C_Update_Power_Rating_Value");
static_assert(offsetof(BasicRatingWidget_C_Update_Power_Rating_Value, Rating) == 0x000000, "Member 'BasicRatingWidget_C_Update_Power_Rating_Value::Rating' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_Update_Power_Rating_Value, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'BasicRatingWidget_C_Update_Power_Rating_Value::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function BasicRatingWidget.BasicRatingWidget_C.Update Border Color
// 0x0028 (0x0028 - 0x0000)
struct BasicRatingWidget_C_Update_Border_Color final
{
public:
	struct FLinearColor                           Color1;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color2;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BasicRatingWidget_C_Update_Border_Color) == 0x000008, "Wrong alignment on BasicRatingWidget_C_Update_Border_Color");
static_assert(sizeof(BasicRatingWidget_C_Update_Border_Color) == 0x000028, "Wrong size on BasicRatingWidget_C_Update_Border_Color");
static_assert(offsetof(BasicRatingWidget_C_Update_Border_Color, Color1) == 0x000000, "Member 'BasicRatingWidget_C_Update_Border_Color::Color1' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_Update_Border_Color, Color2) == 0x000010, "Member 'BasicRatingWidget_C_Update_Border_Color::Color2' has a wrong offset!");
static_assert(offsetof(BasicRatingWidget_C_Update_Border_Color, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000020, "Member 'BasicRatingWidget_C_Update_Border_Color::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function BasicRatingWidget.BasicRatingWidget_C.Get Current Rating
// 0x0004 (0x0004 - 0x0000)
struct BasicRatingWidget_C_Get_Current_Rating final
{
public:
	float                                         CurrentNumericValue;                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BasicRatingWidget_C_Get_Current_Rating) == 0x000004, "Wrong alignment on BasicRatingWidget_C_Get_Current_Rating");
static_assert(sizeof(BasicRatingWidget_C_Get_Current_Rating) == 0x000004, "Wrong size on BasicRatingWidget_C_Get_Current_Rating");
static_assert(offsetof(BasicRatingWidget_C_Get_Current_Rating, CurrentNumericValue) == 0x000000, "Member 'BasicRatingWidget_C_Get_Current_Rating::CurrentNumericValue' has a wrong offset!");

// Function BasicRatingWidget.BasicRatingWidget_C.Update Power Rating Style
// 0x0008 (0x0008 - 0x0000)
struct BasicRatingWidget_C_Update_Power_Rating_Style final
{
public:
	class UClass*                                 InStyle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BasicRatingWidget_C_Update_Power_Rating_Style) == 0x000008, "Wrong alignment on BasicRatingWidget_C_Update_Power_Rating_Style");
static_assert(sizeof(BasicRatingWidget_C_Update_Power_Rating_Style) == 0x000008, "Wrong size on BasicRatingWidget_C_Update_Power_Rating_Style");
static_assert(offsetof(BasicRatingWidget_C_Update_Power_Rating_Style, InStyle) == 0x000000, "Member 'BasicRatingWidget_C_Update_Power_Rating_Style::InStyle' has a wrong offset!");

}

