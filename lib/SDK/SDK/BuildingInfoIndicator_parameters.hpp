#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BuildingInfoIndicator

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BuildingInfoIndicator.BuildingInfoIndicator_C.ExecuteUbergraph_BuildingInfoIndicator
// 0x00B0 (0x00B0 - 0x0000)
struct BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EFortQuickBars QuickbarIndex, int32 Slot)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float CurrentDurability, float MaxDurability)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float HitPointStat)>           K2Node_CreateDelegate_OutputDelegate3;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class ABuildingActor* FocusedBuilding)> K2Node_CreateDelegate_OutputDelegate5;             // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(struct FFortFocusedBuildingInfo& FocusedBuildingInfo)> K2Node_CreateDelegate_OutputDelegate6;             // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bIsTargeting)>            K2Node_CreateDelegate_OutputDelegate7;             // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 InteractionCost)>        K2Node_CreateDelegate_OutputDelegate8;             // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class ABuildingTrap* BuildingAttachedTrap)> K2Node_CreateDelegate_OutputDelegate9;             // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue2;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue3;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator) == 0x000008, "Wrong alignment on BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator");
static_assert(sizeof(BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator) == 0x0000B0, "Wrong size on BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator");
static_assert(offsetof(BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator, EntryPoint) == 0x000000, "Member 'BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator, K2Node_CreateDelegate_OutputDelegate2) == 0x000018, "Member 'BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator, K2Node_CreateDelegate_OutputDelegate3) == 0x000028, "Member 'BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator, K2Node_CreateDelegate_OutputDelegate4) == 0x000038, "Member 'BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator, K2Node_CreateDelegate_OutputDelegate5) == 0x000048, "Member 'BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator, K2Node_CreateDelegate_OutputDelegate6) == 0x000058, "Member 'BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator, K2Node_CreateDelegate_OutputDelegate7) == 0x000068, "Member 'BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator, K2Node_CreateDelegate_OutputDelegate8) == 0x000078, "Member 'BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator, K2Node_CreateDelegate_OutputDelegate9) == 0x000088, "Member 'BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator, CallFunc_GetContext_ReturnValue) == 0x000098, "Member 'BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator, CallFunc_GetContext_ReturnValue2) == 0x0000A0, "Member 'BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator, CallFunc_GetContext_ReturnValue3) == 0x0000A8, "Member 'BuildingInfoIndicator_C_ExecuteUbergraph_BuildingInfoIndicator::CallFunc_GetContext_ReturnValue3' has a wrong offset!");

// Function BuildingInfoIndicator.BuildingInfoIndicator_C.UpdateBuildingInfo
// 0x0060 (0x0060 - 0x0000)
struct BuildingInfoIndicator_C_UpdateBuildingInfo final
{
public:
	struct FFortFocusedBuildingInfo               NewBuildingInfo;                                   // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	EFortBuildingInteraction                      Temp_byte_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable4;                               // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable5;                               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable6;                               // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable7;                               // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable8;                               // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuildingHealthDisplayRule                Temp_byte_Variable9;                               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable10;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable11;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select2_Default;                            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingInfoIndicator_C_UpdateBuildingInfo) == 0x000008, "Wrong alignment on BuildingInfoIndicator_C_UpdateBuildingInfo");
static_assert(sizeof(BuildingInfoIndicator_C_UpdateBuildingInfo) == 0x000060, "Wrong size on BuildingInfoIndicator_C_UpdateBuildingInfo");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo, NewBuildingInfo) == 0x000000, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo::NewBuildingInfo' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo, Temp_byte_Variable) == 0x000050, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo, Temp_byte_Variable2) == 0x000051, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo, Temp_byte_Variable3) == 0x000052, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo, Temp_byte_Variable4) == 0x000053, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo, Temp_byte_Variable5) == 0x000054, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo, Temp_byte_Variable6) == 0x000055, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo::Temp_byte_Variable6' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo, Temp_byte_Variable7) == 0x000056, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo::Temp_byte_Variable7' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo, Temp_byte_Variable8) == 0x000057, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo::Temp_byte_Variable8' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo, Temp_byte_Variable9) == 0x000058, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo::Temp_byte_Variable9' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo, Temp_byte_Variable10) == 0x000059, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo::Temp_byte_Variable10' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo, Temp_byte_Variable11) == 0x00005A, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo::Temp_byte_Variable11' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo, K2Node_Select_Default) == 0x00005B, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo, K2Node_Select2_Default) == 0x00005C, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo::K2Node_Select2_Default' has a wrong offset!");

// Function BuildingInfoIndicator.BuildingInfoIndicator_C.HandleBuildingFocused
// 0x0010 (0x0010 - 0x0000)
struct BuildingInfoIndicator_C_HandleBuildingFocused final
{
public:
	class ABuildingActor*                         FocusedBuilding;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingInfoIndicator_C_HandleBuildingFocused) == 0x000008, "Wrong alignment on BuildingInfoIndicator_C_HandleBuildingFocused");
static_assert(sizeof(BuildingInfoIndicator_C_HandleBuildingFocused) == 0x000010, "Wrong size on BuildingInfoIndicator_C_HandleBuildingFocused");
static_assert(offsetof(BuildingInfoIndicator_C_HandleBuildingFocused, FocusedBuilding) == 0x000000, "Member 'BuildingInfoIndicator_C_HandleBuildingFocused::FocusedBuilding' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandleBuildingFocused, Temp_bool_Variable) == 0x000008, "Member 'BuildingInfoIndicator_C_HandleBuildingFocused::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandleBuildingFocused, Temp_byte_Variable) == 0x000009, "Member 'BuildingInfoIndicator_C_HandleBuildingFocused::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandleBuildingFocused, Temp_byte_Variable2) == 0x00000A, "Member 'BuildingInfoIndicator_C_HandleBuildingFocused::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandleBuildingFocused, CallFunc_IsValid_ReturnValue) == 0x00000B, "Member 'BuildingInfoIndicator_C_HandleBuildingFocused::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandleBuildingFocused, K2Node_Select_Default) == 0x00000C, "Member 'BuildingInfoIndicator_C_HandleBuildingFocused::K2Node_Select_Default' has a wrong offset!");

// Function BuildingInfoIndicator.BuildingInfoIndicator_C.HandleBuildingHealthChanged
// 0x0018 (0x0018 - 0x0000)
struct BuildingInfoIndicator_C_HandleBuildingHealthChanged final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BuildingInfoIndicator_C_HandleBuildingHealthChanged) == 0x000008, "Wrong alignment on BuildingInfoIndicator_C_HandleBuildingHealthChanged");
static_assert(sizeof(BuildingInfoIndicator_C_HandleBuildingHealthChanged) == 0x000018, "Wrong size on BuildingInfoIndicator_C_HandleBuildingHealthChanged");
static_assert(offsetof(BuildingInfoIndicator_C_HandleBuildingHealthChanged, Health) == 0x000000, "Member 'BuildingInfoIndicator_C_HandleBuildingHealthChanged::Health' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandleBuildingHealthChanged, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'BuildingInfoIndicator_C_HandleBuildingHealthChanged::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandleBuildingHealthChanged, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'BuildingInfoIndicator_C_HandleBuildingHealthChanged::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandleBuildingHealthChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BuildingInfoIndicator_C_HandleBuildingHealthChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandleBuildingHealthChanged, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000011, "Member 'BuildingInfoIndicator_C_HandleBuildingHealthChanged::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandleBuildingHealthChanged, CallFunc_Less_FloatFloat_ReturnValue) == 0x000012, "Member 'BuildingInfoIndicator_C_HandleBuildingHealthChanged::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandleBuildingHealthChanged, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'BuildingInfoIndicator_C_HandleBuildingHealthChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BuildingInfoIndicator.BuildingInfoIndicator_C.HandleTrapDurabilityChanged
// 0x0008 (0x0008 - 0x0000)
struct BuildingInfoIndicator_C_HandleTrapDurabilityChanged final
{
public:
	float                                         CurrentDurability;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxDurability;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingInfoIndicator_C_HandleTrapDurabilityChanged) == 0x000004, "Wrong alignment on BuildingInfoIndicator_C_HandleTrapDurabilityChanged");
static_assert(sizeof(BuildingInfoIndicator_C_HandleTrapDurabilityChanged) == 0x000008, "Wrong size on BuildingInfoIndicator_C_HandleTrapDurabilityChanged");
static_assert(offsetof(BuildingInfoIndicator_C_HandleTrapDurabilityChanged, CurrentDurability) == 0x000000, "Member 'BuildingInfoIndicator_C_HandleTrapDurabilityChanged::CurrentDurability' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandleTrapDurabilityChanged, MaxDurability) == 0x000004, "Member 'BuildingInfoIndicator_C_HandleTrapDurabilityChanged::MaxDurability' has a wrong offset!");

// Function BuildingInfoIndicator.BuildingInfoIndicator_C.Update Keybinds
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) BuildingInfoIndicator_C_Update_Keybinds final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable2;                               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingInfoIndicator_C_Update_Keybinds) == 0x000008, "Wrong alignment on BuildingInfoIndicator_C_Update_Keybinds");
static_assert(sizeof(BuildingInfoIndicator_C_Update_Keybinds) == 0x000028, "Wrong size on BuildingInfoIndicator_C_Update_Keybinds");
static_assert(offsetof(BuildingInfoIndicator_C_Update_Keybinds, Temp_bool_Variable) == 0x000000, "Member 'BuildingInfoIndicator_C_Update_Keybinds::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_Update_Keybinds, Temp_name_Variable) == 0x000008, "Member 'BuildingInfoIndicator_C_Update_Keybinds::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_Update_Keybinds, Temp_name_Variable2) == 0x000010, "Member 'BuildingInfoIndicator_C_Update_Keybinds::Temp_name_Variable2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_Update_Keybinds, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000018, "Member 'BuildingInfoIndicator_C_Update_Keybinds::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_Update_Keybinds, K2Node_Select_Default) == 0x000020, "Member 'BuildingInfoIndicator_C_Update_Keybinds::K2Node_Select_Default' has a wrong offset!");

// Function BuildingInfoIndicator.BuildingInfoIndicator_C.HandlePlayerTargetingChanged
// 0x0030 (0x0030 - 0x0000)
struct BuildingInfoIndicator_C_HandlePlayerTargetingChanged final
{
public:
	bool                                          bIsTargeting;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            CallFunc_GetEquippedWeapon_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeaponRanged*                      K2Node_DynamicCast_AsFort_Weapon_Ranged;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingInfoIndicator_C_HandlePlayerTargetingChanged) == 0x000008, "Wrong alignment on BuildingInfoIndicator_C_HandlePlayerTargetingChanged");
static_assert(sizeof(BuildingInfoIndicator_C_HandlePlayerTargetingChanged) == 0x000030, "Wrong size on BuildingInfoIndicator_C_HandlePlayerTargetingChanged");
static_assert(offsetof(BuildingInfoIndicator_C_HandlePlayerTargetingChanged, bIsTargeting) == 0x000000, "Member 'BuildingInfoIndicator_C_HandlePlayerTargetingChanged::bIsTargeting' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandlePlayerTargetingChanged, Temp_byte_Variable) == 0x000001, "Member 'BuildingInfoIndicator_C_HandlePlayerTargetingChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandlePlayerTargetingChanged, Temp_byte_Variable2) == 0x000002, "Member 'BuildingInfoIndicator_C_HandlePlayerTargetingChanged::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandlePlayerTargetingChanged, Temp_bool_Variable) == 0x000003, "Member 'BuildingInfoIndicator_C_HandlePlayerTargetingChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandlePlayerTargetingChanged, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'BuildingInfoIndicator_C_HandlePlayerTargetingChanged::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandlePlayerTargetingChanged, CallFunc_GetEquippedWeapon_ReturnValue) == 0x000010, "Member 'BuildingInfoIndicator_C_HandlePlayerTargetingChanged::CallFunc_GetEquippedWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandlePlayerTargetingChanged, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BuildingInfoIndicator_C_HandlePlayerTargetingChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandlePlayerTargetingChanged, K2Node_DynamicCast_AsFort_Weapon_Ranged) == 0x000020, "Member 'BuildingInfoIndicator_C_HandlePlayerTargetingChanged::K2Node_DynamicCast_AsFort_Weapon_Ranged' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandlePlayerTargetingChanged, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BuildingInfoIndicator_C_HandlePlayerTargetingChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandlePlayerTargetingChanged, K2Node_Select_Default) == 0x000029, "Member 'BuildingInfoIndicator_C_HandlePlayerTargetingChanged::K2Node_Select_Default' has a wrong offset!");

// Function BuildingInfoIndicator.BuildingInfoIndicator_C.UpdateBuildingRepairCost
// 0x0020 (0x0020 - 0x0000)
struct BuildingInfoIndicator_C_UpdateBuildingRepairCost final
{
public:
	int32                                         NewInteractionCost;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(BuildingInfoIndicator_C_UpdateBuildingRepairCost) == 0x000008, "Wrong alignment on BuildingInfoIndicator_C_UpdateBuildingRepairCost");
static_assert(sizeof(BuildingInfoIndicator_C_UpdateBuildingRepairCost) == 0x000020, "Wrong size on BuildingInfoIndicator_C_UpdateBuildingRepairCost");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingRepairCost, NewInteractionCost) == 0x000000, "Member 'BuildingInfoIndicator_C_UpdateBuildingRepairCost::NewInteractionCost' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingRepairCost, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'BuildingInfoIndicator_C_UpdateBuildingRepairCost::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function BuildingInfoIndicator.BuildingInfoIndicator_C.IsCurrentBuildingBeingRepaired
// 0x0003 (0x0003 - 0x0000)
struct BuildingInfoIndicator_C_IsCurrentBuildingBeingRepaired final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BuildingInfoIndicator_C_IsCurrentBuildingBeingRepaired) == 0x000001, "Wrong alignment on BuildingInfoIndicator_C_IsCurrentBuildingBeingRepaired");
static_assert(sizeof(BuildingInfoIndicator_C_IsCurrentBuildingBeingRepaired) == 0x000003, "Wrong size on BuildingInfoIndicator_C_IsCurrentBuildingBeingRepaired");
static_assert(offsetof(BuildingInfoIndicator_C_IsCurrentBuildingBeingRepaired, ReturnValue) == 0x000000, "Member 'BuildingInfoIndicator_C_IsCurrentBuildingBeingRepaired::ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_IsCurrentBuildingBeingRepaired, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BuildingInfoIndicator_C_IsCurrentBuildingBeingRepaired::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_IsCurrentBuildingBeingRepaired, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BuildingInfoIndicator_C_IsCurrentBuildingBeingRepaired::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BuildingInfoIndicator.BuildingInfoIndicator_C.UpdateBuildingInfo_InteractionWidgets
// 0x0300 (0x0300 - 0x0000)
struct BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets final
{
public:
	bool                                          Interactable;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CanBePlayerEdited;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsAnyTrapAttached;                                 // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsTrapAttachedFacingPlayer;                        // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPreviewTrapAttached;                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortBuildingInteraction                      InteractionType;                                   // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InteractionCost;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortResourceType                             BuildingMaterial;                                  // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BuildKeybindAction;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlaceTrapAvailable;                                // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TopTrapActive;                                     // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TrapAvailable;                                     // 0x001A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EditAvailable;                                     // 0x001B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuildingInteraction                      Temp_byte_Variable3;                               // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable4;                               // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable5;                               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable6;                               // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable7;                               // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable8;                               // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable9;                               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBuildingInteraction                      Temp_byte_Variable10;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortResourceItemDefinition*            CallFunc_GetResourceItemDefinition_ReturnValue;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue; // 0x0068(0x0078)()
	int32                                         CallFunc_GetResourceCount_ReturnValue;             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x00E8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABuildingSMActor*                       K2Node_DynamicCast_AsBuilding_SMActor;             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable2;                               // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable11;                              // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable12;                              // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable3;                               // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue2;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue3;                   // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select2_Default;                            // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable13;                              // 0x0117(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable14;                              // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select3_Default;                            // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue4;                   // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingSMActor*                       K2Node_DynamicCast_AsBuilding_SMActor2;            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable4;                               // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTrapAvailableForBuilding_ReturnValue;   // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x012B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select4_Default;                            // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue5;                  // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayerBuilt_ReturnValue;                // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable5;                               // 0x012F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue3;                  // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Theme_Color_Theme_Color;              // 0x0138(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuickBars                                CallFunc_GetQuickbarFocus_OutQuickBar;             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetQuickbarFocus_OutSlot;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetQuickbarFocus_OutSecondarySlot;        // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot;  // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select5_Default;                            // 0x0158(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0170(0x0028)()
	ESlateVisibility                              Temp_byte_Variable15;                              // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable16;                              // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable6;                               // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select6_Default;                            // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue4;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTrapReadyForBuilding_ReturnValue;      // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTrapAttachTypeName_ReturnValue;        // 0x01B0(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x01C8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01E0(0x0040)(HasGetValueTypeHash)
	class UWidget*                                K2Node_Select7_Default;                            // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0228(0x0010)(ZeroConstructor, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x0238(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0278(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array2;                           // 0x0290(0x0010)(ZeroConstructor, ReferenceParm)
	class UFortInventoryContext*                  CallFunc_GetContext_ReturnValue5;                  // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue2;                      // 0x02A8(0x0018)()
	EFortQuickBars                                CallFunc_GetQuickbarFocus_OutQuickBar2;            // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x3];                                      // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetQuickbarFocus_OutSlot2;                // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetQuickbarFocus_OutSecondarySlot2;       // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot2; // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select8_Default;                            // 0x02D0(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue4;         // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue6;                  // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA[0x6];                                      // 0x02EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue6;                  // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingGamepad_ReturnValue;               // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue6;                 // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue7;                  // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue5;                   // 0x02FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue8;                  // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets) == 0x000008, "Wrong alignment on BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets");
static_assert(sizeof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets) == 0x000300, "Wrong size on BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Interactable) == 0x000000, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Interactable' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CanBePlayerEdited) == 0x000001, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CanBePlayerEdited' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, IsAnyTrapAttached) == 0x000002, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::IsAnyTrapAttached' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, IsTrapAttachedFacingPlayer) == 0x000003, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::IsTrapAttachedFacingPlayer' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, IsPreviewTrapAttached) == 0x000004, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::IsPreviewTrapAttached' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, InteractionType) == 0x000005, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::InteractionType' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, InteractionCost) == 0x000008, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::InteractionCost' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, BuildingMaterial) == 0x00000C, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::BuildingMaterial' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, BuildKeybindAction) == 0x000010, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::BuildKeybindAction' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, PlaceTrapAvailable) == 0x000018, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::PlaceTrapAvailable' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, TopTrapActive) == 0x000019, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::TopTrapActive' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, TrapAvailable) == 0x00001A, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::TrapAvailable' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, EditAvailable) == 0x00001B, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::EditAvailable' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_bool_Variable) == 0x00001C, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000039, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, K2Node_SwitchEnum_CmpSuccess) == 0x00003A, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_BooleanOR_ReturnValue) == 0x00003B, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_Not_PreBool_ReturnValue) == 0x00003C, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_Not_PreBool_ReturnValue2) == 0x00003D, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_Not_PreBool_ReturnValue3) == 0x00003E, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_BooleanAND_ReturnValue) == 0x00003F, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_byte_Variable) == 0x000040, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_byte_Variable2) == 0x000041, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_byte_Variable3) == 0x000042, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_byte_Variable4) == 0x000043, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_byte_Variable5) == 0x000044, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_byte_Variable6) == 0x000045, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_byte_Variable6' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_byte_Variable7) == 0x000046, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_byte_Variable7' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_byte_Variable8) == 0x000047, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_byte_Variable8' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_byte_Variable9) == 0x000048, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_byte_Variable9' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_GetContext_ReturnValue) == 0x000050, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_byte_Variable10) == 0x000058, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_byte_Variable10' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_GetResourceItemDefinition_ReturnValue) == 0x000060, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_GetResourceItemDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue) == 0x000068, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_GetItemDefinitionSmallPreviewImageBrush_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_GetResourceCount_ReturnValue) == 0x0000E0, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_GetResourceCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E4, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_struct_Variable) == 0x0000E8, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, K2Node_DynamicCast_AsBuilding_SMActor) == 0x0000F8, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::K2Node_DynamicCast_AsBuilding_SMActor' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_bool_Variable2) == 0x000101, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_byte_Variable11) == 0x000102, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_byte_Variable11' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_byte_Variable12) == 0x000103, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_byte_Variable12' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_bool_Variable3) == 0x000104, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_bool_Variable3' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_GetContext_ReturnValue2) == 0x000108, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_BooleanOR_ReturnValue2) == 0x000110, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_BooleanOR_ReturnValue3) == 0x000111, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_BooleanOR_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_Not_PreBool_ReturnValue4) == 0x000112, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, K2Node_Select_Default) == 0x000113, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, K2Node_Select2_Default) == 0x000114, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000115, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_Not_PreBool_ReturnValue5) == 0x000116, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_byte_Variable13) == 0x000117, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_byte_Variable13' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_BooleanAND_ReturnValue2) == 0x000118, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_BooleanAND_ReturnValue3) == 0x000119, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_byte_Variable14) == 0x00011A, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_byte_Variable14' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, K2Node_Select3_Default) == 0x00011B, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_BooleanOR_ReturnValue4) == 0x00011C, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_BooleanOR_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, K2Node_DynamicCast_AsBuilding_SMActor2) == 0x000120, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::K2Node_DynamicCast_AsBuilding_SMActor2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, K2Node_DynamicCast_bSuccess2) == 0x000128, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_bool_Variable4) == 0x000129, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_bool_Variable4' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_IsTrapAvailableForBuilding_ReturnValue) == 0x00012A, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_IsTrapAvailableForBuilding_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_BooleanAND_ReturnValue4) == 0x00012B, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, K2Node_Select4_Default) == 0x00012C, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_BooleanAND_ReturnValue5) == 0x00012D, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_BooleanAND_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_IsPlayerBuilt_ReturnValue) == 0x00012E, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_IsPlayerBuilt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_bool_Variable5) == 0x00012F, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_bool_Variable5' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_GetContext_ReturnValue3) == 0x000130, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_GetContext_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_Get_Theme_Color_Theme_Color) == 0x000138, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_Get_Theme_Color_Theme_Color' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_GetQuickbarFocus_OutQuickBar) == 0x000148, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_GetQuickbarFocus_OutQuickBar' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_GetQuickbarFocus_OutSlot) == 0x00014C, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_GetQuickbarFocus_OutSlot' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_GetQuickbarFocus_OutSecondarySlot) == 0x000150, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_GetQuickbarFocus_OutSecondarySlot' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot) == 0x000154, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, K2Node_Select5_Default) == 0x000158, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::K2Node_Select5_Default' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x000168, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, K2Node_MakeStruct_SlateColor) == 0x000170, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_byte_Variable15) == 0x000198, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_byte_Variable15' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_byte_Variable16) == 0x000199, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_byte_Variable16' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, Temp_bool_Variable6) == 0x00019A, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::Temp_bool_Variable6' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, K2Node_Select6_Default) == 0x00019B, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::K2Node_Select6_Default' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_GetContext_ReturnValue4) == 0x0001A0, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_GetContext_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_HasTrapReadyForBuilding_ReturnValue) == 0x0001A8, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_HasTrapReadyForBuilding_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_GetTrapAttachTypeName_ReturnValue) == 0x0001B0, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_GetTrapAttachTypeName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_TextToUpper_ReturnValue) == 0x0001C8, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, K2Node_MakeStruct_FormatArgumentData) == 0x0001E0, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, K2Node_Select7_Default) == 0x000220, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::K2Node_Select7_Default' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, K2Node_MakeArray_Array) == 0x000228, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, K2Node_MakeStruct_FormatArgumentData2) == 0x000238, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_Format_ReturnValue) == 0x000278, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, K2Node_MakeArray_Array2) == 0x000290, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_GetContext_ReturnValue5) == 0x0002A0, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_GetContext_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_Format_ReturnValue2) == 0x0002A8, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_Format_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_GetQuickbarFocus_OutQuickBar2) == 0x0002C0, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_GetQuickbarFocus_OutQuickBar2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_GetQuickbarFocus_OutSlot2) == 0x0002C4, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_GetQuickbarFocus_OutSlot2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_GetQuickbarFocus_OutSecondarySlot2) == 0x0002C8, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_GetQuickbarFocus_OutSecondarySlot2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot2) == 0x0002CC, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_GetQuickbarFocus_OutPreviousFocusedSlot2' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, K2Node_Select8_Default) == 0x0002D0, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::K2Node_Select8_Default' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_EqualEqual_ByteByte_ReturnValue4) == 0x0002E8, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_EqualEqual_ByteByte_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_BooleanAND_ReturnValue6) == 0x0002E9, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_BooleanAND_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_GetContext_ReturnValue6) == 0x0002F0, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_GetContext_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_IsUsingGamepad_ReturnValue) == 0x0002F8, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_Not_PreBool_ReturnValue6) == 0x0002F9, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_Not_PreBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_BooleanAND_ReturnValue7) == 0x0002FA, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_BooleanAND_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_BooleanOR_ReturnValue5) == 0x0002FB, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_BooleanOR_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets, CallFunc_BooleanAND_ReturnValue8) == 0x0002FC, "Member 'BuildingInfoIndicator_C_UpdateBuildingInfo_InteractionWidgets::CallFunc_BooleanAND_ReturnValue8' has a wrong offset!");

// Function BuildingInfoIndicator.BuildingInfoIndicator_C.HandleAttachedTrapChanged
// 0x0008 (0x0008 - 0x0000)
struct BuildingInfoIndicator_C_HandleAttachedTrapChanged final
{
public:
	class ABuildingTrap*                          BuildingTrap;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingInfoIndicator_C_HandleAttachedTrapChanged) == 0x000008, "Wrong alignment on BuildingInfoIndicator_C_HandleAttachedTrapChanged");
static_assert(sizeof(BuildingInfoIndicator_C_HandleAttachedTrapChanged) == 0x000008, "Wrong size on BuildingInfoIndicator_C_HandleAttachedTrapChanged");
static_assert(offsetof(BuildingInfoIndicator_C_HandleAttachedTrapChanged, BuildingTrap) == 0x000000, "Member 'BuildingInfoIndicator_C_HandleAttachedTrapChanged::BuildingTrap' has a wrong offset!");

// Function BuildingInfoIndicator.BuildingInfoIndicator_C.HandleQuickbarFocusChanged
// 0x0008 (0x0008 - 0x0000)
struct BuildingInfoIndicator_C_HandleQuickbarFocusChanged final
{
public:
	EFortQuickBars                                QuickBar;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         QuickBarSlot;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BuildingInfoIndicator_C_HandleQuickbarFocusChanged) == 0x000004, "Wrong alignment on BuildingInfoIndicator_C_HandleQuickbarFocusChanged");
static_assert(sizeof(BuildingInfoIndicator_C_HandleQuickbarFocusChanged) == 0x000008, "Wrong size on BuildingInfoIndicator_C_HandleQuickbarFocusChanged");
static_assert(offsetof(BuildingInfoIndicator_C_HandleQuickbarFocusChanged, QuickBar) == 0x000000, "Member 'BuildingInfoIndicator_C_HandleQuickbarFocusChanged::QuickBar' has a wrong offset!");
static_assert(offsetof(BuildingInfoIndicator_C_HandleQuickbarFocusChanged, QuickBarSlot) == 0x000004, "Member 'BuildingInfoIndicator_C_HandleQuickbarFocusChanged::QuickBarSlot' has a wrong offset!");

}

