#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Cinematic

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Cinematic.Cinematic_C
// 0x0060 (0x0440 - 0x03E0)
class UCinematic_C final : public UFortUIStateWidget_NUI
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E0(0x0008)(Transient, DuplicateTransient)
	class UNamedSlot*                             LocalizedAudioOnlyMovieSlot;                       // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetStack*                     MainContentStack;                                  // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             MovieSlot;                                         // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayMovieOverlay;                               // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USubtitles_C*                           Subtitles;                                         // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTeamMicStack_C*                        TeamMicStack;                                      // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBuildWatermark_C*                      Widget_BuildWatermark;                             // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMovieWidget_C*                         MovieWidget;                                       // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMediaSubtitlesPlayer*              SubtitlesPlayer;                                   // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CinematicMediaSoundWave;                           // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFinished;                                         // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Cinematic(int32 EntryPoint);
	void OnMediaEvent();
	void OnExitState(EFortUIState NextUIState);
	void OnEnterState(EFortUIState PreviousUIState);
	void PushContentWidgetInternal(class UWidget* Widget, const struct FContentPushState& State);
	void HandleClientEvent_SkipCinematic(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent);
	void HandleEndReached();
	void Destruct();
	void HandleClientEvent_QueueCinematic(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent);
	void Construct();
	void ShowMovie(class UMediaSource* MediaSource, class UNamedSlot*& Param_MovieSlot, class UMovieWidget_C*& Param_MovieWidget);
	void ClearMovie();
	void SkipMovie();
	class UWidget* PopContentWidgetInternal(const struct FContentPushState& State);
	void ClearMovieSlot(class UPanelWidget*& MovieSlotToClear);
	void ClearMovieWidget(class UFortMovieWidget*& MovieWidgetToClear);
	void SetMoviePlaying(bool MoviePlaying);
	void ClearOldSubtitlesIfNecessary(bool NewSubtitlesExist, class UFortMediaSubtitlesPlayer* NewSubtitles);
	void StopAndClearSubtitles();
	void GetAudioTrackIndex(int32* AudioTrack);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Cinematic_C">();
	}
	static class UCinematic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCinematic_C>();
	}
};
static_assert(alignof(UCinematic_C) == 0x000008, "Wrong alignment on UCinematic_C");
static_assert(sizeof(UCinematic_C) == 0x000440, "Wrong size on UCinematic_C");
static_assert(offsetof(UCinematic_C, UberGraphFrame) == 0x0003E0, "Member 'UCinematic_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCinematic_C, LocalizedAudioOnlyMovieSlot) == 0x0003E8, "Member 'UCinematic_C::LocalizedAudioOnlyMovieSlot' has a wrong offset!");
static_assert(offsetof(UCinematic_C, MainContentStack) == 0x0003F0, "Member 'UCinematic_C::MainContentStack' has a wrong offset!");
static_assert(offsetof(UCinematic_C, MovieSlot) == 0x0003F8, "Member 'UCinematic_C::MovieSlot' has a wrong offset!");
static_assert(offsetof(UCinematic_C, OverlayMovieOverlay) == 0x000400, "Member 'UCinematic_C::OverlayMovieOverlay' has a wrong offset!");
static_assert(offsetof(UCinematic_C, Subtitles) == 0x000408, "Member 'UCinematic_C::Subtitles' has a wrong offset!");
static_assert(offsetof(UCinematic_C, TeamMicStack) == 0x000410, "Member 'UCinematic_C::TeamMicStack' has a wrong offset!");
static_assert(offsetof(UCinematic_C, Widget_BuildWatermark) == 0x000418, "Member 'UCinematic_C::Widget_BuildWatermark' has a wrong offset!");
static_assert(offsetof(UCinematic_C, MovieWidget) == 0x000420, "Member 'UCinematic_C::MovieWidget' has a wrong offset!");
static_assert(offsetof(UCinematic_C, SubtitlesPlayer) == 0x000428, "Member 'UCinematic_C::SubtitlesPlayer' has a wrong offset!");
static_assert(offsetof(UCinematic_C, CinematicMediaSoundWave) == 0x000430, "Member 'UCinematic_C::CinematicMediaSoundWave' has a wrong offset!");
static_assert(offsetof(UCinematic_C, bFinished) == 0x000438, "Member 'UCinematic_C::bFinished' has a wrong offset!");

}

