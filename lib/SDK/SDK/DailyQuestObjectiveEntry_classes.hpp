#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DailyQuestObjectiveEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass DailyQuestObjectiveEntry.DailyQuestObjectiveEntry_C
// 0x0038 (0x0248 - 0x0210)
class UDailyQuestObjectiveEntry_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0210(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Appear;                                            // 0x0218(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDailyQuestProgressWidget_C*            DailyQuestProgressWidget;                          // 0x0220(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDailyQuestRewardInfo_C*                DailyQuestRewardInfo;                              // 0x0228(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LockIcon;                                          // 0x0230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TaskName;                                          // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortQuestObjectiveInfo*                TrackedObjective;                                  // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_DailyQuestObjectiveEntry(int32 EntryPoint);
	void SetData(class UObject* InData);
	void UpdateProgress(class UFortQuestObjectiveInfo* Objective, int32 AchievedCount);
	void Update(class UFortQuestObjectiveInfo* Objective, int32 AchievedCount);
	void PlayAppearAnimation();
	void UpdateFromObjectiveInfo(const struct FFortMcpQuestObjectiveInfo& ObjectiveInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DailyQuestObjectiveEntry_C">();
	}
	static class UDailyQuestObjectiveEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDailyQuestObjectiveEntry_C>();
	}
};
static_assert(alignof(UDailyQuestObjectiveEntry_C) == 0x000008, "Wrong alignment on UDailyQuestObjectiveEntry_C");
static_assert(sizeof(UDailyQuestObjectiveEntry_C) == 0x000248, "Wrong size on UDailyQuestObjectiveEntry_C");
static_assert(offsetof(UDailyQuestObjectiveEntry_C, UberGraphFrame) == 0x000210, "Member 'UDailyQuestObjectiveEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDailyQuestObjectiveEntry_C, Appear) == 0x000218, "Member 'UDailyQuestObjectiveEntry_C::Appear' has a wrong offset!");
static_assert(offsetof(UDailyQuestObjectiveEntry_C, DailyQuestProgressWidget) == 0x000220, "Member 'UDailyQuestObjectiveEntry_C::DailyQuestProgressWidget' has a wrong offset!");
static_assert(offsetof(UDailyQuestObjectiveEntry_C, DailyQuestRewardInfo) == 0x000228, "Member 'UDailyQuestObjectiveEntry_C::DailyQuestRewardInfo' has a wrong offset!");
static_assert(offsetof(UDailyQuestObjectiveEntry_C, LockIcon) == 0x000230, "Member 'UDailyQuestObjectiveEntry_C::LockIcon' has a wrong offset!");
static_assert(offsetof(UDailyQuestObjectiveEntry_C, TaskName) == 0x000238, "Member 'UDailyQuestObjectiveEntry_C::TaskName' has a wrong offset!");
static_assert(offsetof(UDailyQuestObjectiveEntry_C, TrackedObjective) == 0x000240, "Member 'UDailyQuestObjectiveEntry_C::TrackedObjective' has a wrong offset!");

}

