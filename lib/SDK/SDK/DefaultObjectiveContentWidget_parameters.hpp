#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DefaultObjectiveContentWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function DefaultObjectiveContentWidget.DefaultObjectiveContentWidget_C.ExecuteUbergraph_DefaultObjectiveContentWidget
// 0x0088 (0x0088 - 0x0000)
struct DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFortMissionState* MissionState)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class AFortObjectiveBase*                     K2Node_Event_Objective;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInConfigureAsHUD;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFortObjectiveBase* Objective, bool bNewVisibility)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AFortObjectiveBase* Objective, EFortObjectiveStatus NewStatus)> K2Node_CreateDelegate_OutputDelegate3;             // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	class AFortObjectiveBase*                     K2Node_CustomEvent_Objective2;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortObjectiveStatus                          K2Node_CustomEvent_NewStatus;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortObjectiveBase*                     K2Node_CustomEvent_Objective;                      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNewVisibility;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortMissionState*                      K2Node_CustomEvent_MissionState;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMissionTimerComponent*             CallFunc_GetTimerComponent_ReturnValue;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UFortMissionTimerComponent* TimerComponent)> K2Node_CreateDelegate_OutputDelegate4;             // 0x0078(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget) == 0x000008, "Wrong alignment on DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget");
static_assert(sizeof(DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget) == 0x000088, "Wrong size on DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget");
static_assert(offsetof(DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget, EntryPoint) == 0x000000, "Member 'DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget, K2Node_Event_Objective) == 0x000018, "Member 'DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget::K2Node_Event_Objective' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget, K2Node_Event_bInConfigureAsHUD) == 0x000020, "Member 'DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget::K2Node_Event_bInConfigureAsHUD' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget, K2Node_CreateDelegate_OutputDelegate2) == 0x000028, "Member 'DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget, K2Node_CreateDelegate_OutputDelegate3) == 0x000038, "Member 'DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget, K2Node_CustomEvent_Objective2) == 0x000048, "Member 'DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget::K2Node_CustomEvent_Objective2' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget, K2Node_CustomEvent_NewStatus) == 0x000050, "Member 'DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget::K2Node_CustomEvent_NewStatus' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget, K2Node_CustomEvent_Objective) == 0x000058, "Member 'DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget::K2Node_CustomEvent_Objective' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget, K2Node_CustomEvent_bNewVisibility) == 0x000060, "Member 'DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget::K2Node_CustomEvent_bNewVisibility' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget, K2Node_CustomEvent_MissionState) == 0x000068, "Member 'DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget::K2Node_CustomEvent_MissionState' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget, CallFunc_GetTimerComponent_ReturnValue) == 0x000070, "Member 'DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget::CallFunc_GetTimerComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget, K2Node_CreateDelegate_OutputDelegate4) == 0x000078, "Member 'DefaultObjectiveContentWidget_C_ExecuteUbergraph_DefaultObjectiveContentWidget::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");

// Function DefaultObjectiveContentWidget.DefaultObjectiveContentWidget_C.HandleUpdate
// 0x0008 (0x0008 - 0x0000)
struct DefaultObjectiveContentWidget_C_HandleUpdate final
{
public:
	class AFortMissionState*                      MissionState;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DefaultObjectiveContentWidget_C_HandleUpdate) == 0x000008, "Wrong alignment on DefaultObjectiveContentWidget_C_HandleUpdate");
static_assert(sizeof(DefaultObjectiveContentWidget_C_HandleUpdate) == 0x000008, "Wrong size on DefaultObjectiveContentWidget_C_HandleUpdate");
static_assert(offsetof(DefaultObjectiveContentWidget_C_HandleUpdate, MissionState) == 0x000000, "Member 'DefaultObjectiveContentWidget_C_HandleUpdate::MissionState' has a wrong offset!");

// Function DefaultObjectiveContentWidget.DefaultObjectiveContentWidget_C.HandleObjectiveVisibilityChanged
// 0x0010 (0x0010 - 0x0000)
struct DefaultObjectiveContentWidget_C_HandleObjectiveVisibilityChanged final
{
public:
	class AFortObjectiveBase*                     Objective;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNewVisibility;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DefaultObjectiveContentWidget_C_HandleObjectiveVisibilityChanged) == 0x000008, "Wrong alignment on DefaultObjectiveContentWidget_C_HandleObjectiveVisibilityChanged");
static_assert(sizeof(DefaultObjectiveContentWidget_C_HandleObjectiveVisibilityChanged) == 0x000010, "Wrong size on DefaultObjectiveContentWidget_C_HandleObjectiveVisibilityChanged");
static_assert(offsetof(DefaultObjectiveContentWidget_C_HandleObjectiveVisibilityChanged, Objective) == 0x000000, "Member 'DefaultObjectiveContentWidget_C_HandleObjectiveVisibilityChanged::Objective' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_HandleObjectiveVisibilityChanged, bNewVisibility) == 0x000008, "Member 'DefaultObjectiveContentWidget_C_HandleObjectiveVisibilityChanged::bNewVisibility' has a wrong offset!");

// Function DefaultObjectiveContentWidget.DefaultObjectiveContentWidget_C.HandleObjectiveStatusChanged
// 0x0010 (0x0010 - 0x0000)
struct DefaultObjectiveContentWidget_C_HandleObjectiveStatusChanged final
{
public:
	class AFortObjectiveBase*                     Objective;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortObjectiveStatus                          NewStatus;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DefaultObjectiveContentWidget_C_HandleObjectiveStatusChanged) == 0x000008, "Wrong alignment on DefaultObjectiveContentWidget_C_HandleObjectiveStatusChanged");
static_assert(sizeof(DefaultObjectiveContentWidget_C_HandleObjectiveStatusChanged) == 0x000010, "Wrong size on DefaultObjectiveContentWidget_C_HandleObjectiveStatusChanged");
static_assert(offsetof(DefaultObjectiveContentWidget_C_HandleObjectiveStatusChanged, Objective) == 0x000000, "Member 'DefaultObjectiveContentWidget_C_HandleObjectiveStatusChanged::Objective' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_HandleObjectiveStatusChanged, NewStatus) == 0x000008, "Member 'DefaultObjectiveContentWidget_C_HandleObjectiveStatusChanged::NewStatus' has a wrong offset!");

// Function DefaultObjectiveContentWidget.DefaultObjectiveContentWidget_C.Setup
// 0x0010 (0x0010 - 0x0000)
struct DefaultObjectiveContentWidget_C_Setup final
{
public:
	class AFortObjectiveBase*                     Objective;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInConfigureAsHUD;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DefaultObjectiveContentWidget_C_Setup) == 0x000008, "Wrong alignment on DefaultObjectiveContentWidget_C_Setup");
static_assert(sizeof(DefaultObjectiveContentWidget_C_Setup) == 0x000010, "Wrong size on DefaultObjectiveContentWidget_C_Setup");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Setup, Objective) == 0x000000, "Member 'DefaultObjectiveContentWidget_C_Setup::Objective' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Setup, bInConfigureAsHUD) == 0x000008, "Member 'DefaultObjectiveContentWidget_C_Setup::bInConfigureAsHUD' has a wrong offset!");

// Function DefaultObjectiveContentWidget.DefaultObjectiveContentWidget_C.Update
// 0x01C8 (0x01C8 - 0x0000)
struct DefaultObjectiveContentWidget_C_Update final
{
public:
	class FText                                   TimerText;                                         // 0x0000(0x0018)(Edit, BlueprintVisible)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0078(0x0018)()
	class UFortMissionTimerComponent*             CallFunc_GetTimerComponent_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionRichText_C*                     CallFunc_GetRichTextBlock_MissionRichTextBlock;    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetTimeText_ReturnValue;                  // 0x00A8(0x0018)()
	bool                                          CallFunc_IsTimerVisible_ReturnValue;               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x00C8(0x0040)(HasGetValueTypeHash)
	float                                         CallFunc_GetMissionTimerTimeRemaining_ReturnValue; // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0128(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetObjectiveDisplayString_ReturnValue;    // 0x0148(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData3;             // 0x0160(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array2;                           // 0x01A0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue2;                      // 0x01B0(0x0018)()
};
static_assert(alignof(DefaultObjectiveContentWidget_C_Update) == 0x000008, "Wrong alignment on DefaultObjectiveContentWidget_C_Update");
static_assert(sizeof(DefaultObjectiveContentWidget_C_Update) == 0x0001C8, "Wrong size on DefaultObjectiveContentWidget_C_Update");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, TimerText) == 0x000000, "Member 'DefaultObjectiveContentWidget_C_Update::TimerText' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'DefaultObjectiveContentWidget_C_Update::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'DefaultObjectiveContentWidget_C_Update::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, CallFunc_TextIsEmpty_ReturnValue) == 0x000030, "Member 'DefaultObjectiveContentWidget_C_Update::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'DefaultObjectiveContentWidget_C_Update::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'DefaultObjectiveContentWidget_C_Update::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, CallFunc_GetEmptyText_ReturnValue) == 0x000078, "Member 'DefaultObjectiveContentWidget_C_Update::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, CallFunc_GetTimerComponent_ReturnValue) == 0x000090, "Member 'DefaultObjectiveContentWidget_C_Update::CallFunc_GetTimerComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, CallFunc_GetRichTextBlock_MissionRichTextBlock) == 0x000098, "Member 'DefaultObjectiveContentWidget_C_Update::CallFunc_GetRichTextBlock_MissionRichTextBlock' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'DefaultObjectiveContentWidget_C_Update::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, CallFunc_IsValid_ReturnValue2) == 0x0000A1, "Member 'DefaultObjectiveContentWidget_C_Update::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, CallFunc_GetTimeText_ReturnValue) == 0x0000A8, "Member 'DefaultObjectiveContentWidget_C_Update::CallFunc_GetTimeText_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, CallFunc_IsTimerVisible_ReturnValue) == 0x0000C0, "Member 'DefaultObjectiveContentWidget_C_Update::CallFunc_IsTimerVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, K2Node_MakeStruct_FormatArgumentData2) == 0x0000C8, "Member 'DefaultObjectiveContentWidget_C_Update::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, CallFunc_GetMissionTimerTimeRemaining_ReturnValue) == 0x000108, "Member 'DefaultObjectiveContentWidget_C_Update::CallFunc_GetMissionTimerTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, K2Node_MakeArray_Array) == 0x000110, "Member 'DefaultObjectiveContentWidget_C_Update::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000120, "Member 'DefaultObjectiveContentWidget_C_Update::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, CallFunc_Format_ReturnValue) == 0x000128, "Member 'DefaultObjectiveContentWidget_C_Update::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, CallFunc_BooleanAND_ReturnValue) == 0x000140, "Member 'DefaultObjectiveContentWidget_C_Update::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, CallFunc_GetObjectiveDisplayString_ReturnValue) == 0x000148, "Member 'DefaultObjectiveContentWidget_C_Update::CallFunc_GetObjectiveDisplayString_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, K2Node_MakeStruct_FormatArgumentData3) == 0x000160, "Member 'DefaultObjectiveContentWidget_C_Update::K2Node_MakeStruct_FormatArgumentData3' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, K2Node_MakeArray_Array2) == 0x0001A0, "Member 'DefaultObjectiveContentWidget_C_Update::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_Update, CallFunc_Format_ReturnValue2) == 0x0001B0, "Member 'DefaultObjectiveContentWidget_C_Update::CallFunc_Format_ReturnValue2' has a wrong offset!");

// Function DefaultObjectiveContentWidget.DefaultObjectiveContentWidget_C.GetRichTextBlock
// 0x0030 (0x0030 - 0x0000)
struct DefaultObjectiveContentWidget_C_GetRichTextBlock final
{
public:
	class UMissionRichText_C*                     MissionRichTextBlock;                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionRichText_C*                     FoundTextBlock;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyChildren_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionRichText_C*                     K2Node_DynamicCast_AsMission_Rich_Text;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DefaultObjectiveContentWidget_C_GetRichTextBlock) == 0x000008, "Wrong alignment on DefaultObjectiveContentWidget_C_GetRichTextBlock");
static_assert(sizeof(DefaultObjectiveContentWidget_C_GetRichTextBlock) == 0x000030, "Wrong size on DefaultObjectiveContentWidget_C_GetRichTextBlock");
static_assert(offsetof(DefaultObjectiveContentWidget_C_GetRichTextBlock, MissionRichTextBlock) == 0x000000, "Member 'DefaultObjectiveContentWidget_C_GetRichTextBlock::MissionRichTextBlock' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_GetRichTextBlock, FoundTextBlock) == 0x000008, "Member 'DefaultObjectiveContentWidget_C_GetRichTextBlock::FoundTextBlock' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_GetRichTextBlock, CallFunc_GetChildAt_ReturnValue) == 0x000010, "Member 'DefaultObjectiveContentWidget_C_GetRichTextBlock::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_GetRichTextBlock, CallFunc_HasAnyChildren_ReturnValue) == 0x000018, "Member 'DefaultObjectiveContentWidget_C_GetRichTextBlock::CallFunc_HasAnyChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_GetRichTextBlock, K2Node_DynamicCast_AsMission_Rich_Text) == 0x000020, "Member 'DefaultObjectiveContentWidget_C_GetRichTextBlock::K2Node_DynamicCast_AsMission_Rich_Text' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_GetRichTextBlock, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'DefaultObjectiveContentWidget_C_GetRichTextBlock::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function DefaultObjectiveContentWidget.DefaultObjectiveContentWidget_C.CreateRichTextBlock
// 0x0030 (0x0030 - 0x0000)
struct DefaultObjectiveContentWidget_C_CreateRichTextBlock final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionRichText_C*                     CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DefaultObjectiveContentWidget_C_CreateRichTextBlock) == 0x000008, "Wrong alignment on DefaultObjectiveContentWidget_C_CreateRichTextBlock");
static_assert(sizeof(DefaultObjectiveContentWidget_C_CreateRichTextBlock) == 0x000030, "Wrong size on DefaultObjectiveContentWidget_C_CreateRichTextBlock");
static_assert(offsetof(DefaultObjectiveContentWidget_C_CreateRichTextBlock, Text) == 0x000000, "Member 'DefaultObjectiveContentWidget_C_CreateRichTextBlock::Text' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_CreateRichTextBlock, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'DefaultObjectiveContentWidget_C_CreateRichTextBlock::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_CreateRichTextBlock, CallFunc_Create_ReturnValue) == 0x000020, "Member 'DefaultObjectiveContentWidget_C_CreateRichTextBlock::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_CreateRichTextBlock, CallFunc_AddChild_ReturnValue) == 0x000028, "Member 'DefaultObjectiveContentWidget_C_CreateRichTextBlock::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function DefaultObjectiveContentWidget.DefaultObjectiveContentWidget_C.HandleTimerComponentUpdated
// 0x0008 (0x0008 - 0x0000)
struct DefaultObjectiveContentWidget_C_HandleTimerComponentUpdated final
{
public:
	class UFortMissionTimerComponent*             InTimerComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DefaultObjectiveContentWidget_C_HandleTimerComponentUpdated) == 0x000008, "Wrong alignment on DefaultObjectiveContentWidget_C_HandleTimerComponentUpdated");
static_assert(sizeof(DefaultObjectiveContentWidget_C_HandleTimerComponentUpdated) == 0x000008, "Wrong size on DefaultObjectiveContentWidget_C_HandleTimerComponentUpdated");
static_assert(offsetof(DefaultObjectiveContentWidget_C_HandleTimerComponentUpdated, InTimerComponent) == 0x000000, "Member 'DefaultObjectiveContentWidget_C_HandleTimerComponentUpdated::InTimerComponent' has a wrong offset!");

// Function DefaultObjectiveContentWidget.DefaultObjectiveContentWidget_C.GetHeightEstimate
// 0x0030 (0x0030 - 0x0000)
struct DefaultObjectiveContentWidget_C_GetHeightEstimate final
{
public:
	float                                         Height;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeightEstimate;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHeightEstimate_Height;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionRichText_C*                     CallFunc_GetRichTextBlock_MissionRichTextBlock;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMissionHUDTextLineHeightEstimate_ReturnValue; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DefaultObjectiveContentWidget_C_GetHeightEstimate) == 0x000008, "Wrong alignment on DefaultObjectiveContentWidget_C_GetHeightEstimate");
static_assert(sizeof(DefaultObjectiveContentWidget_C_GetHeightEstimate) == 0x000030, "Wrong size on DefaultObjectiveContentWidget_C_GetHeightEstimate");
static_assert(offsetof(DefaultObjectiveContentWidget_C_GetHeightEstimate, Height) == 0x000000, "Member 'DefaultObjectiveContentWidget_C_GetHeightEstimate::Height' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_GetHeightEstimate, HeightEstimate) == 0x000004, "Member 'DefaultObjectiveContentWidget_C_GetHeightEstimate::HeightEstimate' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_GetHeightEstimate, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'DefaultObjectiveContentWidget_C_GetHeightEstimate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_GetHeightEstimate, CallFunc_GetHeightEstimate_Height) == 0x00000C, "Member 'DefaultObjectiveContentWidget_C_GetHeightEstimate::CallFunc_GetHeightEstimate_Height' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_GetHeightEstimate, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'DefaultObjectiveContentWidget_C_GetHeightEstimate::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_GetHeightEstimate, CallFunc_GetRichTextBlock_MissionRichTextBlock) == 0x000018, "Member 'DefaultObjectiveContentWidget_C_GetHeightEstimate::CallFunc_GetRichTextBlock_MissionRichTextBlock' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_GetHeightEstimate, CallFunc_IsValid_ReturnValue2) == 0x000020, "Member 'DefaultObjectiveContentWidget_C_GetHeightEstimate::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_GetHeightEstimate, CallFunc_GetMissionHUDTextLineHeightEstimate_ReturnValue) == 0x000024, "Member 'DefaultObjectiveContentWidget_C_GetHeightEstimate::CallFunc_GetMissionHUDTextLineHeightEstimate_ReturnValue' has a wrong offset!");
static_assert(offsetof(DefaultObjectiveContentWidget_C_GetHeightEstimate, CallFunc_Add_FloatFloat_ReturnValue2) == 0x000028, "Member 'DefaultObjectiveContentWidget_C_GetHeightEstimate::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");

}

