#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EnemyPawn_Parent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.ExecuteUbergraph_EnemyPawn_Parent
// 0x06E0 (0x06E0 - 0x0000)
struct EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0018(0x0008)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage2;                              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags2;                          // 0x0050(0x0020)()
	struct FVector                                K2Node_Event_Momentum2;                            // 0x0070(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_HitInfo2;                             // 0x0080(0x0080)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy2;                        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser2;                        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext2;                       // 0x0110(0x0018)()
	EFortDamageZone                               CallFunc_GetDamageZone_ReturnValue;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B[0x1];                                      // 0x012B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0134(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x014C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0158(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0190(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x019C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EnemyDeathVisuals_HQ;                     // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AA[0x2];                                      // 0x01AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B2[0x2];                                      // 0x01B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X2;                           // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y2;                           // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z2;                           // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue2;          // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue3;          // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01D0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_RiftLocationWS;                 // 0x01FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0208(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue2;     // 0x0218(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0224(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue2;           // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue2;    // 0x0234(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0xC];                                      // 0x0244(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0250(0x0030)(IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_AddComponent_ReturnValue;                 // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue3;     // 0x0288(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue3;    // 0x0294(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x02A4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x02B0(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x02BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Rift_Portals_C*                      K2Node_DynamicCast_AsB_Rift_Portals;               // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DA[0x2];                                      // 0x02DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02DC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue2;            // 0x02E8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue4;    // 0x02F4(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0xC];                                      // 0x0304(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0310(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBoneIndex_ReturnValue;                 // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRefPosePosition_ReturnValue;           // 0x0348(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue; // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatFromStream_ReturnValue;        // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_PickColorFromAnArrayOfColors_Color;       // 0x0364(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_PickColorFromAnArrayOfColors_Color2;      // 0x0374(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_PickColorFromAnArrayOfColors_Color3;      // 0x0384(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue4;          // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AD[0x3];                                      // 0x03AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B9[0x3];                                      // 0x03B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x03BC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue3;           // 0x03C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x03CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CB[0x5];                                      // 0x03CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x03D0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue9;                     // 0x03E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_Damage;                               // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_Event_DamageTags;                           // 0x03E8(0x0020)()
	struct FVector                                K2Node_Event_Momentum;                             // 0x0408(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_HitInfo;                              // 0x0418(0x0080)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              K2Node_Event_InstigatedBy;                         // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           K2Node_Event_EffectContext;                        // 0x04A8(0x0018)()
	class AFortProjectileBase*                    K2Node_DynamicCast_AsFort_Projectile_Base;         // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeapon*                            K2Node_DynamicCast_AsFort_Weapon;                  // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortDamageZone                               CallFunc_GetDamageZone_ReturnValue2;               // 0x04D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum3_CmpSuccess;                     // 0x04DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4DB[0x5];                                      // 0x04DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x04E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F2[0x6];                                      // 0x04F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue2;                 // 0x04F8(0x0008)(NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue4;           // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501[0x3];                                      // 0x0501(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue2;           // 0x0504(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue10;                    // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_511[0x3];                                      // 0x0511(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0514(0x000C)(IsPlainOldData, NoDestructor)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue2;      // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_529[0x3];                                      // 0x0529(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue3;           // 0x052C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue3;      // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue5;          // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_544[0x4];                                      // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue2;          // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue4;           // 0x0550(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue11;                    // 0x055C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55D[0x3];                                      // 0x055D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue3;          // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_568[0x8];                                      // 0x0568(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable2;                             // 0x0570(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_AddComponent_ReturnValue2;                // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable3;                             // 0x05B0(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable4;                             // 0x05C0(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x05D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x05D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D3[0x1];                                      // 0x05D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x05D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue3;              // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue2;        // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E9[0x3];                                      // 0x05E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x05EC(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0600(0x0010)(ZeroConstructor, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0610(0x0080)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue12;                    // 0x0691(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_692[0x6];                                      // 0x0692(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue2; // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_K2_GetTextureParameterValue_ReturnValue;  // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x06AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue13;                    // 0x06AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AE[0x2];                                      // 0x06AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               CallFunc_K2_GetTextureParameterValue_ReturnValue2; // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue14;                    // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B9[0x7];                                      // 0x06B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue2;        // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C9[0x3];                                      // 0x06C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Delay_Amount;                   // 0x06CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x06D0(0x0008)(NoDestructor)
	bool                                          K2Node_Event_bShouldUseSpecialEventGE;             // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent) == 0x000010, "Wrong alignment on EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent");
static_assert(sizeof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent) == 0x0006E0, "Wrong size on EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, EntryPoint) == 0x000000, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::EntryPoint' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, Temp_int_Variable) == 0x000008, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_K2_SetTimer_ReturnValue) == 0x000018, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_IsValid_ReturnValue2) == 0x000020, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakVector_X) == 0x000024, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakVector_Y) == 0x000028, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakVector_Z) == 0x00002C, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_IsValid_ReturnValue3) == 0x000030, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000038, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_GetSocketLocation_ReturnValue) == 0x000040, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_Event_Damage2) == 0x00004C, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_Event_Damage2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_Event_DamageTags2) == 0x000050, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_Event_DamageTags2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_Event_Momentum2) == 0x000070, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_Event_Momentum2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_Event_HitInfo2) == 0x000080, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_Event_HitInfo2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_Event_InstigatedBy2) == 0x000100, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_Event_InstigatedBy2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_Event_DamageCauser2) == 0x000108, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_Event_DamageCauser2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_Event_EffectContext2) == 0x000110, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_Event_EffectContext2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_GetDamageZone_ReturnValue) == 0x000128, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_GetDamageZone_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakHitResult_bBlockingHit) == 0x000129, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakHitResult_bInitialOverlap) == 0x00012A, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakHitResult_Time) == 0x00012C, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakHitResult_Distance) == 0x000130, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakHitResult_Location) == 0x000134, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakHitResult_ImpactPoint) == 0x000140, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakHitResult_Normal) == 0x00014C, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakHitResult_ImpactNormal) == 0x000158, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakHitResult_HitItem) == 0x000188, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakHitResult_FaceIndex) == 0x00018C, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakHitResult_TraceStart) == 0x000190, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakHitResult_TraceEnd) == 0x00019C, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_SwitchEnum2_CmpSuccess) == 0x0001A8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_EnemyDeathVisuals_HQ) == 0x0001A9, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_EnemyDeathVisuals_HQ' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001AC, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_IsDedicatedServer_ReturnValue) == 0x0001B0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_IsValid_ReturnValue4) == 0x0001B1, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakVector_X2) == 0x0001B4, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakVector_Y2) == 0x0001B8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakVector_Z2) == 0x0001BC, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, Temp_float_Variable) == 0x0001C0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_RandomFloatInRange_ReturnValue) == 0x0001C4, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_RandomFloatInRange_ReturnValue2) == 0x0001C8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_RandomFloatInRange_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_RandomFloatInRange_ReturnValue3) == 0x0001CC, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_RandomFloatInRange_ReturnValue3' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_MakeVector_ReturnValue) == 0x0001D0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x0001DC, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_IsValid_ReturnValue5) == 0x0001E0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0001E8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001F0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_CustomEvent_RiftLocationWS) == 0x0001FC, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_CustomEvent_RiftLocationWS' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000208, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_K2_GetComponentLocation_ReturnValue2) == 0x000218, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_K2_GetComponentLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Add_VectorVector_ReturnValue) == 0x000224, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_IsDedicatedServer_ReturnValue2) == 0x000230, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_IsDedicatedServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Conv_VectorToLinearColor_ReturnValue2) == 0x000234, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Conv_VectorToLinearColor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, Temp_struct_Variable) == 0x000250, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_AddComponent_ReturnValue) == 0x000280, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_K2_GetComponentLocation_ReturnValue3) == 0x000288, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_K2_GetComponentLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Conv_VectorToLinearColor_ReturnValue3) == 0x000294, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Conv_VectorToLinearColor_ReturnValue3' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakTransform_Location) == 0x0002A4, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakTransform_Rotation) == 0x0002B0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BreakTransform_Scale) == 0x0002BC, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x0002C8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_DynamicCast_AsB_Rift_Portals) == 0x0002D0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_DynamicCast_AsB_Rift_Portals' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_DynamicCast_bSuccess) == 0x0002D8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x0002D9, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002DC, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Add_VectorVector_ReturnValue2) == 0x0002E8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Add_VectorVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Conv_VectorToLinearColor_ReturnValue4) == 0x0002F4, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Conv_VectorToLinearColor_ReturnValue4' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_MakeTransform_ReturnValue) == 0x000310, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_IsValid_ReturnValue6) == 0x000340, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_GetBoneIndex_ReturnValue) == 0x000344, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_GetBoneIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_GetRefPosePosition_ReturnValue) == 0x000348, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_GetRefPosePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue) == 0x000358, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_RandomFloatFromStream_ReturnValue) == 0x000360, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_RandomFloatFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_PickColorFromAnArrayOfColors_Color) == 0x000364, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_PickColorFromAnArrayOfColors_Color' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_PickColorFromAnArrayOfColors_Color2) == 0x000374, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_PickColorFromAnArrayOfColors_Color2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_PickColorFromAnArrayOfColors_Color3) == 0x000384, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_PickColorFromAnArrayOfColors_Color3' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x000394, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_RandomFloatInRange_ReturnValue4) == 0x000398, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_RandomFloatInRange_ReturnValue4' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_GetFloatValue_ReturnValue) == 0x00039C, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0003A0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_IsValid_ReturnValue7) == 0x0003A4, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x0003A8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Not_PreBool_ReturnValue) == 0x0003AC, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0003B0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Add_FloatFloat_ReturnValue) == 0x0003B4, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, Temp_bool_Variable) == 0x0003B8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_MakeVector_ReturnValue2) == 0x0003BC, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_IsValid_ReturnValue8) == 0x0003C8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_IsValid_ReturnValue8' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_IsDedicatedServer_ReturnValue3) == 0x0003C9, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_IsDedicatedServer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, Temp_bool_Has_Been_Initd_Variable) == 0x0003CA, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_CreateDelegate_OutputDelegate) == 0x0003D0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Not_PreBool_ReturnValue2) == 0x0003E0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Not_PreBool_ReturnValue3) == 0x0003E1, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_IsValid_ReturnValue9) == 0x0003E2, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_IsValid_ReturnValue9' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BooleanAND_ReturnValue) == 0x0003E3, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_Event_Damage) == 0x0003E4, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_Event_DamageTags) == 0x0003E8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_Event_DamageTags' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_Event_Momentum) == 0x000408, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_Event_Momentum' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_Event_HitInfo) == 0x000418, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_Event_HitInfo' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_Event_InstigatedBy) == 0x000498, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_Event_DamageCauser) == 0x0004A0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_Event_EffectContext) == 0x0004A8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_Event_EffectContext' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_DynamicCast_AsFort_Projectile_Base) == 0x0004C0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_DynamicCast_AsFort_Projectile_Base' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_DynamicCast_bSuccess2) == 0x0004C8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_DynamicCast_AsFort_Weapon) == 0x0004D0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_DynamicCast_AsFort_Weapon' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_DynamicCast_bSuccess3) == 0x0004D8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_GetDamageZone_ReturnValue2) == 0x0004D9, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_GetDamageZone_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_SwitchEnum3_CmpSuccess) == 0x0004DA, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_SwitchEnum3_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x0004E0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_DynamicCast_bSuccess4) == 0x0004F0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x0004F1, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_K2_SetTimer_ReturnValue2) == 0x0004F8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_K2_SetTimer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_IsDedicatedServer_ReturnValue4) == 0x000500, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_IsDedicatedServer_ReturnValue4' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_GetSocketLocation_ReturnValue2) == 0x000504, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_GetSocketLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_IsValid_ReturnValue10) == 0x000510, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_IsValid_ReturnValue10' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000514, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_SpawnEmitterAtLocation_ReturnValue2) == 0x000520, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_SpawnEmitterAtLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000528, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_GetSocketLocation_ReturnValue3) == 0x00052C, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_GetSocketLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_SpawnEmitterAtLocation_ReturnValue3) == 0x000538, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_SpawnEmitterAtLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_RandomFloatInRange_ReturnValue5) == 0x000540, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_RandomFloatInRange_ReturnValue5' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_SpawnSoundAttached_ReturnValue2) == 0x000548, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_SpawnSoundAttached_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_GetSocketLocation_ReturnValue4) == 0x000550, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_GetSocketLocation_ReturnValue4' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_IsValid_ReturnValue11) == 0x00055C, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_IsValid_ReturnValue11' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_SpawnSoundAttached_ReturnValue3) == 0x000560, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_SpawnSoundAttached_ReturnValue3' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, Temp_struct_Variable2) == 0x000570, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Not_PreBool_ReturnValue4) == 0x0005A0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_AddComponent_ReturnValue2) == 0x0005A8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_AddComponent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, Temp_struct_Variable3) == 0x0005B0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, Temp_struct_Variable4) == 0x0005C0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0005D0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, Temp_bool_IsClosed_Variable) == 0x0005D1, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_BooleanAND_ReturnValue2) == 0x0005D2, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Add_FloatFloat_ReturnValue2) == 0x0005D4, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x0005D8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0005DC, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_Add_FloatFloat_ReturnValue3) == 0x0005E0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_Add_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_GetGameTimeInSeconds_ReturnValue2) == 0x0005E4, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_GetGameTimeInSeconds_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, Temp_bool_Variable2) == 0x0005E8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_Select_Default) == 0x0005EC, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, Temp_object_Variable) == 0x000600, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_LineTraceSingle_OutHit) == 0x000610, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_LineTraceSingle_ReturnValue) == 0x000690, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_IsValid_ReturnValue12) == 0x000691, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_IsValid_ReturnValue12' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue2) == 0x000698, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_K2_GetTextureParameterValue_ReturnValue) == 0x0006A0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_K2_GetTextureParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_GetNumMaterials_ReturnValue) == 0x0006A8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0006AC, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_IsValid_ReturnValue13) == 0x0006AD, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_IsValid_ReturnValue13' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_K2_GetTextureParameterValue_ReturnValue2) == 0x0006B0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_K2_GetTextureParameterValue_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_IsValid_ReturnValue14) == 0x0006B8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_IsValid_ReturnValue14' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0006C0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_K2_AttachToComponent_ReturnValue2) == 0x0006C8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_K2_AttachToComponent_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_CustomEvent_Delay_Amount) == 0x0006CC, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_CustomEvent_Delay_Amount' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0006D0, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent, K2Node_Event_bShouldUseSpecialEventGE) == 0x0006D8, "Member 'EnemyPawn_Parent_C_ExecuteUbergraph_EnemyPawn_Parent::K2Node_Event_bShouldUseSpecialEventGE' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.OnCheatUpdateSpecialEventGE
// 0x0001 (0x0001 - 0x0000)
struct EnemyPawn_Parent_C_OnCheatUpdateSpecialEventGE final
{
public:
	bool                                          bShouldUseSpecialEventGE;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemyPawn_Parent_C_OnCheatUpdateSpecialEventGE) == 0x000001, "Wrong alignment on EnemyPawn_Parent_C_OnCheatUpdateSpecialEventGE");
static_assert(sizeof(EnemyPawn_Parent_C_OnCheatUpdateSpecialEventGE) == 0x000001, "Wrong size on EnemyPawn_Parent_C_OnCheatUpdateSpecialEventGE");
static_assert(offsetof(EnemyPawn_Parent_C_OnCheatUpdateSpecialEventGE, bShouldUseSpecialEventGE) == 0x000000, "Member 'EnemyPawn_Parent_C_OnCheatUpdateSpecialEventGE::bShouldUseSpecialEventGE' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.RestorePreviousMaterialDelay
// 0x0004 (0x0004 - 0x0000)
struct EnemyPawn_Parent_C_RestorePreviousMaterialDelay final
{
public:
	float                                         Delay_Amount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemyPawn_Parent_C_RestorePreviousMaterialDelay) == 0x000004, "Wrong alignment on EnemyPawn_Parent_C_RestorePreviousMaterialDelay");
static_assert(sizeof(EnemyPawn_Parent_C_RestorePreviousMaterialDelay) == 0x000004, "Wrong size on EnemyPawn_Parent_C_RestorePreviousMaterialDelay");
static_assert(offsetof(EnemyPawn_Parent_C_RestorePreviousMaterialDelay, Delay_Amount) == 0x000000, "Member 'EnemyPawn_Parent_C_RestorePreviousMaterialDelay::Delay_Amount' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.OnDamagePlayEffects
// 0x00E0 (0x00E0 - 0x0000)
struct EnemyPawn_Parent_C_OnDamagePlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitInfo;                                           // 0x0038(0x0080)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00C8(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(EnemyPawn_Parent_C_OnDamagePlayEffects) == 0x000008, "Wrong alignment on EnemyPawn_Parent_C_OnDamagePlayEffects");
static_assert(sizeof(EnemyPawn_Parent_C_OnDamagePlayEffects) == 0x0000E0, "Wrong size on EnemyPawn_Parent_C_OnDamagePlayEffects");
static_assert(offsetof(EnemyPawn_Parent_C_OnDamagePlayEffects, Damage) == 0x000000, "Member 'EnemyPawn_Parent_C_OnDamagePlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnDamagePlayEffects, DamageTags) == 0x000008, "Member 'EnemyPawn_Parent_C_OnDamagePlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnDamagePlayEffects, Momentum) == 0x000028, "Member 'EnemyPawn_Parent_C_OnDamagePlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnDamagePlayEffects, HitInfo) == 0x000038, "Member 'EnemyPawn_Parent_C_OnDamagePlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnDamagePlayEffects, InstigatedBy) == 0x0000B8, "Member 'EnemyPawn_Parent_C_OnDamagePlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnDamagePlayEffects, DamageCauser) == 0x0000C0, "Member 'EnemyPawn_Parent_C_OnDamagePlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnDamagePlayEffects, EffectContext) == 0x0000C8, "Member 'EnemyPawn_Parent_C_OnDamagePlayEffects::EffectContext' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.DespawnEnemy
// 0x000C (0x000C - 0x0000)
struct EnemyPawn_Parent_C_DespawnEnemy final
{
public:
	struct FVector                                RiftLocationWS;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemyPawn_Parent_C_DespawnEnemy) == 0x000004, "Wrong alignment on EnemyPawn_Parent_C_DespawnEnemy");
static_assert(sizeof(EnemyPawn_Parent_C_DespawnEnemy) == 0x00000C, "Wrong size on EnemyPawn_Parent_C_DespawnEnemy");
static_assert(offsetof(EnemyPawn_Parent_C_DespawnEnemy, RiftLocationWS) == 0x000000, "Member 'EnemyPawn_Parent_C_DespawnEnemy::RiftLocationWS' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.OnDeathPlayEffects
// 0x00E0 (0x00E0 - 0x0000)
struct EnemyPawn_Parent_C_OnDeathPlayEffects final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  DamageTags;                                        // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Momentum;                                          // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitInfo;                                           // 0x0038(0x0080)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AFortPawn*                              InstigatedBy;                                      // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           EffectContext;                                     // 0x00C8(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(EnemyPawn_Parent_C_OnDeathPlayEffects) == 0x000008, "Wrong alignment on EnemyPawn_Parent_C_OnDeathPlayEffects");
static_assert(sizeof(EnemyPawn_Parent_C_OnDeathPlayEffects) == 0x0000E0, "Wrong size on EnemyPawn_Parent_C_OnDeathPlayEffects");
static_assert(offsetof(EnemyPawn_Parent_C_OnDeathPlayEffects, Damage) == 0x000000, "Member 'EnemyPawn_Parent_C_OnDeathPlayEffects::Damage' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnDeathPlayEffects, DamageTags) == 0x000008, "Member 'EnemyPawn_Parent_C_OnDeathPlayEffects::DamageTags' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnDeathPlayEffects, Momentum) == 0x000028, "Member 'EnemyPawn_Parent_C_OnDeathPlayEffects::Momentum' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnDeathPlayEffects, HitInfo) == 0x000038, "Member 'EnemyPawn_Parent_C_OnDeathPlayEffects::HitInfo' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnDeathPlayEffects, InstigatedBy) == 0x0000B8, "Member 'EnemyPawn_Parent_C_OnDeathPlayEffects::InstigatedBy' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnDeathPlayEffects, DamageCauser) == 0x0000C0, "Member 'EnemyPawn_Parent_C_OnDeathPlayEffects::DamageCauser' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnDeathPlayEffects, EffectContext) == 0x0000C8, "Member 'EnemyPawn_Parent_C_OnDeathPlayEffects::EffectContext' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.UserConstructionScript
// 0x00C0 (0x00C0 - 0x0000)
struct EnemyPawn_Parent_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam;                // 0x0020(0x0080)(IsPlainOldData, NoDestructor)
	TArray<struct FParticleSysParam>              K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnParticleSystemOnCharacterMesh_PSComponentReference; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemyPawn_Parent_C_UserConstructionScript) == 0x000010, "Wrong alignment on EnemyPawn_Parent_C_UserConstructionScript");
static_assert(sizeof(EnemyPawn_Parent_C_UserConstructionScript) == 0x0000C0, "Wrong size on EnemyPawn_Parent_C_UserConstructionScript");
static_assert(offsetof(EnemyPawn_Parent_C_UserConstructionScript, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'EnemyPawn_Parent_C_UserConstructionScript::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_UserConstructionScript, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000008, "Member 'EnemyPawn_Parent_C_UserConstructionScript::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_UserConstructionScript, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'EnemyPawn_Parent_C_UserConstructionScript::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_UserConstructionScript, K2Node_MakeStruct_ParticleSysParam) == 0x000020, "Member 'EnemyPawn_Parent_C_UserConstructionScript::K2Node_MakeStruct_ParticleSysParam' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x0000A0, "Member 'EnemyPawn_Parent_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_UserConstructionScript, CallFunc_GetScalarParameterValue_ReturnValue) == 0x0000B0, "Member 'EnemyPawn_Parent_C_UserConstructionScript::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_UserConstructionScript, CallFunc_SpawnParticleSystemOnCharacterMesh_PSComponentReference) == 0x0000B8, "Member 'EnemyPawn_Parent_C_UserConstructionScript::CallFunc_SpawnParticleSystemOnCharacterMesh_PSComponentReference' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.EnemyDeathVisuals
// 0x0360 (0x0360 - 0x0000)
struct EnemyPawn_Parent_C_EnemyDeathVisuals final
{
public:
	bool                                          HQ;                                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetVisualEffectQuality_ReturnValue;       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TransformHitLocationWorldSpaceToPreskinnedLocalSpace_PreskinnedLS; // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x002C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam;                // 0x0040(0x0080)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam2;               // 0x00C0(0x0080)(IsPlainOldData, NoDestructor)
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam3;               // 0x0140(0x0080)(IsPlainOldData, NoDestructor)
	TArray<struct FParticleSysParam>              K2Node_MakeArray_Array;                            // 0x01C0(0x0010)(ZeroConstructor, ReferenceParm)
	class UParticleSystemComponent*               CallFunc_SpawnParticleSystemOnCharacterMesh_PSComponentReference; // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D8[0x8];                                      // 0x01D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam4;               // 0x01E0(0x0080)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0264(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0270(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0288(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0294(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FParticleSysParam                      K2Node_MakeStruct_ParticleSysParam5;               // 0x02B0(0x0080)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FParticleSysParam>              K2Node_MakeArray_Array2;                           // 0x0338(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnParticleSystemOnCharacterMesh_PSComponentReference2; // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemyPawn_Parent_C_EnemyDeathVisuals) == 0x000010, "Wrong alignment on EnemyPawn_Parent_C_EnemyDeathVisuals");
static_assert(sizeof(EnemyPawn_Parent_C_EnemyDeathVisuals) == 0x000360, "Wrong size on EnemyPawn_Parent_C_EnemyDeathVisuals");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, HQ) == 0x000000, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::HQ' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_IsDedicatedServer_ReturnValue) == 0x000010, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_GetVisualEffectQuality_ReturnValue) == 0x000014, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_GetVisualEffectQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, K2Node_SwitchInteger_CmpSuccess) == 0x000019, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_TransformHitLocationWorldSpaceToPreskinnedLocalSpace_PreskinnedLS) == 0x00001C, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_TransformHitLocationWorldSpaceToPreskinnedLocalSpace_PreskinnedLS' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x00002C, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, K2Node_MakeStruct_ParticleSysParam) == 0x000040, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::K2Node_MakeStruct_ParticleSysParam' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, K2Node_MakeStruct_ParticleSysParam2) == 0x0000C0, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::K2Node_MakeStruct_ParticleSysParam2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, K2Node_MakeStruct_ParticleSysParam3) == 0x000140, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::K2Node_MakeStruct_ParticleSysParam3' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, K2Node_MakeArray_Array) == 0x0001C0, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_SpawnParticleSystemOnCharacterMesh_PSComponentReference) == 0x0001D0, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_SpawnParticleSystemOnCharacterMesh_PSComponentReference' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, K2Node_MakeStruct_ParticleSysParam4) == 0x0001E0, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::K2Node_MakeStruct_ParticleSysParam4' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_IsValid_ReturnValue2) == 0x000260, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_GetComponentBounds_Origin) == 0x000264, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_GetComponentBounds_BoxExtent) == 0x000270, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_GetComponentBounds_SphereRadius) == 0x00027C, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000280, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_IsValid_ReturnValue3) == 0x000284, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_GetSocketLocation_ReturnValue) == 0x000288, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000294, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0002A0, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_VSize_ReturnValue) == 0x0002A4, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x0002A8, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, K2Node_MakeStruct_ParticleSysParam5) == 0x0002B0, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::K2Node_MakeStruct_ParticleSysParam5' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_Lerp_ReturnValue) == 0x000330, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, K2Node_MakeArray_Array2) == 0x000338, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000348, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_EnemyDeathVisuals, CallFunc_SpawnParticleSystemOnCharacterMesh_PSComponentReference2) == 0x000350, "Member 'EnemyPawn_Parent_C_EnemyDeathVisuals::CallFunc_SpawnParticleSystemOnCharacterMesh_PSComponentReference2' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.StopDeathFX
// 0x0002 (0x0002 - 0x0000)
struct EnemyPawn_Parent_C_StopDeathFX final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemyPawn_Parent_C_StopDeathFX) == 0x000001, "Wrong alignment on EnemyPawn_Parent_C_StopDeathFX");
static_assert(sizeof(EnemyPawn_Parent_C_StopDeathFX) == 0x000002, "Wrong size on EnemyPawn_Parent_C_StopDeathFX");
static_assert(offsetof(EnemyPawn_Parent_C_StopDeathFX, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'EnemyPawn_Parent_C_StopDeathFX::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_StopDeathFX, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'EnemyPawn_Parent_C_StopDeathFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.PickColorFromAnArrayOfColors
// 0x0038 (0x0038 - 0x0000)
struct EnemyPawn_Parent_C_PickColorFromAnArrayOfColors final
{
public:
	TArray<struct FLinearColor>                   ArrayOfColors;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	struct FLinearColor                           Color;                                             // 0x0010(0x0010)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemyPawn_Parent_C_PickColorFromAnArrayOfColors) == 0x000008, "Wrong alignment on EnemyPawn_Parent_C_PickColorFromAnArrayOfColors");
static_assert(sizeof(EnemyPawn_Parent_C_PickColorFromAnArrayOfColors) == 0x000038, "Wrong size on EnemyPawn_Parent_C_PickColorFromAnArrayOfColors");
static_assert(offsetof(EnemyPawn_Parent_C_PickColorFromAnArrayOfColors, ArrayOfColors) == 0x000000, "Member 'EnemyPawn_Parent_C_PickColorFromAnArrayOfColors::ArrayOfColors' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_PickColorFromAnArrayOfColors, Color) == 0x000010, "Member 'EnemyPawn_Parent_C_PickColorFromAnArrayOfColors::Color' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_PickColorFromAnArrayOfColors, CallFunc_Array_LastIndex_ReturnValue) == 0x000020, "Member 'EnemyPawn_Parent_C_PickColorFromAnArrayOfColors::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_PickColorFromAnArrayOfColors, CallFunc_Percent_IntInt_ReturnValue) == 0x000024, "Member 'EnemyPawn_Parent_C_PickColorFromAnArrayOfColors::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_PickColorFromAnArrayOfColors, CallFunc_Array_Get_Item) == 0x000028, "Member 'EnemyPawn_Parent_C_PickColorFromAnArrayOfColors::CallFunc_Array_Get_Item' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.SetVectorParameterOnAllCharacterMIDs
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDs final
{
public:
	class FName                                   Parameter_Name;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Linear_Color;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDs) == 0x000008, "Wrong alignment on EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDs");
static_assert(sizeof(EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDs) == 0x000020, "Wrong size on EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDs");
static_assert(offsetof(EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDs, Parameter_Name) == 0x000000, "Member 'EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDs::Parameter_Name' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDs, Linear_Color) == 0x000008, "Member 'EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDs::Linear_Color' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDs, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDs::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDs, CallFunc_IsValid_ReturnValue2) == 0x000019, "Member 'EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDs::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDs, CallFunc_IsValid_ReturnValue3) == 0x00001A, "Member 'EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDs::CallFunc_IsValid_ReturnValue3' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.SetScalarParameterOnAllCharacterMIDs
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDs final
{
public:
	class FName                                   Parameter_Name;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Scalar_Value;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDs) == 0x000008, "Wrong alignment on EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDs");
static_assert(sizeof(EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDs) == 0x000010, "Wrong size on EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDs");
static_assert(offsetof(EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDs, Parameter_Name) == 0x000000, "Member 'EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDs::Parameter_Name' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDs, Scalar_Value) == 0x000008, "Member 'EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDs::Scalar_Value' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDs, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDs::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDs, CallFunc_IsValid_ReturnValue2) == 0x00000D, "Member 'EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDs::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDs, CallFunc_IsValid_ReturnValue3) == 0x00000E, "Member 'EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDs::CallFunc_IsValid_ReturnValue3' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.SetActiveParticlesOnCharacterMesh
// 0x0005 (0x0005 - 0x0000)
struct EnemyPawn_Parent_C_SetActiveParticlesOnCharacterMesh final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Reset;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemyPawn_Parent_C_SetActiveParticlesOnCharacterMesh) == 0x000001, "Wrong alignment on EnemyPawn_Parent_C_SetActiveParticlesOnCharacterMesh");
static_assert(sizeof(EnemyPawn_Parent_C_SetActiveParticlesOnCharacterMesh) == 0x000005, "Wrong size on EnemyPawn_Parent_C_SetActiveParticlesOnCharacterMesh");
static_assert(offsetof(EnemyPawn_Parent_C_SetActiveParticlesOnCharacterMesh, Active) == 0x000000, "Member 'EnemyPawn_Parent_C_SetActiveParticlesOnCharacterMesh::Active' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetActiveParticlesOnCharacterMesh, Reset) == 0x000001, "Member 'EnemyPawn_Parent_C_SetActiveParticlesOnCharacterMesh::Reset' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetActiveParticlesOnCharacterMesh, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'EnemyPawn_Parent_C_SetActiveParticlesOnCharacterMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetActiveParticlesOnCharacterMesh, CallFunc_IsValid_ReturnValue2) == 0x000003, "Member 'EnemyPawn_Parent_C_SetActiveParticlesOnCharacterMesh::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetActiveParticlesOnCharacterMesh, CallFunc_IsValid_ReturnValue3) == 0x000004, "Member 'EnemyPawn_Parent_C_SetActiveParticlesOnCharacterMesh::CallFunc_IsValid_ReturnValue3' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.PlayAdditiveHitReacts
// 0x0028 (0x0028 - 0x0000)
struct EnemyPawn_Parent_C_PlayAdditiveHitReacts final
{
public:
	struct FVector                                Hit_Direction;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Anim_Montage;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_SetFNameBasedOnHitDirection_NameResult;   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayLocalAnimMontage_ReturnValue;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemyPawn_Parent_C_PlayAdditiveHitReacts) == 0x000008, "Wrong alignment on EnemyPawn_Parent_C_PlayAdditiveHitReacts");
static_assert(sizeof(EnemyPawn_Parent_C_PlayAdditiveHitReacts) == 0x000028, "Wrong size on EnemyPawn_Parent_C_PlayAdditiveHitReacts");
static_assert(offsetof(EnemyPawn_Parent_C_PlayAdditiveHitReacts, Hit_Direction) == 0x000000, "Member 'EnemyPawn_Parent_C_PlayAdditiveHitReacts::Hit_Direction' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_PlayAdditiveHitReacts, Anim_Montage) == 0x000010, "Member 'EnemyPawn_Parent_C_PlayAdditiveHitReacts::Anim_Montage' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_PlayAdditiveHitReacts, CallFunc_SetFNameBasedOnHitDirection_NameResult) == 0x000018, "Member 'EnemyPawn_Parent_C_PlayAdditiveHitReacts::CallFunc_SetFNameBasedOnHitDirection_NameResult' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_PlayAdditiveHitReacts, CallFunc_PlayLocalAnimMontage_ReturnValue) == 0x000020, "Member 'EnemyPawn_Parent_C_PlayAdditiveHitReacts::CallFunc_PlayLocalAnimMontage_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.OverrideMaterialAndCopyParametersOnCharacterMesh
// 0x0028 (0x0028 - 0x0000)
struct EnemyPawn_Parent_C_OverrideMaterialAndCopyParametersOnCharacterMesh final
{
public:
	class UMaterialInterface*                     New_Material_To_Apply;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemyPawn_Parent_C_OverrideMaterialAndCopyParametersOnCharacterMesh) == 0x000008, "Wrong alignment on EnemyPawn_Parent_C_OverrideMaterialAndCopyParametersOnCharacterMesh");
static_assert(sizeof(EnemyPawn_Parent_C_OverrideMaterialAndCopyParametersOnCharacterMesh) == 0x000028, "Wrong size on EnemyPawn_Parent_C_OverrideMaterialAndCopyParametersOnCharacterMesh");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialAndCopyParametersOnCharacterMesh, New_Material_To_Apply) == 0x000000, "Member 'EnemyPawn_Parent_C_OverrideMaterialAndCopyParametersOnCharacterMesh::New_Material_To_Apply' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialAndCopyParametersOnCharacterMesh, CallFunc_IsDedicatedServer_ReturnValue) == 0x000008, "Member 'EnemyPawn_Parent_C_OverrideMaterialAndCopyParametersOnCharacterMesh::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialAndCopyParametersOnCharacterMesh, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'EnemyPawn_Parent_C_OverrideMaterialAndCopyParametersOnCharacterMesh::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialAndCopyParametersOnCharacterMesh, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'EnemyPawn_Parent_C_OverrideMaterialAndCopyParametersOnCharacterMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialAndCopyParametersOnCharacterMesh, CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue) == 0x000020, "Member 'EnemyPawn_Parent_C_OverrideMaterialAndCopyParametersOnCharacterMesh::CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.DestroyAwokenSkeletalMesh
// 0x0002 (0x0002 - 0x0000)
struct EnemyPawn_Parent_C_DestroyAwokenSkeletalMesh final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemyPawn_Parent_C_DestroyAwokenSkeletalMesh) == 0x000001, "Wrong alignment on EnemyPawn_Parent_C_DestroyAwokenSkeletalMesh");
static_assert(sizeof(EnemyPawn_Parent_C_DestroyAwokenSkeletalMesh) == 0x000002, "Wrong size on EnemyPawn_Parent_C_DestroyAwokenSkeletalMesh");
static_assert(offsetof(EnemyPawn_Parent_C_DestroyAwokenSkeletalMesh, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'EnemyPawn_Parent_C_DestroyAwokenSkeletalMesh::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_DestroyAwokenSkeletalMesh, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'EnemyPawn_Parent_C_DestroyAwokenSkeletalMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.OverridePhysicalMaterialOnCharacterMesh
// 0x0010 (0x0010 - 0x0000)
struct EnemyPawn_Parent_C_OverridePhysicalMaterialOnCharacterMesh final
{
public:
	class UPhysicalMaterial*                      Physical_Material_Override;                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemyPawn_Parent_C_OverridePhysicalMaterialOnCharacterMesh) == 0x000008, "Wrong alignment on EnemyPawn_Parent_C_OverridePhysicalMaterialOnCharacterMesh");
static_assert(sizeof(EnemyPawn_Parent_C_OverridePhysicalMaterialOnCharacterMesh) == 0x000010, "Wrong size on EnemyPawn_Parent_C_OverridePhysicalMaterialOnCharacterMesh");
static_assert(offsetof(EnemyPawn_Parent_C_OverridePhysicalMaterialOnCharacterMesh, Physical_Material_Override) == 0x000000, "Member 'EnemyPawn_Parent_C_OverridePhysicalMaterialOnCharacterMesh::Physical_Material_Override' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverridePhysicalMaterialOnCharacterMesh, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'EnemyPawn_Parent_C_OverridePhysicalMaterialOnCharacterMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverridePhysicalMaterialOnCharacterMesh, CallFunc_IsDedicatedServer_ReturnValue) == 0x000009, "Member 'EnemyPawn_Parent_C_OverridePhysicalMaterialOnCharacterMesh::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.SpawnParticleSystemOnCharacterMesh
// 0x0060 (0x0060 - 0x0000)
struct EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh final
{
public:
	class UParticleSystem*                        ParticleSystemTemplate;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               ParticleSystemComponentReferenceVar;               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachPointName;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0024(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	TArray<struct FParticleSysParam>              InstanceParameters;                                // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          AutoActivate;                                      // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AutoDestroy;                                       // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AbsoluteLocation;                                  // 0x0042(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AbsoluteRotation;                                  // 0x0043(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AbsoluteScale;                                     // 0x0044(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               PSComponentReference;                              // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh) == 0x000008, "Wrong alignment on EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh");
static_assert(sizeof(EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh) == 0x000060, "Wrong size on EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh, ParticleSystemTemplate) == 0x000000, "Member 'EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh::ParticleSystemTemplate' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh, ParticleSystemComponentReferenceVar) == 0x000008, "Member 'EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh::ParticleSystemComponentReferenceVar' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh, AttachPointName) == 0x000010, "Member 'EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh::AttachPointName' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh, Location) == 0x000018, "Member 'EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh::Location' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh, Rotation) == 0x000024, "Member 'EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh::Rotation' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh, InstanceParameters) == 0x000030, "Member 'EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh::InstanceParameters' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh, AutoActivate) == 0x000040, "Member 'EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh::AutoActivate' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh, AutoDestroy) == 0x000041, "Member 'EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh::AutoDestroy' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh, AbsoluteLocation) == 0x000042, "Member 'EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh::AbsoluteLocation' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh, AbsoluteRotation) == 0x000043, "Member 'EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh::AbsoluteRotation' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh, AbsoluteScale) == 0x000044, "Member 'EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh::AbsoluteScale' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh, PSComponentReference) == 0x000048, "Member 'EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh::PSComponentReference' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh, CallFunc_IsDedicatedServer_ReturnValue) == 0x000050, "Member 'EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh, CallFunc_IsValid_ReturnValue2) == 0x000052, "Member 'EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x000058, "Member 'EnemyPawn_Parent_C_SpawnParticleSystemOnCharacterMesh::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.SetCharacterFresnelGlowColors
// 0x0024 (0x0024 - 0x0000)
struct EnemyPawn_Parent_C_SetCharacterFresnelGlowColors final
{
public:
	struct FLinearColor                           Inner_Color;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Outer_Color;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemyPawn_Parent_C_SetCharacterFresnelGlowColors) == 0x000004, "Wrong alignment on EnemyPawn_Parent_C_SetCharacterFresnelGlowColors");
static_assert(sizeof(EnemyPawn_Parent_C_SetCharacterFresnelGlowColors) == 0x000024, "Wrong size on EnemyPawn_Parent_C_SetCharacterFresnelGlowColors");
static_assert(offsetof(EnemyPawn_Parent_C_SetCharacterFresnelGlowColors, Inner_Color) == 0x000000, "Member 'EnemyPawn_Parent_C_SetCharacterFresnelGlowColors::Inner_Color' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetCharacterFresnelGlowColors, Outer_Color) == 0x000010, "Member 'EnemyPawn_Parent_C_SetCharacterFresnelGlowColors::Outer_Color' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetCharacterFresnelGlowColors, CallFunc_IsDedicatedServer_ReturnValue) == 0x000020, "Member 'EnemyPawn_Parent_C_SetCharacterFresnelGlowColors::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.SetCharacterEyeColors
// 0x0024 (0x0024 - 0x0000)
struct EnemyPawn_Parent_C_SetCharacterEyeColors final
{
public:
	struct FLinearColor                           Eye_Color_Inner;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Eye_Color_Outer;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemyPawn_Parent_C_SetCharacterEyeColors) == 0x000004, "Wrong alignment on EnemyPawn_Parent_C_SetCharacterEyeColors");
static_assert(sizeof(EnemyPawn_Parent_C_SetCharacterEyeColors) == 0x000024, "Wrong size on EnemyPawn_Parent_C_SetCharacterEyeColors");
static_assert(offsetof(EnemyPawn_Parent_C_SetCharacterEyeColors, Eye_Color_Inner) == 0x000000, "Member 'EnemyPawn_Parent_C_SetCharacterEyeColors::Eye_Color_Inner' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetCharacterEyeColors, Eye_Color_Outer) == 0x000010, "Member 'EnemyPawn_Parent_C_SetCharacterEyeColors::Eye_Color_Outer' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetCharacterEyeColors, CallFunc_IsDedicatedServer_ReturnValue) == 0x000020, "Member 'EnemyPawn_Parent_C_SetCharacterEyeColors::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.RestorePreviousMaterialOnCharacterMesh
// 0x0018 (0x0018 - 0x0000)
struct EnemyPawn_Parent_C_RestorePreviousMaterialOnCharacterMesh final
{
public:
	float                                         Delay_in_Seconds;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemyPawn_Parent_C_RestorePreviousMaterialOnCharacterMesh) == 0x000008, "Wrong alignment on EnemyPawn_Parent_C_RestorePreviousMaterialOnCharacterMesh");
static_assert(sizeof(EnemyPawn_Parent_C_RestorePreviousMaterialOnCharacterMesh) == 0x000018, "Wrong size on EnemyPawn_Parent_C_RestorePreviousMaterialOnCharacterMesh");
static_assert(offsetof(EnemyPawn_Parent_C_RestorePreviousMaterialOnCharacterMesh, Delay_in_Seconds) == 0x000000, "Member 'EnemyPawn_Parent_C_RestorePreviousMaterialOnCharacterMesh::Delay_in_Seconds' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_RestorePreviousMaterialOnCharacterMesh, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'EnemyPawn_Parent_C_RestorePreviousMaterialOnCharacterMesh::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_RestorePreviousMaterialOnCharacterMesh, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000005, "Member 'EnemyPawn_Parent_C_RestorePreviousMaterialOnCharacterMesh::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_RestorePreviousMaterialOnCharacterMesh, CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue) == 0x000008, "Member 'EnemyPawn_Parent_C_RestorePreviousMaterialOnCharacterMesh::CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_RestorePreviousMaterialOnCharacterMesh, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'EnemyPawn_Parent_C_RestorePreviousMaterialOnCharacterMesh::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_RestorePreviousMaterialOnCharacterMesh, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'EnemyPawn_Parent_C_RestorePreviousMaterialOnCharacterMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.SpawnMeshAttachedToCharacter
// 0x0060 (0x0060 - 0x0000)
struct EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter final
{
public:
	class UStaticMesh*                            Static_Mesh;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Socket_Name;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Relative_Transform;                                // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          Absolute_Location;                                 // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Absolute_Rotation;                                 // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Absolute_Scale;                                    // 0x0042(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   Static_Mesh_Component_Reference;                   // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter) == 0x000010, "Wrong alignment on EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter");
static_assert(sizeof(EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter) == 0x000060, "Wrong size on EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter, Static_Mesh) == 0x000000, "Member 'EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter::Static_Mesh' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter, Socket_Name) == 0x000008, "Member 'EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter::Socket_Name' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter, Relative_Transform) == 0x000010, "Member 'EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter::Relative_Transform' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter, Absolute_Location) == 0x000040, "Member 'EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter::Absolute_Location' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter, Absolute_Rotation) == 0x000041, "Member 'EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter::Absolute_Rotation' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter, Absolute_Scale) == 0x000042, "Member 'EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter::Absolute_Scale' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter, Static_Mesh_Component_Reference) == 0x000048, "Member 'EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter::Static_Mesh_Component_Reference' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter, CallFunc_AddComponent_ReturnValue) == 0x000050, "Member 'EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter, CallFunc_SetStaticMesh_ReturnValue) == 0x000058, "Member 'EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000059, "Member 'EnemyPawn_Parent_C_SpawnMeshAttachedToCharacter::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.SpecialEventHalloweenPumpkinHeadHusk
// 0x0058 (0x0058 - 0x0000)
struct EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk final
{
public:
	bool                                          ApplyPumpkinHeadMesh;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DebugApplicationOrRemoval_;                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue;   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface2_CastInput; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue2;  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk) == 0x000008, "Wrong alignment on EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk");
static_assert(sizeof(EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk) == 0x000058, "Wrong size on EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk");
static_assert(offsetof(EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk, ApplyPumpkinHeadMesh) == 0x000000, "Member 'EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk::ApplyPumpkinHeadMesh' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk, DebugApplicationOrRemoval_) == 0x000001, "Member 'EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk::DebugApplicationOrRemoval_' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk, CallFunc_HasAuthority_ReturnValue) == 0x000002, "Member 'EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput) == 0x000008, "Member 'EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk, CallFunc_HasAllMatchingGameplayTags_ReturnValue) == 0x000018, "Member 'EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk::CallFunc_HasAllMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000020, "Member 'EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000028, "Member 'EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk, CallFunc_BooleanOR_ReturnValue) == 0x000030, "Member 'EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk, CallFunc_RandomFloat_ReturnValue) == 0x000034, "Member 'EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface2_CastInput) == 0x000040, "Member 'EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface2_CastInput' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk, CallFunc_HasAllMatchingGameplayTags_ReturnValue2) == 0x000050, "Member 'EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk::CallFunc_HasAllMatchingGameplayTags_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk, CallFunc_BooleanAND_ReturnValue) == 0x000051, "Member 'EnemyPawn_Parent_C_SpecialEventHalloweenPumpkinHeadHusk::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.OnRep_SpecialEventHalloweenPumpkinHeadApplied
// 0x0170 (0x0170 - 0x0000)
struct EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0030)(IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FParticleSysParam>              K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnParticleSystemOnCharacterMesh_PSComponentReference; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalOffset_SweepHitResult;         // 0x0068(0x0080)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x00E8(0x0080)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied) == 0x000010, "Wrong alignment on EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied");
static_assert(sizeof(EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied) == 0x000170, "Wrong size on EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied");
static_assert(offsetof(EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied, Temp_struct_Variable) == 0x000000, "Member 'EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000030, "Member 'EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied, CallFunc_AddComponent_ReturnValue) == 0x000038, "Member 'EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied, CallFunc_IsDedicatedServer_ReturnValue) == 0x000040, "Member 'EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied, CallFunc_IsValid_ReturnValue2) == 0x000042, "Member 'EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied, K2Node_MakeArray_Array) == 0x000048, "Member 'EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied, CallFunc_IsValid_ReturnValue3) == 0x000058, "Member 'EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied, CallFunc_SpawnParticleSystemOnCharacterMesh_PSComponentReference) == 0x000060, "Member 'EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied::CallFunc_SpawnParticleSystemOnCharacterMesh_PSComponentReference' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied, CallFunc_K2_AddLocalOffset_SweepHitResult) == 0x000068, "Member 'EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied::CallFunc_K2_AddLocalOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x0000E8, "Member 'EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000168, "Member 'EnemyPawn_Parent_C_OnRep_SpecialEventHalloweenPumpkinHeadApplied::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.OverrideMaterialFromMapByMeshTag
// 0x0088 (0x0088 - 0x0000)
struct EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag final
{
public:
	class FString                                 TagName;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          TagWasFound;                                       // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Map_Find_Value;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag) == 0x000008, "Wrong alignment on EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag");
static_assert(sizeof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag) == 0x000088, "Wrong size on EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag, TagName) == 0x000000, "Member 'EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag::TagName' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag, TagWasFound) == 0x000010, "Member 'EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag::TagWasFound' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag, Temp_bool_True_if_break_was_hit_Variable) == 0x000011, "Member 'EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag, Temp_int_Array_Index_Variable) == 0x000014, "Member 'EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag, CallFunc_IsDedicatedServer_ReturnValue) == 0x000019, "Member 'EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag, CallFunc_MakeLiteralString_ReturnValue) == 0x000020, "Member 'EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag, Temp_bool_Variable) == 0x000030, "Member 'EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag, K2Node_Select_Default) == 0x000038, "Member 'EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag, CallFunc_Map_Find_Value) == 0x000050, "Member 'EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag, CallFunc_Array_Get_Item) == 0x000060, "Member 'EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag, CallFunc_Conv_NameToString_ReturnValue) == 0x000070, "Member 'EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag, CallFunc_BooleanAND_ReturnValue) == 0x000080, "Member 'EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag, CallFunc_Map_Contains_ReturnValue) == 0x000081, "Member 'EnemyPawn_Parent_C_OverrideMaterialFromMapByMeshTag::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.OverwriteKeysInMaterialMap
// 0x0088 (0x0088 - 0x0000)
struct EnemyPawn_Parent_C_OverwriteKeysInMaterialMap final
{
public:
	class UMaterialInterface*                     Fire;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Ice;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Lightning;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Default;                                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             MaterialInterfacesArray;                           // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0068(0x0010)(ZeroConstructor, ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item2;                          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemyPawn_Parent_C_OverwriteKeysInMaterialMap) == 0x000008, "Wrong alignment on EnemyPawn_Parent_C_OverwriteKeysInMaterialMap");
static_assert(sizeof(EnemyPawn_Parent_C_OverwriteKeysInMaterialMap) == 0x000088, "Wrong size on EnemyPawn_Parent_C_OverwriteKeysInMaterialMap");
static_assert(offsetof(EnemyPawn_Parent_C_OverwriteKeysInMaterialMap, Fire) == 0x000000, "Member 'EnemyPawn_Parent_C_OverwriteKeysInMaterialMap::Fire' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverwriteKeysInMaterialMap, Ice) == 0x000008, "Member 'EnemyPawn_Parent_C_OverwriteKeysInMaterialMap::Ice' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverwriteKeysInMaterialMap, Lightning) == 0x000010, "Member 'EnemyPawn_Parent_C_OverwriteKeysInMaterialMap::Lightning' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverwriteKeysInMaterialMap, Default) == 0x000018, "Member 'EnemyPawn_Parent_C_OverwriteKeysInMaterialMap::Default' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverwriteKeysInMaterialMap, MaterialInterfacesArray) == 0x000020, "Member 'EnemyPawn_Parent_C_OverwriteKeysInMaterialMap::MaterialInterfacesArray' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverwriteKeysInMaterialMap, Temp_int_Array_Index_Variable) == 0x000030, "Member 'EnemyPawn_Parent_C_OverwriteKeysInMaterialMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverwriteKeysInMaterialMap, K2Node_MakeArray_Array) == 0x000038, "Member 'EnemyPawn_Parent_C_OverwriteKeysInMaterialMap::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverwriteKeysInMaterialMap, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'EnemyPawn_Parent_C_OverwriteKeysInMaterialMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverwriteKeysInMaterialMap, CallFunc_Array_Get_Item) == 0x000050, "Member 'EnemyPawn_Parent_C_OverwriteKeysInMaterialMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverwriteKeysInMaterialMap, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'EnemyPawn_Parent_C_OverwriteKeysInMaterialMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverwriteKeysInMaterialMap, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'EnemyPawn_Parent_C_OverwriteKeysInMaterialMap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverwriteKeysInMaterialMap, CallFunc_Less_IntInt_ReturnValue) == 0x00005D, "Member 'EnemyPawn_Parent_C_OverwriteKeysInMaterialMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverwriteKeysInMaterialMap, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'EnemyPawn_Parent_C_OverwriteKeysInMaterialMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverwriteKeysInMaterialMap, CallFunc_IsDedicatedServer_ReturnValue) == 0x000064, "Member 'EnemyPawn_Parent_C_OverwriteKeysInMaterialMap::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverwriteKeysInMaterialMap, CallFunc_Map_Keys_Keys) == 0x000068, "Member 'EnemyPawn_Parent_C_OverwriteKeysInMaterialMap::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_OverwriteKeysInMaterialMap, CallFunc_Array_Get_Item2) == 0x000078, "Member 'EnemyPawn_Parent_C_OverwriteKeysInMaterialMap::CallFunc_Array_Get_Item2' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.RestoreMaterialMapToDefaults
// 0x0001 (0x0001 - 0x0000)
struct EnemyPawn_Parent_C_RestoreMaterialMapToDefaults final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemyPawn_Parent_C_RestoreMaterialMapToDefaults) == 0x000001, "Wrong alignment on EnemyPawn_Parent_C_RestoreMaterialMapToDefaults");
static_assert(sizeof(EnemyPawn_Parent_C_RestoreMaterialMapToDefaults) == 0x000001, "Wrong size on EnemyPawn_Parent_C_RestoreMaterialMapToDefaults");
static_assert(offsetof(EnemyPawn_Parent_C_RestoreMaterialMapToDefaults, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'EnemyPawn_Parent_C_RestoreMaterialMapToDefaults::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.CreateDuplicateCharacterMesh
// 0x0060 (0x0060 - 0x0000)
struct EnemyPawn_Parent_C_CreateDuplicateCharacterMesh final
{
public:
	class UMaterialInterface*                     Material_to_Apply;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class USkeletalMeshComponent*                 CallFunc_AddComponent_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemyPawn_Parent_C_CreateDuplicateCharacterMesh) == 0x000010, "Wrong alignment on EnemyPawn_Parent_C_CreateDuplicateCharacterMesh");
static_assert(sizeof(EnemyPawn_Parent_C_CreateDuplicateCharacterMesh) == 0x000060, "Wrong size on EnemyPawn_Parent_C_CreateDuplicateCharacterMesh");
static_assert(offsetof(EnemyPawn_Parent_C_CreateDuplicateCharacterMesh, Material_to_Apply) == 0x000000, "Member 'EnemyPawn_Parent_C_CreateDuplicateCharacterMesh::Material_to_Apply' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_CreateDuplicateCharacterMesh, CallFunc_IsDedicatedServer_ReturnValue) == 0x000008, "Member 'EnemyPawn_Parent_C_CreateDuplicateCharacterMesh::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_CreateDuplicateCharacterMesh, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'EnemyPawn_Parent_C_CreateDuplicateCharacterMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_CreateDuplicateCharacterMesh, CallFunc_IsValid_ReturnValue2) == 0x00000A, "Member 'EnemyPawn_Parent_C_CreateDuplicateCharacterMesh::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_CreateDuplicateCharacterMesh, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'EnemyPawn_Parent_C_CreateDuplicateCharacterMesh::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_CreateDuplicateCharacterMesh, Temp_struct_Variable) == 0x000020, "Member 'EnemyPawn_Parent_C_CreateDuplicateCharacterMesh::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_CreateDuplicateCharacterMesh, CallFunc_AddComponent_ReturnValue) == 0x000050, "Member 'EnemyPawn_Parent_C_CreateDuplicateCharacterMesh::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_CreateDuplicateCharacterMesh, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000058, "Member 'EnemyPawn_Parent_C_CreateDuplicateCharacterMesh::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.SetDuplicateCharacterMeshHiddenInGame
// 0x0003 (0x0003 - 0x0000)
struct EnemyPawn_Parent_C_SetDuplicateCharacterMeshHiddenInGame final
{
public:
	bool                                          Hidden;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemyPawn_Parent_C_SetDuplicateCharacterMeshHiddenInGame) == 0x000001, "Wrong alignment on EnemyPawn_Parent_C_SetDuplicateCharacterMeshHiddenInGame");
static_assert(sizeof(EnemyPawn_Parent_C_SetDuplicateCharacterMeshHiddenInGame) == 0x000003, "Wrong size on EnemyPawn_Parent_C_SetDuplicateCharacterMeshHiddenInGame");
static_assert(offsetof(EnemyPawn_Parent_C_SetDuplicateCharacterMeshHiddenInGame, Hidden) == 0x000000, "Member 'EnemyPawn_Parent_C_SetDuplicateCharacterMeshHiddenInGame::Hidden' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetDuplicateCharacterMeshHiddenInGame, CallFunc_IsDedicatedServer_ReturnValue) == 0x000001, "Member 'EnemyPawn_Parent_C_SetDuplicateCharacterMeshHiddenInGame::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetDuplicateCharacterMeshHiddenInGame, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'EnemyPawn_Parent_C_SetDuplicateCharacterMeshHiddenInGame::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.SetParticlesOnCharacterMeshHiddenInGame
// 0x0003 (0x0003 - 0x0000)
struct EnemyPawn_Parent_C_SetParticlesOnCharacterMeshHiddenInGame final
{
public:
	bool                                          Hidden;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemyPawn_Parent_C_SetParticlesOnCharacterMeshHiddenInGame) == 0x000001, "Wrong alignment on EnemyPawn_Parent_C_SetParticlesOnCharacterMeshHiddenInGame");
static_assert(sizeof(EnemyPawn_Parent_C_SetParticlesOnCharacterMeshHiddenInGame) == 0x000003, "Wrong size on EnemyPawn_Parent_C_SetParticlesOnCharacterMeshHiddenInGame");
static_assert(offsetof(EnemyPawn_Parent_C_SetParticlesOnCharacterMeshHiddenInGame, Hidden) == 0x000000, "Member 'EnemyPawn_Parent_C_SetParticlesOnCharacterMeshHiddenInGame::Hidden' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetParticlesOnCharacterMeshHiddenInGame, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'EnemyPawn_Parent_C_SetParticlesOnCharacterMeshHiddenInGame::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetParticlesOnCharacterMeshHiddenInGame, CallFunc_IsValid_ReturnValue2) == 0x000002, "Member 'EnemyPawn_Parent_C_SetParticlesOnCharacterMeshHiddenInGame::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.TransformHitLocationWorldSpaceToPreskinnedLocalSpace
// 0x0070 (0x0070 - 0x0000)
struct EnemyPawn_Parent_C_TransformHitLocationWorldSpaceToPreskinnedLocalSpace final
{
public:
	struct FVector                                PreskinnedLS;                                      // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0040(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x004C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0058(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemyPawn_Parent_C_TransformHitLocationWorldSpaceToPreskinnedLocalSpace) == 0x000010, "Wrong alignment on EnemyPawn_Parent_C_TransformHitLocationWorldSpaceToPreskinnedLocalSpace");
static_assert(sizeof(EnemyPawn_Parent_C_TransformHitLocationWorldSpaceToPreskinnedLocalSpace) == 0x000070, "Wrong size on EnemyPawn_Parent_C_TransformHitLocationWorldSpaceToPreskinnedLocalSpace");
static_assert(offsetof(EnemyPawn_Parent_C_TransformHitLocationWorldSpaceToPreskinnedLocalSpace, PreskinnedLS) == 0x000000, "Member 'EnemyPawn_Parent_C_TransformHitLocationWorldSpaceToPreskinnedLocalSpace::PreskinnedLS' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_TransformHitLocationWorldSpaceToPreskinnedLocalSpace, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'EnemyPawn_Parent_C_TransformHitLocationWorldSpaceToPreskinnedLocalSpace::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_TransformHitLocationWorldSpaceToPreskinnedLocalSpace, CallFunc_GetSocketLocation_ReturnValue) == 0x000040, "Member 'EnemyPawn_Parent_C_TransformHitLocationWorldSpaceToPreskinnedLocalSpace::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_TransformHitLocationWorldSpaceToPreskinnedLocalSpace, CallFunc_InverseTransformLocation_ReturnValue) == 0x00004C, "Member 'EnemyPawn_Parent_C_TransformHitLocationWorldSpaceToPreskinnedLocalSpace::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_TransformHitLocationWorldSpaceToPreskinnedLocalSpace, CallFunc_Add_VectorVector_ReturnValue) == 0x000058, "Member 'EnemyPawn_Parent_C_TransformHitLocationWorldSpaceToPreskinnedLocalSpace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.SetVectorParameterOnAllCharacterMIDsByMap
// 0x00A0 (0x00A0 - 0x0000)
struct EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap final
{
public:
	TMap<class FName, struct FLinearColor>        Map;                                               // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0058(0x0010)(ZeroConstructor, ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLinearColor>                   CallFunc_Map_Values_Values;                        // 0x0078(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap) == 0x000008, "Wrong alignment on EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap");
static_assert(sizeof(EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap) == 0x0000A0, "Wrong size on EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap");
static_assert(offsetof(EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap, Map) == 0x000000, "Member 'EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap::Map' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap, Temp_int_Array_Index_Variable) == 0x000050, "Member 'EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap, CallFunc_Map_Keys_Keys) == 0x000058, "Member 'EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap, CallFunc_Array_Get_Item) == 0x000068, "Member 'EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap, CallFunc_Map_Values_Values) == 0x000078, "Member 'EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap, CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue) == 0x000098, "Member 'EnemyPawn_Parent_C_SetVectorParameterOnAllCharacterMIDsByMap::CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.SetScalarParameterOnAllCharacterMIDsByMap
// 0x0098 (0x0098 - 0x0000)
struct EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap final
{
public:
	TMap<class FName, float>                      Map;                                               // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor)
	TArray<float>                                 CallFunc_Map_Values_Values;                        // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item2;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap) == 0x000008, "Wrong alignment on EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap");
static_assert(sizeof(EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap) == 0x000098, "Wrong size on EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap");
static_assert(offsetof(EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap, Map) == 0x000000, "Member 'EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap::Map' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap, CallFunc_Map_Values_Values) == 0x000050, "Member 'EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap, CallFunc_Map_Keys_Keys) == 0x000060, "Member 'EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap, Temp_int_Array_Index_Variable) == 0x000074, "Member 'EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap, CallFunc_Array_Get_Item) == 0x00007C, "Member 'EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap, CallFunc_Array_Get_Item2) == 0x000088, "Member 'EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap, CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue) == 0x000090, "Member 'EnemyPawn_Parent_C_SetScalarParameterOnAllCharacterMIDsByMap::CallFunc_GetMIDForSkeletalMeshComponent_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.SpawnMinibossLight
// 0x0080 (0x0080 - 0x0000)
struct EnemyPawn_Parent_C_SpawnMinibossLight final
{
public:
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0000(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue2;           // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0018(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class UPointLightComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemyPawn_Parent_C_SpawnMinibossLight) == 0x000010, "Wrong alignment on EnemyPawn_Parent_C_SpawnMinibossLight");
static_assert(sizeof(EnemyPawn_Parent_C_SpawnMinibossLight) == 0x000080, "Wrong size on EnemyPawn_Parent_C_SpawnMinibossLight");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnMinibossLight, CallFunc_GetSocketLocation_ReturnValue) == 0x000000, "Member 'EnemyPawn_Parent_C_SpawnMinibossLight::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnMinibossLight, CallFunc_GetSocketLocation_ReturnValue2) == 0x00000C, "Member 'EnemyPawn_Parent_C_SpawnMinibossLight::CallFunc_GetSocketLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnMinibossLight, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000018, "Member 'EnemyPawn_Parent_C_SpawnMinibossLight::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnMinibossLight, CallFunc_BreakVector_X) == 0x000024, "Member 'EnemyPawn_Parent_C_SpawnMinibossLight::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnMinibossLight, CallFunc_BreakVector_Y) == 0x000028, "Member 'EnemyPawn_Parent_C_SpawnMinibossLight::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnMinibossLight, CallFunc_BreakVector_Z) == 0x00002C, "Member 'EnemyPawn_Parent_C_SpawnMinibossLight::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnMinibossLight, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'EnemyPawn_Parent_C_SpawnMinibossLight::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnMinibossLight, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'EnemyPawn_Parent_C_SpawnMinibossLight::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SpawnMinibossLight, CallFunc_AddComponent_ReturnValue) == 0x000070, "Member 'EnemyPawn_Parent_C_SpawnMinibossLight::CallFunc_AddComponent_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.SetMinibossLightHiddenInGame
// 0x0002 (0x0002 - 0x0000)
struct EnemyPawn_Parent_C_SetMinibossLightHiddenInGame final
{
public:
	bool                                          Hidden;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EnemyPawn_Parent_C_SetMinibossLightHiddenInGame) == 0x000001, "Wrong alignment on EnemyPawn_Parent_C_SetMinibossLightHiddenInGame");
static_assert(sizeof(EnemyPawn_Parent_C_SetMinibossLightHiddenInGame) == 0x000002, "Wrong size on EnemyPawn_Parent_C_SetMinibossLightHiddenInGame");
static_assert(offsetof(EnemyPawn_Parent_C_SetMinibossLightHiddenInGame, Hidden) == 0x000000, "Member 'EnemyPawn_Parent_C_SetMinibossLightHiddenInGame::Hidden' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_SetMinibossLightHiddenInGame, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'EnemyPawn_Parent_C_SetMinibossLightHiddenInGame::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function EnemyPawn_Parent.EnemyPawn_Parent_C.Orphaned
// 0x0010 (0x0010 - 0x0000)
struct EnemyPawn_Parent_C_Orphaned final
{
public:
	bool                                          IsOrphaned;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              AttachedPawn;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EnemyPawn_Parent_C_Orphaned) == 0x000008, "Wrong alignment on EnemyPawn_Parent_C_Orphaned");
static_assert(sizeof(EnemyPawn_Parent_C_Orphaned) == 0x000010, "Wrong size on EnemyPawn_Parent_C_Orphaned");
static_assert(offsetof(EnemyPawn_Parent_C_Orphaned, IsOrphaned) == 0x000000, "Member 'EnemyPawn_Parent_C_Orphaned::IsOrphaned' has a wrong offset!");
static_assert(offsetof(EnemyPawn_Parent_C_Orphaned, AttachedPawn) == 0x000008, "Member 'EnemyPawn_Parent_C_Orphaned::AttachedPawn' has a wrong offset!");

}

