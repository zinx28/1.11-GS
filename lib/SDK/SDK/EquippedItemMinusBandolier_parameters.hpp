#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EquippedItemMinusBandolier

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function EquippedItem-Bandolier.EquippedItem-Bandolier_C.UpdateCurrent
// 0x00A0 (0x00A0 - 0x0000)
struct EquippedItemMinusBandolier_C_UpdateCurrent final
{
public:
	int32                                         Current;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAmmoItemDefinition*                AmmoData;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0028(0x0078)()
};
static_assert(alignof(EquippedItemMinusBandolier_C_UpdateCurrent) == 0x000008, "Wrong alignment on EquippedItemMinusBandolier_C_UpdateCurrent");
static_assert(sizeof(EquippedItemMinusBandolier_C_UpdateCurrent) == 0x0000A0, "Wrong size on EquippedItemMinusBandolier_C_UpdateCurrent");
static_assert(offsetof(EquippedItemMinusBandolier_C_UpdateCurrent, Current) == 0x000000, "Member 'EquippedItemMinusBandolier_C_UpdateCurrent::Current' has a wrong offset!");
static_assert(offsetof(EquippedItemMinusBandolier_C_UpdateCurrent, AmmoData) == 0x000008, "Member 'EquippedItemMinusBandolier_C_UpdateCurrent::AmmoData' has a wrong offset!");
static_assert(offsetof(EquippedItemMinusBandolier_C_UpdateCurrent, CallFunc_Clamp_ReturnValue) == 0x000010, "Member 'EquippedItemMinusBandolier_C_UpdateCurrent::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemMinusBandolier_C_UpdateCurrent, CallFunc_BreakVector2D_X) == 0x000014, "Member 'EquippedItemMinusBandolier_C_UpdateCurrent::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(EquippedItemMinusBandolier_C_UpdateCurrent, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'EquippedItemMinusBandolier_C_UpdateCurrent::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(EquippedItemMinusBandolier_C_UpdateCurrent, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00001C, "Member 'EquippedItemMinusBandolier_C_UpdateCurrent::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemMinusBandolier_C_UpdateCurrent, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'EquippedItemMinusBandolier_C_UpdateCurrent::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemMinusBandolier_C_UpdateCurrent, K2Node_MakeStruct_SlateBrush) == 0x000028, "Member 'EquippedItemMinusBandolier_C_UpdateCurrent::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function EquippedItem-Bandolier.EquippedItem-Bandolier_C.UpdateCapacity
// 0x00A0 (0x00A0 - 0x0000)
struct EquippedItemMinusBandolier_C_UpdateCapacity final
{
public:
	int32                                         Capacity;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortAmmoItemDefinition*                AmmoData;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0028(0x0078)()
};
static_assert(alignof(EquippedItemMinusBandolier_C_UpdateCapacity) == 0x000008, "Wrong alignment on EquippedItemMinusBandolier_C_UpdateCapacity");
static_assert(sizeof(EquippedItemMinusBandolier_C_UpdateCapacity) == 0x0000A0, "Wrong size on EquippedItemMinusBandolier_C_UpdateCapacity");
static_assert(offsetof(EquippedItemMinusBandolier_C_UpdateCapacity, Capacity) == 0x000000, "Member 'EquippedItemMinusBandolier_C_UpdateCapacity::Capacity' has a wrong offset!");
static_assert(offsetof(EquippedItemMinusBandolier_C_UpdateCapacity, AmmoData) == 0x000008, "Member 'EquippedItemMinusBandolier_C_UpdateCapacity::AmmoData' has a wrong offset!");
static_assert(offsetof(EquippedItemMinusBandolier_C_UpdateCapacity, CallFunc_Clamp_ReturnValue) == 0x000010, "Member 'EquippedItemMinusBandolier_C_UpdateCapacity::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemMinusBandolier_C_UpdateCapacity, CallFunc_BreakVector2D_X) == 0x000014, "Member 'EquippedItemMinusBandolier_C_UpdateCapacity::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(EquippedItemMinusBandolier_C_UpdateCapacity, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'EquippedItemMinusBandolier_C_UpdateCapacity::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(EquippedItemMinusBandolier_C_UpdateCapacity, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00001C, "Member 'EquippedItemMinusBandolier_C_UpdateCapacity::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemMinusBandolier_C_UpdateCapacity, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'EquippedItemMinusBandolier_C_UpdateCapacity::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(EquippedItemMinusBandolier_C_UpdateCapacity, K2Node_MakeStruct_SlateBrush) == 0x000028, "Member 'EquippedItemMinusBandolier_C_UpdateCapacity::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

}

