#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FortniteGame

#include "Basic.hpp"

#include "FortniteGame_classes.hpp"
#include "FortniteGame_parameters.hpp"


namespace SDK
{

// Function FortniteGame.FortItemDefinition.CustomizePreviewMesh
// (Native, Public, BlueprintCallable)
// Parameters:
// class UMeshComponent*                   Mesh                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemDefinition::CustomizePreviewMesh(class UMeshComponent* Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "CustomizePreviewMesh");

	Params::FortItemDefinition_CustomizePreviewMesh Parms{};

	Parms.Mesh = Mesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortItemDefinition.CustomizePreviewPrefab
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           PrefabInstance                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemDefinition::CustomizePreviewPrefab(class AActor* PrefabInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "CustomizePreviewPrefab");

	Params::FortItemDefinition_CustomizePreviewPrefab Parms{};

	Parms.PrefabInstance = PrefabInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortItemDefinition.CreateTemporaryInstanceFromExistingItemBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        ExistingItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortItemDefinition::CreateTemporaryInstanceFromExistingItemBP(class UFortItem* ExistingItem, int32 Count, int32 Level) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "CreateTemporaryInstanceFromExistingItemBP");

	Params::FortItemDefinition_CreateTemporaryInstanceFromExistingItemBP Parms{};

	Parms.ExistingItem = ExistingItem;
	Parms.Count = Count;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemDefinition.CreateTemporaryItemInstanceBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortItemDefinition::CreateTemporaryItemInstanceBP(int32 Count, int32 Level) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "CreateTemporaryItemInstanceBP");

	Params::FortItemDefinition_CreateTemporaryItemInstanceBP Parms{};

	Parms.Count = Count;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemDefinition.GetDescription
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UFortItemDefinition::GetDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "GetDescription");

	Params::FortItemDefinition_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemDefinition.GetDisplayName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bBaseName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortItemDefinition::GetDisplayName(bool bBaseName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "GetDisplayName");

	Params::FortItemDefinition_GetDisplayName Parms{};

	Parms.bBaseName = bBaseName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemDefinition.GetDisplayStats
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortTooltipDisplayStatsList*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortTooltipDisplayStatsList* UFortItemDefinition::GetDisplayStats() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "GetDisplayStats");

	Params::FortItemDefinition_GetDisplayStats Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemDefinition.GetLargePreviewImage
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UFortItemDefinition::GetLargePreviewImage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "GetLargePreviewImage");

	Params::FortItemDefinition_GetLargePreviewImage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemDefinition.GetPersistentName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortItemDefinition::GetPersistentName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "GetPersistentName");

	Params::FortItemDefinition_GetPersistentName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemDefinition.GetPreviewAssets
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TSoftObjectPtr<class UObject>>   Assets                                                 (Parm, OutParm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

void UFortItemDefinition::GetPreviewAssets(TArray<TSoftObjectPtr<class UObject>>* Assets) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "GetPreviewAssets");

	Params::FortItemDefinition_GetPreviewAssets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Assets != nullptr)
		*Assets = std::move(Parms.Assets);
}


// Function FortniteGame.FortItemDefinition.GetPreviewMeshOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform UFortItemDefinition::GetPreviewMeshOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "GetPreviewMeshOffset");

	Params::FortItemDefinition_GetPreviewMeshOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemDefinition.GetPreviewPrefabAsset
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftClassPtr<class UClass>             Asset                                                  (Parm, OutParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemDefinition::GetPreviewPrefabAsset(TSoftClassPtr<class UClass>* Asset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "GetPreviewPrefabAsset");

	Params::FortItemDefinition_GetPreviewPrefabAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Asset != nullptr)
		*Asset = Parms.Asset;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemDefinition.GetPreviewSkeletalMeshAsset
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class USkeletalMesh>     Asset                                                  (Parm, OutParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemDefinition::GetPreviewSkeletalMeshAsset(TSoftObjectPtr<class USkeletalMesh>* Asset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "GetPreviewSkeletalMeshAsset");

	Params::FortItemDefinition_GetPreviewSkeletalMeshAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Asset != nullptr)
		*Asset = Parms.Asset;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemDefinition.GetPreviewStaticMeshAsset
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UStaticMesh>       Asset                                                  (Parm, OutParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemDefinition::GetPreviewStaticMeshAsset(TSoftObjectPtr<class UStaticMesh>* Asset) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "GetPreviewStaticMeshAsset");

	Params::FortItemDefinition_GetPreviewStaticMeshAsset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Asset != nullptr)
		*Asset = Parms.Asset;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemDefinition.GetRarity
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortRarity                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortRarity UFortItemDefinition::GetRarity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "GetRarity");

	Params::FortItemDefinition_GetRarity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemDefinition.GetShortDescription
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortItemDefinition::GetShortDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "GetShortDescription");

	Params::FortItemDefinition_GetShortDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemDefinition.GetSingleLineDescription
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortItemDefinition::GetSingleLineDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "GetSingleLineDescription");

	Params::FortItemDefinition_GetSingleLineDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemDefinition.GetSmallPreviewImage
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UFortItemDefinition::GetSmallPreviewImage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "GetSmallPreviewImage");

	Params::FortItemDefinition_GetSmallPreviewImage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemDefinition.GetSmallPreviewImageBrush
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSlateBrush                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSlateBrush UFortItemDefinition::GetSmallPreviewImageBrush() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "GetSmallPreviewImageBrush");

	Params::FortItemDefinition_GetSmallPreviewImageBrush Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemDefinition.GetTooltip
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UFortTooltip>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UFortTooltip> UFortItemDefinition::GetTooltip() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "GetTooltip");

	Params::FortItemDefinition_GetTooltip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemDefinition.IsInventorySizeLimited
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemDefinition::IsInventorySizeLimited() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "IsInventorySizeLimited");

	Params::FortItemDefinition_IsInventorySizeLimited Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemDefinition.ShouldShowPreviewOnCurrentHero
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemDefinition::ShouldShowPreviewOnCurrentHero() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinition", "ShouldShowPreviewOnCurrentHero");

	Params::FortItemDefinition_ShouldShowPreviewOnCurrentHero Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetEvolveRestrictionReasonText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EItemEvolutionRestrictionReason         Reason                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortItem::GetEvolveRestrictionReasonText(const EItemEvolutionRestrictionReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortItem", "GetEvolveRestrictionReasonText");

	Params::FortItem_GetEvolveRestrictionReasonText Parms{};

	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetUpgradeRestrictionReasonText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EItemUpgradeRestrictionReason           Reason                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortItem::GetUpgradeRestrictionReasonText(const EItemUpgradeRestrictionReason Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortItem", "GetUpgradeRestrictionReasonText");

	Params::FortItem_GetUpgradeRestrictionReasonText Parms{};

	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.SetOwningControllerForTemporaryItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            InController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItem::SetOwningControllerForTemporaryItem(class AFortPlayerController* InController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "SetOwningControllerForTemporaryItem");

	Params::FortItem_SetOwningControllerForTemporaryItem Parms{};

	Parms.InController = InController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortItem.CanBeDropped
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::CanBeDropped() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "CanBeDropped");

	Params::FortItem_CanBeDropped Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.CanBeUnslotted
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::CanBeUnslotted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "CanBeUnslotted");

	Params::FortItem_CanBeUnslotted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.CanBeUpgraded
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<EItemUpgradeRestrictionReason>   OutRestrictionReasons                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::CanBeUpgraded(TArray<EItemUpgradeRestrictionReason>* OutRestrictionReasons) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "CanBeUpgraded");

	Params::FortItem_CanBeUpgraded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRestrictionReasons != nullptr)
		*OutRestrictionReasons = std::move(Parms.OutRestrictionReasons);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.CanEvolve
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<EItemEvolutionRestrictionReason> OutRestrictionReasons                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::CanEvolve(TArray<EItemEvolutionRestrictionReason>* OutRestrictionReasons) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "CanEvolve");

	Params::FortItem_CanEvolve Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRestrictionReasons != nullptr)
		*OutRestrictionReasons = std::move(Parms.OutRestrictionReasons);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.CanUpgradeItemRarity
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<EItemEvolutionRestrictionReason> OutRestrictionReasons                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::CanUpgradeItemRarity(TArray<EItemEvolutionRestrictionReason>* OutRestrictionReasons) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "CanUpgradeItemRarity");

	Params::FortItem_CanUpgradeItemRarity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRestrictionReasons != nullptr)
		*OutRestrictionReasons = std::move(Parms.OutRestrictionReasons);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.DoesMatchSearchString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           SearchString                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::DoesMatchSearchString(const class FString& SearchString) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "DoesMatchSearchString");

	Params::FortItem_DoesMatchSearchString Parms{};

	Parms.SearchString = std::move(SearchString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetActiveAlterations
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   PretendLevel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortAlterationItemDefinition*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortAlterationItemDefinition*> UFortItem::GetActiveAlterations(int32 PretendLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetActiveAlterations");

	Params::FortItem_GetActiveAlterations Parms{};

	Parms.PretendLevel = PretendLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetAlterationSlots
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFortAlterationSlotStatus>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FFortAlterationSlotStatus> UFortItem::GetAlterationSlots() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetAlterationSlots");

	Params::FortItem_GetAlterationSlots Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetCoolDownTimeRemaining
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CooldownDuration                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortItem::GetCoolDownTimeRemaining(class AFortPlayerController* FortPC, float* CooldownDuration) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetCoolDownTimeRemaining");

	Params::FortItem_GetCoolDownTimeRemaining Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CooldownDuration != nullptr)
		*CooldownDuration = Parms.CooldownDuration;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetDescription
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortItem::GetDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetDescription");

	Params::FortItem_GetDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetDisplayName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortItem::GetDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetDisplayName");

	Params::FortItem_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetDurability
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortItem::GetDurability() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetDurability");

	Params::FortItem_GetDurability Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetFilterCategory
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortInventoryFilter                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortInventoryFilter UFortItem::GetFilterCategory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetFilterCategory");

	Params::FortItem_GetFilterCategory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetItemDefinitionBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItemDefinition*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItemDefinition* UFortItem::GetItemDefinitionBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetItemDefinitionBP");

	Params::FortItem_GetItemDefinitionBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetItemGuid
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                            ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGuid UFortItem::GetItemGuid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetItemGuid");

	Params::FortItem_GetItemGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetLargePreviewImage
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UFortItem::GetLargePreviewImage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetLargePreviewImage");

	Params::FortItem_GetLargePreviewImage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetLevel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortItem::GetLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetLevel");

	Params::FortItem_GetLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetLevelRelativeCostForRarityUpgrade
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortItem::GetLevelRelativeCostForRarityUpgrade() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetLevelRelativeCostForRarityUpgrade");

	Params::FortItem_GetLevelRelativeCostForRarityUpgrade Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetLoadedAmmo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortItem::GetLoadedAmmo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetLoadedAmmo");

	Params::FortItem_GetLoadedAmmo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetMaxLevel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortItem::GetMaxLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetMaxLevel");

	Params::FortItem_GetMaxLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetMaxTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortItemTier                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortItemTier UFortItem::GetMaxTier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetMaxTier");

	Params::FortItem_GetMaxTier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetNormalizedDurability
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortItem::GetNormalizedDurability() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetNormalizedDurability");

	Params::FortItem_GetNormalizedDurability Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetNumInStack
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortItem::GetNumInStack() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetNumInStack");

	Params::FortItem_GetNumInStack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetOwningController
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerController*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerController* UFortItem::GetOwningController() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetOwningController");

	Params::FortItem_GetOwningController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetPreviewAssets
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TSoftObjectPtr<class UObject>>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TSoftObjectPtr<class UObject>> UFortItem::GetPreviewAssets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetPreviewAssets");

	Params::FortItem_GetPreviewAssets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetPrimaryCategory
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ItemCategoryText                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::GetPrimaryCategory(class FText* ItemCategoryText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetPrimaryCategory");

	Params::FortItem_GetPrimaryCategory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ItemCategoryText != nullptr)
		*ItemCategoryText = std::move(Parms.ItemCategoryText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetRarity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortRarity                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortRarity UFortItem::GetRarity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetRarity");

	Params::FortItem_GetRarity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetRarityColor
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UFortItem::GetRarityColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetRarityColor");

	Params::FortItem_GetRarityColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetRaritySecondaryColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UFortItem::GetRaritySecondaryColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetRaritySecondaryColor");

	Params::FortItem_GetRaritySecondaryColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetRating
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortItem::GetRating() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetRating");

	Params::FortItem_GetRating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetRecycleValue
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortItem::GetRecycleValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetRecycleValue");

	Params::FortItem_GetRecycleValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetRemainingAmmo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortItem::GetRemainingAmmo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetRemainingAmmo");

	Params::FortItem_GetRemainingAmmo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetSchematicCraftingResultBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItemDefinition*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItemDefinition* UFortItem::GetSchematicCraftingResultBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetSchematicCraftingResultBP");

	Params::FortItem_GetSchematicCraftingResultBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetSchematicCraftingResultOrCraftedWeaponBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortWeaponItemDefinition*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortWeaponItemDefinition* UFortItem::GetSchematicCraftingResultOrCraftedWeaponBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetSchematicCraftingResultOrCraftedWeaponBP");

	Params::FortItem_GetSchematicCraftingResultOrCraftedWeaponBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetSchematicResultType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortItemType                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortItemType UFortItem::GetSchematicResultType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetSchematicResultType");

	Params::FortItem_GetSchematicResultType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetSearchTags
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortItem::GetSearchTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetSearchTags");

	Params::FortItem_GetSearchTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetSecondaryCategory
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ItemCategoryText                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FSlateBrush                      ItemCategoryBrush                                      (Parm, OutParm, NativeAccessSpecifierPublic)
// EFortBrushSize                          BrushSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::GetSecondaryCategory(class FText* ItemCategoryText, struct FSlateBrush* ItemCategoryBrush, EFortBrushSize BrushSize) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetSecondaryCategory");

	Params::FortItem_GetSecondaryCategory Parms{};

	Parms.BrushSize = BrushSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ItemCategoryText != nullptr)
		*ItemCategoryText = std::move(Parms.ItemCategoryText);

	if (ItemCategoryBrush != nullptr)
		*ItemCategoryBrush = std::move(Parms.ItemCategoryBrush);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetSmallPreviewImage
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UFortItem::GetSmallPreviewImage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetSmallPreviewImage");

	Params::FortItem_GetSmallPreviewImage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetTertiaryCategory
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ItemCategoryText                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FSlateBrush                      ItemCategoryBrush                                      (Parm, OutParm, NativeAccessSpecifierPublic)
// EFortBrushSize                          BrushSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::GetTertiaryCategory(class FText* ItemCategoryText, struct FSlateBrush* ItemCategoryBrush, EFortBrushSize BrushSize) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetTertiaryCategory");

	Params::FortItem_GetTertiaryCategory Parms{};

	Parms.BrushSize = BrushSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ItemCategoryText != nullptr)
		*ItemCategoryText = std::move(Parms.ItemCategoryText);

	if (ItemCategoryBrush != nullptr)
		*ItemCategoryBrush = std::move(Parms.ItemCategoryBrush);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortItemTier                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortItemTier UFortItem::GetTier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetTier");

	Params::FortItem_GetTier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortItemType                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortItemType UFortItem::GetType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetType");

	Params::FortItem_GetType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetUpgradeCost
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortItem::GetUpgradeCost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetUpgradeCost");

	Params::FortItem_GetUpgradeCost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.GetUpgradeResourceItemDefinition
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortPersistentResourceItemDefinition*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortPersistentResourceItemDefinition* UFortItem::GetUpgradeResourceItemDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "GetUpgradeResourceItemDefinition");

	Params::FortItem_GetUpgradeResourceItemDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.HasDurability
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::HasDurability() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "HasDurability");

	Params::FortItem_HasDurability Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.HasEvolutions
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::HasEvolutions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "HasEvolutions");

	Params::FortItem_HasEvolutions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.HasRarityUpgrade
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::HasRarityUpgrade() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "HasRarityUpgrade");

	Params::FortItem_HasRarityUpgrade Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.IsActivatable
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            FailureReason                                          (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::IsActivatable(class AFortPlayerController* FortPC, struct FGameplayTagContainer* FailureReason) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "IsActivatable");

	Params::FortItem_IsActivatable Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FailureReason != nullptr)
		*FailureReason = std::move(Parms.FailureReason);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.IsEquipable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerController*            EquippingPC                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::IsEquipable(const class AFortPlayerController* EquippingPC) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "IsEquipable");

	Params::FortItem_IsEquipable Parms{};

	Parms.EquippingPC = EquippingPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.IsEquipped
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::IsEquipped() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "IsEquipped");

	Params::FortItem_IsEquipped Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.IsInStorageVault
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::IsInStorageVault() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "IsInStorageVault");

	Params::FortItem_IsInStorageVault Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.IsInventoryOverflowItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::IsInventoryOverflowItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "IsInventoryOverflowItem");

	Params::FortItem_IsInventoryOverflowItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.IsSchematic
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::IsSchematic() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "IsSchematic");

	Params::FortItem_IsSchematic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.IsSchematicOrCraftedWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::IsSchematicOrCraftedWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "IsSchematicOrCraftedWeapon");

	Params::FortItem_IsSchematicOrCraftedWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.IsSlotted
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::IsSlotted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "IsSlotted");

	Params::FortItem_IsSlotted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.IsTemporaryItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::IsTemporaryItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "IsTemporaryItem");

	Params::FortItem_IsTemporaryItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItem.TryGetCategory
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortItemCategoryOrdinal                Ordinal                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutCategoryDisplayName                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    OutHasIcon                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortMultiSizeBrush              OutCategoryIconBrush                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItem::TryGetCategory(EFortItemCategoryOrdinal Ordinal, class FText* OutCategoryDisplayName, bool* OutHasIcon, struct FFortMultiSizeBrush* OutCategoryIconBrush) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItem", "TryGetCategory");

	Params::FortItem_TryGetCategory Parms{};

	Parms.Ordinal = Ordinal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCategoryDisplayName != nullptr)
		*OutCategoryDisplayName = std::move(Parms.OutCategoryDisplayName);

	if (OutHasIcon != nullptr)
		*OutHasIcon = Parms.OutHasIcon;

	if (OutCategoryIconBrush != nullptr)
		*OutCategoryIconBrush = std::move(Parms.OutCategoryIconBrush);

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.AssignFromWaitingList
// (Final, Native, Public, BlueprintCallable)

void AAIHotSpot::AssignFromWaitingList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "AssignFromWaitingList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AIHotSpot.AssignGroupToHotspot
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AAIController*>            GroupOfAI                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AAIHotSpot::AssignGroupToHotspot(const TArray<class AAIController*>& GroupOfAI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "AssignGroupToHotspot");

	Params::AIHotSpot_AssignGroupToHotspot Parms{};

	Parms.GroupOfAI = std::move(GroupOfAI);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.AssignToHotspot
// (Native, Public, BlueprintCallable)
// Parameters:
// class AAIController*                    AI                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAIHotSpot::AssignToHotspot(class AAIController* AI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "AssignToHotspot");

	Params::AIHotSpot_AssignToHotspot Parms{};

	Parms.AI = AI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.AssignToSlotByIndex
// (Native, Public, BlueprintCallable)
// Parameters:
// class AAIController*                    AI                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAIHotSpot::AssignToSlotByIndex(class AAIController* AI, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "AssignToSlotByIndex");

	Params::AIHotSpot_AssignToSlotByIndex Parms{};

	Parms.AI = AI;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.OccupySlotByIndex
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAIHotSpot::OccupySlotByIndex(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "OccupySlotByIndex");

	Params::AIHotSpot_OccupySlotByIndex Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.OnAssignedClaimedBehavior
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AAIController*                    AI                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWasOnWaitingList                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAIHotSpot::OnAssignedClaimedBehavior(class AAIController* AI, int32 Param_Index, int32 UserId, bool bWasOnWaitingList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "OnAssignedClaimedBehavior");

	Params::AIHotSpot_OnAssignedClaimedBehavior Parms{};

	Parms.AI = AI;
	Parms.Param_Index = Param_Index;
	Parms.UserId = UserId;
	Parms.bWasOnWaitingList = bWasOnWaitingList;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.OnAssignedOccupiedBehavior
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AAIController*                    AI                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAIHotSpot::OnAssignedOccupiedBehavior(class AAIController* AI, int32 Param_Index, int32 UserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "OnAssignedOccupiedBehavior");

	Params::AIHotSpot_OnAssignedOccupiedBehavior Parms{};

	Parms.AI = AI;
	Parms.Param_Index = Param_Index;
	Parms.UserId = UserId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.OnAssignedSlotlessBehavior
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AAIController*                    AI                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAIHotSpot::OnAssignedSlotlessBehavior(class AAIController* AI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "OnAssignedSlotlessBehavior");

	Params::AIHotSpot_OnAssignedSlotlessBehavior Parms{};

	Parms.AI = AI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.OnHotSpotDisabled
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)

void AAIHotSpot::OnHotSpotDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "OnHotSpotDisabled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AIHotSpot.OnHotSpotEnabled
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)

void AAIHotSpot::OnHotSpotEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "OnHotSpotEnabled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AIHotSpot.OnMoveToSlotFinished
// (BlueprintAuthorityOnly, Native, Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    AI                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bResult                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAIHotSpot::OnMoveToSlotFinished(class AAIController* AI, int32 Param_Index, int32 UserId, bool bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "OnMoveToSlotFinished");

	Params::AIHotSpot_OnMoveToSlotFinished Parms{};

	Parms.AI = AI;
	Parms.Param_Index = Param_Index;
	Parms.UserId = UserId;
	Parms.bResult = bResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AIHotSpot.OnRemovedBehavior
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AAIController*                    AI                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAIHotSpotSlot                          PrevState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWasOnWaitingList                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAIHotSpot::OnRemovedBehavior(class AAIController* AI, int32 Param_Index, int32 UserId, EAIHotSpotSlot PrevState, bool bWasOnWaitingList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "OnRemovedBehavior");

	Params::AIHotSpot_OnRemovedBehavior Parms{};

	Parms.AI = AI;
	Parms.Param_Index = Param_Index;
	Parms.UserId = UserId;
	Parms.PrevState = PrevState;
	Parms.bWasOnWaitingList = bWasOnWaitingList;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AIHotSpot.OnRemovedSlotlessBehavior
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AAIController*                    AI                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsClamingSlot                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAIHotSpot::OnRemovedSlotlessBehavior(class AAIController* AI, bool bIsClamingSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "OnRemovedSlotlessBehavior");

	Params::AIHotSpot_OnRemovedSlotlessBehavior Parms{};

	Parms.AI = AI;
	Parms.bIsClamingSlot = bIsClamingSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AIHotSpot.OnSlotBlocked
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AAIController*                    AI                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAIHotSpot::OnSlotBlocked(class AAIController* AI, int32 Param_Index, int32 UserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "OnSlotBlocked");

	Params::AIHotSpot_OnSlotBlocked Parms{};

	Parms.AI = AI;
	Parms.Param_Index = Param_Index;
	Parms.UserId = UserId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AIHotSpot.OnSlotClaimed
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AAIController*                    AI                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAIHotSpot::OnSlotClaimed(class AAIController* AI, int32 Param_Index, int32 UserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "OnSlotClaimed");

	Params::AIHotSpot_OnSlotClaimed Parms{};

	Parms.AI = AI;
	Parms.Param_Index = Param_Index;
	Parms.UserId = UserId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AIHotSpot.OnSlotDisabled
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAIHotSpot::OnSlotDisabled(int32 Param_Index, int32 UserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "OnSlotDisabled");

	Params::AIHotSpot_OnSlotDisabled Parms{};

	Parms.Param_Index = Param_Index;
	Parms.UserId = UserId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AIHotSpot.OnSlotEnabled
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAIHotSpot::OnSlotEnabled(int32 Param_Index, int32 UserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "OnSlotEnabled");

	Params::AIHotSpot_OnSlotEnabled Parms{};

	Parms.Param_Index = Param_Index;
	Parms.UserId = UserId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AIHotSpot.OnSlotFreed
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AAIController*                    AI                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAIHotSpot::OnSlotFreed(class AAIController* AI, int32 Param_Index, int32 UserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "OnSlotFreed");

	Params::AIHotSpot_OnSlotFreed Parms{};

	Parms.AI = AI;
	Parms.Param_Index = Param_Index;
	Parms.UserId = UserId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AIHotSpot.OnSlotOccupied
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AAIController*                    AI                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   UserId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAIHotSpot::OnSlotOccupied(class AAIController* AI, int32 Param_Index, int32 UserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "OnSlotOccupied");

	Params::AIHotSpot_OnSlotOccupied Parms{};

	Parms.AI = AI;
	Parms.Param_Index = Param_Index;
	Parms.UserId = UserId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AIHotSpot.RemoveFromHotspot
// (Native, Public, BlueprintCallable)
// Parameters:
// class AAIController*                    AI                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAssignFromWaitingList                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAIHotSpot::RemoveFromHotspot(class AAIController* AI, bool bAssignFromWaitingList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "RemoveFromHotspot");

	Params::AIHotSpot_RemoveFromHotspot Parms{};

	Parms.AI = AI;
	Parms.bAssignFromWaitingList = bAssignFromWaitingList;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.RemoveGroupFromHotspot
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AAIController*>            GroupOfAI                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AAIHotSpot::RemoveGroupFromHotspot(const TArray<class AAIController*>& GroupOfAI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "RemoveGroupFromHotspot");

	Params::AIHotSpot_RemoveGroupFromHotspot Parms{};

	Parms.GroupOfAI = std::move(GroupOfAI);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.SetEnabled
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AAIHotSpot::SetEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "SetEnabled");

	Params::AIHotSpot_SetEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AIHotSpot.CanUseSlotByIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AAIController*                    AI                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAIHotSpot::CanUseSlotByIndex(const class AAIController* AI, int32 Param_Index) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "CanUseSlotByIndex");

	Params::AIHotSpot_CanUseSlotByIndex Parms{};

	Parms.AI = AI;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.FindBestSlotIndex
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AAIController*                    AI                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AAIHotSpot::FindBestSlotIndex(class AAIController* AI) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "FindBestSlotIndex");

	Params::AIHotSpot_FindBestSlotIndex Parms{};

	Parms.AI = AI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.FindBestSlotIndices
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AAIController*>            AI                                                     (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<int32>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int32> AAIHotSpot::FindBestSlotIndices(const TArray<class AAIController*>& AI) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "FindBestSlotIndices");

	Params::AIHotSpot_FindBestSlotIndices Parms{};

	Parms.AI = std::move(AI);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.GetAssignedAI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAIHotSpotAssignmentFilter              Filter                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AAIController*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AAIController*> AAIHotSpot::GetAssignedAI(EAIHotSpotAssignmentFilter Filter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "GetAssignedAI");

	Params::AIHotSpot_GetAssignedAI Parms{};

	Parms.Filter = Filter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.GetAssignedAICount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAIHotSpotAssignmentFilter              Filter                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AAIHotSpot::GetAssignedAICount(EAIHotSpotAssignmentFilter Filter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "GetAssignedAICount");

	Params::AIHotSpot_GetAssignedAICount Parms{};

	Parms.Filter = Filter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.GetSlotByIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAIHotSpotSlot*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAIHotSpotSlot* AAIHotSpot::GetSlotByIndex(int32 Param_Index) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "GetSlotByIndex");

	Params::AIHotSpot_GetSlotByIndex Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.GetSlotByOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AAIController*                    AIOwner                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAIHotSpotSlot*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAIHotSpotSlot* AAIHotSpot::GetSlotByOwner(const class AAIController* AIOwner) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "GetSlotByOwner");

	Params::AIHotSpot_GetSlotByOwner Parms{};

	Parms.AIOwner = AIOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.GetSlotCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAIHotSpotSlotFilter                    Filter                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AAIHotSpot::GetSlotCount(EAIHotSpotSlotFilter Filter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "GetSlotCount");

	Params::AIHotSpot_GetSlotCount Parms{};

	Parms.Filter = Filter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.GetSlotIndexByOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AAIController*                    AIOwner                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AAIHotSpot::GetSlotIndexByOwner(const class AAIController* AIOwner) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "GetSlotIndexByOwner");

	Params::AIHotSpot_GetSlotIndexByOwner Parms{};

	Parms.AIOwner = AIOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.GetSlotLocationByIndex
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AAIHotSpot::GetSlotLocationByIndex(int32 Param_Index) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "GetSlotLocationByIndex");

	Params::AIHotSpot_GetSlotLocationByIndex Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.GetSlotOwnerByIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AAIController*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAIController* AAIHotSpot::GetSlotOwnerByIndex(int32 Param_Index) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "GetSlotOwnerByIndex");

	Params::AIHotSpot_GetSlotOwnerByIndex Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.GetSlotRotationByIndex
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator AAIHotSpot::GetSlotRotationByIndex(int32 Param_Index) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "GetSlotRotationByIndex");

	Params::AIHotSpot_GetSlotRotationByIndex Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.GetSlotStateByIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAIHotSpotSlot                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAIHotSpotSlot AAIHotSpot::GetSlotStateByIndex(int32 Param_Index) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "GetSlotStateByIndex");

	Params::AIHotSpot_GetSlotStateByIndex Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.GetSlotStateByOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AAIController*                    AIOwner                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAIHotSpotSlot                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAIHotSpotSlot AAIHotSpot::GetSlotStateByOwner(const class AAIController* AIOwner) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "GetSlotStateByOwner");

	Params::AIHotSpot_GetSlotStateByOwner Parms{};

	Parms.AIOwner = AIOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.GetSlotUserIdByIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AAIHotSpot::GetSlotUserIdByIndex(int32 Param_Index) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "GetSlotUserIdByIndex");

	Params::AIHotSpot_GetSlotUserIdByIndex Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.HasAssignedAI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AAIController*                    AI                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAIHotSpotAssignmentFilter              Filter                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAIHotSpot::HasAssignedAI(const class AAIController* AI, EAIHotSpotAssignmentFilter Filter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "HasAssignedAI");

	Params::AIHotSpot_HasAssignedAI Parms{};

	Parms.AI = AI;
	Parms.Filter = Filter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.HasEnabledSlots
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAIHotSpot::HasEnabledSlots() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "HasEnabledSlots");

	Params::AIHotSpot_HasEnabledSlots Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.IsAIAllowed
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AAIController*                    AI                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAIHotSpot::IsAIAllowed(const class AAIController* AI) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "IsAIAllowed");

	Params::AIHotSpot_IsAIAllowed Parms{};

	Parms.AI = AI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.IsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAIHotSpot::IsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "IsEnabled");

	Params::AIHotSpot_IsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpot.IsSlotlessAssignmentAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AAIHotSpot::IsSlotlessAssignmentAllowed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpot", "IsSlotlessAssignmentAllowed");

	Params::AIHotSpot_IsSlotlessAssignmentAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.ActivateSlot
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// EFortQuickBars                          InQuickBar                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ActivateDelay                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUpdatePreviousFocusedSlot                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ActivateSlot(EFortQuickBars InQuickBar, int32 Slot, float ActivateDelay, bool bUpdatePreviousFocusedSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ActivateSlot");

	Params::FortPlayerController_ActivateSlot Parms{};

	Parms.InQuickBar = InQuickBar;
	Parms.Slot = Slot;
	Parms.ActivateDelay = ActivateDelay;
	Parms.bUpdatePreviousFocusedSlot = bUpdatePreviousFocusedSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.AddItemToQuickBars
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItemDefinition*              ItemDefinition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortQuickBars                          QuickBarType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::AddItemToQuickBars(class UFortItemDefinition* ItemDefinition, EFortQuickBars QuickBarType, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "AddItemToQuickBars");

	Params::FortPlayerController_AddItemToQuickBars Parms{};

	Parms.ItemDefinition = ItemDefinition;
	Parms.QuickBarType = QuickBarType;
	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.Cheat
// (Final, Exec, Native, Protected)
// Parameters:
// class FString                           Msg                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::Cheat(const class FString& Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "Cheat");

	Params::FortPlayerController_Cheat Parms{};

	Parms.Msg = std::move(Msg);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.CheatAll
// (Final, Exec, Native, Protected)
// Parameters:
// class FString                           Msg                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::CheatAll(const class FString& Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "CheatAll");

	Params::FortPlayerController_CheatAll Parms{};

	Parms.Msg = std::move(Msg);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientAddHeroSpecialization
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// class UFortHeroSpecialization*          NewSpecialization                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientAddHeroSpecialization(const class UFortHeroSpecialization* NewSpecialization)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientAddHeroSpecialization");

	Params::FortPlayerController_ClientAddHeroSpecialization Parms{};

	Parms.NewSpecialization = NewSpecialization;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientAddScoreNumber
// (Net, Native, Event, Public, NetClient)
// Parameters:
// int32                                   Score                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EStatCategory                           ScoreCategory                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize              ScoreLocation                                          (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bDisplayScoreOnPlayer                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientAddScoreNumber(int32 Score, EStatCategory ScoreCategory, const struct FVector_NetQuantize& ScoreLocation, bool bDisplayScoreOnPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientAddScoreNumber");

	Params::FortPlayerController_ClientAddScoreNumber Parms{};

	Parms.Score = Score;
	Parms.ScoreCategory = ScoreCategory;
	Parms.ScoreLocation = std::move(ScoreLocation);
	Parms.bDisplayScoreOnPlayer = bDisplayScoreOnPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientCancelCrafting
// (Net, NetReliable, Native, Event, Public, NetClient)

void AFortPlayerController::ClientCancelCrafting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientCancelCrafting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientCreateOrJoinChatRoom
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FString                           ChatRoomId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientCreateOrJoinChatRoom(const class FString& ChatRoomId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientCreateOrJoinChatRoom");

	Params::FortPlayerController_ClientCreateOrJoinChatRoom Parms{};

	Parms.ChatRoomId = std::move(ChatRoomId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientDrawAttentionToUI
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// struct FGuid                            MissionGuid                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            ObjectiveHandle                                        (Parm, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientDrawAttentionToUI(const struct FGuid& MissionGuid, const struct FGameplayTagContainer& ObjectiveHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientDrawAttentionToUI");

	Params::FortPlayerController_ClientDrawAttentionToUI Parms{};

	Parms.MissionGuid = std::move(MissionGuid);
	Parms.ObjectiveHandle = std::move(ObjectiveHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientExecuteInventoryItem
// (Net, NetReliable, Native, Event, Protected, HasDefaults, NetClient)
// Parameters:
// struct FGuid                            ItemGuid                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceExecute                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientExecuteInventoryItem(const struct FGuid& ItemGuid, float Delay, bool bForceExecute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientExecuteInventoryItem");

	Params::FortPlayerController_ClientExecuteInventoryItem Parms{};

	Parms.ItemGuid = std::move(ItemGuid);
	Parms.Delay = Delay;
	Parms.bForceExecute = bForceExecute;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientFinishedInteractionInZone
// (Net, NetReliable, Native, Event, Public, NetClient)

void AFortPlayerController::ClientFinishedInteractionInZone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientFinishedInteractionInZone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientForceCancelBuildingTool
// (Net, NetReliable, Native, Event, Public, NetClient)

void AFortPlayerController::ClientForceCancelBuildingTool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientForceCancelBuildingTool");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientForceProfileQuery
// (Net, NetReliable, Native, Event, Public, NetClient)

void AFortPlayerController::ClientForceProfileQuery()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientForceProfileQuery");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientGivePlayerLocalAccountItem
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class UFortAccountItemDefinition*       ItemDefinition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientGivePlayerLocalAccountItem(class UFortAccountItemDefinition* ItemDefinition, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientGivePlayerLocalAccountItem");

	Params::FortPlayerController_ClientGivePlayerLocalAccountItem Parms{};

	Parms.ItemDefinition = ItemDefinition;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientJoinConsoleSession
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// class FString                           ConsoleSession                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientJoinConsoleSession(const class FString& ConsoleSession)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientJoinConsoleSession");

	Params::FortPlayerController_ClientJoinConsoleSession Parms{};

	Parms.ConsoleSession = std::move(ConsoleSession);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientOnGenericPlayerInitialization
// (Net, NetReliable, Native, Event, Public, NetClient)

void AFortPlayerController::ClientOnGenericPlayerInitialization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientOnGenericPlayerInitialization");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientOpenChoiceUI
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// struct FChoiceData                      ChoiceItems                                            (Parm, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientOpenChoiceUI(const struct FChoiceData& ChoiceItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientOpenChoiceUI");

	Params::FortPlayerController_ClientOpenChoiceUI Parms{};

	Parms.ChoiceItems = std::move(ChoiceItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientPingMinimap
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// struct FVector                          WorldLocation                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     PingColor                                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientPingMinimap(const struct FVector& WorldLocation, const struct FLinearColor& PingColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientPingMinimap");

	Params::FortPlayerController_ClientPingMinimap Parms{};

	Parms.WorldLocation = std::move(WorldLocation);
	Parms.PingColor = std::move(PingColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientReadyCheckComplete
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// bool                                    bPassed                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientReadyCheckComplete(bool bPassed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientReadyCheckComplete");

	Params::FortPlayerController_ClientReadyCheckComplete Parms{};

	Parms.bPassed = bPassed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientReceivedAttributeSources
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FGameplayAttribute               Attribute                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAbilitySystemComponent*      AbilitySystemComponent                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FAttributeModifierInfo>   Sources                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientReceivedAttributeSources(const struct FGameplayAttribute& Attribute, class UFortAbilitySystemComponent* AbilitySystemComponent, const TArray<struct FAttributeModifierInfo>& Sources)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientReceivedAttributeSources");

	Params::FortPlayerController_ClientReceivedAttributeSources Parms{};

	Parms.Attribute = std::move(Attribute);
	Parms.AbilitySystemComponent = AbilitySystemComponent;
	Parms.Sources = std::move(Sources);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientReceivePresetTeamChat
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FText                             ChatText                                               (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 SenderID                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientReceivePresetTeamChat(const class FText& ChatText, const struct FUniqueNetIdRepl& SenderID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientReceivePresetTeamChat");

	Params::FortPlayerController_ClientReceivePresetTeamChat Parms{};

	Parms.ChatText = std::move(ChatText);
	Parms.SenderID = std::move(SenderID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientRegisterWithParty
// (Net, NetReliable, Native, Event, Public, NetClient)

void AFortPlayerController::ClientRegisterWithParty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientRegisterWithParty");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientReportDamagedResourceBuilding
// (Net, Native, Event, Public, NetClient)
// Parameters:
// class ABuildingSMActor*                 BuildingSMActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortResourceType                       PotentialResourceType                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PotentialResourceCount                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDestroyed                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bJustHitWeakspot                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientReportDamagedResourceBuilding(class ABuildingSMActor* BuildingSMActor, EFortResourceType PotentialResourceType, int32 PotentialResourceCount, bool bDestroyed, bool bJustHitWeakspot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientReportDamagedResourceBuilding");

	Params::FortPlayerController_ClientReportDamagedResourceBuilding Parms{};

	Parms.BuildingSMActor = BuildingSMActor;
	Parms.PotentialResourceType = PotentialResourceType;
	Parms.PotentialResourceCount = PotentialResourceCount;
	Parms.bDestroyed = bDestroyed;
	Parms.bJustHitWeakspot = bJustHitWeakspot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientRequestReadyCheck
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
// Parameters:
// class FText                             QueryText                                              (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             YesText                                                (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             NoText                                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientRequestReadyCheck(const class FText& QueryText, const class FText& YesText, const class FText& NoText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientRequestReadyCheck");

	Params::FortPlayerController_ClientRequestReadyCheck Parms{};

	Parms.QueryText = std::move(QueryText);
	Parms.YesText = std::move(YesText);
	Parms.NoText = std::move(NoText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientSendConfirmationMessage
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FText                             ConfirmationMessage                                    (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bClientQuitAfterMessage                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientSendConfirmationMessage(const class FText& ConfirmationMessage, bool bClientQuitAfterMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientSendConfirmationMessage");

	Params::FortPlayerController_ClientSendConfirmationMessage Parms{};

	Parms.ConfirmationMessage = std::move(ConfirmationMessage);
	Parms.bClientQuitAfterMessage = bClientQuitAfterMessage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientSendMessage
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// class FText                             MESSAGE                                                (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientSendMessage(const class FText& MESSAGE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientSendMessage");

	Params::FortPlayerController_ClientSendMessage Parms{};

	Parms.MESSAGE = std::move(MESSAGE);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientSetActionMappingEnabled
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class FName                             ActionName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientSetActionMappingEnabled(class FName ActionName, bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientSetActionMappingEnabled");

	Params::FortPlayerController_ClientSetActionMappingEnabled Parms{};

	Parms.ActionName = ActionName;
	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientSetInviteFlags
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FJoinabilitySettings             Settings                                               (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientSetInviteFlags(const struct FJoinabilitySettings& Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientSetInviteFlags");

	Params::FortPlayerController_ClientSetInviteFlags Parms{};

	Parms.Settings = std::move(Settings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientSetSpectatorCamera
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// struct FVector                          CameraLocation                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         CameraRotation                                         (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientSetSpectatorCamera(const struct FVector& CameraLocation, const struct FRotator& CameraRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientSetSpectatorCamera");

	Params::FortPlayerController_ClientSetSpectatorCamera Parms{};

	Parms.CameraLocation = std::move(CameraLocation);
	Parms.CameraRotation = std::move(CameraRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientStayWithParty
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                                    bStayWithParty                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientStayWithParty(bool bStayWithParty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientStayWithParty");

	Params::FortPlayerController_ClientStayWithParty Parms{};

	Parms.bStayWithParty = bStayWithParty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientStopUIFeedbackEvent
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientStopUIFeedbackEvent(class FName EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientStopUIFeedbackEvent");

	Params::FortPlayerController_ClientStopUIFeedbackEvent Parms{};

	Parms.EventName = EventName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientTriggerUIFeedbackEvent
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientTriggerUIFeedbackEvent(class FName EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientTriggerUIFeedbackEvent");

	Params::FortPlayerController_ClientTriggerUIFeedbackEvent Parms{};

	Parms.EventName = EventName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ClientUpdateRichPresence
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// ERichPresenceStateChange                RichPresenceChange                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bImportant                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ClientUpdateRichPresence(ERichPresenceStateChange RichPresenceChange, bool bImportant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ClientUpdateRichPresence");

	Params::FortPlayerController_ClientUpdateRichPresence Parms{};

	Parms.RichPresenceChange = RichPresenceChange;
	Parms.bImportant = bImportant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.DeployDefender
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ABuildingTrapDefender*            DefenderTrap                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortDefenderItem*                DefenderItem                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             DefenderSquadId                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        WeaponItem                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AmmoQuantity                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::DeployDefender(class ABuildingTrapDefender* DefenderTrap, const class UFortDefenderItem* DefenderItem, const class FName& DefenderSquadId, const class UFortItem* WeaponItem, const int32 AmmoQuantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "DeployDefender");

	Params::FortPlayerController_DeployDefender Parms{};

	Parms.DefenderTrap = DefenderTrap;
	Parms.DefenderItem = DefenderItem;
	Parms.DefenderSquadId = DefenderSquadId;
	Parms.WeaponItem = WeaponItem;
	Parms.AmmoQuantity = AmmoQuantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.Emote
// (Exec, Native, Public, HasOutParams)
// Parameters:
// class FName                             AssetName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::Emote(const class FName& AssetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "Emote");

	Params::FortPlayerController_Emote Parms{};

	Parms.AssetName = AssetName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.FixupInteractionWidgetsOnUnzoom
// (Final, Native, Protected, BlueprintCallable)

void AFortPlayerController::FixupInteractionWidgetsOnUnzoom()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "FixupInteractionWidgetsOnUnzoom");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ForceUpdateQuickbar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortQuickBars                          QuickbarToRefresh                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ForceUpdateQuickbar(EFortQuickBars QuickbarToRefresh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ForceUpdateQuickbar");

	Params::FortPlayerController_ForceUpdateQuickbar Parms{};

	Parms.QuickbarToRefresh = QuickbarToRefresh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.FortClientPlaySound
// (Net, Native, Event, Public, NetClient)
// Parameters:
// class USoundBase*                       Sound                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VolumeMultiplier                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PitchMultiplier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::FortClientPlaySound(class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "FortClientPlaySound");

	Params::FortPlayerController_FortClientPlaySound Parms{};

	Parms.Sound = Sound;
	Parms.VolumeMultiplier = VolumeMultiplier;
	Parms.PitchMultiplier = PitchMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.FortClientPlaySoundAtLocation
// (Net, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// class USoundBase*                       Sound                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VolumeMultiplier                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PitchMultiplier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::FortClientPlaySoundAtLocation(class USoundBase* Sound, const struct FVector& Location, float VolumeMultiplier, float PitchMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "FortClientPlaySoundAtLocation");

	Params::FortPlayerController_FortClientPlaySoundAtLocation Parms{};

	Parms.Sound = Sound;
	Parms.Location = std::move(Location);
	Parms.VolumeMultiplier = VolumeMultiplier;
	Parms.PitchMultiplier = PitchMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.GetAIDirectorDataManager
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortAIDirectorDataManager*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortAIDirectorDataManager* AFortPlayerController::GetAIDirectorDataManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "GetAIDirectorDataManager");

	Params::FortPlayerController_GetAIDirectorDataManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.GetAtNameHomeBaseScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerController::GetAtNameHomeBaseScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "GetAtNameHomeBaseScreen");

	Params::FortPlayerController_GetAtNameHomeBaseScreen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.GivePlayerAmmo
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   AmmoCount                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::GivePlayerAmmo(int32 AmmoCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "GivePlayerAmmo");

	Params::FortPlayerController_GivePlayerAmmo Parms{};

	Parms.AmmoCount = AmmoCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.HandleOutpostInventoryLocalUpdate
// (Final, Native, Public)

void AFortPlayerController::HandleOutpostInventoryLocalUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "HandleOutpostInventoryLocalUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.HandleWorldInventoryLocalUpdate
// (Final, Native, Public)

void AFortPlayerController::HandleWorldInventoryLocalUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "HandleWorldInventoryLocalUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.LocalOnBlueprintEdit
// (Final, Native, Protected)
// Parameters:
// class ABuildingSMActor*                 EditedActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::LocalOnBlueprintEdit(class ABuildingSMActor* EditedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "LocalOnBlueprintEdit");

	Params::FortPlayerController_LocalOnBlueprintEdit Parms{};

	Parms.EditedActor = EditedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.LocalOnUiChoiceCompleted
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ChosenItem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MenuIdentifier                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::LocalOnUiChoiceCompleted(int32 ChosenItem, int32 MenuIdentifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "LocalOnUiChoiceCompleted");

	Params::FortPlayerController_LocalOnUiChoiceCompleted Parms{};

	Parms.ChosenItem = ChosenItem;
	Parms.MenuIdentifier = MenuIdentifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.LocalPlayForceFeedback
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UForceFeedbackEffect*             ForceFeedbackEffect                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLooping                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::LocalPlayForceFeedback(class UForceFeedbackEffect* ForceFeedbackEffect, bool bLooping, class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "LocalPlayForceFeedback");

	Params::FortPlayerController_LocalPlayForceFeedback Parms{};

	Parms.ForceFeedbackEffect = ForceFeedbackEffect;
	Parms.bLooping = bLooping;
	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.LocalStopForceFeedback
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UForceFeedbackEffect*             ForceFeedbackEffect                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::LocalStopForceFeedback(class UForceFeedbackEffect* ForceFeedbackEffect, class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "LocalStopForceFeedback");

	Params::FortPlayerController_LocalStopForceFeedback Parms{};

	Parms.ForceFeedbackEffect = ForceFeedbackEffect;
	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.OnDisplayHitMarker
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            HitTags                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EFortDamageZone                         Zone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::OnDisplayHitMarker(const struct FGameplayTagContainer& HitTags, EFortDamageZone Zone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "OnDisplayHitMarker");

	Params::FortPlayerController_OnDisplayHitMarker Parms{};

	Parms.HitTags = std::move(HitTags);
	Parms.Zone = Zone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortPlayerController.OnRep_bHasServerFinishedLoading
// (Final, Native, Protected)

void AFortPlayerController::OnRep_bHasServerFinishedLoading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "OnRep_bHasServerFinishedLoading");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.OnRep_CheatMovement
// (Final, Native, Protected)

void AFortPlayerController::OnRep_CheatMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "OnRep_CheatMovement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.OnRep_CombatManager
// (Final, Native, Protected)

void AFortPlayerController::OnRep_CombatManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "OnRep_CombatManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.OnRep_IntensityGraphInfo
// (Final, Native, Public)

void AFortPlayerController::OnRep_IntensityGraphInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "OnRep_IntensityGraphInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.OnRep_LatestRewardReport
// (Final, Native, Protected)

void AFortPlayerController::OnRep_LatestRewardReport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "OnRep_LatestRewardReport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.OnRep_PIDContributionsGraphInfo
// (Final, Native, Public)

void AFortPlayerController::OnRep_PIDContributionsGraphInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "OnRep_PIDContributionsGraphInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.OnRep_PIDValuesGraphInfo
// (Final, Native, Public)

void AFortPlayerController::OnRep_PIDValuesGraphInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "OnRep_PIDValuesGraphInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.OnRep_PinnedSchematics
// (Native, Protected)

void AFortPlayerController::OnRep_PinnedSchematics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "OnRep_PinnedSchematics");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.OnRep_QuickBar
// (Native, Protected)

void AFortPlayerController::OnRep_QuickBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "OnRep_QuickBar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.OnRep_UpdatedObjectiveStats
// (Final, Native, Protected)

void AFortPlayerController::OnRep_UpdatedObjectiveStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "OnRep_UpdatedObjectiveStats");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.OnRep_UpdatedUnsavedPrimaryMissionProgress
// (Final, Native, Protected)

void AFortPlayerController::OnRep_UpdatedUnsavedPrimaryMissionProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "OnRep_UpdatedUnsavedPrimaryMissionProgress");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.OpenChoiceUI
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FChoiceData                      ChoiceData                                             (Parm, NativeAccessSpecifierPublic)

void AFortPlayerController::OpenChoiceUI(const struct FChoiceData& ChoiceData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "OpenChoiceUI");

	Params::FortPlayerController_OpenChoiceUI Parms{};

	Parms.ChoiceData = std::move(ChoiceData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.PlayEmoteItem
// (Exec, Native, Public)
// Parameters:
// class UFortMontageItemDefinitionBase*   EmoteAsset                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::PlayEmoteItem(const class UFortMontageItemDefinitionBase* EmoteAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "PlayEmoteItem");

	Params::FortPlayerController_PlayEmoteItem Parms{};

	Parms.EmoteAsset = EmoteAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.PlaySpatialSound
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class USoundBase*                       Sound                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::PlaySpatialSound(class USoundBase* Sound, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "PlaySpatialSound");

	Params::FortPlayerController_PlaySpatialSound Parms{};

	Parms.Sound = Sound;
	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.PostHeroStatCollectionBookProgressMade
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   LevelReached                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::PostHeroStatCollectionBookProgressMade(int32 LevelReached)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "PostHeroStatCollectionBookProgressMade");

	Params::FortPlayerController_PostHeroStatCollectionBookProgressMade Parms{};

	Parms.LevelReached = LevelReached;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.PostHeroStatMissionCompleted
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   DifficultyRating                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::PostHeroStatMissionCompleted(int32 DifficultyRating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "PostHeroStatMissionCompleted");

	Params::FortPlayerController_PostHeroStatMissionCompleted Parms{};

	Parms.DifficultyRating = DifficultyRating;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.PostHeroStatSkillPointsEarned
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   NumSkillPoints                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::PostHeroStatSkillPointsEarned(int32 NumSkillPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "PostHeroStatSkillPointsEarned");

	Params::FortPlayerController_PostHeroStatSkillPointsEarned Parms{};

	Parms.NumSkillPoints = NumSkillPoints;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.PrintDebugInfo
// (Exec, Native, Protected)

void AFortPlayerController::PrintDebugInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "PrintDebugInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.PrintEventInfo
// (Final, Exec, Native, Protected)

void AFortPlayerController::PrintEventInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "PrintEventInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.RemoveItemFromQuickBars
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItemDefinition*              ItemDefinition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::RemoveItemFromQuickBars(class UFortItemDefinition* ItemDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "RemoveItemFromQuickBars");

	Params::FortPlayerController_RemoveItemFromQuickBars Parms{};

	Parms.ItemDefinition = ItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ResetInputRotationScale
// (Final, Native, Public, BlueprintCallable)

void AFortPlayerController::ResetInputRotationScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ResetInputRotationScale");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ReturnToMainMenu
// (Native, Public, BlueprintCallable)

void AFortPlayerController::ReturnToMainMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ReturnToMainMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.SendMessage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             MESSAGE                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerController::SendMessage(const class FText& MESSAGE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "SendMessage");

	Params::FortPlayerController_SendMessage Parms{};

	Parms.MESSAGE = std::move(MESSAGE);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerAnnouncementStoppedOnClient
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FGuid                            AnnouncementId                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerAnnouncementStoppedOnClient(const struct FGuid& AnnouncementId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerAnnouncementStoppedOnClient");

	Params::FortPlayerController_ServerAnnouncementStoppedOnClient Parms{};

	Parms.AnnouncementId = std::move(AnnouncementId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerAttemptInteract
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class AActor*                           ReceivingActor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              InteractComponent                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETInteractionType                       InteractType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerAttemptInteract(class AActor* ReceivingActor, class UPrimitiveComponent* InteractComponent, ETInteractionType InteractType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerAttemptInteract");

	Params::FortPlayerController_ServerAttemptInteract Parms{};

	Parms.ReceivingActor = ReceivingActor;
	Parms.InteractComponent = InteractComponent;
	Parms.InteractType = InteractType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerAttemptPinSchematic
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           ItemId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSave                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerAttemptPinSchematic(const class FString& ItemId, bool bSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerAttemptPinSchematic");

	Params::FortPlayerController_ServerAttemptPinSchematic Parms{};

	Parms.ItemId = std::move(ItemId);
	Parms.bSave = bSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerAttemptUnpinSchematic
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           ItemId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSave                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerAttemptUnpinSchematic(const class FString& ItemId, bool bSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerAttemptUnpinSchematic");

	Params::FortPlayerController_ServerAttemptUnpinSchematic Parms{};

	Parms.ItemId = std::move(ItemId);
	Parms.bSave = bSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerBeginEditingBuildingActor
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ABuildingSMActor*                 BuildingActorToEdit                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerBeginEditingBuildingActor(class ABuildingSMActor* BuildingActorToEdit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerBeginEditingBuildingActor");

	Params::FortPlayerController_ServerBeginEditingBuildingActor Parms{};

	Parms.BuildingActorToEdit = BuildingActorToEdit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerBroadcastUIFeedbackEvent
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerBroadcastUIFeedbackEvent(class FName EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerBroadcastUIFeedbackEvent");

	Params::FortPlayerController_ServerBroadcastUIFeedbackEvent Parms{};

	Parms.EventName = EventName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerCheat
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FString                           Msg                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerCheat(const class FString& Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerCheat");

	Params::FortPlayerController_ServerCheat Parms{};

	Parms.Msg = std::move(Msg);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerCheatAll
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FString                           Msg                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerCheatAll(const class FString& Msg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerCheatAll");

	Params::FortPlayerController_ServerCheatAll Parms{};

	Parms.Msg = std::move(Msg);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerClientPawnLoaded
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                                    bIsPawnLoaded                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerClientPawnLoaded(bool bIsPawnLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerClientPawnLoaded");

	Params::FortPlayerController_ServerClientPawnLoaded Parms{};

	Parms.bIsPawnLoaded = bIsPawnLoaded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerCraftSchematic
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           ItemId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PostCraftSlot                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsQuickCrafted                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerCraftSchematic(const class FString& ItemId, int32 PostCraftSlot, bool bIsQuickCrafted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerCraftSchematic");

	Params::FortPlayerController_ServerCraftSchematic Parms{};

	Parms.ItemId = std::move(ItemId);
	Parms.PostCraftSlot = PostCraftSlot;
	Parms.bIsQuickCrafted = bIsQuickCrafted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerCreateAIDirectorDataManager
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFortPlayerController::ServerCreateAIDirectorDataManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerCreateAIDirectorDataManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerCreateBuildingActor
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FBuildingClassData               BuildingClassData                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize10            BuildLoc                                               (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         BuildRot                                               (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bMirrored                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerCreateBuildingActor(const struct FBuildingClassData& BuildingClassData, const struct FVector_NetQuantize10& BuildLoc, const struct FRotator& BuildRot, bool bMirrored)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerCreateBuildingActor");

	Params::FortPlayerController_ServerCreateBuildingActor Parms{};

	Parms.BuildingClassData = std::move(BuildingClassData);
	Parms.BuildLoc = std::move(BuildLoc);
	Parms.BuildRot = std::move(BuildRot);
	Parms.bMirrored = bMirrored;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerCreateCombatManager
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFortPlayerController::ServerCreateCombatManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerCreateCombatManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerDeployDefender
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// class ABuildingTrapDefender*            DefenderTrap                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SelectedItemInstanceId                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             DefenderSquadId                                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            WeaponToGiveGuid                                       (ConstParm, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AmmoQuantity                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerDeployDefender(class ABuildingTrapDefender* DefenderTrap, const class FString& SelectedItemInstanceId, const class FName& DefenderSquadId, const struct FGuid& WeaponToGiveGuid, const int32 AmmoQuantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerDeployDefender");

	Params::FortPlayerController_ServerDeployDefender Parms{};

	Parms.DefenderTrap = DefenderTrap;
	Parms.SelectedItemInstanceId = std::move(SelectedItemInstanceId);
	Parms.DefenderSquadId = DefenderSquadId;
	Parms.WeaponToGiveGuid = std::move(WeaponToGiveGuid);
	Parms.AmmoQuantity = AmmoQuantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerDisassembleInventoryItems
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// TArray<struct FGuid>                    ItemGuids                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           ItemCounts                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerDisassembleInventoryItems(const TArray<struct FGuid>& ItemGuids, const TArray<int32>& ItemCounts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerDisassembleInventoryItems");

	Params::FortPlayerController_ServerDisassembleInventoryItems Parms{};

	Parms.ItemGuids = std::move(ItemGuids);
	Parms.ItemCounts = std::move(ItemCounts);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerDropCarriedObject
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortPlayerController::ServerDropCarriedObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerDropCarriedObject");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerEditBuildingActor
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ABuildingSMActor*                 BuildingActorToEdit                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ABuildingSMActor>     NewBuildingClass                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RotationIterations                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMirrored                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerEditBuildingActor(class ABuildingSMActor* BuildingActorToEdit, TSubclassOf<class ABuildingSMActor> NewBuildingClass, int32 RotationIterations, bool bMirrored)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerEditBuildingActor");

	Params::FortPlayerController_ServerEditBuildingActor Parms{};

	Parms.BuildingActorToEdit = BuildingActorToEdit;
	Parms.NewBuildingClass = NewBuildingClass;
	Parms.RotationIterations = RotationIterations;
	Parms.bMirrored = bMirrored;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerEmote
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FName                             AssetName                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerEmote(const class FName& AssetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerEmote");

	Params::FortPlayerController_ServerEmote Parms{};

	Parms.AssetName = AssetName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerEndEditingBuildingActor
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ABuildingSMActor*                 BuildingActorToStopEditing                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerEndEditingBuildingActor(class ABuildingSMActor* BuildingActorToStopEditing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerEndEditingBuildingActor");

	Params::FortPlayerController_ServerEndEditingBuildingActor Parms{};

	Parms.BuildingActorToStopEditing = BuildingActorToStopEditing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerExecuteInventoryItem
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FGuid                            ItemGuid                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerExecuteInventoryItem(const struct FGuid& ItemGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerExecuteInventoryItem");

	Params::FortPlayerController_ServerExecuteInventoryItem Parms{};

	Parms.ItemGuid = std::move(ItemGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerExecutePresetTeamChat
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FText                             ChatText                                               (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 SenderID                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerExecutePresetTeamChat(const class FText& ChatText, const struct FUniqueNetIdRepl& SenderID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerExecutePresetTeamChat");

	Params::FortPlayerController_ServerExecutePresetTeamChat Parms{};

	Parms.ChatText = std::move(ChatText);
	Parms.SenderID = std::move(SenderID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerGiftInventoryItemToOtherPlayer
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FGuid                            ItemGuid                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 PlayerID                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quantity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerGiftInventoryItemToOtherPlayer(const struct FGuid& ItemGuid, const struct FUniqueNetIdRepl& PlayerID, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerGiftInventoryItemToOtherPlayer");

	Params::FortPlayerController_ServerGiftInventoryItemToOtherPlayer Parms{};

	Parms.ItemGuid = std::move(ItemGuid);
	Parms.PlayerID = std::move(PlayerID);
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerHandleMissionEvent_StartLeavingZone
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class AFortPlayerPawn*                  PlayerRequestingLeaving                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerHandleMissionEvent_StartLeavingZone(class AFortPlayerPawn* PlayerRequestingLeaving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerHandleMissionEvent_StartLeavingZone");

	Params::FortPlayerController_ServerHandleMissionEvent_StartLeavingZone Parms{};

	Parms.PlayerRequestingLeaving = PlayerRequestingLeaving;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerHandleMissionEvent_ToggledCursorMode
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class AFortPlayerController*            PlayerThatToggledCursorMode                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOpened                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerHandleMissionEvent_ToggledCursorMode(class AFortPlayerController* PlayerThatToggledCursorMode, bool bOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerHandleMissionEvent_ToggledCursorMode");

	Params::FortPlayerController_ServerHandleMissionEvent_ToggledCursorMode Parms{};

	Parms.PlayerThatToggledCursorMode = PlayerThatToggledCursorMode;
	Parms.bOpened = bOpened;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerHandleMissionEvent_ToggledEditMode
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class AFortPlayerController*            PlayerThatToggledEditMode                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABuildingSMActor*                 EditableActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOpened                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerHandleMissionEvent_ToggledEditMode(class AFortPlayerController* PlayerThatToggledEditMode, class ABuildingSMActor* EditableActor, bool bOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerHandleMissionEvent_ToggledEditMode");

	Params::FortPlayerController_ServerHandleMissionEvent_ToggledEditMode Parms{};

	Parms.PlayerThatToggledEditMode = PlayerThatToggledEditMode;
	Parms.EditableActor = EditableActor;
	Parms.bOpened = bOpened;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerItemWillBeDestroyed
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FGuid                            DestroyedItemGuid                                      (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerItemWillBeDestroyed(const struct FGuid& DestroyedItemGuid, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerItemWillBeDestroyed");

	Params::FortPlayerController_ServerItemWillBeDestroyed Parms{};

	Parms.DestroyedItemGuid = std::move(DestroyedItemGuid);
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerKickPlayer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerToKick                                           (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             Reason                                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerKickPlayer(const struct FUniqueNetIdRepl& PlayerToKick, const class FText& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerKickPlayer");

	Params::FortPlayerController_ServerKickPlayer Parms{};

	Parms.PlayerToKick = std::move(PlayerToKick);
	Parms.Reason = std::move(Reason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerKillAllAIPawnsAroundPlayer
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFortPlayerController::ServerKillAllAIPawnsAroundPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerKillAllAIPawnsAroundPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerLoadingScreenDropped
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortPlayerController::ServerLoadingScreenDropped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerLoadingScreenDropped");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerModDurability
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FGuid                            ItemGuid                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DurabilityMod                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceSet                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerModDurability(const struct FGuid& ItemGuid, float DurabilityMod, bool bForceSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerModDurability");

	Params::FortPlayerController_ServerModDurability Parms{};

	Parms.ItemGuid = std::move(ItemGuid);
	Parms.DurabilityMod = DurabilityMod;
	Parms.bForceSet = bForceSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerModifyStat
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FName                             StatName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EStatMod                                ModType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceStatSave                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerModifyStat(class FName StatName, int32 Amount, EStatMod ModType, bool bForceStatSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerModifyStat");

	Params::FortPlayerController_ServerModifyStat Parms{};

	Parms.StatName = StatName;
	Parms.Amount = Amount;
	Parms.ModType = ModType;
	Parms.bForceStatSave = bForceStatSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerPingMinimap
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                          WorldLocation                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     PingColor                                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortTeam                               RequiredTeam                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerPingMinimap(const struct FVector& WorldLocation, const struct FLinearColor& PingColor, EFortTeam RequiredTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerPingMinimap");

	Params::FortPlayerController_ServerPingMinimap Parms{};

	Parms.WorldLocation = std::move(WorldLocation);
	Parms.PingColor = std::move(PingColor);
	Parms.RequiredTeam = RequiredTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerPlayEmoteItem
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class UFortMontageItemDefinitionBase*   EmoteAsset                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerPlayEmoteItem(const class UFortMontageItemDefinitionBase* EmoteAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerPlayEmoteItem");

	Params::FortPlayerController_ServerPlayEmoteItem Parms{};

	Parms.EmoteAsset = EmoteAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerReadyToStartMatch
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFortPlayerController::ServerReadyToStartMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerReadyToStartMatch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerReleaseInventoryItemKey
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// EFortQuickBars                          InQuickBar                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerReleaseInventoryItemKey(EFortQuickBars InQuickBar, int32 Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerReleaseInventoryItemKey");

	Params::FortPlayerController_ServerReleaseInventoryItemKey Parms{};

	Parms.InQuickBar = InQuickBar;
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerRemoveDefender
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class ABuildingTrapDefender*            DefenderTrap                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerRemoveDefender(class ABuildingTrapDefender* DefenderTrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerRemoveDefender");

	Params::FortPlayerController_ServerRemoveDefender Parms{};

	Parms.DefenderTrap = DefenderTrap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerRemoveInventoryItem
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FGuid                            ItemGuid                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceRemoveFromQuickBars                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerRemoveInventoryItem(const struct FGuid& ItemGuid, int32 Count, bool bForceRemoveFromQuickBars)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerRemoveInventoryItem");

	Params::FortPlayerController_ServerRemoveInventoryItem Parms{};

	Parms.ItemGuid = std::move(ItemGuid);
	Parms.Count = Count;
	Parms.bForceRemoveFromQuickBars = bForceRemoveFromQuickBars;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerRemoveInventoryStateValue
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FGuid                            ItemGuid                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortItemEntryState                     StateValueType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerRemoveInventoryStateValue(const struct FGuid& ItemGuid, EFortItemEntryState StateValueType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerRemoveInventoryStateValue");

	Params::FortPlayerController_ServerRemoveInventoryStateValue Parms{};

	Parms.ItemGuid = std::move(ItemGuid);
	Parms.StateValueType = StateValueType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerRepairBuildingActor
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ABuildingSMActor*                 BuildingActorToRepair                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerRepairBuildingActor(class ABuildingSMActor* BuildingActorToRepair)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerRepairBuildingActor");

	Params::FortPlayerController_ServerRepairBuildingActor Parms{};

	Parms.BuildingActorToRepair = BuildingActorToRepair;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerReplyToReadyCheck
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                                    bReady                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerReplyToReadyCheck(bool bReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerReplyToReadyCheck");

	Params::FortPlayerController_ServerReplyToReadyCheck Parms{};

	Parms.bReady = bReady;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerReportClientFPS
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                                   ClientAvgFPS                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ClientAvgFrameScore                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ClientMaxFrameScore                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerReportClientFPS(float ClientAvgFPS, uint8 ClientAvgFrameScore, uint8 ClientMaxFrameScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerReportClientFPS");

	Params::FortPlayerController_ServerReportClientFPS Parms{};

	Parms.ClientAvgFPS = ClientAvgFPS;
	Parms.ClientAvgFrameScore = ClientAvgFrameScore;
	Parms.ClientMaxFrameScore = ClientMaxFrameScore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerRequestAIDebug
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortPlayerController::ServerRequestAIDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerRequestAIDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerRequestAttributeSources
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FGameplayAttribute               Attribute                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAbilitySystemComponent*      AbilitySystemComponent                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerRequestAttributeSources(const struct FGameplayAttribute& Attribute, class UFortAbilitySystemComponent* AbilitySystemComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerRequestAttributeSources");

	Params::FortPlayerController_ServerRequestAttributeSources Parms{};

	Parms.Attribute = std::move(Attribute);
	Parms.AbilitySystemComponent = AbilitySystemComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerRequestGameplayAction
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EFortRequestedGameplayAction            RequestedAction                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerRequestGameplayAction(EFortRequestedGameplayAction RequestedAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerRequestGameplayAction");

	Params::FortPlayerController_ServerRequestGameplayAction Parms{};

	Parms.RequestedAction = RequestedAction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerReturnToMainMenu
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFortPlayerController::ServerReturnToMainMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerReturnToMainMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerSendClientProgressUpdate
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                                   ClientProgressState                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint64>                          ClientProgressUpdate                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerSendClientProgressUpdate(int32 ClientProgressState, const TArray<uint64>& ClientProgressUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerSendClientProgressUpdate");

	Params::FortPlayerController_ServerSendClientProgressUpdate Parms{};

	Parms.ClientProgressState = ClientProgressState;
	Parms.ClientProgressUpdate = std::move(ClientProgressUpdate);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerSendProfilerData
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<uint8>                           Payload                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerSendProfilerData(const TArray<uint8>& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerSendProfilerData");

	Params::FortPlayerController_ServerSendProfilerData Parms{};

	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerSetAutoEquipBetterItems
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                                    bAutoEquip                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerSetAutoEquipBetterItems(bool bAutoEquip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerSetAutoEquipBetterItems");

	Params::FortPlayerController_ServerSetAutoEquipBetterItems Parms{};

	Parms.bAutoEquip = bAutoEquip;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerSetClientHasFinishedLoading
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                                    bInHasFinishedLoading                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerSetClientHasFinishedLoading(bool bInHasFinishedLoading)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerSetClientHasFinishedLoading");

	Params::FortPlayerController_ServerSetClientHasFinishedLoading Parms{};

	Parms.bInHasFinishedLoading = bInHasFinishedLoading;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerSetHero
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FString                           NewHeroID                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerSetHero(const class FString& NewHeroID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerSetHero");

	Params::FortPlayerController_ServerSetHero Parms{};

	Parms.NewHeroID = std::move(NewHeroID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerSetInventoryStateValue
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FGuid                            ItemGuid                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortItemEntryStateValue         StateValue                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerSetInventoryStateValue(const struct FGuid& ItemGuid, const struct FFortItemEntryStateValue& StateValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerSetInventoryStateValue");

	Params::FortPlayerController_ServerSetInventoryStateValue Parms{};

	Parms.ItemGuid = std::move(ItemGuid);
	Parms.StateValue = std::move(StateValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerSetMarkText
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AFortMarkActor*                   MarkActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           MarkText                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerSetMarkText(class AFortMarkActor* MarkActor, const class FString& MarkText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerSetMarkText");

	Params::FortPlayerController_ServerSetMarkText Parms{};

	Parms.MarkActor = MarkActor;
	Parms.MarkText = std::move(MarkText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerSetPartyOwner
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FUniqueNetIdRepl                 PartyOwnerUniqueId                                     (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerSetPartyOwner(const struct FUniqueNetIdRepl& PartyOwnerUniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerSetPartyOwner");

	Params::FortPlayerController_ServerSetPartyOwner Parms{};

	Parms.PartyOwnerUniqueId = std::move(PartyOwnerUniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerSetReadyToContinue
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                                    bReady                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortGameplayState                      RequestedState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTryStartTimer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerSetReadyToContinue(bool bReady, EFortGameplayState RequestedState, bool bTryStartTimer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerSetReadyToContinue");

	Params::FortPlayerController_ServerSetReadyToContinue Parms{};

	Parms.bReady = bReady;
	Parms.RequestedState = RequestedState;
	Parms.bTryStartTimer = bTryStartTimer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerSetupWeakSpotsOnBuildingActor
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ABuildingSMActor*                 BuildingActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortCrackEffectData             CrackData                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerSetupWeakSpotsOnBuildingActor(class ABuildingSMActor* BuildingActor, const struct FFortCrackEffectData& CrackData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerSetupWeakSpotsOnBuildingActor");

	Params::FortPlayerController_ServerSetupWeakSpotsOnBuildingActor Parms{};

	Parms.BuildingActor = BuildingActor;
	Parms.CrackData = std::move(CrackData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerSpawnInventoryDrop
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FGuid                            ItemGuid                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerSpawnInventoryDrop(const struct FGuid& ItemGuid, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerSpawnInventoryDrop");

	Params::FortPlayerController_ServerSpawnInventoryDrop Parms{};

	Parms.ItemGuid = std::move(ItemGuid);
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerSpawnMark
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// class AActor*                           ActorToAttachTo                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          AttachOffset                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             PreapprovedText                                        (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerSpawnMark(class AActor* ActorToAttachTo, const struct FVector& AttachOffset, const class FText& PreapprovedText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerSpawnMark");

	Params::FortPlayerController_ServerSpawnMark Parms{};

	Parms.ActorToAttachTo = ActorToAttachTo;
	Parms.AttachOffset = std::move(AttachOffset);
	Parms.PreapprovedText = std::move(PreapprovedText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerSpotActor
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class AActor*                           NewlySpottedActor                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerSpotActor(class AActor* NewlySpottedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerSpotActor");

	Params::FortPlayerController_ServerSpotActor Parms{};

	Parms.NewlySpottedActor = NewlySpottedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerStartIntensityGraphing
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortPlayerController::ServerStartIntensityGraphing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerStartIntensityGraphing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerStartPIDContributionsGraphing
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortPlayerController::ServerStartPIDContributionsGraphing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerStartPIDContributionsGraphing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerStartPIDValueGraphing
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortPlayerController::ServerStartPIDValueGraphing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerStartPIDValueGraphing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerSuicide
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortPlayerController::ServerSuicide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerSuicide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerTeamChatRoomReady
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           ChatRoomId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerTeamChatRoomReady(const class FString& ChatRoomId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerTeamChatRoomReady");

	Params::FortPlayerController_ServerTeamChatRoomReady Parms{};

	Parms.ChatRoomId = std::move(ChatRoomId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerTeleportToReticle
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                          TeleportLocation                                       (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerTeleportToReticle(const struct FVector& TeleportLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerTeleportToReticle");

	Params::FortPlayerController_ServerTeleportToReticle Parms{};

	Parms.TeleportLocation = std::move(TeleportLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerTouchActiveTime
// (Net, Native, Event, Protected, NetServer, NetValidate)

void AFortPlayerController::ServerTouchActiveTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerTouchActiveTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerTriggerCombatEvent
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EFortCombatEvents                       TriggeredEvent                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HeatMultiplier                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerTriggerCombatEvent(EFortCombatEvents TriggeredEvent, float HeatMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerTriggerCombatEvent");

	Params::FortPlayerController_ServerTriggerCombatEvent Parms{};

	Parms.TriggeredEvent = TriggeredEvent;
	Parms.HeatMultiplier = HeatMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerTriggerCombatEventBatch
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<struct FFortCombatManagerEvent>  Payload                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerTriggerCombatEventBatch(const TArray<struct FFortCombatManagerEvent>& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerTriggerCombatEventBatch");

	Params::FortPlayerController_ServerTriggerCombatEventBatch Parms{};

	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerTriggerGenericObjectiveEvent
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class AFortObjectiveBase*               Objective                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerTriggerGenericObjectiveEvent(class AFortObjectiveBase* Objective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerTriggerGenericObjectiveEvent");

	Params::FortPlayerController_ServerTriggerGenericObjectiveEvent Parms{};

	Parms.Objective = Objective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerUIChoiceCompleted
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                                   ChosenItem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MenuIdentifier                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerUIChoiceCompleted(int32 ChosenItem, int32 MenuIdentifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerUIChoiceCompleted");

	Params::FortPlayerController_ServerUIChoiceCompleted Parms{};

	Parms.ChosenItem = ChosenItem;
	Parms.MenuIdentifier = MenuIdentifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ServerUpgradeBuildingActor
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ABuildingActor*                   BuildingActorToUpgrade                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewUpgradeLevel                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::ServerUpgradeBuildingActor(class ABuildingActor* BuildingActorToUpgrade, int32 NewUpgradeLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ServerUpgradeBuildingActor");

	Params::FortPlayerController_ServerUpgradeBuildingActor Parms{};

	Parms.BuildingActorToUpgrade = BuildingActorToUpgrade;
	Parms.NewUpgradeLevel = NewUpgradeLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.SetAtNameHomeBaseScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    AtScreen                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::SetAtNameHomeBaseScreen(bool AtScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "SetAtNameHomeBaseScreen");

	Params::FortPlayerController_SetAtNameHomeBaseScreen Parms{};

	Parms.AtScreen = AtScreen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.SetCinematicModeWithWeapon
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInCinematicMode                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHidePlayer                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideWeapon                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAffectsHUD                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAffectsMovement                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAffectsTurning                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::SetCinematicModeWithWeapon(bool bInCinematicMode, bool bHidePlayer, bool bHideWeapon, bool bAffectsHUD, bool bAffectsMovement, bool bAffectsTurning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "SetCinematicModeWithWeapon");

	Params::FortPlayerController_SetCinematicModeWithWeapon Parms{};

	Parms.bInCinematicMode = bInCinematicMode;
	Parms.bHidePlayer = bHidePlayer;
	Parms.bHideWeapon = bHideWeapon;
	Parms.bAffectsHUD = bAffectsHUD;
	Parms.bAffectsMovement = bAffectsMovement;
	Parms.bAffectsTurning = bAffectsTurning;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.SetCinematicOverrideClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UFortCinematicCamera> OverrideCameraClass                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::SetCinematicOverrideClass(TSubclassOf<class UFortCinematicCamera> OverrideCameraClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "SetCinematicOverrideClass");

	Params::FortPlayerController_SetCinematicOverrideClass Parms{};

	Parms.OverrideCameraClass = OverrideCameraClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.SetFirstPersonCamera
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewUseFirstPersonCamera                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::SetFirstPersonCamera(bool bNewUseFirstPersonCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "SetFirstPersonCamera");

	Params::FortPlayerController_SetFirstPersonCamera Parms{};

	Parms.bNewUseFirstPersonCamera = bNewUseFirstPersonCamera;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.SetInputPitchScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InInputPitchScale                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::SetInputPitchScale(float InInputPitchScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "SetInputPitchScale");

	Params::FortPlayerController_SetInputPitchScale Parms{};

	Parms.InInputPitchScale = InInputPitchScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.SetInputYawScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InInputYawScale                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::SetInputYawScale(float InInputYawScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "SetInputYawScale");

	Params::FortPlayerController_SetInputYawScale Parms{};

	Parms.InInputYawScale = InInputYawScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.SetRotatePawnToCamera
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewRotatePawnToCamera                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::SetRotatePawnToCamera(bool bNewRotatePawnToCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "SetRotatePawnToCamera");

	Params::FortPlayerController_SetRotatePawnToCamera Parms{};

	Parms.bNewRotatePawnToCamera = bNewRotatePawnToCamera;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.StartReadyCheck
// (Final, BlueprintAuthorityOnly, Exec, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             QueryText                                              (Parm, NativeAccessSpecifierPublic)
// class FText                             YesText                                                (Parm, NativeAccessSpecifierPublic)
// class FText                             NoText                                                 (Parm, NativeAccessSpecifierPublic)
// float                                   PercentageToPass                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerController::StartReadyCheck(const class FText& QueryText, const class FText& YesText, const class FText& NoText, float PercentageToPass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "StartReadyCheck");

	Params::FortPlayerController_StartReadyCheck Parms{};

	Parms.QueryText = std::move(QueryText);
	Parms.YesText = std::move(YesText);
	Parms.NoText = std::move(NoText);
	Parms.PercentageToPass = PercentageToPass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.Suicide
// (Exec, Native, Public)

void AFortPlayerController::Suicide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "Suicide");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.SuppressEventNotifications
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bSuppress                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::SuppressEventNotifications(bool bSuppress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "SuppressEventNotifications");

	Params::FortPlayerController_SuppressEventNotifications Parms{};

	Parms.bSuppress = bSuppress;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.SwapQuickBarFocus
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// EFortQuickBars                          InQuickBar                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerController::SwapQuickBarFocus(EFortQuickBars InQuickBar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "SwapQuickBarFocus");

	Params::FortPlayerController_SwapQuickBarFocus Parms{};

	Parms.InQuickBar = InQuickBar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ToggleClientBot
// (Final, Exec, Native, Public)

void AFortPlayerController::ToggleClientBot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ToggleClientBot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ToggleFullScreenMap
// (Exec, Native, Public)

void AFortPlayerController::ToggleFullScreenMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ToggleFullScreenMap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ToggleInventory
// (Exec, Native, Public)

void AFortPlayerController::ToggleInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ToggleInventory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.ToggleVirtualCursor
// (Final, Exec, Native, Public)

void AFortPlayerController::ToggleVirtualCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "ToggleVirtualCursor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.DumpHomebaseRatingInfo
// (Final, Exec, Native, Public, Const)

void AFortPlayerController::DumpHomebaseRatingInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "DumpHomebaseRatingInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerController.GetAccountItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ID                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAccountItem*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAccountItem* AFortPlayerController::GetAccountItem(const class FString& ID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "GetAccountItem");

	Params::FortPlayerController_GetAccountItem Parms{};

	Parms.ID = std::move(ID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.GetAccountLevel
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortPlayerController::GetAccountLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "GetAccountLevel");

	Params::FortPlayerController_GetAccountLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.GetAccountLevelProgression
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortPlayerController::GetAccountLevelProgression() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "GetAccountLevelProgression");

	Params::FortPlayerController_GetAccountLevelProgression Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.GetActorUnderReticle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AFortPlayerController::GetActorUnderReticle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "GetActorUnderReticle");

	Params::FortPlayerController_GetActorUnderReticle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.GetCollectionBookManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortCollectionBookManager*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortCollectionBookManager* AFortPlayerController::GetCollectionBookManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "GetCollectionBookManager");

	Params::FortPlayerController_GetCollectionBookManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.GetGameAccountId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl AFortPlayerController::GetGameAccountId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "GetGameAccountId");

	Params::FortPlayerController_GetGameAccountId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.GetPlayerPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerPawn*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerPawn* AFortPlayerController::GetPlayerPawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "GetPlayerPawn");

	Params::FortPlayerController_GetPlayerPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.GetQuestManager
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESubGame                                SubGame                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortQuestManager*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortQuestManager* AFortPlayerController::GetQuestManager(ESubGame SubGame) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "GetQuestManager");

	Params::FortPlayerController_GetQuestManager Parms{};

	Parms.SubGame = SubGame;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.GetRegisteredPlayerInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortRegisteredPlayerInfo*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortRegisteredPlayerInfo* AFortPlayerController::GetRegisteredPlayerInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "GetRegisteredPlayerInfo");

	Params::FortPlayerController_GetRegisteredPlayerInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.GetRotatePawnToCamera
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerController::GetRotatePawnToCamera() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "GetRotatePawnToCamera");

	Params::FortPlayerController_GetRotatePawnToCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.IsActionInputIgnored
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerController::IsActionInputIgnored() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "IsActionInputIgnored");

	Params::FortPlayerController_IsActionInputIgnored Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.IsClientBot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerController::IsClientBot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "IsClientBot");

	Params::FortPlayerController_IsClientBot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.IsClientTimingOut
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerController::IsClientTimingOut() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "IsClientTimingOut");

	Params::FortPlayerController_IsClientTimingOut Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.IsInBuildMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerController::IsInBuildMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "IsInBuildMode");

	Params::FortPlayerController_IsInBuildMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.IsNearActiveEncounters
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerController::IsNearActiveEncounters() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "IsNearActiveEncounters");

	Params::FortPlayerController_IsNearActiveEncounters Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.IsPlayingEmote
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerController::IsPlayingEmote() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "IsPlayingEmote");

	Params::FortPlayerController_IsPlayingEmote Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.IsRequirementsMet
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortRequirementsInfo            InRequirements                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerController::IsRequirementsMet(const struct FFortRequirementsInfo& InRequirements) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "IsRequirementsMet");

	Params::FortPlayerController_IsRequirementsMet Parms{};

	Parms.InRequirements = std::move(InRequirements);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.IsUsingFirstPersonCamera
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerController::IsUsingFirstPersonCamera() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "IsUsingFirstPersonCamera");

	Params::FortPlayerController_IsUsingFirstPersonCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.IsUsingGamepad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerController::IsUsingGamepad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "IsUsingGamepad");

	Params::FortPlayerController_IsUsingGamepad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerController.K2_FindExistingItemForDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItemDefinition*              ItemDefinition                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInStorageVault                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* AFortPlayerController::K2_FindExistingItemForDefinition(const class UFortItemDefinition* ItemDefinition, bool bInStorageVault) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerController", "K2_FindExistingItemForDefinition");

	Params::FortPlayerController_K2_FindExistingItemForDefinition Parms{};

	Parms.ItemDefinition = ItemDefinition;
	Parms.bInStorageVault = bInStorageVault;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerControllerGameplay.RefreshHUDElementVisibilitiesToSettings
// (Final, Native, Public, BlueprintCallable)

void AFortPlayerControllerGameplay::RefreshHUDElementVisibilitiesToSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerGameplay", "RefreshHUDElementVisibilitiesToSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerGameplay.ResetHUDElementVisibilityToSettings
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            HUDElementTags                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerControllerGameplay::ResetHUDElementVisibilityToSettings(const struct FGameplayTagContainer& HUDElementTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerGameplay", "ResetHUDElementVisibilityToSettings");

	Params::FortPlayerControllerGameplay_ResetHUDElementVisibilityToSettings Parms{};

	Parms.HUDElementTags = std::move(HUDElementTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerGameplay.SetHUDElementVisibility
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            HUDElementTags                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bHideElements                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerGameplay::SetHUDElementVisibility(const struct FGameplayTagContainer& HUDElementTags, bool bHideElements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerGameplay", "SetHUDElementVisibility");

	Params::FortPlayerControllerGameplay_SetHUDElementVisibility Parms{};

	Parms.HUDElementTags = std::move(HUDElementTags);
	Parms.bHideElements = bHideElements;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerGameplay.AreHUDElementsVisible
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            HUDElementTags                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerControllerGameplay::AreHUDElementsVisible(const struct FGameplayTagContainer& HUDElementTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerGameplay", "AreHUDElementsVisible");

	Params::FortPlayerControllerGameplay_AreHUDElementsVisible Parms{};

	Parms.HUDElementTags = std::move(HUDElementTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerControllerZone.ClientOnPawnDied
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FFortPlayerDeathReport           DeathReport                                            (Parm, NativeAccessSpecifierPublic)

void AFortPlayerControllerZone::ClientOnPawnDied(const struct FFortPlayerDeathReport& DeathReport)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerZone", "ClientOnPawnDied");

	Params::FortPlayerControllerZone_ClientOnPawnDied Parms{};

	Parms.DeathReport = std::move(DeathReport);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerZone.ClientOnPawnRevived
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AController*                      EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerZone::ClientOnPawnRevived(class AController* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerZone", "ClientOnPawnRevived");

	Params::FortPlayerControllerZone_ClientOnPawnRevived Parms{};

	Parms.EventInstigator = EventInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerZone.ClientOnPawnSpawned
// (Net, NetReliable, Native, Event, Public, NetClient)

void AFortPlayerControllerZone::ClientOnPawnSpawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerZone", "ClientOnPawnSpawned");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerZone.ClientOnZoneEndScoreReports
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<struct FFortPlayerScoreReport>   ScoreReports                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerControllerZone::ClientOnZoneEndScoreReports(const TArray<struct FFortPlayerScoreReport>& ScoreReports)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerZone", "ClientOnZoneEndScoreReports");

	Params::FortPlayerControllerZone_ClientOnZoneEndScoreReports Parms{};

	Parms.ScoreReports = std::move(ScoreReports);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerZone.ClientSendPartyJoinInfoToPlayer
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FString                           JoinInfoStr                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerZone::ClientSendPartyJoinInfoToPlayer(const class FString& JoinInfoStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerZone", "ClientSendPartyJoinInfoToPlayer");

	Params::FortPlayerControllerZone_ClientSendPartyJoinInfoToPlayer Parms{};

	Parms.JoinInfoStr = std::move(JoinInfoStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerZone.PopDeathInputComponent
// (Final, Native, Public, BlueprintCallable)

void AFortPlayerControllerZone::PopDeathInputComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerZone", "PopDeathInputComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerZone.PushDeathInputComponent
// (Native, Public, BlueprintCallable)

void AFortPlayerControllerZone::PushDeathInputComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerZone", "PushDeathInputComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerZone.ServerSendLoadoutConfig
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                                   LoadoutSeed                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Loadout                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerControllerZone::ServerSendLoadoutConfig(int32 LoadoutSeed, const TArray<uint8>& Loadout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerZone", "ServerSendLoadoutConfig");

	Params::FortPlayerControllerZone_ServerSendLoadoutConfig Parms{};

	Parms.LoadoutSeed = LoadoutSeed;
	Parms.Loadout = std::move(Loadout);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerZone.ServerSendPartyJoinInfoToPlayer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FUniqueNetIdRepl                 RecipientId                                            (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           JoinInfoStr                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerZone::ServerSendPartyJoinInfoToPlayer(const struct FUniqueNetIdRepl& RecipientId, const class FString& JoinInfoStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerZone", "ServerSendPartyJoinInfoToPlayer");

	Params::FortPlayerControllerZone_ServerSendPartyJoinInfoToPlayer Parms{};

	Parms.RecipientId = std::move(RecipientId);
	Parms.JoinInfoStr = std::move(JoinInfoStr);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerZone.ServerSetShouldDisablePlayerTeleportingDuringMissionResults
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortPlayerControllerZone::ServerSetShouldDisablePlayerTeleportingDuringMissionResults()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerZone", "ServerSetShouldDisablePlayerTeleportingDuringMissionResults");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerZone.ServerSubmitGameplayVote
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                                   VoteDecision                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerZone::ServerSubmitGameplayVote(int32 VoteDecision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerZone", "ServerSubmitGameplayVote");

	Params::FortPlayerControllerZone_ServerSubmitGameplayVote Parms{};

	Parms.VoteDecision = VoteDecision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerZone.ServerTriggerSetupTeleportCameraEvent
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortPlayerControllerZone::ServerTriggerSetupTeleportCameraEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerZone", "ServerTriggerSetupTeleportCameraEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerManor.ClientOpenManorPortalUnlockMenu
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class AManorPortal*                     ManorPortal                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerManor::ClientOpenManorPortalUnlockMenu(class AManorPortal* ManorPortal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerManor", "ClientOpenManorPortalUnlockMenu");

	Params::FortPlayerControllerManor_ClientOpenManorPortalUnlockMenu Parms{};

	Parms.ManorPortal = ManorPortal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerManor.ServerOnUnlockPortalComplete
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AManorPortal*                     ManorPortal                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerManor::ServerOnUnlockPortalComplete(class AManorPortal* ManorPortal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerManor", "ServerOnUnlockPortalComplete");

	Params::FortPlayerControllerManor_ServerOnUnlockPortalComplete Parms{};

	Parms.ManorPortal = ManorPortal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingEditModeSupport.OnSuccessfulMatchInteractComplete
// (Native, Public)

void UBuildingEditModeSupport::OnSuccessfulMatchInteractComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingEditModeSupport", "OnSuccessfulMatchInteractComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingEditModeSupport.OnSuccessfulMatchInteractParamUpdate
// (Native, Public)
// Parameters:
// float                                   NewInteractParamVal                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBuildingEditModeSupport::OnSuccessfulMatchInteractParamUpdate(float NewInteractParamVal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingEditModeSupport", "OnSuccessfulMatchInteractParamUpdate");

	Params::BuildingEditModeSupport_OnSuccessfulMatchInteractParamUpdate Parms{};

	Parms.NewInteractParamVal = NewInteractParamVal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AIHotSpotSlot.ClearSlot
// (Native, Public, BlueprintCallable)

void UAIHotSpotSlot::ClearSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlot", "ClearSlot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AIHotSpotSlot.OnStateChanged
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AAIController*                    SlotOwner                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAIHotSpotSlot                          NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIHotSpotSlot::OnStateChanged(class AAIController* SlotOwner, EAIHotSpotSlot NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlot", "OnStateChanged");

	Params::AIHotSpotSlot_OnStateChanged Parms{};

	Parms.SlotOwner = SlotOwner;
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.AIHotSpotSlot.SetSlotEnabled
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewEnabled                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIHotSpotSlot::SetSlotEnabled(bool bNewEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlot", "SetSlotEnabled");

	Params::AIHotSpotSlot_SetSlotEnabled Parms{};

	Parms.bNewEnabled = bNewEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AIHotSpotSlot.SetSlotOwnerAndState
// (Native, Public, BlueprintCallable)
// Parameters:
// class AAIController*                    NewOwner                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAIHotSpotSlot                          NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIHotSpotSlot::SetSlotOwnerAndState(class AAIController* NewOwner, EAIHotSpotSlot NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlot", "SetSlotOwnerAndState");

	Params::AIHotSpotSlot_SetSlotOwnerAndState Parms{};

	Parms.NewOwner = NewOwner;
	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AIHotSpotSlot.SetSlotState
// (Native, Public, BlueprintCallable)
// Parameters:
// EAIHotSpotSlot                          NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAIHotSpotSlot::SetSlotState(EAIHotSpotSlot NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlot", "SetSlotState");

	Params::AIHotSpotSlot_SetSlotState Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AIHotSpotSlot.GetHotSpot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AAIHotSpot*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAIHotSpot* UAIHotSpotSlot::GetHotSpot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlot", "GetHotSpot");

	Params::AIHotSpotSlot_GetHotSpot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpotSlot.GetSlotBounds
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FBox                             ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FBox UAIHotSpotSlot::GetSlotBounds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlot", "GetSlotBounds");

	Params::AIHotSpotSlot_GetSlotBounds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpotSlot.GetSlotHeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAIHotSpotSlot::GetSlotHeight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlot", "GetSlotHeight");

	Params::AIHotSpotSlot_GetSlotHeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpotSlot.GetSlotIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAIHotSpotSlot::GetSlotIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlot", "GetSlotIndex");

	Params::AIHotSpotSlot_GetSlotIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpotSlot.GetSlotLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UAIHotSpotSlot::GetSlotLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlot", "GetSlotLocation");

	Params::AIHotSpotSlot_GetSlotLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpotSlot.GetSlotOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AAIController*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAIController* UAIHotSpotSlot::GetSlotOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlot", "GetSlotOwner");

	Params::AIHotSpotSlot_GetSlotOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpotSlot.GetSlotRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAIHotSpotSlot::GetSlotRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlot", "GetSlotRadius");

	Params::AIHotSpotSlot_GetSlotRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpotSlot.GetSlotRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UAIHotSpotSlot::GetSlotRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlot", "GetSlotRotation");

	Params::AIHotSpotSlot_GetSlotRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpotSlot.GetSlotState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAIHotSpotSlot                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAIHotSpotSlot UAIHotSpotSlot::GetSlotState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlot", "GetSlotState");

	Params::AIHotSpotSlot_GetSlotState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpotSlot.GetSlotUserId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAIHotSpotSlot::GetSlotUserId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlot", "GetSlotUserId");

	Params::AIHotSpotSlot_GetSlotUserId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpotSlot.HasUserId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIHotSpotSlot::HasUserId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlot", "HasUserId");

	Params::AIHotSpotSlot_HasUserId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpotSlot.IsAIAllowed
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AAIController*                    AI                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIHotSpotSlot::IsAIAllowed(const class AAIController* AI) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlot", "IsAIAllowed");

	Params::AIHotSpotSlot_IsAIAllowed Parms{};

	Parms.AI = AI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpotSlot.IsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAIHotSpotSlot::IsEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlot", "IsEnabled");

	Params::AIHotSpotSlot_IsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTooltip.SetLocalizationFloat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Param_Name                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTooltip::SetLocalizationFloat(const class FString& Param_Name, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltip", "SetLocalizationFloat");

	Params::FortTooltip_SetLocalizationFloat Parms{};

	Parms.Param_Name = std::move(Param_Name);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTooltip.SetLocalizationInt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Param_Name                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortTooltip::SetLocalizationInt(const class FString& Param_Name, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltip", "SetLocalizationInt");

	Params::FortTooltip_SetLocalizationInt Parms{};

	Parms.Param_Name = std::move(Param_Name);
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTooltip.SetLocalizationText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Param_Name                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             Value                                                  (Parm, NativeAccessSpecifierPublic)

void UFortTooltip::SetLocalizationText(const class FString& Param_Name, const class FText& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltip", "SetLocalizationText");

	Params::FortTooltip_SetLocalizationText Parms{};

	Parms.Param_Name = std::move(Param_Name);
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTooltip.BP_GetNumericValue
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTooltip::BP_GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltip", "BP_GetNumericValue");

	Params::FortTooltip_BP_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTooltip.BP_GetTextForToken
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTooltip::BP_GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltip", "BP_GetTextForToken");

	Params::FortTooltip_BP_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTooltip.BP_GetTokenizedDescriptionText
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTooltip::BP_GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltip", "BP_GetTokenizedDescriptionText");

	Params::FortTooltip_BP_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTooltip.BP_GetValueData
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortTooltipValueData            OutData                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTooltip::BP_GetValueData(const class UObject* ObjectToDescribe, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, struct FFortTooltipValueData* OutData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltip", "BP_GetValueData");

	Params::FortTooltip_BP_GetValueData Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltip", "GetNumericValue");

	Params::FortTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltip", "GetTextForToken");

	Params::FortTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltip", "GetTokenizedDescriptionText");

	Params::FortTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTooltip.GetValueData
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortTooltipValueData            OutData                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTooltip::GetValueData(const class UObject* ObjectToDescribe, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, struct FFortTooltipValueData* OutData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltip", "GetValueData");

	Params::FortTooltip_GetValueData Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemDefinitionTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemDefinitionTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinitionTooltip", "GetTextForToken");

	Params::FortItemDefinitionTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemDefinitionTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemDefinitionTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDefinitionTooltip", "GetTokenizedDescriptionText");

	Params::FortItemDefinitionTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWorldItemDefinitionTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWorldItemDefinitionTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorldItemDefinitionTooltip", "GetTextForToken");

	Params::FortWorldItemDefinitionTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWorldItemDefinitionTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWorldItemDefinitionTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorldItemDefinitionTooltip", "GetTokenizedDescriptionText");

	Params::FortWorldItemDefinitionTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortConsumableItemDefinitionTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortConsumableItemDefinitionTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConsumableItemDefinitionTooltip", "GetTextForToken");

	Params::FortConsumableItemDefinitionTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortConsumableItemDefinitionTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortConsumableItemDefinitionTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConsumableItemDefinitionTooltip", "GetTokenizedDescriptionText");

	Params::FortConsumableItemDefinitionTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortUIZone.ToggleTargetInfo
// (Final, RequiredAPI, Exec, Native, Public)

void AFortUIZone::ToggleTargetInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIZone", "ToggleTargetInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortUIZone.ToggleTargetInfoAI
// (Final, Exec, Native, Public)

void AFortUIZone::ToggleTargetInfoAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIZone", "ToggleTargetInfoAI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortUIZone.ToggleTargetInfoLock
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bTraceComplex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortUIZone::ToggleTargetInfoLock(bool bTraceComplex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIZone", "ToggleTargetInfoLock");

	Params::FortUIZone_ToggleTargetInfoLock Parms{};

	Parms.bTraceComplex = bTraceComplex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortUIZone.ToggleTargetInfoPaths
// (Final, Exec, Native, Public)

void AFortUIZone::ToggleTargetInfoPaths()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIZone", "ToggleTargetInfoPaths");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortUIZone.ToggleTargetInfoSensing
// (Final, Exec, Native, Public)

void AFortUIZone::ToggleTargetInfoSensing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIZone", "ToggleTargetInfoSensing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTeamActorInterface.GetTeam
// (Native, Public, Const)
// Parameters:
// EFortTeam                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortTeam IFortTeamActorInterface::GetTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamActorInterface", "GetTeam");

	Params::FortTeamActorInterface_GetTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWorldItemDefinition.CanBeDisassembled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWorldItemDefinition::CanBeDisassembled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorldItemDefinition", "CanBeDisassembled");

	Params::FortWorldItemDefinition_CanBeDisassembled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWorldItemDefinition.GetAmmoWorldItemDefinition_BP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortWorldItemDefinition*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortWorldItemDefinition* UFortWorldItemDefinition::GetAmmoWorldItemDefinition_BP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorldItemDefinition", "GetAmmoWorldItemDefinition_BP");

	Params::FortWorldItemDefinition_GetAmmoWorldItemDefinition_BP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWorldItemDefinition.GetDPSAtLevel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ItemLevel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortWorldItemDefinition::GetDPSAtLevel(int32 ItemLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorldItemDefinition", "GetDPSAtLevel");

	Params::FortWorldItemDefinition_GetDPSAtLevel Parms{};

	Parms.ItemLevel = ItemLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWorldItemDefinition.GetFabricationValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bUseDisintegrationOverride                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortWorldItemDefinition::GetFabricationValue(bool bUseDisintegrationOverride) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorldItemDefinition", "GetFabricationValue");

	Params::FortWorldItemDefinition_GetFabricationValue Parms{};

	Parms.bUseDisintegrationOverride = bUseDisintegrationOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWorldItemDefinition.GetMaxDurability
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ItemLevel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortWorldItemDefinition::GetMaxDurability(int32 ItemLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorldItemDefinition", "GetMaxDurability");

	Params::FortWorldItemDefinition_GetMaxDurability Parms{};

	Parms.ItemLevel = ItemLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetDisplayTierAsText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortDisplayTier                        Param_DisplayTier                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortWeaponItemDefinition::GetDisplayTierAsText(const EFortDisplayTier Param_DisplayTier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortWeaponItemDefinition", "GetDisplayTierAsText");

	Params::FortWeaponItemDefinition_GetDisplayTierAsText Parms{};

	Parms.Param_DisplayTier = Param_DisplayTier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetAnalyticTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer UFortWeaponItemDefinition::GetAnalyticTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetAnalyticTags");

	Params::FortWeaponItemDefinition_GetAnalyticTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetBaseAlteration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAlterationItemDefinition*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAlterationItemDefinition* UFortWeaponItemDefinition::GetBaseAlteration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetBaseAlteration");

	Params::FortWeaponItemDefinition_GetBaseAlteration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetBaseCosmeticAlteration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAlterationItemDefinition*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAlterationItemDefinition* UFortWeaponItemDefinition::GetBaseCosmeticAlteration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetBaseCosmeticAlteration");

	Params::FortWeaponItemDefinition_GetBaseCosmeticAlteration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetDegradedPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortWeaponItemDefinition::GetDegradedPercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetDegradedPercentage");

	Params::FortWeaponItemDefinition_GetDegradedPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetDisplayTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortDisplayTier                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortDisplayTier UFortWeaponItemDefinition::GetDisplayTier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetDisplayTier");

	Params::FortWeaponItemDefinition_GetDisplayTier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetEquippedAbilities
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<TSubclassOf<class UFortGameplayAbility>>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)

TArray<TSubclassOf<class UFortGameplayAbility>> UFortWeaponItemDefinition::GetEquippedAbilities() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetEquippedAbilities");

	Params::FortWeaponItemDefinition_GetEquippedAbilities Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetHitNotifyDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortWeaponItemDefinition::GetHitNotifyDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetHitNotifyDuration");

	Params::FortWeaponItemDefinition_GetHitNotifyDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetHitNotifyImage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UFortWeaponItemDefinition::GetHitNotifyImage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetHitNotifyImage");

	Params::FortWeaponItemDefinition_GetHitNotifyImage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetHitNotifyOpacityCurve
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCurveFloat*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCurveFloat* UFortWeaponItemDefinition::GetHitNotifyOpacityCurve() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetHitNotifyOpacityCurve");

	Params::FortWeaponItemDefinition_GetHitNotifyOpacityCurve Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetLowAmmoPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortWeaponItemDefinition::GetLowAmmoPercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetLowAmmoPercentage");

	Params::FortWeaponItemDefinition_GetLowAmmoPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetMuzzleBlockedImage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UFortWeaponItemDefinition::GetMuzzleBlockedImage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetMuzzleBlockedImage");

	Params::FortWeaponItemDefinition_GetMuzzleBlockedImage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetPrimaryFireAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UFortGameplayAbility> ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UFortGameplayAbility> UFortWeaponItemDefinition::GetPrimaryFireAbility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetPrimaryFireAbility");

	Params::FortWeaponItemDefinition_GetPrimaryFireAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetReloadAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UFortGameplayAbility> ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UFortGameplayAbility> UFortWeaponItemDefinition::GetReloadAbility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetReloadAbility");

	Params::FortWeaponItemDefinition_GetReloadAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetReticleCenterImage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UFortWeaponItemDefinition::GetReticleCenterImage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetReticleCenterImage");

	Params::FortWeaponItemDefinition_GetReticleCenterImage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetReticleCenterImageOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UFortWeaponItemDefinition::GetReticleCenterImageOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetReticleCenterImageOffset");

	Params::FortWeaponItemDefinition_GetReticleCenterImageOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetReticleCornerAngles
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<float>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<float> UFortWeaponItemDefinition::GetReticleCornerAngles() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetReticleCornerAngles");

	Params::FortWeaponItemDefinition_GetReticleCornerAngles Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetReticleImage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UFortWeaponItemDefinition::GetReticleImage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetReticleImage");

	Params::FortWeaponItemDefinition_GetReticleImage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetSecondaryFireAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UFortGameplayAbility> ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UFortGameplayAbility> UFortWeaponItemDefinition::GetSecondaryFireAbility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetSecondaryFireAbility");

	Params::FortWeaponItemDefinition_GetSecondaryFireAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetShortDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortWeaponItemDefinition::GetShortDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetShortDisplayName");

	Params::FortWeaponItemDefinition_GetShortDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetTriggerType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortWeaponTriggerType                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortWeaponTriggerType UFortWeaponItemDefinition::GetTriggerType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetTriggerType");

	Params::FortWeaponItemDefinition_GetTriggerType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetWeaponActorClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class AFortWeapon>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class AFortWeapon> UFortWeaponItemDefinition::GetWeaponActorClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetWeaponActorClass");

	Params::FortWeaponItemDefinition_GetWeaponActorClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetWeaponMeshOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMesh*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMesh* UFortWeaponItemDefinition::GetWeaponMeshOverride() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetWeaponMeshOverride");

	Params::FortWeaponItemDefinition_GetWeaponMeshOverride Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.GetWeaponStatHandle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDataTableRowHandle              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FDataTableRowHandle UFortWeaponItemDefinition::GetWeaponStatHandle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "GetWeaponStatHandle");

	Params::FortWeaponItemDefinition_GetWeaponStatHandle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.ShouldAllowTargetingDuringReload
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponItemDefinition::ShouldAllowTargetingDuringReload() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "ShouldAllowTargetingDuringReload");

	Params::FortWeaponItemDefinition_ShouldAllowTargetingDuringReload Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinition.TargetingPreventsReload
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponItemDefinition::TargetingPreventsReload() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinition", "TargetingPreventsReload");

	Params::FortWeaponItemDefinition_TargetingPreventsReload Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.GetBlueprintClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class ABuildingActor>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class ABuildingActor> UFortDecoItemDefinition::GetBlueprintClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "GetBlueprintClass");

	Params::FortDecoItemDefinition_GetBlueprintClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.GetGridSnapSizeOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortDecoItemDefinition::GetGridSnapSizeOverride() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "GetGridSnapSizeOverride");

	Params::FortDecoItemDefinition_GetGridSnapSizeOverride Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.GetMaxPlacementDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortDecoItemDefinition::GetMaxPlacementDistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "GetMaxPlacementDistance");

	Params::FortDecoItemDefinition_GetMaxPlacementDistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.GetPlacementPreviewClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class AFortDecoPreview>     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class AFortDecoPreview> UFortDecoItemDefinition::GetPlacementPreviewClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "GetPlacementPreviewClass");

	Params::FortDecoItemDefinition_GetPlacementPreviewClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.GetPlacementTypeOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPlacementType                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPlacementType UFortDecoItemDefinition::GetPlacementTypeOverride() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "GetPlacementTypeOverride");

	Params::FortDecoItemDefinition_GetPlacementTypeOverride Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.GetRotationAngleIncrement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortDecoItemDefinition::GetRotationAngleIncrement() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "GetRotationAngleIncrement");

	Params::FortDecoItemDefinition_GetRotationAngleIncrement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.RequiresPermissionToEditWorld
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDecoItemDefinition::RequiresPermissionToEditWorld() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "RequiresPermissionToEditWorld");

	Params::FortDecoItemDefinition_RequiresPermissionToEditWorld Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.RequiresPlayerPlaceableAttachmentActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDecoItemDefinition::RequiresPlayerPlaceableAttachmentActors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "RequiresPlayerPlaceableAttachmentActors");

	Params::FortDecoItemDefinition_RequiresPlayerPlaceableAttachmentActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.ShouldAllowAnyFloorPlacement
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDecoItemDefinition::ShouldAllowAnyFloorPlacement() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "ShouldAllowAnyFloorPlacement");

	Params::FortDecoItemDefinition_ShouldAllowAnyFloorPlacement Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.ShouldAllowPlacementOnBuildings
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDecoItemDefinition::ShouldAllowPlacementOnBuildings() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "ShouldAllowPlacementOnBuildings");

	Params::FortDecoItemDefinition_ShouldAllowPlacementOnBuildings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.ShouldAllowPlacementOnWorldGeometry
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDecoItemDefinition::ShouldAllowPlacementOnWorldGeometry() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "ShouldAllowPlacementOnWorldGeometry");

	Params::FortDecoItemDefinition_ShouldAllowPlacementOnWorldGeometry Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.ShouldAllowStairsWhenAttachingToFloors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDecoItemDefinition::ShouldAllowStairsWhenAttachingToFloors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "ShouldAllowStairsWhenAttachingToFloors");

	Params::FortDecoItemDefinition_ShouldAllowStairsWhenAttachingToFloors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.ShouldAttachWhenPlacing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDecoItemDefinition::ShouldAttachWhenPlacing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "ShouldAttachWhenPlacing");

	Params::FortDecoItemDefinition_ShouldAttachWhenPlacing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.ShouldCancelAbilityOnUnequip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDecoItemDefinition::ShouldCancelAbilityOnUnequip() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "ShouldCancelAbilityOnUnequip");

	Params::FortDecoItemDefinition_ShouldCancelAbilityOnUnequip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.ShouldCancelToolWhenPlaced
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDecoItemDefinition::ShouldCancelToolWhenPlaced() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "ShouldCancelToolWhenPlaced");

	Params::FortDecoItemDefinition_ShouldCancelToolWhenPlaced Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.ShouldConsumeWhenPlaced
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDecoItemDefinition::ShouldConsumeWhenPlaced() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "ShouldConsumeWhenPlaced");

	Params::FortDecoItemDefinition_ShouldConsumeWhenPlaced Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.ShouldDestroySmallObjectsWhenPlaced
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDecoItemDefinition::ShouldDestroySmallObjectsWhenPlaced() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "ShouldDestroySmallObjectsWhenPlaced");

	Params::FortDecoItemDefinition_ShouldDestroySmallObjectsWhenPlaced Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.ShouldDisableLocationLerpWhilePlacing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDecoItemDefinition::ShouldDisableLocationLerpWhilePlacing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "ShouldDisableLocationLerpWhilePlacing");

	Params::FortDecoItemDefinition_ShouldDisableLocationLerpWhilePlacing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.ShouldDisableRotationLerpWhilePlacing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDecoItemDefinition::ShouldDisableRotationLerpWhilePlacing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "ShouldDisableRotationLerpWhilePlacing");

	Params::FortDecoItemDefinition_ShouldDisableRotationLerpWhilePlacing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.ShouldDisableScaleLerpWhilePlacing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDecoItemDefinition::ShouldDisableScaleLerpWhilePlacing() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "ShouldDisableScaleLerpWhilePlacing");

	Params::FortDecoItemDefinition_ShouldDisableScaleLerpWhilePlacing Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.ShouldForceIgnoreBuildingOverlaps
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDecoItemDefinition::ShouldForceIgnoreBuildingOverlaps() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "ShouldForceIgnoreBuildingOverlaps");

	Params::FortDecoItemDefinition_ShouldForceIgnoreBuildingOverlaps Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.ShouldForceIgnoreOverlapTest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDecoItemDefinition::ShouldForceIgnoreOverlapTest() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "ShouldForceIgnoreOverlapTest");

	Params::FortDecoItemDefinition_ShouldForceIgnoreOverlapTest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.ShouldIgnoreCollisionWithCriticalActors
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDecoItemDefinition::ShouldIgnoreCollisionWithCriticalActors() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "ShouldIgnoreCollisionWithCriticalActors");

	Params::FortDecoItemDefinition_ShouldIgnoreCollisionWithCriticalActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.ShouldSnapYawToHorizontalAxes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDecoItemDefinition::ShouldSnapYawToHorizontalAxes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "ShouldSnapYawToHorizontalAxes");

	Params::FortDecoItemDefinition_ShouldSnapYawToHorizontalAxes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoItemDefinition.ShouldUseRelativeCameraRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDecoItemDefinition::ShouldUseRelativeCameraRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoItemDefinition", "ShouldUseRelativeCameraRotation");

	Params::FortDecoItemDefinition_ShouldUseRelativeCameraRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTooltip", "GetNumericValue");

	Params::FortItemTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTooltip", "GetTextForToken");

	Params::FortItemTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortItemTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemTooltip", "GetTokenizedDescriptionText");

	Params::FortItemTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAccountItemTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAccountItemTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountItemTooltip", "GetNumericValue");

	Params::FortAccountItemTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAccountItemTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAccountItemTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountItemTooltip", "GetTextForToken");

	Params::FortAccountItemTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAccountItemTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAccountItemTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountItemTooltip", "GetTokenizedDescriptionText");

	Params::FortAccountItemTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCharacterTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCharacterTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterTooltip", "GetNumericValue");

	Params::FortCharacterTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCharacterTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCharacterTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterTooltip", "GetTextForToken");

	Params::FortCharacterTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCharacterTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCharacterTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterTooltip", "GetTokenizedDescriptionText");

	Params::FortCharacterTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCharacterTooltip.GetValueData
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortTooltipValueData            OutData                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCharacterTooltip::GetValueData(const class UObject* ObjectToDescribe, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, struct FFortTooltipValueData* OutData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterTooltip", "GetValueData");

	Params::FortCharacterTooltip_GetValueData Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpotSlotGenerator.GenerateSlots
// (Native, Event, Public, BlueprintEvent)

void UAIHotSpotSlotGenerator::GenerateSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlotGenerator", "GenerateSlots");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AIHotSpotSlotGenerator.AddSlot
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          RelativeLocation                                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         RelativeRotation                                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TSubclassOf<class UAIHotSpotSlot>       CustomSlotClass                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAIHotSpotSlot*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAIHotSpotSlot* UAIHotSpotSlotGenerator::AddSlot(const struct FVector& RelativeLocation, const struct FRotator& RelativeRotation, TSubclassOf<class UAIHotSpotSlot> CustomSlotClass, bool bEnabled) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlotGenerator", "AddSlot");

	Params::AIHotSpotSlotGenerator_AddSlot Parms{};

	Parms.RelativeLocation = std::move(RelativeLocation);
	Parms.RelativeRotation = std::move(RelativeRotation);
	Parms.CustomSlotClass = CustomSlotClass;
	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AIHotSpotSlotGenerator.GetHotSpot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AAIHotSpot*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AAIHotSpot* UAIHotSpotSlotGenerator::GetHotSpot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIHotSpotSlotGenerator", "GetHotSpot");

	Params::AIHotSpotSlotGenerator_GetHotSpot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostContext.DepositPOSTResource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItemDefinition*              ResourceItem                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostContext::DepositPOSTResource(const class UFortItemDefinition* ResourceItem, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostContext", "DepositPOSTResource");

	Params::FortOutpostContext_DepositPOSTResource Parms{};

	Parms.ResourceItem = ResourceItem;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostContext.UpgradeBuilding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOutpostBuildings                       OutpostBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostContext::UpgradeBuilding(EOutpostBuildings OutpostBuilding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostContext", "UpgradeBuilding");

	Params::FortOutpostContext_UpgradeBuilding Parms{};

	Parms.OutpostBuilding = OutpostBuilding;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostContext.UpgradeBuildingByDefinition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortOutpostItemDefinition*       BuildingToUpgrade                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostContext::UpgradeBuildingByDefinition(class UFortOutpostItemDefinition* BuildingToUpgrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostContext", "UpgradeBuildingByDefinition");

	Params::FortOutpostContext_UpgradeBuildingByDefinition Parms{};

	Parms.BuildingToUpgrade = BuildingToUpgrade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostContext.UpgradePOST
// (Final, Native, Public, BlueprintCallable)

void UFortOutpostContext::UpgradePOST()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostContext", "UpgradePOST");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostContext.CanUpgradeBuilding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOutpostBuildings                       OutpostBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLog                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortOutpostContext::CanUpgradeBuilding(EOutpostBuildings OutpostBuilding, bool bLog) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostContext", "CanUpgradeBuilding");

	Params::FortOutpostContext_CanUpgradeBuilding Parms{};

	Parms.OutpostBuilding = OutpostBuilding;
	Parms.bLog = bLog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostContext.CanUpgradeBuildingFromDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortOutpostItemDefinition*       OutpostBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLog                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortOutpostContext::CanUpgradeBuildingFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding, bool bLog) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostContext", "CanUpgradeBuildingFromDefinition");

	Params::FortOutpostContext_CanUpgradeBuildingFromDefinition Parms{};

	Parms.OutpostBuilding = OutpostBuilding;
	Parms.bLog = bLog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostContext.CanUpgradePOST
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortOutpostContext::CanUpgradePOST() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostContext", "CanUpgradePOST");

	Params::FortOutpostContext_CanUpgradePOST Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostContext.GetBuildingLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOutpostBuildings                       OutpostBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortOutpostContext::GetBuildingLevel(EOutpostBuildings OutpostBuilding) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostContext", "GetBuildingLevel");

	Params::FortOutpostContext_GetBuildingLevel Parms{};

	Parms.OutpostBuilding = OutpostBuilding;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostContext.GetBuildingLevelFromDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortOutpostItemDefinition*       OutpostBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortOutpostContext::GetBuildingLevelFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostContext", "GetBuildingLevelFromDefinition");

	Params::FortOutpostContext_GetBuildingLevelFromDefinition Parms{};

	Parms.OutpostBuilding = OutpostBuilding;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostContext.GetBuildingMaxLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOutpostBuildings                       OutpostBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortOutpostContext::GetBuildingMaxLevel(EOutpostBuildings OutpostBuilding) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostContext", "GetBuildingMaxLevel");

	Params::FortOutpostContext_GetBuildingMaxLevel Parms{};

	Parms.OutpostBuilding = OutpostBuilding;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostContext.GetBuildingMaxLevelFromDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortOutpostItemDefinition*       OutpostBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortOutpostContext::GetBuildingMaxLevelFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostContext", "GetBuildingMaxLevelFromDefinition");

	Params::FortOutpostContext_GetBuildingMaxLevelFromDefinition Parms{};

	Parms.OutpostBuilding = OutpostBuilding;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostContext.GetBuildingUpgradeCost
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOutpostBuildings                       OutpostBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortItemQuantityPair>    OutWorldItems                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FFortItemQuantityPair>    OutAccountItems                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortOutpostContext::GetBuildingUpgradeCost(EOutpostBuildings OutpostBuilding, TArray<struct FFortItemQuantityPair>* OutWorldItems, TArray<struct FFortItemQuantityPair>* OutAccountItems) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostContext", "GetBuildingUpgradeCost");

	Params::FortOutpostContext_GetBuildingUpgradeCost Parms{};

	Parms.OutpostBuilding = OutpostBuilding;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWorldItems != nullptr)
		*OutWorldItems = std::move(Parms.OutWorldItems);

	if (OutAccountItems != nullptr)
		*OutAccountItems = std::move(Parms.OutAccountItems);
}


// Function FortniteGame.FortOutpostContext.GetBuildingUpgradeCostFromDefinition
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortOutpostItemDefinition*       OutpostBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortItemQuantityPair>    OutWorldItems                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FFortItemQuantityPair>    OutAccountItems                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortOutpostContext::GetBuildingUpgradeCostFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding, TArray<struct FFortItemQuantityPair>* OutWorldItems, TArray<struct FFortItemQuantityPair>* OutAccountItems) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostContext", "GetBuildingUpgradeCostFromDefinition");

	Params::FortOutpostContext_GetBuildingUpgradeCostFromDefinition Parms{};

	Parms.OutpostBuilding = OutpostBuilding;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWorldItems != nullptr)
		*OutWorldItems = std::move(Parms.OutWorldItems);

	if (OutAccountItems != nullptr)
		*OutAccountItems = std::move(Parms.OutAccountItems);
}


// Function FortniteGame.FortOutpostContext.GetHarvestingToolForLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   InHarvestingOptimizerLevel                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItemDefinition*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortWorldItemDefinition* UFortOutpostContext::GetHarvestingToolForLevel(int32 InHarvestingOptimizerLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostContext", "GetHarvestingToolForLevel");

	Params::FortOutpostContext_GetHarvestingToolForLevel Parms{};

	Parms.InHarvestingOptimizerLevel = InHarvestingOptimizerLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostContext.GetNextPOSTLevelRequirements
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UOutpostPOSTRequirementData*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UOutpostPOSTRequirementData*> UFortOutpostContext::GetNextPOSTLevelRequirements() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostContext", "GetNextPOSTLevelRequirements");

	Params::FortOutpostContext_GetNextPOSTLevelRequirements Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostContext.GetOutpostCoreLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortOutpostContext::GetOutpostCoreLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostContext", "GetOutpostCoreLevel");

	Params::FortOutpostContext_GetOutpostCoreLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostContext.GetPOSTBuildingHealthMod
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   POSTLevel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortOutpostContext::GetPOSTBuildingHealthMod(int32 POSTLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostContext", "GetPOSTBuildingHealthMod");

	Params::FortOutpostContext_GetPOSTBuildingHealthMod Parms{};

	Parms.POSTLevel = POSTLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostContext.LeaveOutpostAsParty
// (Final, Native, Public, BlueprintCallable, Const)

void UFortOutpostContext::LeaveOutpostAsParty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostContext", "LeaveOutpostAsParty");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAccountItemDefinition.GetRecyclingRefunds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFortItemQuantityPair>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FFortItemQuantityPair> UFortAccountItemDefinition::GetRecyclingRefunds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountItemDefinition", "GetRecyclingRefunds");

	Params::FortAccountItemDefinition_GetRecyclingRefunds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.AllowsTileMatching
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestItemDefinition::AllowsTileMatching() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "AllowsTileMatching");

	Params::FortQuestItemDefinition_AllowsTileMatching Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.ExpandsStormShield
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestItemDefinition::ExpandsStormShield() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "ExpandsStormShield");

	Params::FortQuestItemDefinition_ExpandsStormShield Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.GetCategory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDataTableRowHandle              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FDataTableRowHandle UFortQuestItemDefinition::GetCategory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "GetCategory");

	Params::FortQuestItemDefinition_GetCategory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.GetClaimConversation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortConversation*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortConversation* UFortQuestItemDefinition::GetClaimConversation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "GetClaimConversation");

	Params::FortQuestItemDefinition_GetClaimConversation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.GetCompletionText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortQuestItemDefinition::GetCompletionText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "GetCompletionText");

	Params::FortQuestItemDefinition_GetCompletionText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.GetHiddenRewards_BP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFortHiddenRewardQuantityPair>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FFortHiddenRewardQuantityPair> UFortQuestItemDefinition::GetHiddenRewards_BP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "GetHiddenRewards_BP");

	Params::FortQuestItemDefinition_GetHiddenRewards_BP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.GetIntroConversation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortConversation*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortConversation* UFortQuestItemDefinition::GetIntroConversation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "GetIntroConversation");

	Params::FortQuestItemDefinition_GetIntroConversation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.GetObjectives_BP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFortMcpQuestObjectiveInfo>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FFortMcpQuestObjectiveInfo> UFortQuestItemDefinition::GetObjectives_BP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "GetObjectives_BP");

	Params::FortQuestItemDefinition_GetObjectives_BP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.GetPrerequisiteObjective
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDataTableRowHandle              ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FDataTableRowHandle UFortQuestItemDefinition::GetPrerequisiteObjective() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "GetPrerequisiteObjective");

	Params::FortQuestItemDefinition_GetPrerequisiteObjective Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.GetPrerequisiteQuest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItemDefinition*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortQuestItemDefinition* UFortQuestItemDefinition::GetPrerequisiteQuest() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "GetPrerequisiteQuest");

	Params::FortQuestItemDefinition_GetPrerequisiteQuest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.GetQuestType
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortQuestType                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortQuestType UFortQuestItemDefinition::GetQuestType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "GetQuestType");

	Params::FortQuestItemDefinition_GetQuestType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.GetRewardDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortQuestItemDefinition::GetRewardDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "GetRewardDescription");

	Params::FortQuestItemDefinition_GetRewardDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.GetRewardHeaderText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortQuestItemDefinition::GetRewardHeaderText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "GetRewardHeaderText");

	Params::FortQuestItemDefinition_GetRewardHeaderText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.GetRewardInfo_BP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortRewardInfo                  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortRewardInfo UFortQuestItemDefinition::GetRewardInfo_BP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "GetRewardInfo_BP");

	Params::FortQuestItemDefinition_GetRewardInfo_BP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.GetRewards_BP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFortItemQuantityPair>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FFortItemQuantityPair> UFortQuestItemDefinition::GetRewards_BP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "GetRewards_BP");

	Params::FortQuestItemDefinition_GetRewards_BP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.GetRewardType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortQuestRewardType                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortQuestRewardType UFortQuestItemDefinition::GetRewardType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "GetRewardType");

	Params::FortQuestItemDefinition_GetRewardType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.GetSelectableRewards_BP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFortMcpQuestRewardInfo>  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FFortMcpQuestRewardInfo> UFortQuestItemDefinition::GetSelectableRewards_BP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "GetSelectableRewards_BP");

	Params::FortQuestItemDefinition_GetSelectableRewards_BP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.GetSelectRewardsConversation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortConversation*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortConversation* UFortQuestItemDefinition::GetSelectRewardsConversation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "GetSelectRewardsConversation");

	Params::FortQuestItemDefinition_GetSelectRewardsConversation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.GetWeight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortQuestItemDefinition::GetWeight() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "GetWeight");

	Params::FortQuestItemDefinition_GetWeight Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.IsDeprecated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestItemDefinition::IsDeprecated() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "IsDeprecated");

	Params::FortQuestItemDefinition_IsDeprecated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.IsHidden
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestItemDefinition::IsHidden() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "IsHidden");

	Params::FortQuestItemDefinition_IsHidden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinition.ShouldAutoLaunch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestItemDefinition::ShouldAutoLaunch() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinition", "ShouldAutoLaunch");

	Params::FortQuestItemDefinition_ShouldAutoLaunch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCheatManager.AreContextMenusEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController*                PC                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCheatManager::AreContextMenusEnabled(const class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortCheatManager", "AreContextMenusEnabled");

	Params::FortCheatManager_AreContextMenusEnabled Parms{};

	Parms.PC = PC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCheatManager.AddAllScores
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::AddAllScores(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "AddAllScores");

	Params::FortCheatManager_AddAllScores Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.AddBuildingScore
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::AddBuildingScore(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "AddBuildingScore");

	Params::FortCheatManager_AddBuildingScore Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.AddCombatScore
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::AddCombatScore(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "AddCombatScore");

	Params::FortCheatManager_AddCombatScore Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.AddDebugSpawnAIGroupTag
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::AddDebugSpawnAIGroupTag(class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "AddDebugSpawnAIGroupTag");

	Params::FortCheatManager_AddDebugSpawnAIGroupTag Parms{};

	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.AddKillFeedMessage
// (Final, Exec, Native, Public)

void UFortCheatManager::AddKillFeedMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "AddKillFeedMessage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.AddUtilityScore
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::AddUtilityScore(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "AddUtilityScore");

	Params::FortCheatManager_AddUtilityScore Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.AllowRespawn
// (Final, Exec, Native, Public)

void UFortCheatManager::AllowRespawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "AllowRespawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ApplyGameplayModifier
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ModifierName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::ApplyGameplayModifier(const class FString& ModifierName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ApplyGameplayModifier");

	Params::FortCheatManager_ApplyGameplayModifier Parms{};

	Parms.ModifierName = std::move(ModifierName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ApplyWeaponAlteration
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           AlterationName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::ApplyWeaponAlteration(const class FString& AlterationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ApplyWeaponAlteration");

	Params::FortCheatManager_ApplyWeaponAlteration Parms{};

	Parms.AlterationName = std::move(AlterationName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.AthenaEndlessGame
// (Final, Exec, Native, Public)

void UFortCheatManager::AthenaEndlessGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "AthenaEndlessGame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.AutoSlotSurvivors
// (Final, Exec, Native, Public)

void UFortCheatManager::AutoSlotSurvivors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "AutoSlotSurvivors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.BackpackSetSize
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::BackpackSetSize(int32 Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "BackpackSetSize");

	Params::FortCheatManager_BackpackSetSize Parms{};

	Parms.Size = Size;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.Badass
// (Final, Exec, Native, Public)

void UFortCheatManager::Badass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "Badass");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.BeautyMode
// (Final, Exec, Native, Public)

void UFortCheatManager::BeautyMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "BeautyMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.BotProtectBuilding
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ClassName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PosX                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PosY                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PosZ                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::BotProtectBuilding(const class FString& ClassName, float PosX, float PosY, float PosZ)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "BotProtectBuilding");

	Params::FortCheatManager_BotProtectBuilding Parms{};

	Parms.ClassName = std::move(ClassName);
	Parms.PosX = PosX;
	Parms.PosY = PosY;
	Parms.PosZ = PosZ;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.BotStartDogpile
// (Final, Exec, Native, Public)

void UFortCheatManager::BotStartDogpile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "BotStartDogpile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.BotStopDogpile
// (Final, Exec, Native, Public)

void UFortCheatManager::BotStopDogpile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "BotStopDogpile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.BounceContainer
// (Final, Exec, Native, Public)

void UFortCheatManager::BounceContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "BounceContainer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.BuildFree
// (Final, Exec, Native, Public)

void UFortCheatManager::BuildFree()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "BuildFree");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.BuildWith
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ResourceTypeAndOrLevel                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::BuildWith(const class FString& ResourceTypeAndOrLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "BuildWith");

	Params::FortCheatManager_BuildWith Parms{};

	Parms.ResourceTypeAndOrLevel = std::move(ResourceTypeAndOrLevel);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ClearDebugSpawnAIGroupTags
// (Final, Exec, Native, Public)

void UFortCheatManager::ClearDebugSpawnAIGroupTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ClearDebugSpawnAIGroupTags");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ClearEncounterSimulatedNumberOfPlayers
// (Final, Exec, Native, Public)

void UFortCheatManager::ClearEncounterSimulatedNumberOfPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ClearEncounterSimulatedNumberOfPlayers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ClearEncounterSpawnPointsCap
// (Final, Exec, Native, Public)

void UFortCheatManager::ClearEncounterSpawnPointsCap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ClearEncounterSpawnPointsCap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ClearEncounterSpawnPointsCurve
// (Final, Exec, Native, Public)

void UFortCheatManager::ClearEncounterSpawnPointsCurve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ClearEncounterSpawnPointsCurve");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ClearKeepSave
// (Final, Exec, Native, Public)

void UFortCheatManager::ClearKeepSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ClearKeepSave");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ClearMapFog
// (Final, Exec, Native, Public)

void UFortCheatManager::ClearMapFog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ClearMapFog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ClearRespawnTimer
// (Final, Exec, Native, Public)

void UFortCheatManager::ClearRespawnTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ClearRespawnTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ConstructTileWorld
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   MaxTiles                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::ConstructTileWorld(int32 MaxTiles, int32 X, int32 Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ConstructTileWorld");

	Params::FortCheatManager_ConstructTileWorld Parms{};

	Parms.MaxTiles = MaxTiles;
	Parms.X = X;
	Parms.Y = Y;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.CountPlayerBuiltBuildingActors
// (Final, Exec, Native, Public)

void UFortCheatManager::CountPlayerBuiltBuildingActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "CountPlayerBuiltBuildingActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.CraftFree
// (Final, Exec, Native, Public)

void UFortCheatManager::CraftFree()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "CraftFree");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.CycleCurrentEncounterToDebug
// (Exec, Native, Public)

void UFortCheatManager::CycleCurrentEncounterToDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "CycleCurrentEncounterToDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.CycleEncounterEQSQueryToDebug
// (Final, Exec, Native, Public)

void UFortCheatManager::CycleEncounterEQSQueryToDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "CycleEncounterEQSQueryToDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.CycleTheaterDisplayed
// (Final, Exec, Native, Public)

void UFortCheatManager::CycleTheaterDisplayed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "CycleTheaterDisplayed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DBNO
// (Exec, Native, Public)

void UFortCheatManager::DBNO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DBNO");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DebugAbilityTags
// (Exec, Native, Public)

void UFortCheatManager::DebugAbilityTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DebugAbilityTags");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DebugAttribute
// (Exec, Native, Public, HasOutParams)
// Parameters:
// class FString                           Attribute                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::DebugAttribute(class FString* Attribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DebugAttribute");

	Params::FortCheatManager_DebugAttribute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Attribute != nullptr)
		*Attribute = std::move(Parms.Attribute);
}


// Function FortniteGame.FortCheatManager.DebugAttributeClear
// (Exec, Native, Public)

void UFortCheatManager::DebugAttributeClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DebugAttributeClear");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DebugAttributeModifiers
// (Exec, Native, Public)

void UFortCheatManager::DebugAttributeModifiers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DebugAttributeModifiers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DebugBuildingDetection
// (Final, Exec, Native, Public)

void UFortCheatManager::DebugBuildingDetection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DebugBuildingDetection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DebugBuildingGroups
// (Final, Exec, Native, Public)

void UFortCheatManager::DebugBuildingGroups()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DebugBuildingGroups");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DebugForceEnsure
// (Final, Exec, Native, Public)

void UFortCheatManager::DebugForceEnsure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DebugForceEnsure");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DebugHideLoadingScreen
// (Final, Exec, Native, Public)

void UFortCheatManager::DebugHideLoadingScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DebugHideLoadingScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DebugHotSpots
// (Final, Exec, Native, Public)

void UFortCheatManager::DebugHotSpots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DebugHotSpots");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DebugKickPlayerDueToInactivity
// (Final, Exec, Native, Public)

void UFortCheatManager::DebugKickPlayerDueToInactivity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DebugKickPlayerDueToInactivity");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DebugLoadingScreen
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           MissionGen                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::DebugLoadingScreen(const class FString& MissionGen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DebugLoadingScreen");

	Params::FortCheatManager_DebugLoadingScreen Parms{};

	Parms.MissionGen = std::move(MissionGen);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DebugStructuralSupport
// (Exec, Native, Public)

void UFortCheatManager::DebugStructuralSupport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DebugStructuralSupport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DebugThisAI
// (Exec, Native, Public)

void UFortCheatManager::DebugThisAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DebugThisAI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DebugUseDedicatedServer
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bUse                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::DebugUseDedicatedServer(bool bUse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DebugUseDedicatedServer");

	Params::FortCheatManager_DebugUseDedicatedServer Parms{};

	Parms.bUse = bUse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DevSkipTutorial
// (Final, Exec, Native, Public)

void UFortCheatManager::DevSkipTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DevSkipTutorial");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DisableAI
// (Final, Exec, Native, Public)

void UFortCheatManager::DisableAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DisableAI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DiscardAILogging
// (Final, Exec, Native, Public)

void UFortCheatManager::DiscardAILogging()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DiscardAILogging");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DumpActiveGameplayEffects
// (Final, Exec, Native, Public)

void UFortCheatManager::DumpActiveGameplayEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DumpActiveGameplayEffects");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DumpActorsWithAssetTags
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           TagList                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::DumpActorsWithAssetTags(const class FString& TagList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DumpActorsWithAssetTags");

	Params::FortCheatManager_DumpActorsWithAssetTags Parms{};

	Parms.TagList = std::move(TagList);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DumpAllActiveMissions
// (Final, Exec, Native, Public)

void UFortCheatManager::DumpAllActiveMissions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DumpAllActiveMissions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DumpAllActorsWithAssetTags
// (Final, Exec, Native, Public)

void UFortCheatManager::DumpAllActorsWithAssetTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DumpAllActorsWithAssetTags");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DumpAppliedHomebaseEffectsWithCoreAttributes
// (Exec, Native, Public)

void UFortCheatManager::DumpAppliedHomebaseEffectsWithCoreAttributes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DumpAppliedHomebaseEffectsWithCoreAttributes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.DumpGameStats
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           FilterName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::DumpGameStats(const class FString& FilterName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "DumpGameStats");

	Params::FortCheatManager_DumpGameStats Parms{};

	Parms.FilterName = std::move(FilterName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.EnableFixedTimeStep
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   AsIfItWasFPS                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::EnableFixedTimeStep(int32 AsIfItWasFPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "EnableFixedTimeStep");

	Params::FortCheatManager_EnableFixedTimeStep Parms{};

	Parms.AsIfItWasFPS = AsIfItWasFPS;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.EnableNewCustomizationPanel
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::EnableNewCustomizationPanel(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "EnableNewCustomizationPanel");

	Params::FortCheatManager_EnableNewCustomizationPanel Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.EnableSubtitles
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::EnableSubtitles(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "EnableSubtitles");

	Params::FortCheatManager_EnableSubtitles Parms{};

	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.EncounterCurrentUtilities
// (Final, Exec, Native, Public)

void UFortCheatManager::EncounterCurrentUtilities()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "EncounterCurrentUtilities");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.EncounterInitialUtilities
// (Final, Exec, Native, Public)

void UFortCheatManager::EncounterInitialUtilities()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "EncounterInitialUtilities");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.EncounterSetDifficultyLevel
// (Final, Exec, Native, Public)
// Parameters:
// float                                   NewDifficulty                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::EncounterSetDifficultyLevel(float NewDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "EncounterSetDifficultyLevel");

	Params::FortCheatManager_EncounterSetDifficultyLevel Parms{};

	Parms.NewDifficulty = NewDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.EncounterSpawnProbabilities
// (Final, Exec, Native, Public)

void UFortCheatManager::EncounterSpawnProbabilities()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "EncounterSpawnProbabilities");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.EncounterTopUtilityPercentages
// (Final, Exec, Native, Public)

void UFortCheatManager::EncounterTopUtilityPercentages()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "EncounterTopUtilityPercentages");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.EndLiveStreamingWindow
// (Final, Exec, Native, Public)

void UFortCheatManager::EndLiveStreamingWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "EndLiveStreamingWindow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.EvolveHero
// (Final, Exec, Native, Public)

void UFortCheatManager::EvolveHero()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "EvolveHero");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ExecuteNewMissionGeneration
// (Final, Exec, Native, Public)
// Parameters:
// float                                   DifficultyLevel                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           GeneratorName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::ExecuteNewMissionGeneration(float DifficultyLevel, const class FString& GeneratorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ExecuteNewMissionGeneration");

	Params::FortCheatManager_ExecuteNewMissionGeneration Parms{};

	Parms.DifficultyLevel = DifficultyLevel;
	Parms.GeneratorName = std::move(GeneratorName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.FakeKillHighlight
// (Final, Exec, Native, Public)

void UFortCheatManager::FakeKillHighlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "FakeKillHighlight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ForceAILODs
// (Final, Exec, Native, Public)
// Parameters:
// EFortAILODLevel                         InForcedAILODValue                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::ForceAILODs(EFortAILODLevel InForcedAILODValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ForceAILODs");

	Params::FortCheatManager_ForceAILODs Parms{};

	Parms.InForcedAILODValue = InForcedAILODValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ForceHeroType
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           HeroPersistentName                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::ForceHeroType(const class FString& HeroPersistentName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ForceHeroType");

	Params::FortCheatManager_ForceHeroType Parms{};

	Parms.HeroPersistentName = std::move(HeroPersistentName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ForceSaveMissionStateAndWorld
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           SaveFileName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::ForceSaveMissionStateAndWorld(const class FString& SaveFileName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ForceSaveMissionStateAndWorld");

	Params::FortCheatManager_ForceSaveMissionStateAndWorld Parms{};

	Parms.SaveFileName = std::move(SaveFileName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ForceServerShutdown
// (Exec, Native, Public)
// Parameters:
// int32                                   ExitCode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::ForceServerShutdown(int32 ExitCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ForceServerShutdown");

	Params::FortCheatManager_ForceServerShutdown Parms{};

	Parms.ExitCode = ExitCode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ForceSetHeroRemoteCharacter
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   PartyMemberIndex                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::ForceSetHeroRemoteCharacter(int32 PartyMemberIndex, bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ForceSetHeroRemoteCharacter");

	Params::FortCheatManager_ForceSetHeroRemoteCharacter Parms{};

	Parms.PartyMemberIndex = PartyMemberIndex;
	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ForceUnlockHordeTiers
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   MaxTierNumber                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::ForceUnlockHordeTiers(int32 MaxTierNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ForceUnlockHordeTiers");

	Params::FortCheatManager_ForceUnlockHordeTiers Parms{};

	Parms.MaxTierNumber = MaxTierNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.FortniteForceCharLOD
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   LOD                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::FortniteForceCharLOD(int32 LOD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "FortniteForceCharLOD");

	Params::FortCheatManager_FortniteForceCharLOD Parms{};

	Parms.LOD = LOD;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GenerateMockMatchReport
// (Final, Exec, Native, Public)

void UFortCheatManager::GenerateMockMatchReport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GenerateMockMatchReport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GeneratePolysInPathingRange
// (Final, Exec, Native, Public)
// Parameters:
// float                                   MaxDistance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinDistance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GeneratePolysInPathingRange(float MaxDistance, float MinDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GeneratePolysInPathingRange");

	Params::FortCheatManager_GeneratePolysInPathingRange Parms{};

	Parms.MaxDistance = MaxDistance;
	Parms.MinDistance = MinDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GetAllReplStats
// (Final, Exec, Native, Public)

void UFortCheatManager::GetAllReplStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GetAllReplStats");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GetGameStat
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           StatName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GetGameStat(const class FString& StatName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GetGameStat");

	Params::FortCheatManager_GetGameStat Parms{};

	Parms.StatName = std::move(StatName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GetReplStat
// (Final, Exec, Native, Public)
// Parameters:
// EFortReplicatedStat                     Stat                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GetReplStat(EFortReplicatedStat Stat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GetReplStat");

	Params::FortCheatManager_GetReplStat Parms{};

	Parms.Stat = Stat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GetWorldDifficulty
// (Final, Exec, Native, Public)

void UFortCheatManager::GetWorldDifficulty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GetWorldDifficulty");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GetWorldLevel
// (Final, Exec, Native, Public)

void UFortCheatManager::GetWorldLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GetWorldLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GetWTFRotations
// (Final, Exec, Native, Public)

void UFortCheatManager::GetWTFRotations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GetWTFRotations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveAllConsumables
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   NumItems                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GiveAllConsumables(int32 NumItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveAllConsumables");

	Params::FortCheatManager_GiveAllConsumables Parms{};

	Parms.NumItems = NumItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveAllIngredients
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   NumIngredients                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GiveAllIngredients(int32 NumIngredients)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveAllIngredients");

	Params::FortCheatManager_GiveAllIngredients Parms{};

	Parms.NumIngredients = NumIngredients;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveAllMelee
// (Final, Exec, Native, Public)

void UFortCheatManager::GiveAllMelee()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveAllMelee");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveAllPistols
// (Final, Exec, Native, Public)

void UFortCheatManager::GiveAllPistols()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveAllPistols");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveAllRifles
// (Final, Exec, Native, Public)

void UFortCheatManager::GiveAllRifles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveAllRifles");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveAllShotguns
// (Final, Exec, Native, Public)

void UFortCheatManager::GiveAllShotguns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveAllShotguns");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveAllTraps
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   NumItems                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GiveAllTraps(int32 NumItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveAllTraps");

	Params::FortCheatManager_GiveAllTraps Parms{};

	Parms.NumItems = NumItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveAllWeapons
// (Final, Exec, Native, Public)

void UFortCheatManager::GiveAllWeapons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveAllWeapons");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveAmmo
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           AmmoNameAndAmmount                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GiveAmmo(const class FString& AmmoNameAndAmmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveAmmo");

	Params::FortCheatManager_GiveAmmo Parms{};

	Parms.AmmoNameAndAmmount = std::move(AmmoNameAndAmmount);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveAthenaAmmo
// (Final, Exec, Native, Public)

void UFortCheatManager::GiveAthenaAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveAthenaAmmo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveAthenaConsumables
// (Final, Exec, Native, Public)

void UFortCheatManager::GiveAthenaConsumables()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveAthenaConsumables");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveAthenaFullKit
// (Final, Exec, Native, Public)

void UFortCheatManager::GiveAthenaFullKit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveAthenaFullKit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveAthenaTraps
// (Final, Exec, Native, Public)

void UFortCheatManager::GiveAthenaTraps()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveAthenaTraps");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveAthenaWeapons
// (Final, Exec, Native, Public)

void UFortCheatManager::GiveAthenaWeapons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveAthenaWeapons");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveBluGlo
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GiveBluGlo(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveBluGlo");

	Params::FortCheatManager_GiveBluGlo Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveCheatInventory
// (Final, Exec, Native, Public)

void UFortCheatManager::GiveCheatInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveCheatInventory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveConsumable
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ConsumableName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RequestedLevel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GiveConsumable(const class FString& ConsumableName, int32 RequestedLevel, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveConsumable");

	Params::FortCheatManager_GiveConsumable Parms{};

	Parms.ConsumableName = std::move(ConsumableName);
	Parms.RequestedLevel = RequestedLevel;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveDeployablePlotAllIngredients
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   NumIngredients                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GiveDeployablePlotAllIngredients(int32 NumIngredients)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveDeployablePlotAllIngredients");

	Params::FortCheatManager_GiveDeployablePlotAllIngredients Parms{};

	Parms.NumIngredients = NumIngredients;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveGadget
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           GadgetName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemLevel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GiveGadget(const class FString& GadgetName, int32 ItemLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveGadget");

	Params::FortCheatManager_GiveGadget Parms{};

	Parms.GadgetName = std::move(GadgetName);
	Parms.ItemLevel = ItemLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveGadgets
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           GadgetName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quantity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemLevel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GiveGadgets(const class FString& GadgetName, int32 Quantity, int32 ItemLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveGadgets");

	Params::FortCheatManager_GiveGadgets Parms{};

	Parms.GadgetName = std::move(GadgetName);
	Parms.Quantity = Quantity;
	Parms.ItemLevel = ItemLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveGoodWeapons
// (Final, Exec, Native, Public)

void UFortCheatManager::GiveGoodWeapons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveGoodWeapons");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveHeroSpecialization
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           SpecializationName                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GiveHeroSpecialization(const class FString& SpecializationName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveHeroSpecialization");

	Params::FortCheatManager_GiveHeroSpecialization Parms{};

	Parms.SpecializationName = std::move(SpecializationName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveMetal
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GiveMetal(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveMetal");

	Params::FortCheatManager_GiveMetal Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveResources
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GiveResources(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveResources");

	Params::FortCheatManager_GiveResources Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveSBA
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           StrategicBuildingName                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GiveSBA(const class FString& StrategicBuildingName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveSBA");

	Params::FortCheatManager_GiveSBA Parms{};

	Parms.StrategicBuildingName = std::move(StrategicBuildingName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveSpecificItem
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ItemPath                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemAmount                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemLevel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GiveSpecificItem(const class FString& ItemPath, int32 ItemAmount, int32 ItemLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveSpecificItem");

	Params::FortCheatManager_GiveSpecificItem Parms{};

	Parms.ItemPath = std::move(ItemPath);
	Parms.ItemAmount = ItemAmount;
	Parms.ItemLevel = ItemLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveStone
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GiveStone(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveStone");

	Params::FortCheatManager_GiveStone Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveTrap
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           TrapName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RequestedLevel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumTrapsToGive                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GiveTrap(const class FString& TrapName, int32 RequestedLevel, int32 NumTrapsToGive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveTrap");

	Params::FortCheatManager_GiveTrap Parms{};

	Parms.TrapName = std::move(TrapName);
	Parms.RequestedLevel = RequestedLevel;
	Parms.NumTrapsToGive = NumTrapsToGive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveUsefulThings
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   NumOfUsefulThings                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GiveUsefulThings(int32 NumOfUsefulThings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveUsefulThings");

	Params::FortCheatManager_GiveUsefulThings Parms{};

	Parms.NumOfUsefulThings = NumOfUsefulThings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveWeapon
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           WeaponName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RequestedLevel                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GiveWeapon(const class FString& WeaponName, int32 RequestedLevel, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveWeapon");

	Params::FortCheatManager_GiveWeapon Parms{};

	Parms.WeaponName = std::move(WeaponName);
	Parms.RequestedLevel = RequestedLevel;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveWeapons
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GiveWeapons(class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveWeapons");

	Params::FortCheatManager_GiveWeapons Parms{};

	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GiveWood
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GiveWood(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GiveWood");

	Params::FortCheatManager_GiveWood Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.God
// (Exec, Native, Public)

void UFortCheatManager::God()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "God");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GrantHeroSupportAbility
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           SupportHeroName                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GrantHeroSupportAbility(const class FString& SupportHeroName, int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GrantHeroSupportAbility");

	Params::FortCheatManager_GrantHeroSupportAbility Parms{};

	Parms.SupportHeroName = std::move(SupportHeroName);
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GrantHeroTacticalAbility
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           SupportHeroName                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::GrantHeroTacticalAbility(const class FString& SupportHeroName, int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GrantHeroTacticalAbility");

	Params::FortCheatManager_GrantHeroTacticalAbility Parms{};

	Parms.SupportHeroName = std::move(SupportHeroName);
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.HideGameplayCaptureUI
// (Final, Exec, Native, Public)

void UFortCheatManager::HideGameplayCaptureUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "HideGameplayCaptureUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.HideHUDElement
// (Final, Exec, Native, Public)
// Parameters:
// struct FGameplayTag                     HUDElementTag                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::HideHUDElement(const struct FGameplayTag& HUDElementTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "HideHUDElement");

	Params::FortCheatManager_HideHUDElement Parms{};

	Parms.HUDElementTag = std::move(HUDElementTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.KillPawns
// (Exec, Native, Public)
// Parameters:
// TSubclassOf<class AFortPawn>            AClass                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::KillPawns(TSubclassOf<class AFortPawn> AClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "KillPawns");

	Params::FortCheatManager_KillPawns Parms{};

	Parms.AClass = AClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ListActiveEncounters
// (Final, Exec, Native, Public)

void UFortCheatManager::ListActiveEncounters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ListActiveEncounters");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ListAIUtilities
// (Final, Exec, Native, Public)

void UFortCheatManager::ListAIUtilities()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ListAIUtilities");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ListAmmo
// (Final, Exec, Native, Public)

void UFortCheatManager::ListAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ListAmmo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ListCheats
// (Final, Exec, Native, Public)

void UFortCheatManager::ListCheats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ListCheats");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ListEmotes
// (Final, Exec, Native, Public)

void UFortCheatManager::ListEmotes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ListEmotes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ListMissionGenerators
// (Final, Exec, Native, Public)

void UFortCheatManager::ListMissionGenerators()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ListMissionGenerators");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ListMissions
// (Final, Exec, Native, Public)

void UFortCheatManager::ListMissions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ListMissions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ListPlayerIDs
// (Final, Exec, Native, Public)

void UFortCheatManager::ListPlayerIDs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ListPlayerIDs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ListSpawnGroups
// (Final, Exec, Native, Public)

void UFortCheatManager::ListSpawnGroups()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ListSpawnGroups");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.LiveStreamingSelectedViewers
// (Final, Exec, Native, Public)
// Parameters:
// TArray<class FString>                   Names                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortCheatManager::LiveStreamingSelectedViewers(const TArray<class FString>& Names)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "LiveStreamingSelectedViewers");

	Params::FortCheatManager_LiveStreamingSelectedViewers Parms{};

	Parms.Names = std::move(Names);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.LoadMission
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           MissionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::LoadMission(const class FString& MissionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "LoadMission");

	Params::FortCheatManager_LoadMission Parms{};

	Parms.MissionName = std::move(MissionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.LoadMissionGenerator
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           GeneratorName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::LoadMissionGenerator(const class FString& GeneratorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "LoadMissionGenerator");

	Params::FortCheatManager_LoadMissionGenerator Parms{};

	Parms.GeneratorName = std::move(GeneratorName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.MakeAIsGod
// (Final, Exec, Native, Public)

void UFortCheatManager::MakeAIsGod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "MakeAIsGod");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.MakeBuildingActorsGod
// (Final, Exec, Native, Public)

void UFortCheatManager::MakeBuildingActorsGod()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "MakeBuildingActorsGod");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.MakeGods
// (Final, Exec, Native, Public)
// Parameters:
// TSubclassOf<class AFortPawn>            AClass                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::MakeGods(TSubclassOf<class AFortPawn> AClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "MakeGods");

	Params::FortCheatManager_MakeGods Parms{};

	Parms.AClass = AClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpApplyAlteration
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           Schematic                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Alteration                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::McpApplyAlteration(const class FString& Schematic, const class FString& Alteration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpApplyAlteration");

	Params::FortCheatManager_McpApplyAlteration Parms{};

	Parms.Schematic = std::move(Schematic);
	Parms.Alteration = std::move(Alteration);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpApplyStash
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           StashName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::McpApplyStash(const class FString& StashName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpApplyStash");

	Params::FortCheatManager_McpApplyStash Parms{};

	Parms.StashName = std::move(StashName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpCheat
// (Final, Exec, Native, Public)

void UFortCheatManager::McpCheat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpCheat");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpClaimAllAvailableCollectionBookRewards
// (Final, Exec, Native, Public)

void UFortCheatManager::McpClaimAllAvailableCollectionBookRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpClaimAllAvailableCollectionBookRewards");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpClaimAllResourceCollectors
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bDebugPrint                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::McpClaimAllResourceCollectors(bool bDebugPrint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpClaimAllResourceCollectors");

	Params::FortCheatManager_McpClaimAllResourceCollectors Parms{};

	Parms.bDebugPrint = bDebugPrint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpCompleteCurrentPrimaryMission
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   NumMissionPoints                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::McpCompleteCurrentPrimaryMission(int32 NumMissionPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpCompleteCurrentPrimaryMission");

	Params::FortCheatManager_McpCompleteCurrentPrimaryMission Parms{};

	Parms.NumMissionPoints = NumMissionPoints;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpCompleteHexMission
// (Final, Exec, Native, Public)

void UFortCheatManager::McpCompleteHexMission()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpCompleteHexMission");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpConvertItem
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ItemToConvert                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ConversionIdx                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::McpConvertItem(const class FString& ItemToConvert, int32 ConversionIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpConvertItem");

	Params::FortCheatManager_McpConvertItem Parms{};

	Parms.ItemToConvert = std::move(ItemToConvert);
	Parms.ConversionIdx = ConversionIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpEarnScore
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   ScoreAmount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::McpEarnScore(int32 ScoreAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpEarnScore");

	Params::FortCheatManager_McpEarnScore Parms{};

	Parms.ScoreAmount = ScoreAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpEquipCharCosmetic
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           CharacterId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CosmeticId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CosmeticType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::McpEquipCharCosmetic(const class FString& CharacterId, const class FString& CosmeticId, int32 CosmeticType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpEquipCharCosmetic");

	Params::FortCheatManager_McpEquipCharCosmetic Parms{};

	Parms.CharacterId = std::move(CharacterId);
	Parms.CosmeticId = std::move(CosmeticId);
	Parms.CosmeticType = CosmeticType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpForceHttpFailRate
// (Final, Exec, Native, Public)
// Parameters:
// float                                   Factor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::McpForceHttpFailRate(float Factor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpForceHttpFailRate");

	Params::FortCheatManager_McpForceHttpFailRate Parms{};

	Parms.Factor = Factor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpGetCachedPersistence
// (Final, Exec, Native, Public)

void UFortCheatManager::McpGetCachedPersistence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpGetCachedPersistence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpGetCurrencyAmount
// (Final, Exec, Native, Public)

void UFortCheatManager::McpGetCurrencyAmount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpGetCurrencyAmount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpGetHexMission
// (Final, Exec, Native, Public)

void UFortCheatManager::McpGetHexMission()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpGetHexMission");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpGetPersonnelXP
// (Final, Exec, Native, Public)

void UFortCheatManager::McpGetPersonnelXP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpGetPersonnelXP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpGetSchematicXP
// (Final, Exec, Native, Public)

void UFortCheatManager::McpGetSchematicXP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpGetSchematicXP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpGetUnredeemedCodes
// (Final, Exec, Native, Public)

void UFortCheatManager::McpGetUnredeemedCodes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpGetUnredeemedCodes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpGetVersion
// (Final, Exec, Native, Public)

void UFortCheatManager::McpGetVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpGetVersion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpHostGetAllPlayerCachedPersistence
// (Final, Exec, Native, Public)

void UFortCheatManager::McpHostGetAllPlayerCachedPersistence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpHostGetAllPlayerCachedPersistence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpHostGetPlayers
// (Final, Exec, Native, Public)

void UFortCheatManager::McpHostGetPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpHostGetPlayers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpIssueCodeToken
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           TokenId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::McpIssueCodeToken(const class FString& TokenId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpIssueCodeToken");

	Params::FortCheatManager_McpIssueCodeToken Parms{};

	Parms.TokenId = std::move(TokenId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpJoinFromPartyInviteToken
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           Token                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsFromInvite                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::McpJoinFromPartyInviteToken(const class FString& Token, bool bIsFromInvite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpJoinFromPartyInviteToken");

	Params::FortCheatManager_McpJoinFromPartyInviteToken Parms{};

	Parms.Token = std::move(Token);
	Parms.bIsFromInvite = bIsFromInvite;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpLogout
// (Final, Exec, Native, Public)

void UFortCheatManager::McpLogout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpLogout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpOpenCardPack
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           CardPackItemId                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SelectionIdx                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::McpOpenCardPack(const class FString& CardPackItemId, int32 SelectionIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpOpenCardPack");

	Params::FortCheatManager_McpOpenCardPack Parms{};

	Parms.CardPackItemId = std::move(CardPackItemId);
	Parms.SelectionIdx = SelectionIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpPrintFriendInviteToken
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           FriendName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OnlyPrintIfJoinable                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::McpPrintFriendInviteToken(const class FString& FriendName, bool OnlyPrintIfJoinable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpPrintFriendInviteToken");

	Params::FortCheatManager_McpPrintFriendInviteToken Parms{};

	Parms.FriendName = std::move(FriendName);
	Parms.OnlyPrintIfJoinable = OnlyPrintIfJoinable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpPrintPartyInviteToken
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    OnlyPrintIfJoinable                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::McpPrintPartyInviteToken(bool OnlyPrintIfJoinable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpPrintPartyInviteToken");

	Params::FortCheatManager_McpPrintPartyInviteToken Parms{};

	Parms.OnlyPrintIfJoinable = OnlyPrintIfJoinable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpRecycleItem
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ItemToRecycle                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::McpRecycleItem(const class FString& ItemToRecycle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpRecycleItem");

	Params::FortCheatManager_McpRecycleItem Parms{};

	Parms.ItemToRecycle = std::move(ItemToRecycle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpRedeemPurchases
// (Final, Exec, Native, Public)

void UFortCheatManager::McpRedeemPurchases()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpRedeemPurchases");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpRefreshCatalog
// (Final, Exec, Native, Public)

void UFortCheatManager::McpRefreshCatalog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpRefreshCatalog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpRefreshProfile
// (Final, Exec, Native, Public)

void UFortCheatManager::McpRefreshProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpRefreshProfile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpResetPersistence
// (Final, Exec, Native, Public)

void UFortCheatManager::McpResetPersistence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpResetPersistence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpSlotItem
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ItemToSlot                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::McpSlotItem(const class FString& ItemToSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpSlotItem");

	Params::FortCheatManager_McpSlotItem Parms{};

	Parms.ItemToSlot = std::move(ItemToSlot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpStorageTransfer
// (Final, Exec, Native, Public, HasOutParams)
// Parameters:
// TArray<class FString>                   ItemIdsToMoveToOutpost                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>                   ItemIdsToMoveToTheater                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortCheatManager::McpStorageTransfer(const TArray<class FString>& ItemIdsToMoveToOutpost, const TArray<class FString>& ItemIdsToMoveToTheater)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpStorageTransfer");

	Params::FortCheatManager_McpStorageTransfer Parms{};

	Parms.ItemIdsToMoveToOutpost = std::move(ItemIdsToMoveToOutpost);
	Parms.ItemIdsToMoveToTheater = std::move(ItemIdsToMoveToTheater);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpTestFriendCodes
// (Final, Exec, Native, Public)

void UFortCheatManager::McpTestFriendCodes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpTestFriendCodes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpTestFriendCodes_OnQueryUnredeemedFriendCodes
// (Final, Native, Public, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFriendCode>              FriendCodes                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortCheatManager::McpTestFriendCodes_OnQueryUnredeemedFriendCodes(bool bSuccess, const TArray<struct FFriendCode>& FriendCodes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpTestFriendCodes_OnQueryUnredeemedFriendCodes");

	Params::FortCheatManager_McpTestFriendCodes_OnQueryUnredeemedFriendCodes Parms{};

	Parms.bSuccess = bSuccess;
	Parms.FriendCodes = std::move(FriendCodes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.McpUpgradeItem
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ItemToUpgrade                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::McpUpgradeItem(const class FString& ItemToUpgrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "McpUpgradeItem");

	Params::FortCheatManager_McpUpgradeItem Parms{};

	Parms.ItemToUpgrade = std::move(ItemToUpgrade);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.MissionForceFailure
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           MissionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::MissionForceFailure(const class FString& MissionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "MissionForceFailure");

	Params::FortCheatManager_MissionForceFailure Parms{};

	Parms.MissionName = std::move(MissionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.MissionForcePrimarySuccess
// (Final, Exec, Native, Public)
// Parameters:
// float                                   FractionCompleted                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::MissionForcePrimarySuccess(float FractionCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "MissionForcePrimarySuccess");

	Params::FortCheatManager_MissionForcePrimarySuccess Parms{};

	Parms.FractionCompleted = FractionCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.MissionForceSuccess
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           MissionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FractionCompleted                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::MissionForceSuccess(const class FString& MissionName, float FractionCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "MissionForceSuccess");

	Params::FortCheatManager_MissionForceSuccess Parms{};

	Parms.MissionName = std::move(MissionName);
	Parms.FractionCompleted = FractionCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.MMS
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           Command                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::MMS(const class FString& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "MMS");

	Params::FortCheatManager_MMS Parms{};

	Parms.Command = std::move(Command);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ModItemDurability
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InValue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::ModItemDurability(float InValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ModItemDurability");

	Params::FortCheatManager_ModItemDurability Parms{};

	Parms.InValue = InValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.OpenClassSelectScreen
// (Final, Exec, Native, Public)

void UFortCheatManager::OpenClassSelectScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "OpenClassSelectScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.Pain
// (Final, Exec, Native, Public)
// Parameters:
// float                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::Pain(float Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "Pain");

	Params::FortCheatManager_Pain Parms{};

	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.PerfMemStatMonitor
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ToggleState                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::PerfMemStatMonitor(const class FString& ToggleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "PerfMemStatMonitor");

	Params::FortCheatManager_PerfMemStatMonitor Parms{};

	Parms.ToggleState = std::move(ToggleState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.PrintScriptedActionManagerState
// (Final, Exec, Native, Public)

void UFortCheatManager::PrintScriptedActionManagerState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "PrintScriptedActionManagerState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.PrintShotReport
// (Final, Exec, Native, Public)

void UFortCheatManager::PrintShotReport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "PrintShotReport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.PrintTileWorld
// (Final, Exec, Native, Public)

void UFortCheatManager::PrintTileWorld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "PrintTileWorld");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.QueryHighlightCount
// (Final, Exec, Native, Public)

void UFortCheatManager::QueryHighlightCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "QueryHighlightCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.RedoHuskSpecialEventModifiers
// (Final, Exec, Native, Public)
// Parameters:
// float                                   TargetRate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::RedoHuskSpecialEventModifiers(float TargetRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "RedoHuskSpecialEventModifiers");

	Params::FortCheatManager_RedoHuskSpecialEventModifiers Parms{};

	Parms.TargetRate = TargetRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.RefreshTheaters
// (Final, Exec, Native, Public)

void UFortCheatManager::RefreshTheaters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "RefreshTheaters");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.RegenerateZoneMissions
// (Final, Exec, Native, Public)

void UFortCheatManager::RegenerateZoneMissions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "RegenerateZoneMissions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.RegenerateZoneMissionsWithDifficultyLevel
// (Final, Exec, Native, Public)
// Parameters:
// float                                   DifficultyLevelOverride                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::RegenerateZoneMissionsWithDifficultyLevel(float DifficultyLevelOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "RegenerateZoneMissionsWithDifficultyLevel");

	Params::FortCheatManager_RegenerateZoneMissionsWithDifficultyLevel Parms{};

	Parms.DifficultyLevelOverride = DifficultyLevelOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ReInitHUD
// (Final, Exec, Native, Public)

void UFortCheatManager::ReInitHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ReInitHUD");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ReloadUI
// (Final, Exec, Native, Public)

void UFortCheatManager::ReloadUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ReloadUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ReloadUMG
// (Final, Exec, Native, Public)

void UFortCheatManager::ReloadUMG()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ReloadUMG");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.RemoveDebugSpawnAIGroupTag
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::RemoveDebugSpawnAIGroupTag(class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "RemoveDebugSpawnAIGroupTag");

	Params::FortCheatManager_RemoveDebugSpawnAIGroupTag Parms{};

	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.RemoveGameplayModifier
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ModifierName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::RemoveGameplayModifier(const class FString& ModifierName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "RemoveGameplayModifier");

	Params::FortCheatManager_RemoveGameplayModifier Parms{};

	Parms.ModifierName = std::move(ModifierName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ReplayLastPerfTest
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           Params_0                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::ReplayLastPerfTest(const class FString& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ReplayLastPerfTest");

	Params::FortCheatManager_ReplayLastPerfTest Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ReRandomizeTiles
// (Final, Exec, Native, Public)

void UFortCheatManager::ReRandomizeTiles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ReRandomizeTiles");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ResetEncounterWave
// (Final, Exec, Native, Public)

void UFortCheatManager::ResetEncounterWave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ResetEncounterWave");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ResetMaxAITracking
// (Final, Exec, Native, Public)

void UFortCheatManager::ResetMaxAITracking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ResetMaxAITracking");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.RespawnPlayer
// (Final, Exec, Native, Public)

void UFortCheatManager::RespawnPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "RespawnPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.RespawnPlayerServer
// (Final, Exec, Native, Public)

void UFortCheatManager::RespawnPlayerServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "RespawnPlayerServer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ReviveFromDBNO
// (Exec, Native, Public)

void UFortCheatManager::ReviveFromDBNO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ReviveFromDBNO");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.RunMonteCarlo
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TileGroup                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumIterations                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::RunMonteCarlo(int32 X, int32 Y, const class FString& TileGroup, int32 NumIterations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "RunMonteCarlo");

	Params::FortCheatManager_RunMonteCarlo Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.TileGroup = std::move(TileGroup);
	Parms.NumIterations = NumIterations;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.RunPerfMemCheatScript
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bStartStatFiles                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::RunPerfMemCheatScript(bool bStartStatFiles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "RunPerfMemCheatScript");

	Params::FortCheatManager_RunPerfMemCheatScript Parms{};

	Parms.bStartStatFiles = bStartStatFiles;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SendMissionEvent
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           MissionEventName                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SendMissionEvent(const class FString& MissionEventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SendMissionEvent");

	Params::FortCheatManager_SendMissionEvent Parms{};

	Parms.MissionEventName = std::move(MissionEventName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SendQuestEvent
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TargetTag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SourceTag                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ContextTag                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SendQuestEvent(class FName Type, class FName TargetTag, class FName SourceTag, class FName ContextTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SendQuestEvent");

	Params::FortCheatManager_SendQuestEvent Parms{};

	Parms.Type = Type;
	Parms.TargetTag = TargetTag;
	Parms.SourceTag = SourceTag;
	Parms.ContextTag = ContextTag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SendTwitchToastNotification
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           Title                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Description                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SendTwitchToastNotification(const class FString& Title, const class FString& Description)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SendTwitchToastNotification");

	Params::FortCheatManager_SendTwitchToastNotification Parms{};

	Parms.Title = std::move(Title);
	Parms.Description = std::move(Description);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetActionMappingEnabled
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             Action                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetActionMappingEnabled(class FName Action, bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetActionMappingEnabled");

	Params::FortCheatManager_SetActionMappingEnabled Parms{};

	Parms.Action = Action;
	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetAimMode
// (Final, Exec, Native, Public)
// Parameters:
// uint32                                  Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetAimMode(uint32 Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetAimMode");

	Params::FortCheatManager_SetAimMode Parms{};

	Parms.Mode = Mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetAthenaHero
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           NewHeroName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetAthenaHero(const class FString& NewHeroName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetAthenaHero");

	Params::FortCheatManager_SetAthenaHero Parms{};

	Parms.NewHeroName = std::move(NewHeroName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetCameraDistanceMultiplier
// (Final, Exec, Native, Public)
// Parameters:
// float                                   XMultiplier                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   YMultiplier                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ZMultiplier                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetCameraDistanceMultiplier(float XMultiplier, float YMultiplier, float ZMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetCameraDistanceMultiplier");

	Params::FortCheatManager_SetCameraDistanceMultiplier Parms{};

	Parms.XMultiplier = XMultiplier;
	Parms.YMultiplier = YMultiplier;
	Parms.ZMultiplier = ZMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetCameraFOVMultiplier
// (Final, Exec, Native, Public)
// Parameters:
// float                                   Multiplier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetCameraFOVMultiplier(float Multiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetCameraFOVMultiplier");

	Params::FortCheatManager_SetCameraFOVMultiplier Parms{};

	Parms.Multiplier = Multiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetCameraPrototype
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             ProtoName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetCameraPrototype(class FName ProtoName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetCameraPrototype");

	Params::FortCheatManager_SetCameraPrototype Parms{};

	Parms.ProtoName = ProtoName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetCapturePercentage
// (Final, Exec, Native, Public)
// Parameters:
// float                                   NewCapturePercentage                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetCapturePercentage(float NewCapturePercentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetCapturePercentage");

	Params::FortCheatManager_SetCapturePercentage Parms{};

	Parms.NewCapturePercentage = NewCapturePercentage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetCloudAltitude
// (Final, Exec, Native, Public)
// Parameters:
// float                                   CloudAltitude                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetCloudAltitude(float CloudAltitude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetCloudAltitude");

	Params::FortCheatManager_SetCloudAltitude Parms{};

	Parms.CloudAltitude = CloudAltitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetCombatGraphHistoryLength
// (Exec, Native, Public)
// Parameters:
// int32                                   Seconds                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetCombatGraphHistoryLength(int32 Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetCombatGraphHistoryLength");

	Params::FortCheatManager_SetCombatGraphHistoryLength Parms{};

	Parms.Seconds = Seconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetCullValues
// (Final, Exec, Native, Public)
// Parameters:
// float                                   DefaultCullObjectSize                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DefaultCullDistance                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinCullObjectSize                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinCullDistance                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxCullObjectSize                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxCullDistance                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetCullValues(float DefaultCullObjectSize, float DefaultCullDistance, float MinCullObjectSize, float MinCullDistance, float MaxCullObjectSize, float MaxCullDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetCullValues");

	Params::FortCheatManager_SetCullValues Parms{};

	Parms.DefaultCullObjectSize = DefaultCullObjectSize;
	Parms.DefaultCullDistance = DefaultCullDistance;
	Parms.MinCullObjectSize = MinCullObjectSize;
	Parms.MinCullDistance = MinCullDistance;
	Parms.MaxCullObjectSize = MaxCullObjectSize;
	Parms.MaxCullDistance = MaxCullDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetCurrentEncounterToDebug
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   EncounterIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetCurrentEncounterToDebug(int32 EncounterIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetCurrentEncounterToDebug");

	Params::FortCheatManager_SetCurrentEncounterToDebug Parms{};

	Parms.EncounterIndex = EncounterIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetEncounterDirections
// (Final, Exec, Native, Public)
// Parameters:
// TArray<EFortEncounterDirection>         Directions                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortCheatManager::SetEncounterDirections(const TArray<EFortEncounterDirection>& Directions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetEncounterDirections");

	Params::FortCheatManager_SetEncounterDirections Parms{};

	Parms.Directions = std::move(Directions);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetEncounterGraphsHistoryLength
// (Exec, Native, Public)
// Parameters:
// int32                                   Seconds                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetEncounterGraphsHistoryLength(int32 Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetEncounterGraphsHistoryLength");

	Params::FortCheatManager_SetEncounterGraphsHistoryLength Parms{};

	Parms.Seconds = Seconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetEncounterSimulatedNumberOfPlayers
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   NumPlayers                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetEncounterSimulatedNumberOfPlayers(int32 NumPlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetEncounterSimulatedNumberOfPlayers");

	Params::FortCheatManager_SetEncounterSimulatedNumberOfPlayers Parms{};

	Parms.NumPlayers = NumPlayers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetEncounterSpawnPointsCap
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   SpawnPointsCap                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetEncounterSpawnPointsCap(int32 SpawnPointsCap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetEncounterSpawnPointsCap");

	Params::FortCheatManager_SetEncounterSpawnPointsCap Parms{};

	Parms.SpawnPointsCap = SpawnPointsCap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetEncounterSpawnPointsCurve
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           CurveName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetEncounterSpawnPointsCurve(const class FString& CurveName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetEncounterSpawnPointsCurve");

	Params::FortCheatManager_SetEncounterSpawnPointsCurve Parms{};

	Parms.CurveName = std::move(CurveName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetEncounterTopUtilityPercentages
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           UtilitiesAndPercentages                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetEncounterTopUtilityPercentages(const class FString& UtilitiesAndPercentages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetEncounterTopUtilityPercentages");

	Params::FortCheatManager_SetEncounterTopUtilityPercentages Parms{};

	Parms.UtilitiesAndPercentages = std::move(UtilitiesAndPercentages);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetGameDifficultyOverride
// (Final, Exec, Native, Public)
// Parameters:
// float                                   GameDifficultyOverrideValue                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetGameDifficultyOverride(float GameDifficultyOverrideValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetGameDifficultyOverride");

	Params::FortCheatManager_SetGameDifficultyOverride Parms{};

	Parms.GameDifficultyOverrideValue = GameDifficultyOverrideValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetGameStat
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           StatName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetGameStat(const class FString& StatName, int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetGameStat");

	Params::FortCheatManager_SetGameStat Parms{};

	Parms.StatName = std::move(StatName);
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetGlobalWind
// (Final, Exec, Native, Public)
// Parameters:
// float                                   Magnitude                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HeadingDegrees                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetGlobalWind(float Magnitude, float HeadingDegrees)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetGlobalWind");

	Params::FortCheatManager_SetGlobalWind Parms{};

	Parms.Magnitude = Magnitude;
	Parms.HeadingDegrees = HeadingDegrees;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetHealthPercent
// (Final, Exec, Native, Public)
// Parameters:
// float                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetHealthPercent(float Percent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetHealthPercent");

	Params::FortCheatManager_SetHealthPercent Parms{};

	Parms.Percent = Percent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetHeroClass
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           NewHeroName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetHeroClass(const class FString& NewHeroName, int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetHeroClass");

	Params::FortCheatManager_SetHeroClass Parms{};

	Parms.NewHeroName = std::move(NewHeroName);
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetHeroLevel
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetHeroLevel(int32 Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetHeroLevel");

	Params::FortCheatManager_SetHeroLevel Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetHordePlotExpansionSize
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   XSize                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   YSize                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ZSize                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetHordePlotExpansionSize(int32 XSize, int32 YSize, int32 ZSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetHordePlotExpansionSize");

	Params::FortCheatManager_SetHordePlotExpansionSize Parms{};

	Parms.XSize = XSize;
	Parms.YSize = YSize;
	Parms.ZSize = ZSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetInputPresetName
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           PresetName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetInputPresetName(const class FString& PresetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetInputPresetName");

	Params::FortCheatManager_SetInputPresetName Parms{};

	Parms.PresetName = std::move(PresetName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetInteractExtent
// (Final, Exec, Native, Public)
// Parameters:
// float                                   Extent                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetInteractExtent(float Extent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetInteractExtent");

	Params::FortCheatManager_SetInteractExtent Parms{};

	Parms.Extent = Extent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetInteractionDistances
// (Final, Exec, Native, Public)
// Parameters:
// float                                   InteractionDistance                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InteractionHighlightDistance                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetInteractionDistances(float InteractionDistance, float InteractionHighlightDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetInteractionDistances");

	Params::FortCheatManager_SetInteractionDistances Parms{};

	Parms.InteractionDistance = InteractionDistance;
	Parms.InteractionHighlightDistance = InteractionHighlightDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetJumpStaminaCost
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             ModeName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetJumpStaminaCost(class FName ModeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetJumpStaminaCost");

	Params::FortCheatManager_SetJumpStaminaCost Parms{};

	Parms.ModeName = ModeName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetMaxClouds
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   MaxClouds                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetMaxClouds(int32 MaxClouds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetMaxClouds");

	Params::FortCheatManager_SetMaxClouds Parms{};

	Parms.MaxClouds = MaxClouds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetPvPRoundTime
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   NumSeconds                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CriticalThreshold                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetPvPRoundTime(int32 NumSeconds, int32 CriticalThreshold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetPvPRoundTime");

	Params::FortCheatManager_SetPvPRoundTime Parms{};

	Parms.NumSeconds = NumSeconds;
	Parms.CriticalThreshold = CriticalThreshold;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetPvPStalemateTime
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   NumSeconds                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetPvPStalemateTime(int32 NumSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetPvPStalemateTime");

	Params::FortCheatManager_SetPvPStalemateTime Parms{};

	Parms.NumSeconds = NumSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetReplStat
// (Final, Exec, Native, Public)
// Parameters:
// EFortReplicatedStat                     Stat                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetReplStat(EFortReplicatedStat Stat, int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetReplStat");

	Params::FortCheatManager_SetReplStat Parms{};

	Parms.Stat = Stat;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetRespawnTimerOverride
// (Final, Exec, Native, Public)
// Parameters:
// float                                   TimeUntilRespawn                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetRespawnTimerOverride(float TimeUntilRespawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetRespawnTimerOverride");

	Params::FortCheatManager_SetRespawnTimerOverride Parms{};

	Parms.TimeUntilRespawn = TimeUntilRespawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetSafeZoneLocationToPlayer
// (Final, Exec, Native, Public)

void UFortCheatManager::SetSafeZoneLocationToPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetSafeZoneLocationToPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetSafeZoneRadius
// (Final, Exec, Native, Public)
// Parameters:
// float                                   NewRadius                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetSafeZoneRadius(float NewRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetSafeZoneRadius");

	Params::FortCheatManager_SetSafeZoneRadius Parms{};

	Parms.NewRadius = NewRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetWindPixelDebugExtent
// (Final, Exec, Native, Public)
// Parameters:
// float                                   ExtentInUnrealUnits                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetWindPixelDebugExtent(float ExtentInUnrealUnits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetWindPixelDebugExtent");

	Params::FortCheatManager_SetWindPixelDebugExtent Parms{};

	Parms.ExtentInUnrealUnits = ExtentInUnrealUnits;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetWorldDaysElapsed
// (Final, Exec, Native, Public)
// Parameters:
// float                                   Days                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetWorldDaysElapsed(float Days)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetWorldDaysElapsed");

	Params::FortCheatManager_SetWorldDaysElapsed Parms{};

	Parms.Days = Days;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SetWorldLevel
// (Final, Exec, Native, Public)
// Parameters:
// float                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SetWorldLevel(float Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SetWorldLevel");

	Params::FortCheatManager_SetWorldLevel Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ShowActiveGameplayModifiers
// (Final, Exec, Native, Public)

void UFortCheatManager::ShowActiveGameplayModifiers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ShowActiveGameplayModifiers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ShowAllMinimapIcons
// (Final, Exec, Native, Public)

void UFortCheatManager::ShowAllMinimapIcons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ShowAllMinimapIcons");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ShowGameplayCaptureUI
// (Final, Exec, Native, Public)

void UFortCheatManager::ShowGameplayCaptureUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ShowGameplayCaptureUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ShowHighlightSummary
// (Final, Exec, Native, Public)

void UFortCheatManager::ShowHighlightSummary()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ShowHighlightSummary");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ShowHUDElement
// (Final, Exec, Native, Public)
// Parameters:
// struct FGameplayTag                     HUDElementTag                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::ShowHUDElement(const struct FGameplayTag& HUDElementTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ShowHUDElement");

	Params::FortCheatManager_ShowHUDElement Parms{};

	Parms.HUDElementTag = std::move(HUDElementTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SimulateLoot
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             TierGroup                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LootTier                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LootLevel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SimulateLoot(const class FName TierGroup, int32 LootTier, int32 LootLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SimulateLoot");

	Params::FortCheatManager_SimulateLoot Parms{};

	Parms.TierGroup = TierGroup;
	Parms.LootTier = LootTier;
	Parms.LootLevel = LootLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SimulateLootDrops
// (Final, Exec, Native, Public)

void UFortCheatManager::SimulateLootDrops()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SimulateLootDrops");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SpawnAIGroup
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           SpawnGroupName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SpawnAIGroup(const class FString& SpawnGroupName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SpawnAIGroup");

	Params::FortCheatManager_SpawnAIGroup Parms{};

	Parms.SpawnGroupName = std::move(SpawnGroupName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SpawnAIGroupFromExternalSpawner
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           SpawnGroupName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SpawnAIGroupFromExternalSpawner(const class FString& SpawnGroupName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SpawnAIGroupFromExternalSpawner");

	Params::FortCheatManager_SpawnAIGroupFromExternalSpawner Parms{};

	Parms.SpawnGroupName = std::move(SpawnGroupName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SpawnAIGroupWithUpgrade
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           SpawnGroupName                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           UpgradeName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SpawnAIGroupWithUpgrade(const class FString& SpawnGroupName, const class FString& UpgradeName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SpawnAIGroupWithUpgrade");

	Params::FortCheatManager_SpawnAIGroupWithUpgrade Parms{};

	Parms.SpawnGroupName = std::move(SpawnGroupName);
	Parms.UpgradeName = std::move(UpgradeName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SpawnContainer
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ContainerClassName                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::SpawnContainer(const class FString& ContainerClassName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SpawnContainer");

	Params::FortCheatManager_SpawnContainer Parms{};

	Parms.ContainerClassName = std::move(ContainerClassName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SpawnPawn
// (Exec, Native, Public)
// Parameters:
// class FString                           PawnType                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPawn* UFortCheatManager::SpawnPawn(const class FString& PawnType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SpawnPawn");

	Params::FortCheatManager_SpawnPawn Parms{};

	Parms.PawnType = std::move(PawnType);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCheatManager.StartLiveStreamingWindow
// (Final, Exec, Native, Public)
// Parameters:
// float                                   Seconds                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::StartLiveStreamingWindow(float Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "StartLiveStreamingWindow");

	Params::FortCheatManager_StartLiveStreamingWindow Parms{};

	Parms.Seconds = Seconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.StopDummyDebugEncounter
// (Final, Exec, Native, Public)

void UFortCheatManager::StopDummyDebugEncounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "StopDummyDebugEncounter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.StopHighlights
// (Final, Exec, Native, Public)

void UFortCheatManager::StopHighlights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "StopHighlights");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SwapPickerThumbstick
// (Final, Exec, Native, Public)

void UFortCheatManager::SwapPickerThumbstick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SwapPickerThumbstick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.SwitchTeam
// (Final, Exec, Native, Public)

void UFortCheatManager::SwitchTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "SwitchTeam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TeleportToActor
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ClassOrInstanceName                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::TeleportToActor(const class FString& ClassOrInstanceName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TeleportToActor");

	Params::FortCheatManager_TeleportToActor Parms{};

	Parms.ClassOrInstanceName = std::move(ClassOrInstanceName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TeleportToLocation
// (Final, Exec, Native, Public)
// Parameters:
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Z                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::TeleportToLocation(float X, float Y, float Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TeleportToLocation");

	Params::FortCheatManager_TeleportToLocation Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TeleportToMissionActor
// (Final, Exec, Native, Public)

void UFortCheatManager::TeleportToMissionActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TeleportToMissionActor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TestBanhammer
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           InUserId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::TestBanhammer(const class FString& InUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TestBanhammer");

	Params::FortCheatManager_TestBanhammer Parms{};

	Parms.InUserId = std::move(InUserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TestBehaviorScore
// (Final, Exec, Native, Public)

void UFortCheatManager::TestBehaviorScore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TestBehaviorScore");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TestCancelLobby
// (Final, Exec, Native, Public)

void UFortCheatManager::TestCancelLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TestCancelLobby");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TestChangePartyPrivacy
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bPrivate                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLeaderFriendsOnly                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLeaderInvitesOnly                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::TestChangePartyPrivacy(bool bPrivate, bool bLeaderFriendsOnly, bool bLeaderInvitesOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TestChangePartyPrivacy");

	Params::FortCheatManager_TestChangePartyPrivacy Parms{};

	Parms.bPrivate = bPrivate;
	Parms.bLeaderFriendsOnly = bLeaderFriendsOnly;
	Parms.bLeaderInvitesOnly = bLeaderInvitesOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TestChangePartySize
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   NewSize                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::TestChangePartySize(int32 NewSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TestChangePartySize");

	Params::FortCheatManager_TestChangePartySize Parms{};

	Parms.NewSize = NewSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TestCheckBansAtMatchStart
// (Final, Exec, Native, Public)

void UFortCheatManager::TestCheckBansAtMatchStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TestCheckBansAtMatchStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TestDisconnect
// (Final, Exec, Native, Public)

void UFortCheatManager::TestDisconnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TestDisconnect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TestEncryptAPI
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           InUserId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InSessionId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::TestEncryptAPI(const class FString& InUserId, const class FString& InSessionId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TestEncryptAPI");

	Params::FortCheatManager_TestEncryptAPI Parms{};

	Parms.InUserId = std::move(InUserId);
	Parms.InSessionId = std::move(InSessionId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TestJoin
// (Final, Exec, Native, Public)

void UFortCheatManager::TestJoin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TestJoin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TestKnockback
// (Final, Exec, Native, Public)
// Parameters:
// float                                   KnockbackMagnitude                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   KnockbackZAngle                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::TestKnockback(float KnockbackMagnitude, float KnockbackZAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TestKnockback");

	Params::FortCheatManager_TestKnockback Parms{};

	Parms.KnockbackMagnitude = KnockbackMagnitude;
	Parms.KnockbackZAngle = KnockbackZAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TestLeaveGame
// (Final, Exec, Native, Public)

void UFortCheatManager::TestLeaveGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TestLeaveGame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TestOutpostUI
// (Final, Exec, Native, Public)

void UFortCheatManager::TestOutpostUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TestOutpostUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TestSafeZoneLocations
// (Final, Exec, Native, Public)
// Parameters:
// int32                                   NumPasses                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PhaseToDraw                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::TestSafeZoneLocations(int32 NumPasses, int32 PhaseToDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TestSafeZoneLocations");

	Params::FortCheatManager_TestSafeZoneLocations Parms{};

	Parms.NumPasses = NumPasses;
	Parms.PhaseToDraw = PhaseToDraw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TestSetOutpostDefenseActive
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::TestSetOutpostDefenseActive(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TestSetOutpostDefenseActive");

	Params::FortCheatManager_TestSetOutpostDefenseActive Parms{};

	Parms.bActive = bActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TestStun
// (Final, Exec, Native, Public)
// Parameters:
// float                                   StunStime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::TestStun(float StunStime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TestStun");

	Params::FortCheatManager_TestStun Parms{};

	Parms.StunStime = StunStime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TestUpgradeOutpostItem
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           ItemTemplateId                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::TestUpgradeOutpostItem(const class FString& ItemTemplateId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TestUpgradeOutpostItem");

	Params::FortCheatManager_TestUpgradeOutpostItem Parms{};

	Parms.ItemTemplateId = std::move(ItemTemplateId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleAIAnim
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleAIAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleAIAnim");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleAIDespawning
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleAIDespawning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleAIDespawning");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleAIDirectorLogging
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleAIDirectorLogging()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleAIDirectorLogging");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleAISpawnCap
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleAISpawnCap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleAISpawnCap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleAISpawning
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleAISpawning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleAISpawning");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleAutoSlotting
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleAutoSlotting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleAutoSlotting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleBuildingActorsTransparency
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleBuildingActorsTransparency()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleBuildingActorsTransparency");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleBuildingHighlights
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleBuildingHighlights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleBuildingHighlights");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleCharacterBackpack
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleCharacterBackpack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleCharacterBackpack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleCharacterHeadAccessories
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleCharacterHeadAccessories()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleCharacterHeadAccessories");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleCombatGraph
// (Exec, Native, Public)

void UFortCheatManager::ToggleCombatGraph()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleCombatGraph");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleContextMenus
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleContextMenus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleContextMenus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleDebugHUDObjectiveHeight
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleDebugHUDObjectiveHeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleDebugHUDObjectiveHeight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleDrawRunVariationDebug
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleDrawRunVariationDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleDrawRunVariationDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleDrawTargetSelectionDebug
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleDrawTargetSelectionDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleDrawTargetSelectionDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleDrawTargetSelectionDebugByClass
// (Final, Exec, Native, Public)
// Parameters:
// TSubclassOf<class AActor>               TargetSelectionDebugSourceClass                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::ToggleDrawTargetSelectionDebugByClass(TSubclassOf<class AActor> TargetSelectionDebugSourceClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleDrawTargetSelectionDebugByClass");

	Params::FortCheatManager_ToggleDrawTargetSelectionDebugByClass Parms{};

	Parms.TargetSelectionDebugSourceClass = TargetSelectionDebugSourceClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleDrawTurnTransitionDebug
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleDrawTurnTransitionDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleDrawTurnTransitionDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleEncounterEQSDebug
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleEncounterEQSDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleEncounterEQSDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleEncounterModifierTags
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleEncounterModifierTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleEncounterModifierTags");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleExplorationBadgeView
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleExplorationBadgeView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleExplorationBadgeView");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleExplorationLogging
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleExplorationLogging()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleExplorationLogging");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleFactorGraph
// (Exec, Native, Public)

void UFortCheatManager::ToggleFactorGraph()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleFactorGraph");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleFloorsOnMiniMap
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleFloorsOnMiniMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleFloorsOnMiniMap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleForceUsingGamepad
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleForceUsingGamepad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleForceUsingGamepad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleFreezeAILOD
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleFreezeAILOD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleFreezeAILOD");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleGameDifficultyHUD
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleGameDifficultyHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleGameDifficultyHUD");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleHeroVisibility
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleHeroVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleHeroVisibility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleIndestructibleKeep
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleIndestructibleKeep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleIndestructibleKeep");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleInfiniteAmmo
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleInfiniteAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleInfiniteAmmo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleInfiniteDurability
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleInfiniteDurability()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleInfiniteDurability");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleInfiniteStamina
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleInfiniteStamina()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleInfiniteStamina");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleIntensityGraph
// (Exec, Native, Public)

void UFortCheatManager::ToggleIntensityGraph()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleIntensityGraph");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleIntensityHUD
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleIntensityHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleIntensityHUD");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleInteractTrace
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleInteractTrace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleInteractTrace");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleInvincibleCornerstones
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleInvincibleCornerstones()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleInvincibleCornerstones");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleInWorldScoreNumbers
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleInWorldScoreNumbers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleInWorldScoreNumbers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleItemIdsOnCards
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleItemIdsOnCards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleItemIdsOnCards");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleLogCharacterCustomization
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleLogCharacterCustomization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleLogCharacterCustomization");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleMaxAIHUD
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleMaxAIHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleMaxAIHUD");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleNoCoolDown
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleNoCoolDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleNoCoolDown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TogglePickers
// (Final, Exec, Native, Public)

void UFortCheatManager::TogglePickers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TogglePickers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TogglePickupSpline
// (Final, Exec, Native, Public)

void UFortCheatManager::TogglePickupSpline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TogglePickupSpline");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TogglePIDContributionsGraph
// (Exec, Native, Public)

void UFortCheatManager::TogglePIDContributionsGraph()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TogglePIDContributionsGraph");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TogglePIDValuesGraph
// (Exec, Native, Public)

void UFortCheatManager::TogglePIDValuesGraph()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TogglePIDValuesGraph");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TogglePlayerNames
// (Exec, Native, Public)

void UFortCheatManager::TogglePlayerNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TogglePlayerNames");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleSecondaryMissionHeaders
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleSecondaryMissionHeaders()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleSecondaryMissionHeaders");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleShotLogging
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleShotLogging()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleShotLogging");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleSpawnPointsHUD
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleSpawnPointsHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleSpawnPointsHUD");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleTreeVisibility
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleTreeVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleTreeVisibility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleUnlimitedAIHealth
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleUnlimitedAIHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleUnlimitedAIHealth");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleUnlimitedHealth
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleUnlimitedHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleUnlimitedHealth");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleUseNewItemCards
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleUseNewItemCards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleUseNewItemCards");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleUtilitiesGraph
// (Exec, Native, Public)

void UFortCheatManager::ToggleUtilitiesGraph()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleUtilitiesGraph");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleVoiceDebug
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleVoiceDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleVoiceDebug");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleWalkOnWalls
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleWalkOnWalls()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleWalkOnWalls");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleWindDebugDeltaBoundsDisplay
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleWindDebugDeltaBoundsDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleWindDebugDeltaBoundsDisplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleWindDebugDisplay
// (Final, Exec, Native, Public)
// Parameters:
// float                                   NewRefreshRate                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::ToggleWindDebugDisplay(float NewRefreshRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleWindDebugDisplay");

	Params::FortCheatManager_ToggleWindDebugDisplay Parms{};

	Parms.NewRefreshRate = NewRefreshRate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleWindDebugPixelDisplay
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleWindDebugPixelDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleWindDebugPixelDisplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ToggleWindDebugVolumeDisplay
// (Final, Exec, Native, Public)

void UFortCheatManager::ToggleWindDebugVolumeDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ToggleWindDebugVolumeDisplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TriggerOutOfStaminaFeedback
// (Final, Exec, Native, Public)

void UFortCheatManager::TriggerOutOfStaminaFeedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TriggerOutOfStaminaFeedback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TutorialAddHidden
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             Hidden                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::TutorialAddHidden(class FName Hidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TutorialAddHidden");

	Params::FortCheatManager_TutorialAddHidden Parms{};

	Parms.Hidden = Hidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TutorialAddHighlight
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             Highlight                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::TutorialAddHighlight(class FName Highlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TutorialAddHighlight");

	Params::FortCheatManager_TutorialAddHighlight Parms{};

	Parms.Highlight = Highlight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TutorialListAll
// (Final, Exec, Native, Public)

void UFortCheatManager::TutorialListAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TutorialListAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TutorialListHidden
// (Final, Exec, Native, Public)

void UFortCheatManager::TutorialListHidden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TutorialListHidden");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TutorialListHighlights
// (Final, Exec, Native, Public)

void UFortCheatManager::TutorialListHighlights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TutorialListHighlights");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TutorialRemoveHidden
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             Hidden                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::TutorialRemoveHidden(class FName Hidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TutorialRemoveHidden");

	Params::FortCheatManager_TutorialRemoveHidden Parms{};

	Parms.Hidden = Hidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.TutorialRemoveHighlight
// (Final, Exec, Native, Public)
// Parameters:
// class FName                             Highlight                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::TutorialRemoveHighlight(class FName Highlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "TutorialRemoveHighlight");

	Params::FortCheatManager_TutorialRemoveHighlight Parms{};

	Parms.Highlight = Highlight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.UnforceAILODs
// (Final, Exec, Native, Public)

void UFortCheatManager::UnforceAILODs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "UnforceAILODs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.UnlockAllDefenders
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    InUnlockAllDefenders                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCheatManager::UnlockAllDefenders(bool InUnlockAllDefenders)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "UnlockAllDefenders");

	Params::FortCheatManager_UnlockAllDefenders Parms{};

	Parms.InUnlockAllDefenders = InUnlockAllDefenders;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.UnlockAllZones
// (Final, Exec, Native, Public)

void UFortCheatManager::UnlockAllZones()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "UnlockAllZones");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ViewStuck
// (Final, Exec, Native, Public)

void UFortCheatManager::ViewStuck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ViewStuck");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.WannaGun
// (Final, Exec, Native, Public)

void UFortCheatManager::WannaGun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "WannaGun");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.WriteLootReport
// (Final, Exec, Native, Public)

void UFortCheatManager::WriteLootReport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "WriteLootReport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.GetWindPixelDebugExtent
// (Final, Exec, Native, Public, Const)

void UFortCheatManager::GetWindPixelDebugExtent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "GetWindPixelDebugExtent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ListConsumables
// (Final, Exec, Native, Public, Const)

void UFortCheatManager::ListConsumables() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ListConsumables");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ListGadgets
// (Final, Exec, Native, Public, Const)

void UFortCheatManager::ListGadgets() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ListGadgets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ListTraps
// (Final, Exec, Native, Public, Const)

void UFortCheatManager::ListTraps() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ListTraps");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCheatManager.ListWeapons
// (Final, Exec, Native, Public, Const)

void UFortCheatManager::ListWeapons() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCheatManager", "ListWeapons");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortIndicator.OnParentActorEndPlay
// (Final, Native, Protected)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EEndPlayReason                          EndPlayReason                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortIndicator::OnParentActorEndPlay(class AActor* Actor, EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortIndicator", "OnParentActorEndPlay");

	Params::FortIndicator_OnParentActorEndPlay Parms{};

	Parms.Actor = Actor;
	Parms.EndPlayReason = EndPlayReason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTeamInfo.OnSpottedActorDied
// (Final, Native, Public, HasDefaults)
// Parameters:
// class AActor*                           DamagedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          HitLocation                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              FHitComponent                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Momentum                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTeamInfo::OnSpottedActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamInfo", "OnSpottedActorDied");

	Params::FortTeamInfo_OnSpottedActorDied Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.HitLocation = std::move(HitLocation);
	Parms.FHitComponent = FHitComponent;
	Parms.BoneName = BoneName;
	Parms.Momentum = std::move(Momentum);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTeamInfo.GetTeamExperience
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortTeamInfo::GetTeamExperience() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamInfo", "GetTeamExperience");

	Params::FortTeamInfo_GetTeamExperience Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTeamInfo.GetTeamLevel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortTeamInfo::GetTeamLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamInfo", "GetTeamLevel");

	Params::FortTeamInfo_GetTeamLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AthenaBattleBusItemDefinition.GetBusPrefabClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class ABattleBusCosmeticInstanceBase>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class ABattleBusCosmeticInstanceBase> UAthenaBattleBusItemDefinition::GetBusPrefabClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBattleBusItemDefinition", "GetBusPrefabClass");

	Params::AthenaBattleBusItemDefinition_GetBusPrefabClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AthenaBattleBusItemDefinition.GetFlightLoopingMusic
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USoundBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USoundBase* UAthenaBattleBusItemDefinition::GetFlightLoopingMusic() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBattleBusItemDefinition", "GetFlightLoopingMusic");

	Params::AthenaBattleBusItemDefinition_GetFlightLoopingMusic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AthenaBattleBusItemDefinition.GetFlightLoopingSound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USoundBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USoundBase* UAthenaBattleBusItemDefinition::GetFlightLoopingSound() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBattleBusItemDefinition", "GetFlightLoopingSound");

	Params::AthenaBattleBusItemDefinition_GetFlightLoopingSound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AthenaBattleBusItemDefinition.GetIgnitionSound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USoundBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USoundBase* UAthenaBattleBusItemDefinition::GetIgnitionSound() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBattleBusItemDefinition", "GetIgnitionSound");

	Params::AthenaBattleBusItemDefinition_GetIgnitionSound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AthenaBattleBusItemDefinition.GetLobbyLoopingMusic
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USoundBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USoundBase* UAthenaBattleBusItemDefinition::GetLobbyLoopingMusic() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBattleBusItemDefinition", "GetLobbyLoopingMusic");

	Params::AthenaBattleBusItemDefinition_GetLobbyLoopingMusic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AthenaBattleBusItemDefinition.GetLobbyLoopingSound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USoundBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USoundBase* UAthenaBattleBusItemDefinition::GetLobbyLoopingSound() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaBattleBusItemDefinition", "GetLobbyLoopingSound");

	Params::AthenaBattleBusItemDefinition_GetLobbyLoopingSound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTeamInfoPvPBaseDestruction.GetTeamFOBCores
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class ABuildingFOBCoreActor*>    OutFOBCores                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortTeamInfoPvPBaseDestruction::GetTeamFOBCores(TArray<class ABuildingFOBCoreActor*>* OutFOBCores)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamInfoPvPBaseDestruction", "GetTeamFOBCores");

	Params::FortTeamInfoPvPBaseDestruction_GetTeamFOBCores Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFOBCores != nullptr)
		*OutFOBCores = std::move(Parms.OutFOBCores);
}


// Function FortniteGame.FortTeamInfoPvPBaseDestruction.GetTeamFOBCoresAndSpawnTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class ABuildingFOBCoreActor*>    OutFOBCores                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FGameplayTagContainer>    OutFOBSpawnTags                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortTeamInfoPvPBaseDestruction::GetTeamFOBCoresAndSpawnTags(TArray<class ABuildingFOBCoreActor*>* OutFOBCores, TArray<struct FGameplayTagContainer>* OutFOBSpawnTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamInfoPvPBaseDestruction", "GetTeamFOBCoresAndSpawnTags");

	Params::FortTeamInfoPvPBaseDestruction_GetTeamFOBCoresAndSpawnTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFOBCores != nullptr)
		*OutFOBCores = std::move(Parms.OutFOBCores);

	if (OutFOBSpawnTags != nullptr)
		*OutFOBSpawnTags = std::move(Parms.OutFOBSpawnTags);
}


// Function FortniteGame.FortTeamInfoPvPBaseDestruction.OnRep_AllFOBCoresLoaded
// (Final, Native, Private)

void AFortTeamInfoPvPBaseDestruction::OnRep_AllFOBCoresLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamInfoPvPBaseDestruction", "OnRep_AllFOBCoresLoaded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTeamInfoPvPBaseDestruction.OnRep_TeamExperience
// (Final, Native, Private)

void AFortTeamInfoPvPBaseDestruction::OnRep_TeamExperience()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamInfoPvPBaseDestruction", "OnRep_TeamExperience");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTeamInfoPvPBaseDestruction.OnRep_TeamFOBCoreBuildingActors
// (Final, Native, Private)

void AFortTeamInfoPvPBaseDestruction::OnRep_TeamFOBCoreBuildingActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamInfoPvPBaseDestruction", "OnRep_TeamFOBCoreBuildingActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTeamInfoPvPBaseDestruction.OnRep_TeamLevel
// (Final, Native, Private)

void AFortTeamInfoPvPBaseDestruction::OnRep_TeamLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamInfoPvPBaseDestruction", "OnRep_TeamLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTeamInfoPvPBaseDestruction.GetStrategicBuildingActor
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTeamStrategicBuildingHandle     Handle                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class AStrategicBuildingActor*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AStrategicBuildingActor* AFortTeamInfoPvPBaseDestruction::GetStrategicBuildingActor(const struct FTeamStrategicBuildingHandle& Handle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamInfoPvPBaseDestruction", "GetStrategicBuildingActor");

	Params::FortTeamInfoPvPBaseDestruction_GetStrategicBuildingActor Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTeamInfoPvPBaseDestruction.GetTeamCornerstone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPvPBaseCornerstone*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPvPBaseCornerstone* AFortTeamInfoPvPBaseDestruction::GetTeamCornerstone() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTeamInfoPvPBaseDestruction", "GetTeamCornerstone");

	Params::FortTeamInfoPvPBaseDestruction_GetTeamCornerstone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMontageItemDefinitionBase.PreviewInPIE
// (Final, Native, Protected)

void UFortMontageItemDefinitionBase::PreviewInPIE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMontageItemDefinitionBase", "PreviewInPIE");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortEventItemDefinitionBase.CreateCalendarPayload
// (Final, Exec, Native, Public)

void UFortEventItemDefinitionBase::CreateCalendarPayload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortEventItemDefinitionBase", "CreateCalendarPayload");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuestCategory.HasUnseenQuests
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestCategory::HasUnseenQuests() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestCategory", "HasUnseenQuests");

	Params::FortQuestCategory_HasUnseenQuests Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AthenaEmojiItemDefinition.ConfigureParticleSystem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UParticleSystemComponent*         ParticleSystem                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAthenaEmojiItemDefinition::ConfigureParticleSystem(class UParticleSystemComponent* ParticleSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEmojiItemDefinition", "ConfigureParticleSystem");

	Params::AthenaEmojiItemDefinition_ConfigureParticleSystem Parms{};

	Parms.ParticleSystem = ParticleSystem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AthenaEmojiItemDefinition.GetMaterialInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstance*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstance* UAthenaEmojiItemDefinition::GetMaterialInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaEmojiItemDefinition", "GetMaterialInstance");

	Params::AthenaEmojiItemDefinition_GetMaterialInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortClientAnnouncement.CancelClientAnnouncement
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFortClientAnnouncement::CancelClientAnnouncement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement", "CancelClientAnnouncement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncement.GetPriority
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortClientAnnouncement::GetPriority()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement", "GetPriority");

	Params::FortClientAnnouncement_GetPriority Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortClientAnnouncement.OnClientAnnouncementStart
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AFortClientAnnouncement::OnClientAnnouncementStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement", "OnClientAnnouncementStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortClientAnnouncement.OnClientAnnouncementStop
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AFortClientAnnouncement::OnClientAnnouncementStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement", "OnClientAnnouncementStop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortClientAnnouncement.StopClientAnnouncement
// (BlueprintCosmetic, Native, Public, BlueprintCallable)

void AFortClientAnnouncement::StopClientAnnouncement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement", "StopClientAnnouncement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuestObjectiveInfo.DisplayDynamicQuestUpdate
// (Final, Native, Private)

void UFortQuestObjectiveInfo::DisplayDynamicQuestUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestObjectiveInfo", "DisplayDynamicQuestUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuestObjectiveInfo.GetOwningQuest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItem*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortQuestItem* UFortQuestObjectiveInfo::GetOwningQuest() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestObjectiveInfo", "GetOwningQuest");

	Params::FortQuestObjectiveInfo_GetOwningQuest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestObjectiveInfo.HasCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestObjectiveInfo::HasCompleted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestObjectiveInfo", "HasCompleted");

	Params::FortQuestObjectiveInfo_HasCompleted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestObjectiveInfo.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestObjectiveInfo::IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestObjectiveInfo", "IsActive");

	Params::FortQuestObjectiveInfo_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestObjectiveInfo.IsInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestObjectiveInfo::IsInProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestObjectiveInfo", "IsInProgress");

	Params::FortQuestObjectiveInfo_IsInProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestObjectiveInfo.IsVisibleToUser
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestObjectiveInfo::IsVisibleToUser() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestObjectiveInfo", "IsVisibleToUser");

	Params::FortQuestObjectiveInfo_IsVisibleToUser Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAccountItem.MarkItemAsSeenBP
// (Final, Native, Public, BlueprintCallable)

void UFortAccountItem::MarkItemAsSeenBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountItem", "MarkItemAsSeenBP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAccountItem.HasBeenSeenLocally
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAccountItem::HasBeenSeenLocally() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountItem", "HasBeenSeenLocally");

	Params::FortAccountItem_HasBeenSeenLocally Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAccountItem.IsFavorite
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAccountItem::IsFavorite() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountItem", "IsFavorite");

	Params::FortAccountItem_IsFavorite Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortClientAnnouncement_Conversation.CurrentSentenceAudioFinished
// (Final, Native, Private)

void AFortClientAnnouncement_Conversation::CurrentSentenceAudioFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_Conversation", "CurrentSentenceAudioFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.AddEditorOnlyInstanceGameplayTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            NewTags                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ABuildingActor::AddEditorOnlyInstanceGameplayTags(const struct FGameplayTagContainer& NewTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "AddEditorOnlyInstanceGameplayTags");

	Params::BuildingActor_AddEditorOnlyInstanceGameplayTags Parms{};

	Parms.NewTags = std::move(NewTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.BlueprintOnBeginInteract
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ABuildingActor::BlueprintOnBeginInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "BlueprintOnBeginInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingActor.BlueprintOnInteract
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AFortPawn*                        InteractingPawn                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingActor::BlueprintOnInteract(const class AFortPawn* InteractingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "BlueprintOnInteract");

	Params::BuildingActor_BlueprintOnInteract Parms{};

	Parms.InteractingPawn = InteractingPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.BuildingActor.BlueprintOnLocalInteract
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  InteractingPawn                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingActor::BlueprintOnLocalInteract(class AFortPlayerPawn* InteractingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "BlueprintOnLocalInteract");

	Params::BuildingActor_BlueprintOnLocalInteract Parms{};

	Parms.InteractingPawn = InteractingPawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingActor.CustomStateChanged
// (Event, Public, BlueprintEvent)

void ABuildingActor::CustomStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "CustomStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingActor.ForceBuildingHealth
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewHealth                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingActor::ForceBuildingHealth(float NewHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "ForceBuildingHealth");

	Params::BuildingActor_ForceBuildingHealth Parms{};

	Parms.NewHealth = NewHealth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.GameplayCue_Damage
// (Native, Protected)
// Parameters:
// EGameplayCueEvent                       EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           Parameters                                             (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABuildingActor::GameplayCue_Damage(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "GameplayCue_Damage");

	Params::BuildingActor_GameplayCue_Damage Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.GameplayCue_Healing
// (Native, Protected)
// Parameters:
// EGameplayCueEvent                       EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           Parameters                                             (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABuildingActor::GameplayCue_Healing(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "GameplayCue_Healing");

	Params::BuildingActor_GameplayCue_Healing Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.GameplayCue_InstantDeath
// (Native, Protected)
// Parameters:
// EGameplayCueEvent                       EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           Parameters                                             (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABuildingActor::GameplayCue_InstantDeath(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "GameplayCue_InstantDeath");

	Params::BuildingActor_GameplayCue_InstantDeath Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.HandleDestroyed
// (Native, Protected)

void ABuildingActor::HandleDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "HandleDestroyed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.InitializeKismetSpawnedBuildingActor
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class ABuildingActor*                   BuildingOwner                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            SpawningController                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingActor::InitializeKismetSpawnedBuildingActor(class ABuildingActor* BuildingOwner, class AFortPlayerController* SpawningController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "InitializeKismetSpawnedBuildingActor");

	Params::BuildingActor_InitializeKismetSpawnedBuildingActor Parms{};

	Parms.BuildingOwner = BuildingOwner;
	Parms.SpawningController = SpawningController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.OnBuildingActorInitialized
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// EFortBuildingInitializationReason       InitializationReason                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortBuildingPersistentState            BuildingPersistentState                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingActor::OnBuildingActorInitialized(EFortBuildingInitializationReason InitializationReason, EFortBuildingPersistentState BuildingPersistentState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "OnBuildingActorInitialized");

	Params::BuildingActor_OnBuildingActorInitialized Parms{};

	Parms.InitializationReason = InitializationReason;
	Parms.BuildingPersistentState = BuildingPersistentState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.OnDamagePlayEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                          Momentum                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AFortPawn*                        InstigatedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     EffectContext                                          (Parm, NativeAccessSpecifierPublic)

void ABuildingActor::OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "OnDamagePlayEffects");

	Params::BuildingActor_OnDamagePlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.BuildingActor.OnDamageServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                          Momentum                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     EffectContext                                          (Parm, NativeAccessSpecifierPublic)

void ABuildingActor::OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "OnDamageServer");

	Params::BuildingActor_OnDamageServer Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.BuildingActor.OnDayPhaseChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EFortDayPhase                           CurrentDayPhase                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDayPhase                           PreviousDayPhase                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAtCreation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingActor::OnDayPhaseChanged(EFortDayPhase CurrentDayPhase, EFortDayPhase PreviousDayPhase, bool bAtCreation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "OnDayPhaseChanged");

	Params::BuildingActor_OnDayPhaseChanged Parms{};

	Parms.CurrentDayPhase = CurrentDayPhase;
	Parms.PreviousDayPhase = PreviousDayPhase;
	Parms.bAtCreation = bAtCreation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.OnDeathPlayEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                          Momentum                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AFortPawn*                        InstigatedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     EffectContext                                          (Parm, NativeAccessSpecifierPublic)

void ABuildingActor::OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "OnDeathPlayEffects");

	Params::BuildingActor_OnDeathPlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.BuildingActor.OnDeathServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                          Momentum                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     EffectContext                                          (Parm, NativeAccessSpecifierPublic)

void ABuildingActor::OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "OnDeathServer");

	Params::BuildingActor_OnDeathServer Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.BuildingActor.OnMatchStarted
// (Event, Public, BlueprintEvent)

void ABuildingActor::OnMatchStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "OnMatchStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingActor.OnRep_AbilitySystemComponent
// (Final, Native, Private)

void ABuildingActor::OnRep_AbilitySystemComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "OnRep_AbilitySystemComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.OnRep_bForceReplayRollback
// (Final, Native, Protected)

void ABuildingActor::OnRep_bForceReplayRollback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "OnRep_bForceReplayRollback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.OnRep_BuildingAttributeSet
// (Final, Native, Private)

void ABuildingActor::OnRep_BuildingAttributeSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "OnRep_BuildingAttributeSet");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.OnRep_CurrentBuildingLevel
// (Native, Protected)

void ABuildingActor::OnRep_CurrentBuildingLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "OnRep_CurrentBuildingLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.OnRep_CustomState
// (Native, Protected)

void ABuildingActor::OnRep_CustomState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "OnRep_CustomState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.OnWorldReady
// (Event, Public, BlueprintEvent)

void ABuildingActor::OnWorldReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "OnWorldReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingActor.PlacedByPlacementTool
// (Native, Event, Public, BlueprintEvent)

void ABuildingActor::PlacedByPlacementTool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "PlacedByPlacementTool");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.RemoveEditorOnlyInstanceGameplayTags
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            TagsToRemove                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ABuildingActor::RemoveEditorOnlyInstanceGameplayTags(const struct FGameplayTagContainer& TagsToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "RemoveEditorOnlyInstanceGameplayTags");

	Params::BuildingActor_RemoveEditorOnlyInstanceGameplayTags Parms{};

	Parms.TagsToRemove = std::move(TagsToRemove);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.SetCanExportNavigationObstacle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InCanExportNavigationObstacle                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingActor::SetCanExportNavigationObstacle(bool InCanExportNavigationObstacle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "SetCanExportNavigationObstacle");

	Params::BuildingActor_SetCanExportNavigationObstacle Parms{};

	Parms.InCanExportNavigationObstacle = InCanExportNavigationObstacle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.SetCustomState
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           NewState                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingActor::SetCustomState(const class FString& NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "SetCustomState");

	Params::BuildingActor_SetCustomState Parms{};

	Parms.NewState = std::move(NewState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.SetNavigationModifier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnableModifier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingActor::SetNavigationModifier(bool bEnableModifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "SetNavigationModifier");

	Params::BuildingActor_SetNavigationModifier Parms{};

	Parms.bEnableModifier = bEnableModifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.ShouldDie
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingActor::ShouldDie(float Damage, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "ShouldDie");

	Params::BuildingActor_ShouldDie Parms{};

	Parms.Damage = Damage;
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingActor.SilentDie
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void ABuildingActor::SilentDie()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "SilentDie");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingActor.BlueprintCanInteract
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AFortPawn*                        InteractingPawn                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingActor::BlueprintCanInteract(const class AFortPawn* InteractingPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "BlueprintCanInteract");

	Params::BuildingActor_BlueprintCanInteract Parms{};

	Parms.InteractingPawn = InteractingPawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingActor.BlueprintGetFailedInteractionString
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class AFortPawn*                        InteractingPawn                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText ABuildingActor::BlueprintGetFailedInteractionString(const class AFortPawn* InteractingPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "BlueprintGetFailedInteractionString");

	Params::BuildingActor_BlueprintGetFailedInteractionString Parms{};

	Parms.InteractingPawn = InteractingPawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingActor.BlueprintGetInteractionString
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class AFortPawn*                        InteractingPawn                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText ABuildingActor::BlueprintGetInteractionString(const class AFortPawn* InteractingPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "BlueprintGetInteractionString");

	Params::BuildingActor_BlueprintGetInteractionString Parms{};

	Parms.InteractingPawn = InteractingPawn;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingActor.GetCentroid
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ABuildingActor::GetCentroid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "GetCentroid");

	Params::BuildingActor_GetCentroid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingActor.GetCurrentBuildingLevel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABuildingActor::GetCurrentBuildingLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "GetCurrentBuildingLevel");

	Params::BuildingActor_GetCurrentBuildingLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingActor.GetCustomState
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString ABuildingActor::GetCustomState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "GetCustomState");

	Params::BuildingActor_GetCustomState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingActor.GetEditorTestTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            TagContainer                                           (Parm, OutParm, NativeAccessSpecifierPublic)

void ABuildingActor::GetEditorTestTags(struct FGameplayTagContainer* TagContainer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "GetEditorTestTags");

	Params::BuildingActor_GetEditorTestTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TagContainer != nullptr)
		*TagContainer = std::move(Parms.TagContainer);
}


// Function FortniteGame.BuildingActor.GetHealth
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABuildingActor::GetHealth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "GetHealth");

	Params::BuildingActor_GetHealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingActor.GetHealthPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABuildingActor::GetHealthPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "GetHealthPercent");

	Params::BuildingActor_GetHealthPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingActor.GetMaxHealth
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABuildingActor::GetMaxHealth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "GetMaxHealth");

	Params::BuildingActor_GetMaxHealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingActor.GetMissingHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABuildingActor::GetMissingHealth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "GetMissingHealth");

	Params::BuildingActor_GetMissingHealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingActor.GetOwningController
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AController*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AController* ABuildingActor::GetOwningController() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "GetOwningController");

	Params::BuildingActor_GetOwningController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingActor.GetOwningPlayerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerState*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerState* ABuildingActor::GetOwningPlayerState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "GetOwningPlayerState");

	Params::BuildingActor_GetOwningPlayerState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingActor.HasHealthLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingActor::HasHealthLeft() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "HasHealthLeft");

	Params::BuildingActor_HasHealthLeft Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingActor.IsAcceptablePositionForPlacement
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          InLocation                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InRotation                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class AFortDecoTool*                    DecoTool                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsCDO                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutFailureReason                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingActor::IsAcceptablePositionForPlacement(const struct FVector& InLocation, const struct FRotator& InRotation, class AFortDecoTool* DecoTool, bool bIsCDO, class FText* OutFailureReason) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "IsAcceptablePositionForPlacement");

	Params::BuildingActor_IsAcceptablePositionForPlacement Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InRotation = std::move(InRotation);
	Parms.DecoTool = DecoTool;
	Parms.bIsCDO = bIsCDO;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFailureReason != nullptr)
		*OutFailureReason = std::move(Parms.OutFailureReason);

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingActor.IsDamaged
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingActor::IsDamaged() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "IsDamaged");

	Params::BuildingActor_IsDamaged Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingActor.IsPlayerBuilt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingActor::IsPlayerBuilt() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "IsPlayerBuilt");

	Params::BuildingActor_IsPlayerBuilt Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingActor.UseDefaultHealthBar
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingActor::UseDefaultHealthBar() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingActor", "UseDefaultHealthBar");

	Params::BuildingActor_UseDefaultHealthBar Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction FortniteGame.AthenaPlayerMatchReport.DataAvailableEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UAthenaPlayerMatchReport::DataAvailableEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerMatchReport", "DataAvailableEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.AthenaPlayerMatchReport.GetLootRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FAthenaMatchLootReward>   LootRewards                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAthenaPlayerMatchReport::GetLootRewards(TArray<struct FAthenaMatchLootReward>* LootRewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerMatchReport", "GetLootRewards");

	Params::AthenaPlayerMatchReport_GetLootRewards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (LootRewards != nullptr)
		*LootRewards = std::move(Parms.LootRewards);
}


// Function FortniteGame.AthenaPlayerMatchReport.GetXpRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FAthenaMatchXpReward>     XpRewards                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAthenaPlayerMatchReport::GetXpRewards(TArray<struct FAthenaMatchXpReward>* XpRewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerMatchReport", "GetXpRewards");

	Params::AthenaPlayerMatchReport_GetXpRewards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (XpRewards != nullptr)
		*XpRewards = std::move(Parms.XpRewards);
}


// Function FortniteGame.AthenaPlayerMatchReport.GetTotalBookXpEarned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAthenaPlayerMatchReport::GetTotalBookXpEarned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerMatchReport", "GetTotalBookXpEarned");

	Params::AthenaPlayerMatchReport_GetTotalBookXpEarned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AthenaPlayerMatchReport.GetTotalScoreEarned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAthenaPlayerMatchReport::GetTotalScoreEarned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerMatchReport", "GetTotalScoreEarned");

	Params::AthenaPlayerMatchReport_GetTotalScoreEarned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AthenaPlayerMatchReport.GetTotalSeasonalXpEarned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UAthenaPlayerMatchReport::GetTotalSeasonalXpEarned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AthenaPlayerMatchReport", "GetTotalSeasonalXpEarned");

	Params::AthenaPlayerMatchReport_GetTotalSeasonalXpEarned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCollectionBookPage.GetPageState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortCollectionBookState                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortCollectionBookState UFortCollectionBookPage::GetPageState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookPage", "GetPageState");

	Params::FortCollectionBookPage_GetPageState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCollectionBookPage.GetSectionState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             SectionId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortCollectionBookState                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortCollectionBookState UFortCollectionBookPage::GetSectionState(class FName SectionId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookPage", "GetSectionState");

	Params::FortCollectionBookPage_GetSectionState Parms{};

	Parms.SectionId = SectionId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPickup.GetDisplayName
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AFortPickup::GetDisplayName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickup", "GetDisplayName");

	Params::FortPickup_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPickup.GetInteractErrorText
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             InteractErrorText                                      (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPickup::GetInteractErrorText(class FText* InteractErrorText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickup", "GetInteractErrorText");

	Params::FortPickup_GetInteractErrorText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InteractErrorText != nullptr)
		*InteractErrorText = std::move(Parms.InteractErrorText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPickup.GetInteractText
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             InteractText                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPickup::GetInteractText(class FText* InteractText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickup", "GetInteractText");

	Params::FortPickup_GetInteractText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InteractText != nullptr)
		*InteractText = std::move(Parms.InteractText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPickup.OnRep_bPickedUp
// (Native, Protected)

void AFortPickup::OnRep_bPickedUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickup", "OnRep_bPickedUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPickup.OnRep_PickupLocationData
// (Native, Protected)

void AFortPickup::OnRep_PickupLocationData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickup", "OnRep_PickupLocationData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPickup.OnRep_PickupOwnerData
// (Native, Protected)

void AFortPickup::OnRep_PickupOwnerData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickup", "OnRep_PickupOwnerData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPickup.OnRep_PrimaryPickupItemEntry
// (Native, Protected)

void AFortPickup::OnRep_PrimaryPickupItemEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickup", "OnRep_PrimaryPickupItemEntry");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPickup.OnRep_TossedFromContainer
// (Native, Protected)

void AFortPickup::OnRep_TossedFromContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickup", "OnRep_TossedFromContainer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPickup.TossPickup
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          FinalLocation                                          (ConstParm, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        ItemOwner                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OverrideMaxStackCount                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bToss                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPickup::TossPickup(const struct FVector& FinalLocation, class AFortPawn* ItemOwner, int32 OverrideMaxStackCount, bool bToss)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickup", "TossPickup");

	Params::FortPickup_TossPickup Parms{};

	Parms.FinalLocation = std::move(FinalLocation);
	Parms.ItemOwner = ItemOwner;
	Parms.OverrideMaxStackCount = OverrideMaxStackCount;
	Parms.bToss = bToss;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPickup.PickedUp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPickup::PickedUp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickup", "PickedUp");

	Params::FortPickup_PickedUp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.TimeOfDayController_BlueprintBase.SetPostProcessSettings
// (Event, Protected, BlueprintEvent)

void ATimeOfDayController_BlueprintBase::SetPostProcessSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TimeOfDayController_BlueprintBase", "SetPostProcessSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.AutomationPerfMonitorManager.GetPerfMonitorInstance
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UAutomationPerfMonitorManager*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAutomationPerfMonitorManager* UAutomationPerfMonitorManager::GetPerfMonitorInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("AutomationPerfMonitorManager", "GetPerfMonitorInstance");

	Params::AutomationPerfMonitorManager_GetPerfMonitorInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AutomationPerfMonitorManager.GetStatAverage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           StatName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAutomationPerfMonitorManager::GetStatAverage(const class FString& StatName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutomationPerfMonitorManager", "GetStatAverage");

	Params::AutomationPerfMonitorManager_GetStatAverage Parms{};

	Parms.StatName = std::move(StatName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AutomationPerfMonitorManager.IsRecordingFTestPerf
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAutomationPerfMonitorManager::IsRecordingFTestPerf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutomationPerfMonitorManager", "IsRecordingFTestPerf");

	Params::AutomationPerfMonitorManager_IsRecordingFTestPerf Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.AutomationPerfMonitorManager.StartRecordingFTestPerf
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   StatsToRecord                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UAutomationPerfMonitorManager::StartRecordingFTestPerf(const TArray<class FString>& StatsToRecord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutomationPerfMonitorManager", "StartRecordingFTestPerf");

	Params::AutomationPerfMonitorManager_StartRecordingFTestPerf Parms{};

	Parms.StatsToRecord = std::move(StatsToRecord);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.AutomationPerfMonitorManager.StopRecordingFTestPerf
// (Final, Native, Public, BlueprintCallable)

void UAutomationPerfMonitorManager::StopRecordingFTestPerf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutomationPerfMonitorManager", "StopRecordingFTestPerf");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHealthSet.OnRep_CurrentShield
// (Final, Native, Public)

void UFortHealthSet::OnRep_CurrentShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHealthSet", "OnRep_CurrentShield");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHealthSet.OnRep_Health
// (Final, Native, Public)

void UFortHealthSet::OnRep_Health()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHealthSet", "OnRep_Health");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHealthSet.OnRep_MaxHealth
// (Final, Native, Public)

void UFortHealthSet::OnRep_MaxHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHealthSet", "OnRep_MaxHealth");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHealthSet.OnRep_Shield
// (Final, Native, Public)

void UFortHealthSet::OnRep_Shield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHealthSet", "OnRep_Shield");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBuildingActorSet.OnRep_BuildTime
// (Final, Native, Public)

void UFortBuildingActorSet::OnRep_BuildTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBuildingActorSet", "OnRep_BuildTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBuildingActorSet.OnRep_RepairTime
// (Final, Native, Public)

void UFortBuildingActorSet::OnRep_RepairTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBuildingActorSet", "OnRep_RepairTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBuildingTrapSet.OnRep_Durability
// (Final, Native, Public)

void UFortBuildingTrapSet::OnRep_Durability()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBuildingTrapSet", "OnRep_Durability");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAnimInstance.AnimNotify_LeftFootStep
// (Final, Native, Public)
// Parameters:
// class UAnimNotify*                      Notify                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAnimInstance::AnimNotify_LeftFootStep(const class UAnimNotify* Notify)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAnimInstance", "AnimNotify_LeftFootStep");

	Params::FortAnimInstance_AnimNotify_LeftFootStep Parms{};

	Parms.Notify = Notify;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAnimInstance.AnimNotify_RightFootStep
// (Final, Native, Public)
// Parameters:
// class UAnimNotify*                      Notify                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAnimInstance::AnimNotify_RightFootStep(const class UAnimNotify* Notify)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAnimInstance", "AnimNotify_RightFootStep");

	Params::FortAnimInstance_AnimNotify_RightFootStep Parms{};

	Parms.Notify = Notify;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAnimInstance.TryGetFortAIPawn
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortAIPawn*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortAIPawn* UFortAnimInstance::TryGetFortAIPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAnimInstance", "TryGetFortAIPawn");

	Params::FortAnimInstance_TryGetFortAIPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAnimInstance.TryGetFortPawn
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPawn*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPawn* UFortAnimInstance::TryGetFortPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAnimInstance", "TryGetFortPawn");

	Params::FortAnimInstance_TryGetFortPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerAnimInstance.AnimNotify_PlayFireFX
// (Final, Native, Public)
// Parameters:
// class UAnimNotify*                      Notify                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAnimInstance::AnimNotify_PlayFireFX(const class UAnimNotify* Notify)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAnimInstance", "AnimNotify_PlayFireFX");

	Params::FortPlayerAnimInstance_AnimNotify_PlayFireFX Parms{};

	Parms.Notify = Notify;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAnimInstance.AnimNotify_PlaySecondaryFireFX
// (Final, Native, Public)
// Parameters:
// class UAnimNotify*                      Notify                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAnimInstance::AnimNotify_PlaySecondaryFireFX(const class UAnimNotify* Notify)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAnimInstance", "AnimNotify_PlaySecondaryFireFX");

	Params::FortPlayerAnimInstance_AnimNotify_PlaySecondaryFireFX Parms{};

	Parms.Notify = Notify;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAnimInstance.AnimNotify_StopFireFX
// (Final, Native, Public)
// Parameters:
// class UAnimNotify*                      Notify                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAnimInstance::AnimNotify_StopFireFX(const class UAnimNotify* Notify)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAnimInstance", "AnimNotify_StopFireFX");

	Params::FortPlayerAnimInstance_AnimNotify_StopFireFX Parms{};

	Parms.Notify = Notify;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAnimInstance.OnPlayMontageFromGameplayTagQuery
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGameplayTagQuery                MatchingQuery                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UAnimMontage*                     MontagePlaying                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerAnimInstance::OnPlayMontageFromGameplayTagQuery(const struct FGameplayTagQuery& MatchingQuery, class UAnimMontage* MontagePlaying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAnimInstance", "OnPlayMontageFromGameplayTagQuery");

	Params::FortPlayerAnimInstance_OnPlayMontageFromGameplayTagQuery Parms{};

	Parms.MatchingQuery = std::move(MatchingQuery);
	Parms.MontagePlaying = MontagePlaying;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortPlayerAnimInstance.GetCardinalDirectionFromAngle
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DeadZoneAngle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortCardinalDirection                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortCardinalDirection UFortPlayerAnimInstance::GetCardinalDirectionFromAngle(float Angle, float DeadZoneAngle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAnimInstance", "GetCardinalDirectionFromAngle");

	Params::FortPlayerAnimInstance_GetCardinalDirectionFromAngle Parms{};

	Parms.Angle = Angle;
	Parms.DeadZoneAngle = DeadZoneAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerAnimInstance.GetRelativeAngle
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   MovementAngle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortCardinalDirection                  Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMirrorBackside                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortPlayerAnimInstance::GetRelativeAngle(float MovementAngle, EFortCardinalDirection Direction, bool bMirrorBackside) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAnimInstance", "GetRelativeAngle");

	Params::FortPlayerAnimInstance_GetRelativeAngle Parms{};

	Parms.MovementAngle = MovementAngle;
	Parms.Direction = Direction;
	Parms.bMirrorBackside = bMirrorBackside;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingSMActor.AttachBuildingActorToMe
// (Native, Public, BlueprintCallable)
// Parameters:
// class ABuildingSMActor*                 ActorToAttach                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceAttachment                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingSMActor::AttachBuildingActorToMe(class ABuildingSMActor* ActorToAttach, bool bForceAttachment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "AttachBuildingActorToMe");

	Params::BuildingSMActor_AttachBuildingActorToMe Parms{};

	Parms.ActorToAttach = ActorToAttach;
	Parms.bForceAttachment = bForceAttachment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.BlueprintOnStructurallyStable
// (Native, Event, Protected, BlueprintEvent)

void ABuildingSMActor::BlueprintOnStructurallyStable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "BlueprintOnStructurallyStable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.BlueprintOnStructurallyUnstable
// (Native, Event, Protected, BlueprintEvent)

void ABuildingSMActor::BlueprintOnStructurallyUnstable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "BlueprintOnStructurallyUnstable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.DetachBuildingActorFromMe
// (Native, Public, BlueprintCallable)
// Parameters:
// class ABuildingSMActor*                 ActorToAttach                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBeingDestroyed                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingSMActor::DetachBuildingActorFromMe(class ABuildingSMActor* ActorToAttach, bool bBeingDestroyed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "DetachBuildingActorFromMe");

	Params::BuildingSMActor_DetachBuildingActorFromMe Parms{};

	Parms.ActorToAttach = ActorToAttach;
	Parms.bBeingDestroyed = bBeingDestroyed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.EditorOnlyRemoveInstanceMaterialScalarParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingSMActor::EditorOnlyRemoveInstanceMaterialScalarParameter(class FName ParamName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "EditorOnlyRemoveInstanceMaterialScalarParameter");

	Params::BuildingSMActor_EditorOnlyRemoveInstanceMaterialScalarParameter Parms{};

	Parms.ParamName = ParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.EditorOnlyRemoveInstanceMaterialTextureParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingSMActor::EditorOnlyRemoveInstanceMaterialTextureParameter(class FName ParamName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "EditorOnlyRemoveInstanceMaterialTextureParameter");

	Params::BuildingSMActor_EditorOnlyRemoveInstanceMaterialTextureParameter Parms{};

	Parms.ParamName = ParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.EditorOnlyRemoveInstanceMaterialVectorParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingSMActor::EditorOnlyRemoveInstanceMaterialVectorParameter(class FName ParamName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "EditorOnlyRemoveInstanceMaterialVectorParameter");

	Params::BuildingSMActor_EditorOnlyRemoveInstanceMaterialVectorParameter Parms{};

	Parms.ParamName = ParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.EditorOnlySetInstanceMaterialScalarParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingSMActor::EditorOnlySetInstanceMaterialScalarParameter(class FName ParamName, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "EditorOnlySetInstanceMaterialScalarParameter");

	Params::BuildingSMActor_EditorOnlySetInstanceMaterialScalarParameter Parms{};

	Parms.ParamName = ParamName;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.EditorOnlySetInstanceMaterialTextureParameter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingSMActor::EditorOnlySetInstanceMaterialTextureParameter(class FName ParamName, class UTexture* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "EditorOnlySetInstanceMaterialTextureParameter");

	Params::BuildingSMActor_EditorOnlySetInstanceMaterialTextureParameter Parms{};

	Parms.ParamName = ParamName;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.EditorOnlySetInstanceMaterialVectorParameter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Value                                                  (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingSMActor::EditorOnlySetInstanceMaterialVectorParameter(class FName ParamName, const struct FLinearColor& Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "EditorOnlySetInstanceMaterialVectorParameter");

	Params::BuildingSMActor_EditorOnlySetInstanceMaterialVectorParameter Parms{};

	Parms.ParamName = ParamName;
	Parms.Value = std::move(Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.ForceIntoStructuralGridDuringRuntime
// (Net, NetReliable, Native, Event, NetMulticast, Public, BlueprintCallable)

void ABuildingSMActor::ForceIntoStructuralGridDuringRuntime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "ForceIntoStructuralGridDuringRuntime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.GameplayCue_Abilities_Activation_Generic_BannerWallBuff1
// (Native, Protected)
// Parameters:
// EGameplayCueEvent                       EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           Parameters                                             (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABuildingSMActor::GameplayCue_Abilities_Activation_Generic_BannerWallBuff1(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "GameplayCue_Abilities_Activation_Generic_BannerWallBuff1");

	Params::BuildingSMActor_GameplayCue_Abilities_Activation_Generic_BannerWallBuff1 Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.GameplayCue_Abilities_Activation_Generic_BannerWallBuff2
// (Native, Protected)
// Parameters:
// EGameplayCueEvent                       EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           Parameters                                             (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABuildingSMActor::GameplayCue_Abilities_Activation_Generic_BannerWallBuff2(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "GameplayCue_Abilities_Activation_Generic_BannerWallBuff2");

	Params::BuildingSMActor_GameplayCue_Abilities_Activation_Generic_BannerWallBuff2 Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.GetAnimatingMID
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ElementIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* ABuildingSMActor::GetAnimatingMID(int32 ElementIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "GetAnimatingMID");

	Params::BuildingSMActor_GetAnimatingMID Parms{};

	Parms.ElementIndex = ElementIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingSMActor.GetAttachedBuildingActors
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class ABuildingSMActor*>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ABuildingSMActor*> ABuildingSMActor::GetAttachedBuildingActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "GetAttachedBuildingActors");

	Params::BuildingSMActor_GetAttachedBuildingActors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingSMActor.GetIntenseWindMaterialsForPreview
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UMaterialInterface*>       Materials                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingSMActor::GetIntenseWindMaterialsForPreview(TArray<class UMaterialInterface*>* Materials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "GetIntenseWindMaterialsForPreview");

	Params::BuildingSMActor_GetIntenseWindMaterialsForPreview Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Materials != nullptr)
		*Materials = std::move(Parms.Materials);

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingSMActor.GetReplacementDestructionReason
// (Native, Public, BlueprintCallable)
// Parameters:
// EBuildingReplacementType                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EBuildingReplacementType ABuildingSMActor::GetReplacementDestructionReason()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "GetReplacementDestructionReason");

	Params::BuildingSMActor_GetReplacementDestructionReason Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingSMActor.MarkConnectedBuildingsForStructuralIntegrityCheck
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void ABuildingSMActor::MarkConnectedBuildingsForStructuralIntegrityCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "MarkConnectedBuildingsForStructuralIntegrityCheck");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.MulticastPlayFullHealthEffects
// (Net, Native, Event, NetMulticast, Protected, BlueprintCallable)

void ABuildingSMActor::MulticastPlayFullHealthEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "MulticastPlayFullHealthEffects");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.MulticastRequestBuildingAnimation
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// EBuildingAnim                           RequestedAnimation                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingSMActor::MulticastRequestBuildingAnimation(EBuildingAnim RequestedAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "MulticastRequestBuildingAnimation");

	Params::BuildingSMActor_MulticastRequestBuildingAnimation Parms{};

	Parms.RequestedAnimation = RequestedAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.OnAttachToBuilding
// (Event, Public, BlueprintEvent)
// Parameters:
// class ABuildingSMActor*                 AttachedToBuilding                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingSMActor::OnAttachToBuilding(class ABuildingSMActor* AttachedToBuilding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "OnAttachToBuilding");

	Params::BuildingSMActor_OnAttachToBuilding Parms{};

	Parms.AttachedToBuilding = AttachedToBuilding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.BuildingSMActor.OnBounceAnimationUpdate
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFortBounceData                  Data                                                   (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ABuildingSMActor::OnBounceAnimationUpdate(const struct FFortBounceData& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "OnBounceAnimationUpdate");

	Params::BuildingSMActor_OnBounceAnimationUpdate Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.BuildingSMActor.OnDetachFromBuilding
// (Event, Public, BlueprintEvent)
// Parameters:
// class ABuildingSMActor*                 AttachedToBuilding                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBeingDestroyed                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingSMActor::OnDetachFromBuilding(class ABuildingSMActor* AttachedToBuilding, bool bBeingDestroyed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "OnDetachFromBuilding");

	Params::BuildingSMActor_OnDetachFromBuilding Parms{};

	Parms.AttachedToBuilding = AttachedToBuilding;
	Parms.bBeingDestroyed = bBeingDestroyed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.BuildingSMActor.OnDynamicShrinkAndDestroyEffectFinished
// (Native, Protected)

void ABuildingSMActor::OnDynamicShrinkAndDestroyEffectFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "OnDynamicShrinkAndDestroyEffectFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.OnLODOverrideEffectFinished
// (Native, Protected)

void ABuildingSMActor::OnLODOverrideEffectFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "OnLODOverrideEffectFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.OnRep_bCollisionBlockedByPawns
// (Native, Protected)

void ABuildingSMActor::OnRep_bCollisionBlockedByPawns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "OnRep_bCollisionBlockedByPawns");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.OnRep_BuildingReplacementType
// (Native, Protected)

void ABuildingSMActor::OnRep_BuildingReplacementType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "OnRep_BuildingReplacementType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.OnRep_bUnderConstruction
// (Native, Protected)

void ABuildingSMActor::OnRep_bUnderConstruction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "OnRep_bUnderConstruction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.OnRep_bUnderRepair
// (Native, Protected)

void ABuildingSMActor::OnRep_bUnderRepair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "OnRep_bUnderRepair");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.OnRep_EditingPlayer
// (Native, Protected)

void ABuildingSMActor::OnRep_EditingPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "OnRep_EditingPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.OnRep_MetaData
// (Native, Protected)

void ABuildingSMActor::OnRep_MetaData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "OnRep_MetaData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.OnRep_RelevantBASE
// (Native, Protected)

void ABuildingSMActor::OnRep_RelevantBASE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "OnRep_RelevantBASE");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.OnRep_ReplicatedDrawScale3D
// (Native, Protected)

void ABuildingSMActor::OnRep_ReplicatedDrawScale3D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "OnRep_ReplicatedDrawScale3D");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.OnRep_ReplicatedMIC
// (Native, Protected)

void ABuildingSMActor::OnRep_ReplicatedMIC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "OnRep_ReplicatedMIC");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.OnRep_ResourceType
// (Native, Protected)
// Parameters:
// EFortResourceType                       OldType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingSMActor::OnRep_ResourceType(EFortResourceType OldType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "OnRep_ResourceType");

	Params::BuildingSMActor_OnRep_ResourceType Parms{};

	Parms.OldType = OldType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.OnRep_WeakSpotPositions
// (Native, Protected)

void ABuildingSMActor::OnRep_WeakSpotPositions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "OnRep_WeakSpotPositions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.OnRepairStarted
// (Event, Public, BlueprintEvent)

void ABuildingSMActor::OnRepairStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "OnRepairStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingSMActor.RepairBuilding
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            RepairingController                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ResourcesSpent                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingSMActor::RepairBuilding(class AFortPlayerController* RepairingController, int32 ResourcesSpent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "RepairBuilding");

	Params::BuildingSMActor_RepairBuilding Parms{};

	Parms.RepairingController = RepairingController;
	Parms.ResourcesSpent = ResourcesSpent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.SetMirrored
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsMirrored                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingSMActor::SetMirrored(bool bIsMirrored)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "SetMirrored");

	Params::BuildingSMActor_SetMirrored Parms{};

	Parms.bIsMirrored = bIsMirrored;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.UpdateDynamicShrinkAndDestroyEffect
// (Native, Protected)
// Parameters:
// float                                   CurveValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingSMActor::UpdateDynamicShrinkAndDestroyEffect(float CurveValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "UpdateDynamicShrinkAndDestroyEffect");

	Params::BuildingSMActor_UpdateDynamicShrinkAndDestroyEffect Parms{};

	Parms.CurveValue = CurveValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.UpdateLODOverrideEffect
// (Native, Protected)
// Parameters:
// float                                   CurveValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingSMActor::UpdateLODOverrideEffect(float CurveValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "UpdateLODOverrideEffect");

	Params::BuildingSMActor_UpdateLODOverrideEffect Parms{};

	Parms.CurveValue = CurveValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.UpdateRepairMaterialAnim
// (Native, Protected)
// Parameters:
// float                                   CurveValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingSMActor::UpdateRepairMaterialAnim(float CurveValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "UpdateRepairMaterialAnim");

	Params::BuildingSMActor_UpdateRepairMaterialAnim Parms{};

	Parms.CurveValue = CurveValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingSMActor.GetBuildingMeshComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UStaticMeshComponent*             ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UStaticMeshComponent* ABuildingSMActor::GetBuildingMeshComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "GetBuildingMeshComponent");

	Params::BuildingSMActor_GetBuildingMeshComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingSMActor.GetLogicalBuildingIndex
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABuildingSMActor::GetLogicalBuildingIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "GetLogicalBuildingIndex");

	Params::BuildingSMActor_GetLogicalBuildingIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingSMActor.GetWindPannerSpeedCurveForPreview
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCurveLinearColor*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCurveLinearColor* ABuildingSMActor::GetWindPannerSpeedCurveForPreview() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "GetWindPannerSpeedCurveForPreview");

	Params::BuildingSMActor_GetWindPannerSpeedCurveForPreview Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingSMActor.GetWindSpeedCurveForPreview
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCurveLinearColor*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCurveLinearColor* ABuildingSMActor::GetWindSpeedCurveForPreview() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "GetWindSpeedCurveForPreview");

	Params::BuildingSMActor_GetWindSpeedCurveForPreview Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingSMActor.HasDestructionLoot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingSMActor::HasDestructionLoot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "HasDestructionLoot");

	Params::BuildingSMActor_HasDestructionLoot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingSMActor.IsStructurallySupported
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingSMActor::IsStructurallySupported() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "IsStructurallySupported");

	Params::BuildingSMActor_IsStructurallySupported Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingSMActor.IsSupportedByWorld
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingSMActor::IsSupportedByWorld() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "IsSupportedByWorld");

	Params::BuildingSMActor_IsSupportedByWorld Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingSMActor.WillRegisterWithStructuralGrid
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingSMActor::WillRegisterWithStructuralGrid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingSMActor", "WillRegisterWithStructuralGrid");

	Params::BuildingSMActor_WillRegisterWithStructuralGrid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingGameplayActor.DisableAbilityDeliveryInfo
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     BucketTag                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingGameplayActor::DisableAbilityDeliveryInfo(const struct FGameplayTag& BucketTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActor", "DisableAbilityDeliveryInfo");

	Params::BuildingGameplayActor_DisableAbilityDeliveryInfo Parms{};

	Parms.BucketTag = std::move(BucketTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingGameplayActor.EnableAbilityDeliveryInfo
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     BucketTag                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingGameplayActor::EnableAbilityDeliveryInfo(const struct FGameplayTag& BucketTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActor", "EnableAbilityDeliveryInfo");

	Params::BuildingGameplayActor_EnableAbilityDeliveryInfo Parms{};

	Parms.BucketTag = std::move(BucketTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingGameplayActor.K2_AddGameplayCue
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     GameplayCueTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     Context                                                (Parm, NativeAccessSpecifierPublic)

void ABuildingGameplayActor::K2_AddGameplayCue(const struct FGameplayTag& GameplayCueTag, const struct FGameplayEffectContextHandle& Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActor", "K2_AddGameplayCue");

	Params::BuildingGameplayActor_K2_AddGameplayCue Parms{};

	Parms.GameplayCueTag = std::move(GameplayCueTag);
	Parms.Context = std::move(Context);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingGameplayActor.K2_ExecuteGameplayCue
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     GameplayCueTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     Context                                                (Parm, NativeAccessSpecifierPublic)

void ABuildingGameplayActor::K2_ExecuteGameplayCue(const struct FGameplayTag& GameplayCueTag, const struct FGameplayEffectContextHandle& Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActor", "K2_ExecuteGameplayCue");

	Params::BuildingGameplayActor_K2_ExecuteGameplayCue Parms{};

	Parms.GameplayCueTag = std::move(GameplayCueTag);
	Parms.Context = std::move(Context);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingGameplayActor.K2_ExecuteGameplayCueWithParams
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     GameplayCueTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           GameplayCueParameters                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABuildingGameplayActor::K2_ExecuteGameplayCueWithParams(const struct FGameplayTag& GameplayCueTag, const struct FGameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActor", "K2_ExecuteGameplayCueWithParams");

	Params::BuildingGameplayActor_K2_ExecuteGameplayCueWithParams Parms{};

	Parms.GameplayCueTag = std::move(GameplayCueTag);
	Parms.GameplayCueParameters = std::move(GameplayCueParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingGameplayActor.K2_RemoveGameplayCue
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     GameplayCueTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingGameplayActor::K2_RemoveGameplayCue(const struct FGameplayTag& GameplayCueTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActor", "K2_RemoveGameplayCue");

	Params::BuildingGameplayActor_K2_RemoveGameplayCue Parms{};

	Parms.GameplayCueTag = std::move(GameplayCueTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingGameplayActor.OnRegisteredTouchComponentBeginOverlap
// (Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABuildingGameplayActor::OnRegisteredTouchComponentBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActor", "OnRegisteredTouchComponentBeginOverlap");

	Params::BuildingGameplayActor_OnRegisteredTouchComponentBeginOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingGameplayActor.OnRegisteredTouchComponentEndOverlap
// (Native, Protected)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingGameplayActor::OnRegisteredTouchComponentEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActor", "OnRegisteredTouchComponentEndOverlap");

	Params::BuildingGameplayActor_OnRegisteredTouchComponentEndOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingGameplayActor.SetAbilitySourceLevel
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewAbilitySourceLevel                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingGameplayActor::SetAbilitySourceLevel(int32 NewAbilitySourceLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActor", "SetAbilitySourceLevel");

	Params::BuildingGameplayActor_SetAbilitySourceLevel Parms{};

	Parms.NewAbilitySourceLevel = NewAbilitySourceLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingGameplayActor.SetIgnoreInstigatorCollision
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bShouldIgnore                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingGameplayActor::SetIgnoreInstigatorCollision(bool bShouldIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActor", "SetIgnoreInstigatorCollision");

	Params::BuildingGameplayActor_SetIgnoreInstigatorCollision Parms{};

	Parms.bShouldIgnore = bShouldIgnore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingGameplayActor.SetInitialVelocity
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InitialVelocity                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingGameplayActor::SetInitialVelocity(const struct FVector& InitialVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActor", "SetInitialVelocity");

	Params::BuildingGameplayActor_SetInitialVelocity Parms{};

	Parms.InitialVelocity = std::move(InitialVelocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingGameplayActor.SetTouchComponentForAbilityDeliveryInfo
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              PrimitiveComponent                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingGameplayActor::SetTouchComponentForAbilityDeliveryInfo(class UPrimitiveComponent* PrimitiveComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActor", "SetTouchComponentForAbilityDeliveryInfo");

	Params::BuildingGameplayActor_SetTouchComponentForAbilityDeliveryInfo Parms{};

	Parms.PrimitiveComponent = PrimitiveComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingGameplayActor.GetTargetingSourceTransform
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EFortAbilityTargetingSource             Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform ABuildingGameplayActor::GetTargetingSourceTransform(EFortAbilityTargetingSource Source) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingGameplayActor", "GetTargetingSourceTransform");

	Params::BuildingGameplayActor_GetTargetingSourceTransform Parms{};

	Parms.Source = Source;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingCapturePointActor.OnCapturePointActiveStateChange
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInActive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingCapturePointActor::OnCapturePointActiveStateChange(bool bInActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingCapturePointActor", "OnCapturePointActiveStateChange");

	Params::BuildingCapturePointActor_OnCapturePointActiveStateChange Parms{};

	Parms.bInActive = bInActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingCapturePointActor.OnCapturePointLockStateChange
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInLocked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingCapturePointActor::OnCapturePointLockStateChange(bool bInLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingCapturePointActor", "OnCapturePointLockStateChange");

	Params::BuildingCapturePointActor_OnCapturePointLockStateChange Parms{};

	Parms.bInLocked = bInLocked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingCapturePointActor.OnCapturePointStateChange
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// ECaptureState                           InState                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortTeam                               InTeam                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingCapturePointActor::OnCapturePointStateChange(ECaptureState InState, EFortTeam InTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingCapturePointActor", "OnCapturePointStateChange");

	Params::BuildingCapturePointActor_OnCapturePointStateChange Parms{};

	Parms.InState = InState;
	Parms.InTeam = InTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingCapturePointActor.OnEnterCapturePoint
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABuildingCapturePointActor::OnEnterCapturePoint(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingCapturePointActor", "OnEnterCapturePoint");

	Params::BuildingCapturePointActor_OnEnterCapturePoint Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingCapturePointActor.OnLeaveCapturePoint
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingCapturePointActor::OnLeaveCapturePoint(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingCapturePointActor", "OnLeaveCapturePoint");

	Params::BuildingCapturePointActor_OnLeaveCapturePoint Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingCapturePointActor.OnRep_bActivated
// (Final, Native, Protected)

void ABuildingCapturePointActor::OnRep_bActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingCapturePointActor", "OnRep_bActivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingCapturePointActor.OnRep_bLocked
// (Final, Native, Protected)

void ABuildingCapturePointActor::OnRep_bLocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingCapturePointActor", "OnRep_bLocked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingCapturePointActor.OnRep_CaptureState
// (Final, Native, Protected)

void ABuildingCapturePointActor::OnRep_CaptureState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingCapturePointActor", "OnRep_CaptureState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingCapturePointActor.OnRep_ReplicatedCapturePercentage
// (Final, Native, Protected)

void ABuildingCapturePointActor::OnRep_ReplicatedCapturePercentage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingCapturePointActor", "OnRep_ReplicatedCapturePercentage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingCapturePointActor.SetActivatedState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInActivated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingCapturePointActor::SetActivatedState(bool bInActivated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingCapturePointActor", "SetActivatedState");

	Params::BuildingCapturePointActor_SetActivatedState Parms{};

	Parms.bInActivated = bInActivated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingCapturePointActor.GetCaptureState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ECaptureState                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECaptureState ABuildingCapturePointActor::GetCaptureState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingCapturePointActor", "GetCaptureState");

	Params::BuildingCapturePointActor_GetCaptureState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingConnectivityComponent.DisconnectAll
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UBuildingConnectivityComponent::DisconnectAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingConnectivityComponent", "DisconnectAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingConnectivityComponent.DrawDebugData
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void UBuildingConnectivityComponent::DrawDebugData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingConnectivityComponent", "DrawDebugData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingConnectivityComponent.K2_IsPowered
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBuildingConnectivityComponent::K2_IsPowered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingConnectivityComponent", "K2_IsPowered");

	Params::BuildingConnectivityComponent_K2_IsPowered Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingConnectivityComponent.OnPlaced
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UBuildingConnectivityComponent::OnPlaced()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingConnectivityComponent", "OnPlaced");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingConnectivityComponent.OnRep_bIsPowered
// (Native, Protected)

void UBuildingConnectivityComponent::OnRep_bIsPowered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingConnectivityComponent", "OnRep_bIsPowered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingConnectivityComponent.OnRep_bIsProvidingPower
// (Native, Protected)

void UBuildingConnectivityComponent::OnRep_bIsProvidingPower()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingConnectivityComponent", "OnRep_bIsProvidingPower");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingConnectivityComponent.OnRep_Connections
// (Native, Protected)

void UBuildingConnectivityComponent::OnRep_Connections()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingConnectivityComponent", "OnRep_Connections");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingConnectivityComponent.CanConnectTo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABuildingSMActor*                 TestActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBuildingConnectivityComponent::CanConnectTo(class ABuildingSMActor* TestActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingConnectivityComponent", "CanConnectTo");

	Params::BuildingConnectivityComponent_CanConnectTo Parms{};

	Parms.TestActor = TestActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingConnectivityComponent.IsConnectedTo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABuildingSMActor*                 TestActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBuildingConnectivityComponent::IsConnectedTo(class ABuildingSMActor* TestActor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingConnectivityComponent", "IsConnectedTo");

	Params::BuildingConnectivityComponent_IsConnectedTo Parms{};

	Parms.TestActor = TestActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSharedMissionLists.UpdatePIEPlayers
// (Final, Native, Protected, BlueprintCallable)

void UFortSharedMissionLists::UpdatePIEPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSharedMissionLists", "UpdatePIEPlayers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingConnectivityEffect.OnConnect
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FTransform                       T1                                                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FTransform                       T2                                                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ABuildingConnectivityEffect::OnConnect(const struct FTransform& T1, const struct FTransform& T2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingConnectivityEffect", "OnConnect");

	Params::BuildingConnectivityEffect_OnConnect Parms{};

	Parms.T1 = std::move(T1);
	Parms.T2 = std::move(T2);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.BuildingConnectivityEffect.OnDisconnect
// (Event, Public, BlueprintEvent)

void ABuildingConnectivityEffect::OnDisconnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingConnectivityEffect", "OnDisconnect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingContainer.BounceContainer
// (Native, Public)

void ABuildingContainer::BounceContainer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingContainer", "BounceContainer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingContainer.GetLootTier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABuildingContainer::GetLootTier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingContainer", "GetLootTier");

	Params::BuildingContainer_GetLootTier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingContainer.OnBeginSearch
// (Event, Public, BlueprintEvent)

void ABuildingContainer::OnBeginSearch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingContainer", "OnBeginSearch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingContainer.OnLoot
// (Event, Public, BlueprintEvent)

void ABuildingContainer::OnLoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingContainer", "OnLoot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingContainer.OnLootRepeat
// (Event, Public, BlueprintEvent)

void ABuildingContainer::OnLootRepeat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingContainer", "OnLootRepeat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingContainer.OnLootReset
// (Event, Public, BlueprintEvent)

void ABuildingContainer::OnLootReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingContainer", "OnLootReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingContainer.OnRaiseTreasure
// (Event, Public, BlueprintEvent)

void ABuildingContainer::OnRaiseTreasure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingContainer", "OnRaiseTreasure");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingContainer.OnRep_bAlreadySearched
// (Native, Public)

void ABuildingContainer::OnRep_bAlreadySearched()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingContainer", "OnRep_bAlreadySearched");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingContainer.OnSearchInterrupted
// (Event, Public, BlueprintEvent)

void ABuildingContainer::OnSearchInterrupted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingContainer", "OnSearchInterrupted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingContainer.OnSetSearched
// (Event, Public, BlueprintEvent)

void ABuildingContainer::OnSetSearched()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingContainer", "OnSetSearched");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingContainer.RaiseTreasure
// (Final, Native, Public, BlueprintCallable)

void ABuildingContainer::RaiseTreasure()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingContainer", "RaiseTreasure");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCompendiumBundleDefinition.DoesCompendiumBundleExpire
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCompendiumBundleDefinition::DoesCompendiumBundleExpire() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCompendiumBundleDefinition", "DoesCompendiumBundleExpire");

	Params::FortCompendiumBundleDefinition_DoesCompendiumBundleExpire Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCompendiumBundleDefinition.GetCompendiumItemDefinitions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortCompendiumItemDefinition*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortCompendiumItemDefinition*> UFortCompendiumBundleDefinition::GetCompendiumItemDefinitions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCompendiumBundleDefinition", "GetCompendiumItemDefinitions");

	Params::FortCompendiumBundleDefinition_GetCompendiumItemDefinitions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCompendiumBundleDefinition.GetEventName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortCompendiumBundleDefinition::GetEventName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCompendiumBundleDefinition", "GetEventName");

	Params::FortCompendiumBundleDefinition_GetEventName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortConsumableAccountItem.CanActivateOnOthers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortConsumableAccountItem::CanActivateOnOthers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConsumableAccountItem", "CanActivateOnOthers");

	Params::FortConsumableAccountItem_CanActivateOnOthers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortConsumableAccountItem.CanActivateOnSelf
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortConsumableAccountItem::CanActivateOnSelf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConsumableAccountItem", "CanActivateOnSelf");

	Params::FortConsumableAccountItem_CanActivateOnSelf Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortControlResistanceSet.OnRep_ControlResistance
// (Final, Native, Public)

void UFortControlResistanceSet::OnRep_ControlResistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControlResistanceSet", "OnRep_ControlResistance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortControlResistanceSet.OnRep_MaxControlResistance
// (Final, Native, Public)

void UFortControlResistanceSet::OnRep_MaxControlResistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortControlResistanceSet", "OnRep_MaxControlResistance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTargetSelectionInterface.GetTargetingTransform
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortAbilityTargetingSource             Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortGameplayAbility*             SourceAbility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform IFortTargetSelectionInterface::GetTargetingTransform(EFortAbilityTargetingSource Source, class UFortGameplayAbility* SourceAbility) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTargetSelectionInterface", "GetTargetingTransform");

	Params::FortTargetSelectionInterface_GetTargetingTransform Parms{};

	Parms.Source = Source;
	Parms.SourceAbility = SourceAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortConstructionSet.OnRep_BuildCost
// (Final, Native, Public)

void UFortConstructionSet::OnRep_BuildCost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructionSet", "OnRep_BuildCost");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortConstructionSet.OnRep_BuildingSkill
// (Final, Native, Public)

void UFortConstructionSet::OnRep_BuildingSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructionSet", "OnRep_BuildingSkill");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortConstructionSet.OnRep_BuildSpeed
// (Final, Native, Public)

void UFortConstructionSet::OnRep_BuildSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructionSet", "OnRep_BuildSpeed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortConstructionSet.OnRep_MaxBuildLevel
// (Final, Native, Public)

void UFortConstructionSet::OnRep_MaxBuildLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructionSet", "OnRep_MaxBuildLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortConstructionSet.OnRep_RepairCost
// (Final, Native, Public)

void UFortConstructionSet::OnRep_RepairCost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructionSet", "OnRep_RepairCost");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortConstructionSet.OnRep_RepairSpeed
// (Final, Native, Public)

void UFortConstructionSet::OnRep_RepairSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructionSet", "OnRep_RepairSpeed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortConstructionSet.OnRep_TrapArmSpeed
// (Final, Native, Public)

void UFortConstructionSet::OnRep_TrapArmSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructionSet", "OnRep_TrapArmSpeed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortConstructionSet.OnRep_TrapBaseDamage
// (Final, Native, Public)

void UFortConstructionSet::OnRep_TrapBaseDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructionSet", "OnRep_TrapBaseDamage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortConstructionSet.OnRep_TrapDiceCritChance
// (Final, Native, Public)

void UFortConstructionSet::OnRep_TrapDiceCritChance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructionSet", "OnRep_TrapDiceCritChance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortConstructionSet.OnRep_TrapDiceCritMultiplier
// (Final, Native, Public)

void UFortConstructionSet::OnRep_TrapDiceCritMultiplier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructionSet", "OnRep_TrapDiceCritMultiplier");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortConstructionSet.OnRep_TrapHealingSource
// (Final, Native, Public)

void UFortConstructionSet::OnRep_TrapHealingSource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructionSet", "OnRep_TrapHealingSource");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortConstructionSet.OnRep_TrapMaxDurability
// (Final, Native, Public)

void UFortConstructionSet::OnRep_TrapMaxDurability()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructionSet", "OnRep_TrapMaxDurability");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortConstructionSet.OnRep_TrapReloadSpeed
// (Final, Native, Public)

void UFortConstructionSet::OnRep_TrapReloadSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructionSet", "OnRep_TrapReloadSpeed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpProfileCollectionBook.ClaimCollectionBookPageRewards
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           PageTemplateId                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SectionId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SelectedRewardIndex                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileCollectionBook::ClaimCollectionBookPageRewards(const class FString& PageTemplateId, const class FString& SectionId, int32 SelectedRewardIndex, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileCollectionBook", "ClaimCollectionBookPageRewards");

	Params::FortMcpProfileCollectionBook_ClaimCollectionBookPageRewards Parms{};

	Parms.PageTemplateId = std::move(PageTemplateId);
	Parms.SectionId = std::move(SectionId);
	Parms.SelectedRewardIndex = SelectedRewardIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileCollectionBook.ConvertSlottedItem
// (Final, Net, NetReliable, NetRequest, Native, Event, Private, HasOutParams)
// Parameters:
// class FString                           TargetItemId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ConversionIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileCollectionBook::ConvertSlottedItem(const class FString& TargetItemId, int32 ConversionIndex, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileCollectionBook", "ConvertSlottedItem");

	Params::FortMcpProfileCollectionBook_ConvertSlottedItem Parms{};

	Parms.TargetItemId = std::move(TargetItemId);
	Parms.ConversionIndex = ConversionIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileCollectionBook.UpgradeSlottedItem
// (Final, Net, NetReliable, NetRequest, Native, Event, Private, HasOutParams)
// Parameters:
// class FString                           TargetItemId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileCollectionBook::UpgradeSlottedItem(const class FString& TargetItemId, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileCollectionBook", "UpgradeSlottedItem");

	Params::FortMcpProfileCollectionBook_UpgradeSlottedItem Parms{};

	Parms.TargetItemId = std::move(TargetItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortConversionControlItemDefinition.GetFirstConversionTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortRarity                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortRarity UFortConversionControlItemDefinition::GetFirstConversionTier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversionControlItemDefinition", "GetFirstConversionTier");

	Params::FortConversionControlItemDefinition_GetFirstConversionTier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortConversionControlItemDefinition.GetMaxConversionTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortRarity                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortRarity UFortConversionControlItemDefinition::GetMaxConversionTier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversionControlItemDefinition", "GetMaxConversionTier");

	Params::FortConversionControlItemDefinition_GetMaxConversionTier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortConversionControlItemDefinition.GetPointsForTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortRarity                             InTier                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortConversionControlItemDefinition::GetPointsForTier(EFortRarity InTier) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversionControlItemDefinition", "GetPointsForTier");

	Params::FortConversionControlItemDefinition_GetPointsForTier Parms{};

	Parms.InTier = InTier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortConversionControlItemDefinition.GetRequiredCatalysts
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer UFortConversionControlItemDefinition::GetRequiredCatalysts() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversionControlItemDefinition", "GetRequiredCatalysts");

	Params::FortConversionControlItemDefinition_GetRequiredCatalysts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortConversionControlItemDefinition.GetRequiredItemDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAccountItemDefinition*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAccountItemDefinition* UFortConversionControlItemDefinition::GetRequiredItemDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversionControlItemDefinition", "GetRequiredItemDefinition");

	Params::FortConversionControlItemDefinition_GetRequiredItemDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortConversionControlItemDefinition.GetRequiredItemQuantity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SacrificePoints                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortConversionControlItemDefinition::GetRequiredItemQuantity(int32 SacrificePoints) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversionControlItemDefinition", "GetRequiredItemQuantity");

	Params::FortConversionControlItemDefinition_GetRequiredItemQuantity Parms{};

	Parms.SacrificePoints = SacrificePoints;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortConversionControlItemDefinition.GetRewardName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortConversionControlItemDefinition::GetRewardName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversionControlItemDefinition", "GetRewardName");

	Params::FortConversionControlItemDefinition_GetRewardName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortConversionControlItemDefinition.GetTierFromSacrificePoints
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SacrificePoints                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortRarity                             CalculatedTier                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortConversionControlItemDefinition::GetTierFromSacrificePoints(int32 SacrificePoints, EFortRarity* CalculatedTier) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConversionControlItemDefinition", "GetTierFromSacrificePoints");

	Params::FortConversionControlItemDefinition_GetTierFromSacrificePoints Parms{};

	Parms.SacrificePoints = SacrificePoints;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CalculatedTier != nullptr)
		*CalculatedTier = Parms.CalculatedTier;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingFlagSpawn.OnCarriedObjectAttachedEvent
// (Native, Event, Public, BlueprintEvent)

void ABuildingFlagSpawn::OnCarriedObjectAttachedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFlagSpawn", "OnCarriedObjectAttachedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingFlagSpawn.OnCarriedObjectDetachedEvent
// (Native, Event, Public, BlueprintEvent)

void ABuildingFlagSpawn::OnCarriedObjectDetachedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFlagSpawn", "OnCarriedObjectDetachedEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingFlagSpawn.SpawnCarriedObject
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void ABuildingFlagSpawn::SpawnCarriedObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFlagSpawn", "SpawnCarriedObject");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingFlagSpawn.IsSpawnedObjectAwayFromBase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingFlagSpawn::IsSpawnedObjectAwayFromBase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFlagSpawn", "IsSpawnedObjectAwayFromBase");

	Params::BuildingFlagSpawn_IsSpawnedObjectAwayFromBase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWorldItemTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWorldItemTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorldItemTooltip", "GetNumericValue");

	Params::FortWorldItemTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWorldItemTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWorldItemTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorldItemTooltip", "GetTextForToken");

	Params::FortWorldItemTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWorldItemTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWorldItemTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorldItemTooltip", "GetTokenizedDescriptionText");

	Params::FortWorldItemTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortConsumableItemTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortConsumableItemTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConsumableItemTooltip", "GetNumericValue");

	Params::FortConsumableItemTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortConsumableItemTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortConsumableItemTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConsumableItemTooltip", "GetTextForToken");

	Params::FortConsumableItemTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortConsumableItemTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortConsumableItemTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConsumableItemTooltip", "GetTokenizedDescriptionText");

	Params::FortConsumableItemTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingFloor.IsBalcony
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingFloor::IsBalcony() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFloor", "IsBalcony");

	Params::BuildingFloor_IsBalcony Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingFOBConfigActor.AttemptSelectFOBCore
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UFortFOBCoreDecoItemDefinition*   DefToSelect                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingFOBConfigActor::AttemptSelectFOBCore(class UFortFOBCoreDecoItemDefinition* DefToSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBConfigActor", "AttemptSelectFOBCore");

	Params::BuildingFOBConfigActor_AttemptSelectFOBCore Parms{};

	Parms.DefToSelect = DefToSelect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingFOBConfigActor.OnCoreInitialized
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class ABuildingFOBCoreActor*            InitializedCore                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingFOBConfigActor::OnCoreInitialized(class ABuildingFOBCoreActor* InitializedCore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBConfigActor", "OnCoreInitialized");

	Params::BuildingFOBConfigActor_OnCoreInitialized Parms{};

	Parms.InitializedCore = InitializedCore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingFOBConfigActor.OnFinalizationFXMulticast
// (Net, Native, Event, NetMulticast, Protected)

void ABuildingFOBConfigActor::OnFinalizationFXMulticast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBConfigActor", "OnFinalizationFXMulticast");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingFOBConfigActor.OnFinalizationPlayFX
// (Event, Protected, BlueprintEvent)

void ABuildingFOBConfigActor::OnFinalizationPlayFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBConfigActor", "OnFinalizationPlayFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingFOBConfigActor.OnFinalized
// (Native, Event, Protected, BlueprintEvent)

void ABuildingFOBConfigActor::OnFinalized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBConfigActor", "OnFinalized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingFOBConfigActor.OnFOBModeSet
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// EFOBMode                                ModeThatWasSet                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingFOBConfigActor::OnFOBModeSet(EFOBMode ModeThatWasSet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBConfigActor", "OnFOBModeSet");

	Params::BuildingFOBConfigActor_OnFOBModeSet Parms{};

	Parms.ModeThatWasSet = ModeThatWasSet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingFOBConfigActor.OnIOOperationCompleteMulticast
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// EFOBIOStatus                            IOOperation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortFOBCoreDecoItemDefinition*   SelectedCoreDef                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingFOBConfigActor::OnIOOperationCompleteMulticast(EFOBIOStatus IOOperation, bool bSuccess, class UFortFOBCoreDecoItemDefinition* SelectedCoreDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBConfigActor", "OnIOOperationCompleteMulticast");

	Params::BuildingFOBConfigActor_OnIOOperationCompleteMulticast Parms{};

	Parms.IOOperation = IOOperation;
	Parms.bSuccess = bSuccess;
	Parms.SelectedCoreDef = SelectedCoreDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingFOBConfigActor.OnRep_bFinalized
// (Native, Protected)

void ABuildingFOBConfigActor::OnRep_bFinalized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBConfigActor", "OnRep_bFinalized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingFOBConfigActor.OnRep_FOBMode
// (Native, Protected)

void ABuildingFOBConfigActor::OnRep_FOBMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBConfigActor", "OnRep_FOBMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingFOBConfigActor.ReloadFOB
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingFOBConfigActor::ReloadFOB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBConfigActor", "ReloadFOB");

	Params::BuildingFOBConfigActor_ReloadFOB Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingFOBConfigActor.CanPerformIOOperation
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingFOBConfigActor::CanPerformIOOperation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBConfigActor", "CanPerformIOOperation");

	Params::BuildingFOBConfigActor_CanPerformIOOperation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingFOBConfigActor.CanReloadFOB
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingFOBConfigActor::CanReloadFOB() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBConfigActor", "CanReloadFOB");

	Params::BuildingFOBConfigActor_CanReloadFOB Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingFOBConfigActor.CanSaveFOB
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingFOBConfigActor::CanSaveFOB() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBConfigActor", "CanSaveFOB");

	Params::BuildingFOBConfigActor_CanSaveFOB Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingFOBConfigActor.GetAllCoreChoices
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFOBCoreChoice>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FFOBCoreChoice> ABuildingFOBConfigActor::GetAllCoreChoices() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBConfigActor", "GetAllCoreChoices");

	Params::BuildingFOBConfigActor_GetAllCoreChoices Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingFOBConfigActor.GetFOBMode
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFOBMode                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFOBMode ABuildingFOBConfigActor::GetFOBMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBConfigActor", "GetFOBMode");

	Params::BuildingFOBConfigActor_GetFOBMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingFOBConfigActor.GetSelectedFOBCoreItemDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortFOBCoreDecoItemDefinition*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortFOBCoreDecoItemDefinition* ABuildingFOBConfigActor::GetSelectedFOBCoreItemDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBConfigActor", "GetSelectedFOBCoreItemDefinition");

	Params::BuildingFOBConfigActor_GetSelectedFOBCoreItemDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingFOBConfigActor.IsBuildingActorWithinFOB
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABuildingActor*                   ActorToCheck                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingFOBConfigActor::IsBuildingActorWithinFOB(class ABuildingActor* ActorToCheck) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBConfigActor", "IsBuildingActorWithinFOB");

	Params::BuildingFOBConfigActor_IsBuildingActorWithinFOB Parms{};

	Parms.ActorToCheck = ActorToCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingFOBConfigActor.IsFinalized
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingFOBConfigActor::IsFinalized() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBConfigActor", "IsFinalized");

	Params::BuildingFOBConfigActor_IsFinalized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingFOBConfigActor.IsInitialized
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingFOBConfigActor::IsInitialized() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBConfigActor", "IsInitialized");

	Params::BuildingFOBConfigActor_IsInitialized Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingFOBConfigActor.IsPlayerControllerFOBOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingFOBConfigActor::IsPlayerControllerFOBOwner(const class AFortPlayerController* FortPC) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBConfigActor", "IsPlayerControllerFOBOwner");

	Params::BuildingFOBConfigActor_IsPlayerControllerFOBOwner Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerState.AreUniqueIDsIdentical
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FUniqueNetIdRepl                 A                                                      (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 B                                                      (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerState::AreUniqueIDsIdentical(const struct FUniqueNetIdRepl& A, const struct FUniqueNetIdRepl& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortPlayerState", "AreUniqueIDsIdentical");

	Params::FortPlayerState_AreUniqueIDsIdentical Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerState.GetCurrentPawn
// (Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerPawn*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerPawn* AFortPlayerState::GetCurrentPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "GetCurrentPawn");

	Params::FortPlayerState_GetCurrentPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerState.OnRep_AccessoryColorSwatches
// (Final, Native, Protected)

void AFortPlayerState::OnRep_AccessoryColorSwatches()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "OnRep_AccessoryColorSwatches");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerState.OnRep_bHasStartedPlaying
// (Final, Native, Protected)

void AFortPlayerState::OnRep_bHasStartedPlaying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "OnRep_bHasStartedPlaying");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerState.OnRep_CharacterColorSwatches
// (Final, Native, Protected)

void AFortPlayerState::OnRep_CharacterColorSwatches()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "OnRep_CharacterColorSwatches");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerState.OnRep_CharacterParts
// (Final, Native, Protected)

void AFortPlayerState::OnRep_CharacterParts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "OnRep_CharacterParts");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerState.OnRep_CurrentCharXP
// (Final, Native, Protected)

void AFortPlayerState::OnRep_CurrentCharXP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "OnRep_CurrentCharXP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerState.OnRep_HeroId
// (Final, Native, Protected)

void AFortPlayerState::OnRep_HeroId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "OnRep_HeroId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerState.OnRep_HeroType
// (Native, Protected)

void AFortPlayerState::OnRep_HeroType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "OnRep_HeroType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerState.OnRep_HomeActor
// (Native, Protected)
// Parameters:
// class AActor*                           OldHomeActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerState::OnRep_HomeActor(class AActor* OldHomeActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "OnRep_HomeActor");

	Params::FortPlayerState_OnRep_HomeActor Parms{};

	Parms.OldHomeActor = OldHomeActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerState.OnRep_PartyOwner
// (Native, Protected)

void AFortPlayerState::OnRep_PartyOwner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "OnRep_PartyOwner");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerState.OnRep_PlatformUniqueNetIdString
// (Native, Protected)

void AFortPlayerState::OnRep_PlatformUniqueNetIdString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "OnRep_PlatformUniqueNetIdString");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerState.OnRep_PlayerTeam
// (Native, Protected)

void AFortPlayerState::OnRep_PlayerTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "OnRep_PlayerTeam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerState.OnRep_ScoreStatChanged
// (Final, Native, Protected)

void AFortPlayerState::OnRep_ScoreStatChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "OnRep_ScoreStatChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerState.OnRep_SessionOwner
// (Final, Native, Protected)

void AFortPlayerState::OnRep_SessionOwner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "OnRep_SessionOwner");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerState.OnRep_ShowHeroBackpack
// (Final, Native, Protected)

void AFortPlayerState::OnRep_ShowHeroBackpack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "OnRep_ShowHeroBackpack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerState.OnRep_ShowHeroHeadAccessories
// (Final, Native, Protected)

void AFortPlayerState::OnRep_ShowHeroHeadAccessories()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "OnRep_ShowHeroHeadAccessories");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerState.ServerSetShowHeroBackpack
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerState::ServerSetShowHeroBackpack(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "ServerSetShowHeroBackpack");

	Params::FortPlayerState_ServerSetShowHeroBackpack Parms{};

	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerState.ServerSetShowHeroHeadAccessories
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerState::ServerSetShowHeroHeadAccessories(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "ServerSetShowHeroHeadAccessories");

	Params::FortPlayerState_ServerSetShowHeroHeadAccessories Parms{};

	Parms.bShow = bShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerState.UpdateScoreStatChanged
// (Native, Protected)

void AFortPlayerState::UpdateScoreStatChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "UpdateScoreStatChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerState.GetPlatformUniqueNetId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl AFortPlayerState::GetPlatformUniqueNetId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "GetPlatformUniqueNetId");

	Params::FortPlayerState_GetPlatformUniqueNetId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerState.GetPlayerOSSName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AFortPlayerState::GetPlayerOSSName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "GetPlayerOSSName");

	Params::FortPlayerState_GetPlayerOSSName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerState.GetUniqueID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl AFortPlayerState::GetUniqueID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "GetUniqueID");

	Params::FortPlayerState_GetUniqueID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerState.IsConsolePlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerState::IsConsolePlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerState", "IsConsolePlayer");

	Params::FortPlayerState_IsConsolePlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingFOBCoreActor.MarkTargetable
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void ABuildingFOBCoreActor::MarkTargetable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBCoreActor", "MarkTargetable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingFOBCoreActor.MarkVulnerable
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void ABuildingFOBCoreActor::MarkVulnerable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBCoreActor", "MarkVulnerable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingFOBCoreActor.OnActiveStatusChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bNewActiveStatus                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingFOBCoreActor::OnActiveStatusChanged(bool bNewActiveStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBCoreActor", "OnActiveStatusChanged");

	Params::BuildingFOBCoreActor_OnActiveStatusChanged Parms{};

	Parms.bNewActiveStatus = bNewActiveStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingFOBCoreActor.OnRep_bActive
// (Native, Protected)

void ABuildingFOBCoreActor::OnRep_bActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBCoreActor", "OnRep_bActive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingFOBCoreActor.OnRep_bTargetable
// (Native, Protected)

void ABuildingFOBCoreActor::OnRep_bTargetable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBCoreActor", "OnRep_bTargetable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingFOBCoreActor.OnRep_bVulnerable
// (Native, Protected)

void ABuildingFOBCoreActor::OnRep_bVulnerable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBCoreActor", "OnRep_bVulnerable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingFOBCoreActor.OnTargetableStatusChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bNewTargetableStatus                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingFOBCoreActor::OnTargetableStatusChanged(bool bNewTargetableStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBCoreActor", "OnTargetableStatusChanged");

	Params::BuildingFOBCoreActor_OnTargetableStatusChanged Parms{};

	Parms.bNewTargetableStatus = bNewTargetableStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingFOBCoreActor.OnVulnerableStatusChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bNewTargetableStatus                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingFOBCoreActor::OnVulnerableStatusChanged(bool bNewTargetableStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBCoreActor", "OnVulnerableStatusChanged");

	Params::BuildingFOBCoreActor_OnVulnerableStatusChanged Parms{};

	Parms.bNewTargetableStatus = bNewTargetableStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingFOBCoreActor.GetFOBBoundsBoxOverlappedActors
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ABuildingSMActor*>         OverlappedActors                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bSortByDistanceFromCore                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingFOBCoreActor::GetFOBBoundsBoxOverlappedActors(TArray<class ABuildingSMActor*>* OverlappedActors, bool bSortByDistanceFromCore) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBCoreActor", "GetFOBBoundsBoxOverlappedActors");

	Params::BuildingFOBCoreActor_GetFOBBoundsBoxOverlappedActors Parms{};

	Parms.bSortByDistanceFromCore = bSortByDistanceFromCore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OverlappedActors != nullptr)
		*OverlappedActors = std::move(Parms.OverlappedActors);
}


// Function FortniteGame.BuildingFOBCoreActor.GetFOBBoundsCenterAndExtents
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          OutCenter                                              (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          OutExtents                                             (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingFOBCoreActor::GetFOBBoundsCenterAndExtents(struct FVector* OutCenter, struct FVector* OutExtents) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBCoreActor", "GetFOBBoundsCenterAndExtents");

	Params::BuildingFOBCoreActor_GetFOBBoundsCenterAndExtents Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCenter != nullptr)
		*OutCenter = std::move(Parms.OutCenter);

	if (OutExtents != nullptr)
		*OutExtents = std::move(Parms.OutExtents);

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingFOBCoreActor.GetSimpleDeathFXTransform
// (Native, Event, Protected, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform ABuildingFOBCoreActor::GetSimpleDeathFXTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBCoreActor", "GetSimpleDeathFXTransform");

	Params::BuildingFOBCoreActor_GetSimpleDeathFXTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingFOBCoreActor.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingFOBCoreActor::IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBCoreActor", "IsActive");

	Params::BuildingFOBCoreActor_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingFOBCoreActor.IsActorWithinFOBBounds
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingFOBCoreActor::IsActorWithinFOBBounds(class AActor* Actor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBCoreActor", "IsActorWithinFOBBounds");

	Params::BuildingFOBCoreActor_IsActorWithinFOBBounds Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingFOBCoreSpawnPad.GetCoreSpawnTransform
// (Native, Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform ABuildingFOBCoreSpawnPad::GetCoreSpawnTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFOBCoreSpawnPad", "GetCoreSpawnTransform");

	Params::BuildingFOBCoreSpawnPad_GetCoreSpawnTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingFoundation.OnLevelShown
// (Final, Native, Protected)

void ABuildingFoundation::OnLevelShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFoundation", "OnLevelShown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingFoundation.OnLevelStreamedIn
// (Final, Native, Protected)

void ABuildingFoundation::OnLevelStreamedIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFoundation", "OnLevelStreamedIn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingFoundation.OnRep_LevelToStream
// (Native, Protected)

void ABuildingFoundation::OnRep_LevelToStream()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingFoundation", "OnRep_LevelToStream");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerStateZone.OnRep_AccumulatedItems
// (Final, Native, Public)

void AFortPlayerStateZone::OnRep_AccumulatedItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerStateZone", "OnRep_AccumulatedItems");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerStateZone.OnRep_NumRejoins
// (Final, Native, Protected)

void AFortPlayerStateZone::OnRep_NumRejoins()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerStateZone", "OnRep_NumRejoins");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerStateZone.GetNumOfAccumulatedItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortWorldItemDefinition*         ItemDefinition                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortPlayerStateZone::GetNumOfAccumulatedItem(const class UFortWorldItemDefinition* ItemDefinition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerStateZone", "GetNumOfAccumulatedItem");

	Params::FortPlayerStateZone_GetNumOfAccumulatedItem Parms{};

	Parms.ItemDefinition = ItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingItemCollectorActor.GetNumberOfTeamCaptures
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortTeam                               InTeam                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABuildingItemCollectorActor::GetNumberOfTeamCaptures(EFortTeam InTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingItemCollectorActor", "GetNumberOfTeamCaptures");

	Params::BuildingItemCollectorActor_GetNumberOfTeamCaptures Parms{};

	Parms.InTeam = InTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingItemCollectorActor.GetTeamDepositAmount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortTeam                               InTeam                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABuildingItemCollectorActor::GetTeamDepositAmount(EFortTeam InTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingItemCollectorActor", "GetTeamDepositAmount");

	Params::BuildingItemCollectorActor_GetTeamDepositAmount Parms{};

	Parms.InTeam = InTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingItemCollectorActor.GetTeamDepositGoal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortTeam                               InTeam                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABuildingItemCollectorActor::GetTeamDepositGoal(EFortTeam InTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingItemCollectorActor", "GetTeamDepositGoal");

	Params::BuildingItemCollectorActor_GetTeamDepositGoal Parms{};

	Parms.InTeam = InTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingItemCollectorActor.GetTeamReachedGoalCount
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// EFortTeam                               InTeam                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABuildingItemCollectorActor::GetTeamReachedGoalCount(EFortTeam InTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingItemCollectorActor", "GetTeamReachedGoalCount");

	Params::BuildingItemCollectorActor_GetTeamReachedGoalCount Parms{};

	Parms.InTeam = InTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingItemCollectorActor.OnItemCollectorStateChanged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EFortItemCollectorState                 InItemCollectorState                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingItemCollectorActor::OnItemCollectorStateChanged(EFortItemCollectorState InItemCollectorState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingItemCollectorActor", "OnItemCollectorStateChanged");

	Params::BuildingItemCollectorActor_OnItemCollectorStateChanged Parms{};

	Parms.InItemCollectorState = InItemCollectorState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingItemCollectorActor.OnRep_ControllingTeam
// (Final, Native, Protected)

void ABuildingItemCollectorActor::OnRep_ControllingTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingItemCollectorActor", "OnRep_ControllingTeam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingItemCollectorActor.OnRep_ItemCollectorState
// (Final, Native, Protected)

void ABuildingItemCollectorActor::OnRep_ItemCollectorState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingItemCollectorActor", "OnRep_ItemCollectorState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingItemCollectorActor.OnRep_TeamDepositAmounts
// (Final, Native, Protected)

void ABuildingItemCollectorActor::OnRep_TeamDepositAmounts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingItemCollectorActor", "OnRep_TeamDepositAmounts");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingItemCollectorActor.OnRep_TeamDepositGoals
// (Final, Native, Protected)

void ABuildingItemCollectorActor::OnRep_TeamDepositGoals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingItemCollectorActor", "OnRep_TeamDepositGoals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingItemCollectorActor.OnTeamReachedDepositGoal
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EFortTeam                               InControllingTeam                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingItemCollectorActor::OnTeamReachedDepositGoal(EFortTeam InControllingTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingItemCollectorActor", "OnTeamReachedDepositGoal");

	Params::BuildingItemCollectorActor_OnTeamReachedDepositGoal Parms{};

	Parms.InControllingTeam = InControllingTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingItemCollectorActor.SetItemCollectorState
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// EFortItemCollectorState                 InItemCollectorState                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingItemCollectorActor::SetItemCollectorState(EFortItemCollectorState InItemCollectorState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingItemCollectorActor", "SetItemCollectorState");

	Params::BuildingItemCollectorActor_SetItemCollectorState Parms{};

	Parms.InItemCollectorState = InItemCollectorState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingItemCollectorActor.UpdateTeamDepositValues
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<int32>                           DepositAmounts                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           DepositGoals                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void ABuildingItemCollectorActor::UpdateTeamDepositValues(const TArray<int32>& DepositAmounts, const TArray<int32>& DepositGoals)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingItemCollectorActor", "UpdateTeamDepositValues");

	Params::BuildingItemCollectorActor_UpdateTeamDepositValues Parms{};

	Parms.DepositAmounts = std::move(DepositAmounts);
	Parms.DepositGoals = std::move(DepositGoals);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerStateOutpost.OnRep_CanEditOutpost
// (Final, Native, Protected)

void AFortPlayerStateOutpost::OnRep_CanEditOutpost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerStateOutpost", "OnRep_CanEditOutpost");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerStateOutpost.OnRep_CraftingTableItemsRemaing
// (Final, Native, Private)

void AFortPlayerStateOutpost::OnRep_CraftingTableItemsRemaing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerStateOutpost", "OnRep_CraftingTableItemsRemaing");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerStateOutpost.ServerSetCanEditOutpost
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class AFortPlayerStateOutpost*          InPlayer                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCanEdit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerStateOutpost::ServerSetCanEditOutpost(class AFortPlayerStateOutpost* InPlayer, bool bCanEdit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerStateOutpost", "ServerSetCanEditOutpost");

	Params::FortPlayerStateOutpost_ServerSetCanEditOutpost Parms{};

	Parms.InPlayer = InPlayer;
	Parms.bCanEdit = bCanEdit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerStateOutpost.SetCanEditOutpost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerStateOutpost*          InPlayer                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCanEdit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerStateOutpost::SetCanEditOutpost(class AFortPlayerStateOutpost* InPlayer, bool bCanEdit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerStateOutpost", "SetCanEditOutpost");

	Params::FortPlayerStateOutpost_SetCanEditOutpost Parms{};

	Parms.InPlayer = InPlayer;
	Parms.bCanEdit = bCanEdit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerStateOutpost.CanEditOutpost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerStateOutpost::CanEditOutpost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerStateOutpost", "CanEditOutpost");

	Params::FortPlayerStateOutpost_CanEditOutpost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerStateOutpost.IsOutpostOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerStateOutpost::IsOutpostOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerStateOutpost", "IsOutpostOwner");

	Params::FortPlayerStateOutpost_IsOutpostOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingLayoutRequirement.ActivateRequirement
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bMakeVisible                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingLayoutRequirement::ActivateRequirement(bool bMakeVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingLayoutRequirement", "ActivateRequirement");

	Params::BuildingLayoutRequirement_ActivateRequirement Parms{};

	Parms.bMakeVisible = bMakeVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingLayoutRequirement.OnRep_RequirementStatus
// (Native, Protected)

void ABuildingLayoutRequirement::OnRep_RequirementStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingLayoutRequirement", "OnRep_RequirementStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingLayoutRequirement.OnRequirementSatisfyingActorDied
// (Native, Public, HasDefaults)
// Parameters:
// class AActor*                           DamagedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          HitLocation                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              FHitComponent                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Momentum                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingLayoutRequirement::OnRequirementSatisfyingActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingLayoutRequirement", "OnRequirementSatisfyingActorDied");

	Params::BuildingLayoutRequirement_OnRequirementSatisfyingActorDied Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.HitLocation = std::move(HitLocation);
	Parms.FHitComponent = FHitComponent;
	Parms.BoneName = BoneName;
	Parms.Momentum = std::move(Momentum);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingLayoutRequirement.SetRequiredResourceType
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// EFortResourceType                       DesiredResourceType                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingLayoutRequirement::SetRequiredResourceType(EFortResourceType DesiredResourceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingLayoutRequirement", "SetRequiredResourceType");

	Params::BuildingLayoutRequirement_SetRequiredResourceType Parms{};

	Parms.DesiredResourceType = DesiredResourceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingLayoutRequirement.SetRequirementVisible
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingLayoutRequirement::SetRequirementVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingLayoutRequirement", "SetRequirementVisible");

	Params::BuildingLayoutRequirement_SetRequirementVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDateTimeLibrary.GetMcpRelativeUtcNow
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UFortDateTimeLibrary::GetMcpRelativeUtcNow(class AFortPlayerController* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDateTimeLibrary", "GetMcpRelativeUtcNow");

	Params::FortDateTimeLibrary_GetMcpRelativeUtcNow Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDateTimeLibrary.GetTimespanAsText
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTimespan                        Timespan                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETimespanAsTextFormat                   FormatType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortDateTimeLibrary::GetTimespanAsText(const struct FTimespan& Timespan, bool bShowSeconds, ETimespanAsTextFormat FormatType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDateTimeLibrary", "GetTimespanAsText");

	Params::FortDateTimeLibrary_GetTimespanAsText Parms{};

	Parms.Timespan = std::move(Timespan);
	Parms.bShowSeconds = bShowSeconds;
	Parms.FormatType = FormatType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHealthRegenInterface.GetHealthRegenDelayGameplayEffect
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGameplayEffect*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayEffect* IFortHealthRegenInterface::GetHealthRegenDelayGameplayEffect() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHealthRegenInterface", "GetHealthRegenDelayGameplayEffect");

	Params::FortHealthRegenInterface_GetHealthRegenDelayGameplayEffect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHealthRegenInterface.GetHealthRegenGameplayEffect
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGameplayEffect*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayEffect* IFortHealthRegenInterface::GetHealthRegenGameplayEffect() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHealthRegenInterface", "GetHealthRegenGameplayEffect");

	Params::FortHealthRegenInterface_GetHealthRegenGameplayEffect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHealthRegenInterface.GetHealthRegenGameplayEffectClass
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UGameplayEffect>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UGameplayEffect> IFortHealthRegenInterface::GetHealthRegenGameplayEffectClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHealthRegenInterface", "GetHealthRegenGameplayEffectClass");

	Params::FortHealthRegenInterface_GetHealthRegenGameplayEffectClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHealthRegenInterface.GetShieldRegenDelayGameplayEffect
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGameplayEffect*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayEffect* IFortHealthRegenInterface::GetShieldRegenDelayGameplayEffect() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHealthRegenInterface", "GetShieldRegenDelayGameplayEffect");

	Params::FortHealthRegenInterface_GetShieldRegenDelayGameplayEffect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHealthRegenInterface.GetShieldRegenGameplayEffect
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGameplayEffect*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayEffect* IFortHealthRegenInterface::GetShieldRegenGameplayEffect() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHealthRegenInterface", "GetShieldRegenGameplayEffect");

	Params::FortHealthRegenInterface_GetShieldRegenGameplayEffect Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHealthRegenInterface.GetShieldRegenGameplayEffectClass
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UGameplayEffect>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UGameplayEffect> IFortHealthRegenInterface::GetShieldRegenGameplayEffectClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHealthRegenInterface", "GetShieldRegenGameplayEffectClass");

	Params::FortHealthRegenInterface_GetShieldRegenGameplayEffectClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingPropAtlas.InitializeAudio
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UAudioComponent*                  InPortalLoopingComp                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingPropAtlas::InitializeAudio(class UAudioComponent* InPortalLoopingComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingPropAtlas", "InitializeAudio");

	Params::BuildingPropAtlas_InitializeAudio Parms{};

	Parms.InPortalLoopingComp = InPortalLoopingComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingPropAtlas.InitializeRings
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              InRing1Comp                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              InRing2Comp                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              InRing3Comp                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingPropAtlas::InitializeRings(class UPrimitiveComponent* InRing1Comp, class UPrimitiveComponent* InRing2Comp, class UPrimitiveComponent* InRing3Comp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingPropAtlas", "InitializeRings");

	Params::BuildingPropAtlas_InitializeRings Parms{};

	Parms.InRing1Comp = InRing1Comp;
	Parms.InRing2Comp = InRing2Comp;
	Parms.InRing3Comp = InRing3Comp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingPropAtlas.OnRingSpinningLoop
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ABuildingPropAtlas::OnRingSpinningLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingPropAtlas", "OnRingSpinningLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingPropAtlas.PlayRingDamage
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DurationMin                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DurationMax                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MagnitudeMin                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MagnitudeMax                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingPropAtlas::PlayRingDamage(float DurationMin, float DurationMax, float MagnitudeMin, float MagnitudeMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingPropAtlas", "PlayRingDamage");

	Params::BuildingPropAtlas_PlayRingDamage Parms{};

	Parms.DurationMin = DurationMin;
	Parms.DurationMax = DurationMax;
	Parms.MagnitudeMin = MagnitudeMin;
	Parms.MagnitudeMax = MagnitudeMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingPropAtlas.PlayRingsIdleLoop
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// float                                   AnimDuration                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Ring1ZOffset                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingPropAtlas::PlayRingsIdleLoop(float AnimDuration, float Ring1ZOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingPropAtlas", "PlayRingsIdleLoop");

	Params::BuildingPropAtlas_PlayRingsIdleLoop Parms{};

	Parms.AnimDuration = AnimDuration;
	Parms.Ring1ZOffset = Ring1ZOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingPropAtlas.PlayRingSpinning
// (Final, BlueprintCosmetic, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         Ring1RateMin                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         Ring1RateMax                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         Ring2Rate                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         Ring3Rate                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void ABuildingPropAtlas::PlayRingSpinning(const struct FRotator& Ring1RateMin, const struct FRotator& Ring1RateMax, const struct FRotator& Ring2Rate, const struct FRotator& Ring3Rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingPropAtlas", "PlayRingSpinning");

	Params::BuildingPropAtlas_PlayRingSpinning Parms{};

	Parms.Ring1RateMin = std::move(Ring1RateMin);
	Parms.Ring1RateMax = std::move(Ring1RateMax);
	Parms.Ring2Rate = std::move(Ring2Rate);
	Parms.Ring3Rate = std::move(Ring3Rate);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingPropAtlas.PlayRingsReset
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// float                                   AnimDuration                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingPropAtlas::PlayRingsReset(float AnimDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingPropAtlas", "PlayRingsReset");

	Params::BuildingPropAtlas_PlayRingsReset Parms{};

	Parms.AnimDuration = AnimDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingPropAtlas.RestoreRingsHierarchy
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void ABuildingPropAtlas::RestoreRingsHierarchy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingPropAtlas", "RestoreRingsHierarchy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingPropAtlas.SetupAnimationSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InActivationTime                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTotalDefenseTime                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAnimSpeedStart                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InAnimSpeedEnd                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingPropAtlas::SetupAnimationSpeed(float InActivationTime, float InTotalDefenseTime, float InAnimSpeedStart, float InAnimSpeedEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingPropAtlas", "SetupAnimationSpeed");

	Params::BuildingPropAtlas_SetupAnimationSpeed Parms{};

	Parms.InActivationTime = InActivationTime;
	Parms.InTotalDefenseTime = InTotalDefenseTime;
	Parms.InAnimSpeedStart = InAnimSpeedStart;
	Parms.InAnimSpeedEnd = InAnimSpeedEnd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingPropAtlas.SetupAnimationTransition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         Mid                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InTransitionTime                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingPropAtlas::SetupAnimationTransition(class UMaterialInstanceDynamic* Mid, class FName ParamName, float InTransitionTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingPropAtlas", "SetupAnimationTransition");

	Params::BuildingPropAtlas_SetupAnimationTransition Parms{};

	Parms.Mid = Mid;
	Parms.ParamName = ParamName;
	Parms.InTransitionTime = InTransitionTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingPropAtlas.StopRingSpinning
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void ABuildingPropAtlas::StopRingSpinning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingPropAtlas", "StopRingSpinning");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingPropAtlas.GetDefenseAnimSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABuildingPropAtlas::GetDefenseAnimSpeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingPropAtlas", "GetDefenseAnimSpeed");

	Params::BuildingPropAtlas_GetDefenseAnimSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingPropAtlas.GetDefenseProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABuildingPropAtlas::GetDefenseProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingPropAtlas", "GetDefenseProgress");

	Params::BuildingPropAtlas_GetDefenseProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPatrolWardInterface.GetAffectingDistance
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IFortPatrolWardInterface::GetAffectingDistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPatrolWardInterface", "GetAffectingDistance");

	Params::FortPatrolWardInterface_GetAffectingDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPatrolWardInterface.GetAffectingType
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent, Const)
// Parameters:
// EWardAffectType                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EWardAffectType IFortPatrolWardInterface::GetAffectingType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPatrolWardInterface", "GetAffectingType");

	Params::FortPatrolWardInterface_GetAffectingType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoPreview.CreatePreviewMID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*               OverrideParentMaterial                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* AFortDecoPreview::CreatePreviewMID(class UMaterialInterface* OverrideParentMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoPreview", "CreatePreviewMID");

	Params::FortDecoPreview_CreatePreviewMID Parms{};

	Parms.OverrideParentMaterial = OverrideParentMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoPreview.GetTextureParameterValueFromMeshComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMeshComponent*                   MeshComp                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ElementIdx                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture* AFortDecoPreview::GetTextureParameterValueFromMeshComponent(class UMeshComponent* MeshComp, int32 ElementIdx, class FName ParamName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoPreview", "GetTextureParameterValueFromMeshComponent");

	Params::FortDecoPreview_GetTextureParameterValueFromMeshComponent Parms{};

	Parms.MeshComp = MeshComp;
	Parms.ElementIdx = ElementIdx;
	Parms.ParamName = ParamName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoPreview.OnBounceMotionUpdate
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   VectorScale                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDecoPreview::OnBounceMotionUpdate(float VectorScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoPreview", "OnBounceMotionUpdate");

	Params::FortDecoPreview_OnBounceMotionUpdate Parms{};

	Parms.VectorScale = VectorScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDecoPreview.OnInitializeDecoPreview
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ABuildingActor*                   NewBuildingActor                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortDecoItemDefinition*          NewDecoItemDefinition                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDecoPreview::OnInitializeDecoPreview(const class ABuildingActor* NewBuildingActor, const class UFortDecoItemDefinition* NewDecoItemDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoPreview", "OnInitializeDecoPreview");

	Params::FortDecoPreview_OnInitializeDecoPreview Parms{};

	Parms.NewBuildingActor = NewBuildingActor;
	Parms.NewDecoItemDefinition = NewDecoItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDecoPreview.OnUpdateScale
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InWorldSpacePivot                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDecoPreview::OnUpdateScale(float Scale, const struct FVector& InWorldSpacePivot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoPreview", "OnUpdateScale");

	Params::FortDecoPreview_OnUpdateScale Parms{};

	Parms.Scale = Scale;
	Parms.InWorldSpacePivot = std::move(InWorldSpacePivot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDecoPreview.OnUpdateVisuals
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSafeToPlace                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDecoPreview::OnUpdateVisuals(float DeltaSeconds, bool bSafeToPlace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoPreview", "OnUpdateVisuals");

	Params::FortDecoPreview_OnUpdateVisuals Parms{};

	Parms.DeltaSeconds = DeltaSeconds;
	Parms.bSafeToPlace = bSafeToPlace;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDecoPreview.SetScalarParameterValueOnAllPreviewMIDs
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ParamValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDecoPreview::SetScalarParameterValueOnAllPreviewMIDs(class FName ParamName, float ParamValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoPreview", "SetScalarParameterValueOnAllPreviewMIDs");

	Params::FortDecoPreview_SetScalarParameterValueOnAllPreviewMIDs Parms{};

	Parms.ParamName = ParamName;
	Parms.ParamValue = ParamValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDecoPreview.SetVectorParameterValueOnAllPreviewMIDs
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ParamValue                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDecoPreview::SetVectorParameterValueOnAllPreviewMIDs(class FName ParamName, const struct FLinearColor& ParamValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoPreview", "SetVectorParameterValueOnAllPreviewMIDs");

	Params::FortDecoPreview_SetVectorParameterValueOnAllPreviewMIDs Parms{};

	Parms.ParamName = ParamName;
	Parms.ParamValue = std::move(ParamValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingRift.BroadcastRiftSpawningAI
// (Net, Native, Event, NetMulticast, Public)

void ABuildingRift::BroadcastRiftSpawningAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingRift", "BroadcastRiftSpawningAI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingRift.OnActivated
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ABuildingRift::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingRift", "OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingRift.OnDeactivated
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ABuildingRift::OnDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingRift", "OnDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingRift.OnFinishedEncounterSpawn
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class AFortAIPawn*                      SpawnedAI                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingRift::OnFinishedEncounterSpawn(class AFortAIPawn* SpawnedAI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingRift", "OnFinishedEncounterSpawn");

	Params::BuildingRift_OnFinishedEncounterSpawn Parms{};

	Parms.SpawnedAI = SpawnedAI;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.BuildingRift.OnPlaced
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ABuildingRift::OnPlaced()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingRift", "OnPlaced");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingRift.OnRemoved
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ABuildingRift::OnRemoved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingRift", "OnRemoved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingRift.OnRep_RiftIsActive
// (Final, Native, Public)

void ABuildingRift::OnRep_RiftIsActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingRift", "OnRep_RiftIsActive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingRift.OnRep_RiftIsVisible
// (Final, Native, Public)

void ABuildingRift::OnRep_RiftIsVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingRift", "OnRep_RiftIsVisible");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingRift.OnSpawnAI
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ABuildingRift::OnSpawnAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingRift", "OnSpawnAI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingRift.OnStartedEncounterSpawn
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class AFortAIPawn*                      SpawnedAI                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingRift::OnStartedEncounterSpawn(class AFortAIPawn* SpawnedAI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingRift", "OnStartedEncounterSpawn");

	Params::BuildingRift_OnStartedEncounterSpawn Parms{};

	Parms.SpawnedAI = SpawnedAI;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortDamageSet.OnRep_DiceCritChance
// (Final, Native, Protected)

void UFortDamageSet::OnRep_DiceCritChance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDamageSet", "OnRep_DiceCritChance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDamageSet.OnRep_DiceCritMultiplier
// (Final, Native, Protected)

void UFortDamageSet::OnRep_DiceCritMultiplier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDamageSet", "OnRep_DiceCritMultiplier");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDamageSet.OnRep_HealthDamageScale
// (Final, Native, Protected)

void UFortDamageSet::OnRep_HealthDamageScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDamageSet", "OnRep_HealthDamageScale");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDamageSet.OnRep_KnockbackMagnitude
// (Final, Native, Protected)

void UFortDamageSet::OnRep_KnockbackMagnitude()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDamageSet", "OnRep_KnockbackMagnitude");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDamageSet.OnRep_KnockbackZAngle
// (Final, Native, Protected)

void UFortDamageSet::OnRep_KnockbackZAngle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDamageSet", "OnRep_KnockbackZAngle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDamageSet.OnRep_OutgoingAbilityDamage
// (Final, Native, Protected)

void UFortDamageSet::OnRep_OutgoingAbilityDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDamageSet", "OnRep_OutgoingAbilityDamage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDamageSet.OnRep_OutgoingBaseAbilityDamageMultiplier
// (Final, Native, Protected)

void UFortDamageSet::OnRep_OutgoingBaseAbilityDamageMultiplier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDamageSet", "OnRep_OutgoingBaseAbilityDamageMultiplier");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDamageSet.OnRep_OutgoingBaseDamage
// (Final, Native, Protected)

void UFortDamageSet::OnRep_OutgoingBaseDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDamageSet", "OnRep_OutgoingBaseDamage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDamageSet.OnRep_OutgoingBaseEnvironmentalDamage
// (Final, Native, Protected)

void UFortDamageSet::OnRep_OutgoingBaseEnvironmentalDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDamageSet", "OnRep_OutgoingBaseEnvironmentalDamage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDamageSet.OnRep_OutgoingBaseImpactDamage
// (Final, Native, Protected)

void UFortDamageSet::OnRep_OutgoingBaseImpactDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDamageSet", "OnRep_OutgoingBaseImpactDamage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDamageSet.OnRep_ShieldDamageScale
// (Final, Native, Protected)

void UFortDamageSet::OnRep_ShieldDamageScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDamageSet", "OnRep_ShieldDamageScale");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDamageSet.OnRep_StunTime
// (Final, Native, Protected)

void UFortDamageSet::OnRep_StunTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDamageSet", "OnRep_StunTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDamageSet.OnRep_WeaponSkill
// (Final, Native, Protected)

void UFortDamageSet::OnRep_WeaponSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDamageSet", "OnRep_WeaponSkill");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDamageSet.OnRep_ZoneCritMultiplier
// (Final, Native, Protected)

void UFortDamageSet::OnRep_ZoneCritMultiplier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDamageSet", "OnRep_ZoneCritMultiplier");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.AlignRotationToHitDirection
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          HitDirection                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::AlignRotationToHitDirection(const struct FVector& HitDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "AlignRotationToHitDirection");

	Params::FortPawn_AlignRotationToHitDirection Parms{};

	Parms.HitDirection = std::move(HitDirection);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.AnimMontage_LocalJumpToSectionName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SectionName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPawn::AnimMontage_LocalJumpToSectionName(class FName SectionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "AnimMontage_LocalJumpToSectionName");

	Params::FortPawn_AnimMontage_LocalJumpToSectionName Parms{};

	Parms.SectionName = SectionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.AnimMontage_LocalSetNextSectionName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*                     AnimMontage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SectionName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NextSectionName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::AnimMontage_LocalSetNextSectionName(class UAnimMontage* AnimMontage, class FName SectionName, class FName NextSectionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "AnimMontage_LocalSetNextSectionName");

	Params::FortPawn_AnimMontage_LocalSetNextSectionName Parms{};

	Parms.AnimMontage = AnimMontage;
	Parms.SectionName = SectionName;
	Parms.NextSectionName = NextSectionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.ApplyKnockback
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   KnockbackMagnitude                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   KnockbackZAngle                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ImpulseDir                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::ApplyKnockback(float KnockbackMagnitude, float KnockbackZAngle, const struct FVector& ImpulseDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "ApplyKnockback");

	Params::FortPawn_ApplyKnockback Parms{};

	Parms.KnockbackMagnitude = KnockbackMagnitude;
	Parms.KnockbackZAngle = KnockbackZAngle;
	Parms.ImpulseDir = std::move(ImpulseDir);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.AttachAssetToSocket
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAssetAttachment                 InAttachment                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortPawn::AttachAssetToSocket(const struct FAssetAttachment& InAttachment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "AttachAssetToSocket");

	Params::FortPawn_AttachAssetToSocket Parms{};

	Parms.InAttachment = std::move(InAttachment);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.ClearJumpFlashCount
// (Final, Native, Public)

void AFortPawn::ClearJumpFlashCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "ClearJumpFlashCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.ClientInternalEquipWeapon
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// class AFortWeapon*                      Weap                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::ClientInternalEquipWeapon(class AFortWeapon* Weap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "ClientInternalEquipWeapon");

	Params::FortPawn_ClientInternalEquipWeapon Parms{};

	Parms.Weap = Weap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.DetachAssetFromSocket
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::DetachAssetFromSocket(class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "DetachAssetFromSocket");

	Params::FortPawn_DetachAssetFromSocket Parms{};

	Parms.SocketName = SocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.DoFatalDamage
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UAbilitySystemComponent*          KillerAbilitySystemComponent                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::DoFatalDamage(class UAbilitySystemComponent* KillerAbilitySystemComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "DoFatalDamage");

	Params::FortPawn_DoFatalDamage Parms{};

	Parms.KillerAbilitySystemComponent = KillerAbilitySystemComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.EquipWeaponDefinition
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UFortWeaponItemDefinition*        WeaponData                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            ItemEntryGuid                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortWeapon*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortWeapon* AFortPawn::EquipWeaponDefinition(const class UFortWeaponItemDefinition* WeaponData, const struct FGuid& ItemEntryGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "EquipWeaponDefinition");

	Params::FortPawn_EquipWeaponDefinition Parms{};

	Parms.WeaponData = WeaponData;
	Parms.ItemEntryGuid = std::move(ItemEntryGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.ForceKill
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     DeathReason                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      KillerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           KillerActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::ForceKill(const struct FGameplayTag& DeathReason, class AController* KillerController, class AActor* KillerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "ForceKill");

	Params::FortPawn_ForceKill Parms{};

	Parms.DeathReason = std::move(DeathReason);
	Parms.KillerController = KillerController;
	Parms.KillerActor = KillerActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.GameplayCue
// (Native, Protected)
// Parameters:
// EGameplayCueEvent                       EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           Parameters                                             (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortPawn::GameplayCue(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GameplayCue");

	Params::FortPawn_GameplayCue Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.GameplayCue_Damage
// (Native, Protected, BlueprintCallable)
// Parameters:
// EGameplayCueEvent                       EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           Parameters                                             (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortPawn::GameplayCue_Damage(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GameplayCue_Damage");

	Params::FortPawn_GameplayCue_Damage Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.GameplayCue_InstantDeath
// (Native, Protected)
// Parameters:
// EGameplayCueEvent                       EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           Parameters                                             (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortPawn::GameplayCue_InstantDeath(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GameplayCue_InstantDeath");

	Params::FortPawn_GameplayCue_InstantDeath Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.GetAssetSkeletalMeshComponentAttachment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AFortPawn::GetAssetSkeletalMeshComponentAttachment(class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetAssetSkeletalMeshComponentAttachment");

	Params::FortPawn_GetAssetSkeletalMeshComponentAttachment Parms{};

	Parms.SocketName = SocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetCurrentMontageSectionTimeLeft
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortPawn::GetCurrentMontageSectionTimeLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetCurrentMontageSectionTimeLeft");

	Params::FortPawn_GetCurrentMontageSectionTimeLeft Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetMyMovementBaseActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AFortPawn::GetMyMovementBaseActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetMyMovementBaseActor");

	Params::FortPawn_GetMyMovementBaseActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetPawnMID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ElementIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* AFortPawn::GetPawnMID(int32 ElementIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetPawnMID");

	Params::FortPawn_GetPawnMID Parms{};

	Parms.ElementIndex = ElementIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetShieldOrHealthPercent
// (Final, Native, Public)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortPawn::GetShieldOrHealthPercent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetShieldOrHealthPercent");

	Params::FortPawn_GetShieldOrHealthPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.HandleIsDying
// (Native, Public)

void AFortPawn::HandleIsDying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "HandleIsDying");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.HandleIsHiddenForDeath
// (Native, Public)

void AFortPawn::HandleIsHiddenForDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "HandleIsHiddenForDeath");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.HideBodyOnDeath
// (Native, Public, BlueprintCallable)

void AFortPawn::HideBodyOnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "HideBodyOnDeath");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.InitializeDeathHitSocket
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          WorldLocation                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldNormal                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::InitializeDeathHitSocket(const struct FVector& WorldLocation, const struct FVector& WorldNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "InitializeDeathHitSocket");

	Params::FortPawn_InitializeDeathHitSocket Parms{};

	Parms.WorldLocation = std::move(WorldLocation);
	Parms.WorldNormal = std::move(WorldNormal);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.LaunchCharacterJump
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          LaunchVelocity                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bXYOverride                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bZOverride                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnoreFallDamage                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayFeedbackEvent                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::LaunchCharacterJump(const struct FVector& LaunchVelocity, bool bXYOverride, bool bZOverride, bool bIgnoreFallDamage, bool bPlayFeedbackEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "LaunchCharacterJump");

	Params::FortPawn_LaunchCharacterJump Parms{};

	Parms.LaunchVelocity = std::move(LaunchVelocity);
	Parms.bXYOverride = bXYOverride;
	Parms.bZOverride = bZOverride;
	Parms.bIgnoreFallDamage = bIgnoreFallDamage;
	Parms.bPlayFeedbackEvent = bPlayFeedbackEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.OnBaseChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           NewBase                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::OnBaseChanged(class AActor* NewBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnBaseChanged");

	Params::FortPawn_OnBaseChanged Parms{};

	Parms.NewBase = NewBase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortPawn.OnBumpPushedPawn
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPawn*                        InstigatedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PushTimeLeft                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::OnBumpPushedPawn(class AFortPawn* InstigatedBy, float PushTimeLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnBumpPushedPawn");

	Params::FortPawn_OnBumpPushedPawn Parms{};

	Parms.InstigatedBy = InstigatedBy;
	Parms.PushTimeLeft = PushTimeLeft;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortPawn.OnClearSentence
// (Event, Protected, BlueprintEvent)

void AFortPawn::OnClearSentence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnClearSentence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortPawn.OnDamagePlayEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                          Momentum                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AFortPawn*                        InstigatedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     EffectContext                                          (Parm, NativeAccessSpecifierPublic)

void AFortPawn::OnDamagePlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnDamagePlayEffects");

	Params::FortPawn_OnDamagePlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortPawn.OnDamageServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                          Momentum                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     EffectContext                                          (Parm, NativeAccessSpecifierPublic)

void AFortPawn::OnDamageServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnDamageServer");

	Params::FortPawn_OnDamageServer Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortPawn.OnDamageZoneStatusChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortDamageZone                         Zone                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStatus                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::OnDamageZoneStatusChanged(EFortDamageZone Zone, bool bStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnDamageZoneStatusChanged");

	Params::FortPawn_OnDamageZoneStatusChanged Parms{};

	Parms.Zone = Zone;
	Parms.bStatus = bStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortPawn.OnDeathPlayEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                          Momentum                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AFortPawn*                        InstigatedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     EffectContext                                          (Parm, NativeAccessSpecifierPublic)

void AFortPawn::OnDeathPlayEffects(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnDeathPlayEffects");

	Params::FortPawn_OnDeathPlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortPawn.OnDeathServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FVector                          Momentum                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     EffectContext                                          (Parm, NativeAccessSpecifierPublic)

void AFortPawn::OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnDeathServer");

	Params::FortPawn_OnDeathServer Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortPawn.OnDisplaySentence
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             SpeechText                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPawn::OnDisplaySentence(const class FText& SpeechText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnDisplaySentence");

	Params::FortPawn_OnDisplaySentence Parms{};

	Parms.SpeechText = std::move(SpeechText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortPawn.OnMontageEnded
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInterrupted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnMontageEnded");

	Params::FortPawn_OnMontageEnded Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.OnMontageStarted
// (Final, Native, Protected)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::OnMontageStarted(class UAnimMontage* Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnMontageStarted");

	Params::FortPawn_OnMontageStarted Parms{};

	Parms.Montage = Montage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.OnOutOfControlResistanceServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   ImpactDamageDone                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            SourceTags                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     EffectContext                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AController*                      EffectInstigator                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           EffectCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::OnOutOfControlResistanceServer(float ImpactDamageDone, const struct FGameplayTagContainer& SourceTags, const struct FGameplayEffectContextHandle& EffectContext, class AController* EffectInstigator, class AActor* EffectCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnOutOfControlResistanceServer");

	Params::FortPawn_OnOutOfControlResistanceServer Parms{};

	Parms.ImpactDamageDone = ImpactDamageDone;
	Parms.SourceTags = std::move(SourceTags);
	Parms.EffectContext = std::move(EffectContext);
	Parms.EffectInstigator = EffectInstigator;
	Parms.EffectCauser = EffectCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortPawn.OnRep_bWeaponHolstered
// (Final, Native, Public)

void AFortPawn::OnRep_bWeaponHolstered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnRep_bWeaponHolstered");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.OnRep_CurrentWeapon
// (Native, Public)

void AFortPawn::OnRep_CurrentWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnRep_CurrentWeapon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.OnRep_DamageZoneActiveBitMask
// (Final, Native, Public)

void AFortPawn::OnRep_DamageZoneActiveBitMask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnRep_DamageZoneActiveBitMask");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.OnRep_IsDBNO
// (Native, Protected)

void AFortPawn::OnRep_IsDBNO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnRep_IsDBNO");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.OnRep_IsKnockedBack
// (Final, Native, Protected)

void AFortPawn::OnRep_IsKnockedBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnRep_IsKnockedBack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.OnRep_JumpFlashCount
// (Final, Native, Public)

void AFortPawn::OnRep_JumpFlashCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnRep_JumpFlashCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.OnRep_PawnUniqueID
// (Final, Native, Public)

void AFortPawn::OnRep_PawnUniqueID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnRep_PawnUniqueID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.OnRep_PushMomentum
// (Final, Native, Private)

void AFortPawn::OnRep_PushMomentum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnRep_PushMomentum");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.OnRep_Sentence
// (Final, Native, Protected)

void AFortPawn::OnRep_Sentence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnRep_Sentence");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.OnRep_TeleportCounter
// (Native, Public)

void AFortPawn::OnRep_TeleportCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnRep_TeleportCounter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.OnRep_VocalChords
// (Native, Public)

void AFortPawn::OnRep_VocalChords()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnRep_VocalChords");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.OnStunned
// (BlueprintAuthorityOnly, Event, Public, BlueprintCallable, BlueprintEvent)

void AFortPawn::OnStunned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnStunned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortPawn.OnTeleported
// (Event, Public, BlueprintEvent)

void AFortPawn::OnTeleported()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnTeleported");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortPawn.OnWeaponEquipped
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortWeapon*                      NewWeapon                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortWeapon*                      PrevWeapon                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::OnWeaponEquipped(class AFortWeapon* NewWeapon, class AFortWeapon* PrevWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "OnWeaponEquipped");

	Params::FortPawn_OnWeaponEquipped Parms{};

	Parms.NewWeapon = NewWeapon;
	Parms.PrevWeapon = PrevWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortPawn.PawnStartFire
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   FireModeNum                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::PawnStartFire(uint8 FireModeNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "PawnStartFire");

	Params::FortPawn_PawnStartFire Parms{};

	Parms.FireModeNum = FireModeNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.PawnStopFire
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// uint8                                   FireModeNum                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::PawnStopFire(uint8 FireModeNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "PawnStopFire");

	Params::FortPawn_PawnStopFire Parms{};

	Parms.FireModeNum = FireModeNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.PawnUniqueIDSet
// (Event, Public, BlueprintEvent)

void AFortPawn::PawnUniqueIDSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "PawnUniqueIDSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortPawn.PickUpActor
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           PickupTarget                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortDecoItemDefinition*          PlacementDecoItemDefinition                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPawn::PickUpActor(class AActor* PickupTarget, const class UFortDecoItemDefinition* PlacementDecoItemDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "PickUpActor");

	Params::FortPawn_PickUpActor Parms{};

	Parms.PickupTarget = PickupTarget;
	Parms.PlacementDecoItemDefinition = PlacementDecoItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.PlayFootStepSound
// (Native, Public, BlueprintCallable)
// Parameters:
// int32                                   FootDown                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::PlayFootStepSound(int32 FootDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "PlayFootStepSound");

	Params::FortPawn_PlayFootStepSound Parms{};

	Parms.FootDown = FootDown;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.PlayLocalAnimMontage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*                     NewAnimMontage                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPlayRate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             StartSectionName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortPawn::PlayLocalAnimMontage(class UAnimMontage* NewAnimMontage, float InPlayRate, class FName StartSectionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "PlayLocalAnimMontage");

	Params::FortPawn_PlayLocalAnimMontage Parms{};

	Parms.NewAnimMontage = NewAnimMontage;
	Parms.InPlayRate = InPlayRate;
	Parms.StartSectionName = StartSectionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.PlaySound
// (Net, Native, Event, Public, NetClient)
// Parameters:
// class USoundBase*                       Sound                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VolumeMultiplier                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PitchMultiplier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::PlaySound(class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "PlaySound");

	Params::FortPawn_PlaySound Parms{};

	Parms.Sound = Sound;
	Parms.VolumeMultiplier = VolumeMultiplier;
	Parms.PitchMultiplier = PitchMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.PrototypeCharacterMovement
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// EMovementMode                           MovementMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          LaunchVelocity                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::PrototypeCharacterMovement(EMovementMode MovementMode, const struct FVector& LaunchVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "PrototypeCharacterMovement");

	Params::FortPawn_PrototypeCharacterMovement Parms{};

	Parms.MovementMode = MovementMode;
	Parms.LaunchVelocity = std::move(LaunchVelocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.RemoveCallout
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     CalloutTagToRemove                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::RemoveCallout(const struct FGameplayTag& CalloutTagToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "RemoveCallout");

	Params::FortPawn_RemoveCallout Parms{};

	Parms.CalloutTagToRemove = std::move(CalloutTagToRemove);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.ResetFallingHeight
// (Final, Native, Public, BlueprintCallable)

void AFortPawn::ResetFallingHeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "ResetFallingHeight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.ServerInternalEquipWeapon
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AFortWeapon*                      Weap                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::ServerInternalEquipWeapon(class AFortWeapon* Weap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "ServerInternalEquipWeapon");

	Params::FortPawn_ServerInternalEquipWeapon Parms{};

	Parms.Weap = Weap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.ServerTeleportNearLocation
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                          ActorLocation                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::ServerTeleportNearLocation(const struct FVector& ActorLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "ServerTeleportNearLocation");

	Params::FortPawn_ServerTeleportNearLocation Parms{};

	Parms.ActorLocation = std::move(ActorLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.SetCallout
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     CalloutTagToSet                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::SetCallout(const struct FGameplayTag& CalloutTagToSet, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "SetCallout");

	Params::FortPawn_SetCallout Parms{};

	Parms.CalloutTagToSet = std::move(CalloutTagToSet);
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.SetControlRecoveryBehavior
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortControlRecoveryBehavior            NewBehavior                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::SetControlRecoveryBehavior(EFortControlRecoveryBehavior NewBehavior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "SetControlRecoveryBehavior");

	Params::FortPawn_SetControlRecoveryBehavior Parms{};

	Parms.NewBehavior = NewBehavior;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.SetFNameBasedOnHitDirection
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          HitDirection                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NameResult                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NameFront                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NameBack                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NameLeft                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NameRight                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::SetFNameBasedOnHitDirection(const struct FVector& HitDirection, class FName* NameResult, class FName NameFront, class FName NameBack, class FName NameLeft, class FName NameRight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "SetFNameBasedOnHitDirection");

	Params::FortPawn_SetFNameBasedOnHitDirection Parms{};

	Parms.HitDirection = std::move(HitDirection);
	Parms.NameFront = NameFront;
	Parms.NameBack = NameBack;
	Parms.NameLeft = NameLeft;
	Parms.NameRight = NameRight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (NameResult != nullptr)
		*NameResult = Parms.NameResult;
}


// Function FortniteGame.FortPawn.SetHealth
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewHealthVal                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::SetHealth(float NewHealthVal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "SetHealth");

	Params::FortPawn_SetHealth Parms{};

	Parms.NewHealthVal = NewHealthVal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.SetHolsterWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bHolster                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayEquipAnim                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::SetHolsterWeapon(bool bHolster, bool bPlayEquipAnim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "SetHolsterWeapon");

	Params::FortPawn_SetHolsterWeapon Parms{};

	Parms.bHolster = bHolster;
	Parms.bPlayEquipAnim = bPlayEquipAnim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.SetIsKnockedBack
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bKnockback                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::SetIsKnockedBack(bool bKnockback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "SetIsKnockedBack");

	Params::FortPawn_SetIsKnockedBack Parms{};

	Parms.bKnockback = bKnockback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.SetMaxHealth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewHealthVal                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::SetMaxHealth(float NewHealthVal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "SetMaxHealth");

	Params::FortPawn_SetMaxHealth Parms{};

	Parms.NewHealthVal = NewHealthVal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.SetPawnAndControlRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         NewRotation                                            (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AFortPawn::SetPawnAndControlRotation(const struct FRotator& NewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "SetPawnAndControlRotation");

	Params::FortPawn_SetPawnAndControlRotation Parms{};

	Parms.NewRotation = std::move(NewRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.SetPawnVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewHidden                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPropagateToWeapon                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::SetPawnVisibility(bool bNewHidden, bool bPropagateToWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "SetPawnVisibility");

	Params::FortPawn_SetPawnVisibility Parms{};

	Parms.bNewHidden = bNewHidden;
	Parms.bPropagateToWeapon = bPropagateToWeapon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.SetSpawnSpot
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InSpawnSpot                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::SetSpawnSpot(class AActor* InSpawnSpot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "SetSpawnSpot");

	Params::FortPawn_SetSpawnSpot Parms{};

	Parms.InSpawnSpot = InSpawnSpot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.SpawnCameraLensEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AEmitterCameraLensEffectBase>LensEffectEmitterClass                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AEmitterCameraLensEffectBase*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AEmitterCameraLensEffectBase* AFortPawn::SpawnCameraLensEffect(TSubclassOf<class AEmitterCameraLensEffectBase> LensEffectEmitterClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "SpawnCameraLensEffect");

	Params::FortPawn_SpawnCameraLensEffect Parms{};

	Parms.LensEffectEmitterClass = LensEffectEmitterClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.SpawnCameraLensEffectDirectional
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class AFortEmitterCameraLensEffectDirectional>LensEffectEmitterClass                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        DamageDealer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AFortEmitterCameraLensEffectDirectional*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortEmitterCameraLensEffectDirectional* AFortPawn::SpawnCameraLensEffectDirectional(TSubclassOf<class AFortEmitterCameraLensEffectDirectional> LensEffectEmitterClass, class AFortPawn* DamageDealer, const struct FHitResult& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "SpawnCameraLensEffectDirectional");

	Params::FortPawn_SpawnCameraLensEffectDirectional Parms{};

	Parms.LensEffectEmitterClass = LensEffectEmitterClass;
	Parms.DamageDealer = DamageDealer;
	Parms.HitInfo = std::move(HitInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.StartPushMomentum
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          NewPushMomentum                                        (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::StartPushMomentum(const struct FVector& NewPushMomentum, float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "StartPushMomentum");

	Params::FortPawn_StartPushMomentum Parms{};

	Parms.NewPushMomentum = std::move(NewPushMomentum);
	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.StopPushMomentum
// (Final, Native, Public, BlueprintCallable)

void AFortPawn::StopPushMomentum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "StopPushMomentum");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.TriggerFeedbackEvent
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             EventName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        InstigatorPawn                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        Recipient                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OverriddenDelay                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::TriggerFeedbackEvent(class FName EventName, class AFortPawn* InstigatorPawn, class AFortPawn* Recipient, float OverriddenDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "TriggerFeedbackEvent");

	Params::FortPawn_TriggerFeedbackEvent Parms{};

	Parms.EventName = EventName;
	Parms.InstigatorPawn = InstigatorPawn;
	Parms.Recipient = Recipient;
	Parms.OverriddenDelay = OverriddenDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn.GetControlRecoveryBehavior
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortControlRecoveryBehavior            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortControlRecoveryBehavior AFortPawn::GetControlRecoveryBehavior() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetControlRecoveryBehavior");

	Params::FortPawn_GetControlRecoveryBehavior Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetControlResistance
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortPawn::GetControlResistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetControlResistance");

	Params::FortPawn_GetControlResistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetCurrentSentenceSpeechText
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AFortPawn::GetCurrentSentenceSpeechText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetCurrentSentenceSpeechText");

	Params::FortPawn_GetCurrentSentenceSpeechText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetDamageZone
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHitResult                       InHitResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// EFortDamageZone                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortDamageZone AFortPawn::GetDamageZone(const struct FHitResult& InHitResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetDamageZone");

	Params::FortPawn_GetDamageZone Parms{};

	Parms.InHitResult = std::move(InHitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetDefaultTargetingOrigin
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AFortPawn::GetDefaultTargetingOrigin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetDefaultTargetingOrigin");

	Params::FortPawn_GetDefaultTargetingOrigin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetDefaultTargetingRotation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator AFortPawn::GetDefaultTargetingRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetDefaultTargetingRotation");

	Params::FortPawn_GetDefaultTargetingRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetEncounterInfo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAIEncounterInfo*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAIEncounterInfo* AFortPawn::GetEncounterInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetEncounterInfo");

	Params::FortPawn_GetEncounterInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetHealth
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortPawn::GetHealth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetHealth");

	Params::FortPawn_GetHealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetHealthPercent
// (Native, Public, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortPawn::GetHealthPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetHealthPercent");

	Params::FortPawn_GetHealthPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetKnockbackMultiplier
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortPawn::GetKnockbackMultiplier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetKnockbackMultiplier");

	Params::FortPawn_GetKnockbackMultiplier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetKnockbackThreshold
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortPawn::GetKnockbackThreshold() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetKnockbackThreshold");

	Params::FortPawn_GetKnockbackThreshold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetLocalViewingPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerController*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APlayerController* AFortPawn::GetLocalViewingPlayerController() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetLocalViewingPlayerController");

	Params::FortPawn_GetLocalViewingPlayerController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetMaxControlResistance
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortPawn::GetMaxControlResistance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetMaxControlResistance");

	Params::FortPawn_GetMaxControlResistance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetMaxHealth
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortPawn::GetMaxHealth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetMaxHealth");

	Params::FortPawn_GetMaxHealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetMaxShield
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortPawn::GetMaxShield() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetMaxShield");

	Params::FortPawn_GetMaxShield Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetMeleeComboCounter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortPawn::GetMeleeComboCounter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetMeleeComboCounter");

	Params::FortPawn_GetMeleeComboCounter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetMeleeReticleStrikeAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bPrimaryInput                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortPawn::GetMeleeReticleStrikeAngle(bool bPrimaryInput) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetMeleeReticleStrikeAngle");

	Params::FortPawn_GetMeleeReticleStrikeAngle Parms{};

	Parms.bPrimaryInput = bPrimaryInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetMovementPredictionPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   PredictionDeltaTime                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AFortPawn::GetMovementPredictionPosition(float PredictionDeltaTime) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetMovementPredictionPosition");

	Params::FortPawn_GetMovementPredictionPosition Parms{};

	Parms.PredictionDeltaTime = PredictionDeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetShield
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortPawn::GetShield() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetShield");

	Params::FortPawn_GetShield Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.GetSphericalHitDirection
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          HitDirection                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Azimuth                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Elevation                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn::GetSphericalHitDirection(const struct FVector& HitDirection, float* Azimuth, float* Elevation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetSphericalHitDirection");

	Params::FortPawn_GetSphericalHitDirection Parms{};

	Parms.HitDirection = std::move(HitDirection);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Azimuth != nullptr)
		*Azimuth = Parms.Azimuth;

	if (Elevation != nullptr)
		*Elevation = Parms.Elevation;
}


// Function FortniteGame.FortPawn.GetTargetingTransform
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortAbilityTargetingSource             Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortGameplayAbility*             SourceAbility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform AFortPawn::GetTargetingTransform(EFortAbilityTargetingSource Source, class UFortGameplayAbility* SourceAbility) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "GetTargetingTransform");

	Params::FortPawn_GetTargetingTransform Parms{};

	Parms.Source = Source;
	Parms.SourceAbility = SourceAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.HasCurrentMontage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPawn::HasCurrentMontage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "HasCurrentMontage");

	Params::FortPawn_HasCurrentMontage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.IsActionInputIgnored
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPawn::IsActionInputIgnored() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "IsActionInputIgnored");

	Params::FortPawn_IsActionInputIgnored Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.IsAllowChainStun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPawn::IsAllowChainStun() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "IsAllowChainStun");

	Params::FortPawn_IsAllowChainStun Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.IsDBNO
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPawn::IsDBNO() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "IsDBNO");

	Params::FortPawn_IsDBNO Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.IsDead
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPawn::IsDead() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "IsDead");

	Params::FortPawn_IsDead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.IsFrontalHit
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          HitDirection                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPawn::IsFrontalHit(const struct FVector& HitDirection) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "IsFrontalHit");

	Params::FortPawn_IsFrontalHit Parms{};

	Parms.HitDirection = std::move(HitDirection);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.IsStaggered
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPawn::IsStaggered() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "IsStaggered");

	Params::FortPawn_IsStaggered Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn.IsWeaponHolstered
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPawn::IsWeaponHolstered() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn", "IsWeaponHolstered");

	Params::FortPawn_IsWeaponHolstered Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIPawn.GetGroundSpeedForUrgency
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortAIPawn*                      FortAIPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortMovementUrgency                    Urgency                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortAIPawn::GetGroundSpeedForUrgency(class AFortAIPawn* FortAIPawn, EFortMovementUrgency Urgency)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIPawn", "GetGroundSpeedForUrgency");

	Params::FortAIPawn_GetGroundSpeedForUrgency Parms{};

	Parms.FortAIPawn = FortAIPawn;
	Parms.Urgency = Urgency;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIPawn.GetMovementStyle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortAIPawn*                      FortAIPawn                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortMovementStyle                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortMovementStyle AFortAIPawn::GetMovementStyle(const class AFortAIPawn* FortAIPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIPawn", "GetMovementStyle");

	Params::FortAIPawn_GetMovementStyle Parms{};

	Parms.FortAIPawn = FortAIPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIPawn.GetMovementUrgency
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortAIPawn*                      FortAIPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortMovementUrgency                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortMovementUrgency AFortAIPawn::GetMovementUrgency(class AFortAIPawn* FortAIPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIPawn", "GetMovementUrgency");

	Params::FortAIPawn_GetMovementUrgency Parms{};

	Parms.FortAIPawn = FortAIPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIPawn.AddFortAbilitySet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAbilitySet*                  FortAbilitySet                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::AddFortAbilitySet(class UFortAbilitySet* FortAbilitySet)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "AddFortAbilitySet");

	Params::FortAIPawn_AddFortAbilitySet Parms{};

	Parms.FortAbilitySet = FortAbilitySet;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.AddUnreachablePickup
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPickup*                      Pickup                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::AddUnreachablePickup(class AFortPickup* Pickup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "AddUnreachablePickup");

	Params::FortAIPawn_AddUnreachablePickup Parms{};

	Parms.Pickup = Pickup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.CanHitTargetWithAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            GameplayAbilityTag                                     (Parm, NativeAccessSpecifierPublic)
// class AActor*                           CanHitTarget                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseIdealYawRotationToTarget                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAIPawn::CanHitTargetWithAbility(const struct FGameplayTagContainer& GameplayAbilityTag, class AActor* CanHitTarget, bool bUseIdealYawRotationToTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "CanHitTargetWithAbility");

	Params::FortAIPawn_CanHitTargetWithAbility Parms{};

	Parms.GameplayAbilityTag = std::move(GameplayAbilityTag);
	Parms.CanHitTarget = CanHitTarget;
	Parms.bUseIdealYawRotationToTarget = bUseIdealYawRotationToTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIPawn.ClearAIFocalPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bUseAttackingPriority                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::ClearAIFocalPoint(bool bUseAttackingPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "ClearAIFocalPoint");

	Params::FortAIPawn_ClearAIFocalPoint Parms{};

	Parms.bUseAttackingPriority = bUseAttackingPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.FinishedEncounterSpawn
// (Final, Native, Public)

void AFortAIPawn::FinishedEncounterSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "FinishedEncounterSpawn");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.ForceKillNoDBNO
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFortAIPawn::ForceKillNoDBNO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "ForceKillNoDBNO");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.GrabPickup
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPickup*                      Pickup                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::GrabPickup(class AFortPickup* Pickup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "GrabPickup");

	Params::FortAIPawn_GrabPickup Parms{};

	Parms.Pickup = Pickup;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.OnAppearanceOverridden
// (Event, Protected, BlueprintEvent)

void AFortAIPawn::OnAppearanceOverridden()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "OnAppearanceOverridden");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortAIPawn.OnBeginSleepEffects
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AFortAIPawn::OnBeginSleepEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "OnBeginSleepEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortAIPawn.OnCheatUpdateSpecialEventGE
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bShouldUseSpecialEventGE                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::OnCheatUpdateSpecialEventGE(bool bShouldUseSpecialEventGE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "OnCheatUpdateSpecialEventGE");

	Params::FortAIPawn_OnCheatUpdateSpecialEventGE Parms{};

	Parms.bShouldUseSpecialEventGE = bShouldUseSpecialEventGE;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortAIPawn.OnDefenderTrapSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ABuildingTrapDefender*            OldDefenderTrap                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::OnDefenderTrapSet(class ABuildingTrapDefender* OldDefenderTrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "OnDefenderTrapSet");

	Params::FortAIPawn_OnDefenderTrapSet Parms{};

	Parms.OldDefenderTrap = OldDefenderTrap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortAIPawn.OnEncounterSpawnEnableMeleeAttacking
// (Final, Native, Public)

void AFortAIPawn::OnEncounterSpawnEnableMeleeAttacking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "OnEncounterSpawnEnableMeleeAttacking");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.OnEncounterSpawnEnableRangedAttacking
// (Final, Native, Public)

void AFortAIPawn::OnEncounterSpawnEnableRangedAttacking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "OnEncounterSpawnEnableRangedAttacking");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.OnEndSleepEffects
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AFortAIPawn::OnEndSleepEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "OnEndSleepEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortAIPawn.OnFinishedEncounterSpawn
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AFortAIPawn::OnFinishedEncounterSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "OnFinishedEncounterSpawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortAIPawn.OnOutsideOfTetherBeyondMaxTimeAllowed
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAIPawn::OnOutsideOfTetherBeyondMaxTimeAllowed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "OnOutsideOfTetherBeyondMaxTimeAllowed");

	Params::FortAIPawn_OnOutsideOfTetherBeyondMaxTimeAllowed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIPawn.OnRep_AppearanceOverrideEntryIndex
// (Final, Native, Protected)

void AFortAIPawn::OnRep_AppearanceOverrideEntryIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "OnRep_AppearanceOverrideEntryIndex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.OnRep_bIsSleeping
// (Final, Native, Protected)

void AFortAIPawn::OnRep_bIsSleeping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "OnRep_bIsSleeping");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.OnRep_CurrentAIRotationRate
// (Final, Native, Protected)

void AFortAIPawn::OnRep_CurrentAIRotationRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "OnRep_CurrentAIRotationRate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.OnRep_CurrentFortAILODLevel
// (Final, Native, Public)

void AFortAIPawn::OnRep_CurrentFortAILODLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "OnRep_CurrentFortAILODLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.OnRep_CurrentWeapon
// (Native, Public)

void AFortAIPawn::OnRep_CurrentWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "OnRep_CurrentWeapon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.OnRep_EnableBlockingCollisionWithOtherAI
// (Final, Native, Public)

void AFortAIPawn::OnRep_EnableBlockingCollisionWithOtherAI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "OnRep_EnableBlockingCollisionWithOtherAI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.OnRep_Inventory
// (Final, Native, Public)

void AFortAIPawn::OnRep_Inventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "OnRep_Inventory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.OnRep_MinimapViewableDistance
// (Final, Native, Protected)

void AFortAIPawn::OnRep_MinimapViewableDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "OnRep_MinimapViewableDistance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.OnSleepingAIsFloorBuildingActorDied
// (Final, Native, Public, HasDefaults)
// Parameters:
// class AActor*                           DamagedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          HitLocation                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              FHitComponent                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Momentum                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::OnSleepingAIsFloorBuildingActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "OnSleepingAIsFloorBuildingActorDied");

	Params::FortAIPawn_OnSleepingAIsFloorBuildingActorDied Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.HitLocation = std::move(HitLocation);
	Parms.FHitComponent = FHitComponent;
	Parms.BoneName = BoneName;
	Parms.Momentum = std::move(Momentum);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.OnStartedEncounterSpawn
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AFortAIPawn::OnStartedEncounterSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "OnStartedEncounterSpawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortAIPawn.ResetAIRotationRateToDefault
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFortAIPawn::ResetAIRotationRateToDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "ResetAIRotationRateToDefault");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.ReviveFromDBNO
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFortAIPawn::ReviveFromDBNO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "ReviveFromDBNO");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.SetAIFocalPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           FocusTarget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          FocalPoint                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseAttackingPriority                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::SetAIFocalPoint(class AActor* FocusTarget, const struct FVector& FocalPoint, bool bUseAttackingPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "SetAIFocalPoint");

	Params::FortAIPawn_SetAIFocalPoint Parms{};

	Parms.FocusTarget = FocusTarget;
	Parms.FocalPoint = std::move(FocalPoint);
	Parms.bUseAttackingPriority = bUseAttackingPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.SetAIRotationRate
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         AIRotationRate                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AFortAIPawn::SetAIRotationRate(const struct FRotator& AIRotationRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "SetAIRotationRate");

	Params::FortAIPawn_SetAIRotationRate Parms{};

	Parms.AIRotationRate = std::move(AIRotationRate);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.SetAIType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortressAIType                         InAIType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::SetAIType(EFortressAIType InAIType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "SetAIType");

	Params::FortAIPawn_SetAIType Parms{};

	Parms.InAIType = InAIType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.SetBlockCollisionWithOtherAI
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInEnableBlockingCollisionWithOtherAI                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::SetBlockCollisionWithOtherAI(bool bInEnableBlockingCollisionWithOtherAI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "SetBlockCollisionWithOtherAI");

	Params::FortAIPawn_SetBlockCollisionWithOtherAI Parms{};

	Parms.bInEnableBlockingCollisionWithOtherAI = bInEnableBlockingCollisionWithOtherAI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.SetCanInteract
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    CanInteract                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::SetCanInteract(bool CanInteract)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "SetCanInteract");

	Params::FortAIPawn_SetCanInteract Parms{};

	Parms.CanInteract = CanInteract;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.SetCanSleep
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InCanSleep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::SetCanSleep(bool InCanSleep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "SetCanSleep");

	Params::FortAIPawn_SetCanSleep Parms{};

	Parms.InCanSleep = InCanSleep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.SetCollisionProfileName
// (Native, Public, BlueprintCallable)
// Parameters:
// class FName                             InCollisionProfileName                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::SetCollisionProfileName(class FName InCollisionProfileName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "SetCollisionProfileName");

	Params::FortAIPawn_SetCollisionProfileName Parms{};

	Parms.InCollisionProfileName = InCollisionProfileName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.SetCurrentAimTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           AimTarget                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::SetCurrentAimTarget(class AActor* AimTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "SetCurrentAimTarget");

	Params::FortAIPawn_SetCurrentAimTarget Parms{};

	Parms.AimTarget = AimTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.SetDefenderTrap
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class ABuildingTrapDefender*            InDefenderTrap                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::SetDefenderTrap(class ABuildingTrapDefender* InDefenderTrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "SetDefenderTrap");

	Params::FortAIPawn_SetDefenderTrap Parms{};

	Parms.InDefenderTrap = InDefenderTrap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.SetEncounterInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAIEncounterInfo*             InEncounterInfo                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::SetEncounterInfo(class UFortAIEncounterInfo* InEncounterInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "SetEncounterInfo");

	Params::FortAIPawn_SetEncounterInfo Parms{};

	Parms.InEncounterInfo = InEncounterInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.SetEyeColor
// (BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     NewEyeColor                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewEyeBrightness                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::SetEyeColor(const struct FLinearColor& NewEyeColor, float NewEyeBrightness)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "SetEyeColor");

	Params::FortAIPawn_SetEyeColor Parms{};

	Parms.NewEyeColor = std::move(NewEyeColor);
	Parms.NewEyeBrightness = NewEyeBrightness;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.SetIsCharging
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewIsCharging                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::SetIsCharging(bool bNewIsCharging)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "SetIsCharging");

	Params::FortAIPawn_SetIsCharging Parms{};

	Parms.bNewIsCharging = bNewIsCharging;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.SetMinimapViewableDistance
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewMinimapViewableDistance                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::SetMinimapViewableDistance(float NewMinimapViewableDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "SetMinimapViewableDistance");

	Params::FortAIPawn_SetMinimapViewableDistance Parms{};

	Parms.NewMinimapViewableDistance = NewMinimapViewableDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.SetMinimumAILOD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortAILODLevel                         MinimumAILOD                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::SetMinimumAILOD(EFortAILODLevel MinimumAILOD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "SetMinimumAILOD");

	Params::FortAIPawn_SetMinimumAILOD Parms{};

	Parms.MinimumAILOD = MinimumAILOD;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.SetMovementUrgency
// (Native, Public, BlueprintCallable)
// Parameters:
// EFortMovementUrgency                    Urgency                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::SetMovementUrgency(EFortMovementUrgency Urgency)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "SetMovementUrgency");

	Params::FortAIPawn_SetMovementUrgency Parms{};

	Parms.Urgency = Urgency;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.SetShouldStartSleeping
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bHintStartSleeping                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::SetShouldStartSleeping(bool bHintStartSleeping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "SetShouldStartSleeping");

	Params::FortAIPawn_SetShouldStartSleeping Parms{};

	Parms.bHintStartSleeping = bHintStartSleeping;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.SetSkinColor
// (BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     NewSkinColor                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewSkinBrightness                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::SetSkinColor(const struct FLinearColor& NewSkinColor, float NewSkinBrightness)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "SetSkinColor");

	Params::FortAIPawn_SetSkinColor Parms{};

	Parms.NewSkinColor = std::move(NewSkinColor);
	Parms.NewSkinBrightness = NewSkinBrightness;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.SetWeaponCollisionComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UShapeComponent*                  InWeaponCollisionComponent                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIPawn::SetWeaponCollisionComponent(class UShapeComponent* InWeaponCollisionComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "SetWeaponCollisionComponent");

	Params::FortAIPawn_SetWeaponCollisionComponent Parms{};

	Parms.InWeaponCollisionComponent = InWeaponCollisionComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.TriggerNoWeaponSpeech
// (Final, Native, Public, BlueprintCallable)

void AFortAIPawn::TriggerNoWeaponSpeech()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "TriggerNoWeaponSpeech");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.TurnOnSleepingOptimizations
// (Final, Native, Public, BlueprintCallable)

void AFortAIPawn::TurnOnSleepingOptimizations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "TurnOnSleepingOptimizations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIPawn.GetCharacterGender
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortCustomGender                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortCustomGender AFortAIPawn::GetCharacterGender() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "GetCharacterGender");

	Params::FortAIPawn_GetCharacterGender Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIPawn.GetCurrentAimTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AFortAIPawn::GetCurrentAimTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "GetCurrentAimTarget");

	Params::FortAIPawn_GetCurrentAimTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIPawn.GetDefenderItemInstanceId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AFortAIPawn::GetDefenderItemInstanceId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "GetDefenderItemInstanceId");

	Params::FortAIPawn_GetDefenderItemInstanceId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIPawn.GetDifficultyLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortAIPawn::GetDifficultyLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "GetDifficultyLevel");

	Params::FortAIPawn_GetDifficultyLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIPawn.GetImpactPhysicalSurfaceSound
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHitResult                       Impact                                                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class USoundBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USoundBase* AFortAIPawn::GetImpactPhysicalSurfaceSound(const struct FHitResult& Impact) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "GetImpactPhysicalSurfaceSound");

	Params::FortAIPawn_GetImpactPhysicalSurfaceSound Parms{};

	Parms.Impact = std::move(Impact);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIPawn.GetScoreValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortAIPawn::GetScoreValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "GetScoreValue");

	Params::FortAIPawn_GetScoreValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIPawn.GetSpawnLocation
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AFortAIPawn::GetSpawnLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "GetSpawnLocation");

	Params::FortAIPawn_GetSpawnLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIPawn.GetSpawnPointValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortAIPawn::GetSpawnPointValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "GetSpawnPointValue");

	Params::FortAIPawn_GetSpawnPointValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIPawn.GetSpawnRotation
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator AFortAIPawn::GetSpawnRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "GetSpawnRotation");

	Params::FortAIPawn_GetSpawnRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIPawn.HasTether
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAIPawn::HasTether() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "HasTether");

	Params::FortAIPawn_HasTether Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIPawn.IsDefender
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAIPawn::IsDefender() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "IsDefender");

	Params::FortAIPawn_IsDefender Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIPawn.IsInCombat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAIPawn::IsInCombat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "IsInCombat");

	Params::FortAIPawn_IsInCombat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIPawn.IsInsideTetherBounds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bUseRelaxedTetherBounds                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAIPawn::IsInsideTetherBounds(bool bUseRelaxedTetherBounds) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "IsInsideTetherBounds");

	Params::FortAIPawn_IsInsideTetherBounds Parms{};

	Parms.bUseRelaxedTetherBounds = bUseRelaxedTetherBounds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIPawn.K2_FindExistingItemForDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItemDefinition*              ItemDefinition                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInStorageVault                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* AFortAIPawn::K2_FindExistingItemForDefinition(const class UFortItemDefinition* ItemDefinition, bool bInStorageVault) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "K2_FindExistingItemForDefinition");

	Params::FortAIPawn_K2_FindExistingItemForDefinition Parms{};

	Parms.ItemDefinition = ItemDefinition;
	Parms.bInStorageVault = bInStorageVault;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIPawn.K2_GetDefenderItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* AFortAIPawn::K2_GetDefenderItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIPawn", "K2_GetDefenderItem");

	Params::FortAIPawn_K2_GetDefenderItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeapon.ClientGivenTo
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// class APawn*                            P                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeapon::ClientGivenTo(class APawn* P)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "ClientGivenTo");

	Params::FortWeapon_ClientGivenTo Parms{};

	Parms.P = P;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.ClientReportShotFlags
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// uint32                                  ShotFlags                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ShotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeapon::ClientReportShotFlags(uint32 ShotFlags, int32 ShotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "ClientReportShotFlags");

	Params::FortWeapon_ClientReportShotFlags Parms{};

	Parms.ShotFlags = ShotFlags;
	Parms.ShotIndex = ShotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.DetermineReticleColor
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FColor                           ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FColor AFortWeapon::DetermineReticleColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "DetermineReticleColor");

	Params::FortWeapon_DetermineReticleColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeapon.GameplayCue_Impact
// (Native, Protected)
// Parameters:
// EGameplayCueEvent                       EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           Parameters                                             (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortWeapon::GameplayCue_Impact(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "GameplayCue_Impact");

	Params::FortWeapon_GameplayCue_Impact Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.GameplayCue_Weapons_Activation
// (Native, Protected)
// Parameters:
// EGameplayCueEvent                       EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           Parameters                                             (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortWeapon::GameplayCue_Weapons_Activation(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "GameplayCue_Weapons_Activation");

	Params::FortWeapon_GameplayCue_Weapons_Activation Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.GetMeleeAttackPlayRate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortWeapon::GetMeleeAttackPlayRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "GetMeleeAttackPlayRate");

	Params::FortWeapon_GetMeleeAttackPlayRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeapon.K2_OnProgressiveCosmeticWatchedStatChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                             StatName                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeapon::K2_OnProgressiveCosmeticWatchedStatChanged(const class FName StatName, int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "K2_OnProgressiveCosmeticWatchedStatChanged");

	Params::FortWeapon_K2_OnProgressiveCosmeticWatchedStatChanged Parms{};

	Parms.StatName = StatName;
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortWeapon.K2_OnUnEquip
// (Event, Public, BlueprintEvent)

void AFortWeapon::K2_OnUnEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "K2_OnUnEquip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortWeapon.OnAmmoCountChanged
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AFortWeapon::OnAmmoCountChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnAmmoCountChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortWeapon.OnChargeDown
// (Event, Protected, BlueprintEvent)

void AFortWeapon::OnChargeDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnChargeDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortWeapon.OnChargeUp
// (Event, Protected, BlueprintEvent)

void AFortWeapon::OnChargeUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnChargeUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortWeapon.OnEndCharge
// (Event, Protected, BlueprintEvent)

void AFortWeapon::OnEndCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnEndCharge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortWeapon.OnEquippedWeaponDestory
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AFortWeapon::OnEquippedWeaponDestory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnEquippedWeaponDestory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortWeapon.OnInitAlteration
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortAlterationItemDefinition*    NewAlteration                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeapon::OnInitAlteration(class UFortAlterationItemDefinition* NewAlteration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnInitAlteration");

	Params::FortWeapon_OnInitAlteration Parms{};

	Parms.NewAlteration = NewAlteration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortWeapon.OnInitCosmeticAlterations
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FFortCosmeticModification        CosmeticMod                                            (Parm, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         DynamicMaterialInstance                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeapon::OnInitCosmeticAlterations(const struct FFortCosmeticModification& CosmeticMod, class UMaterialInstanceDynamic* DynamicMaterialInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnInitCosmeticAlterations");

	Params::FortWeapon_OnInitCosmeticAlterations Parms{};

	Parms.CosmeticMod = std::move(CosmeticMod);
	Parms.DynamicMaterialInstance = DynamicMaterialInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortWeapon.OnOutOfAmmoFire
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AFortWeapon::OnOutOfAmmoFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnOutOfAmmoFire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortWeapon.OnPawnMontageBlendingOut
// (Final, Native, Public)
// Parameters:
// class UAnimMontage*                     PawnMontage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInterrupted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeapon::OnPawnMontageBlendingOut(class UAnimMontage* PawnMontage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnPawnMontageBlendingOut");

	Params::FortWeapon_OnPawnMontageBlendingOut Parms{};

	Parms.PawnMontage = PawnMontage;
	Parms.bInterrupted = bInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.OnPawnMontageStarted
// (Final, Native, Public)
// Parameters:
// class UAnimMontage*                     PawnMontage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeapon::OnPawnMontageStarted(class UAnimMontage* PawnMontage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnPawnMontageStarted");

	Params::FortWeapon_OnPawnMontageStarted Parms{};

	Parms.PawnMontage = PawnMontage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.OnPlayImpactFX
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// EPhysicalSurface                        ImpactPhysicalSurface                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UParticleSystemComponent*         SpawnedPSC                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeapon::OnPlayImpactFX(const struct FHitResult& HitResult, EPhysicalSurface ImpactPhysicalSurface, class UParticleSystemComponent* SpawnedPSC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnPlayImpactFX");

	Params::FortWeapon_OnPlayImpactFX Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.ImpactPhysicalSurface = ImpactPhysicalSurface;
	Parms.SpawnedPSC = SpawnedPSC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortWeapon.OnPlayReloadFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// EFortReloadFXState                      ReloadStage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeapon::OnPlayReloadFX(EFortReloadFXState ReloadStage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnPlayReloadFX");

	Params::FortWeapon_OnPlayReloadFX Parms{};

	Parms.ReloadStage = ReloadStage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortWeapon.OnPlayWeaponFireFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bPersistentFire                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSecondaryFire                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeapon::OnPlayWeaponFireFX(bool bPersistentFire, bool bSecondaryFire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnPlayWeaponFireFX");

	Params::FortWeapon_OnPlayWeaponFireFX Parms{};

	Parms.bPersistentFire = bPersistentFire;
	Parms.bSecondaryFire = bSecondaryFire;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortWeapon.OnReachedMaxCharge
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AFortWeapon::OnReachedMaxCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnReachedMaxCharge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortWeapon.OnReachedMinCharge
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AFortWeapon::OnReachedMinCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnReachedMinCharge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortWeapon.OnRep_AmmoCount
// (Native, Protected)

void AFortWeapon::OnRep_AmmoCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnRep_AmmoCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.OnRep_ChargeStatusPack
// (Final, Native, Protected)

void AFortWeapon::OnRep_ChargeStatusPack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnRep_ChargeStatusPack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.OnRep_CosmeticStatValue
// (Final, Native, Private)

void AFortWeapon::OnRep_CosmeticStatValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnRep_CosmeticStatValue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.OnRep_EquippedWeaponDestroyWrapper
// (Final, Native, Protected)

void AFortWeapon::OnRep_EquippedWeaponDestroyWrapper()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnRep_EquippedWeaponDestroyWrapper");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.OnRep_ReplicatedAppliedAlterations
// (Native, Protected)

void AFortWeapon::OnRep_ReplicatedAppliedAlterations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnRep_ReplicatedAppliedAlterations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.OnRep_ReplicatedWeaponData
// (Native, Protected)

void AFortWeapon::OnRep_ReplicatedWeaponData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnRep_ReplicatedWeaponData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.OnSetTargeting
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bNewIsTargeting                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeapon::OnSetTargeting(bool bNewIsTargeting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnSetTargeting");

	Params::FortWeapon_OnSetTargeting Parms{};

	Parms.bNewIsTargeting = bNewIsTargeting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortWeapon.OnStartCharge
// (Event, Protected, BlueprintEvent)

void AFortWeapon::OnStartCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnStartCharge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortWeapon.OnStopWeaponFireFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)

void AFortWeapon::OnStopWeaponFireFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnStopWeaponFireFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortWeapon.OnWeaponAttached
// (Event, Public, BlueprintEvent)

void AFortWeapon::OnWeaponAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnWeaponAttached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortWeapon.OnWeaponVisibilityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeapon::OnWeaponVisibilityChanged(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "OnWeaponVisibilityChanged");

	Params::FortWeapon_OnWeaponVisibilityChanged Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortWeapon.PlayForceFeedback
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bSecondaryFire                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPersistentFire                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bImpact                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeapon::PlayForceFeedback(bool bSecondaryFire, bool bPersistentFire, bool bImpact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "PlayForceFeedback");

	Params::FortWeapon_PlayForceFeedback Parms{};

	Parms.bSecondaryFire = bSecondaryFire;
	Parms.bPersistentFire = bPersistentFire;
	Parms.bImpact = bImpact;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.PlayNativeImpactFX
// (Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FHitResult                       HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           GameplayCueParameters                                  (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortWeapon::PlayNativeImpactFX(const struct FHitResult& HitResult, const struct FGameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "PlayNativeImpactFX");

	Params::FortWeapon_PlayNativeImpactFX Parms{};

	Parms.HitResult = std::move(HitResult);
	Parms.GameplayCueParameters = std::move(GameplayCueParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.PlayReloadFX
// (BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// EFortReloadFXState                      ReloadStage                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeapon::PlayReloadFX(EFortReloadFXState ReloadStage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "PlayReloadFX");

	Params::FortWeapon_PlayReloadFX Parms{};

	Parms.ReloadStage = ReloadStage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.PlayWeaponFireFX
// (BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bSecondaryFire                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeapon::PlayWeaponFireFX(bool bSecondaryFire)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "PlayWeaponFireFX");

	Params::FortWeapon_PlayWeaponFireFX Parms{};

	Parms.bSecondaryFire = bSecondaryFire;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.Reload
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFortWeapon::Reload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "Reload");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.ResetTempWeaponMaterialOverride
// (Final, Native, Public, BlueprintCallable)

void AFortWeapon::ResetTempWeaponMaterialOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "ResetTempWeaponMaterialOverride");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.ServerReleaseWeaponPrimaryAbility
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void AFortWeapon::ServerReleaseWeaponPrimaryAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "ServerReleaseWeaponPrimaryAbility");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.ServerResetShotReport
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFortWeapon::ServerResetShotReport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "ServerResetShotReport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.ServerSetChargeState
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// uint8                                   NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeapon::ServerSetChargeState(uint8 NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "ServerSetChargeState");

	Params::FortWeapon_ServerSetChargeState Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.SetShouldDrawNativeReticle
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bInShouldDrawReticle                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeapon::SetShouldDrawNativeReticle(bool bInShouldDrawReticle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "SetShouldDrawNativeReticle");

	Params::FortWeapon_SetShouldDrawNativeReticle Parms{};

	Parms.bInShouldDrawReticle = bInShouldDrawReticle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.SetWeaponVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDesiredVisibility                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceUpdate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeapon::SetWeaponVisibility(bool bDesiredVisibility, bool bForceUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "SetWeaponVisibility");

	Params::FortWeapon_SetWeaponVisibility Parms{};

	Parms.bDesiredVisibility = bDesiredVisibility;
	Parms.bForceUpdate = bForceUpdate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.StopForceFeedback
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void AFortWeapon::StopForceFeedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "StopForceFeedback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.StopWeaponFireFX
// (BlueprintCosmetic, Native, Public, BlueprintCallable)

void AFortWeapon::StopWeaponFireFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "StopWeaponFireFX");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.UseWeaponDurability
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   DurabilityScale                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeapon::UseWeaponDurability(float DurabilityScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "UseWeaponDurability");

	Params::FortWeapon_UseWeaponDurability Parms{};

	Parms.DurabilityScale = DurabilityScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeapon.GetAlterations
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortAlterationItemDefinition*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortAlterationItemDefinition*> AFortWeapon::GetAlterations() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "GetAlterations");

	Params::FortWeapon_GetAlterations Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeapon.GetBulletsPerClip
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortWeapon::GetBulletsPerClip() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "GetBulletsPerClip");

	Params::FortWeapon_GetBulletsPerClip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeapon.GetChargePercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortWeapon::GetChargePercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "GetChargePercent");

	Params::FortWeapon_GetChargePercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeapon.GetCoreAnimation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortWeaponCoreAnimation                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortWeaponCoreAnimation AFortWeapon::GetCoreAnimation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "GetCoreAnimation");

	Params::FortWeapon_GetCoreAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeapon.GetCurrentMaxChargePercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortWeapon::GetCurrentMaxChargePercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "GetCurrentMaxChargePercent");

	Params::FortWeapon_GetCurrentMaxChargePercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeapon.GetDamageStartLocation
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          AimDir                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AFortWeapon::GetDamageStartLocation(struct FVector* AimDir) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "GetDamageStartLocation");

	Params::FortWeapon_GetDamageStartLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AimDir != nullptr)
		*AimDir = std::move(Parms.AimDir);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeapon.GetLocalMagazineAmmoCount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortWeapon::GetLocalMagazineAmmoCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "GetLocalMagazineAmmoCount");

	Params::FortWeapon_GetLocalMagazineAmmoCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeapon.GetLocalRemainingAmmo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortWeapon::GetLocalRemainingAmmo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "GetLocalRemainingAmmo");

	Params::FortWeapon_GetLocalRemainingAmmo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeapon.GetMagazineAmmoCount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortWeapon::GetMagazineAmmoCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "GetMagazineAmmoCount");

	Params::FortWeapon_GetMagazineAmmoCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeapon.GetMuzzleLocation
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AFortWeapon::GetMuzzleLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "GetMuzzleLocation");

	Params::FortWeapon_GetMuzzleLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeapon.GetMuzzleSocketTransform
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform AFortWeapon::GetMuzzleSocketTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "GetMuzzleSocketTransform");

	Params::FortWeapon_GetMuzzleSocketTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeapon.GetRange
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortWeapon::GetRange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "GetRange");

	Params::FortWeapon_GetRange Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeapon.GetReloadProgress
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortWeapon::GetReloadProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "GetReloadProgress");

	Params::FortWeapon_GetReloadProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeapon.GetReloadTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortWeapon::GetReloadTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "GetReloadTime");

	Params::FortWeapon_GetReloadTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeapon.GetRemainingAmmo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortWeapon::GetRemainingAmmo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "GetRemainingAmmo");

	Params::FortWeapon_GetRemainingAmmo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeapon.GetReticleColor
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FColor                           ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FColor AFortWeapon::GetReticleColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "GetReticleColor");

	Params::FortWeapon_GetReticleColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeapon.IsProjectileWeapon
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortWeapon::IsProjectileWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "IsProjectileWeapon");

	Params::FortWeapon_IsProjectileWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeapon.IsReloading
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortWeapon::IsReloading() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeapon", "IsReloading");

	Params::FortWeapon_IsReloading Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDecoTool.ClientDestroyDecoPreview
// (Net, NetReliable, Native, Event, Protected, NetClient)

void AFortDecoTool::ClientDestroyDecoPreview()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoTool", "ClientDestroyDecoPreview");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDecoTool.OnCarriedActorDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                           DestroyedActor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDecoTool::OnCarriedActorDestroyed(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoTool", "OnCarriedActorDestroyed");

	Params::FortDecoTool_OnCarriedActorDestroyed Parms{};

	Parms.DestroyedActor = DestroyedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDecoTool.OnRep_CarriedActor
// (Final, Native, Protected)
// Parameters:
// class AActor*                           OldCarriedActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDecoTool::OnRep_CarriedActor(class AActor* OldCarriedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoTool", "OnRep_CarriedActor");

	Params::FortDecoTool_OnRep_CarriedActor Parms{};

	Parms.OldCarriedActor = OldCarriedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDecoTool.OnRep_ItemDefinition
// (Final, Native, Protected)

void AFortDecoTool::OnRep_ItemDefinition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoTool", "OnRep_ItemDefinition");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDecoTool.ServerSpawnDeco
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Rotation                                               (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class ABuildingSMActor*                 AttachedActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDecoTool::ServerSpawnDeco(const struct FVector& Location, const struct FRotator& Rotation, class ABuildingSMActor* AttachedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDecoTool", "ServerSpawnDeco");

	Params::FortDecoTool_ServerSpawnDeco Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.AttachedActor = AttachedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingStructuralSupportSystem.GetLogicalBuildingGroundSupportedActors
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LogicalIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ABuildingSMActor*>         LogicalBuildingGroundSupportedActors                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UBuildingStructuralSupportSystem::GetLogicalBuildingGroundSupportedActors(int32 LogicalIndex, TArray<class ABuildingSMActor*>* LogicalBuildingGroundSupportedActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingStructuralSupportSystem", "GetLogicalBuildingGroundSupportedActors");

	Params::BuildingStructuralSupportSystem_GetLogicalBuildingGroundSupportedActors Parms{};

	Parms.LogicalIndex = LogicalIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (LogicalBuildingGroundSupportedActors != nullptr)
		*LogicalBuildingGroundSupportedActors = std::move(Parms.LogicalBuildingGroundSupportedActors);
}


// Function FortniteGame.BuildingStructuralSupportSystem.K2_GetLogicalBuildingActors
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   LogicalIdx                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ABuildingSMActor*>         LogicalBuildingActors                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UBuildingStructuralSupportSystem::K2_GetLogicalBuildingActors(int32 LogicalIdx, TArray<class ABuildingSMActor*>* LogicalBuildingActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingStructuralSupportSystem", "K2_GetLogicalBuildingActors");

	Params::BuildingStructuralSupportSystem_K2_GetLogicalBuildingActors Parms{};

	Parms.LogicalIdx = LogicalIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (LogicalBuildingActors != nullptr)
		*LogicalBuildingActors = std::move(Parms.LogicalBuildingActors);
}


// Function FortniteGame.BuildingStructuralSupportSystem.IsBuildingActorStructurallySupported
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABuildingSMActor*                 ActorToCheck                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBuildingStructuralSupportSystem::IsBuildingActorStructurallySupported(const class ABuildingSMActor* ActorToCheck) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingStructuralSupportSystem", "IsBuildingActorStructurallySupported");

	Params::BuildingStructuralSupportSystem_IsBuildingActorStructurallySupported Parms{};

	Parms.ActorToCheck = ActorToCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortReplaySpectator.SetCloudAltitudes
// (Final, Exec, Native, Private)
// Parameters:
// float                                   NewCloudAltitude                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortReplaySpectator::SetCloudAltitudes(float NewCloudAltitude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortReplaySpectator", "SetCloudAltitudes");

	Params::FortReplaySpectator_SetCloudAltitudes Parms{};

	Parms.NewCloudAltitude = NewCloudAltitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingTrap.AddDamageComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              DamageComponent                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingTrap::AddDamageComponent(class UPrimitiveComponent* DamageComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "AddDamageComponent");

	Params::BuildingTrap_AddDamageComponent Parms{};

	Parms.DamageComponent = DamageComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingTrap.AddTriggerComponent
// (Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              TriggerComponent                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingTrap::AddTriggerComponent(class UPrimitiveComponent* TriggerComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "AddTriggerComponent");

	Params::BuildingTrap_AddTriggerComponent Parms{};

	Parms.TriggerComponent = TriggerComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingTrap.AttemptRetrigger
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   Seconds                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingTrap::AttemptRetrigger(float Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "AttemptRetrigger");

	Params::BuildingTrap_AttemptRetrigger Parms{};

	Parms.Seconds = Seconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingTrap.FinishTrigger
// (Native, Public, BlueprintCallable)

void ABuildingTrap::FinishTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "FinishTrigger");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingTrap.GetArmTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABuildingTrap::GetArmTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "GetArmTime");

	Params::BuildingTrap_GetArmTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTrap.GetCenter
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ABuildingTrap::GetCenter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "GetCenter");

	Params::BuildingTrap_GetCenter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTrap.GetReloadTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABuildingTrap::GetReloadTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "GetReloadTime");

	Params::BuildingTrap_GetReloadTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTrap.OnDestroy
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ABuildingTrap::OnDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "OnDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingTrap.OnFinishedBuilding
// (Event, Public, BlueprintEvent)

void ABuildingTrap::OnFinishedBuilding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "OnFinishedBuilding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingTrap.OnInitAlteration
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UFortAlterationItemDefinition*    NewAlteration                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingTrap::OnInitAlteration(class UFortAlterationItemDefinition* NewAlteration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "OnInitAlteration");

	Params::BuildingTrap_OnInitAlteration Parms{};

	Parms.NewAlteration = NewAlteration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.BuildingTrap.OnInitCosmeticAlterations
// (Event, Protected, BlueprintEvent)
// Parameters:
// struct FFortCosmeticModification        CosmeticMod                                            (Parm, NativeAccessSpecifierPublic)

void ABuildingTrap::OnInitCosmeticAlterations(const struct FFortCosmeticModification& CosmeticMod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "OnInitCosmeticAlterations");

	Params::BuildingTrap_OnInitCosmeticAlterations Parms{};

	Parms.CosmeticMod = std::move(CosmeticMod);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.BuildingTrap.OnOutOfDurability
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ABuildingTrap::OnOutOfDurability()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "OnOutOfDurability");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingTrap.OnPlaced
// (Event, Public, BlueprintEvent)

void ABuildingTrap::OnPlaced()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "OnPlaced");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingTrap.OnReloadBegin
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ABuildingTrap::OnReloadBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "OnReloadBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingTrap.OnReloadEnd
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ABuildingTrap::OnReloadEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "OnReloadEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingTrap.OnRep_AttachedTo
// (Native, Protected)

void ABuildingTrap::OnRep_AttachedTo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "OnRep_AttachedTo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingTrap.OnRep_ReplicatedAppliedAlterations
// (Native, Protected)

void ABuildingTrap::OnRep_ReplicatedAppliedAlterations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "OnRep_ReplicatedAppliedAlterations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingTrap.OnTriggerTouch
// (Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void ABuildingTrap::OnTriggerTouch(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "OnTriggerTouch");

	Params::BuildingTrap_OnTriggerTouch Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingTrap.TriggerIfAppropriate
// (BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)

void ABuildingTrap::TriggerIfAppropriate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "TriggerIfAppropriate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingTrap.BP_ShouldTrigger
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class AActor*>                   TouchingActors                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingTrap::BP_ShouldTrigger(const TArray<class AActor*>& TouchingActors) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "BP_ShouldTrigger");

	Params::BuildingTrap_BP_ShouldTrigger Parms{};

	Parms.TouchingActors = std::move(TouchingActors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTrap.GetAlterations
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortAlterationItemDefinition*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortAlterationItemDefinition*> ABuildingTrap::GetAlterations() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "GetAlterations");

	Params::BuildingTrap_GetAlterations Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTrap.GetBuildingAttachedTo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABuildingSMActor*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABuildingSMActor* ABuildingTrap::GetBuildingAttachedTo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "GetBuildingAttachedTo");

	Params::BuildingTrap_GetBuildingAttachedTo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTrap.GetDamageDelay
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABuildingTrap::GetDamageDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "GetDamageDelay");

	Params::BuildingTrap_GetDamageDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTrap.GetDurabilityPercent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABuildingTrap::GetDurabilityPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "GetDurabilityPercent");

	Params::BuildingTrap_GetDurabilityPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTrap.GetFireDelay
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABuildingTrap::GetFireDelay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "GetFireDelay");

	Params::BuildingTrap_GetFireDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTrap.GetFireLocationAndRotation
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform ABuildingTrap::GetFireLocationAndRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "GetFireLocationAndRotation");

	Params::BuildingTrap_GetFireLocationAndRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTrap.GetMaxDurability
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ABuildingTrap::GetMaxDurability() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "GetMaxDurability");

	Params::BuildingTrap_GetMaxDurability Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTrap.GetTouchingDamageTargets
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortTargetFilter                Filter                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> ABuildingTrap::GetTouchingDamageTargets(const struct FFortTargetFilter& Filter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "GetTouchingDamageTargets");

	Params::BuildingTrap_GetTouchingDamageTargets Parms{};

	Parms.Filter = std::move(Filter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTrap.GetTrapLevel
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABuildingTrap::GetTrapLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "GetTrapLevel");

	Params::BuildingTrap_GetTrapLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTrap.GetTrapRating
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ABuildingTrap::GetTrapRating() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "GetTrapRating");

	Params::BuildingTrap_GetTrapRating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTrap.HasDurability
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ABuildingTrap::HasDurability() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrap", "HasDurability");

	Params::BuildingTrap_HasDurability Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionState.OnAllPlayersLoadedIn
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)

void AFortMissionState::OnAllPlayersLoadedIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionState", "OnAllPlayersLoadedIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortMissionState.OnAllPlayersLoadedInWrapper
// (Final, Native, Public)

void AFortMissionState::OnAllPlayersLoadedInWrapper()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionState", "OnAllPlayersLoadedInWrapper");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionState.OnMatchStarted
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)

void AFortMissionState::OnMatchStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionState", "OnMatchStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortMissionState.OnWorldReady
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)

void AFortMissionState::OnWorldReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionState", "OnWorldReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortMissionState.SendMissionUIEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            EventTags                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortMissionState::SendMissionUIEvent(const struct FGameplayTagContainer& EventTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionState", "SendMissionUIEvent");

	Params::FortMissionState_SendMissionUIEvent Parms{};

	Parms.EventTags = std::move(EventTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionState.SetTimerForOnAllPlayersLoadedIn
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                                   Timer                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortMissionState::SetTimerForOnAllPlayersLoadedIn(float Timer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionState", "SetTimerForOnAllPlayersLoadedIn");

	Params::FortMissionState_SetTimerForOnAllPlayersLoadedIn Parms{};

	Parms.Timer = Timer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionState.UpdateUI
// (Native, Public, BlueprintCallable)

void AFortMissionState::UpdateUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionState", "UpdateUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortObjectiveBase.AttemptMissionSave
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:
// class FString                           OptionalSaveName                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortObjectiveBase::AttemptMissionSave(const class FString& OptionalSaveName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "AttemptMissionSave");

	Params::FortObjectiveBase_AttemptMissionSave Parms{};

	Parms.OptionalSaveName = std::move(OptionalSaveName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortObjectiveBase.BlueprintOnActivated
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)

void AFortObjectiveBase::BlueprintOnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "BlueprintOnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortObjectiveBase.BlueprintOnObjectiveEnd
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)
// Parameters:
// EFortObjectiveStatus                    Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortObjectiveBase::BlueprintOnObjectiveEnd(EFortObjectiveStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "BlueprintOnObjectiveEnd");

	Params::FortObjectiveBase_BlueprintOnObjectiveEnd Parms{};

	Parms.Status = Status;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortObjectiveBase.BlueprintOnStartPlaying
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)

void AFortObjectiveBase::BlueprintOnStartPlaying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "BlueprintOnStartPlaying");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortObjectiveBase.BlueprintPostObjectiveLoad
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)

void AFortObjectiveBase::BlueprintPostObjectiveLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "BlueprintPostObjectiveLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortObjectiveBase.ClearObjectiveTimer
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)

void AFortObjectiveBase::ClearObjectiveTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "ClearObjectiveTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortObjectiveBase.DrawAttentionToUI
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFortObjectiveBase::DrawAttentionToUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "DrawAttentionToUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortObjectiveBase.EnableTick
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortObjectiveBase::EnableTick(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "EnableTick");

	Params::FortObjectiveBase_EnableTick Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortObjectiveBase.GetRewardItemsByTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     RewardTag                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortWorldItemDefinition*> OutRewardItems                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortObjectiveBase::GetRewardItemsByTag(const struct FGameplayTag& RewardTag, TArray<class UFortWorldItemDefinition*>* OutRewardItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "GetRewardItemsByTag");

	Params::FortObjectiveBase_GetRewardItemsByTag Parms{};

	Parms.RewardTag = std::move(RewardTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRewardItems != nullptr)
		*OutRewardItems = std::move(Parms.OutRewardItems);
}


// Function FortniteGame.FortObjectiveBase.GrantRewardsByTag
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     RewardTag                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortRewardType                         RewardType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortObjectiveBase::GrantRewardsByTag(const struct FGameplayTag& RewardTag, EFortRewardType RewardType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "GrantRewardsByTag");

	Params::FortObjectiveBase_GrantRewardsByTag Parms{};

	Parms.RewardTag = std::move(RewardTag);
	Parms.RewardType = RewardType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortObjectiveBase.OnGenericObjectiveEvent
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)

void AFortObjectiveBase::OnGenericObjectiveEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "OnGenericObjectiveEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortObjectiveBase.OnRep_bIsObjectiveVisible
// (Final, Native, Protected)

void AFortObjectiveBase::OnRep_bIsObjectiveVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "OnRep_bIsObjectiveVisible");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortObjectiveBase.OnRep_ObjectiveStatus
// (Final, Native, Protected)

void AFortObjectiveBase::OnRep_ObjectiveStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "OnRep_ObjectiveStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortObjectiveBase.OnRep_ObjectiveVisibilityOverride
// (Final, Native, Protected)

void AFortObjectiveBase::OnRep_ObjectiveVisibilityOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "OnRep_ObjectiveVisibilityOverride");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortObjectiveBase.PauseObjectiveTimer
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)

void AFortObjectiveBase::PauseObjectiveTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "PauseObjectiveTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortObjectiveBase.SetObjectiveTimer
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:
// class FString                           FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimerLength                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStartPaused                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortObjectiveBase::SetObjectiveTimer(const class FString& FunctionName, float TimerLength, bool bStartPaused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "SetObjectiveTimer");

	Params::FortObjectiveBase_SetObjectiveTimer Parms{};

	Parms.FunctionName = std::move(FunctionName);
	Parms.TimerLength = TimerLength;
	Parms.bStartPaused = bStartPaused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortObjectiveBase.SetUiVisibility
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsObjectiveVisible                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortObjectiveBase::SetUiVisibility(bool bInIsObjectiveVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "SetUiVisibility");

	Params::FortObjectiveBase_SetUiVisibility Parms{};

	Parms.bInIsObjectiveVisible = bInIsObjectiveVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortObjectiveBase.SetUIVisibilityOverride
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// EFortMissionVisibilityOverride          InVisibilityOverride                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortObjectiveBase::SetUIVisibilityOverride(EFortMissionVisibilityOverride InVisibilityOverride)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "SetUIVisibilityOverride");

	Params::FortObjectiveBase_SetUIVisibilityOverride Parms{};

	Parms.InVisibilityOverride = InVisibilityOverride;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortObjectiveBase.StartPlayingObjective
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortObjectiveBase::StartPlayingObjective()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "StartPlayingObjective");

	Params::FortObjectiveBase_StartPlayingObjective Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortObjectiveBase.StopObjective
// (BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:
// EFortObjectiveStatus                    Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Description                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortBadgeItemDefinition*         ExtraBadgeToGrant                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortObjectiveBase::StopObjective(EFortObjectiveStatus Status, const class FString& Description, class UFortBadgeItemDefinition* ExtraBadgeToGrant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "StopObjective");

	Params::FortObjectiveBase_StopObjective Parms{};

	Parms.Status = Status;
	Parms.Description = std::move(Description);
	Parms.ExtraBadgeToGrant = ExtraBadgeToGrant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortObjectiveBase.UnpauseObjectiveTimer
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)

void AFortObjectiveBase::UnpauseObjectiveTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "UnpauseObjectiveTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortObjectiveBase.BlueprintGetNumProgressBars
// (BlueprintCosmetic, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortObjectiveBase::BlueprintGetNumProgressBars() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "BlueprintGetNumProgressBars");

	Params::FortObjectiveBase_BlueprintGetNumProgressBars Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortObjectiveBase.BlueprintGetObjectiveDisplayText
// (BlueprintCosmetic, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AFortObjectiveBase::BlueprintGetObjectiveDisplayText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "BlueprintGetObjectiveDisplayText");

	Params::FortObjectiveBase_BlueprintGetObjectiveDisplayText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortObjectiveBase.BlueprintGetProgressBarColor
// (BlueprintCosmetic, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ProgressBarIdx                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor AFortObjectiveBase::BlueprintGetProgressBarColor(int32 ProgressBarIdx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "BlueprintGetProgressBarColor");

	Params::FortObjectiveBase_BlueprintGetProgressBarColor Parms{};

	Parms.ProgressBarIdx = ProgressBarIdx;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortObjectiveBase.BlueprintGetProgressBarPercentage
// (BlueprintCosmetic, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ProgressBarIdx                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortObjectiveBase::BlueprintGetProgressBarPercentage(int32 ProgressBarIdx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "BlueprintGetProgressBarPercentage");

	Params::FortObjectiveBase_BlueprintGetProgressBarPercentage Parms{};

	Parms.ProgressBarIdx = ProgressBarIdx;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortObjectiveBase.BlueprintGetProgressBarText
// (BlueprintCosmetic, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ProgressBarIdx                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AFortObjectiveBase::BlueprintGetProgressBarText(int32 ProgressBarIdx) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "BlueprintGetProgressBarText");

	Params::FortObjectiveBase_BlueprintGetProgressBarText Parms{};

	Parms.ProgressBarIdx = ProgressBarIdx;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortObjectiveBase.GetMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortMission*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortMission* AFortObjectiveBase::GetMission() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "GetMission");

	Params::FortObjectiveBase_GetMission Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortObjectiveBase.GetMissionGuid
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                            ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGuid AFortObjectiveBase::GetMissionGuid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "GetMissionGuid");

	Params::FortObjectiveBase_GetMissionGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortObjectiveBase.GetObjectiveDisplayString
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AFortObjectiveBase::GetObjectiveDisplayString() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "GetObjectiveDisplayString");

	Params::FortObjectiveBase_GetObjectiveDisplayString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortObjectiveBase.GetObjectiveTimerTimeRemaining
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortObjectiveBase::GetObjectiveTimerTimeRemaining() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "GetObjectiveTimerTimeRemaining");

	Params::FortObjectiveBase_GetObjectiveTimerTimeRemaining Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortObjectiveBase.GetTimerComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortMissionTimerComponent*       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortMissionTimerComponent* AFortObjectiveBase::GetTimerComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "GetTimerComponent");

	Params::FortObjectiveBase_GetTimerComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortObjectiveBase.IsObjectiveTimerPaused
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortObjectiveBase::IsObjectiveTimerPaused() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "IsObjectiveTimerPaused");

	Params::FortObjectiveBase_IsObjectiveTimerPaused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortObjectiveBase.IsRelevantToASpecificTeam
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortObjectiveBase::IsRelevantToASpecificTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "IsRelevantToASpecificTeam");

	Params::FortObjectiveBase_IsRelevantToASpecificTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortObjectiveBase.IsRelevantToTeam
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortTeam                               Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortObjectiveBase::IsRelevantToTeam(EFortTeam Team) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveBase", "IsRelevantToTeam");

	Params::FortObjectiveBase_IsRelevantToTeam Parms{};

	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDefenderItemDefinition.GetDefenderSubtype
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortDefenderSubtype                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortDefenderSubtype UFortDefenderItemDefinition::GetDefenderSubtype() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderItemDefinition", "GetDefenderSubtype");

	Params::FortDefenderItemDefinition_GetDefenderSubtype Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDefenderItemDefinition.GetDefenderSubtypeTag
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UFortDefenderItemDefinition::GetDefenderSubtypeTag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderItemDefinition", "GetDefenderSubtypeTag");

	Params::FortDefenderItemDefinition_GetDefenderSubtypeTag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTrapCeiling_Falling.TrapActivated
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// float                                   CooldownDuration                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingTrapCeiling_Falling::TrapActivated(const float CooldownDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrapCeiling_Falling", "TrapActivated");

	Params::BuildingTrapCeiling_Falling_TrapActivated Parms{};

	Parms.CooldownDuration = CooldownDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.BuildingTrapDefender.ClearCurrentDefender
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bForceKillDefender                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingTrapDefender::ClearCurrentDefender(bool bForceKillDefender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrapDefender", "ClearCurrentDefender");

	Params::BuildingTrapDefender_ClearCurrentDefender Parms{};

	Parms.bForceKillDefender = bForceKillDefender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.BuildingTrapDefender.DeployDefender
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AFortPlayerController*            ItemSelectorPC                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortDefenderItem*                InDefenderItem                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InDefenderSquadId                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItem*                   WeaponToGive                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AmmoQuantity                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingTrapDefender::DeployDefender(const class AFortPlayerController* ItemSelectorPC, const class UFortDefenderItem* InDefenderItem, const class FName& InDefenderSquadId, const class UFortWorldItem* WeaponToGive, const int32 AmmoQuantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrapDefender", "DeployDefender");

	Params::BuildingTrapDefender_DeployDefender Parms{};

	Parms.ItemSelectorPC = ItemSelectorPC;
	Parms.InDefenderItem = InDefenderItem;
	Parms.InDefenderSquadId = InDefenderSquadId;
	Parms.WeaponToGive = WeaponToGive;
	Parms.AmmoQuantity = AmmoQuantity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.BuildingTrapDefender.GetLastInteractErrorText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText ABuildingTrapDefender::GetLastInteractErrorText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrapDefender", "GetLastInteractErrorText");

	Params::BuildingTrapDefender_GetLastInteractErrorText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTrapDefender.OnRep_DefenderItemDefinition
// (Event, Protected, BlueprintEvent)

void ABuildingTrapDefender::OnRep_DefenderItemDefinition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrapDefender", "OnRep_DefenderItemDefinition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingTrapDefender.OnRep_DefenderPawn
// (Event, Protected, BlueprintEvent)

void ABuildingTrapDefender::OnRep_DefenderPawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrapDefender", "OnRep_DefenderPawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.BuildingTrapDefender.RemoveCurrentDefender
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerStateZone*             RequestingPlayer                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRemovalCausedByPlayerJoin                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingTrapDefender::RemoveCurrentDefender(class AFortPlayerStateZone* RequestingPlayer, bool bRemovalCausedByPlayerJoin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrapDefender", "RemoveCurrentDefender");

	Params::BuildingTrapDefender_RemoveCurrentDefender Parms{};

	Parms.RequestingPlayer = RequestingPlayer;
	Parms.bRemovalCausedByPlayerJoin = bRemovalCausedByPlayerJoin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.BuildingTrapDefender.SpawnDefenderfromItem
// (Final, BlueprintAuthorityOnly, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UFortAccountItem*                 DefenderItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             DefenderSquadId                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       SpawnTransform                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                           InOwner                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortAIPawn*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortAIPawn* ABuildingTrapDefender::SpawnDefenderfromItem(class UFortAccountItem* DefenderItem, const class FName& DefenderSquadId, const struct FTransform& SpawnTransform, class AActor* InOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrapDefender", "SpawnDefenderfromItem");

	Params::BuildingTrapDefender_SpawnDefenderfromItem Parms{};

	Parms.DefenderItem = DefenderItem;
	Parms.DefenderSquadId = DefenderSquadId;
	Parms.SpawnTransform = std::move(SpawnTransform);
	Parms.InOwner = InOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTrapDefender.SupplyDefender
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UFortWorldItem*                   WeaponToGive                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AmmoQuantity                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ABuildingTrapDefender::SupplyDefender(const class UFortWorldItem* WeaponToGive, const int32 AmmoQuantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrapDefender", "SupplyDefender");

	Params::BuildingTrapDefender_SupplyDefender Parms{};

	Parms.WeaponToGive = WeaponToGive;
	Parms.AmmoQuantity = AmmoQuantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingTrapDefender.TakeWeaponAwayFromDefender
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UFortWorldItem*                   WeaponToTakeAway                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItem*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortWorldItem* ABuildingTrapDefender::TakeWeaponAwayFromDefender(class UFortWorldItem* WeaponToTakeAway)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrapDefender", "TakeWeaponAwayFromDefender");

	Params::BuildingTrapDefender_TakeWeaponAwayFromDefender Parms{};

	Parms.WeaponToTakeAway = WeaponToTakeAway;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTrapDefender.GetDefenderSpawnTransform
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform ABuildingTrapDefender::GetDefenderSpawnTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTrapDefender", "GetDefenderSpawnTransform");

	Params::BuildingTrapDefender_GetDefenderSpawnTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTurretComponent.AttemptSetCurrentTarget
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           NewTarget                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBuildingTurretComponent::AttemptSetCurrentTarget(class AActor* NewTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTurretComponent", "AttemptSetCurrentTarget");

	Params::BuildingTurretComponent_AttemptSetCurrentTarget Parms{};

	Parms.NewTarget = NewTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTurretComponent.OnFiringTimer
// (Native, Protected)

void UBuildingTurretComponent::OnFiringTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTurretComponent", "OnFiringTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingTurretComponent.OnPerformTargetValidation
// (Native, Protected)

void UBuildingTurretComponent::OnPerformTargetValidation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTurretComponent", "OnPerformTargetValidation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingTurretComponent.OnRep_CurrentTarget
// (Native, Protected)
// Parameters:
// class AActor*                           OldTarget                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBuildingTurretComponent::OnRep_CurrentTarget(class AActor* OldTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTurretComponent", "OnRep_CurrentTarget");

	Params::BuildingTurretComponent_OnRep_CurrentTarget Parms{};

	Parms.OldTarget = OldTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingTurretComponent.OnTargetingBeginOverlap
// (Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UBuildingTurretComponent::OnTargetingBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTurretComponent", "OnTargetingBeginOverlap");

	Params::BuildingTurretComponent_OnTargetingBeginOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingTurretComponent.OnTargetingEndOverlap
// (Native, Protected)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBuildingTurretComponent::OnTargetingEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTurretComponent", "OnTargetingEndOverlap");

	Params::BuildingTurretComponent_OnTargetingEndOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingTurretComponent.SetTargetingOverlapComponent
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              NewTargetingOverlapComponent                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBuildingTurretComponent::SetTargetingOverlapComponent(class UPrimitiveComponent* NewTargetingOverlapComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTurretComponent", "SetTargetingOverlapComponent");

	Params::BuildingTurretComponent_SetTargetingOverlapComponent Parms{};

	Parms.NewTargetingOverlapComponent = NewTargetingOverlapComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingTurretComponent.ChooseBestTarget
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class AActor*>                   InOutPotentialTargets                                  (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UBuildingTurretComponent::ChooseBestTarget(TArray<class AActor*>& InOutPotentialTargets) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTurretComponent", "ChooseBestTarget");

	Params::BuildingTurretComponent_ChooseBestTarget Parms{};

	Parms.InOutPotentialTargets = std::move(InOutPotentialTargets);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InOutPotentialTargets = std::move(Parms.InOutPotentialTargets);

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTurretComponent.IsValidTarget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                           InTarget                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBuildingTurretComponent::IsValidTarget(class AActor* InTarget) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTurretComponent", "IsValidTarget");

	Params::BuildingTurretComponent_IsValidTarget Parms{};

	Parms.InTarget = InTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.BuildingTurretComponent_MOBA.OnAllyHarmed
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InAllyActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           InHarmingActor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBuildingTurretComponent_MOBA::OnAllyHarmed(class AActor* InAllyActor, class AActor* InHarmingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingTurretComponent_MOBA", "OnAllyHarmed");

	Params::BuildingTurretComponent_MOBA_OnAllyHarmed Parms{};

	Parms.InAllyActor = InAllyActor;
	Parms.InHarmingActor = InHarmingActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingWall.OnRep_bDoorCollisionDisabled
// (Native, Protected)

void ABuildingWall::OnRep_bDoorCollisionDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingWall", "OnRep_bDoorCollisionDisabled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.BuildingWall.OnRep_bDoorOpen
// (Native, Protected)

void ABuildingWall::OnRep_bDoorOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BuildingWall", "OnRep_bDoorOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCombatManager.GetEventHeatPercent
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortCombatEvents                       CombatEvent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortCombatManager::GetEventHeatPercent(EFortCombatEvents CombatEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCombatManager", "GetEventHeatPercent");

	Params::FortCombatManager_GetEventHeatPercent Parms{};

	Parms.CombatEvent = CombatEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCombatManager.GetEventHeatPercentTotal
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortCombatEvents                       CombatEvent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortCombatManager::GetEventHeatPercentTotal(EFortCombatEvents CombatEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCombatManager", "GetEventHeatPercentTotal");

	Params::FortCombatManager_GetEventHeatPercentTotal Parms{};

	Parms.CombatEvent = CombatEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCombatManager.OnRep_CombatEventHeat
// (Final, Native, Public)

void AFortCombatManager::OnRep_CombatEventHeat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCombatManager", "OnRep_CombatEventHeat");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCombatManager.OnThresholdChange
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortCombatThresholds                   OldThreshold                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortCombatThresholds                   NewThreshold                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortCombatManager::OnThresholdChange(EFortCombatThresholds OldThreshold, EFortCombatThresholds NewThreshold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCombatManager", "OnThresholdChange");

	Params::FortCombatManager_OnThresholdChange Parms{};

	Parms.OldThreshold = OldThreshold;
	Parms.NewThreshold = NewThreshold;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortScoreStylingData.GetScoreStylingData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EFortUIScoreType                        Rarity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortScoreStylingInfo            ScoreStylingInfo                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortScoreStylingData::GetScoreStylingData(EFortUIScoreType Rarity, struct FFortScoreStylingInfo* ScoreStylingInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortScoreStylingData", "GetScoreStylingData");

	Params::FortScoreStylingData_GetScoreStylingData Parms{};

	Parms.Rarity = Rarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ScoreStylingInfo != nullptr)
		*ScoreStylingInfo = std::move(Parms.ScoreStylingInfo);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSpawnableByPlacementSystemInterface.GetMission
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortMission*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortMission* IFortSpawnableByPlacementSystemInterface::GetMission() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpawnableByPlacementSystemInterface", "GetMission");

	Params::FortSpawnableByPlacementSystemInterface_GetMission Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSpawnableByPlacementSystemInterface.GetMissionGuid
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                            ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGuid IFortSpawnableByPlacementSystemInterface::GetMissionGuid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpawnableByPlacementSystemInterface", "GetMissionGuid");

	Params::FortSpawnableByPlacementSystemInterface_GetMissionGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCompendiumItemDefinition.GetQuests
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortQuestManager*                QuestManager                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortQuestItem*>           OwnedQuests                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class UFortQuestItemDefinition*> UnownedQuests                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortCompendiumItemDefinition::GetQuests(class UFortQuestManager* QuestManager, TArray<class UFortQuestItem*>* OwnedQuests, TArray<class UFortQuestItemDefinition*>* UnownedQuests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCompendiumItemDefinition", "GetQuests");

	Params::FortCompendiumItemDefinition_GetQuests Parms{};

	Parms.QuestManager = QuestManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OwnedQuests != nullptr)
		*OwnedQuests = std::move(Parms.OwnedQuests);

	if (UnownedQuests != nullptr)
		*UnownedQuests = std::move(Parms.UnownedQuests);
}


// Function FortniteGame.FortCompendiumItemDefinition.GetEventName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortCompendiumItemDefinition::GetEventName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCompendiumItemDefinition", "GetEventName");

	Params::FortCompendiumItemDefinition_GetEventName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAthenaSupplyDrop.SpawnPickup
// (Final, BlueprintAuthorityOnly, Native, Protected, HasDefaults, BlueprintCallable)
// Parameters:
// class UFortWorldItemDefinition*         ItemDefinition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumberToSpawn                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        TriggeringPawn                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Position                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Direction                                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPickup*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPickup* AFortAthenaSupplyDrop::SpawnPickup(class UFortWorldItemDefinition* ItemDefinition, int32 NumberToSpawn, class AFortPawn* TriggeringPawn, const struct FVector& Position, const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaSupplyDrop", "SpawnPickup");

	Params::FortAthenaSupplyDrop_SpawnPickup Parms{};

	Parms.ItemDefinition = ItemDefinition;
	Parms.NumberToSpawn = NumberToSpawn;
	Parms.TriggeringPawn = TriggeringPawn;
	Parms.Position = std::move(Position);
	Parms.Direction = std::move(Direction);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAthenaSupplyDrop.GroundTrace
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          TraceStart                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          TraceEnd                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       OutHit                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAthenaSupplyDrop::GroundTrace(const struct FVector& TraceStart, const struct FVector& TraceEnd, struct FHitResult* OutHit) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaSupplyDrop", "GroundTrace");

	Params::FortAthenaSupplyDrop_GroundTrace Parms{};

	Parms.TraceStart = std::move(TraceStart);
	Parms.TraceEnd = std::move(TraceEnd);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHit != nullptr)
		*OutHit = std::move(Parms.OutHit);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinitionTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponItemDefinitionTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinitionTooltip", "GetNumericValue");

	Params::FortWeaponItemDefinitionTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinitionTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponItemDefinitionTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinitionTooltip", "GetTextForToken");

	Params::FortWeaponItemDefinitionTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponItemDefinitionTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponItemDefinitionTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponItemDefinitionTooltip", "GetTokenizedDescriptionText");

	Params::FortWeaponItemDefinitionTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponMeleeItemDefinitionTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponMeleeItemDefinitionTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponMeleeItemDefinitionTooltip", "GetNumericValue");

	Params::FortWeaponMeleeItemDefinitionTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponMeleeItemDefinitionTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponMeleeItemDefinitionTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponMeleeItemDefinitionTooltip", "GetTextForToken");

	Params::FortWeaponMeleeItemDefinitionTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponMeleeItemDefinitionTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponMeleeItemDefinitionTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponMeleeItemDefinitionTooltip", "GetTokenizedDescriptionText");

	Params::FortWeaponMeleeItemDefinitionTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAISpawnerInterface.IsReadyToReceiveNewSpawnGroup
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IFortAISpawnerInterface::IsReadyToReceiveNewSpawnGroup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAISpawnerInterface", "IsReadyToReceiveNewSpawnGroup");

	Params::FortAISpawnerInterface_IsReadyToReceiveNewSpawnGroup Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAISpawnerInterface.OnReceiveSpawnGroup
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IFortAISpawnerInterface::OnReceiveSpawnGroup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAISpawnerInterface", "OnReceiveSpawnGroup");

	Params::FortAISpawnerInterface_OnReceiveSpawnGroup Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.CustomCharacterPartAnimInstance.OnDayPhaseChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortDayPhase                           CurrentDayPhase                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDayPhase                           PreviousDayPhase                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAtCreation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomCharacterPartAnimInstance::OnDayPhaseChanged(EFortDayPhase CurrentDayPhase, EFortDayPhase PreviousDayPhase, bool bAtCreation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomCharacterPartAnimInstance", "OnDayPhaseChanged");

	Params::CustomCharacterPartAnimInstance_OnDayPhaseChanged Parms{};

	Parms.CurrentDayPhase = CurrentDayPhase;
	Parms.PreviousDayPhase = PreviousDayPhase;
	Parms.bAtCreation = bAtCreation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.CustomCharacterPartAnimInstance.OnPlayMontageFromGameplayTagQuery
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGameplayTagQuery                MatchingQuery                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UAnimMontage*                     MontagePlaying                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCustomCharacterPartAnimInstance::OnPlayMontageFromGameplayTagQuery(const struct FGameplayTagQuery& MatchingQuery, class UAnimMontage* MontagePlaying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomCharacterPartAnimInstance", "OnPlayMontageFromGameplayTagQuery");

	Params::CustomCharacterPartAnimInstance_OnPlayMontageFromGameplayTagQuery Parms{};

	Parms.MatchingQuery = std::move(MatchingQuery);
	Parms.MontagePlaying = MontagePlaying;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.CustomCharacterPartAnimInstance.PreDestruction
// (Event, Public, BlueprintEvent)

void UCustomCharacterPartAnimInstance::PreDestruction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomCharacterPartAnimInstance", "PreDestruction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.CustomCharacterPartAnimInstance.GetAssociatedPlayerPawn
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerPawn*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerPawn* UCustomCharacterPartAnimInstance::GetAssociatedPlayerPawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomCharacterPartAnimInstance", "GetAssociatedPlayerPawn");

	Params::CustomCharacterPartAnimInstance_GetAssociatedPlayerPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.CustomCharacterPartAnimInstance.GetCharacterPartType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const EFortCustomPartType               ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const EFortCustomPartType UCustomCharacterPartAnimInstance::GetCharacterPartType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomCharacterPartAnimInstance", "GetCharacterPartType");

	Params::CustomCharacterPartAnimInstance_GetCharacterPartType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.CustomCharacterPartAnimInstance.GetOwnerSkeletalMeshComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* UCustomCharacterPartAnimInstance::GetOwnerSkeletalMeshComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomCharacterPartAnimInstance", "GetOwnerSkeletalMeshComponent");

	Params::CustomCharacterPartAnimInstance_GetOwnerSkeletalMeshComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.CustomCharacterPartAnimInstance.GetPartSkeletalMeshComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* UCustomCharacterPartAnimInstance::GetPartSkeletalMeshComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomCharacterPartAnimInstance", "GetPartSkeletalMeshComponent");

	Params::CustomCharacterPartAnimInstance_GetPartSkeletalMeshComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWorldItem.MarkItemAsSeenInFrontend
// (Final, Native, Public, BlueprintCallable)

void UFortWorldItem::MarkItemAsSeenInFrontend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorldItem", "MarkItemAsSeenInFrontend");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWorldItem.GetOwnedGameplayTags
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            TagContainer                                           (Parm, OutParm, NativeAccessSpecifierPublic)

void UFortWorldItem::GetOwnedGameplayTags(struct FGameplayTagContainer* TagContainer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorldItem", "GetOwnedGameplayTags");

	Params::FortWorldItem_GetOwnedGameplayTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TagContainer != nullptr)
		*TagContainer = std::move(Parms.TagContainer);
}


// Function FortniteGame.FortWorldItem.SeenInFrontend
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWorldItem::SeenInFrontend() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorldItem", "SeenInFrontend");

	Params::FortWorldItem_SeenInFrontend Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAISystem.IsInCone2D
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          ConeOrigin                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ConeDirection                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HalfAngle                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          LocationToCheck                                        (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAISystem::IsInCone2D(const struct FVector& ConeOrigin, const struct FVector& ConeDirection, float HalfAngle, const struct FVector& LocationToCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAISystem", "IsInCone2D");

	Params::FortAISystem_IsInCone2D Parms{};

	Parms.ConeOrigin = std::move(ConeOrigin);
	Parms.ConeDirection = std::move(ConeDirection);
	Parms.HalfAngle = HalfAngle;
	Parms.LocationToCheck = std::move(LocationToCheck);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.CustomCharacterPartModifier.OnDayPhaseChanged
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// EFortDayPhase                           CurrentDayPhase                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDayPhase                           PreviousDayPhase                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAtCreation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ACustomCharacterPartModifier::OnDayPhaseChanged(EFortDayPhase CurrentDayPhase, EFortDayPhase PreviousDayPhase, bool bAtCreation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomCharacterPartModifier", "OnDayPhaseChanged");

	Params::CustomCharacterPartModifier_OnDayPhaseChanged Parms{};

	Parms.CurrentDayPhase = CurrentDayPhase;
	Parms.PreviousDayPhase = PreviousDayPhase;
	Parms.bAtCreation = bAtCreation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.CustomCharacterPartModifier.PreDestruction
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ACustomCharacterPartModifier::PreDestruction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomCharacterPartModifier", "PreDestruction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.CustomCharacterPartModifier.GetAssociatedPlayerPawn
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerPawn*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerPawn* ACustomCharacterPartModifier::GetAssociatedPlayerPawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomCharacterPartModifier", "GetAssociatedPlayerPawn");

	Params::CustomCharacterPartModifier_GetAssociatedPlayerPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.CustomCharacterPartModifier.GetCharacterPartType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const EFortCustomPartType               ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const EFortCustomPartType ACustomCharacterPartModifier::GetCharacterPartType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomCharacterPartModifier", "GetCharacterPartType");

	Params::CustomCharacterPartModifier_GetCharacterPartType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeap_BuildingTool.OnBlueprintPaperPulseUpdate
// (Final, Native, Private)
// Parameters:
// float                                   InCurveVal                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeap_BuildingTool::OnBlueprintPaperPulseUpdate(float InCurveVal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeap_BuildingTool", "OnBlueprintPaperPulseUpdate");

	Params::FortWeap_BuildingTool_OnBlueprintPaperPulseUpdate Parms{};

	Parms.InCurveVal = InCurveVal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeap_BuildingTool.OnRep_DefaultMetadata
// (Final, Native, Private)

void AFortWeap_BuildingTool::OnRep_DefaultMetadata()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeap_BuildingTool", "OnRep_DefaultMetadata");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.CustomCharacterPartOwnerInterface.PlayAnimationsMatchingQuery
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagQuery                TagQueryToMatch                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void ICustomCharacterPartOwnerInterface::PlayAnimationsMatchingQuery(const struct FGameplayTagQuery& TagQueryToMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomCharacterPartOwnerInterface", "PlayAnimationsMatchingQuery");

	Params::CustomCharacterPartOwnerInterface_PlayAnimationsMatchingQuery Parms{};

	Parms.TagQueryToMatch = std::move(TagQueryToMatch);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.CustomCharacterPartOwnerInterface.GetCustomizationRootSkeletalMeshComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* ICustomCharacterPartOwnerInterface::GetCustomizationRootSkeletalMeshComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CustomCharacterPartOwnerInterface", "GetCustomizationRootSkeletalMeshComponent");

	Params::CustomCharacterPartOwnerInterface_GetCustomizationRootSkeletalMeshComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBrushSizeFunctionLibrary.GrowBrushSize
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortBrushSize                          OriginalBrushSize                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Steps                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortBrushSize                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortBrushSize UFortBrushSizeFunctionLibrary::GrowBrushSize(const EFortBrushSize OriginalBrushSize, const int32 Steps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBrushSizeFunctionLibrary", "GrowBrushSize");

	Params::FortBrushSizeFunctionLibrary_GrowBrushSize Parms{};

	Parms.OriginalBrushSize = OriginalBrushSize;
	Parms.Steps = Steps;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBrushSizeFunctionLibrary.ShrinkBrushSize
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortBrushSize                          OriginalBrushSize                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Steps                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortBrushSize                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortBrushSize UFortBrushSizeFunctionLibrary::ShrinkBrushSize(const EFortBrushSize OriginalBrushSize, const int32 Steps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBrushSizeFunctionLibrary", "ShrinkBrushSize");

	Params::FortBrushSizeFunctionLibrary_ShrinkBrushSize Parms{};

	Parms.OriginalBrushSize = OriginalBrushSize;
	Parms.Steps = Steps;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAlterableItem.GetNumberOfSlotsForAlterationType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortAlteration                         AlterationType                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortAlterableItem::GetNumberOfSlotsForAlterationType(EFortAlteration AlterationType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterableItem", "GetNumberOfSlotsForAlterationType");

	Params::FortAlterableItem_GetNumberOfSlotsForAlterationType Parms{};

	Parms.AlterationType = AlterationType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAlterableItem.GetRating
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortAlterableItem::GetRating() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterableItem", "GetRating");

	Params::FortAlterableItem_GetRating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTieredCollectionLayout.GetCollectionLayoutDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortTieredCollectionLayout::GetCollectionLayoutDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTieredCollectionLayout", "GetCollectionLayoutDisplayName");

	Params::FortTieredCollectionLayout_GetCollectionLayoutDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTieredCollectionLayout.GetMissionPointsForTier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Tier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortTieredCollectionLayout::GetMissionPointsForTier(int32 Tier) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTieredCollectionLayout", "GetMissionPointsForTier");

	Params::FortTieredCollectionLayout_GetMissionPointsForTier Parms{};

	Parms.Tier = Tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTieredCollectionLayout.ShouldUseTierAsRandomSeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTieredCollectionLayout::ShouldUseTierAsRandomSeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTieredCollectionLayout", "ShouldUseTierAsRandomSeed");

	Params::FortTieredCollectionLayout_ShouldUseTierAsRandomSeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.DeployableBaseCore.GetSimpleDeathFXTransform
// (Native, Event, Protected, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform ADeployableBaseCore::GetSimpleDeathFXTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeployableBaseCore", "GetSimpleDeathFXTransform");

	Params::DeployableBaseCore_GetSimpleDeathFXTransform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponRangedItemDefinitionTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponRangedItemDefinitionTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRangedItemDefinitionTooltip", "GetNumericValue");

	Params::FortWeaponRangedItemDefinitionTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponRangedItemDefinitionTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponRangedItemDefinitionTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRangedItemDefinitionTooltip", "GetTextForToken");

	Params::FortWeaponRangedItemDefinitionTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponRangedItemDefinitionTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponRangedItemDefinitionTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRangedItemDefinitionTooltip", "GetTokenizedDescriptionText");

	Params::FortWeaponRangedItemDefinitionTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.DeployableBasePlot.GetPlayerStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerStart*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerStart* ADeployableBasePlot::GetPlayerStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeployableBasePlot", "GetPlayerStart");

	Params::DeployableBasePlot_GetPlayerStart Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.DeployableBasePlot.HandleBuildingStateTransition
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// EDeployableBaseBuildingState            InPreviousState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDeployableBaseBuildingState            InCurrentState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADeployableBasePlot::HandleBuildingStateTransition(EDeployableBaseBuildingState InPreviousState, EDeployableBaseBuildingState InCurrentState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeployableBasePlot", "HandleBuildingStateTransition");

	Params::DeployableBasePlot_HandleBuildingStateTransition Parms{};

	Parms.InPreviousState = InPreviousState;
	Parms.InCurrentState = InCurrentState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.DeployableBasePlot.OnBuildingStateTransition
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EDeployableBaseBuildingState            InPreviousState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EDeployableBaseBuildingState            InCurrentState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADeployableBasePlot::OnBuildingStateTransition(EDeployableBaseBuildingState InPreviousState, EDeployableBaseBuildingState InCurrentState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeployableBasePlot", "OnBuildingStateTransition");

	Params::DeployableBasePlot_OnBuildingStateTransition Parms{};

	Parms.InPreviousState = InPreviousState;
	Parms.InCurrentState = InCurrentState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.DeployableBasePlot.OnCurrentBuildingStateSet
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// EDeployableBaseBuildingState            InCurrentBuildingState                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADeployableBasePlot::OnCurrentBuildingStateSet(EDeployableBaseBuildingState InCurrentBuildingState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeployableBasePlot", "OnCurrentBuildingStateSet");

	Params::DeployableBasePlot_OnCurrentBuildingStateSet Parms{};

	Parms.InCurrentBuildingState = InCurrentBuildingState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.DeployableBasePlot.OnRep_BuildableSpaceExpansionVector
// (Final, Native, Protected)

void ADeployableBasePlot::OnRep_BuildableSpaceExpansionVector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeployableBasePlot", "OnRep_BuildableSpaceExpansionVector");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.DeployableBasePlot.OnRep_CurrentBuildingState
// (Final, Native, Protected)

void ADeployableBasePlot::OnRep_CurrentBuildingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeployableBasePlot", "OnRep_CurrentBuildingState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.DeployableBasePlot.OnRep_OccupantNetID
// (Final, Native, Protected)

void ADeployableBasePlot::OnRep_OccupantNetID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeployableBasePlot", "OnRep_OccupantNetID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.DeployableBasePlot.GetNumOfItemsInPlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 ADeployableBasePlot::GetNumOfItemsInPlot() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeployableBasePlot", "GetNumOfItemsInPlot");

	Params::DeployableBasePlot_GetNumOfItemsInPlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.DeployableBasePlot.GetOccupantNetID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FUniqueNetIdRepl           ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const struct FUniqueNetIdRepl ADeployableBasePlot::GetOccupantNetID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeployableBasePlot", "GetOccupantNetID");

	Params::DeployableBasePlot_GetOccupantNetID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.DeployableBasePlot.IsBuildingActorWithinBuildableSpace
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABuildingActor*                   ActorToCheck                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          GridLocation                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ADeployableBasePlot::IsBuildingActorWithinBuildableSpace(const class ABuildingActor* ActorToCheck, const struct FVector& GridLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeployableBasePlot", "IsBuildingActorWithinBuildableSpace");

	Params::DeployableBasePlot_IsBuildingActorWithinBuildableSpace Parms{};

	Parms.ActorToCheck = ActorToCheck;
	Parms.GridLocation = std::move(GridLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.DeployableBasePlot.IsOccupant
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 UserId                                                 (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ADeployableBasePlot::IsOccupant(const struct FUniqueNetIdRepl& UserId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeployableBasePlot", "IsOccupant");

	Params::DeployableBasePlot_IsOccupant Parms{};

	Parms.UserId = std::move(UserId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.DeployableBasePlot.IsOccupied
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ADeployableBasePlot::IsOccupied() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DeployableBasePlot", "IsOccupied");

	Params::DeployableBasePlot_IsOccupied Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSaveFileBuildingInstructionsHandler.AreBuildingsLoaded
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortSaveFileBuildingInstructionsHandler::AreBuildingsLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSaveFileBuildingInstructionsHandler", "AreBuildingsLoaded");

	Params::FortSaveFileBuildingInstructionsHandler_AreBuildingsLoaded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSaveFileBuildingInstructionsHandler.LoadBuildings
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortSaveFileBuildingInstructionsHandler::LoadBuildings(class AFortPlayerController* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSaveFileBuildingInstructionsHandler", "LoadBuildings");

	Params::FortSaveFileBuildingInstructionsHandler_LoadBuildings Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortSaveFileBuildingInstructionsHandler.ResetBuildings
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortSaveFileBuildingInstructionsHandler::ResetBuildings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSaveFileBuildingInstructionsHandler", "ResetBuildings");

	Params::FortSaveFileBuildingInstructionsHandler_ResetBuildings Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSaveFileBuildingInstructionsHandler.SaveBuildings
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortSaveFileBuildingInstructionsHandler::SaveBuildings(class AFortPlayerController* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSaveFileBuildingInstructionsHandler", "SaveBuildings");

	Params::FortSaveFileBuildingInstructionsHandler_SaveBuildings Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTooltipInterface.GetDisplayStats
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortTooltipDisplayStatsList*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortTooltipDisplayStatsList* IFortTooltipInterface::GetDisplayStats() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltipInterface", "GetDisplayStats");

	Params::FortTooltipInterface_GetDisplayStats Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTooltipInterface.GetTooltip
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UFortTooltip>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UFortTooltip> IFortTooltipInterface::GetTooltip() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTooltipInterface", "GetTooltip");

	Params::FortTooltipInterface_GetTooltip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAlterationItem.GetAlterationDefinitionBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAlterationItemDefinition*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAlterationItemDefinition* UFortAlterationItem::GetAlterationDefinitionBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAlterationItem", "GetAlterationDefinitionBP");

	Params::FortAlterationItem_GetAlterationDefinitionBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityDecoTool.AbilitySpawnDeco
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAbilityToolSpawnParameters      SpawnParameters                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class ABuildingActor*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABuildingActor* AFortAbilityDecoTool::AbilitySpawnDeco(const struct FAbilityToolSpawnParameters& SpawnParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityDecoTool", "AbilitySpawnDeco");

	Params::FortAbilityDecoTool_AbilitySpawnDeco Parms{};

	Parms.SpawnParameters = std::move(SpawnParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityDecoTool.GetPlacementAbilityHandle
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayAbilitySpecHandle       ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayAbilitySpecHandle AFortAbilityDecoTool::GetPlacementAbilityHandle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityDecoTool", "GetPlacementAbilityHandle");

	Params::FortAbilityDecoTool_GetPlacementAbilityHandle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityDecoTool.GetPlacementAbilityInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortGameplayAbility*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortGameplayAbility* AFortAbilityDecoTool::GetPlacementAbilityInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityDecoTool", "GetPlacementAbilityInstance");

	Params::FortAbilityDecoTool_GetPlacementAbilityInstance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityDecoTool.GetSpawnParameters
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAbilityToolSpawnParameters      OutSpawnParamters                                      (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortAbilityDecoTool::GetSpawnParameters(struct FAbilityToolSpawnParameters* OutSpawnParamters) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityDecoTool", "GetSpawnParameters");

	Params::FortAbilityDecoTool_GetSpawnParameters Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSpawnParamters != nullptr)
		*OutSpawnParamters = std::move(Parms.OutSpawnParamters);
}


// Function FortniteGame.FortAbilityKit.BP_GetGadgets
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class UFortGadgetItemDefinition*>GadgetItemDefinitions                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortAbilityKit::BP_GetGadgets(TArray<class UFortGadgetItemDefinition*>* GadgetItemDefinitions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityKit", "BP_GetGadgets");

	Params::FortAbilityKit_BP_GetGadgets Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (GadgetItemDefinitions != nullptr)
		*GadgetItemDefinitions = std::move(Parms.GadgetItemDefinitions);
}


// Function FortniteGame.FortAbilityKit.GetDescription
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> UFortAbilityKit::GetDescription(const class UObject* WorldContextObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityKit", "GetDescription");

	Params::FortAbilityKit_GetDescription Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortScriptedAction.CancelAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bRegisterActionAgain                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortScriptedAction::CancelAction(bool bRegisterActionAgain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScriptedAction", "CancelAction");

	Params::FortScriptedAction_CancelAction Parms{};

	Parms.bRegisterActionAgain = bRegisterActionAgain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortScriptedAction.CompleteAction
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bRegisterActionAgain                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortScriptedAction::CompleteAction(bool bRegisterActionAgain)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScriptedAction", "CompleteAction");

	Params::FortScriptedAction_CompleteAction Parms{};

	Parms.bRegisterActionAgain = bRegisterActionAgain;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortScriptedAction.Execute
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortScriptedActionParams        Params_0                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortScriptedAction::Execute(const struct FFortScriptedActionParams& Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScriptedAction", "Execute");

	Params::FortScriptedAction_Execute Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortScriptedAction.GetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortScriptedActionParams        Params_0                                               (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortScriptedAction::GetParams(struct FFortScriptedActionParams* Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScriptedAction", "GetParams");

	Params::FortScriptedAction_GetParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Params_0 != nullptr)
		*Params_0 = std::move(Parms.Params_0);
}


// Function FortniteGame.FortScriptedAction.CanExecute
// (Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// struct FFortScriptedActionParams        Params_0                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortScriptedAction::CanExecute(const struct FFortScriptedActionParams& Params_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScriptedAction", "CanExecute");

	Params::FortScriptedAction_CanExecute Parms{};

	Parms.Params_0 = std::move(Params_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityKitTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAbilityKitTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityKitTooltip", "GetTextForToken");

	Params::FortAbilityKitTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityKitTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAbilityKitTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityKitTooltip", "GetTokenizedDescriptionText");

	Params::FortAbilityKitTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilitySetTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAbilitySetTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilitySetTooltip", "GetTextForToken");

	Params::FortAbilitySetTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilitySetTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAbilitySetTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilitySetTooltip", "GetTokenizedDescriptionText");

	Params::FortAbilitySetTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortThreatParticleActor.OnThreatCloudsChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<struct FThreatLocationInfo>      ThreatLocationInfo                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortThreatParticleActor::OnThreatCloudsChanged(const TArray<struct FThreatLocationInfo>& ThreatLocationInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortThreatParticleActor", "OnThreatCloudsChanged");

	Params::FortThreatParticleActor_OnThreatCloudsChanged Parms{};

	Parms.ThreatLocationInfo = std::move(ThreatLocationInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortThreatParticleActor.OnWorldReady
// (Event, Protected, BlueprintEvent)

void AFortThreatParticleActor::OnWorldReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortThreatParticleActor", "OnWorldReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortThreatParticleActor.GetThreatClouds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FThreatLocationInfo>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FThreatLocationInfo> AFortThreatParticleActor::GetThreatClouds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortThreatParticleActor", "GetThreatClouds");

	Params::FortThreatParticleActor_GetThreatClouds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilitySystemComponent.NetMulticast_RefreshActiveGameplayEffectCueEvents
// (Net, Native, Event, NetMulticast, Public)

void UFortAbilitySystemComponent::NetMulticast_RefreshActiveGameplayEffectCueEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilitySystemComponent", "NetMulticast_RefreshActiveGameplayEffectCueEvents");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAbilitySystemComponent.SetLandingMontageReplication
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*                     Montage1                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Section1                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                     Montage2                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Section2                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAbilitySystemComponent::SetLandingMontageReplication(class UAnimMontage* Montage1, class FName Section1, class UAnimMontage* Montage2, class FName Section2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilitySystemComponent", "SetLandingMontageReplication");

	Params::FortAbilitySystemComponent_SetLandingMontageReplication Parms{};

	Parms.Montage1 = Montage1;
	Parms.Section1 = Section1;
	Parms.Montage2 = Montage2;
	Parms.Section2 = Section2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAbilitySystemComponent.CanActivateAbilityWithMatchingTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            GameplayAbilityTags                                    (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAbilitySystemComponent::CanActivateAbilityWithMatchingTag(const struct FGameplayTagContainer& GameplayAbilityTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilitySystemComponent", "CanActivateAbilityWithMatchingTag");

	Params::FortAbilitySystemComponent_CanActivateAbilityWithMatchingTag Parms{};

	Parms.GameplayAbilityTags = std::move(GameplayAbilityTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilitySystemComponent.FindAttributeInformation
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           AttributeName                                          (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAttributeInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FAttributeInfo UFortAbilitySystemComponent::FindAttributeInformation(const class FString& AttributeName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilitySystemComponent", "FindAttributeInformation");

	Params::FortAbilitySystemComponent_FindAttributeInformation Parms{};

	Parms.AttributeName = std::move(AttributeName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilitySystemComponent.GetAttributeMagnitude
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FAttributeInfo                   Info                                                   (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortAbilitySystemComponent::GetAttributeMagnitude(const struct FAttributeInfo& Info) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilitySystemComponent", "GetAttributeMagnitude");

	Params::FortAbilitySystemComponent_GetAttributeMagnitude Parms{};

	Parms.Info = std::move(Info);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilitySystemComponent.HasActiveAbilityWithAnyMatchingTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            Tags                                                   (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAbilitySystemComponent::HasActiveAbilityWithAnyMatchingTag(const struct FGameplayTagContainer& Tags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilitySystemComponent", "HasActiveAbilityWithAnyMatchingTag");

	Params::FortAbilitySystemComponent_HasActiveAbilityWithAnyMatchingTag Parms{};

	Parms.Tags = std::move(Tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.StrategicBuildingActor.ApplyProximityPulseEffects
// (Native, Protected)

void AStrategicBuildingActor::ApplyProximityPulseEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StrategicBuildingActor", "ApplyProximityPulseEffects");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.StrategicBuildingActor.AttemptIncrementLevelUnlockProgress
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InProgressDelta                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AStrategicBuildingActor::AttemptIncrementLevelUnlockProgress(int32 InLevel, float InProgressDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StrategicBuildingActor", "AttemptIncrementLevelUnlockProgress");

	Params::StrategicBuildingActor_AttemptIncrementLevelUnlockProgress Parms{};

	Parms.InLevel = InLevel;
	Parms.InProgressDelta = InProgressDelta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.StrategicBuildingActor.GiveItemFromStrategicBuildingToPlayer
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItemDefinition*         ItemDefinition                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumberToGive                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStrategicBuildingActor::GiveItemFromStrategicBuildingToPlayer(class AFortPlayerController* PlayerController, const class UFortWorldItemDefinition* ItemDefinition, int32 NumberToGive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StrategicBuildingActor", "GiveItemFromStrategicBuildingToPlayer");

	Params::StrategicBuildingActor_GiveItemFromStrategicBuildingToPlayer Parms{};

	Parms.PlayerController = PlayerController;
	Parms.ItemDefinition = ItemDefinition;
	Parms.NumberToGive = NumberToGive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.StrategicBuildingActor.OnActiveStatusChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bNewActiveStatus                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStrategicBuildingActor::OnActiveStatusChanged(bool bNewActiveStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StrategicBuildingActor", "OnActiveStatusChanged");

	Params::StrategicBuildingActor_OnActiveStatusChanged Parms{};

	Parms.bNewActiveStatus = bNewActiveStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.StrategicBuildingActor.OnConstructionEndedPlayEffects
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   ConstructionLevel                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStrategicBuildingActor::OnConstructionEndedPlayEffects(int32 ConstructionLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StrategicBuildingActor", "OnConstructionEndedPlayEffects");

	Params::StrategicBuildingActor_OnConstructionEndedPlayEffects Parms{};

	Parms.ConstructionLevel = ConstructionLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.StrategicBuildingActor.OnConstructionStartedPlayEffects
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   ServerStartTime                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ServerEndTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CurrentServerTime                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ElapsedPct                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ConstructionLvl                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStrategicBuildingActor::OnConstructionStartedPlayEffects(float ServerStartTime, float ServerEndTime, float CurrentServerTime, float ElapsedPct, int32 ConstructionLvl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StrategicBuildingActor", "OnConstructionStartedPlayEffects");

	Params::StrategicBuildingActor_OnConstructionStartedPlayEffects Parms{};

	Parms.ServerStartTime = ServerStartTime;
	Parms.ServerEndTime = ServerEndTime;
	Parms.CurrentServerTime = CurrentServerTime;
	Parms.ElapsedPct = ElapsedPct;
	Parms.ConstructionLvl = ConstructionLvl;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.StrategicBuildingActor.OnConstructionTickPlayEffects
// (BlueprintCosmetic, Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ElapsedPct                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ConstructionLvl                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AStrategicBuildingActor::OnConstructionTickPlayEffects(float DeltaTime, float ElapsedPct, int32 ConstructionLvl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StrategicBuildingActor", "OnConstructionTickPlayEffects");

	Params::StrategicBuildingActor_OnConstructionTickPlayEffects Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.ElapsedPct = ElapsedPct;
	Parms.ConstructionLvl = ConstructionLvl;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.StrategicBuildingActor.OnRep_bIsActive
// (Native, Protected)

void AStrategicBuildingActor::OnRep_bIsActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StrategicBuildingActor", "OnRep_bIsActive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.StrategicBuildingActor.OnRep_ConstructionProgress
// (Native, Protected)

void AStrategicBuildingActor::OnRep_ConstructionProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StrategicBuildingActor", "OnRep_ConstructionProgress");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.StrategicBuildingActor.ProcessDeferredTouchActors
// (Native, Protected)

void AStrategicBuildingActor::ProcessDeferredTouchActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StrategicBuildingActor", "ProcessDeferredTouchActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.StrategicBuildingActor.SetupIndicators
// (Native, Protected)

void AStrategicBuildingActor::SetupIndicators()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StrategicBuildingActor", "SetupIndicators");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.StrategicBuildingActor.SetupVisibilityComponent
// (Native, Protected)

void AStrategicBuildingActor::SetupVisibilityComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StrategicBuildingActor", "SetupVisibilityComponent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.StrategicBuildingActor.GetCurrentLevelUnlockProgress
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   InLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AStrategicBuildingActor::GetCurrentLevelUnlockProgress(int32 InLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StrategicBuildingActor", "GetCurrentLevelUnlockProgress");

	Params::StrategicBuildingActor_GetCurrentLevelUnlockProgress Parms{};

	Parms.InLevel = InLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.StrategicBuildingActor.GetDeathEffectsLocation
// (Native, Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AStrategicBuildingActor::GetDeathEffectsLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StrategicBuildingActor", "GetDeathEffectsLocation");

	Params::StrategicBuildingActor_GetDeathEffectsLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.StrategicBuildingActor.GetDeathEffectsRotation
// (Native, Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator AStrategicBuildingActor::GetDeathEffectsRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StrategicBuildingActor", "GetDeathEffectsRotation");

	Params::StrategicBuildingActor_GetDeathEffectsRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.StrategicBuildingActor.GetDeathEffectsScale
// (Native, Event, Protected, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AStrategicBuildingActor::GetDeathEffectsScale() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StrategicBuildingActor", "GetDeathEffectsScale");

	Params::StrategicBuildingActor_GetDeathEffectsScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.StrategicBuildingActor.GetMaxLevelUnlockProgress
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   InLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AStrategicBuildingActor::GetMaxLevelUnlockProgress(int32 InLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StrategicBuildingActor", "GetMaxLevelUnlockProgress");

	Params::StrategicBuildingActor_GetMaxLevelUnlockProgress Parms{};

	Parms.InLevel = InLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.StrategicBuildingActor.IsActive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AStrategicBuildingActor::IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StrategicBuildingActor", "IsActive");

	Params::StrategicBuildingActor_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTooltipContext.SpawnTooltipContext
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFortTooltipContext*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortTooltipContext* UFortTooltipContext::SpawnTooltipContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortTooltipContext", "SpawnTooltipContext");

	Params::FortTooltipContext_SpawnTooltipContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTooltipContext.SpawnTooltipContextWithNetID
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 UniqueId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortTooltipContext* UFortTooltipContext::SpawnTooltipContextWithNetID(class UObject* WorldContextObject, const struct FUniqueNetIdRepl& UniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortTooltipContext", "SpawnTooltipContextWithNetID");

	Params::FortTooltipContext_SpawnTooltipContextWithNetID Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.UniqueId = std::move(UniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTooltipContext.SpawnTooltipContextWithSource
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                SourcePlayerController                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortTooltipContext* UFortTooltipContext::SpawnTooltipContextWithSource(class APlayerController* SourcePlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortTooltipContext", "SpawnTooltipContextWithSource");

	Params::FortTooltipContext_SpawnTooltipContextWithSource Parms{};

	Parms.SourcePlayerController = SourcePlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionPowerPointsInterface.GetAvailabilityWeight
// (Native, Public, Const)
// Parameters:
// float                                   DifficultyLevel                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IFortMissionPowerPointsInterface::GetAvailabilityWeight(float DifficultyLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionPowerPointsInterface", "GetAvailabilityWeight");

	Params::FortMissionPowerPointsInterface_GetAvailabilityWeight Parms{};

	Parms.DifficultyLevel = DifficultyLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionPowerPointsInterface.GetInitialRangeLerpValue
// (Native, Public, Const)
// Parameters:
// float                                   PointsAvailable                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IFortMissionPowerPointsInterface::GetInitialRangeLerpValue(float PointsAvailable) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionPowerPointsInterface", "GetInitialRangeLerpValue");

	Params::FortMissionPowerPointsInterface_GetInitialRangeLerpValue Parms{};

	Parms.PointsAvailable = PointsAvailable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionPowerPointsInterface.GetMaxRangeLerpValue
// (Native, Public, Const)
// Parameters:
// float                                   PointsAvailable                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PreviousLerpValue                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IFortMissionPowerPointsInterface::GetMaxRangeLerpValue(float PointsAvailable, float PreviousLerpValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionPowerPointsInterface", "GetMaxRangeLerpValue");

	Params::FortMissionPowerPointsInterface_GetMaxRangeLerpValue Parms{};

	Parms.PointsAvailable = PointsAvailable;
	Parms.PreviousLerpValue = PreviousLerpValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionPowerPointsInterface.GetPowerPointsCost
// (Native, Public, Const)
// Parameters:
// float                                   LerpValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IFortMissionPowerPointsInterface::GetPowerPointsCost(float LerpValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionPowerPointsInterface", "GetPowerPointsCost");

	Params::FortMissionPowerPointsInterface_GetPowerPointsCost Parms{};

	Parms.LerpValue = LerpValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilitySystemComponentTooltipContext.SpawnAbilitySystemTooltipContext
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFortAbilitySystemComponentTooltipContext*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAbilitySystemComponentTooltipContext* UFortAbilitySystemComponentTooltipContext::SpawnAbilitySystemTooltipContext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAbilitySystemComponentTooltipContext", "SpawnAbilitySystemTooltipContext");

	Params::FortAbilitySystemComponentTooltipContext_SpawnAbilitySystemTooltipContext Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilitySystemComponentTooltipContext.SpawnAbilitySystemTooltipContextFromOtherContext
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFortTooltipContext*              OtherContext                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAbilitySystemComponentTooltipContext*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAbilitySystemComponentTooltipContext* UFortAbilitySystemComponentTooltipContext::SpawnAbilitySystemTooltipContextFromOtherContext(const class UFortTooltipContext* OtherContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAbilitySystemComponentTooltipContext", "SpawnAbilitySystemTooltipContextFromOtherContext");

	Params::FortAbilitySystemComponentTooltipContext_SpawnAbilitySystemTooltipContextFromOtherContext Parms{};

	Parms.OtherContext = OtherContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.SpawnAtPlacementActorsAsArray
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortMission*                     Mission                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> AFortMission::SpawnAtPlacementActorsAsArray(class AFortMission* Mission, bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMission", "SpawnAtPlacementActorsAsArray");

	Params::FortMission_SpawnAtPlacementActorsAsArray Parms{};

	Parms.Mission = Mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.AddCompletionTag
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     NewCompletionTag                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortMission::AddCompletionTag(const struct FGameplayTag& NewCompletionTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "AddCompletionTag");

	Params::FortMission_AddCompletionTag Parms{};

	Parms.NewCompletionTag = std::move(NewCompletionTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.AddCompletionTags
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            NewCompletionTagContainer                              (Parm, NativeAccessSpecifierPublic)

void AFortMission::AddCompletionTags(const struct FGameplayTagContainer& NewCompletionTagContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "AddCompletionTags");

	Params::FortMission_AddCompletionTags Parms{};

	Parms.NewCompletionTagContainer = std::move(NewCompletionTagContainer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.AddGoalsToAssignment
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortAIAssignment*                Assignment                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortAIGoalInfo>          GoalInfos                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortMission::AddGoalsToAssignment(class UFortAIAssignment* Assignment, const TArray<struct FFortAIGoalInfo>& GoalInfos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "AddGoalsToAssignment");

	Params::FortMission_AddGoalsToAssignment Parms{};

	Parms.Assignment = Assignment;
	Parms.GoalInfos = std::move(GoalInfos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.AddGoalsToEncounterAssignment
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortAIAssignmentIdentifier      AssignmentIdentifier                                   (Parm, NativeAccessSpecifierPublic)
// class UFortAIEncounterInfo*             Encounter                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortAIGoalInfo>          GoalInfos                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortMission::AddGoalsToEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, const class UFortAIEncounterInfo*& Encounter, const TArray<struct FFortAIGoalInfo>& GoalInfos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "AddGoalsToEncounterAssignment");

	Params::FortMission_AddGoalsToEncounterAssignment Parms{};

	Parms.AssignmentIdentifier = std::move(AssignmentIdentifier);
	Parms.Encounter = Encounter;
	Parms.GoalInfos = std::move(GoalInfos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.AddGoalToAssignment
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortAIAssignment*                Assignment                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortAIGoalInfo                  GoalInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortMission::AddGoalToAssignment(class UFortAIAssignment* Assignment, const struct FFortAIGoalInfo& GoalInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "AddGoalToAssignment");

	Params::FortMission_AddGoalToAssignment Parms{};

	Parms.Assignment = Assignment;
	Parms.GoalInfo = std::move(GoalInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.AddGoalToEncounterAssignment
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortAIAssignmentIdentifier      AssignmentIdentifier                                   (Parm, NativeAccessSpecifierPublic)
// class UFortAIEncounterInfo*             Encounter                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortAIGoalInfo                  GoalInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortMission::AddGoalToEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, const class UFortAIEncounterInfo*& Encounter, const struct FFortAIGoalInfo& GoalInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "AddGoalToEncounterAssignment");

	Params::FortMission_AddGoalToEncounterAssignment Parms{};

	Parms.AssignmentIdentifier = std::move(AssignmentIdentifier);
	Parms.Encounter = Encounter;
	Parms.GoalInfo = std::move(GoalInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.AddParticipantAccount
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortMission::AddParticipantAccount(class AFortPlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "AddParticipantAccount");

	Params::FortMission_AddParticipantAccount Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.AttemptMissionSave
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           OptionalSaveName                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortMission::AttemptMissionSave(const class FString& OptionalSaveName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "AttemptMissionSave");

	Params::FortMission_AttemptMissionSave Parms{};

	Parms.OptionalSaveName = std::move(OptionalSaveName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.BlueprintCustomHandleMissionEvent
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FGuid                            Param_MissionGuid                                      (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            ObjectiveHandle                                        (Parm, NativeAccessSpecifierPublic)
// class UFortMissionEventParams*          Params_0                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DO_NOT_USE_THIS_OR_VARIABLES_BELOW                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          EventFocus                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataAsset*                       EventContent                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GenericInt                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   GenericFloat                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             GenericText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            GameplayTags                                           (Parm, NativeAccessSpecifierPublic)
// struct FFortMissionEvent                MissionEvent                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortMission::BlueprintCustomHandleMissionEvent(const struct FGuid& Param_MissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params_0, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, const class UDataAsset* EventContent, class AActor* EventInstigator, int32 GenericInt, float GenericFloat, const class FText& GenericText, const struct FGameplayTagContainer& GameplayTags, const struct FFortMissionEvent& MissionEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "BlueprintCustomHandleMissionEvent");

	Params::FortMission_BlueprintCustomHandleMissionEvent Parms{};

	Parms.Param_MissionGuid = std::move(Param_MissionGuid);
	Parms.ObjectiveHandle = std::move(ObjectiveHandle);
	Parms.Params_0 = Params_0;
	Parms.DO_NOT_USE_THIS_OR_VARIABLES_BELOW = DO_NOT_USE_THIS_OR_VARIABLES_BELOW;
	Parms.EventFocus = EventFocus;
	Parms.EventContent = EventContent;
	Parms.EventInstigator = EventInstigator;
	Parms.GenericInt = GenericInt;
	Parms.GenericFloat = GenericFloat;
	Parms.GenericText = std::move(GenericText);
	Parms.GameplayTags = std::move(GameplayTags);
	Parms.MissionEvent = std::move(MissionEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortMission.BlueprintOnActivated
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)

void AFortMission::BlueprintOnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "BlueprintOnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortMission.BlueprintOnMissionEnd
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// EFortMissionStatus                      Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortMission::BlueprintOnMissionEnd(EFortMissionStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "BlueprintOnMissionEnd");

	Params::FortMission_BlueprintOnMissionEnd Parms{};

	Parms.Status = Status;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortMission.BlueprintOnStartPlaying
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)

void AFortMission::BlueprintOnStartPlaying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "BlueprintOnStartPlaying");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortMission.BlueprintPostMissionLoad
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent)

void AFortMission::BlueprintPostMissionLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "BlueprintPostMissionLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortMission.ChooseRandomReward
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFortMissionWeightedReward       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortMissionWeightedReward AFortMission::ChooseRandomReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "ChooseRandomReward");

	Params::FortMission_ChooseRandomReward Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.CreateEncounterAssignment
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            AssignmentTags                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UFortAIEncounterInfo*             Encounter                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAIAssignmentSettings*        AssignmentSettings                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UFortAIGoalProvider>  GoalProvider                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortAIAssignmentIdentifier      AssignmentIdentifier                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// EAssignmentCreationResult               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAssignmentCreationResult AFortMission::CreateEncounterAssignment(const struct FGameplayTagContainer& AssignmentTags, const class UFortAIEncounterInfo*& Encounter, class UFortAIAssignmentSettings* AssignmentSettings, TSubclassOf<class UFortAIGoalProvider> GoalProvider, struct FFortAIAssignmentIdentifier* AssignmentIdentifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "CreateEncounterAssignment");

	Params::FortMission_CreateEncounterAssignment Parms{};

	Parms.AssignmentTags = std::move(AssignmentTags);
	Parms.Encounter = Encounter;
	Parms.AssignmentSettings = AssignmentSettings;
	Parms.GoalProvider = GoalProvider;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AssignmentIdentifier != nullptr)
		*AssignmentIdentifier = std::move(Parms.AssignmentIdentifier);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.CreateEncounterSequence
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            SequenceTags                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UFortAIEncounterSequence*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAIEncounterSequence* AFortMission::CreateEncounterSequence(const struct FGameplayTagContainer& SequenceTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "CreateEncounterSequence");

	Params::FortMission_CreateEncounterSequence Parms{};

	Parms.SequenceTags = std::move(SequenceTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.FindGoalLocationsForEncounterAssignment
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortAIAssignmentIdentifier      AssignmentIdentifier                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UFortAIEncounterInfo*             Encounter                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  OutGoalLocations                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortMission::FindGoalLocationsForEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, const class UFortAIEncounterInfo*& Encounter, TArray<struct FVector>* OutGoalLocations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "FindGoalLocationsForEncounterAssignment");

	Params::FortMission_FindGoalLocationsForEncounterAssignment Parms{};

	Parms.AssignmentIdentifier = std::move(AssignmentIdentifier);
	Parms.Encounter = Encounter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutGoalLocations != nullptr)
		*OutGoalLocations = std::move(Parms.OutGoalLocations);
}


// Function FortniteGame.FortMission.FocusThisMission
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             FocusDisplayText                                       (Parm, NativeAccessSpecifierPublic)
// float                                   FocusPercentage                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortMission::FocusThisMission(const class FText& FocusDisplayText, float FocusPercentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "FocusThisMission");

	Params::FortMission_FocusThisMission Parms{};

	Parms.FocusDisplayText = std::move(FocusDisplayText);
	Parms.FocusPercentage = FocusPercentage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.GetConfigData
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     InBucketTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortMissionConfigData*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortMissionConfigData* AFortMission::GetConfigData(const struct FGameplayTag& InBucketTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetConfigData");

	Params::FortMission_GetConfigData Parms{};

	Parms.InBucketTag = std::move(InBucketTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.GetRewardItemsByTag
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     RewardTag                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortWorldItemDefinition*> OutRewardItems                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortMission::GetRewardItemsByTag(const struct FGameplayTag& RewardTag, TArray<class UFortWorldItemDefinition*>* OutRewardItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetRewardItemsByTag");

	Params::FortMission_GetRewardItemsByTag Parms{};

	Parms.RewardTag = std::move(RewardTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRewardItems != nullptr)
		*OutRewardItems = std::move(Parms.OutRewardItems);
}


// Function FortniteGame.FortMission.GrantRewardsByTag
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     RewardTag                                              (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortRewardType                         RewardType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortMission::GrantRewardsByTag(const struct FGameplayTag& RewardTag, EFortRewardType RewardType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GrantRewardsByTag");

	Params::FortMission_GrantRewardsByTag Parms{};

	Parms.RewardTag = std::move(RewardTag);
	Parms.RewardType = RewardType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.InitializeActorsForMission
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortMission*                     Mission                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   OutActorsInitialized                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortMission::InitializeActorsForMission(class AFortMission* Mission, TArray<class AActor*>* OutActorsInitialized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "InitializeActorsForMission");

	Params::FortMission_InitializeActorsForMission Parms{};

	Parms.Mission = Mission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActorsInitialized != nullptr)
		*OutActorsInitialized = std::move(Parms.OutActorsInitialized);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.InitializeActorsForMissionMatchingItemIdentifyingQuery
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortMission*                     Mission                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagQuery                TagQuery                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   OutActorsInitialized                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortMission::InitializeActorsForMissionMatchingItemIdentifyingQuery(class AFortMission* Mission, const struct FGameplayTagQuery& TagQuery, TArray<class AActor*>* OutActorsInitialized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "InitializeActorsForMissionMatchingItemIdentifyingQuery");

	Params::FortMission_InitializeActorsForMissionMatchingItemIdentifyingQuery Parms{};

	Parms.Mission = Mission;
	Parms.TagQuery = std::move(TagQuery);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActorsInitialized != nullptr)
		*OutActorsInitialized = std::move(Parms.OutActorsInitialized);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.OnRep_ActiveObjectives
// (Final, Native, Protected)

void AFortMission::OnRep_ActiveObjectives()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "OnRep_ActiveObjectives");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.OnRep_bIsMissionVisible
// (Native, Protected)

void AFortMission::OnRep_bIsMissionVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "OnRep_bIsMissionVisible");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.OnRep_CurrentFocusDisplayData
// (Final, Native, Protected)

void AFortMission::OnRep_CurrentFocusDisplayData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "OnRep_CurrentFocusDisplayData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.OnRep_MissionInfo
// (Final, Native, Protected)

void AFortMission::OnRep_MissionInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "OnRep_MissionInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.OnRep_MissionStatus
// (Native, Protected)

void AFortMission::OnRep_MissionStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "OnRep_MissionStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.OnRep_PotentialBadgesArray
// (Final, Native, Protected)

void AFortMission::OnRep_PotentialBadgesArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "OnRep_PotentialBadgesArray");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.OnRep_QuestOwnerAccount
// (Native, Protected)

void AFortMission::OnRep_QuestOwnerAccount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "OnRep_QuestOwnerAccount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.OnRep_UIIndex
// (Native, Protected)

void AFortMission::OnRep_UIIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "OnRep_UIIndex");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.OnWaveCompleted
// (Final, BlueprintAuthorityOnly, Native, Protected, BlueprintCallable)
// Parameters:
// int32                                   Tier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Wave                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortCompletionResult                   Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortMission::OnWaveCompleted(int32 Tier, int32 Wave, EFortCompletionResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "OnWaveCompleted");

	Params::FortMission_OnWaveCompleted Parms{};

	Parms.Tier = Tier;
	Parms.Wave = Wave;
	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.ProvideAllPotentialBadges
// (Final, BlueprintAuthorityOnly, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FGameplayTag>             BadgeTags                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortMission::ProvideAllPotentialBadges(const TArray<struct FGameplayTag>& BadgeTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "ProvideAllPotentialBadges");

	Params::FortMission_ProvideAllPotentialBadges Parms{};

	Parms.BadgeTags = std::move(BadgeTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.RecordResourceActorSpawn
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           SpawnedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortMission::RecordResourceActorSpawn(class AActor* SpawnedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "RecordResourceActorSpawn");

	Params::FortMission_RecordResourceActorSpawn Parms{};

	Parms.SpawnedActor = SpawnedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.RemoveGoalFromEncounterAssignment
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortAIAssignmentIdentifier      AssignmentIdentifier                                   (Parm, NativeAccessSpecifierPublic)
// class UFortAIEncounterInfo*             Encounter                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortAIGoalInfo                  GoalInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortMission::RemoveGoalFromEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, const class UFortAIEncounterInfo*& Encounter, const struct FFortAIGoalInfo& GoalInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "RemoveGoalFromEncounterAssignment");

	Params::FortMission_RemoveGoalFromEncounterAssignment Parms{};

	Parms.AssignmentIdentifier = std::move(AssignmentIdentifier);
	Parms.Encounter = Encounter;
	Parms.GoalInfo = std::move(GoalInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.RemoveGoalsFromEncounterAssignment
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortAIAssignmentIdentifier      AssignmentIdentifier                                   (Parm, NativeAccessSpecifierPublic)
// class UFortAIEncounterInfo*             Encounter                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortAIGoalInfo>          GoalInfos                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortMission::RemoveGoalsFromEncounterAssignment(const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, const class UFortAIEncounterInfo*& Encounter, const TArray<struct FFortAIGoalInfo>& GoalInfos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "RemoveGoalsFromEncounterAssignment");

	Params::FortMission_RemoveGoalsFromEncounterAssignment Parms{};

	Parms.AssignmentIdentifier = std::move(AssignmentIdentifier);
	Parms.Encounter = Encounter;
	Parms.GoalInfos = std::move(GoalInfos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.RemoveParticipantAccount
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 AbandoningPlayerId                                     (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortMission::RemoveParticipantAccount(struct FUniqueNetIdRepl* AbandoningPlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "RemoveParticipantAccount");

	Params::FortMission_RemoveParticipantAccount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AbandoningPlayerId != nullptr)
		*AbandoningPlayerId = std::move(Parms.AbandoningPlayerId);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.SendBotLogicMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortMission::SendBotLogicMessage(const class FString& EventName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "SendBotLogicMessage");

	Params::FortMission_SendBotLogicMessage Parms{};

	Parms.EventName = std::move(EventName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.SetToSilentDestroy
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFortMission::SetToSilentDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "SetToSilentDestroy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.SetUiVisibility
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsMissionVisible                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortMission::SetUiVisibility(bool bInIsMissionVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "SetUiVisibility");

	Params::FortMission_SetUiVisibility Parms{};

	Parms.bInIsMissionVisible = bInIsMissionVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.StartMissionAIEncounter
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSubclassOf<class UFortAIEncounterInfo> EncounterTemplate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   TargetActors                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UFortAIAssignmentSettings*        AssignmentSettings                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEncounterEnvironmentQueryInfo   EnvironmentQueryInfo                                   (Parm, NativeAccessSpecifierPublic)
// class AActor*                           QueryActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            InjectedTags                                           (Parm, NativeAccessSpecifierPublic)
// struct FFortEncounterSettings           EncounterSettings                                      (Parm, NativeAccessSpecifierPublic)
// int32                                   ActivationDelay                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAIEncounterInfo*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAIEncounterInfo* AFortMission::StartMissionAIEncounter(TSubclassOf<class UFortAIEncounterInfo> EncounterTemplate, const TArray<class AActor*>& TargetActors, class UFortAIAssignmentSettings* AssignmentSettings, const struct FEncounterEnvironmentQueryInfo& EnvironmentQueryInfo, class AActor* QueryActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int32 ActivationDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "StartMissionAIEncounter");

	Params::FortMission_StartMissionAIEncounter Parms{};

	Parms.EncounterTemplate = EncounterTemplate;
	Parms.TargetActors = std::move(TargetActors);
	Parms.AssignmentSettings = AssignmentSettings;
	Parms.EnvironmentQueryInfo = std::move(EnvironmentQueryInfo);
	Parms.QueryActor = QueryActor;
	Parms.InjectedTags = std::move(InjectedTags);
	Parms.EncounterSettings = std::move(EncounterSettings);
	Parms.ActivationDelay = ActivationDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.StartMissionAIEncounterFromGeneratedProfile
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   GeneratedEncounterProfileIndex                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   TargetActors                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UFortAIAssignmentSettings*        AssignmentSettings                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEncounterEnvironmentQueryInfo   EnvironmentQueryInfo                                   (Parm, NativeAccessSpecifierPublic)
// class AActor*                           QueryActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            InjectedTags                                           (Parm, NativeAccessSpecifierPublic)
// struct FFortEncounterSettings           EncounterSettings                                      (Parm, NativeAccessSpecifierPublic)
// int32                                   ActivationDelay                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseAssignments                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAIEncounterInfo*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAIEncounterInfo* AFortMission::StartMissionAIEncounterFromGeneratedProfile(int32 GeneratedEncounterProfileIndex, const TArray<class AActor*>& TargetActors, class UFortAIAssignmentSettings* AssignmentSettings, const struct FEncounterEnvironmentQueryInfo& EnvironmentQueryInfo, class AActor* QueryActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int32 ActivationDelay, bool bUseAssignments)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "StartMissionAIEncounterFromGeneratedProfile");

	Params::FortMission_StartMissionAIEncounterFromGeneratedProfile Parms{};

	Parms.GeneratedEncounterProfileIndex = GeneratedEncounterProfileIndex;
	Parms.TargetActors = std::move(TargetActors);
	Parms.AssignmentSettings = AssignmentSettings;
	Parms.EnvironmentQueryInfo = std::move(EnvironmentQueryInfo);
	Parms.QueryActor = QueryActor;
	Parms.InjectedTags = std::move(InjectedTags);
	Parms.EncounterSettings = std::move(EncounterSettings);
	Parms.ActivationDelay = ActivationDelay;
	Parms.bUseAssignments = bUseAssignments;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.StopEncounterSequence
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAIEncounterSequence*         SequenceToStop                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortMission::StopEncounterSequence(class UFortAIEncounterSequence* SequenceToStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "StopEncounterSequence");

	Params::FortMission_StopEncounterSequence Parms{};

	Parms.SequenceToStop = SequenceToStop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.StopMissionAIEncounter
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAIEncounterInfo*             EncounterToStop                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortMission::StopMissionAIEncounter(class UFortAIEncounterInfo* EncounterToStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "StopMissionAIEncounter");

	Params::FortMission_StopMissionAIEncounter Parms{};

	Parms.EncounterToStop = EncounterToStop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMission.BlueprintCanPlayerParticipate
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AFortPlayerController*            PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortMission::BlueprintCanPlayerParticipate(class AFortPlayerController* PlayerController) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "BlueprintCanPlayerParticipate");

	Params::FortMission_BlueprintCanPlayerParticipate Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.GetActorsSpawnedMatchingQuery
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagQuery                TagQuery                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   SpawnedActors                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortMission::GetActorsSpawnedMatchingQuery(const struct FGameplayTagQuery& TagQuery, TArray<class AActor*>* SpawnedActors) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetActorsSpawnedMatchingQuery");

	Params::FortMission_GetActorsSpawnedMatchingQuery Parms{};

	Parms.TagQuery = std::move(TagQuery);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SpawnedActors != nullptr)
		*SpawnedActors = std::move(Parms.SpawnedActors);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.GetAdditionalMissionCompletionMissionPoints
// (BlueprintAuthorityOnly, Event, Protected, BlueprintEvent, Const)
// Parameters:
// EFortMissionStatus                      CompletionStatus                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortMission::GetAdditionalMissionCompletionMissionPoints(EFortMissionStatus CompletionStatus) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetAdditionalMissionCompletionMissionPoints");

	Params::FortMission_GetAdditionalMissionCompletionMissionPoints Parms{};

	Parms.CompletionStatus = CompletionStatus;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.GetAdditionalMissionSuccessBadges
// (BlueprintAuthorityOnly, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// TArray<class UFortWorldItemDefinition*> SuccessItems                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortMission::GetAdditionalMissionSuccessBadges(TArray<class UFortWorldItemDefinition*>* SuccessItems) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetAdditionalMissionSuccessBadges");

	Params::FortMission_GetAdditionalMissionSuccessBadges Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SuccessItems != nullptr)
		*SuccessItems = std::move(Parms.SuccessItems);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.GetAllObjectives
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AFortObjectiveBase*>       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AFortObjectiveBase*> AFortMission::GetAllObjectives() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetAllObjectives");

	Params::FortMission_GetAllObjectives Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.GetBuildingDamageLootTier
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerController*            PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortMission::GetBuildingDamageLootTier(class AFortPlayerController* PlayerController) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetBuildingDamageLootTier");

	Params::FortMission_GetBuildingDamageLootTier Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.GetCurrentBluGloRewards
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortMission::GetCurrentBluGloRewards() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetCurrentBluGloRewards");

	Params::FortMission_GetCurrentBluGloRewards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.GetCurrentFocusDisplayText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AFortMission::GetCurrentFocusDisplayText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetCurrentFocusDisplayText");

	Params::FortMission_GetCurrentFocusDisplayText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.GetCurrentFocusPercentage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortMission::GetCurrentFocusPercentage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetCurrentFocusPercentage");

	Params::FortMission_GetCurrentFocusPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.GetDaysRemainingBeforeOverPar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortMission::GetDaysRemainingBeforeOverPar() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetDaysRemainingBeforeOverPar");

	Params::FortMission_GetDaysRemainingBeforeOverPar Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.GetExpectedCompletionTime
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortMission::GetExpectedCompletionTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetExpectedCompletionTime");

	Params::FortMission_GetExpectedCompletionTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.GetMissionGuid
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGuid                            ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGuid AFortMission::GetMissionGuid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetMissionGuid");

	Params::FortMission_GetMissionGuid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.GetMissionName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AFortMission::GetMissionName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetMissionName");

	Params::FortMission_GetMissionName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.GetObjectiveByHandle
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            ObjectiveHandle                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AFortObjectiveBase*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortObjectiveBase* AFortMission::GetObjectiveByHandle(const struct FGameplayTagContainer& ObjectiveHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetObjectiveByHandle");

	Params::FortMission_GetObjectiveByHandle Parms{};

	Parms.ObjectiveHandle = std::move(ObjectiveHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.GetObjectiveHandlesWithTag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     ObjectiveTag                                           (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxNumberOfObjectives                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FGameplayTagContainer>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FGameplayTagContainer> AFortMission::GetObjectiveHandlesWithTag(const struct FGameplayTag& ObjectiveTag, int32 MaxNumberOfObjectives) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetObjectiveHandlesWithTag");

	Params::FortMission_GetObjectiveHandlesWithTag Parms{};

	Parms.ObjectiveTag = std::move(ObjectiveTag);
	Parms.MaxNumberOfObjectives = MaxNumberOfObjectives;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.GetObjectiveStatusByHandle
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            ObjectiveHandle                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EFortObjectiveStatus                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortObjectiveStatus AFortMission::GetObjectiveStatusByHandle(const struct FGameplayTagContainer& ObjectiveHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetObjectiveStatusByHandle");

	Params::FortMission_GetObjectiveStatusByHandle Parms{};

	Parms.ObjectiveHandle = std::move(ObjectiveHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.GetParticipatingMissionControllers
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AFortPlayerController*>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AFortPlayerController*> AFortMission::GetParticipatingMissionControllers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetParticipatingMissionControllers");

	Params::FortMission_GetParticipatingMissionControllers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.GetPawnDamageLootTier
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerController*            PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortMission::GetPawnDamageLootTier(class AFortPlayerController* PlayerController) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetPawnDamageLootTier");

	Params::FortMission_GetPawnDamageLootTier Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.GetSpawnLocationActorsMatchingQuery
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagQuery                TagQuery                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   SpawnLocationActors                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortMission::GetSpawnLocationActorsMatchingQuery(const struct FGameplayTagQuery& TagQuery, TArray<class AActor*>* SpawnLocationActors) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetSpawnLocationActorsMatchingQuery");

	Params::FortMission_GetSpawnLocationActorsMatchingQuery Parms{};

	Parms.TagQuery = std::move(TagQuery);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SpawnLocationActors != nullptr)
		*SpawnLocationActors = std::move(Parms.SpawnLocationActors);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.GetSpawnLocationsMatchingQuery
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagQuery                TagQuery                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  SpawnLocations                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortMission::GetSpawnLocationsMatchingQuery(const struct FGameplayTagQuery& TagQuery, TArray<struct FVector>* SpawnLocations) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "GetSpawnLocationsMatchingQuery");

	Params::FortMission_GetSpawnLocationsMatchingQuery Parms{};

	Parms.TagQuery = std::move(TagQuery);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SpawnLocations != nullptr)
		*SpawnLocations = std::move(Parms.SpawnLocations);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.HasMissionPar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortMission::HasMissionPar() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "HasMissionPar");

	Params::FortMission_HasMissionPar Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMission.IsPlayerParticipating
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerController*            PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortMission::IsPlayerParticipating(class AFortPlayerController* PlayerController) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMission", "IsPlayerParticipating");

	Params::FortMission_IsPlayerParticipating Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPvPMission_3PtDomination.CapturePointSetterHackTimer
// (Native, Protected)

void AFortPvPMission_3PtDomination::CapturePointSetterHackTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPvPMission_3PtDomination", "CapturePointSetterHackTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAbilitySystemComponentTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAbilitySystemComponentTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilitySystemComponentTooltip", "GetNumericValue");

	Params::FortAbilitySystemComponentTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilitySystemComponentTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAbilitySystemComponentTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilitySystemComponentTooltip", "GetTextForToken");

	Params::FortAbilitySystemComponentTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilitySystemComponentTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAbilitySystemComponentTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilitySystemComponentTooltip", "GetTokenizedDescriptionText");

	Params::FortAbilitySystemComponentTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilitySystemComponentTooltip.GetValueData
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortTooltipValueData            OutData                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAbilitySystemComponentTooltip::GetValueData(const class UObject* ObjectToDescribe, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, struct FFortTooltipValueData* OutData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilitySystemComponentTooltip", "GetValueData");

	Params::FortAbilitySystemComponentTooltip_GetValueData Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayEffectDeliveryActor.BroadcastExplosion
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// TArray<class AActor*>                   HitActors                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>               HitResults                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortGameplayEffectDeliveryActor::BroadcastExplosion(const TArray<class AActor*>& HitActors, const TArray<struct FHitResult>& HitResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayEffectDeliveryActor", "BroadcastExplosion");

	Params::FortGameplayEffectDeliveryActor_BroadcastExplosion Parms{};

	Parms.HitActors = std::move(HitActors);
	Parms.HitResults = std::move(HitResults);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameplayEffectDeliveryActor.DoExplosion
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFortGameplayEffectDeliveryActor::DoExplosion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayEffectDeliveryActor", "DoExplosion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameplayEffectDeliveryActor.Kill
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFortGameplayEffectDeliveryActor::Kill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayEffectDeliveryActor", "Kill");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameplayEffectDeliveryActor.KillTimerExpired
// (Native, Protected)

void AFortGameplayEffectDeliveryActor::KillTimerExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayEffectDeliveryActor", "KillTimerExpired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameplayEffectDeliveryActor.OnComponentOverlap
// (Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortGameplayEffectDeliveryActor::OnComponentOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayEffectDeliveryActor", "OnComponentOverlap");

	Params::FortGameplayEffectDeliveryActor_OnComponentOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameplayEffectDeliveryActor.OnComponentTouch
// (Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              HitComp                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NormalImpulse                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortGameplayEffectDeliveryActor::OnComponentTouch(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayEffectDeliveryActor", "OnComponentTouch");

	Params::FortGameplayEffectDeliveryActor_OnComponentTouch Parms{};

	Parms.HitComp = HitComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameplayEffectDeliveryActor.OnExploded
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   HitActors                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>               HitResults                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortGameplayEffectDeliveryActor::OnExploded(const TArray<class AActor*>& HitActors, const TArray<struct FHitResult>& HitResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayEffectDeliveryActor", "OnExploded");

	Params::FortGameplayEffectDeliveryActor_OnExploded Parms{};

	Parms.HitActors = std::move(HitActors);
	Parms.HitResults = std::move(HitResults);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortGameplayEffectDeliveryActor.OnRep_IsBeingKilled
// (Native, Protected)

void AFortGameplayEffectDeliveryActor::OnRep_IsBeingKilled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayEffectDeliveryActor", "OnRep_IsBeingKilled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameplayEffectDeliveryActor.OnTouched
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    bIsOverlap                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameplayEffectDeliveryActor::OnTouched(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FHitResult& HitResult, bool bIsOverlap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayEffectDeliveryActor", "OnTouched");

	Params::FortGameplayEffectDeliveryActor_OnTouched Parms{};

	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.HitResult = std::move(HitResult);
	Parms.bIsOverlap = bIsOverlap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortGameplayEffectDeliveryActor.SetCollisionComponent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              NewCollisionComponent                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameplayEffectDeliveryActor::SetCollisionComponent(class UPrimitiveComponent* NewCollisionComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayEffectDeliveryActor", "SetCollisionComponent");

	Params::FortGameplayEffectDeliveryActor_SetCollisionComponent Parms{};

	Parms.NewCollisionComponent = NewCollisionComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameplayEffectDeliveryActor.SetIgnoreInstigatorCollision
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bShouldIgnore                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameplayEffectDeliveryActor::SetIgnoreInstigatorCollision(bool bShouldIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayEffectDeliveryActor", "SetIgnoreInstigatorCollision");

	Params::FortGameplayEffectDeliveryActor_SetIgnoreInstigatorCollision Parms{};

	Parms.bShouldIgnore = bShouldIgnore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameplayEffectDeliveryActor.GetCollisionComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPrimitiveComponent* AFortGameplayEffectDeliveryActor::GetCollisionComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayEffectDeliveryActor", "GetCollisionComponent");

	Params::FortGameplayEffectDeliveryActor_GetCollisionComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayEffectDeliveryActor.IsBeingKilled
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortGameplayEffectDeliveryActor::IsBeingKilled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayEffectDeliveryActor", "IsBeingKilled");

	Params::FortGameplayEffectDeliveryActor_IsBeingKilled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.ThreatCloud.ManualLightningFlash
// (Event, Public, BlueprintEvent)

void AThreatCloud::ManualLightningFlash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThreatCloud", "ManualLightningFlash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.ThreatCloud.OnBeginDeath
// (Event, Protected, BlueprintEvent)

void AThreatCloud::OnBeginDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThreatCloud", "OnBeginDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.ThreatCloud.OnCloudActivated
// (Event, Public, BlueprintEvent)

void AThreatCloud::OnCloudActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThreatCloud", "OnCloudActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.ThreatCloud.OnCloudDeactivated
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortThreatDeactivationType             DeactivationType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AThreatCloud::OnCloudDeactivated(EFortThreatDeactivationType DeactivationType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThreatCloud", "OnCloudDeactivated");

	Params::ThreatCloud_OnCloudDeactivated Parms{};

	Parms.DeactivationType = DeactivationType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.ThreatCloud.OnCloudHiddenChange
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bCloudsAreHidden                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AThreatCloud::OnCloudHiddenChange(bool bCloudsAreHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThreatCloud", "OnCloudHiddenChange");

	Params::ThreatCloud_OnCloudHiddenChange Parms{};

	Parms.bCloudsAreHidden = bCloudsAreHidden;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.ThreatCloud.OnCloudStart
// (Event, Public, BlueprintEvent)

void AThreatCloud::OnCloudStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThreatCloud", "OnCloudStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.ThreatCloud.OnLightningStrike
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          StartLocation                                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          EndLocation                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABuildingRift*                    Rift                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLightningStruckRift                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AThreatCloud::OnLightningStrike(const struct FVector& StartLocation, const struct FVector& EndLocation, class ABuildingRift* Rift, bool bLightningStruckRift)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThreatCloud", "OnLightningStrike");

	Params::ThreatCloud_OnLightningStrike Parms{};

	Parms.StartLocation = std::move(StartLocation);
	Parms.EndLocation = std::move(EndLocation);
	Parms.Rift = Rift;
	Parms.bLightningStruckRift = bLightningStruckRift;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.ThreatCloud.OnThreatVolumeChanged
// (Event, Public, BlueprintEvent)

void AThreatCloud::OnThreatVolumeChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThreatCloud", "OnThreatVolumeChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.ThreatCloud.GetThreatVolume
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FBox                             ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FBox AThreatCloud::GetThreatVolume() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ThreatCloud", "GetThreatVolume");

	Params::ThreatCloud_GetThreatVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAsyncAction_SendQuestStatEvent.SendClientStatEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFortQuestManager*                Param_QuestManager                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDataTableRowHandle              Param_ObjectiveStat                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   Param_Count                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_SendQuestStatEvent*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_SendQuestStatEvent* UFortAsyncAction_SendQuestStatEvent::SendClientStatEvent(class UFortQuestManager* Param_QuestManager, const struct FDataTableRowHandle& Param_ObjectiveStat, int32 Param_Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_SendQuestStatEvent", "SendClientStatEvent");

	Params::FortAsyncAction_SendQuestStatEvent_SendClientStatEvent Parms{};

	Parms.Param_QuestManager = Param_QuestManager;
	Parms.Param_ObjectiveStat = std::move(Param_ObjectiveStat);
	Parms.Param_Count = Param_Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAsyncAction_SendQuestStatEvent.SendClientStatEventWithTags
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFortQuestManager*                Param_QuestManager                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            Param_TargetTags                                       (Parm, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            Param_SourceTags                                       (Parm, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            Param_ContextTags                                      (Parm, NativeAccessSpecifierPublic)
// int32                                   Param_Count                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_SendQuestStatEvent*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_SendQuestStatEvent* UFortAsyncAction_SendQuestStatEvent::SendClientStatEventWithTags(class UFortQuestManager* Param_QuestManager, const struct FGameplayTagContainer& Param_TargetTags, const struct FGameplayTagContainer& Param_SourceTags, const struct FGameplayTagContainer& Param_ContextTags, int32 Param_Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_SendQuestStatEvent", "SendClientStatEventWithTags");

	Params::FortAsyncAction_SendQuestStatEvent_SendClientStatEventWithTags Parms{};

	Parms.Param_QuestManager = Param_QuestManager;
	Parms.Param_TargetTags = std::move(Param_TargetTags);
	Parms.Param_SourceTags = std::move(Param_SourceTags);
	Parms.Param_ContextTags = std::move(Param_ContextTags);
	Parms.Param_Count = Param_Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortUITeamInfo.GetTeamHitPointFractions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<float>                           HealthFractions                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<float>                           ShieldFractions                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortUITeamInfo::GetTeamHitPointFractions(TArray<float>* HealthFractions, TArray<float>* ShieldFractions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUITeamInfo", "GetTeamHitPointFractions");

	Params::FortUITeamInfo_GetTeamHitPointFractions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (HealthFractions != nullptr)
		*HealthFractions = std::move(Parms.HealthFractions);

	if (ShieldFractions != nullptr)
		*ShieldFractions = std::move(Parms.ShieldFractions);
}


// Function FortniteGame.FortUITeamInfo.GetTeamMemberIDs
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FUniqueNetIdRepl>         TeamMemberIDs                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortUITeamInfo::GetTeamMemberIDs(TArray<struct FUniqueNetIdRepl>* TeamMemberIDs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUITeamInfo", "GetTeamMemberIDs");

	Params::FortUITeamInfo_GetTeamMemberIDs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TeamMemberIDs != nullptr)
		*TeamMemberIDs = std::move(Parms.TeamMemberIDs);
}


// Function FortniteGame.FortUITeamInfo.GetTeamMembers
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FFortTeamMemberInfo>      TeamMembers                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortUITeamInfo::GetTeamMembers(TArray<struct FFortTeamMemberInfo>* TeamMembers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUITeamInfo", "GetTeamMembers");

	Params::FortUITeamInfo_GetTeamMembers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TeamMembers != nullptr)
		*TeamMembers = std::move(Parms.TeamMembers);
}


// Function FortniteGame.FortUITeamInfo.IsTeamMemberSynchronizing
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerID                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUITeamInfo::IsTeamMemberSynchronizing(const struct FUniqueNetIdRepl& PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUITeamInfo", "IsTeamMemberSynchronizing");

	Params::FortUITeamInfo_IsTeamMemberSynchronizing Parms{};

	Parms.PlayerID = std::move(PlayerID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction FortniteGame.FortUITeamInfo.OnTeamHitPointFractionsChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// TArray<float>                           HealthFractions                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<float>                           ShieldFractions                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortUITeamInfo::OnTeamHitPointFractionsChanged__DelegateSignature(const TArray<float>& HealthFractions, const TArray<float>& ShieldFractions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUITeamInfo", "OnTeamHitPointFractionsChanged__DelegateSignature");

	Params::FortUITeamInfo_OnTeamHitPointFractionsChanged__DelegateSignature Parms{};

	Parms.HealthFractions = std::move(HealthFractions);
	Parms.ShieldFractions = std::move(ShieldFractions);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortUITeamInfo.OnTeamMemberAddedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// struct FFortTeamMemberInfo              NewTeamMemberInfo                                      (Parm, NativeAccessSpecifierPublic)

void UFortUITeamInfo::OnTeamMemberAddedDelegate__DelegateSignature(const struct FFortTeamMemberInfo& NewTeamMemberInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUITeamInfo", "OnTeamMemberAddedDelegate__DelegateSignature");

	Params::FortUITeamInfo_OnTeamMemberAddedDelegate__DelegateSignature Parms{};

	Parms.NewTeamMemberInfo = std::move(NewTeamMemberInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortUITeamInfo.OnTeamMemberFinishedSynchronizingDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// struct FUniqueNetIdRepl                 NewTeamMemberId                                        (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUITeamInfo::OnTeamMemberFinishedSynchronizingDelegate__DelegateSignature(const struct FUniqueNetIdRepl& NewTeamMemberId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUITeamInfo", "OnTeamMemberFinishedSynchronizingDelegate__DelegateSignature");

	Params::FortUITeamInfo_OnTeamMemberFinishedSynchronizingDelegate__DelegateSignature Parms{};

	Parms.NewTeamMemberId = std::move(NewTeamMemberId);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortUITeamInfo.OnTeamMemberRemovedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortUITeamInfo::OnTeamMemberRemovedDelegate__DelegateSignature(int32 PlayerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUITeamInfo", "OnTeamMemberRemovedDelegate__DelegateSignature");

	Params::FortUITeamInfo_OnTeamMemberRemovedDelegate__DelegateSignature Parms{};

	Parms.PlayerIndex = PlayerIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortUITeamInfo.OnTeamMemberSimpleDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortUITeamInfo::OnTeamMemberSimpleDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUITeamInfo", "OnTeamMemberSimpleDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteGame.FortUITeamInfo.OnTeamMemberStateChangedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// struct FFortTeamMemberInfo              TeamMemberInfo                                         (Parm, NativeAccessSpecifierPublic)

void UFortUITeamInfo::OnTeamMemberStateChangedDelegate__DelegateSignature(const struct FFortTeamMemberInfo& TeamMemberInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUITeamInfo", "OnTeamMemberStateChangedDelegate__DelegateSignature");

	Params::FortUITeamInfo_OnTeamMemberStateChangedDelegate__DelegateSignature Parms{};

	Parms.TeamMemberInfo = std::move(TeamMemberInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortAbilitySystemUI.GetDefaultObjectOfGameplayEffectType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class UGameplayEffect>      EffectType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGameplayEffect*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayEffect* UFortAbilitySystemUI::GetDefaultObjectOfGameplayEffectType(TSubclassOf<class UGameplayEffect> EffectType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAbilitySystemUI", "GetDefaultObjectOfGameplayEffectType");

	Params::FortAbilitySystemUI_GetDefaultObjectOfGameplayEffectType Parms{};

	Parms.EffectType = EffectType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilitySystemUI.GetStaticGameplayEffectDescription
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayEffect*                  Effect                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortGameplayEffectDescription   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortGameplayEffectDescription UFortAbilitySystemUI::GetStaticGameplayEffectDescription(const class UGameplayEffect* Effect, float Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAbilitySystemUI", "GetStaticGameplayEffectDescription");

	Params::FortAbilitySystemUI_GetStaticGameplayEffectDescription Parms{};

	Parms.Effect = Effect;
	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityTask_CommitAccountCosts.CommitAccountCosts
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAbilityTask_CommitAccountCosts*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAbilityTask_CommitAccountCosts* UFortAbilityTask_CommitAccountCosts::CommitAccountCosts(class UGameplayAbility* OwningAbility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAbilityTask_CommitAccountCosts", "CommitAccountCosts");

	Params::FortAbilityTask_CommitAccountCosts_CommitAccountCosts Parms{};

	Parms.OwningAbility = OwningAbility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTheaterMapTile.OnClientDeselect
// (Event, Public, BlueprintEvent)

void AFortTheaterMapTile::OnClientDeselect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "OnClientDeselect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortTheaterMapTile.OnClientSelect
// (Event, Public, BlueprintEvent)

void AFortTheaterMapTile::OnClientSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "OnClientSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortTheaterMapTile.OnDefocus
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AFortTheaterMapTile::OnDefocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "OnDefocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortTheaterMapTile.OnDeselectWrapper
// (Native, Public)
// Parameters:
// bool                                    bIsGameSessionOwner                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTheaterMapTile::OnDeselectWrapper(bool bIsGameSessionOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "OnDeselectWrapper");

	Params::FortTheaterMapTile_OnDeselectWrapper Parms{};

	Parms.bIsGameSessionOwner = bIsGameSessionOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTheaterMapTile.OnDisableGoToPrompt
// (Event, Public, BlueprintEvent)

void AFortTheaterMapTile::OnDisableGoToPrompt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "OnDisableGoToPrompt");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortTheaterMapTile.OnEnableGoToPrompt
// (Event, Public, BlueprintEvent)

void AFortTheaterMapTile::OnEnableGoToPrompt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "OnEnableGoToPrompt");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortTheaterMapTile.OnFocus
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AFortTheaterMapTile::OnFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "OnFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortTheaterMapTile.OnHostDeselect
// (Event, Public, BlueprintEvent)

void AFortTheaterMapTile::OnHostDeselect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "OnHostDeselect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortTheaterMapTile.OnHostSelect
// (Event, Public, BlueprintEvent)

void AFortTheaterMapTile::OnHostSelect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "OnHostSelect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortTheaterMapTile.OnInitializeTile
// (Event, Public, BlueprintEvent)

void AFortTheaterMapTile::OnInitializeTile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "OnInitializeTile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortTheaterMapTile.OnMarkedQuestChanged
// (Event, Public, BlueprintEvent)

void AFortTheaterMapTile::OnMarkedQuestChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "OnMarkedQuestChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortTheaterMapTile.OnMissionDataUpdated
// (Event, Public, BlueprintEvent)

void AFortTheaterMapTile::OnMissionDataUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "OnMissionDataUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortTheaterMapTile.OnMouseOverBegin
// (Final, Native, Public)
// Parameters:
// class AActor*                           MousedOverActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTheaterMapTile::OnMouseOverBegin(class AActor* MousedOverActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "OnMouseOverBegin");

	Params::FortTheaterMapTile_OnMouseOverBegin Parms{};

	Parms.MousedOverActor = MousedOverActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTheaterMapTile.OnMouseOverEnd
// (Final, Native, Public)
// Parameters:
// class AActor*                           MousedOverActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTheaterMapTile::OnMouseOverEnd(class AActor* MousedOverActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "OnMouseOverEnd");

	Params::FortTheaterMapTile_OnMouseOverEnd Parms{};

	Parms.MousedOverActor = MousedOverActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTheaterMapTile.OnSelectWrapper
// (Native, Public)
// Parameters:
// bool                                    bIsGameSessionOwner                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTheaterMapTile::OnSelectWrapper(bool bIsGameSessionOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "OnSelectWrapper");

	Params::FortTheaterMapTile_OnSelectWrapper Parms{};

	Parms.bIsGameSessionOwner = bIsGameSessionOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTheaterMapTile.OnTileClicked
// (Final, Native, Public)
// Parameters:
// class AActor*                           ClickedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ButtonReleased                                         (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTheaterMapTile::OnTileClicked(class AActor* ClickedActor, const struct FKey& ButtonReleased)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "OnTileClicked");

	Params::FortTheaterMapTile_OnTileClicked Parms{};

	Parms.ClickedActor = ClickedActor;
	Parms.ButtonReleased = std::move(ButtonReleased);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTheaterMapTile.DoesTileAllowQuickplay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortTheaterMapTile::DoesTileAllowQuickplay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "DoesTileAllowQuickplay");

	Params::FortTheaterMapTile_DoesTileAllowQuickplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTheaterMapTile.GetMissionAlertCategory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortMissionAlertCategory               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortMissionAlertCategory AFortTheaterMapTile::GetMissionAlertCategory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "GetMissionAlertCategory");

	Params::FortTheaterMapTile_GetMissionAlertCategory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTheaterMapTile.GetZoneDifficulty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameDifficultyInfo              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameDifficultyInfo AFortTheaterMapTile::GetZoneDifficulty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "GetZoneDifficulty");

	Params::FortTheaterMapTile_GetZoneDifficulty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTheaterMapTile.HasValidMissionData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortTheaterMapTile::HasValidMissionData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "HasValidMissionData");

	Params::FortTheaterMapTile_HasValidMissionData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTheaterMapTile.IsMissionAlertTile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortTheaterMapTile::IsMissionAlertTile() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "IsMissionAlertTile");

	Params::FortTheaterMapTile_IsMissionAlertTile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTheaterMapTile.IsTileHidden
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortTheaterMapTile::IsTileHidden() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "IsTileHidden");

	Params::FortTheaterMapTile_IsTileHidden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTheaterMapTile.IsTileLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortTheaterMapTile::IsTileLocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "IsTileLocked");

	Params::FortTheaterMapTile_IsTileLocked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTheaterMapTile.IsTilePlayable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortTheaterMapTile::IsTilePlayable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "IsTilePlayable");

	Params::FortTheaterMapTile_IsTilePlayable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTheaterMapTile.IsTileQuestRecommended
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortTheaterMapTile::IsTileQuestRecommended() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "IsTileQuestRecommended");

	Params::FortTheaterMapTile_IsTileQuestRecommended Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTheaterMapTile.IsTileSelectable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortTheaterMapTile::IsTileSelectable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "IsTileSelectable");

	Params::FortTheaterMapTile_IsTileSelectable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTheaterMapTile.IsTileValidForMarkedQuest
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItem*                   OutMarkedQuest                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortTheaterMapTile::IsTileValidForMarkedQuest(class UFortQuestItem** OutMarkedQuest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapTile", "IsTileValidForMarkedQuest");

	Params::FortTheaterMapTile_IsTileValidForMarkedQuest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMarkedQuest != nullptr)
		*OutMarkedQuest = Parms.OutMarkedQuest;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityTask_DirectedMovement.DirectedMovement
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          MovementDirection                                      (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDirectedMovementSpace              MovementSpaceType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Param_MovementDistance                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MovementDuration                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   IdealDistance                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ModifyZ                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Param_bCancelOnFalling                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAbilityTask_DirectedMovement*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAbilityTask_DirectedMovement* UFortAbilityTask_DirectedMovement::DirectedMovement(class UGameplayAbility* OwningAbility, const struct FVector& MovementDirection, EFortDirectedMovementSpace MovementSpaceType, float Param_MovementDistance, float MovementDuration, float IdealDistance, bool ModifyZ, bool Param_bCancelOnFalling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAbilityTask_DirectedMovement", "DirectedMovement");

	Params::FortAbilityTask_DirectedMovement_DirectedMovement Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.MovementDirection = std::move(MovementDirection);
	Parms.MovementSpaceType = MovementSpaceType;
	Parms.Param_MovementDistance = Param_MovementDistance;
	Parms.MovementDuration = MovementDuration;
	Parms.IdealDistance = IdealDistance;
	Parms.ModifyZ = ModifyZ;
	Parms.Param_bCancelOnFalling = Param_bCancelOnFalling;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityTask_DirectedMovement.DirectedMovementToActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxMovementDistance                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MovementDuration                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   IdealDistance                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ModifyZ                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Param_bCancelOnFalling                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAbilityTask_DirectedMovement*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAbilityTask_DirectedMovement* UFortAbilityTask_DirectedMovement::DirectedMovementToActor(class UGameplayAbility* OwningAbility, class AActor* TargetActor, float MaxMovementDistance, float MovementDuration, float IdealDistance, bool ModifyZ, bool Param_bCancelOnFalling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAbilityTask_DirectedMovement", "DirectedMovementToActor");

	Params::FortAbilityTask_DirectedMovement_DirectedMovementToActor Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TargetActor = TargetActor;
	Parms.MaxMovementDistance = MaxMovementDistance;
	Parms.MovementDuration = MovementDuration;
	Parms.IdealDistance = IdealDistance;
	Parms.ModifyZ = ModifyZ;
	Parms.Param_bCancelOnFalling = Param_bCancelOnFalling;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityTask_DirectedMovement.DirectedMovementToComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  Param_TargetComponent                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxMovementDistance                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MovementDuration                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   IdealDistance                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ModifyZ                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Param_bCancelOnFalling                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAbilityTask_DirectedMovement*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAbilityTask_DirectedMovement* UFortAbilityTask_DirectedMovement::DirectedMovementToComponent(class UGameplayAbility* OwningAbility, class USceneComponent* Param_TargetComponent, float MaxMovementDistance, float MovementDuration, float IdealDistance, bool ModifyZ, bool Param_bCancelOnFalling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAbilityTask_DirectedMovement", "DirectedMovementToComponent");

	Params::FortAbilityTask_DirectedMovement_DirectedMovementToComponent Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.Param_TargetComponent = Param_TargetComponent;
	Parms.MaxMovementDistance = MaxMovementDistance;
	Parms.MovementDuration = MovementDuration;
	Parms.IdealDistance = IdealDistance;
	Parms.ModifyZ = ModifyZ;
	Parms.Param_bCancelOnFalling = Param_bCancelOnFalling;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityTask_DirectedMovement.DirectedMovementToLocation
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          MovementTargetLocation                                 (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDirectedMovementSpace              MovementSpaceType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MovementDuration                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CloseEnoughDistance                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ModifyZ                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Param_bCancelOnFalling                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAbilityTask_DirectedMovement*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAbilityTask_DirectedMovement* UFortAbilityTask_DirectedMovement::DirectedMovementToLocation(class UGameplayAbility* OwningAbility, const struct FVector& MovementTargetLocation, EFortDirectedMovementSpace MovementSpaceType, float MovementDuration, float CloseEnoughDistance, bool ModifyZ, bool Param_bCancelOnFalling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAbilityTask_DirectedMovement", "DirectedMovementToLocation");

	Params::FortAbilityTask_DirectedMovement_DirectedMovementToLocation Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.MovementTargetLocation = std::move(MovementTargetLocation);
	Parms.MovementSpaceType = MovementSpaceType;
	Parms.MovementDuration = MovementDuration;
	Parms.CloseEnoughDistance = CloseEnoughDistance;
	Parms.ModifyZ = ModifyZ;
	Parms.Param_bCancelOnFalling = Param_bCancelOnFalling;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityTask_MoveAI.CreateMoveAITask
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           MoveActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          MoveLocation                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPawnActionMoveMode                     MoveMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPathObstacleAction                     PathObstacleAction                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bStopAtEnd                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAIOptionFlag                           AcceptPartialPath                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFinishOnPlayerCollision                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bProjectGoalLocationOnNavMesh                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AcceptableRadius                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AFortPawn>            PushBumpedPawnClass                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UNavigationQueryFilter>FilterClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseContinuousGoalTracking                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAbilityTask_MoveAI*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAbilityTask_MoveAI* UFortAbilityTask_MoveAI::CreateMoveAITask(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class AActor* MoveActor, const struct FVector& MoveLocation, EPawnActionMoveMode MoveMode, EPathObstacleAction PathObstacleAction, bool bStopAtEnd, EAIOptionFlag AcceptPartialPath, bool bFinishOnPlayerCollision, bool bProjectGoalLocationOnNavMesh, float AcceptableRadius, TSubclassOf<class AFortPawn> PushBumpedPawnClass, TSubclassOf<class UNavigationQueryFilter> FilterClass, bool bUseContinuousGoalTracking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAbilityTask_MoveAI", "CreateMoveAITask");

	Params::FortAbilityTask_MoveAI_CreateMoveAITask Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.MoveActor = MoveActor;
	Parms.MoveLocation = std::move(MoveLocation);
	Parms.MoveMode = MoveMode;
	Parms.PathObstacleAction = PathObstacleAction;
	Parms.bStopAtEnd = bStopAtEnd;
	Parms.AcceptPartialPath = AcceptPartialPath;
	Parms.bFinishOnPlayerCollision = bFinishOnPlayerCollision;
	Parms.bProjectGoalLocationOnNavMesh = bProjectGoalLocationOnNavMesh;
	Parms.AcceptableRadius = AcceptableRadius;
	Parms.PushBumpedPawnClass = PushBumpedPawnClass;
	Parms.FilterClass = FilterClass;
	Parms.bUseContinuousGoalTracking = bUseContinuousGoalTracking;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityTask_PlayMontageWaitTarget.PlayMontageInfoAndWaitForTrigger
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortGameplayAbilityMontageInfo  Param_MontageInfo                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UFortAbilityTask_PlayMontageWaitTarget*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAbilityTask_PlayMontageWaitTarget* UFortAbilityTask_PlayMontageWaitTarget::PlayMontageInfoAndWaitForTrigger(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, const struct FFortGameplayAbilityMontageInfo& Param_MontageInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAbilityTask_PlayMontageWaitTarget", "PlayMontageInfoAndWaitForTrigger");

	Params::FortAbilityTask_PlayMontageWaitTarget_PlayMontageInfoAndWaitForTrigger Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.Param_MontageInfo = std::move(Param_MontageInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityTask_PlayMontageWaitTarget.PlayMontageWaitTarget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                     MontageToPlay                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AnimPlayRate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortGameplayAbilityMontageSectionToPlaySectionToPlay                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OverrideSection                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AnimRootMotionTranslationScale                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAbilityTask_PlayMontageWaitTarget*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAbilityTask_PlayMontageWaitTarget* UFortAbilityTask_PlayMontageWaitTarget::PlayMontageWaitTarget(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class UAnimMontage* MontageToPlay, float AnimPlayRate, EFortGameplayAbilityMontageSectionToPlay SectionToPlay, class FName OverrideSection, float AnimRootMotionTranslationScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAbilityTask_PlayMontageWaitTarget", "PlayMontageWaitTarget");

	Params::FortAbilityTask_PlayMontageWaitTarget_PlayMontageWaitTarget Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.MontageToPlay = MontageToPlay;
	Parms.AnimPlayRate = AnimPlayRate;
	Parms.SectionToPlay = SectionToPlay;
	Parms.OverrideSection = OverrideSection;
	Parms.AnimRootMotionTranslationScale = AnimRootMotionTranslationScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityTask_PlayMontageWaitTarget.PlayMontageWithCharPartsWait
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                     MontageToPlay                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortCharacterPartMontageInfo>CharacterPartMontages                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// float                                   AnimPlayRate                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortGameplayAbilityMontageSectionToPlaySectionToPlay                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OverrideSection                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AnimRootMotionTranslationScale                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAbilityTask_PlayMontageWaitTarget*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAbilityTask_PlayMontageWaitTarget* UFortAbilityTask_PlayMontageWaitTarget::PlayMontageWithCharPartsWait(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class UAnimMontage* MontageToPlay, const TArray<struct FFortCharacterPartMontageInfo>& CharacterPartMontages, float AnimPlayRate, EFortGameplayAbilityMontageSectionToPlay SectionToPlay, class FName OverrideSection, float AnimRootMotionTranslationScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAbilityTask_PlayMontageWaitTarget", "PlayMontageWithCharPartsWait");

	Params::FortAbilityTask_PlayMontageWaitTarget_PlayMontageWithCharPartsWait Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.MontageToPlay = MontageToPlay;
	Parms.CharacterPartMontages = std::move(CharacterPartMontages);
	Parms.AnimPlayRate = AnimPlayRate;
	Parms.SectionToPlay = SectionToPlay;
	Parms.OverrideSection = OverrideSection;
	Parms.AnimRootMotionTranslationScale = AnimRootMotionTranslationScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityTask_PlayMontageWaitTarget.EnableScalingWithRateOfFire
// (Final, Native, Public, BlueprintCallable)

void UFortAbilityTask_PlayMontageWaitTarget::EnableScalingWithRateOfFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityTask_PlayMontageWaitTarget", "EnableScalingWithRateOfFire");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAbilityTask_PlayMontageWaitTarget.OnTargetDataCancelledCallback
// (Final, Native, Public)

void UFortAbilityTask_PlayMontageWaitTarget::OnTargetDataCancelledCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityTask_PlayMontageWaitTarget", "OnTargetDataCancelledCallback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAbilityTask_PlayMontageWaitTarget.OnTargetDataReadyCallback
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FGameplayAbilityTargetDataHandle TargetData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ApplicationTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAbilityTask_PlayMontageWaitTarget::OnTargetDataReadyCallback(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityTask_PlayMontageWaitTarget", "OnTargetDataReadyCallback");

	Params::FortAbilityTask_PlayMontageWaitTarget_OnTargetDataReadyCallback Parms{};

	Parms.TargetData = std::move(TargetData);
	Parms.ApplicationTag = std::move(ApplicationTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAsyncAction_WaitForClientAnnouncement.WaitForClientAnnouncement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortClientAnnouncement*          AnnouncementToWaitFor                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_WaitForClientAnnouncement*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_WaitForClientAnnouncement* UFortAsyncAction_WaitForClientAnnouncement::WaitForClientAnnouncement(class UObject* InWorldContextObject, class AFortClientAnnouncement* AnnouncementToWaitFor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_WaitForClientAnnouncement", "WaitForClientAnnouncement");

	Params::FortAsyncAction_WaitForClientAnnouncement_WaitForClientAnnouncement Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.AnnouncementToWaitFor = AnnouncementToWaitFor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortUINotification.ClearNotification
// (BlueprintCosmetic, Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UFortUINotification::ClearNotification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINotification", "ClearNotification");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortUINotification.CreateWidget
// (BlueprintCosmetic, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UFortUINotification::CreateWidget(class APlayerController* OwningPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINotification", "CreateWidget");

	Params::FortUINotification_CreateWidget Parms{};

	Parms.OwningPlayer = OwningPlayer;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortUINotification.GetImageOverride
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UFortUINotification::GetImageOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINotification", "GetImageOverride");

	Params::FortUINotification_GetImageOverride Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortUINotification.NotificationShown
// (BlueprintCosmetic, Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UFortUINotification::NotificationShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINotification", "NotificationShown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortUINotification.TakeAction
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UFortUINotification::TakeAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINotification", "TakeAction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortUINotification.ShouldShowNotification
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortUINotification::ShouldShowNotification() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUINotification", "ShouldShowNotification");

	Params::FortUINotification_ShouldShowNotification Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityTask_SetNextMontageSectionAndWait.SetNextMontageSectionAndWait
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                     PlayingMontage                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NextMontageSection                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAbilityTask_SetNextMontageSectionAndWait*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAbilityTask_SetNextMontageSectionAndWait* UFortAbilityTask_SetNextMontageSectionAndWait::SetNextMontageSectionAndWait(class UGameplayAbility* OwningAbility, class UAnimMontage* PlayingMontage, class FName NextMontageSection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAbilityTask_SetNextMontageSectionAndWait", "SetNextMontageSectionAndWait");

	Params::FortAbilityTask_SetNextMontageSectionAndWait_SetNextMontageSectionAndWait Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.PlayingMontage = PlayingMontage;
	Parms.NextMontageSection = NextMontageSection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityTask_SetNextMontageSectionAndWait.OnMontageBlendingOut
// (Final, Native, Public)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInterrupted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAbilityTask_SetNextMontageSectionAndWait::OnMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityTask_SetNextMontageSectionAndWait", "OnMontageBlendingOut");

	Params::FortAbilityTask_SetNextMontageSectionAndWait_OnMontageBlendingOut Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAbilityTask_SpawnProjectileAndWait.SpawnProjectileAndWait
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AFortProjectileBase>  Param_Class                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Param_RequestedBy                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Param_SpawnLocation                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         Param_SpawnRotation                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         Param_SpawnDirection                                   (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   Param_InitialSpeed                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortGameplayEffectContainerSpec Param_EffectContainerSpecToApplyOnHit                  (Parm, NativeAccessSpecifierPublic)
// struct FFortGameplayEffectContainerSpec Param_EffectContainerSpecToApplyOnExplode              (Parm, NativeAccessSpecifierPublic)
// float                                   Param_GravityScale                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Param_HomingTarget                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAbilityTask_SpawnProjectileAndWait*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAbilityTask_SpawnProjectileAndWait* UFortAbilityTask_SpawnProjectileAndWait::SpawnProjectileAndWait(class UGameplayAbility* OwningAbility, TSubclassOf<class AFortProjectileBase> Param_Class, class AActor* Param_RequestedBy, const struct FVector& Param_SpawnLocation, const struct FRotator& Param_SpawnRotation, const struct FRotator& Param_SpawnDirection, float Param_InitialSpeed, const struct FFortGameplayEffectContainerSpec& Param_EffectContainerSpecToApplyOnHit, const struct FFortGameplayEffectContainerSpec& Param_EffectContainerSpecToApplyOnExplode, float Param_GravityScale, class AActor* Param_HomingTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAbilityTask_SpawnProjectileAndWait", "SpawnProjectileAndWait");

	Params::FortAbilityTask_SpawnProjectileAndWait_SpawnProjectileAndWait Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.Param_Class = Param_Class;
	Parms.Param_RequestedBy = Param_RequestedBy;
	Parms.Param_SpawnLocation = std::move(Param_SpawnLocation);
	Parms.Param_SpawnRotation = std::move(Param_SpawnRotation);
	Parms.Param_SpawnDirection = std::move(Param_SpawnDirection);
	Parms.Param_InitialSpeed = Param_InitialSpeed;
	Parms.Param_EffectContainerSpecToApplyOnHit = std::move(Param_EffectContainerSpecToApplyOnHit);
	Parms.Param_EffectContainerSpecToApplyOnExplode = std::move(Param_EffectContainerSpecToApplyOnExplode);
	Parms.Param_GravityScale = Param_GravityScale;
	Parms.Param_HomingTarget = Param_HomingTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityTask_SpawnProjectileAndWait.BeginSpawningActor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AFortProjectileBase>  Param_Class                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortProjectileBase*              SpawnedActor                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAbilityTask_SpawnProjectileAndWait::BeginSpawningActor(class UGameplayAbility* OwningAbility, TSubclassOf<class AFortProjectileBase> Param_Class, class AFortProjectileBase** SpawnedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityTask_SpawnProjectileAndWait", "BeginSpawningActor");

	Params::FortAbilityTask_SpawnProjectileAndWait_BeginSpawningActor Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.Param_Class = Param_Class;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SpawnedActor != nullptr)
		*SpawnedActor = Parms.SpawnedActor;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityTask_SpawnProjectileAndWait.FinishSpawningActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortProjectileBase*              SpawnedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAbilityTask_SpawnProjectileAndWait::FinishSpawningActor(class UGameplayAbility* OwningAbility, class AFortProjectileBase* SpawnedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityTask_SpawnProjectileAndWait", "FinishSpawningActor");

	Params::FortAbilityTask_SpawnProjectileAndWait_FinishSpawningActor Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.SpawnedActor = SpawnedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAbilityTask_SpawnProjectileAndWait.OnProjectileDestroyed
// (Final, Native, Public)
// Parameters:
// class AActor*                           DestroyedActor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAbilityTask_SpawnProjectileAndWait::OnProjectileDestroyed(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityTask_SpawnProjectileAndWait", "OnProjectileDestroyed");

	Params::FortAbilityTask_SpawnProjectileAndWait_OnProjectileDestroyed Parms{};

	Parms.DestroyedActor = DestroyedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAsyncAction_MakeTieredWaveEncounterSettings.CreateAsyncAction_MakeTieredWaveEncounterSettings
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTieredWaveSetData               Param_WaveData                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FFortEncounterSettings           InEncounterSettings                                    (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UFortAsyncAction_MakeTieredWaveEncounterSettings*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_MakeTieredWaveEncounterSettings* UFortAsyncAction_MakeTieredWaveEncounterSettings::CreateAsyncAction_MakeTieredWaveEncounterSettings(const struct FTieredWaveSetData& Param_WaveData, struct FFortEncounterSettings& InEncounterSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_MakeTieredWaveEncounterSettings", "CreateAsyncAction_MakeTieredWaveEncounterSettings");

	Params::FortAsyncAction_MakeTieredWaveEncounterSettings_CreateAsyncAction_MakeTieredWaveEncounterSettings Parms{};

	Parms.Param_WaveData = std::move(Param_WaveData);
	Parms.InEncounterSettings = std::move(InEncounterSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	InEncounterSettings = std::move(Parms.InEncounterSettings);

	return Parms.ReturnValue;
}


// Function FortniteGame.WorldMapPinManager.CreateWorldMapPin
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FString                           TheaterId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWorldMapPin*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWorldMapPin* AWorldMapPinManager::CreateWorldMapPin(const class FString& TheaterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldMapPinManager", "CreateWorldMapPin");

	Params::WorldMapPinManager_CreateWorldMapPin Parms{};

	Parms.TheaterId = std::move(TheaterId);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityTask_WaitTargetSelection.WaitTargetSelection
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UGameplayAbility*                 OwningAbility                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TaskInstanceName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     InApplicationTag                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Param_bForceTargetingOnServer                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAbilityTask_WaitTargetSelection*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAbilityTask_WaitTargetSelection* UFortAbilityTask_WaitTargetSelection::WaitTargetSelection(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, const struct FGameplayTag& InApplicationTag, bool Param_bForceTargetingOnServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAbilityTask_WaitTargetSelection", "WaitTargetSelection");

	Params::FortAbilityTask_WaitTargetSelection_WaitTargetSelection Parms{};

	Parms.OwningAbility = OwningAbility;
	Parms.TaskInstanceName = TaskInstanceName;
	Parms.InApplicationTag = std::move(InApplicationTag);
	Parms.Param_bForceTargetingOnServer = Param_bForceTargetingOnServer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityTask_WaitTargetSelection.OnTargetDataCancelledCallback
// (Final, Native, Public)

void UFortAbilityTask_WaitTargetSelection::OnTargetDataCancelledCallback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityTask_WaitTargetSelection", "OnTargetDataCancelledCallback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAbilityTask_WaitTargetSelection.OnTargetDataReadyCallback
// (Final, Native, Public, HasOutParams)
// Parameters:
// struct FGameplayAbilityTargetDataHandle TargetData                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ApplicationTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAbilityTask_WaitTargetSelection::OnTargetDataReadyCallback(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityTask_WaitTargetSelection", "OnTargetDataReadyCallback");

	Params::FortAbilityTask_WaitTargetSelection_OnTargetDataReadyCallback Parms{};

	Parms.TargetData = std::move(TargetData);
	Parms.ApplicationTag = std::move(ApplicationTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAbilityTestObserver.StartObserving
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                            Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAbilityTestObserver::StartObserving(class APawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityTestObserver", "StartObserving");

	Params::FortAbilityTestObserver_StartObserving Parms{};

	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAbilityTestObserver.StopObserving
// (Final, Native, Public, BlueprintCallable)

void AFortAbilityTestObserver::StopObserving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityTestObserver", "StopObserving");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAbilityTestObserver.WasAbilityActivated
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGameplayAbility*                 Ability                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAbilityTestObserver::WasAbilityActivated(class UGameplayAbility* Ability) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityTestObserver", "WasAbilityActivated");

	Params::FortAbilityTestObserver_WasAbilityActivated Parms{};

	Parms.Ability = Ability;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAbilityTestObserver.WasAbilityTagActivated
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTag                     AbilityTag                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAbilityTestObserver::WasAbilityTagActivated(const struct FGameplayTag& AbilityTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAbilityTestObserver", "WasAbilityTagActivated");

	Params::FortAbilityTestObserver_WasAbilityTagActivated Parms{};

	Parms.AbilityTag = std::move(AbilityTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortObjectiveNeutralCompleteParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortObjectiveBase*               _NeutrallyCompletedObjective                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortObjectiveNeutralCompleteParams::BreakParams(class AFortObjectiveBase** _NeutrallyCompletedObjective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveNeutralCompleteParams", "BreakParams");

	Params::FortObjectiveNeutralCompleteParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_NeutrallyCompletedObjective != nullptr)
		*_NeutrallyCompletedObjective = Parms._NeutrallyCompletedObjective;
}


// Function FortniteGame.FortObjectiveNeutralCompleteParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortObjectiveBase*               _NeutrallyCompletedObjective                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortObjectiveNeutralCompleteParams*ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortObjectiveNeutralCompleteParams::SetParams(class AFortObjectiveBase* _NeutrallyCompletedObjective, class UFortObjectiveNeutralCompleteParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveNeutralCompleteParams", "SetParams");

	Params::FortObjectiveNeutralCompleteParams_SetParams Parms{};

	Parms._NeutrallyCompletedObjective = _NeutrallyCompletedObjective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortAttachToActorInterface.GetActorAttachedTo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* IFortAttachToActorInterface::GetActorAttachedTo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAttachToActorInterface", "GetActorAttachedTo");

	Params::FortAttachToActorInterface_GetActorAttachedTo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerDiedParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerPawn*                  _KilledPlayer                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _KilledBy                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerDiedParams::BreakParams(class AFortPlayerPawn** _KilledPlayer, class AController** _KilledBy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerDiedParams", "BreakParams");

	Params::FortPlayerDiedParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_KilledPlayer != nullptr)
		*_KilledPlayer = Parms._KilledPlayer;

	if (_KilledBy != nullptr)
		*_KilledBy = Parms._KilledBy;
}


// Function FortniteGame.FortPlayerDiedParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerPawn*                  _KilledPlayer                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _KilledBy                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortPlayerDiedParams*            ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerDiedParams::SetParams(class AFortPlayerPawn* _KilledPlayer, class AController* _KilledBy, class UFortPlayerDiedParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerDiedParams", "SetParams");

	Params::FortPlayerDiedParams_SetParams Parms{};

	Parms._KilledPlayer = _KilledPlayer;
	Parms._KilledBy = _KilledBy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortAccountBuffItem.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAccountBuffItem::IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAccountBuffItem", "IsActive");

	Params::FortAccountBuffItem_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionSucceededParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortMission*                     _SucceededMission                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionSucceededParams::BreakParams(class AFortMission** _SucceededMission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionSucceededParams", "BreakParams");

	Params::FortMissionSucceededParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_SucceededMission != nullptr)
		*_SucceededMission = Parms._SucceededMission;
}


// Function FortniteGame.FortMissionSucceededParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortMission*                     _SucceededMission                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortMissionSucceededParams*      ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionSucceededParams::SetParams(class AFortMission* _SucceededMission, class UFortMissionSucceededParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionSucceededParams", "SetParams");

	Params::FortMissionSucceededParams_SetParams Parms{};

	Parms._SucceededMission = _SucceededMission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortAdvancedMovementSet.OnRep_BrakingDecelerationFalling
// (Final, Native, Public)

void UFortAdvancedMovementSet::OnRep_BrakingDecelerationFalling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAdvancedMovementSet", "OnRep_BrakingDecelerationFalling");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAdvancedMovementSet.OnRep_BrakingDecelerationWalking
// (Final, Native, Public)

void UFortAdvancedMovementSet::OnRep_BrakingDecelerationWalking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAdvancedMovementSet", "OnRep_BrakingDecelerationWalking");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAdvancedMovementSet.OnRep_BrakingFrictionFactor
// (Final, Native, Public)

void UFortAdvancedMovementSet::OnRep_BrakingFrictionFactor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAdvancedMovementSet", "OnRep_BrakingFrictionFactor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAdvancedMovementSet.OnRep_GroundFriction
// (Final, Native, Public)

void UFortAdvancedMovementSet::OnRep_GroundFriction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAdvancedMovementSet", "OnRep_GroundFriction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAdvancedMovementSet.OnRep_JumpZVelocity
// (Final, Native, Public)

void UFortAdvancedMovementSet::OnRep_JumpZVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAdvancedMovementSet", "OnRep_JumpZVelocity");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAdvancedMovementSet.OnRep_MaxAcceleration
// (Final, Native, Public)

void UFortAdvancedMovementSet::OnRep_MaxAcceleration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAdvancedMovementSet", "OnRep_MaxAcceleration");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAdvancedMovementSet.OnRep_MinAnalogWalkSpeed
// (Final, Native, Public)

void UFortAdvancedMovementSet::OnRep_MinAnalogWalkSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAdvancedMovementSet", "OnRep_MinAnalogWalkSpeed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortToggledOptionsMenuParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerController*            _PlayerThatToggledOptionsMenu                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Opened                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortToggledOptionsMenuParams::BreakParams(class AFortPlayerController** _PlayerThatToggledOptionsMenu, bool* Opened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortToggledOptionsMenuParams", "BreakParams");

	Params::FortToggledOptionsMenuParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_PlayerThatToggledOptionsMenu != nullptr)
		*_PlayerThatToggledOptionsMenu = Parms._PlayerThatToggledOptionsMenu;

	if (Opened != nullptr)
		*Opened = Parms.Opened;
}


// Function FortniteGame.FortToggledOptionsMenuParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            _PlayerThatToggledOptionsMenu                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Opened                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortToggledOptionsMenuParams*    ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortToggledOptionsMenuParams::SetParams(class AFortPlayerController* _PlayerThatToggledOptionsMenu, bool Opened, class UFortToggledOptionsMenuParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortToggledOptionsMenuParams", "SetParams");

	Params::FortToggledOptionsMenuParams_SetParams Parms{};

	Parms._PlayerThatToggledOptionsMenu = _PlayerThatToggledOptionsMenu;
	Parms.Opened = Opened;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortOnboardingAnalytics.FireAnalyticsEvent_CinematicSkipped
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CinematicName                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOnboardingAnalytics::FireAnalyticsEvent_CinematicSkipped(const class UObject* SourceBp, const class FString& CinematicName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOnboardingAnalytics", "FireAnalyticsEvent_CinematicSkipped");

	Params::FortOnboardingAnalytics_FireAnalyticsEvent_CinematicSkipped Parms{};

	Parms.SourceBp = SourceBp;
	Parms.CinematicName = std::move(CinematicName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOnboardingAnalytics.FireAnalyticsEvent_MineCartDestroyed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOnboardingAnalytics::FireAnalyticsEvent_MineCartDestroyed(const class UObject* SourceBp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOnboardingAnalytics", "FireAnalyticsEvent_MineCartDestroyed");

	Params::FortOnboardingAnalytics_FireAnalyticsEvent_MineCartDestroyed Parms{};

	Parms.SourceBp = SourceBp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOnboardingAnalytics.FireAnalyticsEvent_TutorialCanceled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOnboardingAnalytics::FireAnalyticsEvent_TutorialCanceled(const class UObject* SourceBp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOnboardingAnalytics", "FireAnalyticsEvent_TutorialCanceled");

	Params::FortOnboardingAnalytics_FireAnalyticsEvent_TutorialCanceled Parms{};

	Parms.SourceBp = SourceBp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOnboardingAnalytics.FireAnalyticsEvent_TutorialCompleted
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    WasSuccessful                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOnboardingAnalytics::FireAnalyticsEvent_TutorialCompleted(const class UObject* SourceBp, bool WasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOnboardingAnalytics", "FireAnalyticsEvent_TutorialCompleted");

	Params::FortOnboardingAnalytics_FireAnalyticsEvent_TutorialCompleted Parms{};

	Parms.SourceBp = SourceBp;
	Parms.WasSuccessful = WasSuccessful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOnboardingAnalytics.FireAnalyticsEvent_TutorialStartupFailed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MatchmakingResult                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOnboardingAnalytics::FireAnalyticsEvent_TutorialStartupFailed(const class UObject* SourceBp, const int32 MatchmakingResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOnboardingAnalytics", "FireAnalyticsEvent_TutorialStartupFailed");

	Params::FortOnboardingAnalytics_FireAnalyticsEvent_TutorialStartupFailed Parms{};

	Parms.SourceBp = SourceBp;
	Parms.MatchmakingResult = MatchmakingResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOnboardingAnalytics.FireAnalyticsEvent_VinderTipPlayed
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           VinderTipTag                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOnboardingAnalytics::FireAnalyticsEvent_VinderTipPlayed(const class UObject* SourceBp, const class FString& VinderTipTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOnboardingAnalytics", "FireAnalyticsEvent_VinderTipPlayed");

	Params::FortOnboardingAnalytics_FireAnalyticsEvent_VinderTipPlayed Parms{};

	Parms.SourceBp = SourceBp;
	Parms.VinderTipTag = std::move(VinderTipTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCharacterAttrSet.OnRep_Fortitude
// (Final, Native, Public)

void UFortCharacterAttrSet::OnRep_Fortitude()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterAttrSet", "OnRep_Fortitude");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCharacterAttrSet.OnRep_MaxCharacterLevel
// (Final, Native, Public)

void UFortCharacterAttrSet::OnRep_MaxCharacterLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterAttrSet", "OnRep_MaxCharacterLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCharacterAttrSet.OnRep_Offense
// (Final, Native, Public)

void UFortCharacterAttrSet::OnRep_Offense()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterAttrSet", "OnRep_Offense");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCharacterAttrSet.OnRep_Resistance
// (Final, Native, Public)

void UFortCharacterAttrSet::OnRep_Resistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterAttrSet", "OnRep_Resistance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCharacterAttrSet.OnRep_Tech
// (Final, Native, Public)

void UFortCharacterAttrSet::OnRep_Tech()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCharacterAttrSet", "OnRep_Tech");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIController.IsIgnoringProximity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortAIController*                FortAIController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAIController::IsIgnoringProximity(class AFortAIController* FortAIController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIController", "IsIgnoringProximity");

	Params::FortAIController_IsIgnoringProximity Parms{};

	Parms.FortAIController = FortAIController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIController.CreateBuildingActor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class ABuildingSMActor>     BuildingClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          BuildLoc                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         BuildRot                                               (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bMirrored                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAIController::CreateBuildingActor(TSubclassOf<class ABuildingSMActor> BuildingClass, const struct FVector& BuildLoc, const struct FRotator& BuildRot, bool bMirrored)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIController", "CreateBuildingActor");

	Params::FortAIController_CreateBuildingActor Parms{};

	Parms.BuildingClass = BuildingClass;
	Parms.BuildLoc = std::move(BuildLoc);
	Parms.BuildRot = std::move(BuildRot);
	Parms.bMirrored = bMirrored;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIController.IgnoreProximityForDuration
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   DurationToIgnore                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIController::IgnoreProximityForDuration(float DurationToIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIController", "IgnoreProximityForDuration");

	Params::FortAIController_IgnoreProximityForDuration Parms{};

	Parms.DurationToIgnore = DurationToIgnore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIController.IsAllowedToSleep
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAIController::IsAllowedToSleep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIController", "IsAllowedToSleep");

	Params::FortAIController_IsAllowedToSleep Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIController.LockBehaviorResource
// (Final, Native, Public, BlueprintCallable)

void AFortAIController::LockBehaviorResource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIController", "LockBehaviorResource");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIController.LockMovementResource
// (Final, Native, Public, BlueprintCallable)

void AFortAIController::LockMovementResource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIController", "LockMovementResource");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIController.OnBuildingActorGoalDestroyed
// (Final, Native, Public)

void AFortAIController::OnBuildingActorGoalDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIController", "OnBuildingActorGoalDestroyed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIController.SetAlwaysGameplayRelevant
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInAlwaysGameplayRelevant                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIController::SetAlwaysGameplayRelevant(bool bInAlwaysGameplayRelevant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIController", "SetAlwaysGameplayRelevant");

	Params::FortAIController_SetAlwaysGameplayRelevant Parms{};

	Parms.bInAlwaysGameplayRelevant = bInAlwaysGameplayRelevant;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIController.SetFullPeripheralVision
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewFullPeripheralVision                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIController::SetFullPeripheralVision(bool bNewFullPeripheralVision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIController", "SetFullPeripheralVision");

	Params::FortAIController_SetFullPeripheralVision Parms{};

	Parms.bNewFullPeripheralVision = bNewFullPeripheralVision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIController.SetGoalActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLocationAlwaysKnown                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIController::SetGoalActor(class AActor* InActor, bool bLocationAlwaysKnown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIController", "SetGoalActor");

	Params::FortAIController_SetGoalActor Parms{};

	Parms.InActor = InActor;
	Parms.bLocationAlwaysKnown = bLocationAlwaysKnown;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIController.SetIsSleeping
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewSleepStatus                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIController::SetIsSleeping(bool bNewSleepStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIController", "SetIsSleeping");

	Params::FortAIController_SetIsSleeping Parms{};

	Parms.bNewSleepStatus = bNewSleepStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIController.SetPawnAIType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortressAIType                         NewAIType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           SpawnSpot                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIController::SetPawnAIType(EFortressAIType NewAIType, class AActor* SpawnSpot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIController", "SetPawnAIType");

	Params::FortAIController_SetPawnAIType Parms{};

	Parms.NewAIType = NewAIType;
	Parms.SpawnSpot = SpawnSpot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIController.SetTeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortTeam                               InTeam                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIController::SetTeam(EFortTeam InTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIController", "SetTeam");

	Params::FortAIController_SetTeam Parms{};

	Parms.InTeam = InTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIController.SetupCustomVIM
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                           VIM                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIController::SetupCustomVIM(class UClass* VIM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIController", "SetupCustomVIM");

	Params::FortAIController_SetupCustomVIM Parms{};

	Parms.VIM = VIM;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIController.UnlockBehaviorResource
// (Final, Native, Public, BlueprintCallable)

void AFortAIController::UnlockBehaviorResource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIController", "UnlockBehaviorResource");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIController.UnlockMovementResource
// (Final, Native, Public, BlueprintCallable)

void AFortAIController::UnlockMovementResource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIController", "UnlockMovementResource");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIController.UnregisterForGoalDetection
// (Final, Native, Public, BlueprintCallable)

void AFortAIController::UnregisterForGoalDetection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIController", "UnregisterForGoalDetection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIController.WakeUp
// (Final, Native, Public, BlueprintCallable)

void AFortAIController::WakeUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIController", "WakeUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIController.GetEncounterInfo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAIEncounterInfo*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAIEncounterInfo* AFortAIController::GetEncounterInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIController", "GetEncounterInfo");

	Params::FortAIController_GetEncounterInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIController.GetGoalActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AFortAIController::GetGoalActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIController", "GetGoalActor");

	Params::FortAIController_GetGoalActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDeployableBaseAnalytics.FireAnalyticsEvent_CombatZone_ConsoleOpened
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDeployableBaseAnalytics::FireAnalyticsEvent_CombatZone_ConsoleOpened(class AFortPlayerController* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseAnalytics", "FireAnalyticsEvent_CombatZone_ConsoleOpened");

	Params::FortDeployableBaseAnalytics_FireAnalyticsEvent_CombatZone_ConsoleOpened Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDeployableBaseAnalytics.FireAnalyticsEvent_CombatZone_TierCompleted
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Tier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FinalWave                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumberOfPlayers                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ADeployableBaseCore*>      TargetCores                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class ADeployableBaseCore*>      AllCores                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FFortTierCollectionLayoutOutput  CollectionData                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortDeployableBaseAnalytics::FireAnalyticsEvent_CombatZone_TierCompleted(class AFortPlayerController* FortPC, int32 Tier, int32 FinalWave, int32 NumberOfPlayers, const TArray<class ADeployableBaseCore*>& TargetCores, const TArray<class ADeployableBaseCore*>& AllCores, const struct FFortTierCollectionLayoutOutput& CollectionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseAnalytics", "FireAnalyticsEvent_CombatZone_TierCompleted");

	Params::FortDeployableBaseAnalytics_FireAnalyticsEvent_CombatZone_TierCompleted Parms{};

	Parms.FortPC = FortPC;
	Parms.Tier = Tier;
	Parms.FinalWave = FinalWave;
	Parms.NumberOfPlayers = NumberOfPlayers;
	Parms.TargetCores = std::move(TargetCores);
	Parms.AllCores = std::move(AllCores);
	Parms.CollectionData = std::move(CollectionData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDeployableBaseAnalytics.FireAnalyticsEvent_CombatZone_TierFailed
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Tier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Wave                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumberOfPlayers                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortTierCollectionLayoutOutput  CollectionData                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortDeployableBaseAnalytics::FireAnalyticsEvent_CombatZone_TierFailed(class AFortPlayerController* FortPC, int32 Tier, int32 Wave, int32 NumberOfPlayers, const struct FFortTierCollectionLayoutOutput& CollectionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseAnalytics", "FireAnalyticsEvent_CombatZone_TierFailed");

	Params::FortDeployableBaseAnalytics_FireAnalyticsEvent_CombatZone_TierFailed Parms{};

	Parms.FortPC = FortPC;
	Parms.Tier = Tier;
	Parms.Wave = Wave;
	Parms.NumberOfPlayers = NumberOfPlayers;
	Parms.CollectionData = std::move(CollectionData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDeployableBaseAnalytics.FireAnalyticsEvent_CombatZone_TierStarted
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Tier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumberOfPlayers                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortTierCollectionLayoutOutput  CollectionData                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortDeployableBaseAnalytics::FireAnalyticsEvent_CombatZone_TierStarted(class AFortPlayerController* FortPC, int32 Tier, int32 NumberOfPlayers, const struct FFortTierCollectionLayoutOutput& CollectionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseAnalytics", "FireAnalyticsEvent_CombatZone_TierStarted");

	Params::FortDeployableBaseAnalytics_FireAnalyticsEvent_CombatZone_TierStarted Parms{};

	Parms.FortPC = FortPC;
	Parms.Tier = Tier;
	Parms.NumberOfPlayers = NumberOfPlayers;
	Parms.CollectionData = std::move(CollectionData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDeployableBaseAnalytics.FireAnalyticsEvent_CombatZone_WaveFailed
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Tier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Wave                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumberOfPlayers                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ADeployableBaseCore*>      TargetCores                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class ADeployableBaseCore*>      AllCores                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FFortTierCollectionLayoutOutput  CollectionData                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortDeployableBaseAnalytics::FireAnalyticsEvent_CombatZone_WaveFailed(class AFortPlayerController* FortPC, int32 Tier, int32 Wave, int32 NumberOfPlayers, const TArray<class ADeployableBaseCore*>& TargetCores, const TArray<class ADeployableBaseCore*>& AllCores, const struct FFortTierCollectionLayoutOutput& CollectionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseAnalytics", "FireAnalyticsEvent_CombatZone_WaveFailed");

	Params::FortDeployableBaseAnalytics_FireAnalyticsEvent_CombatZone_WaveFailed Parms{};

	Parms.FortPC = FortPC;
	Parms.Tier = Tier;
	Parms.Wave = Wave;
	Parms.NumberOfPlayers = NumberOfPlayers;
	Parms.TargetCores = std::move(TargetCores);
	Parms.AllCores = std::move(AllCores);
	Parms.CollectionData = std::move(CollectionData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDeployableBaseAnalytics.FireAnalyticsEvent_CombatZone_WaveStarted
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Tier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Wave                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumberOfPlayers                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ADeployableBaseCore*>      TargetCores                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class ADeployableBaseCore*>      AllCores                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FFortTierCollectionLayoutOutput  CollectionData                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortDeployableBaseAnalytics::FireAnalyticsEvent_CombatZone_WaveStarted(class AFortPlayerController* FortPC, int32 Tier, int32 Wave, int32 NumberOfPlayers, const TArray<class ADeployableBaseCore*>& TargetCores, const TArray<class ADeployableBaseCore*>& AllCores, const struct FFortTierCollectionLayoutOutput& CollectionData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseAnalytics", "FireAnalyticsEvent_CombatZone_WaveStarted");

	Params::FortDeployableBaseAnalytics_FireAnalyticsEvent_CombatZone_WaveStarted Parms{};

	Parms.FortPC = FortPC;
	Parms.Tier = Tier;
	Parms.Wave = Wave;
	Parms.NumberOfPlayers = NumberOfPlayers;
	Parms.TargetCores = std::move(TargetCores);
	Parms.AllCores = std::move(AllCores);
	Parms.CollectionData = std::move(CollectionData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDeployableBaseAnalytics.FireAnalyticsEvent_Neighborhood_ConsoleOpened
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 OwnerId                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDeployableBaseAnalytics::FireAnalyticsEvent_Neighborhood_ConsoleOpened(class AFortPlayerController* FortPC, const struct FUniqueNetIdRepl& OwnerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseAnalytics", "FireAnalyticsEvent_Neighborhood_ConsoleOpened");

	Params::FortDeployableBaseAnalytics_FireAnalyticsEvent_Neighborhood_ConsoleOpened Parms{};

	Parms.FortPC = FortPC;
	Parms.OwnerId = std::move(OwnerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIDirector.ConvertInvalidDirectionsToValidDirections
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<EFortEncounterDirection>         InvalidDirections                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<EFortEncounterDirection>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EFortEncounterDirection> AFortAIDirector::ConvertInvalidDirectionsToValidDirections(const TArray<EFortEncounterDirection>& InvalidDirections)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIDirector", "ConvertInvalidDirectionsToValidDirections");

	Params::FortAIDirector_ConvertInvalidDirectionsToValidDirections Parms{};

	Parms.InvalidDirections = std::move(InvalidDirections);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIDirector.GetEncounterDirectionFromVector
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          DirectionVector                                        (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortEncounterDirection                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortEncounterDirection AFortAIDirector::GetEncounterDirectionFromVector(const struct FVector& DirectionVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIDirector", "GetEncounterDirectionFromVector");

	Params::FortAIDirector_GetEncounterDirectionFromVector Parms{};

	Parms.DirectionVector = std::move(DirectionVector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIDirector.GetVectorFromEncounterDirection
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortEncounterDirection                 Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AFortAIDirector::GetVectorFromEncounterDirection(EFortEncounterDirection Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIDirector", "GetVectorFromEncounterDirection");

	Params::FortAIDirector_GetVectorFromEncounterDirection Parms{};

	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIDirector.Activate
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFortAIDirector::Activate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "Activate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIDirector.Deactivate
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFortAIDirector::Deactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "Deactivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIDirector.GetNumPlayers
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortAIDirector::GetNumPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "GetNumPlayers");

	Params::FortAIDirector_GetNumPlayers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIDirector.OnDayPhaseChanged
// (Native, Public)
// Parameters:
// EFortDayPhase                           CurrentDayPhase                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDayPhase                           PreviousDayPhase                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAtCreation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIDirector::OnDayPhaseChanged(EFortDayPhase CurrentDayPhase, EFortDayPhase PreviousDayPhase, bool bAtCreation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "OnDayPhaseChanged");

	Params::FortAIDirector_OnDayPhaseChanged Parms{};

	Parms.CurrentDayPhase = CurrentDayPhase;
	Parms.PreviousDayPhase = PreviousDayPhase;
	Parms.bAtCreation = bAtCreation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIDirector.OnDirectorDeactivated
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)

void AFortAIDirector::OnDirectorDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "OnDirectorDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortAIDirector.OnFadeStarted
// (Event, Public, BlueprintEvent)

void AFortAIDirector::OnFadeStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "OnFadeStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortAIDirector.OnPawnDied
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AFortAIPawn*                      KilledPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIDirector::OnPawnDied(class AFortAIPawn* KilledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "OnPawnDied");

	Params::FortAIDirector_OnPawnDied Parms{};

	Parms.KilledPawn = KilledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortAIDirector.OnPeakStarted
// (Event, Public, BlueprintEvent)

void AFortAIDirector::OnPeakStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "OnPeakStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortAIDirector.OnPlayerDied
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIDirector::OnPlayerDied(class AFortPlayerPawn* PlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "OnPlayerDied");

	Params::FortAIDirector_OnPlayerDied Parms{};

	Parms.PlayerPawn = PlayerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortAIDirector.OnPlayerSpawn
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIDirector::OnPlayerSpawn(class AFortPlayerPawn* PlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "OnPlayerSpawn");

	Params::FortAIDirector_OnPlayerSpawn Parms{};

	Parms.PlayerPawn = PlayerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortAIDirector.OnRampStarted
// (Event, Public, BlueprintEvent)

void AFortAIDirector::OnRampStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "OnRampStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortAIDirector.OnRestStarted
// (Event, Public, BlueprintEvent)

void AFortAIDirector::OnRestStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "OnRestStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortAIDirector.PostDayPhaseChanged
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// EFortDayPhase                           CurrentDayPhase                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDayPhase                           PreviousDayPhase                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAtCreation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIDirector::PostDayPhaseChanged(EFortDayPhase CurrentDayPhase, EFortDayPhase PreviousDayPhase, bool bAtCreation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "PostDayPhaseChanged");

	Params::FortAIDirector_PostDayPhaseChanged Parms{};

	Parms.CurrentDayPhase = CurrentDayPhase;
	Parms.PreviousDayPhase = PreviousDayPhase;
	Parms.bAtCreation = bAtCreation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortAIDirector.ReceivePawnSpawned
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AFortPawn*                        SpawnedPawn                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIDirector::ReceivePawnSpawned(class AFortPawn* SpawnedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "ReceivePawnSpawned");

	Params::FortAIDirector_ReceivePawnSpawned Parms{};

	Parms.SpawnedPawn = SpawnedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortAIDirector.RegisterPatrolWard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IFortPatrolWardInterface>PatrolWard                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void AFortAIDirector::RegisterPatrolWard(TScriptInterface<class IFortPatrolWardInterface> PatrolWard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "RegisterPatrolWard");

	Params::FortAIDirector_RegisterPatrolWard Parms{};

	Parms.PatrolWard = PatrolWard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIDirector.UnregisterPatrolWard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IFortPatrolWardInterface>PatrolWard                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)

void AFortAIDirector::UnregisterPatrolWard(TScriptInterface<class IFortPatrolWardInterface> PatrolWard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "UnregisterPatrolWard");

	Params::FortAIDirector_UnregisterPatrolWard Parms{};

	Parms.PatrolWard = PatrolWard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIDirector.GetAmbientThreatEncounterSpawnLocations
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FVector>                  AmbientThreatEncounterSpawnLocations                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortAIDirector::GetAmbientThreatEncounterSpawnLocations(TArray<struct FVector>* AmbientThreatEncounterSpawnLocations) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "GetAmbientThreatEncounterSpawnLocations");

	Params::FortAIDirector_GetAmbientThreatEncounterSpawnLocations Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AmbientThreatEncounterSpawnLocations != nullptr)
		*AmbientThreatEncounterSpawnLocations = std::move(Parms.AmbientThreatEncounterSpawnLocations);
}


// Function FortniteGame.FortAIDirector.GetRiftsFromClosestActiveEncounterTo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ABuildingRift*>            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ABuildingRift*> AFortAIDirector::GetRiftsFromClosestActiveEncounterTo(class AActor* Target) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "GetRiftsFromClosestActiveEncounterTo");

	Params::FortAIDirector_GetRiftsFromClosestActiveEncounterTo Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIDirector.IsAnyActiveEncounterRelevantToDefender
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortAIPawn*                      Defender                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAIDirector::IsAnyActiveEncounterRelevantToDefender(class AFortAIPawn* Defender) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "IsAnyActiveEncounterRelevantToDefender");

	Params::FortAIDirector_IsAnyActiveEncounterRelevantToDefender Parms{};

	Parms.Defender = Defender;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIDirector.IsAnyActiveEncounterRelevantToPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerPawn*                  Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAIDirector::IsAnyActiveEncounterRelevantToPlayer(class AFortPlayerPawn* Player) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "IsAnyActiveEncounterRelevantToPlayer");

	Params::FortAIDirector_IsAnyActiveEncounterRelevantToPlayer Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIDirector.IsAnyAIRelevantToPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerPawn*                  Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAIDirector::IsAnyAIRelevantToPlayer(class AFortPlayerPawn* Player) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "IsAnyAIRelevantToPlayer");

	Params::FortAIDirector_IsAnyAIRelevantToPlayer Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIDirector.IsAnyEncounterGoalWithinDistanceOfPoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          Point                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOnlyActiveEncounters                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAIDirector::IsAnyEncounterGoalWithinDistanceOfPoint(const struct FVector& Point, float Distance, bool bOnlyActiveEncounters) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "IsAnyEncounterGoalWithinDistanceOfPoint");

	Params::FortAIDirector_IsAnyEncounterGoalWithinDistanceOfPoint Parms{};

	Parms.Point = std::move(Point);
	Parms.Distance = Distance;
	Parms.bOnlyActiveEncounters = bOnlyActiveEncounters;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIDirector.IsLineTooCloseToPatrolWards
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          LineStart                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          LineEnd                                                (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAIDirector::IsLineTooCloseToPatrolWards(const struct FVector& LineStart, const struct FVector& LineEnd) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "IsLineTooCloseToPatrolWards");

	Params::FortAIDirector_IsLineTooCloseToPatrolWards Parms{};

	Parms.LineStart = std::move(LineStart);
	Parms.LineEnd = std::move(LineEnd);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIDirector.IsPointTooCloseToPatrolWards
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          Point                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EWardAffectType                         WardEffectTypeFilter                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortAIDirector::IsPointTooCloseToPatrolWards(const struct FVector& Point, const EWardAffectType WardEffectTypeFilter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirector", "IsPointTooCloseToPatrolWards");

	Params::FortAIDirector_IsPointTooCloseToPatrolWards Parms{};

	Parms.Point = std::move(Point);
	Parms.WardEffectTypeFilter = WardEffectTypeFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIDirectorDataManager.TriggerEvent
// (Native, Public, HasOutParams)
// Parameters:
// struct FFortAIDirectorEvent             TriggeredEvent                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortAIDirectorDataManager::TriggerEvent(const struct FFortAIDirectorEvent& TriggeredEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirectorDataManager", "TriggerEvent");

	Params::FortAIDirectorDataManager_TriggerEvent Parms{};

	Parms.TriggeredEvent = std::move(TriggeredEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIDirectorDataManager.GetAIDirectorFactorValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortAIDirectorFactor                   AIDirectorFactor                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortAIDirectorDataManager::GetAIDirectorFactorValue(EFortAIDirectorFactor AIDirectorFactor) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIDirectorDataManager", "GetAIDirectorFactorValue");

	Params::FortAIDirectorDataManager_GetAIDirectorFactorValue Parms{};

	Parms.AIDirectorFactor = AIDirectorFactor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTrapItemDefinitionTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTrapItemDefinitionTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrapItemDefinitionTooltip", "GetNumericValue");

	Params::FortTrapItemDefinitionTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTrapItemDefinitionTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTrapItemDefinitionTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrapItemDefinitionTooltip", "GetTextForToken");

	Params::FortTrapItemDefinitionTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTrapItemDefinitionTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTrapItemDefinitionTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrapItemDefinitionTooltip", "GetTokenizedDescriptionText");

	Params::FortTrapItemDefinitionTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterInfo.CreateEncounterAssignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAIAssignmentSettings*        AssignmentSettings                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           GoalActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAIAssignment*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAIAssignment* UFortAIEncounterInfo::CreateEncounterAssignment(class UFortAIAssignmentSettings* AssignmentSettings, class AActor* GoalActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterInfo", "CreateEncounterAssignment");

	Params::FortAIEncounterInfo_CreateEncounterAssignment Parms{};

	Parms.AssignmentSettings = AssignmentSettings;
	Parms.GoalActor = GoalActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterInfo.GetEncounterDataManager
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortAIDirectorDataManager*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortAIDirectorDataManager* UFortAIEncounterInfo::GetEncounterDataManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterInfo", "GetEncounterDataManager");

	Params::FortAIEncounterInfo_GetEncounterDataManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterInfo.GetEncounterTimeSeconds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortAIEncounterInfo::GetEncounterTimeSeconds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterInfo", "GetEncounterTimeSeconds");

	Params::FortAIEncounterInfo_GetEncounterTimeSeconds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterInfo.GroupHasAIRemainingToSpawn
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortAISpawnerData               FortAISpawnerData                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAIEncounterInfo::GroupHasAIRemainingToSpawn(const struct FFortAISpawnerData& FortAISpawnerData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterInfo", "GroupHasAIRemainingToSpawn");

	Params::FortAIEncounterInfo_GroupHasAIRemainingToSpawn Parms{};

	Parms.FortAISpawnerData = std::move(FortAISpawnerData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterInfo.OnEncounterPawnDamaged
// (Final, Native, Protected, HasDefaults)
// Parameters:
// class AActor*                           DamagedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          HitLocation                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              FHitComponent                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Momentum                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAIEncounterInfo::OnEncounterPawnDamaged(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterInfo", "OnEncounterPawnDamaged");

	Params::FortAIEncounterInfo_OnEncounterPawnDamaged Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.HitLocation = std::move(HitLocation);
	Parms.FHitComponent = FHitComponent;
	Parms.BoneName = BoneName;
	Parms.Momentum = std::move(Momentum);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIEncounterInfo.OnFadeStarted
// (Event, Public, BlueprintEvent)

void UFortAIEncounterInfo::OnFadeStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterInfo", "OnFadeStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortAIEncounterInfo.OnGoalTakeDamage
// (Final, Native, Public, HasDefaults)
// Parameters:
// class AActor*                           DamagedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          HitLocation                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              FHitComponent                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Momentum                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAIEncounterInfo::OnGoalTakeDamage(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterInfo", "OnGoalTakeDamage");

	Params::FortAIEncounterInfo_OnGoalTakeDamage Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.HitLocation = std::move(HitLocation);
	Parms.FHitComponent = FHitComponent;
	Parms.BoneName = BoneName;
	Parms.Momentum = std::move(Momentum);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIEncounterInfo.OnPeakStarted
// (Event, Public, BlueprintEvent)

void UFortAIEncounterInfo::OnPeakStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterInfo", "OnPeakStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortAIEncounterInfo.OnRampStarted
// (Event, Public, BlueprintEvent)

void UFortAIEncounterInfo::OnRampStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterInfo", "OnRampStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortAIEncounterInfo.OnRestStarted
// (Event, Public, BlueprintEvent)

void UFortAIEncounterInfo::OnRestStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterInfo", "OnRestStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortAIEncounterInfo.RegisterAISpawner
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InAISpawner                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAIEncounterInfo::RegisterAISpawner(class AActor* InAISpawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterInfo", "RegisterAISpawner");

	Params::FortAIEncounterInfo_RegisterAISpawner Parms{};

	Parms.InAISpawner = InAISpawner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIEncounterInfo.RequestActivation
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ActivationDelay                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAIEncounterInfo::RequestActivation(int32 ActivationDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterInfo", "RequestActivation");

	Params::FortAIEncounterInfo_RequestActivation Parms{};

	Parms.ActivationDelay = ActivationDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIEncounterInfo.SetEncounterActivationState
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEncounterActivityState                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAIEncounterInfo::SetEncounterActivationState(bool bEncounterActivityState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterInfo", "SetEncounterActivationState");

	Params::FortAIEncounterInfo_SetEncounterActivationState Parms{};

	Parms.bEncounterActivityState = bEncounterActivityState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIEncounterInfo.SetPawnNumberLimit
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InPawnNumberLimit                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAIEncounterInfo::SetPawnNumberLimit(int32 InPawnNumberLimit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterInfo", "SetPawnNumberLimit");

	Params::FortAIEncounterInfo_SetPawnNumberLimit Parms{};

	Parms.InPawnNumberLimit = InPawnNumberLimit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIEncounterInfo.SpawnAIPawnReservedForEnemySpawner
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           EnemySpawner                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          SpawnLocation                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         SpawnRotation                                          (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class AFortAIPawn*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortAIPawn* UFortAIEncounterInfo::SpawnAIPawnReservedForEnemySpawner(class AActor* EnemySpawner, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterInfo", "SpawnAIPawnReservedForEnemySpawner");

	Params::FortAIEncounterInfo_SpawnAIPawnReservedForEnemySpawner Parms{};

	Parms.EnemySpawner = EnemySpawner;
	Parms.SpawnLocation = std::move(SpawnLocation);
	Parms.SpawnRotation = std::move(SpawnRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterInfo.UnRegisterAISpawner
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InAISpawner                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAIEncounterInfo::UnRegisterAISpawner(class AActor* InAISpawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterInfo", "UnRegisterAISpawner");

	Params::FortAIEncounterInfo_UnRegisterAISpawner Parms{};

	Parms.InAISpawner = InAISpawner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIEncounterInfo.EncounterHasReservedSpawnRequestForEnemySpawner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           EnemySpawner                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAIEncounterInfo::EncounterHasReservedSpawnRequestForEnemySpawner(class AActor* EnemySpawner) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterInfo", "EncounterHasReservedSpawnRequestForEnemySpawner");

	Params::FortAIEncounterInfo_EncounterHasReservedSpawnRequestForEnemySpawner Parms{};

	Parms.EnemySpawner = EnemySpawner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterInfo.GetCurrentSpawnAreaDirections
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<EFortEncounterDirection>         OutDirections                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAIEncounterInfo::GetCurrentSpawnAreaDirections(TArray<EFortEncounterDirection>* OutDirections) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterInfo", "GetCurrentSpawnAreaDirections");

	Params::FortAIEncounterInfo_GetCurrentSpawnAreaDirections Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDirections != nullptr)
		*OutDirections = std::move(Parms.OutDirections);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterInfo.GetPawnNumberLimit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortAIEncounterInfo::GetPawnNumberLimit() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterInfo", "GetPawnNumberLimit");

	Params::FortAIEncounterInfo_GetPawnNumberLimit Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterInfoOwnerInterface.GetEncounterInfo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAIEncounterInfo*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAIEncounterInfo* IFortAIEncounterInfoOwnerInterface::GetEncounterInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterInfoOwnerInterface", "GetEncounterInfo");

	Params::FortAIEncounterInfoOwnerInterface_GetEncounterInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTimeOfDayManager.BreakExponentialHeightFogValues
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FExponentialHeightFogValues      HeightFogValues                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   FogDensity                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FogHeightFalloff                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FogMaxOpacity                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartDistance                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DirectionalInscatteringExponent                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DirectionalInscatteringStartDistance                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     DirectionalInscatteringColor                           (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     FogInscatteringColor                                   (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VolumetricFogScatteringDistribution                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VolumetricFogExtinctionScale                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VolumetricFogDistance                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTimeOfDayManager::BreakExponentialHeightFogValues(const struct FExponentialHeightFogValues& HeightFogValues, float* FogDensity, float* FogHeightFalloff, float* FogMaxOpacity, float* StartDistance, float* DirectionalInscatteringExponent, float* DirectionalInscatteringStartDistance, struct FLinearColor* DirectionalInscatteringColor, struct FLinearColor* FogInscatteringColor, float* VolumetricFogScatteringDistribution, float* VolumetricFogExtinctionScale, float* VolumetricFogDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortTimeOfDayManager", "BreakExponentialHeightFogValues");

	Params::FortTimeOfDayManager_BreakExponentialHeightFogValues Parms{};

	Parms.HeightFogValues = std::move(HeightFogValues);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FogDensity != nullptr)
		*FogDensity = Parms.FogDensity;

	if (FogHeightFalloff != nullptr)
		*FogHeightFalloff = Parms.FogHeightFalloff;

	if (FogMaxOpacity != nullptr)
		*FogMaxOpacity = Parms.FogMaxOpacity;

	if (StartDistance != nullptr)
		*StartDistance = Parms.StartDistance;

	if (DirectionalInscatteringExponent != nullptr)
		*DirectionalInscatteringExponent = Parms.DirectionalInscatteringExponent;

	if (DirectionalInscatteringStartDistance != nullptr)
		*DirectionalInscatteringStartDistance = Parms.DirectionalInscatteringStartDistance;

	if (DirectionalInscatteringColor != nullptr)
		*DirectionalInscatteringColor = std::move(Parms.DirectionalInscatteringColor);

	if (FogInscatteringColor != nullptr)
		*FogInscatteringColor = std::move(Parms.FogInscatteringColor);

	if (VolumetricFogScatteringDistribution != nullptr)
		*VolumetricFogScatteringDistribution = Parms.VolumetricFogScatteringDistribution;

	if (VolumetricFogExtinctionScale != nullptr)
		*VolumetricFogExtinctionScale = Parms.VolumetricFogExtinctionScale;

	if (VolumetricFogDistance != nullptr)
		*VolumetricFogDistance = Parms.VolumetricFogDistance;
}


// Function FortniteGame.FortTimeOfDayManager.GetTimeOfDayManagerFromContext
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortTimeOfDayManager*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortTimeOfDayManager* AFortTimeOfDayManager::GetTimeOfDayManagerFromContext(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortTimeOfDayManager", "GetTimeOfDayManagerFromContext");

	Params::FortTimeOfDayManager_GetTimeOfDayManagerFromContext Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTimeOfDayManager.MakeExponentialHeightFogValues
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   FogDensity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FogHeightFalloff                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FogMaxOpacity                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartDistance                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DirectionalInscatteringExponent                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   DirectionalInscatteringStartDistance                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     DirectionalInscatteringColor                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     FogInscatteringColor                                   (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VolumetricFogScatteringDistribution                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VolumetricFogExtinctionScale                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VolumetricFogDistance                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FExponentialHeightFogValues      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FExponentialHeightFogValues AFortTimeOfDayManager::MakeExponentialHeightFogValues(float FogDensity, float FogHeightFalloff, float FogMaxOpacity, float StartDistance, float DirectionalInscatteringExponent, float DirectionalInscatteringStartDistance, const struct FLinearColor& DirectionalInscatteringColor, const struct FLinearColor& FogInscatteringColor, float VolumetricFogScatteringDistribution, float VolumetricFogExtinctionScale, float VolumetricFogDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortTimeOfDayManager", "MakeExponentialHeightFogValues");

	Params::FortTimeOfDayManager_MakeExponentialHeightFogValues Parms{};

	Parms.FogDensity = FogDensity;
	Parms.FogHeightFalloff = FogHeightFalloff;
	Parms.FogMaxOpacity = FogMaxOpacity;
	Parms.StartDistance = StartDistance;
	Parms.DirectionalInscatteringExponent = DirectionalInscatteringExponent;
	Parms.DirectionalInscatteringStartDistance = DirectionalInscatteringStartDistance;
	Parms.DirectionalInscatteringColor = std::move(DirectionalInscatteringColor);
	Parms.FogInscatteringColor = std::move(FogInscatteringColor);
	Parms.VolumetricFogScatteringDistribution = VolumetricFogScatteringDistribution;
	Parms.VolumetricFogExtinctionScale = VolumetricFogExtinctionScale;
	Parms.VolumetricFogDistance = VolumetricFogDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTimeOfDayManager.FFToTimeOfDay
// (Final, Exec, Native, Private)
// Parameters:
// float                                   FastForwardTime                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FastForwardSpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTimeOfDayManager::FFToTimeOfDay(float FastForwardTime, float FastForwardSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "FFToTimeOfDay");

	Params::FortTimeOfDayManager_FFToTimeOfDay Parms{};

	Parms.FastForwardTime = FastForwardTime;
	Parms.FastForwardSpeed = FastForwardSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTimeOfDayManager.OnDayPhaseChange
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AFortTimeOfDayManager::OnDayPhaseChange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "OnDayPhaseChange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortTimeOfDayManager.OnRep_HeightFogEnabled
// (Native, Public)

void AFortTimeOfDayManager::OnRep_HeightFogEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "OnRep_HeightFogEnabled");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTimeOfDayManager.OnRep_TimeOfDay
// (Native, Public)

void AFortTimeOfDayManager::OnRep_TimeOfDay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "OnRep_TimeOfDay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTimeOfDayManager.OnRep_TimeOfDayInit
// (Native, Public)

void AFortTimeOfDayManager::OnRep_TimeOfDayInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "OnRep_TimeOfDayInit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTimeOfDayManager.OnStormEnd
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AFortTimeOfDayManager::OnStormEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "OnStormEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortTimeOfDayManager.OnStormStart
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AFortTimeOfDayManager::OnStormStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "OnStormStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortTimeOfDayManager.OnUpdateDirectionalLightForTimeOfDay
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor                     AboutToApplyDirectionalLightColor                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTimeOfDayManager::OnUpdateDirectionalLightForTimeOfDay(const struct FLinearColor& AboutToApplyDirectionalLightColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "OnUpdateDirectionalLightForTimeOfDay");

	Params::FortTimeOfDayManager_OnUpdateDirectionalLightForTimeOfDay Parms{};

	Parms.AboutToApplyDirectionalLightColor = std::move(AboutToApplyDirectionalLightColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortTimeOfDayManager.SetDayPhase
// (Final, Exec, Native, Private)
// Parameters:
// class FString                           DayPhase                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTimeOfDayManager::SetDayPhase(const class FString& DayPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "SetDayPhase");

	Params::FortTimeOfDayManager_SetDayPhase Parms{};

	Parms.DayPhase = std::move(DayPhase);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTimeOfDayManager.SetDirectionalLightColorMultiplier
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewDirectionalLightColorMultiplier                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTimeOfDayManager::SetDirectionalLightColorMultiplier(float NewDirectionalLightColorMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "SetDirectionalLightColorMultiplier");

	Params::FortTimeOfDayManager_SetDirectionalLightColorMultiplier Parms{};

	Parms.NewDirectionalLightColorMultiplier = NewDirectionalLightColorMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTimeOfDayManager.SetFogDirectionalInscatteringMultiplier
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewFogDirectionalInscatteringMultiplier                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTimeOfDayManager::SetFogDirectionalInscatteringMultiplier(float NewFogDirectionalInscatteringMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "SetFogDirectionalInscatteringMultiplier");

	Params::FortTimeOfDayManager_SetFogDirectionalInscatteringMultiplier Parms{};

	Parms.NewFogDirectionalInscatteringMultiplier = NewFogDirectionalInscatteringMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTimeOfDayManager.SetSpecificTimeOfDayInEditor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewTimeOfDayInEditor                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTimeOfDayManager::SetSpecificTimeOfDayInEditor(float NewTimeOfDayInEditor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "SetSpecificTimeOfDayInEditor");

	Params::FortTimeOfDayManager_SetSpecificTimeOfDayInEditor Parms{};

	Parms.NewTimeOfDayInEditor = NewTimeOfDayInEditor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTimeOfDayManager.SetStormStrength
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewStormStrength                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTimeOfDayManager::SetStormStrength(float NewStormStrength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "SetStormStrength");

	Params::FortTimeOfDayManager_SetStormStrength Parms{};

	Parms.NewStormStrength = NewStormStrength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTimeOfDayManager.SetTimeOfDay
// (Final, Exec, Native, Private)
// Parameters:
// class FString                           NewTimeOfDay                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTimeOfDayManager::SetTimeOfDay(const class FString& NewTimeOfDay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "SetTimeOfDay");

	Params::FortTimeOfDayManager_SetTimeOfDay Parms{};

	Parms.NewTimeOfDay = std::move(NewTimeOfDay);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTimeOfDayManager.SetTimeOfDayAbsoluteSpeed
// (Final, Exec, Native, Private)
// Parameters:
// float                                   NewTimeOfDaySpeed                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTimeOfDayManager::SetTimeOfDayAbsoluteSpeed(float NewTimeOfDaySpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "SetTimeOfDayAbsoluteSpeed");

	Params::FortTimeOfDayManager_SetTimeOfDayAbsoluteSpeed Parms{};

	Parms.NewTimeOfDaySpeed = NewTimeOfDaySpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTimeOfDayManager.SetTimeOfDayFloat
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                                   TimeOfDayInHours                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTimeOfDayManager::SetTimeOfDayFloat(float TimeOfDayInHours)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "SetTimeOfDayFloat");

	Params::FortTimeOfDayManager_SetTimeOfDayFloat Parms{};

	Parms.TimeOfDayInHours = TimeOfDayInHours;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTimeOfDayManager.SetTimeOfDayInHours
// (Final, Exec, Native, Private)
// Parameters:
// float                                   TimeOfDayInHours                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTimeOfDayManager::SetTimeOfDayInHours(float TimeOfDayInHours)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "SetTimeOfDayInHours");

	Params::FortTimeOfDayManager_SetTimeOfDayInHours Parms{};

	Parms.TimeOfDayInHours = TimeOfDayInHours;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTimeOfDayManager.SetTimeOfDayManagerVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTimeOfDayManager::SetTimeOfDayManagerVisibility(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "SetTimeOfDayManagerVisibility");

	Params::FortTimeOfDayManager_SetTimeOfDayManagerVisibility Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTimeOfDayManager.SetTimeOfDaySpeed
// (Final, Exec, Native, Private)
// Parameters:
// float                                   TimeOfDaySpeedFactor                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTimeOfDayManager::SetTimeOfDaySpeed(float TimeOfDaySpeedFactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "SetTimeOfDaySpeed");

	Params::FortTimeOfDayManager_SetTimeOfDaySpeed Parms{};

	Parms.TimeOfDaySpeedFactor = TimeOfDaySpeedFactor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTimeOfDayManager.SetTimeOfDaySpeedFloat
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InTimeOfDaySpeed                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTimeOfDayManager::SetTimeOfDaySpeedFloat(float InTimeOfDaySpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "SetTimeOfDaySpeedFloat");

	Params::FortTimeOfDayManager_SetTimeOfDaySpeedFloat Parms{};

	Parms.InTimeOfDaySpeed = InTimeOfDaySpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTimeOfDayManager.SetUseSpecificTimeOfDayEditing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bShouldUseSpecificTimeOfDay                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTimeOfDayManager::SetUseSpecificTimeOfDayEditing(bool bShouldUseSpecificTimeOfDay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "SetUseSpecificTimeOfDayEditing");

	Params::FortTimeOfDayManager_SetUseSpecificTimeOfDayEditing Parms{};

	Parms.bShouldUseSpecificTimeOfDay = bShouldUseSpecificTimeOfDay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTimeOfDayManager.ToggleDebugForceStormEffects
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void AFortTimeOfDayManager::ToggleDebugForceStormEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "ToggleDebugForceStormEffects");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTimeOfDayManager.ToggleSkipNight
// (Final, Exec, Native, Private)

void AFortTimeOfDayManager::ToggleSkipNight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "ToggleSkipNight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTimeOfDayManager.GetPreviousDayPhase
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortDayPhase                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortDayPhase AFortTimeOfDayManager::GetPreviousDayPhase() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "GetPreviousDayPhase");

	Params::FortTimeOfDayManager_GetPreviousDayPhase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTimeOfDayManager.GetStormStrength
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortTimeOfDayManager::GetStormStrength() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "GetStormStrength");

	Params::FortTimeOfDayManager_GetStormStrength Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTimeOfDayManager.GetThreatClouds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FThreatLocationInfo>      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FThreatLocationInfo> AFortTimeOfDayManager::GetThreatClouds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTimeOfDayManager", "GetThreatClouds");

	Params::FortTimeOfDayManager_GetThreatClouds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterRiftManager.GetAssociatedMission
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortMission*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortMission* UFortAIEncounterRiftManager::GetAssociatedMission() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterRiftManager", "GetAssociatedMission");

	Params::FortAIEncounterRiftManager_GetAssociatedMission Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterSequence.Next
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// EFortEncounterSequenceResult            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortEncounterSequenceResult UFortAIEncounterSequence::Next()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterSequence", "Next");

	Params::FortAIEncounterSequence_Next Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterSequence.Previous
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// EFortEncounterSequenceResult            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortEncounterSequenceResult UFortAIEncounterSequence::Previous()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterSequence", "Previous");

	Params::FortAIEncounterSequence_Previous Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterSequence.StartCurrentEncounter
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EFortEncounterSequenceResult            OutRequestResult                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   TargetActors                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UFortAIAssignmentSettings*        AssignmentSettings                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEncounterEnvironmentQueryInfo   OverrideEnvironmentQueryInfo                           (Parm, NativeAccessSpecifierPublic)
// class AActor*                           OptionalQueryActor                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            InjectedTags                                           (Parm, NativeAccessSpecifierPublic)
// struct FFortEncounterSettings           EncounterSettings                                      (Parm, NativeAccessSpecifierPublic)
// int32                                   ActivationDelay                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAIEncounterInfo*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAIEncounterInfo* UFortAIEncounterSequence::StartCurrentEncounter(EFortEncounterSequenceResult* OutRequestResult, const TArray<class AActor*>& TargetActors, class UFortAIAssignmentSettings* AssignmentSettings, const struct FEncounterEnvironmentQueryInfo& OverrideEnvironmentQueryInfo, class AActor* OptionalQueryActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int32 ActivationDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterSequence", "StartCurrentEncounter");

	Params::FortAIEncounterSequence_StartCurrentEncounter Parms{};

	Parms.TargetActors = std::move(TargetActors);
	Parms.AssignmentSettings = AssignmentSettings;
	Parms.OverrideEnvironmentQueryInfo = std::move(OverrideEnvironmentQueryInfo);
	Parms.OptionalQueryActor = OptionalQueryActor;
	Parms.InjectedTags = std::move(InjectedTags);
	Parms.EncounterSettings = std::move(EncounterSettings);
	Parms.ActivationDelay = ActivationDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRequestResult != nullptr)
		*OutRequestResult = Parms.OutRequestResult;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterSequence.StopCurrentEncounter
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UFortAIEncounterSequence::StopCurrentEncounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterSequence", "StopCurrentEncounter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIEncounterSequence.EncounterBelongsToSequence
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAIEncounterInfo*             InEncounter                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAIEncounterSequence::EncounterBelongsToSequence(class UFortAIEncounterInfo* InEncounter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterSequence", "EncounterBelongsToSequence");

	Params::FortAIEncounterSequence_EncounterBelongsToSequence Parms{};

	Parms.InEncounter = InEncounter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterSequence.GetCurrentEncounter
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAIEncounterInfo*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAIEncounterInfo* UFortAIEncounterSequence::GetCurrentEncounter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterSequence", "GetCurrentEncounter");

	Params::FortAIEncounterSequence_GetCurrentEncounter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterSequence.GetEncounterIndexInSequence
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortAIEncounterSequence::GetEncounterIndexInSequence() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterSequence", "GetEncounterIndexInSequence");

	Params::FortAIEncounterSequence_GetEncounterIndexInSequence Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterSequence.GetNumEncountersInSequence
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortAIEncounterSequence::GetNumEncountersInSequence() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterSequence", "GetNumEncountersInSequence");

	Params::FortAIEncounterSequence_GetNumEncountersInSequence Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterSequence.HasEncounter
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAIEncounterSequence::HasEncounter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterSequence", "HasEncounter");

	Params::FortAIEncounterSequence_HasEncounter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterSequence.IsOnFinalIndexInSequence
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAIEncounterSequence::IsOnFinalIndexInSequence() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterSequence", "IsOnFinalIndexInSequence");

	Params::FortAIEncounterSequence_IsOnFinalIndexInSequence Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAlterationFunctionLibrary.GetAlterationImpactPhysicalSurfaceEffects
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// EPhysicalSurface                        HitSurface                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortCosmeticModification        CosmeticMod                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UParticleSystem*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UParticleSystem* UFortAlterationFunctionLibrary::GetAlterationImpactPhysicalSurfaceEffects(EPhysicalSurface HitSurface, const struct FFortCosmeticModification& CosmeticMod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAlterationFunctionLibrary", "GetAlterationImpactPhysicalSurfaceEffects");

	Params::FortAlterationFunctionLibrary_GetAlterationImpactPhysicalSurfaceEffects Parms{};

	Parms.HitSurface = HitSurface;
	Parms.CosmeticMod = std::move(CosmeticMod);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterTargetInterface.GetObjectiveCompletionPercentage
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IFortAIEncounterTargetInterface::GetObjectiveCompletionPercentage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterTargetInterface", "GetObjectiveCompletionPercentage");

	Params::FortAIEncounterTargetInterface_GetObjectiveCompletionPercentage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIEncounterTargetInterface.IsFloatingTarget
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IFortAIEncounterTargetInterface::IsFloatingTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIEncounterTargetInterface", "IsFloatingTarget");

	Params::FortAIEncounterTargetInterface_IsFloatingTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIFunctionLibrary.MakeNoiseEvent
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           NoiseMaker                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxRange                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAIFunctionLibrary::MakeNoiseEvent(class AActor* NoiseMaker, float MaxRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIFunctionLibrary", "MakeNoiseEvent");

	Params::FortAIFunctionLibrary_MakeNoiseEvent Parms{};

	Parms.NoiseMaker = NoiseMaker;
	Parms.MaxRange = MaxRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIFunctionLibrary.MakeNoiseEventAtLocation
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           NoiseMaker                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxRange                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          NoiseLocation                                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAIFunctionLibrary::MakeNoiseEventAtLocation(class AActor* NoiseMaker, float MaxRange, const struct FVector& NoiseLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIFunctionLibrary", "MakeNoiseEventAtLocation");

	Params::FortAIFunctionLibrary_MakeNoiseEventAtLocation Parms{};

	Parms.NoiseMaker = NoiseMaker;
	Parms.MaxRange = MaxRange;
	Parms.NoiseLocation = std::move(NoiseLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIGoalManager.AddGoalsToWorldAssignment
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortAIAssignmentIdentifier      AssignmentIdentifier                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FFortAIGoalInfo>          GoalInfos                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortAIGoalManager::AddGoalsToWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, const TArray<struct FFortAIGoalInfo>& GoalInfos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIGoalManager", "AddGoalsToWorldAssignment");

	Params::FortAIGoalManager_AddGoalsToWorldAssignment Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AssignmentIdentifier = std::move(AssignmentIdentifier);
	Parms.GoalInfos = std::move(GoalInfos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIGoalManager.AddGoalToWorldAssignment
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortAIAssignmentIdentifier      AssignmentIdentifier                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FFortAIGoalInfo                  GoalInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortAIGoalManager::AddGoalToWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, const struct FFortAIGoalInfo& GoalInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIGoalManager", "AddGoalToWorldAssignment");

	Params::FortAIGoalManager_AddGoalToWorldAssignment Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AssignmentIdentifier = std::move(AssignmentIdentifier);
	Parms.GoalInfo = std::move(GoalInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIGoalManager.CreateWorldAssignment
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortAIAssignmentIdentifier      WorldAssignmentIdentifier                              (Parm, NativeAccessSpecifierPublic)
// class UFortAIAssignmentSettings*        AssignmentSettings                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UFortAIGoalProvider>  GoalProvider                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortAIAssignmentIdentifier      AssignmentIdentifier                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// EAssignmentCreationResult               CreationResult                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIGoalManager::CreateWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& WorldAssignmentIdentifier, class UFortAIAssignmentSettings* AssignmentSettings, TSubclassOf<class UFortAIGoalProvider> GoalProvider, struct FFortAIAssignmentIdentifier* AssignmentIdentifier, EAssignmentCreationResult* CreationResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIGoalManager", "CreateWorldAssignment");

	Params::FortAIGoalManager_CreateWorldAssignment Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.WorldAssignmentIdentifier = std::move(WorldAssignmentIdentifier);
	Parms.AssignmentSettings = AssignmentSettings;
	Parms.GoalProvider = GoalProvider;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AssignmentIdentifier != nullptr)
		*AssignmentIdentifier = std::move(Parms.AssignmentIdentifier);

	if (CreationResult != nullptr)
		*CreationResult = Parms.CreationResult;
}


// Function FortniteGame.FortAIGoalManager.MakeGoalFromActor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortAIGoalInfo                  Goal                                                   (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           GoalActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bActorAlwaysPerceived                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bGoalActorAllowsUndermining                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIGoalManager::MakeGoalFromActor(struct FFortAIGoalInfo* Goal, const class UObject* WorldContextObject, class AActor* GoalActor, bool bActorAlwaysPerceived, bool bGoalActorAllowsUndermining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIGoalManager", "MakeGoalFromActor");

	Params::FortAIGoalManager_MakeGoalFromActor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.GoalActor = GoalActor;
	Parms.bActorAlwaysPerceived = bActorAlwaysPerceived;
	Parms.bGoalActorAllowsUndermining = bGoalActorAllowsUndermining;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Goal != nullptr)
		*Goal = std::move(Parms.Goal);
}


// Function FortniteGame.FortAIGoalManager.MakeGoalFromLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FFortAIGoalInfo                  Goal                                                   (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          GoalLocation                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIGoalManager::MakeGoalFromLocation(struct FFortAIGoalInfo* Goal, const class UObject* WorldContextObject, const struct FVector& GoalLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIGoalManager", "MakeGoalFromLocation");

	Params::FortAIGoalManager_MakeGoalFromLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.GoalLocation = std::move(GoalLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Goal != nullptr)
		*Goal = std::move(Parms.Goal);
}


// Function FortniteGame.FortAIGoalManager.MakeGoalsFromActors
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FFortAIGoalInfo>          Goals                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   GoalActors                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bActorsAlwaysPerceived                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bGoalActorsAllowUndermining                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIGoalManager::MakeGoalsFromActors(TArray<struct FFortAIGoalInfo>* Goals, const class UObject* WorldContextObject, const TArray<class AActor*>& GoalActors, bool bActorsAlwaysPerceived, bool bGoalActorsAllowUndermining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIGoalManager", "MakeGoalsFromActors");

	Params::FortAIGoalManager_MakeGoalsFromActors Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.GoalActors = std::move(GoalActors);
	Parms.bActorsAlwaysPerceived = bActorsAlwaysPerceived;
	Parms.bGoalActorsAllowUndermining = bGoalActorsAllowUndermining;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Goals != nullptr)
		*Goals = std::move(Parms.Goals);
}


// Function FortniteGame.FortAIGoalManager.MakeGoalsFromLocations
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FFortAIGoalInfo>          Goals                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  GoalLocations                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortAIGoalManager::MakeGoalsFromLocations(TArray<struct FFortAIGoalInfo>* Goals, const class UObject* WorldContextObject, const TArray<struct FVector>& GoalLocations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIGoalManager", "MakeGoalsFromLocations");

	Params::FortAIGoalManager_MakeGoalsFromLocations Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.GoalLocations = std::move(GoalLocations);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Goals != nullptr)
		*Goals = std::move(Parms.Goals);
}


// Function FortniteGame.FortAIGoalManager.MakeGoalsFromLocationsAndActor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FFortAIGoalInfo>          Goals                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  GoalLocations                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class AActor*                           GoalActor                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIGoalManager::MakeGoalsFromLocationsAndActor(TArray<struct FFortAIGoalInfo>* Goals, const class UObject* WorldContextObject, const TArray<struct FVector>& GoalLocations, const class AActor* GoalActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIGoalManager", "MakeGoalsFromLocationsAndActor");

	Params::FortAIGoalManager_MakeGoalsFromLocationsAndActor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.GoalLocations = std::move(GoalLocations);
	Parms.GoalActor = GoalActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Goals != nullptr)
		*Goals = std::move(Parms.Goals);
}


// Function FortniteGame.FortAIGoalManager.RemoveGoalFromWorldAssignment
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortAIAssignmentIdentifier      AssignmentIdentifier                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FFortAIGoalInfo                  GoalInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortAIGoalManager::RemoveGoalFromWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, const struct FFortAIGoalInfo& GoalInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIGoalManager", "RemoveGoalFromWorldAssignment");

	Params::FortAIGoalManager_RemoveGoalFromWorldAssignment Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AssignmentIdentifier = std::move(AssignmentIdentifier);
	Parms.GoalInfo = std::move(GoalInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIGoalManager.RemoveGoalsFromWorldAssignment
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortAIAssignmentIdentifier      AssignmentIdentifier                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FFortAIGoalInfo>          GoalInfos                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortAIGoalManager::RemoveGoalsFromWorldAssignment(class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& AssignmentIdentifier, const TArray<struct FFortAIGoalInfo>& GoalInfos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIGoalManager", "RemoveGoalsFromWorldAssignment");

	Params::FortAIGoalManager_RemoveGoalsFromWorldAssignment Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AssignmentIdentifier = std::move(AssignmentIdentifier);
	Parms.GoalInfos = std::move(GoalInfos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIGoalManager.RemoveWorldAssignment
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortAIAssignmentIdentifier      AssignmentIdentifier                                   (Parm, NativeAccessSpecifierPublic)

void AFortAIGoalManager::RemoveWorldAssignment(const class UObject* WorldContextObject, const struct FFortAIAssignmentIdentifier& AssignmentIdentifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIGoalManager", "RemoveWorldAssignment");

	Params::FortAIGoalManager_RemoveWorldAssignment Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AssignmentIdentifier = std::move(AssignmentIdentifier);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIGoalManager.SetCurrentGoalDiscouragement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortAIController*                AI                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIGoalManager::SetCurrentGoalDiscouragement(class UObject* WorldContext, class AFortAIController* AI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAIGoalManager", "SetCurrentGoalDiscouragement");

	Params::FortAIGoalManager_SetCurrentGoalDiscouragement Parms{};

	Parms.WorldContext = WorldContext;
	Parms.AI = AI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIGoalManager.AddGoal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           GoalActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAIAssignmentSettings*        GoalSettings                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIGoalManager::AddGoal(class AActor* GoalActor, class UFortAIAssignmentSettings* GoalSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIGoalManager", "AddGoal");

	Params::FortAIGoalManager_AddGoal Parms{};

	Parms.GoalActor = GoalActor;
	Parms.GoalSettings = GoalSettings;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIGoalManager.AddGoalActorToAssignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAIAssignment*                Assignment                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           GoalActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortAIGoalManager::AddGoalActorToAssignment(class UFortAIAssignment* Assignment, class AActor* GoalActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIGoalManager", "AddGoalActorToAssignment");

	Params::FortAIGoalManager_AddGoalActorToAssignment Parms{};

	Parms.Assignment = Assignment;
	Parms.GoalActor = GoalActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIGoalManager.AddWorldAssignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAIAssignmentSettings*        AssignmentSettings                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           GoalActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAIAssignment*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAIAssignment* AFortAIGoalManager::AddWorldAssignment(class UFortAIAssignmentSettings* AssignmentSettings, class AActor* GoalActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIGoalManager", "AddWorldAssignment");

	Params::FortAIGoalManager_AddWorldAssignment Parms{};

	Parms.AssignmentSettings = AssignmentSettings;
	Parms.GoalActor = GoalActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIGoalProvider.InitializeGoalProvider
// (Native, Public, BlueprintCallable)
// Parameters:
// class UWorld*                           ContextWorld                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAIAssignment*                Assignment                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAIGoalProvider::InitializeGoalProvider(class UWorld* ContextWorld, class UFortAIAssignment* Assignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIGoalProvider", "InitializeGoalProvider");

	Params::FortAIGoalProvider_InitializeGoalProvider Parms{};

	Parms.ContextWorld = ContextWorld;
	Parms.Assignment = Assignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAIGoalProvider.UpdateGoals
// (Native, Public, BlueprintCallable)

void UFortAIGoalProvider::UpdateGoals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIGoalProvider", "UpdateGoals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAIGoalProvider.GetEncounterInfo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAIEncounterInfo*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAIEncounterInfo* UFortAIGoalProvider::GetEncounterInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIGoalProvider", "GetEncounterInfo");

	Params::FortAIGoalProvider_GetEncounterInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTracerBase.Init
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Start                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          End                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTracerBase::Init(const struct FVector& Start, const struct FVector& End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTracerBase", "Init");

	Params::FortTracerBase_Init Parms{};

	Parms.Start = std::move(Start);
	Parms.End = std::move(End);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTracerBase.OnInit
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          Start                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          End                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTracerBase::OnInit(const struct FVector& Start, const struct FVector& End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTracerBase", "OnInit");

	Params::FortTracerBase_OnInit Parms{};

	Parms.Start = std::move(Start);
	Parms.End = std::move(End);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortMovementSet.OnRep_SpeedMultiplier
// (Final, Native, Public)

void UFortMovementSet::OnRep_SpeedMultiplier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementSet", "OnRep_SpeedMultiplier");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTwitchAccount.HandleQuestsUpdated
// (Final, Native, Private)

void UFortTwitchAccount::HandleQuestsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTwitchAccount", "HandleQuestsUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortItemDroppedParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFortWorldItemDefinition*         _DroppedItemDefinition                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            _DroppedBy                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _AmountCollected                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemDroppedParams::BreakParams(class UFortWorldItemDefinition** _DroppedItemDefinition, class AFortPlayerController** _DroppedBy, int32* _AmountCollected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDroppedParams", "BreakParams");

	Params::FortItemDroppedParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_DroppedItemDefinition != nullptr)
		*_DroppedItemDefinition = Parms._DroppedItemDefinition;

	if (_DroppedBy != nullptr)
		*_DroppedBy = Parms._DroppedBy;

	if (_AmountCollected != nullptr)
		*_AmountCollected = Parms._AmountCollected;
}


// Function FortniteGame.FortItemDroppedParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortWorldItemDefinition*         _DroppedItemDefinition                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            _DroppedBy                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _AmountCollected                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItemDroppedParams*           ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemDroppedParams::SetParams(const class UFortWorldItemDefinition* _DroppedItemDefinition, class AFortPlayerController* _DroppedBy, int32 _AmountCollected, class UFortItemDroppedParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemDroppedParams", "SetParams");

	Params::FortItemDroppedParams_SetParams Parms{};

	Parms._DroppedItemDefinition = _DroppedItemDefinition;
	Parms._DroppedBy = _DroppedBy;
	Parms._AmountCollected = _AmountCollected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortAIRootAssignmentProviderInterface.GetRootAssignmentIdentifier
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FFortAIAssignmentIdentifierReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FFortAIAssignmentIdentifier IFortAIRootAssignmentProviderInterface::GetRootAssignmentIdentifier() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAIRootAssignmentProviderInterface", "GetRootAssignmentIdentifier");

	Params::FortAIRootAssignmentProviderInterface_GetRootAssignmentIdentifier Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAISpawnGroup.GetEnemy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   EnemyIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UFortAIPawnVariant>   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UFortAIPawnVariant> UFortAISpawnGroup::GetEnemy(int32 EnemyIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAISpawnGroup", "GetEnemy");

	Params::FortAISpawnGroup_GetEnemy Parms{};

	Parms.EnemyIndex = EnemyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAISpawnGroup.GetNumberOfEnemies
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortAISpawnGroup::GetNumberOfEnemies() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAISpawnGroup", "GetNumberOfEnemies");

	Params::FortAISpawnGroup_GetNumberOfEnemies Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAISpawnGroup.IsLargeSpawnGroup
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAISpawnGroup::IsLargeSpawnGroup() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAISpawnGroup", "IsLargeSpawnGroup");

	Params::FortAISpawnGroup_IsLargeSpawnGroup Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAISpawnGroup.IsPrototype
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAISpawnGroup::IsPrototype() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAISpawnGroup", "IsPrototype");

	Params::FortAISpawnGroup_IsPrototype Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAISpawnGroup.IsValidForEnemySpawners
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortAISpawnGroup::IsValidForEnemySpawners() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAISpawnGroup", "IsValidForEnemySpawners");

	Params::FortAISpawnGroup_IsValidForEnemySpawners Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAsyncAction_HomebaseContextPurchaseNode.PurchaseNode
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UHomeBaseContext*                 Param_HomeBaseContext                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Param_IdOfNodeToPurchase                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_HomebaseContextPurchaseNode*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_HomebaseContextPurchaseNode* UFortAsyncAction_HomebaseContextPurchaseNode::PurchaseNode(const class UHomeBaseContext* Param_HomeBaseContext, const class FName& Param_IdOfNodeToPurchase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_HomebaseContextPurchaseNode", "PurchaseNode");

	Params::FortAsyncAction_HomebaseContextPurchaseNode_PurchaseNode Parms{};

	Parms.Param_HomeBaseContext = Param_HomeBaseContext;
	Parms.Param_IdOfNodeToPurchase = Param_IdOfNodeToPurchase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction FortniteGame.FortAsyncAction_HomebaseContextPurchaseNode.OnMCPRequestComplete__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortAsyncAction_HomebaseContextPurchaseNode::OnMCPRequestComplete__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAsyncAction_HomebaseContextPurchaseNode", "OnMCPRequestComplete__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortAITetheringBoxBoundsInterface.GetTetheredBoxBoundsCenter
// (BlueprintAuthorityOnly, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector IFortAITetheringBoxBoundsInterface::GetTetheredBoxBoundsCenter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAITetheringBoxBoundsInterface", "GetTetheredBoxBoundsCenter");

	Params::FortAITetheringBoxBoundsInterface_GetTetheredBoxBoundsCenter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAITetheringBoxBoundsInterface.GetTetheredBoxBoundsEQSGridSize
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IFortAITetheringBoxBoundsInterface::GetTetheredBoxBoundsEQSGridSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAITetheringBoxBoundsInterface", "GetTetheredBoxBoundsEQSGridSize");

	Params::FortAITetheringBoxBoundsInterface_GetTetheredBoxBoundsEQSGridSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAITetheringBoxBoundsInterface.GetTetheredBoxBoundsEQSSpaceBetween
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IFortAITetheringBoxBoundsInterface::GetTetheredBoxBoundsEQSSpaceBetween()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAITetheringBoxBoundsInterface", "GetTetheredBoxBoundsEQSSpaceBetween");

	Params::FortAITetheringBoxBoundsInterface_GetTetheredBoxBoundsEQSSpaceBetween Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAITetheringBoxBoundsInterface.GetTetheredBoxBoundsHeight
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IFortAITetheringBoxBoundsInterface::GetTetheredBoxBoundsHeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAITetheringBoxBoundsInterface", "GetTetheredBoxBoundsHeight");

	Params::FortAITetheringBoxBoundsInterface_GetTetheredBoxBoundsHeight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAITetheringBoxBoundsInterface.GetTetheredBoxBoundsWidth
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IFortAITetheringBoxBoundsInterface::GetTetheredBoxBoundsWidth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAITetheringBoxBoundsInterface", "GetTetheredBoxBoundsWidth");

	Params::FortAITetheringBoxBoundsInterface_GetTetheredBoxBoundsWidth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayMutator.IsMutatorActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortGameplayMutator::IsMutatorActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayMutator", "IsMutatorActive");

	Params::FortGameplayMutator_IsMutatorActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameMode.OnEndOfDay
// (Native, Public)

void AFortGameMode::OnEndOfDay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameMode", "OnEndOfDay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameMode.DumpReservations
// (Exec, Native, Public, Const)

void AFortGameMode::DumpReservations() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameMode", "DumpReservations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameModeZone.OnEveningReached
// (Native, Public)

void AFortGameModeZone::OnEveningReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameModeZone", "OnEveningReached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameModeZone.OnMorningReached
// (Native, Public)

void AFortGameModeZone::OnMorningReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameModeZone", "OnMorningReached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameModeZone.ReplicateHealthAndShield
// (Native, Public)

void AFortGameModeZone::ReplicateHealthAndShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameModeZone", "ReplicateHealthAndShield");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortFXManager.AddLightAnimationIntensity
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULightComponent*                  LightComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      LerpCurve                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOneMinusLerpValue                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayReverse                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortFXManager::AddLightAnimationIntensity(class UObject* WorldContextObject, class ULightComponent* LightComp, float StartValue, float EndValue, class UCurveFloat* LerpCurve, bool bOneMinusLerpValue, float Duration, bool bPlayReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortFXManager", "AddLightAnimationIntensity");

	Params::FortFXManager_AddLightAnimationIntensity Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LightComp = LightComp;
	Parms.StartValue = StartValue;
	Parms.EndValue = EndValue;
	Parms.LerpCurve = LerpCurve;
	Parms.bOneMinusLerpValue = bOneMinusLerpValue;
	Parms.Duration = Duration;
	Parms.bPlayReverse = bPlayReverse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortFXManager.AddMIDAnimationColor
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         Mid                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     StartValue                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     EndValue                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      LerpCurve                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOneMinusLerpValue                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayReverse                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortFXManager::AddMIDAnimationColor(class UObject* WorldContextObject, class UMaterialInstanceDynamic* Mid, class FName ParamName, const struct FLinearColor& StartValue, const struct FLinearColor& EndValue, class UCurveFloat* LerpCurve, bool bOneMinusLerpValue, float Duration, bool bPlayReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortFXManager", "AddMIDAnimationColor");

	Params::FortFXManager_AddMIDAnimationColor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Mid = Mid;
	Parms.ParamName = ParamName;
	Parms.StartValue = std::move(StartValue);
	Parms.EndValue = std::move(EndValue);
	Parms.LerpCurve = LerpCurve;
	Parms.bOneMinusLerpValue = bOneMinusLerpValue;
	Parms.Duration = Duration;
	Parms.bPlayReverse = bPlayReverse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortFXManager.AddMIDAnimationColorCurve
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         Mid                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveLinearColor*                ColorCurve                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayReverse                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortFXManager::AddMIDAnimationColorCurve(class UObject* WorldContextObject, class UMaterialInstanceDynamic* Mid, class FName ParamName, class UCurveLinearColor* ColorCurve, float Duration, bool bPlayReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortFXManager", "AddMIDAnimationColorCurve");

	Params::FortFXManager_AddMIDAnimationColorCurve Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Mid = Mid;
	Parms.ParamName = ParamName;
	Parms.ColorCurve = ColorCurve;
	Parms.Duration = Duration;
	Parms.bPlayReverse = bPlayReverse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortFXManager.AddMIDAnimationFloat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         Mid                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      LerpCurve                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOneMinusLerpValue                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayReverse                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortFXManager::AddMIDAnimationFloat(class UObject* WorldContextObject, class UMaterialInstanceDynamic* Mid, class FName ParamName, float StartValue, float EndValue, class UCurveFloat* LerpCurve, bool bOneMinusLerpValue, float Duration, bool bPlayReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortFXManager", "AddMIDAnimationFloat");

	Params::FortFXManager_AddMIDAnimationFloat Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Mid = Mid;
	Parms.ParamName = ParamName;
	Parms.StartValue = StartValue;
	Parms.EndValue = EndValue;
	Parms.LerpCurve = LerpCurve;
	Parms.bOneMinusLerpValue = bOneMinusLerpValue;
	Parms.Duration = Duration;
	Parms.bPlayReverse = bPlayReverse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortFXManager.AddParticleAnimationFloat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UParticleSystemComponent*         ParticleSystemComp                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      LerpCurve                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOneMinusLerpValue                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayReverse                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortFXManager::AddParticleAnimationFloat(class UObject* WorldContextObject, class UParticleSystemComponent* ParticleSystemComp, class FName ParamName, float StartValue, float EndValue, class UCurveFloat* LerpCurve, bool bOneMinusLerpValue, float Duration, bool bPlayReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortFXManager", "AddParticleAnimationFloat");

	Params::FortFXManager_AddParticleAnimationFloat Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ParticleSystemComp = ParticleSystemComp;
	Parms.ParamName = ParamName;
	Parms.StartValue = StartValue;
	Parms.EndValue = EndValue;
	Parms.LerpCurve = LerpCurve;
	Parms.bOneMinusLerpValue = bOneMinusLerpValue;
	Parms.Duration = Duration;
	Parms.bPlayReverse = bPlayReverse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortFXManager.AddSplineMeshScaleAnimation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineMeshComponent*             SplineMesh                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartScaleStart                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartScaleEnd                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndScaleStart                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndScaleEnd                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      LerpCurve                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOneMinusLerpValue                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayReverse                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortFXManager::AddSplineMeshScaleAnimation(class UObject* WorldContextObject, class USplineMeshComponent* SplineMesh, float StartScaleStart, float StartScaleEnd, float EndScaleStart, float EndScaleEnd, class UCurveFloat* LerpCurve, bool bOneMinusLerpValue, float Duration, bool bPlayReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortFXManager", "AddSplineMeshScaleAnimation");

	Params::FortFXManager_AddSplineMeshScaleAnimation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SplineMesh = SplineMesh;
	Parms.StartScaleStart = StartScaleStart;
	Parms.StartScaleEnd = StartScaleEnd;
	Parms.EndScaleStart = EndScaleStart;
	Parms.EndScaleEnd = EndScaleEnd;
	Parms.LerpCurve = LerpCurve;
	Parms.bOneMinusLerpValue = bOneMinusLerpValue;
	Parms.Duration = Duration;
	Parms.bPlayReverse = bPlayReverse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortFXManager.AddSplineMeshSnapAnimation
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class USplineMeshComponent*>     SplineMeshes                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class USplineComponent*                 TargetSpline                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                      GrowthCurve                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayGrowthReverse                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortFXManager::AddSplineMeshSnapAnimation(class UObject* WorldContextObject, const TArray<class USplineMeshComponent*>& SplineMeshes, class USplineComponent* TargetSpline, class UCurveFloat* GrowthCurve, float Duration, bool bPlayGrowthReverse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortFXManager", "AddSplineMeshSnapAnimation");

	Params::FortFXManager_AddSplineMeshSnapAnimation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SplineMeshes = std::move(SplineMeshes);
	Parms.TargetSpline = TargetSpline;
	Parms.GrowthCurve = GrowthCurve;
	Parms.Duration = Duration;
	Parms.bPlayGrowthReverse = bPlayGrowthReverse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortFXManager.RemoveLightAnimations
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULightComponent*                  LightComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortFXManager::RemoveLightAnimations(class UObject* WorldContextObject, class ULightComponent* LightComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortFXManager", "RemoveLightAnimations");

	Params::FortFXManager_RemoveLightAnimations Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LightComp = LightComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortFXManager.RemoveMIDAnimations
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         Mid                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortFXManager::RemoveMIDAnimations(class UObject* WorldContextObject, class UMaterialInstanceDynamic* Mid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortFXManager", "RemoveMIDAnimations");

	Params::FortFXManager_RemoveMIDAnimations Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Mid = Mid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortFXManager.RemoveParticleAnimations
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UParticleSystemComponent*         ParticleSystemComp                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortFXManager::RemoveParticleAnimations(class UObject* WorldContextObject, class UParticleSystemComponent* ParticleSystemComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortFXManager", "RemoveParticleAnimations");

	Params::FortFXManager_RemoveParticleAnimations Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ParticleSystemComp = ParticleSystemComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortFXManager.RemoveSplineMeshAnimations
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineMeshComponent*             SplineMesh                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortFXManager::RemoveSplineMeshAnimations(class UObject* WorldContextObject, class USplineMeshComponent* SplineMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortFXManager", "RemoveSplineMeshAnimations");

	Params::FortFXManager_RemoveSplineMeshAnimations Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SplineMesh = SplineMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortFXManager.ReturnFXActorToPool
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           FXActor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortFXManager::ReturnFXActorToPool(class UObject* WorldContextObject, class AActor* FXActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortFXManager", "ReturnFXActorToPool");

	Params::FortFXManager_ReturnFXActorToPool Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.FXActor = FXActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortFXManager.SpawnPooledFXActor
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>               FXActorClass                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       SpawnTransform                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AFortFXManager::SpawnPooledFXActor(class UObject* WorldContextObject, TSubclassOf<class AActor> FXActorClass, const struct FTransform& SpawnTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortFXManager", "SpawnPooledFXActor");

	Params::FortFXManager_SpawnPooledFXActor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.FXActorClass = FXActorClass;
	Parms.SpawnTransform = std::move(SpawnTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameData.GetPersonalXpBoost
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortGameData::GetPersonalXpBoost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGameData", "GetPersonalXpBoost");

	Params::FortGameData_GetPersonalXpBoost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameData.GetTeamXpBoost
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortGameData::GetTeamXpBoost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGameData", "GetTeamXpBoost");

	Params::FortGameData_GetTeamXpBoost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAsyncAction_AbandonSession.AbandonSession
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            Param_PlayerController                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_AbandonSession*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_AbandonSession* UFortAsyncAction_AbandonSession::AbandonSession(class AFortPlayerController* Param_PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_AbandonSession", "AbandonSession");

	Params::FortAsyncAction_AbandonSession_AbandonSession Parms{};

	Parms.Param_PlayerController = Param_PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAsyncAction_EnsureClientQuestLogin.SendEnsureClientQuestLogin
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFortQuestManager*                Param_QuestManager                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_EnsureClientQuestLogin*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_EnsureClientQuestLogin* UFortAsyncAction_EnsureClientQuestLogin::SendEnsureClientQuestLogin(class UFortQuestManager* Param_QuestManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_EnsureClientQuestLogin", "SendEnsureClientQuestLogin");

	Params::FortAsyncAction_EnsureClientQuestLogin_SendEnsureClientQuestLogin Parms{};

	Parms.Param_QuestManager = Param_QuestManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAsyncAction_OpenChoiceUI.OpenChoiceUI
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            Param_PlayerController                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FChoiceData                      Param_ChoiceItems                                      (Parm, NativeAccessSpecifierPublic)
// class UFortAsyncAction_OpenChoiceUI*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_OpenChoiceUI* UFortAsyncAction_OpenChoiceUI::OpenChoiceUI(class AFortPlayerController* Param_PlayerController, const struct FChoiceData& Param_ChoiceItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_OpenChoiceUI", "OpenChoiceUI");

	Params::FortAsyncAction_OpenChoiceUI_OpenChoiceUI Parms{};

	Parms.Param_PlayerController = Param_PlayerController;
	Parms.Param_ChoiceItems = std::move(Param_ChoiceItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTrackPreview.InitializeTrackPreview
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStaticMeshComponent*             InTrackMeshComp                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTrackPreview::InitializeTrackPreview(class UStaticMeshComponent* InTrackMeshComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrackPreview", "InitializeTrackPreview");

	Params::FortTrackPreview_InitializeTrackPreview Parms{};

	Parms.InTrackMeshComp = InTrackMeshComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAsyncAction_PlayConversation.PlayConversation
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPawn*                        Param_Pawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortConversation*                Param_ConversationToPlay                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_PlayConversation*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_PlayConversation* UFortAsyncAction_PlayConversation::PlayConversation(class AFortPawn* Param_Pawn, class UFortConversation* Param_ConversationToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_PlayConversation", "PlayConversation");

	Params::FortAsyncAction_PlayConversation_PlayConversation Parms{};

	Parms.Param_Pawn = Param_Pawn;
	Parms.Param_ConversationToPlay = Param_ConversationToPlay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAsyncAction_RejoinSession.RejoinSession
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            Param_PlayerController                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_RejoinSession*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_RejoinSession* UFortAsyncAction_RejoinSession::RejoinSession(class AFortPlayerController* Param_PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_RejoinSession", "RejoinSession");

	Params::FortAsyncAction_RejoinSession_RejoinSession Parms{};

	Parms.Param_PlayerController = Param_PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAsyncAction_TriggerNotification.TriggerNotification
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortNotificationQueueType              Param_NotificationType                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortDialogDescription           NotificationDescription                                (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class UFortAsyncAction_TriggerNotification*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_TriggerNotification* UFortAsyncAction_TriggerNotification::TriggerNotification(class UObject* InWorldContextObject, EFortNotificationQueueType Param_NotificationType, const struct FFortDialogDescription& NotificationDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_TriggerNotification", "TriggerNotification");

	Params::FortAsyncAction_TriggerNotification_TriggerNotification Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.Param_NotificationType = Param_NotificationType;
	Parms.NotificationDescription = std::move(NotificationDescription);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction FortniteGame.FortAthenaAircraft.FortAthenaAircraftDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void AFortAthenaAircraft::FortAthenaAircraftDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAircraft", "FortAthenaAircraftDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortAthenaAircraft.OnRep_JumpFlashCount
// (Final, Native, Protected)

void AFortAthenaAircraft::OnRep_JumpFlashCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAircraft", "OnRep_JumpFlashCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortAthenaAircraft.PlayEffectsForPlayerJumped
// (Event, Protected, BlueprintEvent)

void AFortAthenaAircraft::PlayEffectsForPlayerJumped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAircraft", "PlayEffectsForPlayerJumped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortAthenaAircraft.GetDropEndTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortAthenaAircraft::GetDropEndTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAircraft", "GetDropEndTime");

	Params::FortAthenaAircraft_GetDropEndTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAthenaAircraft.GetDropStartTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortAthenaAircraft::GetDropStartTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaAircraft", "GetDropStartTime");

	Params::FortAthenaAircraft_GetDropStartTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTrack.GetOutgoingNeighborFromSpline
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class USplineComponent*                 InSpline                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InReverseDirection                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortTrack*                       OutNeighbor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTrack::GetOutgoingNeighborFromSpline(class USplineComponent* InSpline, bool InReverseDirection, class AFortTrack** OutNeighbor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrack", "GetOutgoingNeighborFromSpline");

	Params::FortTrack_GetOutgoingNeighborFromSpline Parms{};

	Parms.InSpline = InSpline;
	Parms.InReverseDirection = InReverseDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNeighbor != nullptr)
		*OutNeighbor = Parms.OutNeighbor;
}


// Function FortniteGame.FortTrack.GetPathDistanceToTrack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortTrack*                       TargetTrack                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 InCurrentSpline                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CurrentDistanceAlongSpline                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InReverseDirection                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortTrack::GetPathDistanceToTrack(class AFortTrack* TargetTrack, class USplineComponent* InCurrentSpline, float CurrentDistanceAlongSpline, bool InReverseDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrack", "GetPathDistanceToTrack");

	Params::FortTrack_GetPathDistanceToTrack Parms{};

	Parms.TargetTrack = TargetTrack;
	Parms.InCurrentSpline = InCurrentSpline;
	Parms.CurrentDistanceAlongSpline = CurrentDistanceAlongSpline;
	Parms.InReverseDirection = InReverseDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTrack.GetSplineFromIncomingNeighbor
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortTrack*                       InNeighbor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USplineComponent*                 OutSpline                                              (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OutReverseDirection                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTrack::GetSplineFromIncomingNeighbor(class AFortTrack* InNeighbor, class USplineComponent** OutSpline, bool* OutReverseDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrack", "GetSplineFromIncomingNeighbor");

	Params::FortTrack_GetSplineFromIncomingNeighbor Parms{};

	Parms.InNeighbor = InNeighbor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSpline != nullptr)
		*OutSpline = Parms.OutSpline;

	if (OutReverseDirection != nullptr)
		*OutReverseDirection = Parms.OutReverseDirection;
}


// Function FortniteGame.FortTrack.GetSplineFromPositionAndOrientation
// (Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          InLocation                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         InRotation                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class USplineComponent*                 OutSpline                                              (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutDistanceAlongSpline                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OutReverseDirection                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTrack::GetSplineFromPositionAndOrientation(const struct FVector& InLocation, const struct FRotator& InRotation, class USplineComponent** OutSpline, float* OutDistanceAlongSpline, bool* OutReverseDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrack", "GetSplineFromPositionAndOrientation");

	Params::FortTrack_GetSplineFromPositionAndOrientation Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InRotation = std::move(InRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSpline != nullptr)
		*OutSpline = Parms.OutSpline;

	if (OutDistanceAlongSpline != nullptr)
		*OutDistanceAlongSpline = Parms.OutDistanceAlongSpline;

	if (OutReverseDirection != nullptr)
		*OutReverseDirection = Parms.OutReverseDirection;
}


// Function FortniteGame.FortTrack.InitializeTrack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              InSwitchComp                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTrack::InitializeTrack(class UPrimitiveComponent* InSwitchComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrack", "InitializeTrack");

	Params::FortTrack_InitializeTrack Parms{};

	Parms.InSwitchComp = InSwitchComp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTrack.IsConnectedToTrack
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortTrack*                       TargetTrack                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortTrack::IsConnectedToTrack(class AFortTrack* TargetTrack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrack", "IsConnectedToTrack");

	Params::FortTrack_IsConnectedToTrack Parms{};

	Parms.TargetTrack = TargetTrack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTrack.IsConnectedToTrackList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AFortTrack*>               TargetTracks                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortTrack::IsConnectedToTrackList(const TArray<class AFortTrack*>& TargetTracks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrack", "IsConnectedToTrackList");

	Params::FortTrack_IsConnectedToTrackList Parms{};

	Parms.TargetTracks = std::move(TargetTracks);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTrack.OnConfigurationChanged
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// int32                                   NewConfigurationIdx                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OldConfigurationIdx                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTrack::OnConfigurationChanged(int32 NewConfigurationIdx, int32 OldConfigurationIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrack", "OnConfigurationChanged");

	Params::FortTrack_OnConfigurationChanged Parms{};

	Parms.NewConfigurationIdx = NewConfigurationIdx;
	Parms.OldConfigurationIdx = OldConfigurationIdx;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortTrack.OnRep_ConfigurationIdx
// (Native, Protected)

void AFortTrack::OnRep_ConfigurationIdx()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrack", "OnRep_ConfigurationIdx");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTrack.OnRep_NeighborsByDirection
// (Native, Protected)

void AFortTrack::OnRep_NeighborsByDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrack", "OnRep_NeighborsByDirection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTrack.OnRep_SwitchState
// (Native, Protected)

void AFortTrack::OnRep_SwitchState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrack", "OnRep_SwitchState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTrack.OnSwitchStateChanged
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// int32                                   NewSwitchState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OldSwitchState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumSwitchStates                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTrack::OnSwitchStateChanged(int32 NewSwitchState, int32 OldSwitchState, int32 NumSwitchStates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrack", "OnSwitchStateChanged");

	Params::FortTrack_OnSwitchStateChanged Parms{};

	Parms.NewSwitchState = NewSwitchState;
	Parms.OldSwitchState = OldSwitchState;
	Parms.NumSwitchStates = NumSwitchStates;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortWorker.GetSecondaryCategory
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ItemCategoryText                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FSlateBrush                      ItemCategoryBrush                                      (Parm, OutParm, NativeAccessSpecifierPublic)
// EFortBrushSize                          BrushSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWorker::GetSecondaryCategory(class FText* ItemCategoryText, struct FSlateBrush* ItemCategoryBrush, EFortBrushSize BrushSize) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorker", "GetSecondaryCategory");

	Params::FortWorker_GetSecondaryCategory Parms{};

	Parms.BrushSize = BrushSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ItemCategoryText != nullptr)
		*ItemCategoryText = std::move(Parms.ItemCategoryText);

	if (ItemCategoryBrush != nullptr)
		*ItemCategoryBrush = std::move(Parms.ItemCategoryBrush);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWorker.GetTertiaryCategory
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ItemCategoryText                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FSlateBrush                      ItemCategoryBrush                                      (Parm, OutParm, NativeAccessSpecifierPublic)
// EFortBrushSize                          BrushSize                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWorker::GetTertiaryCategory(class FText* ItemCategoryText, struct FSlateBrush* ItemCategoryBrush, EFortBrushSize BrushSize) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorker", "GetTertiaryCategory");

	Params::FortWorker_GetTertiaryCategory Parms{};

	Parms.BrushSize = BrushSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ItemCategoryText != nullptr)
		*ItemCategoryText = std::move(Parms.ItemCategoryText);

	if (ItemCategoryBrush != nullptr)
		*ItemCategoryBrush = std::move(Parms.ItemCategoryBrush);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWorker.GetWorkerTypeBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortWorkerType*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortWorkerType* UFortWorker::GetWorkerTypeBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorker", "GetWorkerTypeBP");

	Params::FortWorker_GetWorkerTypeBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAthenaHoverCarMovementComponent.ServerUpdateAthenaState
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// float                                   InThrottleInput                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSteeringInput                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InForwardVectorTarget                                  (ConstParm, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortAthenaHoverCarMovementComponent::ServerUpdateAthenaState(float InThrottleInput, float InSteeringInput, const struct FVector& InForwardVectorTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAthenaHoverCarMovementComponent", "ServerUpdateAthenaState");

	Params::FortAthenaHoverCarMovementComponent_ServerUpdateAthenaState Parms{};

	Parms.InThrottleInput = InThrottleInput;
	Parms.InSteeringInput = InSteeringInput;
	Parms.InForwardVectorTarget = std::move(InForwardVectorTarget);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconClient.ClientCreateOrJoinChatRoom
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FString                           ChatRoomId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortLobbyBeaconClient::ClientCreateOrJoinChatRoom(const class FString& ChatRoomId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconClient", "ClientCreateOrJoinChatRoom");

	Params::FortLobbyBeaconClient_ClientCreateOrJoinChatRoom Parms{};

	Parms.ChatRoomId = std::move(ChatRoomId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconClient.ServerIncrementHomeBaseVersion
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FUniqueNetIdRepl                 InUniqueId                                             (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortLobbyBeaconClient::ServerIncrementHomeBaseVersion(const struct FUniqueNetIdRepl& InUniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconClient", "ServerIncrementHomeBaseVersion");

	Params::FortLobbyBeaconClient_ServerIncrementHomeBaseVersion Parms{};

	Parms.InUniqueId = std::move(InUniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconClient.ServerSetCharacterGender
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FUniqueNetIdRepl                 InUniqueId                                             (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortCustomGender                       GenderType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortLobbyBeaconClient::ServerSetCharacterGender(const struct FUniqueNetIdRepl& InUniqueId, EFortCustomGender GenderType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconClient", "ServerSetCharacterGender");

	Params::FortLobbyBeaconClient_ServerSetCharacterGender Parms{};

	Parms.InUniqueId = std::move(InUniqueId);
	Parms.GenderType = GenderType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconClient.ServerSetConsoleUniqueNetId
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FUniqueNetIdRepl                 InUniqueId                                             (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             NewConsoleOSS                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 NewConsoleNetId                                        (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortLobbyBeaconClient::ServerSetConsoleUniqueNetId(const struct FUniqueNetIdRepl& InUniqueId, const class FName NewConsoleOSS, const struct FUniqueNetIdRepl& NewConsoleNetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconClient", "ServerSetConsoleUniqueNetId");

	Params::FortLobbyBeaconClient_ServerSetConsoleUniqueNetId Parms{};

	Parms.InUniqueId = std::move(InUniqueId);
	Parms.NewConsoleOSS = NewConsoleOSS;
	Parms.NewConsoleNetId = std::move(NewConsoleNetId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconClient.ServerSetCurrentCharacterXp
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FUniqueNetIdRepl                 InUniqueId                                             (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CurrentCharacterXp                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortLobbyBeaconClient::ServerSetCurrentCharacterXp(const struct FUniqueNetIdRepl& InUniqueId, const int32 CurrentCharacterXp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconClient", "ServerSetCurrentCharacterXp");

	Params::FortLobbyBeaconClient_ServerSetCurrentCharacterXp Parms{};

	Parms.InUniqueId = std::move(InUniqueId);
	Parms.CurrentCharacterXp = CurrentCharacterXp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconClient.ServerSetGadget
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FUniqueNetIdRepl                 InUniqueId                                             (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           GadgetPersistentName                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortLobbyBeaconClient::ServerSetGadget(const struct FUniqueNetIdRepl& InUniqueId, int32 Param_Index, const class FString& GadgetPersistentName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconClient", "ServerSetGadget");

	Params::FortLobbyBeaconClient_ServerSetGadget Parms{};

	Parms.InUniqueId = std::move(InUniqueId);
	Parms.Param_Index = Param_Index;
	Parms.GadgetPersistentName = std::move(GadgetPersistentName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconClient.ServerSetHeroId
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FUniqueNetIdRepl                 InUniqueId                                             (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InHeroId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortLobbyBeaconClient::ServerSetHeroId(const struct FUniqueNetIdRepl& InUniqueId, const class FString& InHeroId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconClient", "ServerSetHeroId");

	Params::FortLobbyBeaconClient_ServerSetHeroId Parms{};

	Parms.InUniqueId = std::move(InUniqueId);
	Parms.InHeroId = std::move(InHeroId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconClient.ServerSetHeroSquadId
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FUniqueNetIdRepl                 InUniqueId                                             (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InHeroSquadId                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortLobbyBeaconClient::ServerSetHeroSquadId(const struct FUniqueNetIdRepl& InUniqueId, const class FName& InHeroSquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconClient", "ServerSetHeroSquadId");

	Params::FortLobbyBeaconClient_ServerSetHeroSquadId Parms{};

	Parms.InUniqueId = std::move(InUniqueId);
	Parms.InHeroSquadId = InHeroSquadId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconClient.ServerSetHeroType
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FUniqueNetIdRepl                 InUniqueId                                             (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortHeroType*                    InHeroType                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortLobbyBeaconClient::ServerSetHeroType(const struct FUniqueNetIdRepl& InUniqueId, const class UFortHeroType* InHeroType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconClient", "ServerSetHeroType");

	Params::FortLobbyBeaconClient_ServerSetHeroType Parms{};

	Parms.InUniqueId = std::move(InUniqueId);
	Parms.InHeroType = InHeroType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconClient.ServerSetMatchmakingLevel
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FUniqueNetIdRepl                 InUniqueId                                             (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MatchmakingLevel                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortLobbyBeaconClient::ServerSetMatchmakingLevel(const struct FUniqueNetIdRepl& InUniqueId, const int32 MatchmakingLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconClient", "ServerSetMatchmakingLevel");

	Params::FortLobbyBeaconClient_ServerSetMatchmakingLevel Parms{};

	Parms.InUniqueId = std::move(InUniqueId);
	Parms.MatchmakingLevel = MatchmakingLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconClient.ServerTeamChatRoomReady
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                           ChatRoomId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortLobbyBeaconClient::ServerTeamChatRoomReady(const class FString& ChatRoomId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconClient", "ServerTeamChatRoomReady");

	Params::FortLobbyBeaconClient_ServerTeamChatRoomReady Parms{};

	Parms.ChatRoomId = std::move(ChatRoomId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBadgeItemDefinition.GetBadgeScoreCategory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EStatCategory                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EStatCategory UFortBadgeItemDefinition::GetBadgeScoreCategory() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBadgeItemDefinition", "GetBadgeScoreCategory");

	Params::FortBadgeItemDefinition_GetBadgeScoreCategory Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBadgeItemDefinition.GetBadgeScoreThreshold
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortBadgeItemDefinition::GetBadgeScoreThreshold() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBadgeItemDefinition", "GetBadgeScoreThreshold");

	Params::FortBadgeItemDefinition_GetBadgeScoreThreshold Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBadgeItemDefinition.GetMissionPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortBadgeItemDefinition::GetMissionPoints() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBadgeItemDefinition", "GetMissionPoints");

	Params::FortBadgeItemDefinition_GetMissionPoints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBadgeItemDefinition.GetScoreAwarded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerController*                PlayerController                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortBadgeItemDefinition::GetScoreAwarded(const class APlayerController* PlayerController) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBadgeItemDefinition", "GetScoreAwarded");

	Params::FortBadgeItemDefinition_GetScoreAwarded Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.GetBannerColor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFortHomebaseBannerColorItem*     BannerColor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHomebaseBannerColor             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHomebaseBannerColor UFortBannerUtilities::GetBannerColor(class UFortHomebaseBannerColorItem* BannerColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetBannerColor");

	Params::FortBannerUtilities_GetBannerColor Parms{};

	Parms.BannerColor = BannerColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.GetBannerColorCategoryName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             CategoryRowName                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortBannerUtilities::GetBannerColorCategoryName(const class FName& CategoryRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetBannerColorCategoryName");

	Params::FortBannerUtilities_GetBannerColorCategoryName Parms{};

	Parms.CategoryRowName = CategoryRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.GetBannerColorCategoryRowName
// (Final, RequiredAPI, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             BannerColorRowName                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortBannerUtilities::GetBannerColorCategoryRowName(const class FName& BannerColorRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetBannerColorCategoryRowName");

	Params::FortBannerUtilities_GetBannerColorCategoryRowName Parms{};

	Parms.BannerColorRowName = BannerColorRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.GetBannerColorFromRowName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             BannerColorRowName                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHomebaseBannerColor             ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FHomebaseBannerColor UFortBannerUtilities::GetBannerColorFromRowName(const class FName& BannerColorRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetBannerColorFromRowName");

	Params::FortBannerUtilities_GetBannerColorFromRowName Parms{};

	Parms.BannerColorRowName = BannerColorRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.GetBannerColorItemFromRowName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BannerColorRowName                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortHomebaseBannerColorItem*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortHomebaseBannerColorItem* UFortBannerUtilities::GetBannerColorItemFromRowName(class AFortPlayerController* FortPC, const class FName& BannerColorRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetBannerColorItemFromRowName");

	Params::FortBannerUtilities_GetBannerColorItemFromRowName Parms{};

	Parms.FortPC = FortPC;
	Parms.BannerColorRowName = BannerColorRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.GetBannerColorPrimaryColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UFortHomebaseBannerColorItem*     BannerColor                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UFortBannerUtilities::GetBannerColorPrimaryColor(const class UFortHomebaseBannerColorItem* BannerColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetBannerColorPrimaryColor");

	Params::FortBannerUtilities_GetBannerColorPrimaryColor Parms{};

	Parms.BannerColor = BannerColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.GetBannerColorPrimaryColorFromRowName
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             BannerColorRowName                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UFortBannerUtilities::GetBannerColorPrimaryColorFromRowName(const class FName& BannerColorRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetBannerColorPrimaryColorFromRowName");

	Params::FortBannerUtilities_GetBannerColorPrimaryColorFromRowName Parms{};

	Parms.BannerColorRowName = BannerColorRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.GetBannerColorSecondaryColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UFortHomebaseBannerColorItem*     BannerColor                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UFortBannerUtilities::GetBannerColorSecondaryColor(const class UFortHomebaseBannerColorItem* BannerColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetBannerColorSecondaryColor");

	Params::FortBannerUtilities_GetBannerColorSecondaryColor Parms{};

	Parms.BannerColor = BannerColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.GetBannerColorSecondaryColorFromRowName
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class FName                             BannerColorRowName                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UFortBannerUtilities::GetBannerColorSecondaryColorFromRowName(const class FName& BannerColorRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetBannerColorSecondaryColorFromRowName");

	Params::FortBannerUtilities_GetBannerColorSecondaryColorFromRowName Parms{};

	Parms.BannerColorRowName = BannerColorRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.GetBannerColorsForCategory
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CategoryRowName                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortAccountItem*>         BannerColors                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortBannerUtilities::GetBannerColorsForCategory(class AFortPlayerController* FortPC, const class FName& CategoryRowName, TArray<class UFortAccountItem*>* BannerColors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetBannerColorsForCategory");

	Params::FortBannerUtilities_GetBannerColorsForCategory Parms{};

	Parms.FortPC = FortPC;
	Parms.CategoryRowName = CategoryRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BannerColors != nullptr)
		*BannerColors = std::move(Parms.BannerColors);
}


// Function FortniteGame.FortBannerUtilities.GetBannerIconCategoryName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             CategoryRowName                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortBannerUtilities::GetBannerIconCategoryName(const class FName& CategoryRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetBannerIconCategoryName");

	Params::FortBannerUtilities_GetBannerIconCategoryName Parms{};

	Parms.CategoryRowName = CategoryRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.GetBannerIconCategoryRowName
// (Final, RequiredAPI, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             BannerIconRowName                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortBannerUtilities::GetBannerIconCategoryRowName(const class FName& BannerIconRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetBannerIconCategoryRowName");

	Params::FortBannerUtilities_GetBannerIconCategoryRowName Parms{};

	Parms.BannerIconRowName = BannerIconRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.GetBannerIconItemFromRowName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BannerIconRowName                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortHomebaseBannerIconItem*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortHomebaseBannerIconItem* UFortBannerUtilities::GetBannerIconItemFromRowName(class AFortPlayerController* FortPC, const class FName& BannerIconRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetBannerIconItemFromRowName");

	Params::FortBannerUtilities_GetBannerIconItemFromRowName Parms{};

	Parms.FortPC = FortPC;
	Parms.BannerIconRowName = BannerIconRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.GetBannerIconsForCategory
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             CategoryRowName                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortAccountItem*>         BannerIcons                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortBannerUtilities::GetBannerIconsForCategory(class AFortPlayerController* FortPC, const class FName& CategoryRowName, TArray<class UFortAccountItem*>* BannerIcons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetBannerIconsForCategory");

	Params::FortBannerUtilities_GetBannerIconsForCategory Parms{};

	Parms.FortPC = FortPC;
	Parms.CategoryRowName = CategoryRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BannerIcons != nullptr)
		*BannerIcons = std::move(Parms.BannerIcons);
}


// Function FortniteGame.FortBannerUtilities.GetBannerLargeIconAsset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFortHomebaseBannerIconItem*      BannerIcon                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UFortBannerUtilities::GetBannerLargeIconAsset(class UFortHomebaseBannerIconItem* BannerIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetBannerLargeIconAsset");

	Params::FortBannerUtilities_GetBannerLargeIconAsset Parms{};

	Parms.BannerIcon = BannerIcon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.GetBannerLargeIconAssetFromRowName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             BannerIconRowName                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UFortBannerUtilities::GetBannerLargeIconAssetFromRowName(const class FName& BannerIconRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetBannerLargeIconAssetFromRowName");

	Params::FortBannerUtilities_GetBannerLargeIconAssetFromRowName Parms{};

	Parms.BannerIconRowName = BannerIconRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.GetBannerSmallIconAsset
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFortHomebaseBannerIconItem*      BannerIcon                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UFortBannerUtilities::GetBannerSmallIconAsset(class UFortHomebaseBannerIconItem* BannerIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetBannerSmallIconAsset");

	Params::FortBannerUtilities_GetBannerSmallIconAsset Parms{};

	Parms.BannerIcon = BannerIcon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.GetBannerSmallIconAssetFromRowName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             BannerIconRowName                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class UTexture2D> UFortBannerUtilities::GetBannerSmallIconAssetFromRowName(const class FName& BannerIconRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetBannerSmallIconAssetFromRowName");

	Params::FortBannerUtilities_GetBannerSmallIconAssetFromRowName Parms{};

	Parms.BannerIconRowName = BannerIconRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.GetPrimaryColor
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FHomebaseBannerColor             BannerColor                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UFortBannerUtilities::GetPrimaryColor(const struct FHomebaseBannerColor& BannerColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetPrimaryColor");

	Params::FortBannerUtilities_GetPrimaryColor Parms{};

	Parms.BannerColor = std::move(BannerColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.GetRowNameForBannerColorItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFortHomebaseBannerColorItem*     BannerColor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortBannerUtilities::GetRowNameForBannerColorItem(class UFortHomebaseBannerColorItem* BannerColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetRowNameForBannerColorItem");

	Params::FortBannerUtilities_GetRowNameForBannerColorItem Parms{};

	Parms.BannerColor = BannerColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.GetRowNameForBannerIconItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFortHomebaseBannerIconItem*      BannerIcon                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortBannerUtilities::GetRowNameForBannerIconItem(class UFortHomebaseBannerIconItem* BannerIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetRowNameForBannerIconItem");

	Params::FortBannerUtilities_GetRowNameForBannerIconItem Parms{};

	Parms.BannerIcon = BannerIcon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.GetSecondaryColor
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FHomebaseBannerColor             BannerColor                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UFortBannerUtilities::GetSecondaryColor(const struct FHomebaseBannerColor& BannerColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "GetSecondaryColor");

	Params::FortBannerUtilities_GetSecondaryColor Parms{};

	Parms.BannerColor = std::move(BannerColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBannerUtilities.LoadAndGetBannerLargeIconFromRowName
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             BannerIconRowName                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* UFortBannerUtilities::LoadAndGetBannerLargeIconFromRowName(const class FName& BannerIconRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBannerUtilities", "LoadAndGetBannerLargeIconFromRowName");

	Params::FortBannerUtilities_LoadAndGetBannerLargeIconFromRowName Parms{};

	Parms.BannerIconRowName = BannerIconRowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBlueprintAnalytics.ConstructAnalyticsAttribute
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           AttributeName                                          (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           StringValue                                            (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            FGuidValue                                             (ConstParm, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntValue                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FloatValue                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    BoolValue                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortAnalyticsEventAttribute     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortAnalyticsEventAttribute UFortBlueprintAnalytics::ConstructAnalyticsAttribute(const class FString& AttributeName, const class FString& StringValue, const struct FGuid& FGuidValue, const int32 IntValue, const float FloatValue, const bool BoolValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBlueprintAnalytics", "ConstructAnalyticsAttribute");

	Params::FortBlueprintAnalytics_ConstructAnalyticsAttribute Parms{};

	Parms.AttributeName = std::move(AttributeName);
	Parms.StringValue = std::move(StringValue);
	Parms.FGuidValue = std::move(FGuidValue);
	Parms.IntValue = IntValue;
	Parms.FloatValue = FloatValue;
	Parms.BoolValue = BoolValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBlueprintAnalytics.FireAnalyticsEvent_Blueprint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortAnalyticsEventAttribute     Attribute                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortBlueprintAnalytics::FireAnalyticsEvent_Blueprint(const class UObject* SourceBp, const class FString& EventName, const struct FFortAnalyticsEventAttribute& Attribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBlueprintAnalytics", "FireAnalyticsEvent_Blueprint");

	Params::FortBlueprintAnalytics_FireAnalyticsEvent_Blueprint Parms{};

	Parms.SourceBp = SourceBp;
	Parms.EventName = std::move(EventName);
	Parms.Attribute = std::move(Attribute);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBlueprintAnalytics.FireAnalyticsEvent_BlueprintArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortAnalyticsEventAttribute>Attributes                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortBlueprintAnalytics::FireAnalyticsEvent_BlueprintArray(const class UObject* SourceBp, const class FString& EventName, const TArray<struct FFortAnalyticsEventAttribute>& Attributes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBlueprintAnalytics", "FireAnalyticsEvent_BlueprintArray");

	Params::FortBlueprintAnalytics_FireAnalyticsEvent_BlueprintArray Parms{};

	Parms.SourceBp = SourceBp;
	Parms.EventName = std::move(EventName);
	Parms.Attributes = std::move(Attributes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBlueprintAnalytics.FireEvent_BuildLimitProgressDecremented
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      Destroyer                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortMission*                     Mission                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortBuildingType                       BuildingType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BuildLimitProgress                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BuildLimit                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBlueprintAnalytics::FireEvent_BuildLimitProgressDecremented(const class UObject* SourceBp, class AController* Destroyer, class AFortMission* Mission, EFortBuildingType BuildingType, int32 BuildLimitProgress, int32 BuildLimit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBlueprintAnalytics", "FireEvent_BuildLimitProgressDecremented");

	Params::FortBlueprintAnalytics_FireEvent_BuildLimitProgressDecremented Parms{};

	Parms.SourceBp = SourceBp;
	Parms.Destroyer = Destroyer;
	Parms.Mission = Mission;
	Parms.BuildingType = BuildingType;
	Parms.BuildLimitProgress = BuildLimitProgress;
	Parms.BuildLimit = BuildLimit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBlueprintAnalytics.FireEvent_BuildLimitProgressIncremented
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortMission*                     Mission                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortBuildingType                       BuildingType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BuildLimitProgress                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   BuildLimit                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBlueprintAnalytics::FireEvent_BuildLimitProgressIncremented(const class UObject* SourceBp, class AFortPlayerController* FortPC, class AFortMission* Mission, EFortBuildingType BuildingType, int32 BuildLimitProgress, int32 BuildLimit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBlueprintAnalytics", "FireEvent_BuildLimitProgressIncremented");

	Params::FortBlueprintAnalytics_FireEvent_BuildLimitProgressIncremented Parms{};

	Parms.SourceBp = SourceBp;
	Parms.FortPC = FortPC;
	Parms.Mission = Mission;
	Parms.BuildingType = BuildingType;
	Parms.BuildLimitProgress = BuildLimitProgress;
	Parms.BuildLimit = BuildLimit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBlueprintAnalytics.FireEvent_MatchmakingClientEnded
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPartyStateIsWorldView                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPartyStateIsTheaterView                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPartyStateIsReturningToFrontEnd                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchmakingComplete                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLobbyStarted                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchmakingCancelled                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBlueprintAnalytics::FireEvent_MatchmakingClientEnded(const class UObject* SourceBp, bool bPartyStateIsWorldView, bool bPartyStateIsTheaterView, bool bPartyStateIsReturningToFrontEnd, bool bMatchmakingComplete, bool bLobbyStarted, bool bMatchmakingCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBlueprintAnalytics", "FireEvent_MatchmakingClientEnded");

	Params::FortBlueprintAnalytics_FireEvent_MatchmakingClientEnded Parms{};

	Parms.SourceBp = SourceBp;
	Parms.bPartyStateIsWorldView = bPartyStateIsWorldView;
	Parms.bPartyStateIsTheaterView = bPartyStateIsTheaterView;
	Parms.bPartyStateIsReturningToFrontEnd = bPartyStateIsReturningToFrontEnd;
	Parms.bMatchmakingComplete = bMatchmakingComplete;
	Parms.bLobbyStarted = bLobbyStarted;
	Parms.bMatchmakingCancelled = bMatchmakingCancelled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBlueprintAnalytics.FireEvent_MatchmakingClientStarted
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchmakingStarted                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClientPartyStateMatchmaking                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClientPartyStateChangedPostMatchmaking                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBlueprintAnalytics::FireEvent_MatchmakingClientStarted(const class UObject* SourceBp, bool bMatchmakingStarted, bool bClientPartyStateMatchmaking, bool bClientPartyStateChangedPostMatchmaking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBlueprintAnalytics", "FireEvent_MatchmakingClientStarted");

	Params::FortBlueprintAnalytics_FireEvent_MatchmakingClientStarted Parms{};

	Parms.SourceBp = SourceBp;
	Parms.bMatchmakingStarted = bMatchmakingStarted;
	Parms.bClientPartyStateMatchmaking = bClientPartyStateMatchmaking;
	Parms.bClientPartyStateChangedPostMatchmaking = bClientPartyStateChangedPostMatchmaking;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBlueprintAnalytics.FireEvent_MatchmakingClientStatusTextChanged
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchmakingIsLocal                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUserIsMatchmaking                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPartyIsPostMatchmaking                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsStormShieldMission                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           QueueState                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMatchmakingState                       MatchmakingState                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBlueprintAnalytics::FireEvent_MatchmakingClientStatusTextChanged(const class UObject* SourceBp, bool bMatchmakingIsLocal, bool bUserIsMatchmaking, bool bPartyIsPostMatchmaking, bool bIsStormShieldMission, const class FString& QueueState, EMatchmakingState MatchmakingState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBlueprintAnalytics", "FireEvent_MatchmakingClientStatusTextChanged");

	Params::FortBlueprintAnalytics_FireEvent_MatchmakingClientStatusTextChanged Parms{};

	Parms.SourceBp = SourceBp;
	Parms.bMatchmakingIsLocal = bMatchmakingIsLocal;
	Parms.bUserIsMatchmaking = bUserIsMatchmaking;
	Parms.bPartyIsPostMatchmaking = bPartyIsPostMatchmaking;
	Parms.bIsStormShieldMission = bIsStormShieldMission;
	Parms.QueueState = std::move(QueueState);
	Parms.MatchmakingState = MatchmakingState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBlueprintAnalytics.FireMissionAnalyticsEvent_Blueprint
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortAnalyticsEventAttribute     Attribute                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortBlueprintAnalytics::FireMissionAnalyticsEvent_Blueprint(const class UObject* SourceBp, const class FString& EventName, const struct FFortAnalyticsEventAttribute& Attribute)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBlueprintAnalytics", "FireMissionAnalyticsEvent_Blueprint");

	Params::FortBlueprintAnalytics_FireMissionAnalyticsEvent_Blueprint Parms{};

	Parms.SourceBp = SourceBp;
	Parms.EventName = std::move(EventName);
	Parms.Attribute = std::move(Attribute);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBlueprintAnalytics.FireMissionAnalyticsEvent_BlueprintArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortAnalyticsEventAttribute>Attributes                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortBlueprintAnalytics::FireMissionAnalyticsEvent_BlueprintArray(const class UObject* SourceBp, const class FString& EventName, const TArray<struct FFortAnalyticsEventAttribute>& Attributes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBlueprintAnalytics", "FireMissionAnalyticsEvent_BlueprintArray");

	Params::FortBlueprintAnalytics_FireMissionAnalyticsEvent_BlueprintArray Parms{};

	Parms.SourceBp = SourceBp;
	Parms.EventName = std::move(EventName);
	Parms.Attributes = std::move(Attributes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBlueprintAnalytics.FireQuestAnalyticsEvent_Blueprint
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortQuestItem*                   Quest                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBlueprintAnalytics::FireQuestAnalyticsEvent_Blueprint(const class UObject* SourceBp, const class FString& EventName, const class UFortQuestItem* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBlueprintAnalytics", "FireQuestAnalyticsEvent_Blueprint");

	Params::FortBlueprintAnalytics_FireQuestAnalyticsEvent_Blueprint Parms{};

	Parms.SourceBp = SourceBp;
	Parms.EventName = std::move(EventName);
	Parms.Quest = Quest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBlueprintAnalytics.FireQuestAnalyticsEvent_BlueprintArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           EventName                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortQuestItem*                   Quest                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortAnalyticsEventAttribute>Attributes                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortBlueprintAnalytics::FireQuestAnalyticsEvent_BlueprintArray(const class UObject* SourceBp, const class FString& EventName, const class UFortQuestItem* Quest, const TArray<struct FFortAnalyticsEventAttribute>& Attributes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortBlueprintAnalytics", "FireQuestAnalyticsEvent_BlueprintArray");

	Params::FortBlueprintAnalytics_FireQuestAnalyticsEvent_BlueprintArray Parms{};

	Parms.SourceBp = SourceBp;
	Parms.EventName = std::move(EventName);
	Parms.Quest = Quest;
	Parms.Attributes = std::move(Attributes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostAnalytics.FireAnalyticsEvent_OutpostAttackWaveCompleted
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           BuildingType                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumWavesCompleted                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Succeeded                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Direction                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DefenseLeg                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostAnalytics::FireAnalyticsEvent_OutpostAttackWaveCompleted(const class UObject* SourceBp, const class FString& BuildingType, const int32 NumWavesCompleted, const bool Succeeded, const class FString& Direction, const int32 DefenseLeg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostAnalytics", "FireAnalyticsEvent_OutpostAttackWaveCompleted");

	Params::FortOutpostAnalytics_FireAnalyticsEvent_OutpostAttackWaveCompleted Parms{};

	Parms.SourceBp = SourceBp;
	Parms.BuildingType = std::move(BuildingType);
	Parms.NumWavesCompleted = NumWavesCompleted;
	Parms.Succeeded = Succeeded;
	Parms.Direction = std::move(Direction);
	Parms.DefenseLeg = DefenseLeg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostAnalytics.FireAnalyticsEvent_OutpostAttackWaveStarted
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           BuildingType                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumWavesStarted                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Direction                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DefenseLeg                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostAnalytics::FireAnalyticsEvent_OutpostAttackWaveStarted(const class UObject* SourceBp, const class FString& BuildingType, const int32 NumWavesStarted, const class FString& Direction, const int32 DefenseLeg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostAnalytics", "FireAnalyticsEvent_OutpostAttackWaveStarted");

	Params::FortOutpostAnalytics_FireAnalyticsEvent_OutpostAttackWaveStarted Parms{};

	Parms.SourceBp = SourceBp;
	Parms.BuildingType = std::move(BuildingType);
	Parms.NumWavesStarted = NumWavesStarted;
	Parms.Direction = std::move(Direction);
	Parms.DefenseLeg = DefenseLeg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostAnalytics.FireAnalyticsEvent_OutpostBuildingActivated
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           BuildingType                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumMissionsCompleted                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostAnalytics::FireAnalyticsEvent_OutpostBuildingActivated(const class UObject* SourceBp, const class FString& BuildingType, const int32 NumMissionsCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostAnalytics", "FireAnalyticsEvent_OutpostBuildingActivated");

	Params::FortOutpostAnalytics_FireAnalyticsEvent_OutpostBuildingActivated Parms{};

	Parms.SourceBp = SourceBp;
	Parms.BuildingType = std::move(BuildingType);
	Parms.NumMissionsCompleted = NumMissionsCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostAnalytics.FireAnalyticsEvent_OutpostBuildingDefended
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           BuildingType                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumMissionsCompleted                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostAnalytics::FireAnalyticsEvent_OutpostBuildingDefended(const class UObject* SourceBp, const class FString& BuildingType, const int32 NumMissionsCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostAnalytics", "FireAnalyticsEvent_OutpostBuildingDefended");

	Params::FortOutpostAnalytics_FireAnalyticsEvent_OutpostBuildingDefended Parms{};

	Parms.SourceBp = SourceBp;
	Parms.BuildingType = std::move(BuildingType);
	Parms.NumMissionsCompleted = NumMissionsCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostAnalytics.FireAnalyticsEvent_OutpostDefenseEnd
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumWavesStarted                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumWavesTotal                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSucceeded                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAbandoned                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DefenseLeg                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostAnalytics::FireAnalyticsEvent_OutpostDefenseEnd(const class UObject* SourceBp, const int32 NumWavesStarted, const int32 NumWavesTotal, bool bSucceeded, bool bAbandoned, const int32 DefenseLeg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostAnalytics", "FireAnalyticsEvent_OutpostDefenseEnd");

	Params::FortOutpostAnalytics_FireAnalyticsEvent_OutpostDefenseEnd Parms{};

	Parms.SourceBp = SourceBp;
	Parms.NumWavesStarted = NumWavesStarted;
	Parms.NumWavesTotal = NumWavesTotal;
	Parms.bSucceeded = bSucceeded;
	Parms.bAbandoned = bAbandoned;
	Parms.DefenseLeg = DefenseLeg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostAnalytics.FireAnalyticsEvent_OutpostDefenseStart
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumWavesTotal                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DefenseLeg                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostAnalytics::FireAnalyticsEvent_OutpostDefenseStart(const class UObject* SourceBp, const int32 NumWavesTotal, const int32 DefenseLeg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostAnalytics", "FireAnalyticsEvent_OutpostDefenseStart");

	Params::FortOutpostAnalytics_FireAnalyticsEvent_OutpostDefenseStart Parms{};

	Parms.SourceBp = SourceBp;
	Parms.NumWavesTotal = NumWavesTotal;
	Parms.DefenseLeg = DefenseLeg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostAnalytics.FireAnalyticsEvent_OutpostLeaveOutpost
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           BuildingType                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumWavesStarted                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DefenseLeg                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostAnalytics::FireAnalyticsEvent_OutpostLeaveOutpost(const class UObject* SourceBp, const class FString& BuildingType, const int32 NumWavesStarted, const int32 DefenseLeg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostAnalytics", "FireAnalyticsEvent_OutpostLeaveOutpost");

	Params::FortOutpostAnalytics_FireAnalyticsEvent_OutpostLeaveOutpost Parms{};

	Parms.SourceBp = SourceBp;
	Parms.BuildingType = std::move(BuildingType);
	Parms.NumWavesStarted = NumWavesStarted;
	Parms.DefenseLeg = DefenseLeg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostAnalytics.FireAnalyticsEvent_OutpostLoaded
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DefenseLeg                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostAnalytics::FireAnalyticsEvent_OutpostLoaded(const class UObject* SourceBp, const int32 DefenseLeg)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostAnalytics", "FireAnalyticsEvent_OutpostLoaded");

	Params::FortOutpostAnalytics_FireAnalyticsEvent_OutpostLoaded Parms{};

	Parms.SourceBp = SourceBp;
	Parms.DefenseLeg = DefenseLeg;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostAnalytics.FireAnalyticsEvent_OutpostSupplyDropPickedUp
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          SourceBp                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortAnalyticsEventAttribute>Resourcees                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortOutpostAnalytics::FireAnalyticsEvent_OutpostSupplyDropPickedUp(const class UObject* SourceBp, const TArray<struct FFortAnalyticsEventAttribute>& Resourcees)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostAnalytics", "FireAnalyticsEvent_OutpostSupplyDropPickedUp");

	Params::FortOutpostAnalytics_FireAnalyticsEvent_OutpostSupplyDropPickedUp Parms{};

	Parms.SourceBp = SourceBp;
	Parms.Resourcees = std::move(Resourcees);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBluGloManager.GetBluGloItemDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItemDefinition*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItemDefinition* AFortBluGloManager::GetBluGloItemDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBluGloManager", "GetBluGloItemDefinition");

	Params::FortBluGloManager_GetBluGloItemDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHomebaseSet.OnRep_InventorySizeBonus
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_InventorySizeBonus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_InventorySizeBonus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_Keep_AmmoStash_Level
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_Keep_AmmoStash_Level()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_Keep_AmmoStash_Level");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_Keep_Armory_Level
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_Keep_Armory_Level()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_Keep_Armory_Level");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_Keep_Level
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_Keep_Level()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_Keep_Level");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_Keep_Medical_Level
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_Keep_Medical_Level()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_Keep_Medical_Level");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_Keep_PermaniteCap
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_Keep_PermaniteCap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_Keep_PermaniteCap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_Keep_Storage_Level
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_Keep_Storage_Level()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_Keep_Storage_Level");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_Keep_StructureCap
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_Keep_StructureCap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_Keep_StructureCap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_Keep_Workshop_Level
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_Keep_Workshop_Level()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_Keep_Workshop_Level");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_Manor_Level
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_Manor_Level()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_Manor_Level");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_Manor_StructureCap
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_Manor_StructureCap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_Manor_StructureCap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_max_capacity_collector_Token_collectionresource_nodegatetoken01
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_max_capacity_collector_Token_collectionresource_nodegatetoken01()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_max_capacity_collector_Token_collectionresource_nodegatetoken01");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_MaxLevelBonus_Alterations
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_MaxLevelBonus_Alterations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_MaxLevelBonus_Alterations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_MaxLevelBonus_Global
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_MaxLevelBonus_Global()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_MaxLevelBonus_Global");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_MaxLevelBonus_Personnel
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_MaxLevelBonus_Personnel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_MaxLevelBonus_Personnel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_MaxLevelBonus_Schematics
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_MaxLevelBonus_Schematics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_MaxLevelBonus_Schematics");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_MaxLevelBonus_Schematics_Melee
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_MaxLevelBonus_Schematics_Melee()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_MaxLevelBonus_Schematics_Melee");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_MaxLevelBonus_Schematics_Ranged
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_MaxLevelBonus_Schematics_Ranged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_MaxLevelBonus_Schematics_Ranged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_MaxLevelBonus_Schematics_Traps
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_MaxLevelBonus_Schematics_Traps()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_MaxLevelBonus_Schematics_Traps");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_rate_per_second_collector_Token_collectionresource_nodegatetoken01
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_rate_per_second_collector_Token_collectionresource_nodegatetoken01()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_rate_per_second_collector_Token_collectionresource_nodegatetoken01");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_ResearchPointMaxBonus
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_ResearchPointMaxBonus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_ResearchPointMaxBonus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_StorageInventorySizeBonus
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_StorageInventorySizeBonus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_StorageInventorySizeBonus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_SupplyDrop_Level
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_SupplyDrop_Level()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_SupplyDrop_Level");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_SupplyDrop_Magnitude
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_SupplyDrop_Magnitude()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_SupplyDrop_Magnitude");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHomebaseSet.OnRep_WorldInventorySizeBonus
// (Final, Native, Public)

void UFortHomebaseSet::OnRep_WorldInventorySizeBonus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseSet", "OnRep_WorldInventorySizeBonus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBotMissionLogic.ClearAllLocated
// (Final, Native, Public, BlueprintCallable)

void UFortBotMissionLogic::ClearAllLocated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBotMissionLogic", "ClearAllLocated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBotMissionLogic.MarkAllLocated
// (Final, Native, Public, BlueprintCallable)

void UFortBotMissionLogic::MarkAllLocated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBotMissionLogic", "MarkAllLocated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBotMissionLogic.MarkSingleLocator
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           LocatorActor                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBotMissionLogic::MarkSingleLocator(const class AActor* LocatorActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBotMissionLogic", "MarkSingleLocator");

	Params::FortBotMissionLogic_MarkSingleLocator Parms{};

	Parms.LocatorActor = LocatorActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBotMissionLogic.OnAssignedBehavior
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortAIController*                BotAI                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBotMissionLogic::OnAssignedBehavior(class AFortAIController* BotAI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBotMissionLogic", "OnAssignedBehavior");

	Params::FortBotMissionLogic_OnAssignedBehavior Parms{};

	Parms.BotAI = BotAI;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortBotMissionLogic.OnCanStartOtherMission
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortAIController*                BotAI                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortMission*                     OtherMission                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortBotMissionLogic::OnCanStartOtherMission(class AFortAIController* BotAI, class AFortMission* OtherMission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBotMissionLogic", "OnCanStartOtherMission");

	Params::FortBotMissionLogic_OnCanStartOtherMission Parms{};

	Parms.BotAI = BotAI;
	Parms.OtherMission = OtherMission;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBotMissionLogic.OnInteractWithMissionGoal
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortAIController*                BotAI                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           MissionGoal                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortBotMissionLogic::OnInteractWithMissionGoal(class AFortAIController* BotAI, class AActor* MissionGoal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBotMissionLogic", "OnInteractWithMissionGoal");

	Params::FortBotMissionLogic_OnInteractWithMissionGoal Parms{};

	Parms.BotAI = BotAI;
	Parms.MissionGoal = MissionGoal;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBotMissionLogic.OnMissionActivated
// (Event, Public, BlueprintEvent)

void UFortBotMissionLogic::OnMissionActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBotMissionLogic", "OnMissionActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortBotMissionLogic.OnMissionFinished
// (Event, Public, BlueprintEvent)

void UFortBotMissionLogic::OnMissionFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBotMissionLogic", "OnMissionFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortBotMissionLogic.OnMissionStarted
// (Event, Public, BlueprintEvent)

void UFortBotMissionLogic::OnMissionStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBotMissionLogic", "OnMissionStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortBotMissionLogic.ResetBehavior
// (Final, Native, Public, BlueprintCallable)

void UFortBotMissionLogic::ResetBehavior()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBotMissionLogic", "ResetBehavior");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBotMissionLogic.SetCurrentBehavior
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UBehaviorTree*                    Behavior                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBotMissionLogic::SetCurrentBehavior(class UBehaviorTree* Behavior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBotMissionLogic", "SetCurrentBehavior");

	Params::FortBotMissionLogic_SetCurrentBehavior Parms{};

	Parms.Behavior = Behavior;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBotMissionLogic.SetGoalsInvulnerable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bGodMode                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBotMissionLogic::SetGoalsInvulnerable(bool bGodMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBotMissionLogic", "SetGoalsInvulnerable");

	Params::FortBotMissionLogic_SetGoalsInvulnerable Parms{};

	Parms.bGodMode = bGodMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBotMissionLogic.SpawnStructureBuilder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           MissionGoal                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortBuildingInstructions*        BuildingInstructions                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortBotStructureBuilder*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortBotStructureBuilder* UFortBotMissionLogic::SpawnStructureBuilder(class AActor* MissionGoal, class UFortBuildingInstructions* BuildingInstructions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBotMissionLogic", "SpawnStructureBuilder");

	Params::FortBotMissionLogic_SpawnStructureBuilder Parms{};

	Parms.MissionGoal = MissionGoal;
	Parms.BuildingInstructions = BuildingInstructions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortBotStructureBuilder.BuildAll
// (Final, Native, Public, BlueprintCallable)

void AFortBotStructureBuilder::BuildAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBotStructureBuilder", "BuildAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBotStructureBuilder.OnBuildingDied
// (Final, Native, Protected, HasDefaults)
// Parameters:
// class AActor*                           DamagedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          HitLocation                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              FHitComponent                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Momentum                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortBotStructureBuilder::OnBuildingDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBotStructureBuilder", "OnBuildingDied");

	Params::FortBotStructureBuilder_OnBuildingDied Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.HitLocation = std::move(HitLocation);
	Parms.FHitComponent = FHitComponent;
	Parms.BoneName = BoneName;
	Parms.Momentum = std::move(Momentum);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortBotStructureBuilder.RunDeconstructor
// (Final, Native, Public, BlueprintCallable)

void AFortBotStructureBuilder::RunDeconstructor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBotStructureBuilder", "RunDeconstructor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameState.Client_InitiateEndOfDayRecap
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FEndOfDayRecap                   EndOfDayRecap                                          (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortGameState::Client_InitiateEndOfDayRecap(const struct FEndOfDayRecap& EndOfDayRecap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameState", "Client_InitiateEndOfDayRecap");

	Params::FortGameState_Client_InitiateEndOfDayRecap Parms{};

	Parms.EndOfDayRecap = std::move(EndOfDayRecap);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameState.DemoEndOfDayRecap
// (Final, Exec, Native, Public)

void AFortGameState::DemoEndOfDayRecap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameState", "DemoEndOfDayRecap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameState.OnRep_AnnouncementManager
// (Final, Native, Protected)

void AFortGameState::OnRep_AnnouncementManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameState", "OnRep_AnnouncementManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameState.OnRep_CurrentWUID
// (Native, Protected)

void AFortGameState::OnRep_CurrentWUID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameState", "OnRep_CurrentWUID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameState.OnRep_FeedbackManager
// (Final, Native, Protected)

void AFortGameState::OnRep_FeedbackManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameState", "OnRep_FeedbackManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameState.OnRep_GameplayState
// (Native, Protected)

void AFortGameState::OnRep_GameplayState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameState", "OnRep_GameplayState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameState.OnRep_GameSessionID
// (Native, Protected)

void AFortGameState::OnRep_GameSessionID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameState", "OnRep_GameSessionID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameState.OnRep_MissionManager
// (Final, Native, Protected)

void AFortGameState::OnRep_MissionManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameState", "OnRep_MissionManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameState.OnRep_MusicManagerSubclass
// (Final, Native, Protected)

void AFortGameState::OnRep_MusicManagerSubclass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameState", "OnRep_MusicManagerSubclass");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameState.OnRep_Teams
// (Final, Native, Public)

void AFortGameState::OnRep_Teams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameState", "OnRep_Teams");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameState.OnRep_TimeOfDayManager
// (Native, Protected)

void AFortGameState::OnRep_TimeOfDayManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameState", "OnRep_TimeOfDayManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameState.OnRep_WorldDaysElapsed
// (Final, Native, Protected)

void AFortGameState::OnRep_WorldDaysElapsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameState", "OnRep_WorldDaysElapsed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameState.OnRep_WorldManager
// (Native, Protected)

void AFortGameState::OnRep_WorldManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameState", "OnRep_WorldManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameState.GetGameplayState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortGameplayState                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortGameplayState AFortGameState::GetGameplayState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameState", "GetGameplayState");

	Params::FortGameState_GetGameplayState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameState.GetTimeOfDayManager
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortTimeOfDayManager*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortTimeOfDayManager* AFortGameState::GetTimeOfDayManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameState", "GetTimeOfDayManager");

	Params::FortGameState_GetTimeOfDayManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameState.GetWorldDaysElapsed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortGameState::GetWorldDaysElapsed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameState", "GetWorldDaysElapsed");

	Params::FortGameState_GetWorldDaysElapsed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateZone.ApplyPlayerAbilityRestriction
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFortGameStateZone::ApplyPlayerAbilityRestriction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "ApplyPlayerAbilityRestriction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.BeginGameplayVote
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFortGameStateZone::BeginGameplayVote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "BeginGameplayVote");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.EndGameplayVote
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   VoteResult                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameStateZone::EndGameplayVote(int32 VoteResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "EndGameplayVote");

	Params::FortGameStateZone_EndGameplayVote Parms{};

	Parms.VoteResult = VoteResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.GetUIMapManager
// (Native, Public, BlueprintCallable)
// Parameters:
// class AFortInGameMapManager*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortInGameMapManager* AFortGameStateZone::GetUIMapManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "GetUIMapManager");

	Params::FortGameStateZone_GetUIMapManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateZone.GloballyBlockAbilitiesWithTags
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            TagsToBlock                                            (Parm, NativeAccessSpecifierPublic)

void AFortGameStateZone::GloballyBlockAbilitiesWithTags(const struct FGameplayTagContainer& TagsToBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "GloballyBlockAbilitiesWithTags");

	Params::FortGameStateZone_GloballyBlockAbilitiesWithTags Parms{};

	Parms.TagsToBlock = std::move(TagsToBlock);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.GloballyUnblockAbilitiesWithTags
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            TagsToUnblock                                          (Parm, NativeAccessSpecifierPublic)

void AFortGameStateZone::GloballyUnblockAbilitiesWithTags(const struct FGameplayTagContainer& TagsToUnblock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "GloballyUnblockAbilitiesWithTags");

	Params::FortGameStateZone_GloballyUnblockAbilitiesWithTags Parms{};

	Parms.TagsToUnblock = std::move(TagsToUnblock);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.NotifyBeginGameplayVote
// (Net, NetReliable, Native, Event, NetMulticast, Protected)

void AFortGameStateZone::NotifyBeginGameplayVote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "NotifyBeginGameplayVote");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.NotifyEndGameplayVote
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// int32                                   VoteResult                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameStateZone::NotifyEndGameplayVote(int32 VoteResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "NotifyEndGameplayVote");

	Params::FortGameStateZone_NotifyEndGameplayVote Parms{};

	Parms.VoteResult = VoteResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.NotifySurvivorDead
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFortGameStateZone::NotifySurvivorDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "NotifySurvivorDead");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.NotifySurvivorRescued
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            Rescuer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SurvivorName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameStateZone::NotifySurvivorRescued(class AFortPlayerController* Rescuer, const class FString& SurvivorName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "NotifySurvivorRescued");

	Params::FortGameStateZone_NotifySurvivorRescued Parms{};

	Parms.Rescuer = Rescuer;
	Parms.SurvivorName = std::move(SurvivorName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.NotifySurvivorSpawned
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFortGameStateZone::NotifySurvivorSpawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "NotifySurvivorSpawned");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.OnDefenderDeployed
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AFortAIPawn*                      Defender                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameStateZone::OnDefenderDeployed(class AFortAIPawn* Defender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "OnDefenderDeployed");

	Params::FortGameStateZone_OnDefenderDeployed Parms{};

	Parms.Defender = Defender;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.OnDefenderRemoved
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AFortAIPawn*                      Defender                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameStateZone::OnDefenderRemoved(class AFortAIPawn* Defender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "OnDefenderRemoved");

	Params::FortGameStateZone_OnDefenderRemoved Parms{};

	Parms.Defender = Defender;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.OnRep_ActiveGameplayModifiers
// (Final, Native, Protected)

void AFortGameStateZone::OnRep_ActiveGameplayModifiers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "OnRep_ActiveGameplayModifiers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.OnRep_GameDifficulty
// (Native, Protected)

void AFortGameStateZone::OnRep_GameDifficulty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "OnRep_GameDifficulty");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.OnRep_GameplayVotes
// (Final, Native, Protected)

void AFortGameStateZone::OnRep_GameplayVotes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "OnRep_GameplayVotes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.OnRep_MissionAlertRewards
// (Final, Native, Protected)

void AFortGameStateZone::OnRep_MissionAlertRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "OnRep_MissionAlertRewards");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.OnRep_MissionGenerator
// (Final, Native, Protected)

void AFortGameStateZone::OnRep_MissionGenerator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "OnRep_MissionGenerator");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.OnRep_MissionRewards
// (Final, Native, Protected)

void AFortGameStateZone::OnRep_MissionRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "OnRep_MissionRewards");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.OnRep_NumSurvivorsRescued
// (Final, Native, Public)

void AFortGameStateZone::OnRep_NumSurvivorsRescued()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "OnRep_NumSurvivorsRescued");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.OnRep_PlayerBuildingSkillLevel
// (Native, Protected)

void AFortGameStateZone::OnRep_PlayerBuildingSkillLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "OnRep_PlayerBuildingSkillLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.OnRep_PlayerSharedTrapAttributes
// (Native, Protected)

void AFortGameStateZone::OnRep_PlayerSharedTrapAttributes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "OnRep_PlayerSharedTrapAttributes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.OnRep_PlayerStructuresChanged
// (Native, Public)

void AFortGameStateZone::OnRep_PlayerStructuresChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "OnRep_PlayerStructuresChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.OnRep_ReplicatedWorldTimeSeconds
// (Native, Protected)

void AFortGameStateZone::OnRep_ReplicatedWorldTimeSeconds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "OnRep_ReplicatedWorldTimeSeconds");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.OnRep_TheaterUniqueId
// (Final, Native, Protected)

void AFortGameStateZone::OnRep_TheaterUniqueId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "OnRep_TheaterUniqueId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.OnRep_ZoneDifficultyInfoRow
// (Final, Native, Protected)

void AFortGameStateZone::OnRep_ZoneDifficultyInfoRow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "OnRep_ZoneDifficultyInfoRow");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.OnWaveBasedModifiersAppliedMulticast
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// TArray<class UFortGameplayModifierItemDefinition*>ModifiersApplied                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortGameStateZone::OnWaveBasedModifiersAppliedMulticast(const TArray<class UFortGameplayModifierItemDefinition*>& ModifiersApplied)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "OnWaveBasedModifiersAppliedMulticast");

	Params::FortGameStateZone_OnWaveBasedModifiersAppliedMulticast Parms{};

	Parms.ModifiersApplied = std::move(ModifiersApplied);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.OnWaveEncounterStarted
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTieredWaveSetData               WaveData                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             LevelText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             WaveText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   WaveNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameStateZone::OnWaveEncounterStarted(const struct FTieredWaveSetData& WaveData, const class FText& LevelText, int32 Level, const class FText& WaveText, int32 WaveNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "OnWaveEncounterStarted");

	Params::FortGameStateZone_OnWaveEncounterStarted Parms{};

	Parms.WaveData = std::move(WaveData);
	Parms.LevelText = std::move(LevelText);
	Parms.Level = Level;
	Parms.WaveText = std::move(WaveText);
	Parms.WaveNum = WaveNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.OnWaveStart
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class FText                             LevelText                                              (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             WaveText                                               (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   WaveNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameStateZone::OnWaveStart(const class FText& LevelText, int32 Level, const class FText& WaveText, int32 WaveNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "OnWaveStart");

	Params::FortGameStateZone_OnWaveStart Parms{};

	Parms.LevelText = std::move(LevelText);
	Parms.Level = Level;
	Parms.WaveText = std::move(WaveText);
	Parms.WaveNum = WaveNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.RegisterGameplayModifier
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UFortGameplayModifierItemDefinition*InModifierToRegister                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Expiration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FActiveGameplayModifierHandle    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FActiveGameplayModifierHandle AFortGameStateZone::RegisterGameplayModifier(const class UFortGameplayModifierItemDefinition* InModifierToRegister, int32 Expiration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "RegisterGameplayModifier");

	Params::FortGameStateZone_RegisterGameplayModifier Parms{};

	Parms.InModifierToRegister = InModifierToRegister;
	Parms.Expiration = Expiration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateZone.RemovePlayerAbilityRestriction
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFortGameStateZone::RemovePlayerAbilityRestriction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "RemovePlayerAbilityRestriction");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.RunPerfMemCheatScript
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                                    bStartStatFiles                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameStateZone::RunPerfMemCheatScript(bool bStartStatFiles)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "RunPerfMemCheatScript");

	Params::FortGameStateZone_RunPerfMemCheatScript Parms{};

	Parms.bStartStatFiles = bStartStatFiles;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.ServerFireAIDirectorEvent
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EFortAIDirectorEvent                    Event                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          EventSource                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          EventTarget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EventMultiplier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameStateZone::ServerFireAIDirectorEvent(EFortAIDirectorEvent Event, class UObject* EventSource, class UObject* EventTarget, float EventMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "ServerFireAIDirectorEvent");

	Params::FortGameStateZone_ServerFireAIDirectorEvent Parms{};

	Parms.Event = Event;
	Parms.EventSource = EventSource;
	Parms.EventTarget = EventTarget;
	Parms.EventMultiplier = EventMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.ServerFireAIDirectorEventBatch
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<struct FFortAIDirectorEvent>     Payload                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortGameStateZone::ServerFireAIDirectorEventBatch(const TArray<struct FFortAIDirectorEvent>& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "ServerFireAIDirectorEventBatch");

	Params::FortGameStateZone_ServerFireAIDirectorEventBatch Parms{};

	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.SetBuildingAllowed
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bBuildingAtLayoutRequirementsAllowed                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBuildingWithoutLayoutRequirementsAllowed              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameStateZone::SetBuildingAllowed(bool bBuildingAtLayoutRequirementsAllowed, bool bBuildingWithoutLayoutRequirementsAllowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "SetBuildingAllowed");

	Params::FortGameStateZone_SetBuildingAllowed Parms{};

	Parms.bBuildingAtLayoutRequirementsAllowed = bBuildingAtLayoutRequirementsAllowed;
	Parms.bBuildingWithoutLayoutRequirementsAllowed = bBuildingWithoutLayoutRequirementsAllowed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.SubmitGameplayVote
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   VoteDecision                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameStateZone::SubmitGameplayVote(int32 VoteDecision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "SubmitGameplayVote");

	Params::FortGameStateZone_SubmitGameplayVote Parms{};

	Parms.VoteDecision = VoteDecision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.UnregisterGameplayModifier
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FActiveGameplayModifierHandle    InHandleToUnregister                                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameStateZone::UnregisterGameplayModifier(const struct FActiveGameplayModifierHandle& InHandleToUnregister)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "UnregisterGameplayModifier");

	Params::FortGameStateZone_UnregisterGameplayModifier Parms{};

	Parms.InHandleToUnregister = std::move(InHandleToUnregister);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateZone.CanSpawnDefender
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerStateZone*             PlayerCausingRemoval                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             RemoveFromDefenderSquadId                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortAIPawn*                      OutDefenderToBeRemoved                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortGameStateZone::CanSpawnDefender(class AFortPlayerStateZone* PlayerCausingRemoval, const class FName& RemoveFromDefenderSquadId, class AFortAIPawn** OutDefenderToBeRemoved) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "CanSpawnDefender");

	Params::FortGameStateZone_CanSpawnDefender Parms{};

	Parms.PlayerCausingRemoval = PlayerCausingRemoval;
	Parms.RemoveFromDefenderSquadId = RemoveFromDefenderSquadId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDefenderToBeRemoved != nullptr)
		*OutDefenderToBeRemoved = Parms.OutDefenderToBeRemoved;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateZone.GetActiveModifiers
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<class UFortGameplayModifierItemDefinition*>OutActiveModifiers                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortGameStateZone::GetActiveModifiers(TArray<class UFortGameplayModifierItemDefinition*>* OutActiveModifiers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "GetActiveModifiers");

	Params::FortGameStateZone_GetActiveModifiers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActiveModifiers != nullptr)
		*OutActiveModifiers = std::move(Parms.OutActiveModifiers);
}


// Function FortniteGame.FortGameStateZone.GetDefenderToRemove
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerStateZone*             PlayerCausingRemoval                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             RemoveFromDefenderSquadId                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SimulatedAdditionalDefenders                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDefenderRemovalCausedByPlayerJoin                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOutCanSpawnDefender                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortAIPawn*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortAIPawn* AFortGameStateZone::GetDefenderToRemove(class AFortPlayerStateZone* PlayerCausingRemoval, const class FName& RemoveFromDefenderSquadId, int32 SimulatedAdditionalDefenders, bool bDefenderRemovalCausedByPlayerJoin, bool* bOutCanSpawnDefender) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "GetDefenderToRemove");

	Params::FortGameStateZone_GetDefenderToRemove Parms{};

	Parms.PlayerCausingRemoval = PlayerCausingRemoval;
	Parms.RemoveFromDefenderSquadId = RemoveFromDefenderSquadId;
	Parms.SimulatedAdditionalDefenders = SimulatedAdditionalDefenders;
	Parms.bDefenderRemovalCausedByPlayerJoin = bDefenderRemovalCausedByPlayerJoin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bOutCanSpawnDefender != nullptr)
		*bOutCanSpawnDefender = Parms.bOutCanSpawnDefender;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateZone.GetGameDifficulty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortGameStateZone::GetGameDifficulty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "GetGameDifficulty");

	Params::FortGameStateZone_GetGameDifficulty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateZone.GetGameplayVote
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   VoteDecision                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 PlayerNetId                                            (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortGameStateZone::GetGameplayVote(int32 Param_Index, int32* VoteDecision, struct FUniqueNetIdRepl* PlayerNetId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "GetGameplayVote");

	Params::FortGameStateZone_GetGameplayVote Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (VoteDecision != nullptr)
		*VoteDecision = Parms.VoteDecision;

	if (PlayerNetId != nullptr)
		*PlayerNetId = std::move(Parms.PlayerNetId);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateZone.GetGameplayVotesForChoice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   VoteDecision                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FUniqueNetIdRepl>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FUniqueNetIdRepl> AFortGameStateZone::GetGameplayVotesForChoice(int32 VoteDecision) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "GetGameplayVotesForChoice");

	Params::FortGameStateZone_GetGameplayVotesForChoice Parms{};

	Parms.VoteDecision = VoteDecision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateZone.GetNumGameplayVotes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortGameStateZone::GetNumGameplayVotes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "GetNumGameplayVotes");

	Params::FortGameStateZone_GetNumGameplayVotes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateZone.GetNumSurvivorsDead
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortGameStateZone::GetNumSurvivorsDead() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "GetNumSurvivorsDead");

	Params::FortGameStateZone_GetNumSurvivorsDead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateZone.GetNumSurvivorsRescued
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortGameStateZone::GetNumSurvivorsRescued() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "GetNumSurvivorsRescued");

	Params::FortGameStateZone_GetNumSurvivorsRescued Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateZone.GetNumSurvivorsSpawned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortGameStateZone::GetNumSurvivorsSpawned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "GetNumSurvivorsSpawned");

	Params::FortGameStateZone_GetNumSurvivorsSpawned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateZone.GetTotalScore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EStatCategory                           ScoreCategory                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortGameStateZone::GetTotalScore(EStatCategory ScoreCategory) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "GetTotalScore");

	Params::FortGameStateZone_GetTotalScore Parms{};

	Parms.ScoreCategory = ScoreCategory;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateZone.HasActiveGameplayModifiers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortGameStateZone::HasActiveGameplayModifiers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "HasActiveGameplayModifiers");

	Params::FortGameStateZone_HasActiveGameplayModifiers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateZone.IsBuildingAtLayoutRequirementsAllowed
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortGameStateZone::IsBuildingAtLayoutRequirementsAllowed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "IsBuildingAtLayoutRequirementsAllowed");

	Params::FortGameStateZone_IsBuildingAtLayoutRequirementsAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateZone.IsBuildingWithoutLayoutRequirementsAllowed
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortGameStateZone::IsBuildingWithoutLayoutRequirementsAllowed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "IsBuildingWithoutLayoutRequirementsAllowed");

	Params::FortGameStateZone_IsBuildingWithoutLayoutRequirementsAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateZone.IsDefenderItemDeployed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        DefenderItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerStateZone*             RequestingPlayer                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortGameStateZone::IsDefenderItemDeployed(class UFortItem* DefenderItem, class AFortPlayerStateZone* RequestingPlayer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "IsDefenderItemDeployed");

	Params::FortGameStateZone_IsDefenderItemDeployed Parms{};

	Parms.DefenderItem = DefenderItem;
	Parms.RequestingPlayer = RequestingPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateZone.ShouldDisablePlayerTeleportingDuringMissionResults
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortGameStateZone::ShouldDisablePlayerTeleportingDuringMissionResults() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateZone", "ShouldDisablePlayerTeleportingDuringMissionResults");

	Params::FortGameStateZone_ShouldDisablePlayerTeleportingDuringMissionResults Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStatePvP.GetItemCollector
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ABuildingItemCollectorActor*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABuildingItemCollectorActor* AFortGameStatePvP::GetItemCollector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStatePvP", "GetItemCollector");

	Params::FortGameStatePvP_GetItemCollector Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStatePvP.OnRep_ItemCollector
// (Final, Native, Public)

void AFortGameStatePvP::OnRep_ItemCollector()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStatePvP", "OnRep_ItemCollector");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStatePvP.OnRep_MatchLevel
// (Final, Native, Private)

void AFortGameStatePvP::OnRep_MatchLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStatePvP", "OnRep_MatchLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStatePvP.OnRep_RoundTimeRemaining
// (Native, Protected)

void AFortGameStatePvP::OnRep_RoundTimeRemaining()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStatePvP", "OnRep_RoundTimeRemaining");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStatePvP.OnRep_StalemateTimeRemaining
// (Native, Protected)

void AFortGameStatePvP::OnRep_StalemateTimeRemaining()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStatePvP", "OnRep_StalemateTimeRemaining");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStatePvP.SetGameDifficultyRow
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDataTableRowHandle              GameDifficultyInfo                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortGameStatePvP::SetGameDifficultyRow(const struct FDataTableRowHandle& GameDifficultyInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStatePvP", "SetGameDifficultyRow");

	Params::FortGameStatePvP_SetGameDifficultyRow Parms{};

	Parms.GameDifficultyInfo = std::move(GameDifficultyInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStatePvP.SetMatchLevel
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InMatchLevel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameStatePvP::SetMatchLevel(int32 InMatchLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStatePvP", "SetMatchLevel");

	Params::FortGameStatePvP_SetMatchLevel Parms{};

	Parms.InMatchLevel = InMatchLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStatePvP.GetAverageHomebaseRating
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortGameStatePvP::GetAverageHomebaseRating() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStatePvP", "GetAverageHomebaseRating");

	Params::FortGameStatePvP_GetAverageHomebaseRating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStatePvP.GetFOBFinalizationTimeRemaining
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortGameStatePvP::GetFOBFinalizationTimeRemaining() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStatePvP", "GetFOBFinalizationTimeRemaining");

	Params::FortGameStatePvP_GetFOBFinalizationTimeRemaining Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStatePvP.GetMatchLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortGameStatePvP::GetMatchLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStatePvP", "GetMatchLevel");

	Params::FortGameStatePvP_GetMatchLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStatePvP.GetRoundTimeAccumulated
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortGameStatePvP::GetRoundTimeAccumulated() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStatePvP", "GetRoundTimeAccumulated");

	Params::FortGameStatePvP_GetRoundTimeAccumulated Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStatePvP.GetStartMatchDelayTimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortGameStatePvP::GetStartMatchDelayTimer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStatePvP", "GetStartMatchDelayTimer");

	Params::FortGameStatePvP_GetStartMatchDelayTimer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStatePvP.GetTotalHomebaseRating
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortGameStatePvP::GetTotalHomebaseRating() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStatePvP", "GetTotalHomebaseRating");

	Params::FortGameStatePvP_GetTotalHomebaseRating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStatePvP.IsExperimentalCraftingFeatureActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortGameStatePvP::IsExperimentalCraftingFeatureActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStatePvP", "IsExperimentalCraftingFeatureActive");

	Params::FortGameStatePvP_IsExperimentalCraftingFeatureActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortLauncherAthena.OnRepLaunchServerInfo
// (Final, Native, Public)

void AFortLauncherAthena::OnRepLaunchServerInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLauncherAthena", "OnRepLaunchServerInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLauncherAthena.TriggerLaunchEffects
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawnAthena*            Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortLauncherAthena::TriggerLaunchEffects(class AFortPlayerPawnAthena* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLauncherAthena", "TriggerLaunchEffects");

	Params::FortLauncherAthena_TriggerLaunchEffects Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortBuildingEditedParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class ABuildingActor*                   _OriginalBuilding                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABuildingActor*                   _NewBuilding                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortBuildingType                       _BuildingType                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            _Editor                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBuildingEditedParams::BreakParams(class ABuildingActor** _OriginalBuilding, class ABuildingActor** _NewBuilding, EFortBuildingType* _BuildingType, class AFortPlayerController** _Editor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBuildingEditedParams", "BreakParams");

	Params::FortBuildingEditedParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_OriginalBuilding != nullptr)
		*_OriginalBuilding = Parms._OriginalBuilding;

	if (_NewBuilding != nullptr)
		*_NewBuilding = Parms._NewBuilding;

	if (_BuildingType != nullptr)
		*_BuildingType = Parms._BuildingType;

	if (_Editor != nullptr)
		*_Editor = Parms._Editor;
}


// Function FortniteGame.FortBuildingEditedParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ABuildingActor*                   _OriginalBuilding                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABuildingActor*                   _NewBuilding                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortBuildingType                       _BuildingType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            _Editor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortBuildingEditedParams*        ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBuildingEditedParams::SetParams(class ABuildingActor* _OriginalBuilding, class ABuildingActor* _NewBuilding, EFortBuildingType _BuildingType, class AFortPlayerController* _Editor, class UFortBuildingEditedParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBuildingEditedParams", "SetParams");

	Params::FortBuildingEditedParams_SetParams Parms{};

	Parms._OriginalBuilding = _OriginalBuilding;
	Parms._NewBuilding = _NewBuilding;
	Parms._BuildingType = _BuildingType;
	Parms._Editor = _Editor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortLightningActor.CleanupLightning
// (Final, Native, Public, BlueprintCallable)

void AFortLightningActor::CleanupLightning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLightningActor", "CleanupLightning");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLightningActor.GenerateBoltLocations
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          StartLocation                                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          EndLocation                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinLength                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxLength                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RandomVectorContribution                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MinSizeDecayRate                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxSizeDecayRate                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FalloffMultiplier                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortLightningActor::GenerateBoltLocations(const struct FVector& StartLocation, const struct FVector& EndLocation, float MinLength, float MaxLength, float RandomVectorContribution, float MinSizeDecayRate, float MaxSizeDecayRate, float FalloffMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLightningActor", "GenerateBoltLocations");

	Params::FortLightningActor_GenerateBoltLocations Parms{};

	Parms.StartLocation = std::move(StartLocation);
	Parms.EndLocation = std::move(EndLocation);
	Parms.MinLength = MinLength;
	Parms.MaxLength = MaxLength;
	Parms.RandomVectorContribution = RandomVectorContribution;
	Parms.MinSizeDecayRate = MinSizeDecayRate;
	Parms.MaxSizeDecayRate = MaxSizeDecayRate;
	Parms.FalloffMultiplier = FalloffMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLightningActor.InitializeLightning
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InActorToNotify                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortLightningActor::InitializeLightning(class AActor* InActorToNotify)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLightningActor", "InitializeLightning");

	Params::FortLightningActor_InitializeLightning Parms{};

	Parms.InActorToNotify = InActorToNotify;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLightningActor.OnLightingCleanup
// (Event, Public, BlueprintEvent)

void AFortLightningActor::OnLightingCleanup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLightningActor", "OnLightingCleanup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortLightningActor.OnLightingInitialized
// (Event, Public, BlueprintEvent)

void AFortLightningActor::OnLightingInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLightningActor", "OnLightingInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortCameraBase.Exhibit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortExhibitActor*                TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortCameraBase::Exhibit(class AFortExhibitActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCameraBase", "Exhibit");

	Params::FortCameraBase_Exhibit Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCameraBase.OnActivated
// (Event, Public, BlueprintEvent)

void AFortCameraBase::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCameraBase", "OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortCameraBase.OnDeactivated
// (Event, Public, BlueprintEvent)

void AFortCameraBase::OnDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCameraBase", "OnDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortCameraBase.OnDragBegin
// (Event, Public, BlueprintEvent)

void AFortCameraBase::OnDragBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCameraBase", "OnDragBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortCameraBase.OnDragEnd
// (Event, Public, BlueprintEvent)

void AFortCameraBase::OnDragEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCameraBase", "OnDragEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortCardPackItem.GetChoices
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortAccountItemDefinition*>Choices                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortCardPackItem::GetChoices(TArray<class UFortAccountItemDefinition*>* Choices)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCardPackItem", "GetChoices");

	Params::FortCardPackItem_GetChoices Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Choices != nullptr)
		*Choices = std::move(Parms.Choices);
}


// Function FortniteGame.FortCardPackItem.CanStoreOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCardPackItem::CanStoreOpen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCardPackItem", "CanStoreOpen");

	Params::FortCardPackItem_CanStoreOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCardPackItem.IsChoicePack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCardPackItem::IsChoicePack() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCardPackItem", "IsChoicePack");

	Params::FortCardPackItem_IsChoicePack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCardPackItemDefinition.GetPackColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UFortCardPackItemDefinition::GetPackColor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCardPackItemDefinition", "GetPackColor");

	Params::FortCardPackItemDefinition_GetPackColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCardPackItemDefinition.GetPackImage
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture*                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture* UFortCardPackItemDefinition::GetPackImage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCardPackItemDefinition", "GetPackImage");

	Params::FortCardPackItemDefinition_GetPackImage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCardPackItemDefinition.GetPackPersonality
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortPackPersonality*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortPackPersonality* UFortCardPackItemDefinition::GetPackPersonality() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCardPackItemDefinition", "GetPackPersonality");

	Params::FortCardPackItemDefinition_GetPackPersonality Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCardPackItemDefinition.IsChoicePack
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCardPackItemDefinition::IsChoicePack() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCardPackItemDefinition", "IsChoicePack");

	Params::FortCardPackItemDefinition_IsChoicePack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCardPackItemDefinition.IsLlama
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCardPackItemDefinition::IsLlama() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCardPackItemDefinition", "IsLlama");

	Params::FortCardPackItemDefinition_IsLlama Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCarriedObject.OnRep_HolderInfo
// (Native, Protected, HasOutParams)
// Parameters:
// struct FCarriedObjectAttachmentInfo     PreviousInfo                                           (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortCarriedObject::OnRep_HolderInfo(struct FCarriedObjectAttachmentInfo* PreviousInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCarriedObject", "OnRep_HolderInfo");

	Params::FortCarriedObject_OnRep_HolderInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PreviousInfo != nullptr)
		*PreviousInfo = std::move(Parms.PreviousInfo);
}


// Function FortniteGame.FortCarriedObject.ReturnToSpawnPoint
// (Final, Native, Public, BlueprintCallable)

void AFortCarriedObject::ReturnToSpawnPoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCarriedObject", "ReturnToSpawnPoint");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCarriedObject.GetHoldingActor
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AFortCarriedObject::GetHoldingActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCarriedObject", "GetHoldingActor");

	Params::FortCarriedObject_GetHoldingActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCarriedObjectHolderInterface.OnCarriedObjectAttach
// (Native, Public)
// Parameters:
// class AActor*                           AttachedObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IFortCarriedObjectHolderInterface::OnCarriedObjectAttach(class AActor* AttachedObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCarriedObjectHolderInterface", "OnCarriedObjectAttach");

	Params::FortCarriedObjectHolderInterface_OnCarriedObjectAttach Parms{};

	Parms.AttachedObject = AttachedObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCarriedObjectHolderInterface.OnCarriedObjectDetach
// (Native, Public)
// Parameters:
// class AActor*                           DetachedObject                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IFortCarriedObjectHolderInterface::OnCarriedObjectDetach(class AActor* DetachedObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCarriedObjectHolderInterface", "OnCarriedObjectDetach");

	Params::FortCarriedObjectHolderInterface_OnCarriedObjectDetach Parms{};

	Parms.DetachedObject = DetachedObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCarriedObjectHolderInterface.CanHoldObject
// (Native, Public, Const)
// Parameters:
// class AActor*                           CarriableObject                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IFortCarriedObjectHolderInterface::CanHoldObject(class AActor* CarriableObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCarriedObjectHolderInterface", "CanHoldObject");

	Params::FortCarriedObjectHolderInterface_CanHoldObject Parms{};

	Parms.CarriableObject = CarriableObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCarriedObjectHolderInterface.GetAttachmentComponent
// (Native, Public, Const)
// Parameters:
// class FName                             SocketName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USceneComponent* IFortCarriedObjectHolderInterface::GetAttachmentComponent(class FName SocketName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCarriedObjectHolderInterface", "GetAttachmentComponent");

	Params::FortCarriedObjectHolderInterface_GetAttachmentComponent Parms{};

	Parms.SocketName = SocketName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCarriedObjectHolderInterface.GetCarriedObjectAttachmentInfo
// (Native, Public, HasOutParams, Const)
// Parameters:
// struct FCarriedObjectAttachmentInfo     OutAttachInfo                                          (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void IFortCarriedObjectHolderInterface::GetCarriedObjectAttachmentInfo(struct FCarriedObjectAttachmentInfo* OutAttachInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCarriedObjectHolderInterface", "GetCarriedObjectAttachmentInfo");

	Params::FortCarriedObjectHolderInterface_GetCarriedObjectAttachmentInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAttachInfo != nullptr)
		*OutAttachInfo = std::move(Parms.OutAttachInfo);
}


// Function FortniteGame.FortGameModeAthena.OnAircraftEnteredDropZone
// (Final, Native, Protected)

void AFortGameModeAthena::OnAircraftEnteredDropZone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameModeAthena", "OnAircraftEnteredDropZone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameModeAthena.OnAircraftExitedDropZone
// (Final, Native, Protected)

void AFortGameModeAthena::OnAircraftExitedDropZone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameModeAthena", "OnAircraftExitedDropZone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameModeAthena.OnAircraftFlightEnded
// (Final, Native, Protected)

void AFortGameModeAthena::OnAircraftFlightEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameModeAthena", "OnAircraftFlightEnded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameModeAthena.OnEndGameKickPlayers
// (Final, Native, Protected)

void AFortGameModeAthena::OnEndGameKickPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameModeAthena", "OnEndGameKickPlayers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameModeAthena.SafeZoneInsideChecks
// (Final, Native, Protected)

void AFortGameModeAthena::SafeZoneInsideChecks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameModeAthena", "SafeZoneInsideChecks");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameModeAthena.TrySupplyDrop
// (Final, Native, Protected)

void AFortGameModeAthena::TrySupplyDrop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameModeAthena", "TrySupplyDrop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQueryTwoPointSolver.AddNamedFloatParamA
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQueryTwoPointSolver::AddNamedFloatParamA(class FName ParamName, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQueryTwoPointSolver", "AddNamedFloatParamA");

	Params::FortQueryTwoPointSolver_AddNamedFloatParamA Parms{};

	Parms.ParamName = ParamName;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQueryTwoPointSolver.AddNamedFloatParamB
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ParamName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQueryTwoPointSolver::AddNamedFloatParamB(class FName ParamName, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQueryTwoPointSolver", "AddNamedFloatParamB");

	Params::FortQueryTwoPointSolver_AddNamedFloatParamB Parms{};

	Parms.ParamName = ParamName;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQueryTwoPointSolver.OnCustomRotationMode
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                          PointA                                                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Querier                                                (ConstParm, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQueryTwoPointSolver::OnCustomRotationMode(const struct FVector& PointA, const struct FVector& Querier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQueryTwoPointSolver", "OnCustomRotationMode");

	Params::FortQueryTwoPointSolver_OnCustomRotationMode Parms{};

	Parms.PointA = std::move(PointA);
	Parms.Querier = std::move(Querier);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortQueryTwoPointSolver.SetCustomRotationA
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                         Rotation                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UFortQueryTwoPointSolver::SetCustomRotationA(const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQueryTwoPointSolver", "SetCustomRotationA");

	Params::FortQueryTwoPointSolver_SetCustomRotationA Parms{};

	Parms.Rotation = std::move(Rotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQueryTwoPointSolver.SkipToNextPointA
// (Final, Native, Public, BlueprintCallable)

void UFortQueryTwoPointSolver::SkipToNextPointA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQueryTwoPointSolver", "SkipToNextPointA");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQueryTwoPointSolver.Start
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Querier                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQueryTwoPointSolver::Start(class UObject* Querier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQueryTwoPointSolver", "Start");

	Params::FortQueryTwoPointSolver_Start Parms{};

	Parms.Querier = Querier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQueryTwoPointSolver.GetRandomRotationOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UFortQueryTwoPointSolver::GetRandomRotationOffset() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQueryTwoPointSolver", "GetRandomRotationOffset");

	Params::FortQueryTwoPointSolver_GetRandomRotationOffset Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortClientAnnouncement_Basic.OnRep_BasicData
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFortClientAnnouncementData_BasicPreviousBasicData                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortClientAnnouncement_Basic::OnRep_BasicData(const struct FFortClientAnnouncementData_Basic& PreviousBasicData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_Basic", "OnRep_BasicData");

	Params::FortClientAnnouncement_Basic_OnRep_BasicData Parms{};

	Parms.PreviousBasicData = std::move(PreviousBasicData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncement_Basic.SetDetailText
// (BlueprintAuthorityOnly, Native, Public)
// Parameters:
// class FText                             DetailText                                             (Parm, NativeAccessSpecifierPublic)

void AFortClientAnnouncement_Basic::SetDetailText(const class FText& DetailText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_Basic", "SetDetailText");

	Params::FortClientAnnouncement_Basic_SetDetailText Parms{};

	Parms.DetailText = std::move(DetailText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncement_Basic.SetDisplayTime
// (BlueprintAuthorityOnly, Native, Public)
// Parameters:
// float                                   DisplayTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortClientAnnouncement_Basic::SetDisplayTime(float DisplayTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_Basic", "SetDisplayTime");

	Params::FortClientAnnouncement_Basic_SetDisplayTime Parms{};

	Parms.DisplayTime = DisplayTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncement_Basic.SetIcon
// (BlueprintAuthorityOnly, Native, Public, HasOutParams)
// Parameters:
// struct FSlateBrush                      Icon                                                   (Parm, OutParm, NativeAccessSpecifierPublic)

void AFortClientAnnouncement_Basic::SetIcon(struct FSlateBrush* Icon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_Basic", "SetIcon");

	Params::FortClientAnnouncement_Basic_SetIcon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Icon != nullptr)
		*Icon = std::move(Parms.Icon);
}


// Function FortniteGame.FortClientAnnouncement_Basic.SetTitleText
// (BlueprintAuthorityOnly, Native, Public)
// Parameters:
// class FText                             TitleText                                              (Parm, NativeAccessSpecifierPublic)

void AFortClientAnnouncement_Basic::SetTitleText(const class FText& TitleText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_Basic", "SetTitleText");

	Params::FortClientAnnouncement_Basic_SetTitleText Parms{};

	Parms.TitleText = std::move(TitleText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncement_Cinematic.OnPlayerSkippedCutscene
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void AFortClientAnnouncement_Cinematic::OnPlayerSkippedCutscene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_Cinematic", "OnPlayerSkippedCutscene");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.KeepItemContainer.GetContainerNameAndLevelKey
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName AKeepItemContainer::GetContainerNameAndLevelKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepItemContainer", "GetContainerNameAndLevelKey");

	Params::KeepItemContainer_GetContainerNameAndLevelKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.KeepItemContainer.InitializeContainer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InitUpgradeLevel                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKeepItemContainer::InitializeContainer(int32 InitUpgradeLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepItemContainer", "InitializeContainer");

	Params::KeepItemContainer_InitializeContainer Parms{};

	Parms.InitUpgradeLevel = InitUpgradeLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.KeepItemContainer.OnRep_HostUpgradeLevel
// (Final, Native, Public)

void AKeepItemContainer::OnRep_HostUpgradeLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepItemContainer", "OnRep_HostUpgradeLevel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.KeepItemContainer.OnRep_SearchedBy
// (Final, Native, Protected)

void AKeepItemContainer::OnRep_SearchedBy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepItemContainer", "OnRep_SearchedBy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.KeepItemContainer.ResetContainer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKeepItemContainer::ResetContainer(class AFortPlayerController* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepItemContainer", "ResetContainer");

	Params::KeepItemContainer_ResetContainer Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.KeepItemContainer.RestoreLoot
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AKeepItemContainer::RestoreLoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepItemContainer", "RestoreLoot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.KeepItemContainer.GetLootTierOverride
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AKeepItemContainer::GetLootTierOverride() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepItemContainer", "GetLootTierOverride");

	Params::KeepItemContainer_GetLootTierOverride Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortClientAnnouncement_ConversationCodeInterface.PlayConversation
// (BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IFortClientAnnouncement_ConversationCodeInterface::PlayConversation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_ConversationCodeInterface", "PlayConversation");

	Params::FortClientAnnouncement_ConversationCodeInterface_PlayConversation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortClientAnnouncement_ConversationCodeInterface.PlayConversationFromSentence
// (BlueprintCosmetic, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortConversationSentence        StartingSentence                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IFortClientAnnouncement_ConversationCodeInterface::PlayConversationFromSentence(const struct FFortConversationSentence& StartingSentence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_ConversationCodeInterface", "PlayConversationFromSentence");

	Params::FortClientAnnouncement_ConversationCodeInterface_PlayConversationFromSentence Parms{};

	Parms.StartingSentence = std::move(StartingSentence);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortClientAnnouncement_ConversationCodeInterface.PlayConversationFromSentenceIndex
// (BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   StartingSentenceIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IFortClientAnnouncement_ConversationCodeInterface::PlayConversationFromSentenceIndex(int32 StartingSentenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_ConversationCodeInterface", "PlayConversationFromSentenceIndex");

	Params::FortClientAnnouncement_ConversationCodeInterface_PlayConversationFromSentenceIndex Parms{};

	Parms.StartingSentenceIndex = StartingSentenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortClientAnnouncement_ConversationCodeInterface.StopConversation
// (BlueprintCosmetic, Native, Public, BlueprintCallable)

void IFortClientAnnouncement_ConversationCodeInterface::StopConversation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_ConversationCodeInterface", "StopConversation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncement_ConversationCodeInterface.IsPlayingConversation
// (BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bCheckAudioComponent                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IFortClientAnnouncement_ConversationCodeInterface::IsPlayingConversation(bool bCheckAudioComponent) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_ConversationCodeInterface", "IsPlayingConversation");

	Params::FortClientAnnouncement_ConversationCodeInterface_IsPlayingConversation Parms{};

	Parms.bCheckAudioComponent = bCheckAudioComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortClientAnnouncement_ConversationCodeInterface.IsPlayingSentence
// (BlueprintCosmetic, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortConversationSentence        Sentence                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IFortClientAnnouncement_ConversationCodeInterface::IsPlayingSentence(const struct FFortConversationSentence& Sentence) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_ConversationCodeInterface", "IsPlayingSentence");

	Params::FortClientAnnouncement_ConversationCodeInterface_IsPlayingSentence Parms{};

	Parms.Sentence = std::move(Sentence);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortClientAnnouncement_ConversationCodeInterface.IsPlayingSentenceIndex
// (BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SentenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IFortClientAnnouncement_ConversationCodeInterface::IsPlayingSentenceIndex(int32 SentenceIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_ConversationCodeInterface", "IsPlayingSentenceIndex");

	Params::FortClientAnnouncement_ConversationCodeInterface_IsPlayingSentenceIndex Parms{};

	Parms.SentenceIndex = SentenceIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortClientAnnouncement_ConversationInterface.OnConversationFinished
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFortConversationSentence        FinishingSentence                                      (Parm, NativeAccessSpecifierPublic)
// int32                                   FinishingSentenceSentenceIndex                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IFortClientAnnouncement_ConversationInterface::OnConversationFinished(const struct FFortConversationSentence& FinishingSentence, int32 FinishingSentenceSentenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_ConversationInterface", "OnConversationFinished");

	Params::FortClientAnnouncement_ConversationInterface_OnConversationFinished Parms{};

	Parms.FinishingSentence = std::move(FinishingSentence);
	Parms.FinishingSentenceSentenceIndex = FinishingSentenceSentenceIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortClientAnnouncement_ConversationInterface.OnConversationStarted
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFortConversationSentence        StartingSentence                                       (Parm, NativeAccessSpecifierPublic)
// int32                                   StartingSentenceIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IFortClientAnnouncement_ConversationInterface::OnConversationStarted(const struct FFortConversationSentence& StartingSentence, int32 StartingSentenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_ConversationInterface", "OnConversationStarted");

	Params::FortClientAnnouncement_ConversationInterface_OnConversationStarted Parms{};

	Parms.StartingSentence = std::move(StartingSentence);
	Parms.StartingSentenceIndex = StartingSentenceIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortClientAnnouncement_ConversationInterface.OnSentenceFinished
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortConversationSentence        Sentence                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   SentenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IFortClientAnnouncement_ConversationInterface::OnSentenceFinished(const struct FFortConversationSentence& Sentence, int32 SentenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_ConversationInterface", "OnSentenceFinished");

	Params::FortClientAnnouncement_ConversationInterface_OnSentenceFinished Parms{};

	Parms.Sentence = std::move(Sentence);
	Parms.SentenceIndex = SentenceIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortClientAnnouncement_ConversationInterface.OnSentenceStarted
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortConversationSentence        Sentence                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   SentenceIndex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IFortClientAnnouncement_ConversationInterface::OnSentenceStarted(const struct FFortConversationSentence& Sentence, int32 SentenceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_ConversationInterface", "OnSentenceStarted");

	Params::FortClientAnnouncement_ConversationInterface_OnSentenceStarted Parms{};

	Parms.Sentence = std::move(Sentence);
	Parms.SentenceIndex = SentenceIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortClientAnnouncement_ConversationInterface.ShouldPlaySentence
// (BlueprintCosmetic, Native, Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// struct FFortConversationSentence        NewSentence                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IFortClientAnnouncement_ConversationInterface::ShouldPlaySentence(const struct FFortConversationSentence& NewSentence) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_ConversationInterface", "ShouldPlaySentence");

	Params::FortClientAnnouncement_ConversationInterface_ShouldPlaySentence Parms{};

	Parms.NewSentence = std::move(NewSentence);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortClientAnnouncement_Tutorial.OnRep_TutorialData
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFortClientAnnouncementData_TutorialPreviousTutorialData                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortClientAnnouncement_Tutorial::OnRep_TutorialData(const struct FFortClientAnnouncementData_Tutorial& PreviousTutorialData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_Tutorial", "OnRep_TutorialData");

	Params::FortClientAnnouncement_Tutorial_OnRep_TutorialData Parms{};

	Parms.PreviousTutorialData = std::move(PreviousTutorialData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncement_TutorialConversation.OnRep_TutorialData
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FFortClientAnnouncementData_TutorialPreviousTutorialData                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortClientAnnouncement_TutorialConversation::OnRep_TutorialData(const struct FFortClientAnnouncementData_Tutorial& PreviousTutorialData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_TutorialConversation", "OnRep_TutorialData");

	Params::FortClientAnnouncement_TutorialConversation_OnRep_TutorialData Parms{};

	Parms.PreviousTutorialData = std::move(PreviousTutorialData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncement_TutorialInterface.HideTutorialWidget
// (Native, Public, BlueprintCallable)

void IFortClientAnnouncement_TutorialInterface::HideTutorialWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_TutorialInterface", "HideTutorialWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncement_TutorialInterface.SetButtonEnabled
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bButtonEnabled                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IFortClientAnnouncement_TutorialInterface::SetButtonEnabled(bool bButtonEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_TutorialInterface", "SetButtonEnabled");

	Params::FortClientAnnouncement_TutorialInterface_SetButtonEnabled Parms{};

	Parms.bButtonEnabled = bButtonEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncement_TutorialInterface.SetDetailText
// (Native, Public, BlueprintCallable)
// Parameters:
// class FText                             NameText                                               (Parm, NativeAccessSpecifierPublic)

void IFortClientAnnouncement_TutorialInterface::SetDetailText(const class FText& NameText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_TutorialInterface", "SetDetailText");

	Params::FortClientAnnouncement_TutorialInterface_SetDetailText Parms{};

	Parms.NameText = std::move(NameText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncement_TutorialInterface.SetHAlign
// (Native, Public, BlueprintCallable)
// Parameters:
// EHorizontalAlignment                    HAlign                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IFortClientAnnouncement_TutorialInterface::SetHAlign(EHorizontalAlignment HAlign)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_TutorialInterface", "SetHAlign");

	Params::FortClientAnnouncement_TutorialInterface_SetHAlign Parms{};

	Parms.HAlign = HAlign;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncement_TutorialInterface.SetLightboxDisableInputOnly
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bLightboxDisableInputOnly                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IFortClientAnnouncement_TutorialInterface::SetLightboxDisableInputOnly(bool bLightboxDisableInputOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_TutorialInterface", "SetLightboxDisableInputOnly");

	Params::FortClientAnnouncement_TutorialInterface_SetLightboxDisableInputOnly Parms{};

	Parms.bLightboxDisableInputOnly = bLightboxDisableInputOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncement_TutorialInterface.SetLightboxEnabled
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bLightboxEnabled                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IFortClientAnnouncement_TutorialInterface::SetLightboxEnabled(bool bLightboxEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_TutorialInterface", "SetLightboxEnabled");

	Params::FortClientAnnouncement_TutorialInterface_SetLightboxEnabled Parms{};

	Parms.bLightboxEnabled = bLightboxEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncement_TutorialInterface.SetNameText
// (Native, Public, BlueprintCallable)
// Parameters:
// class FText                             NameText                                               (Parm, NativeAccessSpecifierPublic)

void IFortClientAnnouncement_TutorialInterface::SetNameText(const class FText& NameText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_TutorialInterface", "SetNameText");

	Params::FortClientAnnouncement_TutorialInterface_SetNameText Parms{};

	Parms.NameText = std::move(NameText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncement_TutorialInterface.SetPadding
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FMargin                          Padding                                                (Parm, NoDestructor, NativeAccessSpecifierPublic)

void IFortClientAnnouncement_TutorialInterface::SetPadding(const struct FMargin& Padding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_TutorialInterface", "SetPadding");

	Params::FortClientAnnouncement_TutorialInterface_SetPadding Parms{};

	Parms.Padding = std::move(Padding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncement_TutorialInterface.SetSystemText
// (Native, Public, BlueprintCallable)
// Parameters:
// class FText                             SystemText                                             (Parm, NativeAccessSpecifierPublic)

void IFortClientAnnouncement_TutorialInterface::SetSystemText(const class FText& SystemText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_TutorialInterface", "SetSystemText");

	Params::FortClientAnnouncement_TutorialInterface_SetSystemText Parms{};

	Parms.SystemText = std::move(SystemText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncement_TutorialInterface.SetTitleText
// (Native, Public, BlueprintCallable)
// Parameters:
// class FText                             NameText                                               (Parm, NativeAccessSpecifierPublic)

void IFortClientAnnouncement_TutorialInterface::SetTitleText(const class FText& NameText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_TutorialInterface", "SetTitleText");

	Params::FortClientAnnouncement_TutorialInterface_SetTitleText Parms{};

	Parms.NameText = std::move(NameText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncement_TutorialInterface.SetVAlign
// (Native, Public, BlueprintCallable)
// Parameters:
// EVerticalAlignment                      VAlign                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IFortClientAnnouncement_TutorialInterface::SetVAlign(EVerticalAlignment VAlign)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_TutorialInterface", "SetVAlign");

	Params::FortClientAnnouncement_TutorialInterface_SetVAlign Parms{};

	Parms.VAlign = VAlign;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncement_TutorialInterface.WaitForContinue
// (Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void IFortClientAnnouncement_TutorialInterface::WaitForContinue(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncement_TutorialInterface", "WaitForContinue");

	Params::FortClientAnnouncement_TutorialInterface_WaitForContinue Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncementManager.OnRep_CancelledAnnouncements
// (Final, Native, Protected)

void AFortClientAnnouncementManager::OnRep_CancelledAnnouncements()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncementManager", "OnRep_CancelledAnnouncements");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortClientAnnouncementManager.OnRep_ClientAnnouncements
// (Final, Native, Protected, HasOutParams)
// Parameters:
// TArray<class AFortClientAnnouncement*>  PreviousClientAnnouncements                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortClientAnnouncementManager::OnRep_ClientAnnouncements(TArray<class AFortClientAnnouncement*>* PreviousClientAnnouncements)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientAnnouncementManager", "OnRep_ClientAnnouncements");

	Params::FortClientAnnouncementManager_OnRep_ClientAnnouncements Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PreviousClientAnnouncements != nullptr)
		*PreviousClientAnnouncements = std::move(Parms.PreviousClientAnnouncements);
}


// Function FortniteGame.FortEmojiPreviewComponent.PushPreviewEmoji
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaEmojiItemDefinition*       EmojiItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortEmojiPreviewComponent::PushPreviewEmoji(class UAthenaEmojiItemDefinition* EmojiItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortEmojiPreviewComponent", "PushPreviewEmoji");

	Params::FortEmojiPreviewComponent_PushPreviewEmoji Parms{};

	Parms.EmojiItem = EmojiItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.LevelTestingActorBase.ExtractSkeletalMesh
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class AActor>               BlueprintClass                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMesh*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMesh* ALevelTestingActorBase::ExtractSkeletalMesh(TSubclassOf<class AActor> BlueprintClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LevelTestingActorBase", "ExtractSkeletalMesh");

	Params::LevelTestingActorBase_ExtractSkeletalMesh Parms{};

	Parms.BlueprintClass = BlueprintClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.LevelTestingActorBase.ExtractSkeletalMeshScale
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// TSubclassOf<class AActor>               BlueprintClass                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector ALevelTestingActorBase::ExtractSkeletalMeshScale(TSubclassOf<class AActor> BlueprintClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("LevelTestingActorBase", "ExtractSkeletalMeshScale");

	Params::LevelTestingActorBase_ExtractSkeletalMeshScale Parms{};

	Parms.BlueprintClass = BlueprintClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortClientEventInterface.BlueprintCustomHandleClientEvent
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UObject*                          EventSource                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          EventFocus                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortClientEvent                 ClientEvent                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void IFortClientEventInterface::BlueprintCustomHandleClientEvent(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortClientEventInterface", "BlueprintCustomHandleClientEvent");

	Params::FortClientEventInterface_BlueprintCustomHandleClientEvent Parms{};

	Parms.EventSource = EventSource;
	Parms.EventFocus = EventFocus;
	Parms.ClientEvent = std::move(ClientEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortNotificationHandler.ClearNotification
// (BlueprintCosmetic, Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UFortNotificationHandler::ClearNotification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNotificationHandler", "ClearNotification");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortNotificationHandler.CreateWidget
// (BlueprintCosmetic, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                OwningPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UFortNotificationHandler::CreateWidget(class APlayerController* OwningPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNotificationHandler", "CreateWidget");

	Params::FortNotificationHandler_CreateWidget Parms{};

	Parms.OwningPlayer = OwningPlayer;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortNotificationHandler.NotificationShown
// (BlueprintCosmetic, Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UFortNotificationHandler::NotificationShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNotificationHandler", "NotificationShown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortEmotePreviewActor.GetAthenaSlottedCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class USkeletalMesh>     ReturnValue                                            (Parm, OutParm, ReturnParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSoftObjectPtr<class USkeletalMesh> AFortEmotePreviewActor::GetAthenaSlottedCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortEmotePreviewActor", "GetAthenaSlottedCharacter");

	Params::FortEmotePreviewActor_GetAthenaSlottedCharacter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortEmotePreviewActor.PreviewEmote
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortMontageItemDefinitionBase*   Emote                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortEmotePreviewActor::PreviewEmote(const class UFortMontageItemDefinitionBase* Emote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortEmotePreviewActor", "PreviewEmote");

	Params::FortEmotePreviewActor_PreviewEmote Parms{};

	Parms.Emote = Emote;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortCollectionBookData.GetPageIdsFromCategoryId
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             CategoryId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     PageIds                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortCollectionBookData::GetPageIdsFromCategoryId(class FName CategoryId, TArray<class FName>* PageIds) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookData", "GetPageIdsFromCategoryId");

	Params::FortCollectionBookData_GetPageIdsFromCategoryId Parms{};

	Parms.CategoryId = CategoryId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PageIds != nullptr)
		*PageIds = std::move(Parms.PageIds);
}


// Function FortniteGame.FortCollectionBookManager.ClaimReward
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortCollectionBookRewards       RewardToClaim                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   RewardIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCollectionBookManager::ClaimReward(const struct FFortCollectionBookRewards& RewardToClaim, int32 RewardIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookManager", "ClaimReward");

	Params::FortCollectionBookManager_ClaimReward Parms{};

	Parms.RewardToClaim = std::move(RewardToClaim);
	Parms.RewardIndex = RewardIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCollectionBookManager.PopulateCollectionBookRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FFortCollectionBookRewards>OutAvailableRewards                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortCollectionBookManager::PopulateCollectionBookRewards(TArray<struct FFortCollectionBookRewards>* OutAvailableRewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookManager", "PopulateCollectionBookRewards");

	Params::FortCollectionBookManager_PopulateCollectionBookRewards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAvailableRewards != nullptr)
		*OutAvailableRewards = std::move(Parms.OutAvailableRewards);
}


// Function FortniteGame.FortCollectionBookManager.SlotItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAccountItem*                 Item                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCollectionBookManager::SlotItem(const class UFortAccountItem* Item, class FName SlotId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookManager", "SlotItem");

	Params::FortCollectionBookManager_SlotItem Parms{};

	Parms.Item = Item;
	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCollectionBookManager.CalculateBookXp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortCollectionBookManager::CalculateBookXp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookManager", "CalculateBookXp");

	Params::FortCollectionBookManager_CalculateBookXp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCollectionBookManager.CalculatePageXp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             PageId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortCollectionBookManager::CalculatePageXp(class FName PageId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookManager", "CalculatePageXp");

	Params::FortCollectionBookManager_CalculatePageXp Parms{};

	Parms.PageId = PageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCollectionBookManager.CanSlotItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAccountItem*                 AccountItem                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortCollectionBookManager::CanSlotItem(const class UFortAccountItem* AccountItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookManager", "CanSlotItem");

	Params::FortCollectionBookManager_CanSlotItem Parms{};

	Parms.AccountItem = AccountItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCollectionBookManager.GetBookTotalXPToNextLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   CurrentLevel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortCollectionBookManager::GetBookTotalXPToNextLevel(int32 CurrentLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookManager", "GetBookTotalXPToNextLevel");

	Params::FortCollectionBookManager_GetBookTotalXPToNextLevel Parms{};

	Parms.CurrentLevel = CurrentLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCollectionBookManager.GetBookXPPercentToNextLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   CurrentLevel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewXP                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortCollectionBookManager::GetBookXPPercentToNextLevel(int32 CurrentLevel, int32 NewXP) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookManager", "GetBookXPPercentToNextLevel");

	Params::FortCollectionBookManager_GetBookXPPercentToNextLevel Parms{};

	Parms.CurrentLevel = CurrentLevel;
	Parms.NewXP = NewXP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCollectionBookManager.GetItemInSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             SlotId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortItem* UFortCollectionBookManager::GetItemInSlot(class FName SlotId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCollectionBookManager", "GetItemInSlot");

	Params::FortCollectionBookManager_GetItemInSlot Parms{};

	Parms.SlotId = SlotId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortExpeditionItemDefinition.GetAllRewards
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortCardPackItemDefinition*>OutRewards                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortExpeditionItemDefinition::GetAllRewards(TArray<class UFortCardPackItemDefinition*>* OutRewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionItemDefinition", "GetAllRewards");

	Params::FortExpeditionItemDefinition_GetAllRewards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRewards != nullptr)
		*OutRewards = std::move(Parms.OutRewards);
}


// Function FortniteGame.FortExpeditionItemDefinition.GetExpeditionCosts
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FItemAndCount>            OutExpeditionCosts                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortExpeditionItemDefinition::GetExpeditionCosts(TArray<struct FItemAndCount>* OutExpeditionCosts) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionItemDefinition", "GetExpeditionCosts");

	Params::FortExpeditionItemDefinition_GetExpeditionCosts Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutExpeditionCosts != nullptr)
		*OutExpeditionCosts = std::move(Parms.OutExpeditionCosts);
}


// Function FortniteGame.FortExpeditionItemDefinition.GetRequiredTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameplayTagContainer UFortExpeditionItemDefinition::GetRequiredTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionItemDefinition", "GetRequiredTags");

	Params::FortExpeditionItemDefinition_GetRequiredTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCompendiumBundle.GetAchievedCount
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   OutTotalAchievedCount                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutTotalRequiredCount                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCompendiumBundle::GetAchievedCount(int32* OutTotalAchievedCount, int32* OutTotalRequiredCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCompendiumBundle", "GetAchievedCount");

	Params::FortCompendiumBundle_GetAchievedCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTotalAchievedCount != nullptr)
		*OutTotalAchievedCount = Parms.OutTotalAchievedCount;

	if (OutTotalRequiredCount != nullptr)
		*OutTotalRequiredCount = Parms.OutTotalRequiredCount;
}


// Function FortniteGame.FortCompendiumBundle.GetCompendiumBundleDefinitionBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortCompendiumBundleDefinition*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortCompendiumBundleDefinition* UFortCompendiumBundle::GetCompendiumBundleDefinitionBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCompendiumBundle", "GetCompendiumBundleDefinitionBP");

	Params::FortCompendiumBundle_GetCompendiumBundleDefinitionBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCompendiumBundle.GetPercentageComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortCompendiumBundle::GetPercentageComplete() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCompendiumBundle", "GetPercentageComplete");

	Params::FortCompendiumBundle_GetPercentageComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGadgetItemDefinition.GetDecoItemDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortDecoItemDefinition*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortDecoItemDefinition* UFortGadgetItemDefinition::GetDecoItemDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGadgetItemDefinition", "GetDecoItemDefinition");

	Params::FortGadgetItemDefinition_GetDecoItemDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGadgetItemDefinition.GetGameplayAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UFortGameplayAbility> ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UFortGameplayAbility> UFortGadgetItemDefinition::GetGameplayAbility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGadgetItemDefinition", "GetGameplayAbility");

	Params::FortGadgetItemDefinition_GetGameplayAbility Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGadgetItemDefinition.GetLevelAttribute
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayAttribute               ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayAttribute UFortGadgetItemDefinition::GetLevelAttribute() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGadgetItemDefinition", "GetLevelAttribute");

	Params::FortGadgetItemDefinition_GetLevelAttribute Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGadgetItemDefinition.HasChargeUp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGadgetItemDefinition::HasChargeUp() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGadgetItemDefinition", "HasChargeUp");

	Params::FortGadgetItemDefinition_HasChargeUp Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCompendiumItem.GetAchievedCount
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   OutTotalAchievedCount                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutTotalRequiredCount                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortCompendiumItem::GetAchievedCount(int32* OutTotalAchievedCount, int32* OutTotalRequiredCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCompendiumItem", "GetAchievedCount");

	Params::FortCompendiumItem_GetAchievedCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTotalAchievedCount != nullptr)
		*OutTotalAchievedCount = Parms.OutTotalAchievedCount;

	if (OutTotalRequiredCount != nullptr)
		*OutTotalRequiredCount = Parms.OutTotalRequiredCount;
}


// Function FortniteGame.FortCompendiumItem.GetCompendiumDefinitionBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortCompendiumItemDefinition*    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortCompendiumItemDefinition* UFortCompendiumItem::GetCompendiumDefinitionBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCompendiumItem", "GetCompendiumDefinitionBP");

	Params::FortCompendiumItem_GetCompendiumDefinitionBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCompendiumItem.GetPercentageComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortCompendiumItem::GetPercentageComplete() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCompendiumItem", "GetPercentageComplete");

	Params::FortCompendiumItem_GetPercentageComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortFootstepAudioBank.GetFootstepAttenuationAsset
// (Final, Native, Public)
// Parameters:
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortFootstepAudioType                  StepType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundAttenuation*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USoundAttenuation* UFortFootstepAudioBank::GetFootstepAttenuationAsset(bool bIsLocal, EFortFootstepAudioType StepType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFootstepAudioBank", "GetFootstepAttenuationAsset");

	Params::FortFootstepAudioBank_GetFootstepAttenuationAsset Parms{};

	Parms.bIsLocal = bIsLocal;
	Parms.StepType = StepType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortFootstepAudioBank.GetFootstepSoundAsset
// (Final, Native, Public)
// Parameters:
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortFootstepAudioType                  StepType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortFootstepSurfaceType                SurfaceType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USoundBase* UFortFootstepAudioBank::GetFootstepSoundAsset(bool bIsLocal, EFortFootstepAudioType StepType, EFortFootstepSurfaceType SurfaceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFootstepAudioBank", "GetFootstepSoundAsset");

	Params::FortFootstepAudioBank_GetFootstepSoundAsset Parms{};

	Parms.bIsLocal = bIsLocal;
	Parms.StepType = StepType;
	Parms.SurfaceType = SurfaceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortFootstepAudioBank.GetFootstepVolumeMultiplier
// (Final, Native, Public)
// Parameters:
// bool                                    bIsLocal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyTeammateVolume                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortFootstepAudioType                  StepType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortFootstepAudioBank::GetFootstepVolumeMultiplier(bool bIsLocal, bool bApplyTeammateVolume, EFortFootstepAudioType StepType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFootstepAudioBank", "GetFootstepVolumeMultiplier");

	Params::FortFootstepAudioBank_GetFootstepVolumeMultiplier Parms{};

	Parms.bIsLocal = bIsLocal;
	Parms.bApplyTeammateVolume = bApplyTeammateVolume;
	Parms.StepType = StepType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortConstructorBASE.GetBuildingActorsInBase
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class ABuildingSMActor*>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ABuildingSMActor*> AFortConstructorBASE::GetBuildingActorsInBase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructorBASE", "GetBuildingActorsInBase");

	Params::FortConstructorBASE_GetBuildingActorsInBase Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortConstructorBASE.OnBaseCollisionTouched
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortConstructorBASE::OnBaseCollisionTouched(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructorBASE", "OnBaseCollisionTouched");

	Params::FortConstructorBASE_OnBaseCollisionTouched Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortConstructorBASE.OnBaseCollisionUnTouched
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortConstructorBASE::OnBaseCollisionUnTouched(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructorBASE", "OnBaseCollisionUnTouched");

	Params::FortConstructorBASE_OnBaseCollisionUnTouched Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortConstructorBASE.OnBasePawnDestroyed
// (Final, Native, Private)
// Parameters:
// class AFortPawn*                        Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortConstructorBASE::OnBasePawnDestroyed(class AFortPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructorBASE", "OnBasePawnDestroyed");

	Params::FortConstructorBASE_OnBasePawnDestroyed Parms{};

	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortConstructorBASE.OnBasePawnDied
// (Final, Native, Private)
// Parameters:
// class AFortPawn*                        Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortConstructorBASE::OnBasePawnDied(class AFortPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructorBASE", "OnBasePawnDied");

	Params::FortConstructorBASE_OnBasePawnDied Parms{};

	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortConstructorBASE.OnPawnAddedToBase
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AFortPawn*                        Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortConstructorBASE::OnPawnAddedToBase(class AFortPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructorBASE", "OnPawnAddedToBase");

	Params::FortConstructorBASE_OnPawnAddedToBase Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortConstructorBASE.OnPawnRemovedFromBase
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AFortPawn*                        Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortConstructorBASE::OnPawnRemovedFromBase(class AFortPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructorBASE", "OnPawnRemovedFromBase");

	Params::FortConstructorBASE_OnPawnRemovedFromBase Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortConstructorBASE.OnPlaced
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class UAbilitySystemComponent*          InstigatorAbilitySystemComponent                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortConstructorBASE::OnPlaced(class UAbilitySystemComponent* InstigatorAbilitySystemComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructorBASE", "OnPlaced");

	Params::FortConstructorBASE_OnPlaced Parms{};

	Parms.InstigatorAbilitySystemComponent = InstigatorAbilitySystemComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortConstructorBASE.StartBuildingActorVisuals
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class ABuildingSMActor*                 BuildingActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStaticMeshComponent*             EffectMeshComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortConstructorBASE::StartBuildingActorVisuals(class ABuildingSMActor* BuildingActor, class UStaticMeshComponent* EffectMeshComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructorBASE", "StartBuildingActorVisuals");

	Params::FortConstructorBASE_StartBuildingActorVisuals Parms{};

	Parms.BuildingActor = BuildingActor;
	Parms.EffectMeshComp = EffectMeshComp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortConstructorBASE.StopBuildingActorVisuals
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class ABuildingSMActor*                 BuildingActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStaticMeshComponent*             EffectMeshComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortConstructorBASE::StopBuildingActorVisuals(class ABuildingSMActor* BuildingActor, class UStaticMeshComponent* EffectMeshComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConstructorBASE", "StopBuildingActorVisuals");

	Params::FortConstructorBASE_StopBuildingActorVisuals Parms{};

	Parms.BuildingActor = BuildingActor;
	Parms.EffectMeshComp = EffectMeshComp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortConsumableItemDefinition.ConsumeItem
// (Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayEventData               EventData                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortConsumableItemDefinition::ConsumeItem(const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConsumableItemDefinition", "ConsumeItem");

	Params::FortConsumableItemDefinition_ConsumeItem Parms{};

	Parms.EventData = std::move(EventData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortConsumableItemDefinition.GetAnimPlayRate
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortConsumableItemDefinition::GetAnimPlayRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConsumableItemDefinition", "GetAnimPlayRate");

	Params::FortConsumableItemDefinition_GetAnimPlayRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortConsumableItemDefinition.GetHealthRestored
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ItemLevel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortConsumableItemDefinition::GetHealthRestored(int32 ItemLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConsumableItemDefinition", "GetHealthRestored");

	Params::FortConsumableItemDefinition_GetHealthRestored Parms{};

	Parms.ItemLevel = ItemLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortConsumableItemDefinition.GetUseAnimation
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimMontage* UFortConsumableItemDefinition::GetUseAnimation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortConsumableItemDefinition", "GetUseAnimation");

	Params::FortConsumableItemDefinition_GetUseAnimation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHealthBarComponent.OnRep_DisplayText
// (Final, Native, Protected)

void UFortHealthBarComponent::OnRep_DisplayText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHealthBarComponent", "OnRep_DisplayText");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHealthBarComponent.OnRep_IsVisible
// (Final, Native, Protected)

void UFortHealthBarComponent::OnRep_IsVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHealthBarComponent", "OnRep_IsVisible");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHealthBarComponent.SetHealthBarDisplayText
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             NewDisplayText                                         (Parm, NativeAccessSpecifierPublic)

void UFortHealthBarComponent::SetHealthBarDisplayText(const class FText& NewDisplayText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHealthBarComponent", "SetHealthBarDisplayText");

	Params::FortHealthBarComponent_SetHealthBarDisplayText Parms{};

	Parms.NewDisplayText = std::move(NewDisplayText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHealthBarComponent.SetHealthBarVisibility
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewVisibleState                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHealthBarComponent::SetHealthBarVisibility(bool bNewVisibleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHealthBarComponent", "SetHealthBarVisibility");

	Params::FortHealthBarComponent_SetHealthBarVisibility Parms{};

	Parms.bNewVisibleState = bNewVisibleState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHealthBarComponent.SetHealthBarWidgetVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHealthBarComponent::SetHealthBarWidgetVisibility(bool bIsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHealthBarComponent", "SetHealthBarWidgetVisibility");

	Params::FortHealthBarComponent_SetHealthBarWidgetVisibility Parms{};

	Parms.bIsVisible = bIsVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHealthBarComponent.GetHealthBarDisplayText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortHealthBarComponent::GetHealthBarDisplayText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHealthBarComponent", "GetHealthBarDisplayText");

	Params::FortHealthBarComponent_GetHealthBarDisplayText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortFeedbackManager.GetAnnouncerPawn
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn_FeedbackAnnouncer*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPawn_FeedbackAnnouncer* AFortFeedbackManager::GetAnnouncerPawn(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortFeedbackManager", "GetAnnouncerPawn");

	Params::FortFeedbackManager_GetAnnouncerPawn Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortFeedbackManager.GetFeedbackManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortFeedbackManager*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortFeedbackManager* AFortFeedbackManager::GetFeedbackManager(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortFeedbackManager", "GetFeedbackManager");

	Params::FortFeedbackManager_GetFeedbackManager Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortFeedbackManager.SuppressProceduralFeedback
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AController*>              ControllersToSuppress                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortFeedbackManager::SuppressProceduralFeedback(const TArray<class AController*>& ControllersToSuppress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFeedbackManager", "SuppressProceduralFeedback");

	Params::FortFeedbackManager_SuppressProceduralFeedback Parms{};

	Parms.ControllersToSuppress = std::move(ControllersToSuppress);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHero.GetDisplayName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortHero::GetDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHero", "GetDisplayName");

	Params::FortHero_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHero.GetHeroTypeBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortHeroType*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortHeroType* UFortHero::GetHeroTypeBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHero", "GetHeroTypeBP");

	Params::FortHero_GetHeroTypeBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHero.GetUnclampedLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortHero::GetUnclampedLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHero", "GetUnclampedLevel");

	Params::FortHero_GetUnclampedLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHero.IsLevelClamped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHero::IsLevelClamped() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHero", "IsLevelClamped");

	Params::FortHero_IsLevelClamped Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCrackEffect.OnBounceAnimationUpdate
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFortBounceData                  BounceData                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AFortCrackEffect::OnBounceAnimationUpdate(const struct FFortBounceData& BounceData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCrackEffect", "OnBounceAnimationUpdate");

	Params::FortCrackEffect_OnBounceAnimationUpdate Parms{};

	Parms.BounceData = std::move(BounceData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortCrackEffect.OnFadeOut
// (Event, Public, BlueprintEvent)

void AFortCrackEffect::OnFadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCrackEffect", "OnFadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortCrackEffect.OnHitCrack
// (Event, Public, BlueprintEvent)

void AFortCrackEffect::OnHitCrack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCrackEffect", "OnHitCrack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortCrackEffect.OnRep_HitNormal
// (Native, Public)

void AFortCrackEffect::OnRep_HitNormal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCrackEffect", "OnRep_HitNormal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCrackEffect.OnRep_PhysicalSurfaceType
// (Native, Public)

void AFortCrackEffect::OnRep_PhysicalSurfaceType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCrackEffect", "OnRep_PhysicalSurfaceType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCrackEffect.OnStartDirectionEffect
// (Event, Public, BlueprintEvent)

void AFortCrackEffect::OnStartDirectionEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCrackEffect", "OnStartDirectionEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortCrackEffect.HasStartingPosition
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortCrackEffect::HasStartingPosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCrackEffect", "HasStartingPosition");

	Params::FortCrackEffect_HasStartingPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortFrontEndCameraManager.SetCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFrontEndCamera                         NewCamera                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortFrontEndCameraManager::SetCamera(EFrontEndCamera NewCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndCameraManager", "SetCamera");

	Params::FortFrontEndCameraManager_SetCamera Parms{};

	Parms.NewCamera = NewCamera;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortFrontEndCameraManager.GetCamera
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFrontEndCamera                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFrontEndCamera AFortFrontEndCameraManager::GetCamera() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndCameraManager", "GetCamera");

	Params::FortFrontEndCameraManager_GetCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortFrontEndCameraManager.GetCameraActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortCameraBase*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortCameraBase* AFortFrontEndCameraManager::GetCameraActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFrontEndCameraManager", "GetCameraActor");

	Params::FortFrontEndCameraManager_GetCameraActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortCustomizableAbilityDecoTool.BPOnEquip
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortWeapon*                      OldWeapon                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortCustomizableAbilityDecoTool::BPOnEquip(class AFortWeapon* OldWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCustomizableAbilityDecoTool", "BPOnEquip");

	Params::FortCustomizableAbilityDecoTool_BPOnEquip Parms{};

	Parms.OldWeapon = OldWeapon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortCustomizableAbilityDecoTool.BPOnSetDecoObjectPreview
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortDecoHelper*                  FortDecoHelper                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortCustomizableAbilityDecoTool::BPOnSetDecoObjectPreview(class AFortDecoHelper* FortDecoHelper)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCustomizableAbilityDecoTool", "BPOnSetDecoObjectPreview");

	Params::FortCustomizableAbilityDecoTool_BPOnSetDecoObjectPreview Parms{};

	Parms.FortDecoHelper = FortDecoHelper;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortCustomizableAbilityDecoTool.BPOnUnEquip
// (Event, Public, BlueprintEvent)

void AFortCustomizableAbilityDecoTool::BPOnUnEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCustomizableAbilityDecoTool", "BPOnUnEquip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortCustomizableAbilityDecoTool.BPPressSecondaryFire
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AFortDecoHelper*                  FortDecoHelper                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortCustomizableAbilityDecoTool::BPPressSecondaryFire(class AFortDecoHelper* FortDecoHelper)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCustomizableAbilityDecoTool", "BPPressSecondaryFire");

	Params::FortCustomizableAbilityDecoTool_BPPressSecondaryFire Parms{};

	Parms.FortDecoHelper = FortDecoHelper;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCustomizableAbilityDecoTool.BPPressTrigger
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AFortDecoHelper*                  FortDecoHelper                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortCustomizableAbilityDecoTool::BPPressTrigger(class AFortDecoHelper* FortDecoHelper)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCustomizableAbilityDecoTool", "BPPressTrigger");

	Params::FortCustomizableAbilityDecoTool_BPPressTrigger Parms{};

	Parms.FortDecoHelper = FortDecoHelper;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCustomizableAbilityDecoTool.BPReleaseSecondaryFire
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AFortDecoHelper*                  FortDecoHelper                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortCustomizableAbilityDecoTool::BPReleaseSecondaryFire(class AFortDecoHelper* FortDecoHelper)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCustomizableAbilityDecoTool", "BPReleaseSecondaryFire");

	Params::FortCustomizableAbilityDecoTool_BPReleaseSecondaryFire Parms{};

	Parms.FortDecoHelper = FortDecoHelper;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCustomizableAbilityDecoTool.BPReleaseTrigger
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AFortDecoHelper*                  FortDecoHelper                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortCustomizableAbilityDecoTool::BPReleaseTrigger(class AFortDecoHelper* FortDecoHelper)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCustomizableAbilityDecoTool", "BPReleaseTrigger");

	Params::FortCustomizableAbilityDecoTool_BPReleaseTrigger Parms{};

	Parms.FortDecoHelper = FortDecoHelper;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCustomizableAbilityDecoTool.BPServerPressSecondaryFire
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void AFortCustomizableAbilityDecoTool::BPServerPressSecondaryFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCustomizableAbilityDecoTool", "BPServerPressSecondaryFire");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCustomizableAbilityDecoTool.BPServerReleaseSecondaryFire
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)

void AFortCustomizableAbilityDecoTool::BPServerReleaseSecondaryFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCustomizableAbilityDecoTool", "BPServerReleaseSecondaryFire");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCustomizableAbilityDecoTool.ServerPressSecondaryFire
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortCustomizableAbilityDecoTool::ServerPressSecondaryFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCustomizableAbilityDecoTool", "ServerPressSecondaryFire");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCustomizableAbilityDecoTool.ServerPressTrigger
// (BlueprintCosmetic, Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void AFortCustomizableAbilityDecoTool::ServerPressTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCustomizableAbilityDecoTool", "ServerPressTrigger");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCustomizableAbilityDecoTool.ServerReleaseSecondaryFire
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortCustomizableAbilityDecoTool::ServerReleaseSecondaryFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCustomizableAbilityDecoTool", "ServerReleaseSecondaryFire");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortCustomizableAbilityDecoTool.ServerReleaseTrigger
// (BlueprintCosmetic, Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)

void AFortCustomizableAbilityDecoTool::ServerReleaseTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortCustomizableAbilityDecoTool", "ServerReleaseTrigger");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameplayAbility.CalculateProjectileTrajectorySpline
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<struct FVector>                  OutSplinePoints                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  OutSplineTangents                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class AActor*                           Instigator                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InitialLocation                                        (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InitialVelocity                                        (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Gravity                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Friction                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Bounciness                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeStep                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TraceExtent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxBounces                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameplayAbility::CalculateProjectileTrajectorySpline(TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents, const class AActor* Instigator, const struct FVector& InitialLocation, const struct FVector& InitialVelocity, float Gravity, float Friction, float Bounciness, float TimeStep, float TraceExtent, int32 MaxBounces)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGameplayAbility", "CalculateProjectileTrajectorySpline");

	Params::FortGameplayAbility_CalculateProjectileTrajectorySpline Parms{};

	Parms.Instigator = Instigator;
	Parms.InitialLocation = std::move(InitialLocation);
	Parms.InitialVelocity = std::move(InitialVelocity);
	Parms.Gravity = Gravity;
	Parms.Friction = Friction;
	Parms.Bounciness = Bounciness;
	Parms.TimeStep = TimeStep;
	Parms.TraceExtent = TraceExtent;
	Parms.MaxBounces = MaxBounces;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSplinePoints != nullptr)
		*OutSplinePoints = std::move(Parms.OutSplinePoints);

	if (OutSplineTangents != nullptr)
		*OutSplineTangents = std::move(Parms.OutSplineTangents);
}


// Function FortniteGame.FortGameplayAbility.ApplyGameplayEffectContainer
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayAbilityTargetDataHandle TargetData                                             (Parm, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ApplicationTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GameplayEffectLevel                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const TArray<struct FActiveGameplayEffectHandle>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

const TArray<struct FActiveGameplayEffectHandle> UFortGameplayAbility::ApplyGameplayEffectContainer(const struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag, int32 GameplayEffectLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "ApplyGameplayEffectContainer");

	Params::FortGameplayAbility_ApplyGameplayEffectContainer Parms{};

	Parms.TargetData = std::move(TargetData);
	Parms.ApplicationTag = std::move(ApplicationTag);
	Parms.GameplayEffectLevel = GameplayEffectLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility.BP_GetGameplayEffectContainer
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     ApplicationTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortGameplayEffectContainer     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortGameplayEffectContainer UFortGameplayAbility::BP_GetGameplayEffectContainer(const struct FGameplayTag& ApplicationTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "BP_GetGameplayEffectContainer");

	Params::FortGameplayAbility_BP_GetGameplayEffectContainer Parms{};

	Parms.ApplicationTag = std::move(ApplicationTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility.ClearAIFocalPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bUseAttackingPriority                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameplayAbility::ClearAIFocalPoint(bool bUseAttackingPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "ClearAIFocalPoint");

	Params::FortGameplayAbility_ClearAIFocalPoint Parms{};

	Parms.bUseAttackingPriority = bUseAttackingPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameplayAbility.EquipAbilityWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortWeaponItemDefinition*        WeaponDefinition                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ItemLevel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameplayAbility::EquipAbilityWeapon(class UFortWeaponItemDefinition* WeaponDefinition, int32 ItemLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "EquipAbilityWeapon");

	Params::FortGameplayAbility_EquipAbilityWeapon Parms{};

	Parms.WeaponDefinition = WeaponDefinition;
	Parms.ItemLevel = ItemLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameplayAbility.GetAimLocationNearestPawn
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AFortPawn*                        Instigator                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UFortGameplayAbility::GetAimLocationNearestPawn(class AFortPawn* Instigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "GetAimLocationNearestPawn");

	Params::FortGameplayAbility_GetAimLocationNearestPawn Parms{};

	Parms.Instigator = Instigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility.K2_AbilityCompleted
// (Native, Public, BlueprintCallable)

void UFortGameplayAbility::K2_AbilityCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "K2_AbilityCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameplayAbility.K2_TriggerFromAnimation
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     ApplicationTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameplayAbility::K2_TriggerFromAnimation(const struct FGameplayTag& ApplicationTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "K2_TriggerFromAnimation");

	Params::FortGameplayAbility_K2_TriggerFromAnimation Parms{};

	Parms.ApplicationTag = std::move(ApplicationTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortGameplayAbility.MakeGameplayEffectContainerSpec
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     ApplicationTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GameplayEffectLevel                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortGameplayEffectContainerSpec ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortGameplayEffectContainerSpec UFortGameplayAbility::MakeGameplayEffectContainerSpec(const struct FGameplayTag& ApplicationTag, int32 GameplayEffectLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "MakeGameplayEffectContainerSpec");

	Params::FortGameplayAbility_MakeGameplayEffectContainerSpec Parms{};

	Parms.ApplicationTag = std::move(ApplicationTag);
	Parms.GameplayEffectLevel = GameplayEffectLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility.OnAbilityInputReleased
// (Event, Protected, BlueprintEvent)

void UFortGameplayAbility::OnAbilityInputReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "OnAbilityInputReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortGameplayAbility.SetAIFocalPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           FocusTarget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          FocalPoint                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUseAttackingPriority                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameplayAbility::SetAIFocalPoint(class AActor* FocusTarget, const struct FVector& FocalPoint, bool bUseAttackingPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "SetAIFocalPoint");

	Params::FortGameplayAbility_SetAIFocalPoint Parms{};

	Parms.FocusTarget = FocusTarget;
	Parms.FocalPoint = std::move(FocalPoint);
	Parms.bUseAttackingPriority = bUseAttackingPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameplayAbility.SetupPreviewImageOverride
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameplayAbility::SetupPreviewImageOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "SetupPreviewImageOverride");

	Params::FortGameplayAbility_SetupPreviewImageOverride Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility.ApplyAccuracyToTargetLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          SourceLocation                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          TargetLocation                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InDesiredThrowAngle                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UFortGameplayAbility::ApplyAccuracyToTargetLocation(const struct FVector& SourceLocation, const struct FVector& TargetLocation, float InDesiredThrowAngle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "ApplyAccuracyToTargetLocation");

	Params::FortGameplayAbility_ApplyAccuracyToTargetLocation Parms{};

	Parms.SourceLocation = std::move(SourceLocation);
	Parms.TargetLocation = std::move(TargetLocation);
	Parms.InDesiredThrowAngle = InDesiredThrowAngle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility.DoesTargetHaveProhibitedTagsForAI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           Target                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameplayAbility::DoesTargetHaveProhibitedTagsForAI(const class AActor* Target) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "DoesTargetHaveProhibitedTagsForAI");

	Params::FortGameplayAbility_DoesTargetHaveProhibitedTagsForAI Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility.DoesTargetHaveTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           Target                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            Tags                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameplayAbility::DoesTargetHaveTags(const class AActor* Target, const struct FGameplayTagContainer& Tags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "DoesTargetHaveTags");

	Params::FortGameplayAbility_DoesTargetHaveTags Parms{};

	Parms.Target = Target;
	Parms.Tags = std::move(Tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility.GetActivatingAbilityComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAbilitySystemComponent*      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAbilitySystemComponent* UFortGameplayAbility::GetActivatingAbilityComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "GetActivatingAbilityComponent");

	Params::FortGameplayAbility_GetActivatingAbilityComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility.GetActivatingPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPawn*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPawn* UFortGameplayAbility::GetActivatingPawn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "GetActivatingPawn");

	Params::FortGameplayAbility_GetActivatingPawn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility.GetAIAbilityTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UFortGameplayAbility::GetAIAbilityTarget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "GetAIAbilityTarget");

	Params::FortGameplayAbility_GetAIAbilityTarget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility.GetCurrentAbilitySourceLevel
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutSourceLevel                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameplayAbility::GetCurrentAbilitySourceLevel(float* OutSourceLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "GetCurrentAbilitySourceLevel");

	Params::FortGameplayAbility_GetCurrentAbilitySourceLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSourceLevel != nullptr)
		*OutSourceLevel = Parms.OutSourceLevel;
}


// Function FortniteGame.FortGameplayAbility.GetCurrentSourceItemDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortWorldItemDefinition*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortWorldItemDefinition* UFortGameplayAbility::GetCurrentSourceItemDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "GetCurrentSourceItemDefinition");

	Params::FortGameplayAbility_GetCurrentSourceItemDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility.GetCurrentSourceWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortWeapon*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortWeapon* UFortGameplayAbility::GetCurrentSourceWeapon() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "GetCurrentSourceWeapon");

	Params::FortGameplayAbility_GetCurrentSourceWeapon Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility.GetCustomAbilitySourceTransform
// (Event, Public, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform UFortGameplayAbility::GetCustomAbilitySourceTransform() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "GetCustomAbilitySourceTransform");

	Params::FortGameplayAbility_GetCustomAbilitySourceTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility.GetDisplayStats
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortTooltipDisplayStatsList*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortTooltipDisplayStatsList* UFortGameplayAbility::GetDisplayStats() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "GetDisplayStats");

	Params::FortGameplayAbility_GetDisplayStats Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility.GetFireLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UFortGameplayAbility::GetFireLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "GetFireLocation");

	Params::FortGameplayAbility_GetFireLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility.GetFireRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bApplyLeading                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyInaccuracy                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyClampedMaxYawAngleToFire                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UFortGameplayAbility::GetFireRotation(bool bApplyLeading, bool bApplyInaccuracy, bool bApplyClampedMaxYawAngleToFire) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "GetFireRotation");

	Params::FortGameplayAbility_GetFireRotation Parms{};

	Parms.bApplyLeading = bApplyLeading;
	Parms.bApplyInaccuracy = bApplyInaccuracy;
	Parms.bApplyClampedMaxYawAngleToFire = bApplyClampedMaxYawAngleToFire;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility.GetProjectileInitialValues
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   OutProjectileSpeed                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         OutSpawnDirection                                      (Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                                   OutProjectileGravity                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           HomingTarget                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyInaccuracy                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyClampedMaxYawAngleToFire                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bApplyLeading                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameplayAbility::GetProjectileInitialValues(float* OutProjectileSpeed, struct FRotator* OutSpawnDirection, float* OutProjectileGravity, class AActor** HomingTarget, bool bApplyInaccuracy, bool bApplyClampedMaxYawAngleToFire, bool bApplyLeading) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "GetProjectileInitialValues");

	Params::FortGameplayAbility_GetProjectileInitialValues Parms{};

	Parms.bApplyInaccuracy = bApplyInaccuracy;
	Parms.bApplyClampedMaxYawAngleToFire = bApplyClampedMaxYawAngleToFire;
	Parms.bApplyLeading = bApplyLeading;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutProjectileSpeed != nullptr)
		*OutProjectileSpeed = Parms.OutProjectileSpeed;

	if (OutSpawnDirection != nullptr)
		*OutSpawnDirection = std::move(Parms.OutSpawnDirection);

	if (OutProjectileGravity != nullptr)
		*OutProjectileGravity = Parms.OutProjectileGravity;

	if (HomingTarget != nullptr)
		*HomingTarget = Parms.HomingTarget;
}


// Function FortniteGame.FortGameplayAbility.GetTooltip
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UFortTooltip>         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UFortTooltip> UFortGameplayAbility::GetTooltip() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "GetTooltip");

	Params::FortGameplayAbility_GetTooltip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility.IsTargetOutsideOfMaxYawRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameplayAbility::IsTargetOutsideOfMaxYawRotation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "IsTargetOutsideOfMaxYawRotation");

	Params::FortGameplayAbility_IsTargetOutsideOfMaxYawRotation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility.K2_ShouldUseDecoTool
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FGameplayAbilityActorInfo        ActorInfo                                              (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameplayAbility::K2_ShouldUseDecoTool(const struct FGameplayAbilityActorInfo& ActorInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "K2_ShouldUseDecoTool");

	Params::FortGameplayAbility_K2_ShouldUseDecoTool Parms{};

	Parms.ActorInfo = std::move(ActorInfo);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility.QueryGameplayEffectContainerTargetExecutionModifiers
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayAbilityTargetDataHandle TargetData                                             (Parm, NativeAccessSpecifierPublic)
// class UFortAbilitySystemComponent*      SrcAbilitySystem                                       (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ApplicationTag                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GameplayEffectLevel                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          SourceObject                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FGameplayEffectExecutionScopedModifierInfo>InScopedMods                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FActiveGameplayEffectHandle>InIgnoreHandles                                        (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FGameplayModifierEvaluatedData>OutOutputModifiers                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortGameplayAbility::QueryGameplayEffectContainerTargetExecutionModifiers(const struct FGameplayAbilityTargetDataHandle& TargetData, const class UFortAbilitySystemComponent* SrcAbilitySystem, const struct FGameplayTag& ApplicationTag, int32 GameplayEffectLevel, const class UObject* SourceObject, const TArray<struct FGameplayEffectExecutionScopedModifierInfo>& InScopedMods, const TArray<struct FActiveGameplayEffectHandle>& InIgnoreHandles, TArray<struct FGameplayModifierEvaluatedData>* OutOutputModifiers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility", "QueryGameplayEffectContainerTargetExecutionModifiers");

	Params::FortGameplayAbility_QueryGameplayEffectContainerTargetExecutionModifiers Parms{};

	Parms.TargetData = std::move(TargetData);
	Parms.SrcAbilitySystem = SrcAbilitySystem;
	Parms.ApplicationTag = std::move(ApplicationTag);
	Parms.GameplayEffectLevel = GameplayEffectLevel;
	Parms.SourceObject = SourceObject;
	Parms.InScopedMods = std::move(InScopedMods);
	Parms.InIgnoreHandles = std::move(InIgnoreHandles);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutOutputModifiers != nullptr)
		*OutOutputModifiers = std::move(Parms.OutOutputModifiers);
}


// Function FortniteGame.FortDamageNumbersActor.OnNewDamageNumber
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFortDamageNumberInfo            NewDamageNumberInfo                                    (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortDamageNumbersActor::OnNewDamageNumber(const struct FFortDamageNumberInfo& NewDamageNumberInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDamageNumbersActor", "OnNewDamageNumber");

	Params::FortDamageNumbersActor_OnNewDamageNumber Parms{};

	Parms.NewDamageNumberInfo = std::move(NewDamageNumberInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortDamageNumbersActor.SetMaterialParameters
// (Final, Native, Protected, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FFortDamageNumberInfo            NewDamageNumberInfo                                    (Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FTransform                       CameraTransform                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          NumberLocation                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDamageNumbersActor::SetMaterialParameters(struct FFortDamageNumberInfo& NewDamageNumberInfo, const struct FTransform& CameraTransform, const struct FVector& NumberLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDamageNumbersActor", "SetMaterialParameters");

	Params::FortDamageNumbersActor_SetMaterialParameters Parms{};

	Parms.NewDamageNumberInfo = std::move(NewDamageNumberInfo);
	Parms.CameraTransform = std::move(CameraTransform);
	Parms.NumberLocation = std::move(NumberLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	NewDamageNumberInfo = std::move(Parms.NewDamageNumberInfo);
}


// Function FortniteGame.FortDefenderItem.GetDefenderSubtype
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortDefenderSubtype                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortDefenderSubtype UFortDefenderItem::GetDefenderSubtype() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDefenderItem", "GetDefenderSubtype");

	Params::FortDefenderItem_GetDefenderSubtype Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortFOBCoreDecoItemDefinition.GetMaximumHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortFOBCoreDecoItemDefinition::GetMaximumHealth() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortFOBCoreDecoItemDefinition", "GetMaximumHealth");

	Params::FortFOBCoreDecoItemDefinition_GetMaximumHealth Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDeployableBaseLibrary.ApplyTieredModifierSet
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTieredModifierSetData>   ModifierSetData                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Tier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   WaveNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FActiveGameplayModifierHandle>OutAppliedModifiers                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortDeployableBaseLibrary::ApplyTieredModifierSet(class UObject* WorldContextObject, const TArray<struct FTieredModifierSetData>& ModifierSetData, int32 Tier, int32 WaveNum, TArray<struct FActiveGameplayModifierHandle>* OutAppliedModifiers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseLibrary", "ApplyTieredModifierSet");

	Params::FortDeployableBaseLibrary_ApplyTieredModifierSet Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ModifierSetData = std::move(ModifierSetData);
	Parms.Tier = Tier;
	Parms.WaveNum = WaveNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAppliedModifiers != nullptr)
		*OutAppliedModifiers = std::move(Parms.OutAppliedModifiers);
}


// Function FortniteGame.FortDeployableBaseLibrary.BroadcastHordeTierComplete
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortCompletionResult                   Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDeployableBaseLibrary::BroadcastHordeTierComplete(class UObject* WorldContextObject, EFortCompletionResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseLibrary", "BroadcastHordeTierComplete");

	Params::FortDeployableBaseLibrary_BroadcastHordeTierComplete Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDeployableBaseLibrary.ForceClearAllDefenders
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDeployableBaseLibrary::ForceClearAllDefenders(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseLibrary", "ForceClearAllDefenders");

	Params::FortDeployableBaseLibrary_ForceClearAllDefenders Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDeployableBaseLibrary.ForceDeployableBaseHordePlayersToResetAndRespawn
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDeployableBaseLibrary::ForceDeployableBaseHordePlayersToResetAndRespawn(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseLibrary", "ForceDeployableBaseHordePlayersToResetAndRespawn");

	Params::FortDeployableBaseLibrary_ForceDeployableBaseHordePlayersToResetAndRespawn Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDeployableBaseLibrary.ForceRestartDeployableBasePlayers
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRestartInvulnerable                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDeployableBaseLibrary::ForceRestartDeployableBasePlayers(class UObject* WorldContextObject, bool bRestartInvulnerable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseLibrary", "ForceRestartDeployableBasePlayers");

	Params::FortDeployableBaseLibrary_ForceRestartDeployableBasePlayers Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bRestartInvulnerable = bRestartInvulnerable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDeployableBaseLibrary.GetGameDifficultyInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             RowName                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameDifficultyInfo              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FGameDifficultyInfo UFortDeployableBaseLibrary::GetGameDifficultyInfo(const class FName& RowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseLibrary", "GetGameDifficultyInfo");

	Params::FortDeployableBaseLibrary_GetGameDifficultyInfo Parms{};

	Parms.RowName = RowName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDeployableBaseLibrary.GetHordeTierStartStatus
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EHordeTierStartStatus                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHordeTierStartStatus UFortDeployableBaseLibrary::GetHordeTierStartStatus(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseLibrary", "GetHordeTierStartStatus");

	Params::FortDeployableBaseLibrary_GetHordeTierStartStatus Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDeployableBaseLibrary.GetPrimaryHordeMission
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortMission*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortMission* UFortDeployableBaseLibrary::GetPrimaryHordeMission(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseLibrary", "GetPrimaryHordeMission");

	Params::FortDeployableBaseLibrary_GetPrimaryHordeMission Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDeployableBaseLibrary.GetTieredModifierSet
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                             TieredModifierSetName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTieredModifierSetData>   OutModifierSetData                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortDeployableBaseLibrary::GetTieredModifierSet(class FName TieredModifierSetName, TArray<struct FTieredModifierSetData>* OutModifierSetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseLibrary", "GetTieredModifierSet");

	Params::FortDeployableBaseLibrary_GetTieredModifierSet Parms{};

	Parms.TieredModifierSetName = TieredModifierSetName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutModifierSetData != nullptr)
		*OutModifierSetData = std::move(Parms.OutModifierSetData);
}


// Function FortniteGame.FortDeployableBaseLibrary.GrantPlayersCompletedWaveRewards
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Tier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Wave                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumberOfPlayers                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ADeployableBaseCore*>      TargetCores                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class ADeployableBaseCore*>      AllCores                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FFortTierCollectionLayoutOutput  CollectionData                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FName>                     TierGroups                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortDeployableBaseLibrary::GrantPlayersCompletedWaveRewards(class UObject* WorldContextObject, int32 Tier, int32 Wave, int32 NumberOfPlayers, const TArray<class ADeployableBaseCore*>& TargetCores, const TArray<class ADeployableBaseCore*>& AllCores, const struct FFortTierCollectionLayoutOutput& CollectionData, const TArray<class FName>& TierGroups)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseLibrary", "GrantPlayersCompletedWaveRewards");

	Params::FortDeployableBaseLibrary_GrantPlayersCompletedWaveRewards Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Tier = Tier;
	Parms.Wave = Wave;
	Parms.NumberOfPlayers = NumberOfPlayers;
	Parms.TargetCores = std::move(TargetCores);
	Parms.AllCores = std::move(AllCores);
	Parms.CollectionData = std::move(CollectionData);
	Parms.TierGroups = std::move(TierGroups);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDeployableBaseLibrary.IsWorldItemDefValidToPersistForDeployableBasePlayerInventory
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFortWorldItemDefinition*         ItemDefinition                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortDeployableBaseLibrary::IsWorldItemDefValidToPersistForDeployableBasePlayerInventory(const class UFortWorldItemDefinition* ItemDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseLibrary", "IsWorldItemDefValidToPersistForDeployableBasePlayerInventory");

	Params::FortDeployableBaseLibrary_IsWorldItemDefValidToPersistForDeployableBasePlayerInventory Parms{};

	Parms.ItemDefinition = ItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDeployableBaseLibrary.OnPreHordeTierStart
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Tier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ModifierRRVSeed                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDeployableBaseLibrary::OnPreHordeTierStart(class UObject* WorldContextObject, int32 Tier, int32 ModifierRRVSeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseLibrary", "OnPreHordeTierStart");

	Params::FortDeployableBaseLibrary_OnPreHordeTierStart Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Tier = Tier;
	Parms.ModifierRRVSeed = ModifierRRVSeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDeployableBaseLibrary.ResetDeployableBaseHordePlayerInventories
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDeployableBaseLibrary::ResetDeployableBaseHordePlayerInventories(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseLibrary", "ResetDeployableBaseHordePlayerInventories");

	Params::FortDeployableBaseLibrary_ResetDeployableBaseHordePlayerInventories Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDeployableBaseLibrary.SetDeployableBaseMatchJoinability
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchJoinable                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDeployableBaseLibrary::SetDeployableBaseMatchJoinability(class UObject* WorldContextObject, bool bMatchJoinable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseLibrary", "SetDeployableBaseMatchJoinability");

	Params::FortDeployableBaseLibrary_SetDeployableBaseMatchJoinability Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bMatchJoinable = bMatchJoinable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDeployableBaseLibrary.SetupDeployableBaseCombatZoneInventoriesOnPlayers
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     TierGroups                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AFortPlayerController*>    PlayerControllers                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortDeployableBaseLibrary::SetupDeployableBaseCombatZoneInventoriesOnPlayers(class UObject* WorldContextObject, const TArray<class FName>& TierGroups, const TArray<class AFortPlayerController*>& PlayerControllers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseLibrary", "SetupDeployableBaseCombatZoneInventoriesOnPlayers");

	Params::FortDeployableBaseLibrary_SetupDeployableBaseCombatZoneInventoriesOnPlayers Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TierGroups = std::move(TierGroups);
	Parms.PlayerControllers = std::move(PlayerControllers);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDeployableBaseLibrary.UpdateDeployableBaseTierProgressionForPlayers
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTieredCollectionLayout*      CollectionLayout                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TierDefeated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDeployableBaseLibrary::UpdateDeployableBaseTierProgressionForPlayers(class UObject* WorldContextObject, const class UFortTieredCollectionLayout* CollectionLayout, int32 TierDefeated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseLibrary", "UpdateDeployableBaseTierProgressionForPlayers");

	Params::FortDeployableBaseLibrary_UpdateDeployableBaseTierProgressionForPlayers Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CollectionLayout = CollectionLayout;
	Parms.TierDefeated = TierDefeated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDeployableBaseManager.GetCurrent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortDeployableBaseManager*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortDeployableBaseManager* AFortDeployableBaseManager::GetCurrent(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortDeployableBaseManager", "GetCurrent");

	Params::FortDeployableBaseManager_GetCurrent Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDeployableBaseManager.ReloadAllPlots
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFortDeployableBaseManager::ReloadAllPlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDeployableBaseManager", "ReloadAllPlots");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDeployableBaseManager.SetKeepDeployableBasesOnLogout
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInKeepBasesOnLogout                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDeployableBaseManager::SetKeepDeployableBasesOnLogout(bool bInKeepBasesOnLogout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDeployableBaseManager", "SetKeepDeployableBasesOnLogout");

	Params::FortDeployableBaseManager_SetKeepDeployableBasesOnLogout Parms{};

	Parms.bInKeepBasesOnLogout = bInKeepBasesOnLogout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDeployableBaseManager.BroadcastHordeWaveStinger
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, Const)
// Parameters:
// EHordeWaveStingerType                   StingerType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortDeployableBaseManager::BroadcastHordeWaveStinger(EHordeWaveStingerType StingerType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDeployableBaseManager", "BroadcastHordeWaveStinger");

	Params::FortDeployableBaseManager_BroadcastHordeWaveStinger Parms{};

	Parms.StingerType = StingerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDeployableBaseManager.GetAllDeployableBasePlots
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class ADeployableBasePlot*>      OutDeployableBasePlots                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortDeployableBaseManager::GetAllDeployableBasePlots(TArray<class ADeployableBasePlot*>* OutDeployableBasePlots) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDeployableBaseManager", "GetAllDeployableBasePlots");

	Params::FortDeployableBaseManager_GetAllDeployableBasePlots Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDeployableBasePlots != nullptr)
		*OutDeployableBasePlots = std::move(Parms.OutDeployableBasePlots);
}


// Function FortniteGame.FortDeployableBaseManager.GetAvailableTiers
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FAvailableTierLayout>     OutAvailableTiers                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortDeployableBaseManager::GetAvailableTiers(TArray<struct FAvailableTierLayout>* OutAvailableTiers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDeployableBaseManager", "GetAvailableTiers");

	Params::FortDeployableBaseManager_GetAvailableTiers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAvailableTiers != nullptr)
		*OutAvailableTiers = std::move(Parms.OutAvailableTiers);
}


// Function FortniteGame.FortDeployableBaseManager.GetDeployableBasePlotFromLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          Location                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADeployableBasePlot*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ADeployableBasePlot* AFortDeployableBaseManager::GetDeployableBasePlotFromLocation(const struct FVector& Location) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDeployableBaseManager", "GetDeployableBasePlotFromLocation");

	Params::FortDeployableBaseManager_GetDeployableBasePlotFromLocation Parms{};

	Parms.Location = std::move(Location);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDeployableBaseManager.GetDeployableBaseUseType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EDeployableBaseUseType                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EDeployableBaseUseType AFortDeployableBaseManager::GetDeployableBaseUseType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDeployableBaseManager", "GetDeployableBaseUseType");

	Params::FortDeployableBaseManager_GetDeployableBaseUseType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDeployableBaseManager.GetHighestDefeatedTierForPlayerAndLayout
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerID                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTieredCollectionLayout*      Layout                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortDeployableBaseManager::GetHighestDefeatedTierForPlayerAndLayout(const struct FUniqueNetIdRepl& PlayerID, const class UFortTieredCollectionLayout* Layout) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDeployableBaseManager", "GetHighestDefeatedTierForPlayerAndLayout");

	Params::FortDeployableBaseManager_GetHighestDefeatedTierForPlayerAndLayout Parms{};

	Parms.PlayerID = std::move(PlayerID);
	Parms.Layout = Layout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDeployableBaseManager.GetTierOutputForSelectedTier
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Tier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTieredCollectionLayout*      Layout                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortTierCollectionLayoutOutput  Output                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortDeployableBaseManager::GetTierOutputForSelectedTier(int32 Tier, const class UFortTieredCollectionLayout* Layout, struct FFortTierCollectionLayoutOutput* Output) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDeployableBaseManager", "GetTierOutputForSelectedTier");

	Params::FortDeployableBaseManager_GetTierOutputForSelectedTier Parms{};

	Parms.Tier = Tier;
	Parms.Layout = Layout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Output != nullptr)
		*Output = std::move(Parms.Output);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortDialogNotificationHandler.Accept
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent)

void UFortDialogNotificationHandler::Accept()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDialogNotificationHandler", "Accept");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDialogNotificationHandler.Decline
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent)

void UFortDialogNotificationHandler::Decline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDialogNotificationHandler", "Decline");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteGame.FortDialogNotificationHandler.OnActionComplete__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortDialogNotificationHandler::OnActionComplete__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDialogNotificationHandler", "OnActionComplete__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortDialogNotificationHandler.SetDialogDescription
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// struct FFortDialogDescription           InDialogDescription                                    (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UFortDialogNotificationHandler::SetDialogDescription(const struct FFortDialogDescription& InDialogDescription)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDialogNotificationHandler", "SetDialogDescription");

	Params::FortDialogNotificationHandler_SetDialogDescription Parms{};

	Parms.InDialogDescription = std::move(InDialogDescription);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortDialogNotificationHandler.Timeout
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent)

void UFortDialogNotificationHandler::Timeout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDialogNotificationHandler", "Timeout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortEmoteItemDefinition.GetCommandName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortEmoteItemDefinition::GetCommandName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortEmoteItemDefinition", "GetCommandName");

	Params::FortEmoteItemDefinition_GetCommandName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortExpeditionItem.GetBonusCriteriaBP
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFortCriteriaRequirementData>OutBonusCriteria                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortExpeditionItem::GetBonusCriteriaBP(TArray<struct FFortCriteriaRequirementData>* OutBonusCriteria) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionItem", "GetBonusCriteriaBP");

	Params::FortExpeditionItem_GetBonusCriteriaBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBonusCriteria != nullptr)
		*OutBonusCriteria = std::move(Parms.OutBonusCriteria);
}


// Function FortniteGame.FortExpeditionItem.GetBonusCriteriaTags
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FGameplayTag>             OutBonusCriteria                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortExpeditionItem::GetBonusCriteriaTags(TArray<struct FGameplayTag>* OutBonusCriteria) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionItem", "GetBonusCriteriaTags");

	Params::FortExpeditionItem_GetBonusCriteriaTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBonusCriteria != nullptr)
		*OutBonusCriteria = std::move(Parms.OutBonusCriteria);
}


// Function FortniteGame.FortExpeditionItem.GetExpeditionSquadId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UFortExpeditionItem::GetExpeditionSquadId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionItem", "GetExpeditionSquadId");

	Params::FortExpeditionItem_GetExpeditionSquadId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortExpeditionItem.GetExpeditionSuccessChance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortExpeditionItem::GetExpeditionSuccessChance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionItem", "GetExpeditionSuccessChance");

	Params::FortExpeditionItem_GetExpeditionSuccessChance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortExpeditionItem.GetMinTargetPowerLevelToBegin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortExpeditionItem::GetMinTargetPowerLevelToBegin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionItem", "GetMinTargetPowerLevelToBegin");

	Params::FortExpeditionItem_GetMinTargetPowerLevelToBegin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortExpeditionItem.GetRemainingExpeditionDuration
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        UtcNow                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UFortExpeditionItem::GetRemainingExpeditionDuration(const struct FDateTime& UtcNow) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionItem", "GetRemainingExpeditionDuration");

	Params::FortExpeditionItem_GetRemainingExpeditionDuration Parms{};

	Parms.UtcNow = std::move(UtcNow);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortExpeditionItem.GetRemainingExpeditionExpirationDuration
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        UtcNow                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UFortExpeditionItem::GetRemainingExpeditionExpirationDuration(const struct FDateTime& UtcNow) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionItem", "GetRemainingExpeditionExpirationDuration");

	Params::FortExpeditionItem_GetRemainingExpeditionExpirationDuration Parms{};

	Parms.UtcNow = std::move(UtcNow);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortExpeditionItem.GetTargetPowerLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortExpeditionItem::GetTargetPowerLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionItem", "GetTargetPowerLevel");

	Params::FortExpeditionItem_GetTargetPowerLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortExpeditionItem.HasExpeditionExpired
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        UtcNow                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortExpeditionItem::HasExpeditionExpired(const struct FDateTime& UtcNow) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionItem", "HasExpeditionExpired");

	Params::FortExpeditionItem_HasExpeditionExpired Parms{};

	Parms.UtcNow = std::move(UtcNow);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortExpeditionItem.IsExpeditionCompleted
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        UtcNow                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortExpeditionItem::IsExpeditionCompleted(const struct FDateTime& UtcNow) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionItem", "IsExpeditionCompleted");

	Params::FortExpeditionItem_IsExpeditionCompleted Parms{};

	Parms.UtcNow = std::move(UtcNow);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortExpeditionItem.IsExpeditionInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortExpeditionItem::IsExpeditionInProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortExpeditionItem", "IsExpeditionInProgress");

	Params::FortExpeditionItem_IsExpeditionInProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGadgetItemDefinitionTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGadgetItemDefinitionTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGadgetItemDefinitionTooltip", "GetNumericValue");

	Params::FortGadgetItemDefinitionTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGadgetItemDefinitionTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGadgetItemDefinitionTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGadgetItemDefinitionTooltip", "GetTextForToken");

	Params::FortGadgetItemDefinitionTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGadgetItemDefinitionTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGadgetItemDefinitionTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGadgetItemDefinitionTooltip", "GetTokenizedDescriptionText");

	Params::FortGadgetItemDefinitionTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGadgetItemTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGadgetItemTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGadgetItemTooltip", "GetNumericValue");

	Params::FortGadgetItemTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGadgetItemTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGadgetItemTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGadgetItemTooltip", "GetTextForToken");

	Params::FortGadgetItemTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGadgetItemTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGadgetItemTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGadgetItemTooltip", "GetTokenizedDescriptionText");

	Params::FortGadgetItemTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameModeSurvival.FireEvent_SurvivalPeriodicReport
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// EFortReportDayPhase                     TimeOfReport                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ABuildingActor*>           ActorsBeingDefended                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortGameModeSurvival::FireEvent_SurvivalPeriodicReport(EFortReportDayPhase TimeOfReport, const TArray<class ABuildingActor*>& ActorsBeingDefended) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameModeSurvival", "FireEvent_SurvivalPeriodicReport");

	Params::FortGameModeSurvival_FireEvent_SurvivalPeriodicReport Parms{};

	Parms.TimeOfReport = TimeOfReport;
	Parms.ActorsBeingDefended = std::move(ActorsBeingDefended);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameModeSurvival.FireEvent_SurvivalVoteReport
// (Final, Native, Protected, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<class ABuildingActor*>           ActorsBeingDefended                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortGameModeSurvival::FireEvent_SurvivalVoteReport(const TArray<class ABuildingActor*>& ActorsBeingDefended) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameModeSurvival", "FireEvent_SurvivalVoteReport");

	Params::FortGameModeSurvival_FireEvent_SurvivalVoteReport Parms{};

	Parms.ActorsBeingDefended = std::move(ActorsBeingDefended);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameplayAbility_AIPortal.ModifyCollisions
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UFortGameplayAbility_AIPortal::ModifyCollisions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_AIPortal", "ModifyCollisions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameplayAbility_AIPortal.GetPortalBuilding
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ABuildingSMActor*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABuildingSMActor* UFortGameplayAbility_AIPortal::GetPortalBuilding() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_AIPortal", "GetPortalBuilding");

	Params::FortGameplayAbility_AIPortal_GetPortalBuilding Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility_AIPortal.GetPortalInPoint
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UFortGameplayAbility_AIPortal::GetPortalInPoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_AIPortal", "GetPortalInPoint");

	Params::FortGameplayAbility_AIPortal_GetPortalInPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility_AIPortal.GetPortalOutPoint
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UFortGameplayAbility_AIPortal::GetPortalOutPoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_AIPortal", "GetPortalOutPoint");

	Params::FortGameplayAbility_AIPortal_GetPortalOutPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility_AIPortal.HasPortalOutPoint
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameplayAbility_AIPortal::HasPortalOutPoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_AIPortal", "HasPortalOutPoint");

	Params::FortGameplayAbility_AIPortal_HasPortalOutPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbility_AITurnTransition.GetTurnTransitionMontageSectionNameAndYawRotationRate
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             MontageSectionName                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TurnYawRotationRate                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameplayAbility_AITurnTransition::GetTurnTransitionMontageSectionNameAndYawRotationRate(class FName* MontageSectionName, float* TurnYawRotationRate) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbility_AITurnTransition", "GetTurnTransitionMontageSectionNameAndYawRotationRate");

	Params::FortGameplayAbility_AITurnTransition_GetTurnTransitionMontageSectionNameAndYawRotationRate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MontageSectionName != nullptr)
		*MontageSectionName = Parms.MontageSectionName;

	if (TurnYawRotationRate != nullptr)
		*TurnYawRotationRate = Parms.TurnYawRotationRate;
}


// Function FortniteGame.FortGameplayAbilityTooltip.GetApplicationTag
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class UGameplayAbility*                 AbilityInstance                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     OutTag                                                 (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameplayAbilityTooltip::GetApplicationTag(const class UGameplayAbility* AbilityInstance, struct FGameplayTag* OutTag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbilityTooltip", "GetApplicationTag");

	Params::FortGameplayAbilityTooltip_GetApplicationTag Parms{};

	Parms.AbilityInstance = AbilityInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTag != nullptr)
		*OutTag = std::move(Parms.OutTag);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbilityTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameplayAbilityTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbilityTooltip", "GetNumericValue");

	Params::FortGameplayAbilityTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbilityTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameplayAbilityTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbilityTooltip", "GetTextForToken");

	Params::FortGameplayAbilityTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbilityTooltip.GetTextForTokenFromAbilityInstance
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UGameplayAbility*                 AbilityInstance                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameplayAbilityTooltip::GetTextForTokenFromAbilityInstance(const class UGameplayAbility* AbilityInstance, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbilityTooltip", "GetTextForTokenFromAbilityInstance");

	Params::FortGameplayAbilityTooltip_GetTextForTokenFromAbilityInstance Parms{};

	Parms.AbilityInstance = AbilityInstance;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbilityTooltip.GetTextForTokenFromAbilityInstanceInternal
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class UGameplayAbility*                 AbilityInstance                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameplayAbilityTooltip::GetTextForTokenFromAbilityInstanceInternal(const class UGameplayAbility* AbilityInstance, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbilityTooltip", "GetTextForTokenFromAbilityInstanceInternal");

	Params::FortGameplayAbilityTooltip_GetTextForTokenFromAbilityInstanceInternal Parms{};

	Parms.AbilityInstance = AbilityInstance;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbilityTooltip.GetTextForTokenFromAbilitySpec
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayAbilitySpec             Spec                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameplayAbilityTooltip::GetTextForTokenFromAbilitySpec(const struct FGameplayAbilitySpec& Spec, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbilityTooltip", "GetTextForTokenFromAbilitySpec");

	Params::FortGameplayAbilityTooltip_GetTextForTokenFromAbilitySpec Parms{};

	Parms.Spec = std::move(Spec);
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbilityTooltip.GetTextForTokenFromAbilitySpecInternal
// (Native, Event, Protected, HasOutParams, BlueprintEvent, Const)
// Parameters:
// struct FGameplayAbilitySpec             Spec                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameplayAbilityTooltip::GetTextForTokenFromAbilitySpecInternal(const struct FGameplayAbilitySpec& Spec, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbilityTooltip", "GetTextForTokenFromAbilitySpecInternal");

	Params::FortGameplayAbilityTooltip_GetTextForTokenFromAbilitySpecInternal Parms{};

	Parms.Spec = std::move(Spec);
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbilityTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGameplayAbilityTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbilityTooltip", "GetTokenizedDescriptionText");

	Params::FortGameplayAbilityTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameplayAbilityTooltip.InitializeAbilityInstance
// (Final, Native, Protected, BlueprintCallable, Const)
// Parameters:
// class UGameplayAbility*                 AbilityInstance                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameplayAbilityTooltip::InitializeAbilityInstance(const class UGameplayAbility* AbilityInstance, const class UFortTooltipContext* Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbilityTooltip", "InitializeAbilityInstance");

	Params::FortGameplayAbilityTooltip_InitializeAbilityInstance Parms{};

	Parms.AbilityInstance = AbilityInstance;
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameplayAbilityTooltip.InitializeAbilityInstanceInternal
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class UGameplayAbility*                 AbilityInstance                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortGameplayAbilityTooltip::InitializeAbilityInstanceInternal(const class UGameplayAbility* AbilityInstance, const class UFortTooltipContext* Context) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayAbilityTooltip", "InitializeAbilityInstanceInternal");

	Params::FortGameplayAbilityTooltip_InitializeAbilityInstanceInternal Parms{};

	Parms.AbilityInstance = AbilityInstance;
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameplayCueNotify_Looping.OnStartParticleSystemSpawned
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class UParticleSystemComponent*         SpawnedParticleSysComponent                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortGameplayCueNotify_Looping::OnStartParticleSystemSpawned(class UParticleSystemComponent* SpawnedParticleSysComponent, const struct FGameplayCueParameters& Parameters) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayCueNotify_Looping", "OnStartParticleSystemSpawned");

	Params::FortGameplayCueNotify_Looping_OnStartParticleSystemSpawned Parms{};

	Parms.SpawnedParticleSysComponent = SpawnedParticleSysComponent;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortGameplayCueNotify_Looping.OnStopParticleSystemSpawned
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class UParticleSystemComponent*         SpawnedParticleSysComponent                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortGameplayCueNotify_Looping::OnStopParticleSystemSpawned(class UParticleSystemComponent* SpawnedParticleSysComponent, const struct FGameplayCueParameters& Parameters) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayCueNotify_Looping", "OnStopParticleSystemSpawned");

	Params::FortGameplayCueNotify_Looping_OnStopParticleSystemSpawned Parms{};

	Parms.SpawnedParticleSysComponent = SpawnedParticleSysComponent;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortGameplayCueNotify_Looping.OnWhileActiveParticleSystemActivate
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class UParticleSystemComponent*         WhileActiveParticleSysComponent                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortGameplayCueNotify_Looping::OnWhileActiveParticleSystemActivate(class UParticleSystemComponent* WhileActiveParticleSysComponent, const struct FGameplayCueParameters& Parameters) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayCueNotify_Looping", "OnWhileActiveParticleSystemActivate");

	Params::FortGameplayCueNotify_Looping_OnWhileActiveParticleSystemActivate Parms{};

	Parms.WhileActiveParticleSysComponent = WhileActiveParticleSysComponent;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortGameplayCueNotify_Looping.OnWhileActiveParticleSystemDeactivate
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class UParticleSystemComponent*         WhileActiveParticleSysComponent                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortGameplayCueNotify_Looping::OnWhileActiveParticleSystemDeactivate(class UParticleSystemComponent* WhileActiveParticleSysComponent, const struct FGameplayCueParameters& Parameters) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayCueNotify_Looping", "OnWhileActiveParticleSystemDeactivate");

	Params::FortGameplayCueNotify_Looping_OnWhileActiveParticleSystemDeactivate Parms{};

	Parms.WhileActiveParticleSysComponent = WhileActiveParticleSysComponent;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortGameplayCueNotify_Simple.OnStartParticleSystemSpawned
// (Event, Public, HasOutParams, BlueprintEvent, Const)
// Parameters:
// class UParticleSystemComponent*         SpawnedParticleSysComponent                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           Parameters                                             (ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UFortGameplayCueNotify_Simple::OnStartParticleSystemSpawned(class UParticleSystemComponent* SpawnedParticleSysComponent, const struct FGameplayCueParameters& Parameters) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayCueNotify_Simple", "OnStartParticleSystemSpawned");

	Params::FortGameplayCueNotify_Simple_OnStartParticleSystemSpawned Parms{};

	Parms.SpawnedParticleSysComponent = SpawnedParticleSysComponent;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortGameplayTagVolumeInterface.ApplyTags
// (Native, Public)

void IFortGameplayTagVolumeInterface::ApplyTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameplayTagVolumeInterface", "ApplyTags");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameSession.DumpReservations
// (Exec, Native, Public, Const)

void AFortGameSession::DumpReservations() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameSession", "DumpReservations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateAthena.OnRep_Aircraft
// (Final, Native, Protected)

void AFortGameStateAthena::OnRep_Aircraft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateAthena", "OnRep_Aircraft");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateAthena.OnRep_CurrentPlaylistId
// (Final, Native, Public)

void AFortGameStateAthena::OnRep_CurrentPlaylistId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateAthena", "OnRep_CurrentPlaylistId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateAthena.OnRep_GamePhase
// (Final, Native, Protected)
// Parameters:
// EAthenaGamePhase                        OldGamePhase                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameStateAthena::OnRep_GamePhase(EAthenaGamePhase OldGamePhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateAthena", "OnRep_GamePhase");

	Params::FortGameStateAthena_OnRep_GamePhase Parms{};

	Parms.OldGamePhase = OldGamePhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateAthena.OnRep_WinningPlayerName
// (Final, Native, Public)

void AFortGameStateAthena::OnRep_WinningPlayerName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateAthena", "OnRep_WinningPlayerName");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateAthena.OnRep_WinningTeam
// (Final, Native, Public)

void AFortGameStateAthena::OnRep_WinningTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateAthena", "OnRep_WinningTeam");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateAthena.GetAerialPhase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerControllerAthena*      PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAthenaAerialPhase                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAthenaAerialPhase AFortGameStateAthena::GetAerialPhase(class AFortPlayerControllerAthena* PlayerController) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateAthena", "GetAerialPhase");

	Params::FortGameStateAthena_GetAerialPhase Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateAthena.GetAircraft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortAthenaAircraft*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortAthenaAircraft* AFortGameStateAthena::GetAircraft() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateAthena", "GetAircraft");

	Params::FortGameStateAthena_GetAircraft Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateAthena.GetBattleBusForPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlayerControllerAthena*      PC                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAthenaBattleBusItemDefinition*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAthenaBattleBusItemDefinition* AFortGameStateAthena::GetBattleBusForPlayer(class AFortPlayerControllerAthena* PC) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateAthena", "GetBattleBusForPlayer");

	Params::FortGameStateAthena_GetBattleBusForPlayer Parms{};

	Parms.PC = PC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateAthena.GetSafeZoneIndicator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortSafeZoneIndicator*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortSafeZoneIndicator* AFortGameStateAthena::GetSafeZoneIndicator() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateAthena", "GetSafeZoneIndicator");

	Params::FortGameStateAthena_GetSafeZoneIndicator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateDeployableBase.OnRep_DeployableBaseManager
// (Native, Protected)

void AFortGameStateDeployableBase::OnRep_DeployableBaseManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateDeployableBase", "OnRep_DeployableBaseManager");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateDeployableBase.SetGameDifficultyExplicitly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InGameDifficulty                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameStateDeployableBase::SetGameDifficultyExplicitly(const float InGameDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateDeployableBase", "SetGameDifficultyExplicitly");

	Params::FortGameStateDeployableBase_SetGameDifficultyExplicitly Parms{};

	Parms.InGameDifficulty = InGameDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateDeployableBase.SetGameDifficultyRow
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDataTableRowHandle              GameDifficultyInfo                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortGameStateDeployableBase::SetGameDifficultyRow(const struct FDataTableRowHandle& GameDifficultyInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateDeployableBase", "SetGameDifficultyRow");

	Params::FortGameStateDeployableBase_SetGameDifficultyRow Parms{};

	Parms.GameDifficultyInfo = std::move(GameDifficultyInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateDeployableBase.GetDeployableBaseUseType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EDeployableBaseUseType                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EDeployableBaseUseType AFortGameStateDeployableBase::GetDeployableBaseUseType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateDeployableBase", "GetDeployableBaseUseType");

	Params::FortGameStateDeployableBase_GetDeployableBaseUseType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateFOB.SetGameDifficultyExplicitly
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InGameDifficulty                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortGameStateFOB::SetGameDifficultyExplicitly(const float InGameDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateFOB", "SetGameDifficultyExplicitly");

	Params::FortGameStateFOB_SetGameDifficultyExplicitly Parms{};

	Parms.InGameDifficulty = InGameDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateFOB.SetGameDifficultyRow
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDataTableRowHandle              GameDifficultyInfo                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortGameStateFOB::SetGameDifficultyRow(const struct FDataTableRowHandle& GameDifficultyInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateFOB", "SetGameDifficultyRow");

	Params::FortGameStateFOB_SetGameDifficultyRow Parms{};

	Parms.GameDifficultyInfo = std::move(GameDifficultyInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateKeep.OnRep_PermaniteBoundariesInfo
// (Final, Native, Public)

void AFortGameStateKeep::OnRep_PermaniteBoundariesInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateKeep", "OnRep_PermaniteBoundariesInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStateOutpost.SetGameDifficultyRow
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDataTableRowHandle              GameDifficultyInfo                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortGameStateOutpost::SetGameDifficultyRow(const struct FDataTableRowHandle& GameDifficultyInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateOutpost", "SetGameDifficultyRow");

	Params::FortGameStateOutpost_SetGameDifficultyRow Parms{};

	Parms.GameDifficultyInfo = std::move(GameDifficultyInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGameStatePvPBaseDestruction.GetExperienceRequiredForTeamLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   TeamLevel                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortGameStatePvPBaseDestruction::GetExperienceRequiredForTeamLevel(int32 TeamLevel) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStatePvPBaseDestruction", "GetExperienceRequiredForTeamLevel");

	Params::FortGameStatePvPBaseDestruction_GetExperienceRequiredForTeamLevel Parms{};

	Parms.TeamLevel = TeamLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStatePvPBaseDestruction.GetMaxTeamExperience
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortGameStatePvPBaseDestruction::GetMaxTeamExperience() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStatePvPBaseDestruction", "GetMaxTeamExperience");

	Params::FortGameStatePvPBaseDestruction_GetMaxTeamExperience Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStatePvPBaseDestruction.GetMaxTeamLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortGameStatePvPBaseDestruction::GetMaxTeamLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStatePvPBaseDestruction", "GetMaxTeamLevel");

	Params::FortGameStatePvPBaseDestruction_GetMaxTeamLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStatePvPBaseDestruction.GetTeamLevelForExperienceAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Experience                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortGameStatePvPBaseDestruction::GetTeamLevelForExperienceAmount(int32 Experience) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStatePvPBaseDestruction", "GetTeamLevelForExperienceAmount");

	Params::FortGameStatePvPBaseDestruction_GetTeamLevelForExperienceAmount Parms{};

	Parms.Experience = Experience;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGameStateSurvival.SetGameDifficultyRow
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDataTableRowHandle              GameDifficultyInfo                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortGameStateSurvival::SetGameDifficultyRow(const struct FDataTableRowHandle& GameDifficultyInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortGameStateSurvival", "SetGameDifficultyRow");

	Params::FortGameStateSurvival_SetGameDifficultyRow Parms{};

	Parms.GameDifficultyInfo = std::move(GameDifficultyInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortGlobals.AreFriendCodesEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::AreFriendCodesEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "AreFriendCodesEnabled");

	Params::FortGlobals_AreFriendCodesEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.GetAccountLinkingUIConfig
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortAccountLinkingUIConfig             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortAccountLinkingUIConfig UFortGlobals::GetAccountLinkingUIConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "GetAccountLinkingUIConfig");

	Params::FortGlobals_GetAccountLinkingUIConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.GetAccountLinkingUIURL
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortGlobals::GetAccountLinkingUIURL()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "GetAccountLinkingUIURL");

	Params::FortGlobals_GetAccountLinkingUIURL Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.GetMaxTheaterListRefreshDelay
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortGlobals::GetMaxTheaterListRefreshDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "GetMaxTheaterListRefreshDelay");

	Params::FortGlobals_GetMaxTheaterListRefreshDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.GetMinTheaterListRefreshDelay
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortGlobals::GetMinTheaterListRefreshDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "GetMinTheaterListRefreshDelay");

	Params::FortGlobals_GetMinTheaterListRefreshDelay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.Is50v50CalenderEventEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::Is50v50CalenderEventEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "Is50v50CalenderEventEnabled");

	Params::FortGlobals_Is50v50CalenderEventEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.Is50v50ForceEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::Is50v50ForceEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "Is50v50ForceEnabled");

	Params::FortGlobals_Is50v50ForceEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.IsAccountLinkingEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::IsAccountLinkingEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "IsAccountLinkingEnabled");

	Params::FortGlobals_IsAccountLinkingEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.IsAccountLinkingUIURLButtonEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::IsAccountLinkingUIURLButtonEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "IsAccountLinkingUIURLButtonEnabled");

	Params::FortGlobals_IsAccountLinkingUIURLButtonEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.IsDisplayingTwitchViewerNamesAllowed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::IsDisplayingTwitchViewerNamesAllowed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "IsDisplayingTwitchViewerNamesAllowed");

	Params::FortGlobals_IsDisplayingTwitchViewerNamesAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.IsEvent1ForceEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::IsEvent1ForceEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "IsEvent1ForceEnabled");

	Params::FortGlobals_IsEvent1ForceEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.IsEvent2ForceEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::IsEvent2ForceEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "IsEvent2ForceEnabled");

	Params::FortGlobals_IsEvent2ForceEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.IsEvent3ForceEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::IsEvent3ForceEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "IsEvent3ForceEnabled");

	Params::FortGlobals_IsEvent3ForceEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.IsEvent4ForceEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::IsEvent4ForceEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "IsEvent4ForceEnabled");

	Params::FortGlobals_IsEvent4ForceEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.IsEvent5ForceEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::IsEvent5ForceEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "IsEvent5ForceEnabled");

	Params::FortGlobals_IsEvent5ForceEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.IsEvent6ForceEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::IsEvent6ForceEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "IsEvent6ForceEnabled");

	Params::FortGlobals_IsEvent6ForceEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.IsEvent7ForceEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::IsEvent7ForceEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "IsEvent7ForceEnabled");

	Params::FortGlobals_IsEvent7ForceEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.IsEvent8ForceEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::IsEvent8ForceEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "IsEvent8ForceEnabled");

	Params::FortGlobals_IsEvent8ForceEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.IsFrontendCraftingEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::IsFrontendCraftingEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "IsFrontendCraftingEnabled");

	Params::FortGlobals_IsFrontendCraftingEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.IsNewRewardFlowEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::IsNewRewardFlowEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "IsNewRewardFlowEnabled");

	Params::FortGlobals_IsNewRewardFlowEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.IsTencentBuild
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::IsTencentBuild()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "IsTencentBuild");

	Params::FortGlobals_IsTencentBuild Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.IsTwitchEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::IsTwitchEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "IsTwitchEnabled");

	Params::FortGlobals_IsTwitchEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.IsWIFEEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::IsWIFEEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "IsWIFEEnabled");

	Params::FortGlobals_IsWIFEEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.ShouldDisableParticleEffectsDuringMissionResults
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::ShouldDisableParticleEffectsDuringMissionResults()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "ShouldDisableParticleEffectsDuringMissionResults");

	Params::FortGlobals_ShouldDisableParticleEffectsDuringMissionResults Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.ShouldDisablePlayerTeleportDuringMissionResults
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::ShouldDisablePlayerTeleportDuringMissionResults()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "ShouldDisablePlayerTeleportDuringMissionResults");

	Params::FortGlobals_ShouldDisablePlayerTeleportDuringMissionResults Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.ShouldFlushGPUWhenPlayerIsTeleportedAtEndOfZone
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::ShouldFlushGPUWhenPlayerIsTeleportedAtEndOfZone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "ShouldFlushGPUWhenPlayerIsTeleportedAtEndOfZone");

	Params::FortGlobals_ShouldFlushGPUWhenPlayerIsTeleportedAtEndOfZone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.ShouldShowMissionResultsMovies
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::ShouldShowMissionResultsMovies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "ShouldShowMissionResultsMovies");

	Params::FortGlobals_ShouldShowMissionResultsMovies Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.ShouldShowSkillTreeMovies
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::ShouldShowSkillTreeMovies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "ShouldShowSkillTreeMovies");

	Params::FortGlobals_ShouldShowSkillTreeMovies Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortGlobals.ShouldStreamOutTextureDataWhenPlayerIsTeleportedAtEndOfZone
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortGlobals::ShouldStreamOutTextureDataWhenPlayerIsTeleportedAtEndOfZone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortGlobals", "ShouldStreamOutTextureDataWhenPlayerIsTeleportedAtEndOfZone");

	Params::FortGlobals_ShouldStreamOutTextureDataWhenPlayerIsTeleportedAtEndOfZone Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHeroTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHeroTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroTooltip", "GetNumericValue");

	Params::FortHeroTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHeroTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHeroTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroTooltip", "GetTextForToken");

	Params::FortHeroTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHeroTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHeroTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroTooltip", "GetTokenizedDescriptionText");

	Params::FortHeroTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHeroType.GetFemaleOverrideFeedback
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortFeedbackBank*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortFeedbackBank* UFortHeroType::GetFemaleOverrideFeedback() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroType", "GetFemaleOverrideFeedback");

	Params::FortHeroType_GetFemaleOverrideFeedback Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHeroType.GetFrontendAnimClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UFrontendAnimInstance>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UFrontendAnimInstance> UFortHeroType::GetFrontendAnimClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroType", "GetFrontendAnimClass");

	Params::FortHeroType_GetFrontendAnimClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHeroType.GetMaleOverrideFeedback
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortFeedbackBank*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortFeedbackBank* UFortHeroType::GetMaleOverrideFeedback() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroType", "GetMaleOverrideFeedback");

	Params::FortHeroType_GetMaleOverrideFeedback Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHeroType.GetSubType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortHeroType::GetSubType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHeroType", "GetSubType");

	Params::FortHeroType_GetSubType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.SBAGrantedBuildingGameplayActor.GetOwnerStrategicBuildingActor
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AStrategicBuildingActor*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AStrategicBuildingActor* ASBAGrantedBuildingGameplayActor::GetOwnerStrategicBuildingActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SBAGrantedBuildingGameplayActor", "GetOwnerStrategicBuildingActor");

	Params::SBAGrantedBuildingGameplayActor_GetOwnerStrategicBuildingActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.HomeBaseContext.GetStaticSetBonusData
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayTag                     InSetBonusTag                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWorkerSetBonusData              OutSetBonusData                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FFortMultiSizeBrush              OutBrush                                               (Parm, OutParm, NativeAccessSpecifierPublic)

void UHomeBaseContext::GetStaticSetBonusData(const struct FGameplayTag& InSetBonusTag, struct FWorkerSetBonusData* OutSetBonusData, struct FFortMultiSizeBrush* OutBrush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HomeBaseContext", "GetStaticSetBonusData");

	Params::HomeBaseContext_GetStaticSetBonusData Parms{};

	Parms.InSetBonusTag = std::move(InSetBonusTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSetBonusData != nullptr)
		*OutSetBonusData = std::move(Parms.OutSetBonusData);

	if (OutBrush != nullptr)
		*OutBrush = std::move(Parms.OutBrush);
}


// Function FortniteGame.HomeBaseContext.BroadcastSquadSlotMarkedAsSeen
// (Final, Native, Public, BlueprintCallable)

void UHomeBaseContext::BroadcastSquadSlotMarkedAsSeen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "BroadcastSquadSlotMarkedAsSeen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.HomeBaseContext.ClearFrontEndOnlyExpeditionSquad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHomeBaseContext::ClearFrontEndOnlyExpeditionSquad(const class FName SquadId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "ClearFrontEndOnlyExpeditionSquad");

	Params::HomeBaseContext_ClearFrontEndOnlyExpeditionSquad Parms{};

	Parms.SquadId = SquadId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.HomeBaseContext.GetAllResourceCollectorRewardEstimates
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FFortItemQuantityPair>    OutEstimates                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHomeBaseContext::GetAllResourceCollectorRewardEstimates(TArray<struct FFortItemQuantityPair>* OutEstimates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "GetAllResourceCollectorRewardEstimates");

	Params::HomeBaseContext_GetAllResourceCollectorRewardEstimates Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutEstimates != nullptr)
		*OutEstimates = std::move(Parms.OutEstimates);
}


// Function FortniteGame.HomeBaseContext.GetNumAccountLimitedItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHomeBaseContext::GetNumAccountLimitedItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "GetNumAccountLimitedItems");

	Params::HomeBaseContext_GetNumAccountLimitedItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.HomeBaseContext.GetResourceCollectorRateInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortCollectedResourceItem*       CollectorType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RatePerSecond                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxCapacity                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHomeBaseContext::GetResourceCollectorRateInfo(class UFortCollectedResourceItem* CollectorType, float* RatePerSecond, int32* MaxCapacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "GetResourceCollectorRateInfo");

	Params::HomeBaseContext_GetResourceCollectorRateInfo Parms{};

	Parms.CollectorType = CollectorType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RatePerSecond != nullptr)
		*RatePerSecond = Parms.RatePerSecond;

	if (MaxCapacity != nullptr)
		*MaxCapacity = Parms.MaxCapacity;
}


// Function FortniteGame.HomeBaseContext.GetResourceCollectorRewardsEstimate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortCollectedResourceItem*       CollectorType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortItemQuantityPair            OutEstimate                                            (Parm, OutParm, NativeAccessSpecifierPublic)

void UHomeBaseContext::GetResourceCollectorRewardsEstimate(class UFortCollectedResourceItem* CollectorType, struct FFortItemQuantityPair* OutEstimate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "GetResourceCollectorRewardsEstimate");

	Params::HomeBaseContext_GetResourceCollectorRewardsEstimate Parms{};

	Parms.CollectorType = CollectorType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutEstimate != nullptr)
		*OutEstimate = std::move(Parms.OutEstimate);
}


// Function FortniteGame.HomeBaseContext.GetResourceCollectorRewardsEstimates
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortCollectedResourceItem*>CollectorTypes                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FFortItemQuantityPair>    OutEstimates                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UHomeBaseContext::GetResourceCollectorRewardsEstimates(const TArray<class UFortCollectedResourceItem*>& CollectorTypes, TArray<struct FFortItemQuantityPair>* OutEstimates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "GetResourceCollectorRewardsEstimates");

	Params::HomeBaseContext_GetResourceCollectorRewardsEstimates Parms{};

	Parms.CollectorTypes = std::move(CollectorTypes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutEstimates != nullptr)
		*OutEstimates = std::move(Parms.OutEstimates);
}


// Function FortniteGame.HomeBaseContext.GetActiveCombatSquadId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UHomeBaseContext::GetActiveCombatSquadId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "GetActiveCombatSquadId");

	Params::HomeBaseContext_GetActiveCombatSquadId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.HomeBaseContext.GetActiveDefenderSquadId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UHomeBaseContext::GetActiveDefenderSquadId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "GetActiveDefenderSquadId");

	Params::HomeBaseContext_GetActiveDefenderSquadId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.HomeBaseContext.GetItemsInSquad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UsePreviewState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRemoveEmptySquadSlots                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UFortItem>            OfClassType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortItem*> UHomeBaseContext::GetItemsInSquad(const class FName SquadId, bool UsePreviewState, bool bRemoveEmptySquadSlots, TSubclassOf<class UFortItem> OfClassType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "GetItemsInSquad");

	Params::HomeBaseContext_GetItemsInSquad Parms{};

	Parms.SquadId = SquadId;
	Parms.UsePreviewState = UsePreviewState;
	Parms.bRemoveEmptySquadSlots = bRemoveEmptySquadSlots;
	Parms.OfClassType = OfClassType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.HomeBaseContext.GetLocalPlayerHomebaseRating
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Rating                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ProgressFraction                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHomeBaseContext::GetLocalPlayerHomebaseRating(int32* Rating, float* ProgressFraction) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "GetLocalPlayerHomebaseRating");

	Params::HomeBaseContext_GetLocalPlayerHomebaseRating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Rating != nullptr)
		*Rating = Parms.Rating;

	if (ProgressFraction != nullptr)
		*ProgressFraction = Parms.ProgressFraction;

	return Parms.ReturnValue;
}


// Function FortniteGame.HomeBaseContext.GetLocalTeamHomebaseRating
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Rating                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ProgressFraction                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHomeBaseContext::GetLocalTeamHomebaseRating(int32* Rating, float* ProgressFraction) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "GetLocalTeamHomebaseRating");

	Params::HomeBaseContext_GetLocalTeamHomebaseRating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Rating != nullptr)
		*Rating = Parms.Rating;

	if (ProgressFraction != nullptr)
		*ProgressFraction = Parms.ProgressFraction;

	return Parms.ReturnValue;
}


// Function FortniteGame.HomeBaseContext.GetNodePageIdForHomebaseNode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             NodeID                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UHomeBaseContext::GetNodePageIdForHomebaseNode(const class FName NodeID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "GetNodePageIdForHomebaseNode");

	Params::HomeBaseContext_GetNodePageIdForHomebaseNode Parms{};

	Parms.NodeID = NodeID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.HomeBaseContext.GetSquadSlotOfItem
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortItem*                        Item                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             OutSquadId                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutSquadSlotIndex                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHomeBaseContext::GetSquadSlotOfItem(const class UFortItem* Item, class FName* OutSquadId, int32* OutSquadSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "GetSquadSlotOfItem");

	Params::HomeBaseContext_GetSquadSlotOfItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSquadId != nullptr)
		*OutSquadId = Parms.OutSquadId;

	if (OutSquadSlotIndex != nullptr)
		*OutSquadSlotIndex = Parms.OutSquadSlotIndex;
}


// Function FortniteGame.HomeBaseContext.GetTeamHomebaseRating
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerID                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Rating                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ProgressFraction                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHomeBaseContext::GetTeamHomebaseRating(const struct FUniqueNetIdRepl& PlayerID, int32* Rating, float* ProgressFraction) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "GetTeamHomebaseRating");

	Params::HomeBaseContext_GetTeamHomebaseRating Parms{};

	Parms.PlayerID = std::move(PlayerID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Rating != nullptr)
		*Rating = Parms.Rating;

	if (ProgressFraction != nullptr)
		*ProgressFraction = Parms.ProgressFraction;

	return Parms.ReturnValue;
}


// Function FortniteGame.HomeBaseContext.GetTotalHomebaseRating
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 UniqueId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Rating                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ProgressFraction                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHomeBaseContext::GetTotalHomebaseRating(const struct FUniqueNetIdRepl& UniqueId, int32* Rating, float* ProgressFraction) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "GetTotalHomebaseRating");

	Params::HomeBaseContext_GetTotalHomebaseRating Parms{};

	Parms.UniqueId = std::move(UniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Rating != nullptr)
		*Rating = Parms.Rating;

	if (ProgressFraction != nullptr)
		*ProgressFraction = Parms.ProgressFraction;

	return Parms.ReturnValue;
}


// Function FortniteGame.HomeBaseContext.GetTotalSkillPointsEarned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UHomeBaseContext::GetTotalSkillPointsEarned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "GetTotalSkillPointsEarned");

	Params::HomeBaseContext_GetTotalSkillPointsEarned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.HomeBaseContext.GetUnlockingHomebaseNodeIdForSquadSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SquadSlotIndex                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UHomeBaseContext::GetUnlockingHomebaseNodeIdForSquadSlot(const class FName SquadId, const int32 SquadSlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "GetUnlockingHomebaseNodeIdForSquadSlot");

	Params::HomeBaseContext_GetUnlockingHomebaseNodeIdForSquadSlot Parms{};

	Parms.SquadId = SquadId;
	Parms.SquadSlotIndex = SquadSlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.HomeBaseContext.GetWorkerPreviewStatus
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    OutIsPreviewing                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorker*                      OutWorker                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OutMatchesPersonality                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OutMatchesSquadType                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWorkerSetBonusState             OutSetBonusState                                       (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UHomeBaseContext::GetWorkerPreviewStatus(bool* OutIsPreviewing, class UFortWorker** OutWorker, bool* OutMatchesPersonality, bool* OutMatchesSquadType, struct FWorkerSetBonusState* OutSetBonusState) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "GetWorkerPreviewStatus");

	Params::HomeBaseContext_GetWorkerPreviewStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutIsPreviewing != nullptr)
		*OutIsPreviewing = Parms.OutIsPreviewing;

	if (OutWorker != nullptr)
		*OutWorker = Parms.OutWorker;

	if (OutMatchesPersonality != nullptr)
		*OutMatchesPersonality = Parms.OutMatchesPersonality;

	if (OutMatchesSquadType != nullptr)
		*OutMatchesSquadType = Parms.OutMatchesSquadType;

	if (OutSetBonusState != nullptr)
		*OutSetBonusState = std::move(Parms.OutSetBonusState);
}


// Function FortniteGame.HomeBaseContext.IsPreviewingWorkerSlotting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHomeBaseContext::IsPreviewingWorkerSlotting() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "IsPreviewingWorkerSlotting");

	Params::HomeBaseContext_IsPreviewingWorkerSlotting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.HomeBaseContext.TryGetHomebaseNodeData
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             NodeID                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHomebaseNode                    OutHomebaseNode                                        (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHomeBaseContext::TryGetHomebaseNodeData(const class FName NodeID, struct FHomebaseNode* OutHomebaseNode) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "TryGetHomebaseNodeData");

	Params::HomeBaseContext_TryGetHomebaseNodeData Parms{};

	Parms.NodeID = NodeID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHomebaseNode != nullptr)
		*OutHomebaseNode = std::move(Parms.OutHomebaseNode);

	return Parms.ReturnValue;
}


// Function FortniteGame.HomeBaseContext.TryGetHomebaseNodePageData
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             NodePageId                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHomebaseNodePage                OutHomebaseNodePage                                    (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHomeBaseContext::TryGetHomebaseNodePageData(const class FName NodePageId, struct FHomebaseNodePage* OutHomebaseNodePage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "TryGetHomebaseNodePageData");

	Params::HomeBaseContext_TryGetHomebaseNodePageData Parms{};

	Parms.NodePageId = NodePageId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHomebaseNodePage != nullptr)
		*OutHomebaseNodePage = std::move(Parms.OutHomebaseNodePage);

	return Parms.ReturnValue;
}


// Function FortniteGame.HomeBaseContext.TryGetHomebaseSquadData
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             SquadId                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHomebaseSquad                   OutHomebaseSquad                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHomeBaseContext::TryGetHomebaseSquadData(const class FName SquadId, struct FHomebaseSquad* OutHomebaseSquad) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HomeBaseContext", "TryGetHomebaseSquadData");

	Params::HomeBaseContext_TryGetHomebaseSquadData Parms{};

	Parms.SquadId = SquadId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHomebaseSquad != nullptr)
		*OutHomebaseSquad = std::move(Parms.OutHomebaseSquad);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHomebaseManager.GetHomebaseName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFortMcpProfileAccount*           McpProfile                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortHomebaseManager::GetHomebaseName(const class UFortMcpProfileAccount* McpProfile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortHomebaseManager", "GetHomebaseName");

	Params::FortHomebaseManager_GetHomebaseName Parms{};

	Parms.McpProfile = McpProfile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHomebaseManager.AreNodeCostsMet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             NodeID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortMcpProfileAccount*           McpProfile                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomebaseManager::AreNodeCostsMet(class FName NodeID, class UFortMcpProfileAccount* McpProfile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseManager", "AreNodeCostsMet");

	Params::FortHomebaseManager_AreNodeCostsMet Parms{};

	Parms.NodeID = NodeID;
	Parms.McpProfile = McpProfile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHomebaseManager.AreNodePrereqsMet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             NodeID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortMcpProfileAccount*           McpProfile                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomebaseManager::AreNodePrereqsMet(class FName NodeID, class UFortMcpProfileAccount* McpProfile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseManager", "AreNodePrereqsMet");

	Params::FortHomebaseManager_AreNodePrereqsMet Parms{};

	Parms.NodeID = NodeID;
	Parms.McpProfile = McpProfile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHomebaseManager.AreNodeQuestReqsMet
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             NodeID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortMcpProfileAccount*           McpProfile                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomebaseManager::AreNodeQuestReqsMet(class FName NodeID, class UFortMcpProfileAccount* McpProfile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseManager", "AreNodeQuestReqsMet");

	Params::FortHomebaseManager_AreNodeQuestReqsMet Parms{};

	Parms.NodeID = NodeID;
	Parms.McpProfile = McpProfile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHomebaseManager.GetNumAccountInventoryBonusTokens
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortMcpProfileAccount*           McpProfile                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortHomebaseManager::GetNumAccountInventoryBonusTokens(class UFortMcpProfileAccount* McpProfile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseManager", "GetNumAccountInventoryBonusTokens");

	Params::FortHomebaseManager_GetNumAccountInventoryBonusTokens Parms{};

	Parms.McpProfile = McpProfile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHomebaseManager.GetNumAccountLimitedItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortMcpProfileAccount*           McpProfile                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortHomebaseManager::GetNumAccountLimitedItems(class UFortMcpProfileAccount* McpProfile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseManager", "GetNumAccountLimitedItems");

	Params::FortHomebaseManager_GetNumAccountLimitedItems Parms{};

	Parms.McpProfile = McpProfile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHomebaseManager.GetNumWorldInventoryBonusTokens
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortMcpProfileAccount*           McpProfile                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortHomebaseManager::GetNumWorldInventoryBonusTokens(class UFortMcpProfileAccount* McpProfile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseManager", "GetNumWorldInventoryBonusTokens");

	Params::FortHomebaseManager_GetNumWorldInventoryBonusTokens Parms{};

	Parms.McpProfile = McpProfile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHomebaseManager.GetSquadCopyById
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SquadId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHomebaseSquad                   OutSquad                                               (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomebaseManager::GetSquadCopyById(class FName SquadId, struct FHomebaseSquad* OutSquad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseManager", "GetSquadCopyById");

	Params::FortHomebaseManager_GetSquadCopyById Parms{};

	Parms.SquadId = SquadId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSquad != nullptr)
		*OutSquad = std::move(Parms.OutSquad);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHomebaseManager.GetNodeInstanceIdByNodeId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             NodeID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortMcpProfileAccount*           McpProfile                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortHomebaseManager::GetNodeInstanceIdByNodeId(class FName NodeID, const class UFortMcpProfileAccount* McpProfile) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseManager", "GetNodeInstanceIdByNodeId");

	Params::FortHomebaseManager_GetNodeInstanceIdByNodeId Parms{};

	Parms.NodeID = NodeID;
	Parms.McpProfile = McpProfile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHomebaseManager.GetNumOwnedNodesInPage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             NodePageId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortMcpProfileAccount*           McpProfile                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPrereqNodeType                         NodeType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortHomebaseManager::GetNumOwnedNodesInPage(class FName NodePageId, class UFortMcpProfileAccount* McpProfile, EPrereqNodeType NodeType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseManager", "GetNumOwnedNodesInPage");

	Params::FortHomebaseManager_GetNumOwnedNodesInPage Parms{};

	Parms.NodePageId = NodePageId;
	Parms.McpProfile = McpProfile;
	Parms.NodeType = NodeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHomebaseManager.GetOwnedNodes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortMcpProfileAccount*           McpProfile                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UFortHomebaseManager::GetOwnedNodes(const class UFortMcpProfileAccount* McpProfile) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseManager", "GetOwnedNodes");

	Params::FortHomebaseManager_GetOwnedNodes Parms{};

	Parms.McpProfile = McpProfile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHomebaseManager.GetPrereqNodeTypeName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EPrereqNodeType                         NodeType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortHomebaseManager::GetPrereqNodeTypeName(EPrereqNodeType NodeType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseManager", "GetPrereqNodeTypeName");

	Params::FortHomebaseManager_GetPrereqNodeTypeName Parms{};

	Parms.NodeType = NodeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHomebaseManager.GetSquadPopulation
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             SquadId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortMcpProfileAccount*           McpProfile                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortWorker*>              OutSquadMembers                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortHomebaseManager::GetSquadPopulation(class FName SquadId, const class UFortMcpProfileAccount* McpProfile, TArray<class UFortWorker*>* OutSquadMembers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseManager", "GetSquadPopulation");

	Params::FortHomebaseManager_GetSquadPopulation Parms{};

	Parms.SquadId = SquadId;
	Parms.McpProfile = McpProfile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSquadMembers != nullptr)
		*OutSquadMembers = std::move(Parms.OutSquadMembers);
}


// Function FortniteGame.FortHomebaseManager.GetWorkerInSquadSlot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             SquadId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIdx                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortMcpProfileAccount*           McpProfile                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorker*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortWorker* UFortHomebaseManager::GetWorkerInSquadSlot(class FName SquadId, int32 SlotIdx, const class UFortMcpProfileAccount* McpProfile) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseManager", "GetWorkerInSquadSlot");

	Params::FortHomebaseManager_GetWorkerInSquadSlot Parms{};

	Parms.SquadId = SquadId;
	Parms.SlotIdx = SlotIdx;
	Parms.McpProfile = McpProfile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHomebaseManager.IsNodeOwned
// (Final, Native, Private, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             NodeID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortMcpProfileAccount*           McpProfile                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomebaseManager::IsNodeOwned(class FName NodeID, const class UFortMcpProfileAccount* McpProfile) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseManager", "IsNodeOwned");

	Params::FortHomebaseManager_IsNodeOwned Parms{};

	Parms.NodeID = NodeID;
	Parms.McpProfile = McpProfile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHomebaseManager.IsSquadSlotUnlocked
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             SquadId                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIdx                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortMcpProfileAccount*           McpProfile                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomebaseManager::IsSquadSlotUnlocked(class FName SquadId, int32 SlotIdx, const class UFortMcpProfileAccount* McpProfile) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseManager", "IsSquadSlotUnlocked");

	Params::FortHomebaseManager_IsSquadSlotUnlocked Parms{};

	Parms.SquadId = SquadId;
	Parms.SlotIdx = SlotIdx;
	Parms.McpProfile = McpProfile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHomebaseNodeItemTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomebaseNodeItemTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseNodeItemTooltip", "GetNumericValue");

	Params::FortHomebaseNodeItemTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHomebaseNodeItemTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomebaseNodeItemTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseNodeItemTooltip", "GetTextForToken");

	Params::FortHomebaseNodeItemTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHomebaseNodeItemTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortHomebaseNodeItemTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomebaseNodeItemTooltip", "GetTokenizedDescriptionText");

	Params::FortHomebaseNodeItemTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHomeTeleporterInterface.OnHomeTeleporterBound
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OldHomeActor                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IFortHomeTeleporterInterface::OnHomeTeleporterBound(class AFortPlayerPawn* PlayerPawn, const class AActor* OldHomeActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomeTeleporterInterface", "OnHomeTeleporterBound");

	Params::FortHomeTeleporterInterface_OnHomeTeleporterBound Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.OldHomeActor = OldHomeActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortHomeTeleporterInterface.OnHomeTeleporterBoundServer
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OldHomeActor                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IFortHomeTeleporterInterface::OnHomeTeleporterBoundServer(class AFortPlayerPawn* PlayerPawn, const class AActor* OldHomeActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomeTeleporterInterface", "OnHomeTeleporterBoundServer");

	Params::FortHomeTeleporterInterface_OnHomeTeleporterBoundServer Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.OldHomeActor = OldHomeActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortHomeTeleporterInterface.OnHomeTeleporterUnbound
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           NewHomeActor                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IFortHomeTeleporterInterface::OnHomeTeleporterUnbound(class AFortPlayerPawn* PlayerPawn, const class AActor* NewHomeActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomeTeleporterInterface", "OnHomeTeleporterUnbound");

	Params::FortHomeTeleporterInterface_OnHomeTeleporterUnbound Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.NewHomeActor = NewHomeActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortHomeTeleporterInterface.OnHomeTeleporterUnboundServer
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           NewHomeActor                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IFortHomeTeleporterInterface::OnHomeTeleporterUnboundServer(class AFortPlayerPawn* PlayerPawn, const class AActor* NewHomeActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHomeTeleporterInterface", "OnHomeTeleporterUnboundServer");

	Params::FortHomeTeleporterInterface_OnHomeTeleporterUnboundServer Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.NewHomeActor = NewHomeActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortHUDTargetUnderReticleInterface.GetHUDTargetDifficultyRating
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IFortHUDTargetUnderReticleInterface::GetHUDTargetDifficultyRating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDTargetUnderReticleInterface", "GetHUDTargetDifficultyRating");

	Params::FortHUDTargetUnderReticleInterface_GetHUDTargetDifficultyRating Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHUDTargetUnderReticleInterface.GetHUDTargetDisplayModifiers
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FText>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FText> IFortHUDTargetUnderReticleInterface::GetHUDTargetDisplayModifiers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDTargetUnderReticleInterface", "GetHUDTargetDisplayModifiers");

	Params::FortHUDTargetUnderReticleInterface_GetHUDTargetDisplayModifiers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHUDTargetUnderReticleInterface.GetHUDTargetDisplayName
// (Native, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText IFortHUDTargetUnderReticleInterface::GetHUDTargetDisplayName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDTargetUnderReticleInterface", "GetHUDTargetDisplayName");

	Params::FortHUDTargetUnderReticleInterface_GetHUDTargetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHUDTargetUnderReticleInterface.GetHUDTargetHealthPercentage
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IFortHUDTargetUnderReticleInterface::GetHUDTargetHealthPercentage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDTargetUnderReticleInterface", "GetHUDTargetHealthPercentage");

	Params::FortHUDTargetUnderReticleInterface_GetHUDTargetHealthPercentage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHUDTargetUnderReticleInterface.GetHUDTargetUpgradeDisplayName
// (Native, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText IFortHUDTargetUnderReticleInterface::GetHUDTargetUpgradeDisplayName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHUDTargetUnderReticleInterface", "GetHUDTargetUpgradeDisplayName");

	Params::FortHUDTargetUnderReticleInterface_GetHUDTargetUpgradeDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortHuskAnimInstance.AnimNotify_SleepingFullyBlended
// (Final, Native, Protected)
// Parameters:
// class UAnimNotify*                      Notify                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHuskAnimInstance::AnimNotify_SleepingFullyBlended(const class UAnimNotify* Notify)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHuskAnimInstance", "AnimNotify_SleepingFullyBlended");

	Params::FortHuskAnimInstance_AnimNotify_SleepingFullyBlended Parms{};

	Parms.Notify = Notify;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHuskAnimInstance.SetHuskAnimType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortHuskAnimType                       NewHuskAnimType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortHuskAnimInstance::SetHuskAnimType(EFortHuskAnimType NewHuskAnimType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHuskAnimInstance", "SetHuskAnimType");

	Params::FortHuskAnimInstance_SetHuskAnimType Parms{};

	Parms.NewHuskAnimType = NewHuskAnimType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortHuskAnimInstance.GetHuskAnimType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortHuskAnimType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortHuskAnimType UFortHuskAnimInstance::GetHuskAnimType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortHuskAnimInstance", "GetHuskAnimType");

	Params::FortHuskAnimInstance_GetHuskAnimType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortInfluenceMap.K2_AddInfluenceSource
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Position                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SourceName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Strength                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortInfluenceMap::K2_AddInfluenceSource(class UObject* WorldContext, const struct FVector& Position, const class FString& SourceName, float Strength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortInfluenceMap", "K2_AddInfluenceSource");

	Params::FortInfluenceMap_K2_AddInfluenceSource Parms{};

	Parms.WorldContext = WorldContext;
	Parms.Position = std::move(Position);
	Parms.SourceName = std::move(SourceName);
	Parms.Strength = Strength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortInfluenceMap.K2_GetInfluenceSourcePositions
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  InfluenceSourcePositions                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortInfluenceMap::K2_GetInfluenceSourcePositions(class UObject* WorldContext, TArray<struct FVector>* InfluenceSourcePositions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortInfluenceMap", "K2_GetInfluenceSourcePositions");

	Params::FortInfluenceMap_K2_GetInfluenceSourcePositions Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (InfluenceSourcePositions != nullptr)
		*InfluenceSourcePositions = std::move(Parms.InfluenceSourcePositions);
}


// Function FortniteGame.FortInGameMapManager.GetCurrent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortInGameMapManager*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortInGameMapManager* AFortInGameMapManager::GetCurrent(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortInGameMapManager", "GetCurrent");

	Params::FortInGameMapManager_GetCurrent Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortInGameMapManager.BroadcastExplorationEvents
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// TArray<struct FTeamMapExplorationEvent> Events                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortInGameMapManager::BroadcastExplorationEvents(const TArray<struct FTeamMapExplorationEvent>& Events)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInGameMapManager", "BroadcastExplorationEvents");

	Params::FortInGameMapManager_BroadcastExplorationEvents Parms{};

	Parms.Events = std::move(Events);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortInGameMapManager.OnRep_MapData
// (Final, Native, Protected)

void AFortInGameMapManager::OnRep_MapData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInGameMapManager", "OnRep_MapData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortInGameMapManager.PaintOnFog
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          WorldCoords                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortTeam                               Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortInGameMapManager::PaintOnFog(const struct FVector& WorldCoords, EFortTeam Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInGameMapManager", "PaintOnFog");

	Params::FortInGameMapManager_PaintOnFog Parms{};

	Parms.WorldCoords = std::move(WorldCoords);
	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortInitializationInterface.MatchStarted
// (Native, Public)

void IFortInitializationInterface::MatchStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInitializationInterface", "MatchStarted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortInitializationInterface.NeedsWorldReady
// (Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IFortInitializationInterface::NeedsWorldReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInitializationInterface", "NeedsWorldReady");

	Params::FortInitializationInterface_NeedsWorldReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortInitializationInterface.WorldReady
// (Native, Public)

void IFortInitializationInterface::WorldReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInitializationInterface", "WorldReady");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortInitializeFromObjectInterface.InitFromObject
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InitObject                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IFortInitializeFromObjectInterface::InitFromObject(class UObject* InitObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInitializeFromObjectInterface", "InitFromObject");

	Params::FortInitializeFromObjectInterface_InitFromObject Parms{};

	Parms.InitObject = InitObject;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortInteractInterface.ServerOnAttemptInteract
// (Native, Public, HasOutParams)
// Parameters:
// struct FInteractionType                 InteractType                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IFortInteractInterface::ServerOnAttemptInteract(const struct FInteractionType& InteractType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInteractInterface", "ServerOnAttemptInteract");

	Params::FortInteractInterface_ServerOnAttemptInteract Parms{};

	Parms.InteractType = std::move(InteractType);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortInventory.HandleInventoryLocalUpdate
// (Final, Native, Public)

void AFortInventory::HandleInventoryLocalUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortInventory", "HandleInventoryLocalUpdate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuestManager.ForceTriggerQuestsUpdated
// (Final, Native, Public, BlueprintCallable)

void UFortQuestManager::ForceTriggerQuestsUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "ForceTriggerQuestsUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuestManager.GetBroadcasterQuestWithOpenWindow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortQuestItem* UFortQuestManager::GetBroadcasterQuestWithOpenWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "GetBroadcasterQuestWithOpenWindow");

	Params::FortQuestManager_GetBroadcasterQuestWithOpenWindow Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestManager.GetCompletedQuests
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortQuestItem*>           OutCompletedQuests                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortQuestManager::GetCompletedQuests(TArray<class UFortQuestItem*>* OutCompletedQuests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "GetCompletedQuests");

	Params::FortQuestManager_GetCompletedQuests Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCompletedQuests != nullptr)
		*OutCompletedQuests = std::move(Parms.OutCompletedQuests);
}


// Function FortniteGame.FortQuestManager.GetCurrentQuests
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortQuestItem*>           OutCurrentQuests                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortQuestManager::GetCurrentQuests(TArray<class UFortQuestItem*>* OutCurrentQuests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "GetCurrentQuests");

	Params::FortQuestManager_GetCurrentQuests Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutCurrentQuests != nullptr)
		*OutCurrentQuests = std::move(Parms.OutCurrentQuests);
}


// Function FortniteGame.FortQuestManager.GetNextUnseenQuest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortQuestType                          QuestType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortQuestItem*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortQuestItem* UFortQuestManager::GetNextUnseenQuest(EFortQuestType QuestType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "GetNextUnseenQuest");

	Params::FortQuestManager_GetNextUnseenQuest Parms{};

	Parms.QuestType = QuestType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestManager.GetPinnedQuests
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortQuestItem*>           OutPinnedQuestItems                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortQuestManager::GetPinnedQuests(TArray<class UFortQuestItem*>* OutPinnedQuestItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "GetPinnedQuests");

	Params::FortQuestManager_GetPinnedQuests Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPinnedQuestItems != nullptr)
		*OutPinnedQuestItems = std::move(Parms.OutPinnedQuestItems);
}


// Function FortniteGame.FortQuestManager.GrantFirstDailyQuest
// (Final, Native, Public, BlueprintCallable)

void UFortQuestManager::GrantFirstDailyQuest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "GrantFirstDailyQuest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuestManager.IsMainQuest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestManager::IsMainQuest(class UFortQuestItem* Quest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "IsMainQuest");

	Params::FortQuestManager_IsMainQuest Parms{};

	Parms.Quest = Quest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestManager.SendCustomStatEvent
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// struct FDataTableRowHandle              ObjectiveStat                                          (Parm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForceFlush                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestManager::SendCustomStatEvent(const struct FDataTableRowHandle& ObjectiveStat, int32 Count, bool bForceFlush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "SendCustomStatEvent");

	Params::FortQuestManager_SendCustomStatEvent Parms{};

	Parms.ObjectiveStat = std::move(ObjectiveStat);
	Parms.Count = Count;
	Parms.bForceFlush = bForceFlush;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuestManager.SetQuestPinned
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestManager::SetQuestPinned(class UFortQuestItem* Quest, bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "SetQuestPinned");

	Params::FortQuestManager_SetQuestPinned Parms{};

	Parms.Quest = Quest;
	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestManager.ClaimNextCompletedQuestReward
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// EFortQuestType                          QuestType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestManager::ClaimNextCompletedQuestReward(EFortQuestType QuestType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "ClaimNextCompletedQuestReward");

	Params::FortQuestManager_ClaimNextCompletedQuestReward Parms{};

	Parms.QuestType = QuestType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuestManager.ClaimQuestReward
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestManager::ClaimQuestReward(const class UFortQuestItem* Quest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "ClaimQuestReward");

	Params::FortQuestManager_ClaimQuestReward Parms{};

	Parms.Quest = Quest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuestManager.ClaimSelectedQuestReward
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RewardIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestManager::ClaimSelectedQuestReward(const class UFortQuestItem* Quest, int32 RewardIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "ClaimSelectedQuestReward");

	Params::FortQuestManager_ClaimSelectedQuestReward Parms{};

	Parms.Quest = Quest;
	Parms.RewardIndex = RewardIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuestManager.GetCurrentQuestsCategories
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortQuestCategory*>       Categories                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortQuestManager::GetCurrentQuestsCategories(TArray<class UFortQuestCategory*>* Categories) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "GetCurrentQuestsCategories");

	Params::FortQuestManager_GetCurrentQuestsCategories Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Categories != nullptr)
		*Categories = std::move(Parms.Categories);
}


// Function FortniteGame.FortQuestManager.GetMainQuest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItem*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortQuestItem* UFortQuestManager::GetMainQuest() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "GetMainQuest");

	Params::FortQuestManager_GetMainQuest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestManager.GetQuestCategory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItem*                   QuestItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UFortQuestCategory*         ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class UFortQuestCategory* UFortQuestManager::GetQuestCategory(class UFortQuestItem* QuestItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "GetQuestCategory");

	Params::FortQuestManager_GetQuestCategory Parms{};

	Parms.QuestItem = QuestItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestManager.GetQuestWithDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItemDefinition*         Definition                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortQuestItem*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortQuestItem* UFortQuestManager::GetQuestWithDefinition(const class UFortQuestItemDefinition* Definition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "GetQuestWithDefinition");

	Params::FortQuestManager_GetQuestWithDefinition Parms{};

	Parms.Definition = Definition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestManager.GetRemainingDailyQuestRerolls
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortQuestManager::GetRemainingDailyQuestRerolls() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "GetRemainingDailyQuestRerolls");

	Params::FortQuestManager_GetRemainingDailyQuestRerolls Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestManager.GetSourceAndContextTags
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGameplayTagContainer            OutSourceTags                                          (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            OutContextTags                                         (Parm, OutParm, NativeAccessSpecifierPublic)

void UFortQuestManager::GetSourceAndContextTags(struct FGameplayTagContainer* OutSourceTags, struct FGameplayTagContainer* OutContextTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "GetSourceAndContextTags");

	Params::FortQuestManager_GetSourceAndContextTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSourceTags != nullptr)
		*OutSourceTags = std::move(Parms.OutSourceTags);

	if (OutContextTags != nullptr)
		*OutContextTags = std::move(Parms.OutContextTags);
}


// Function FortniteGame.FortQuestManager.HasCompletedObjective
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItemDefinition*         Definition                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDataTableRowHandle              ObjectiveStatHandle                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestManager::HasCompletedObjective(const class UFortQuestItemDefinition* Definition, const struct FDataTableRowHandle& ObjectiveStatHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "HasCompletedObjective");

	Params::FortQuestManager_HasCompletedObjective Parms{};

	Parms.Definition = Definition;
	Parms.ObjectiveStatHandle = std::move(ObjectiveStatHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestManager.HasCompletedObjectiveWithName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItemDefinition*         Definition                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BackendName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestManager::HasCompletedObjectiveWithName(const class UFortQuestItemDefinition* Definition, class FName BackendName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "HasCompletedObjectiveWithName");

	Params::FortQuestManager_HasCompletedObjectiveWithName Parms{};

	Parms.Definition = Definition;
	Parms.BackendName = BackendName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestManager.HasCompletedQuest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItemDefinition*         Definition                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestManager::HasCompletedQuest(const class UFortQuestItemDefinition* Definition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "HasCompletedQuest");

	Params::FortQuestManager_HasCompletedQuest Parms{};

	Parms.Definition = Definition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestManager.HasQuestBeenSeenLocally
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestManager::HasQuestBeenSeenLocally(const class UFortQuestItem* Quest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "HasQuestBeenSeenLocally");

	Params::FortQuestManager_HasQuestBeenSeenLocally Parms{};

	Parms.Quest = Quest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestManager.HasUnsavedPrimaryMissionProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestManager::HasUnsavedPrimaryMissionProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "HasUnsavedPrimaryMissionProgress");

	Params::FortQuestManager_HasUnsavedPrimaryMissionProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestManager.HasUnseenQuests
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestManager::HasUnseenQuests() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "HasUnseenQuests");

	Params::FortQuestManager_HasUnseenQuests Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestManager.IsObjectiveInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItemDefinition*         Definition                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDataTableRowHandle              ObjectiveStatHandle                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestManager::IsObjectiveInProgress(const class UFortQuestItemDefinition* Definition, const struct FDataTableRowHandle& ObjectiveStatHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "IsObjectiveInProgress");

	Params::FortQuestManager_IsObjectiveInProgress Parms{};

	Parms.Definition = Definition;
	Parms.ObjectiveStatHandle = std::move(ObjectiveStatHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestManager.IsObjectiveWithNameInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItemDefinition*         Definition                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BackendName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestManager::IsObjectiveWithNameInProgress(const class UFortQuestItemDefinition* Definition, class FName BackendName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "IsObjectiveWithNameInProgress");

	Params::FortQuestManager_IsObjectiveWithNameInProgress Parms{};

	Parms.Definition = Definition;
	Parms.BackendName = BackendName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestManager.IsQuestInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItemDefinition*         Definition                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestManager::IsQuestInProgress(const class UFortQuestItemDefinition* Definition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "IsQuestInProgress");

	Params::FortQuestManager_IsQuestInProgress Parms{};

	Parms.Definition = Definition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestManager.MarkQuestSeen
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UFortQuestItem*                   Quest                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestManager::MarkQuestSeen(class UFortQuestItem* Quest) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "MarkQuestSeen");

	Params::FortQuestManager_MarkQuestSeen Parms{};

	Parms.Quest = Quest;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuestManager.MarkQuestsSeen
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// bool                                    bOnlyMarkPendingSeenQuests                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestManager::MarkQuestsSeen(bool bOnlyMarkPendingSeenQuests) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "MarkQuestsSeen");

	Params::FortQuestManager_MarkQuestsSeen Parms{};

	Parms.bOnlyMarkPendingSeenQuests = bOnlyMarkPendingSeenQuests;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuestManager.RerollDailyQuest
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UFortQuestItem*                   QuestToDiscard                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestManager::RerollDailyQuest(const class UFortQuestItem* QuestToDiscard) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestManager", "RerollDailyQuest");

	Params::FortQuestManager_RerollDailyQuest Parms{};

	Parms.QuestToDiscard = QuestToDiscard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKeepEventInfo.GetWave
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FKeepEventWaveData         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FKeepEventWaveData UFortKeepEventInfo::GetWave(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeepEventInfo", "GetWave");

	Params::FortKeepEventInfo_GetWave Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKeepEventInfo.NumberOfWaves
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortKeepEventInfo::NumberOfWaves()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeepEventInfo", "NumberOfWaves");

	Params::FortKeepEventInfo_NumberOfWaves Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKeepEventList.GetEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKeepEventInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FKeepEventInfo UFortKeepEventList::GetEvent(int32 Idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeepEventList", "GetEvent");

	Params::FortKeepEventList_GetEvent Parms{};

	Parms.Idx = Idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKeepEventList.GetEventDescription
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Idx                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortKeepEventList::GetEventDescription(int32 Idx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeepEventList", "GetEventDescription");

	Params::FortKeepEventList_GetEventDescription Parms{};

	Parms.Idx = Idx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKeepDefenseManager.GetNumberAliveEnemies
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortKeepDefenseManager::GetNumberAliveEnemies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeepDefenseManager", "GetNumberAliveEnemies");

	Params::FortKeepDefenseManager_GetNumberAliveEnemies Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKeepDefenseManager.GetWaveDescription
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AFortKeepDefenseManager::GetWaveDescription()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeepDefenseManager", "GetWaveDescription");

	Params::FortKeepDefenseManager_GetWaveDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKeepDefenseManager.GoToNextWave
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFortKeepDefenseManager::GoToNextWave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeepDefenseManager", "GoToNextWave");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKeepDefenseManager.SkipWarmup
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFortKeepDefenseManager::SkipWarmup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeepDefenseManager", "SkipWarmup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKeepDefenseManager.StartAIEncounter
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UFortAIEncounterInfo> EncounterTemplate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAISpawnGroupProgressionInfo* SpawnGroupProgressionInfo                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ActivationDelay                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EncounterDifficultyLevel                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AliveMultiplier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAIEncounterInfo*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAIEncounterInfo* AFortKeepDefenseManager::StartAIEncounter(TSubclassOf<class UFortAIEncounterInfo> EncounterTemplate, class AActor* TargetActor, class UFortAISpawnGroupProgressionInfo* SpawnGroupProgressionInfo, int32 ActivationDelay, int32 EncounterDifficultyLevel, float AliveMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeepDefenseManager", "StartAIEncounter");

	Params::FortKeepDefenseManager_StartAIEncounter Parms{};

	Parms.EncounterTemplate = EncounterTemplate;
	Parms.TargetActor = TargetActor;
	Parms.SpawnGroupProgressionInfo = SpawnGroupProgressionInfo;
	Parms.ActivationDelay = ActivationDelay;
	Parms.EncounterDifficultyLevel = EncounterDifficultyLevel;
	Parms.AliveMultiplier = AliveMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKeepDefenseManager.StartEvent
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UFortKeepEventInfo*               EventTemplate                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DifficultyLevelOffset                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortKeepDefenseManager::StartEvent(class UFortKeepEventInfo* EventTemplate, int32 DifficultyLevelOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeepDefenseManager", "StartEvent");

	Params::FortKeepDefenseManager_StartEvent Parms{};

	Parms.EventTemplate = EventTemplate;
	Parms.DifficultyLevelOffset = DifficultyLevelOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKeepDefenseManager.StartEventFromList
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UFortKeepEventList*               EventList                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   EventNumber                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortKeepDefenseManager::StartEventFromList(class UFortKeepEventList* EventList, int32 EventNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeepDefenseManager", "StartEventFromList");

	Params::FortKeepDefenseManager_StartEventFromList Parms{};

	Parms.EventList = EventList;
	Parms.EventNumber = EventNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKeepDefenseManager.StopEvent
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AFortKeepDefenseManager::StopEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortKeepDefenseManager", "StopEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.AddRegenItemToInventoryOwner
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IFortInventoryOwnerInterface>InventoryOwner                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
// class UFortWorldItemDefinition*         RegenItemDefinition                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumberToGive                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNotifyPlayer                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::AddRegenItemToInventoryOwner(TScriptInterface<class IFortInventoryOwnerInterface> InventoryOwner, const class UFortWorldItemDefinition* RegenItemDefinition, int32 NumberToGive, bool bNotifyPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "AddRegenItemToInventoryOwner");

	Params::FortKismetLibrary_AddRegenItemToInventoryOwner Parms{};

	Parms.InventoryOwner = InventoryOwner;
	Parms.RegenItemDefinition = RegenItemDefinition;
	Parms.NumberToGive = NumberToGive;
	Parms.bNotifyPlayer = bNotifyPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.ApplyEncounterOptionOverridesFromWaveDataToEncounterSettings
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FTieredWaveSetData               WaveData                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FFortEncounterSettings           EncounterSettings                                      (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FFortEncounterSettings           ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortEncounterSettings UFortKismetLibrary::ApplyEncounterOptionOverridesFromWaveDataToEncounterSettings(const struct FTieredWaveSetData& WaveData, struct FFortEncounterSettings& EncounterSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "ApplyEncounterOptionOverridesFromWaveDataToEncounterSettings");

	Params::FortKismetLibrary_ApplyEncounterOptionOverridesFromWaveDataToEncounterSettings Parms{};

	Parms.WaveData = std::move(WaveData);
	Parms.EncounterSettings = std::move(EncounterSettings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	EncounterSettings = std::move(Parms.EncounterSettings);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.ApplyGlobalEnvironmentDamageToActor
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           DamageTargetActor                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EnvironmentDamage                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            AdditionalContextTags                                  (Parm, NativeAccessSpecifierPublic)
// TSubclassOf<class UGameplayEffect>      EnvironmentDamageGE                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::ApplyGlobalEnvironmentDamageToActor(class AActor* DamageTargetActor, float EnvironmentDamage, const struct FGameplayTagContainer& AdditionalContextTags, TSubclassOf<class UGameplayEffect> EnvironmentDamageGE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "ApplyGlobalEnvironmentDamageToActor");

	Params::FortKismetLibrary_ApplyGlobalEnvironmentDamageToActor Parms{};

	Parms.DamageTargetActor = DamageTargetActor;
	Parms.EnvironmentDamage = EnvironmentDamage;
	Parms.AdditionalContextTags = std::move(AdditionalContextTags);
	Parms.EnvironmentDamageGE = EnvironmentDamageGE;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.ApplyGlobalEnvironmentGameplayEffectToActor
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           EffectTargetActor                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UGameplayEffect>      GameplayEffect                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GameplayEffectLevel                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            AdditionalContextTags                                  (Parm, NativeAccessSpecifierPublic)
// struct FActiveGameplayEffectHandle      ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FActiveGameplayEffectHandle UFortKismetLibrary::ApplyGlobalEnvironmentGameplayEffectToActor(class AActor* EffectTargetActor, TSubclassOf<class UGameplayEffect> GameplayEffect, int32 GameplayEffectLevel, const struct FGameplayTagContainer& AdditionalContextTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "ApplyGlobalEnvironmentGameplayEffectToActor");

	Params::FortKismetLibrary_ApplyGlobalEnvironmentGameplayEffectToActor Parms{};

	Parms.EffectTargetActor = EffectTargetActor;
	Parms.GameplayEffect = GameplayEffect;
	Parms.GameplayEffectLevel = GameplayEffectLevel;
	Parms.AdditionalContextTags = std::move(AdditionalContextTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.AuthorityGetFortPossessedPlayerPawns
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AFortPlayerPawn*>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AFortPlayerPawn*> UFortKismetLibrary::AuthorityGetFortPossessedPlayerPawns(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "AuthorityGetFortPossessedPlayerPawns");

	Params::FortKismetLibrary_AuthorityGetFortPossessedPlayerPawns Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.BroadcastMessage
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             MESSAGE                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortKismetLibrary::BroadcastMessage(class UObject* WorldContextObject, const class FText& MESSAGE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "BroadcastMessage");

	Params::FortKismetLibrary_BroadcastMessage Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MESSAGE = std::move(MESSAGE);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.BroadcastPlayerImpactAtLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*                Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Position                                               (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Loudness                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Duration                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRelativePosition                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::BroadcastPlayerImpactAtLocation(class UObject* WorldContextObject, class APlayerController* Player, const struct FVector& Position, float* Loudness, float* Duration, bool bRelativePosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "BroadcastPlayerImpactAtLocation");

	Params::FortKismetLibrary_BroadcastPlayerImpactAtLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Player = Player;
	Parms.Position = std::move(Position);
	Parms.bRelativePosition = bRelativePosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Loudness != nullptr)
		*Loudness = Parms.Loudness;

	if (Duration != nullptr)
		*Duration = Parms.Duration;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.BroadcastSound
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundBase*                       InSound                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VolumeMultiplier                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PitchMultiplier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::BroadcastSound(class UObject* WorldContextObject, class USoundBase* InSound, float VolumeMultiplier, float PitchMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "BroadcastSound");

	Params::FortKismetLibrary_BroadcastSound Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InSound = InSound;
	Parms.VolumeMultiplier = VolumeMultiplier;
	Parms.PitchMultiplier = PitchMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.BroadcastSoundAtLocation
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundBase*                       InSound                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VolumeMultiplier                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PitchMultiplier                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::BroadcastSoundAtLocation(class UObject* WorldContextObject, class USoundBase* InSound, const struct FVector& Location, float VolumeMultiplier, float PitchMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "BroadcastSoundAtLocation");

	Params::FortKismetLibrary_BroadcastSoundAtLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InSound = InSound;
	Parms.Location = std::move(Location);
	Parms.VolumeMultiplier = VolumeMultiplier;
	Parms.PitchMultiplier = PitchMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.ClearTutorialHighlights
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::ClearTutorialHighlights(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "ClearTutorialHighlights");

	Params::FortKismetLibrary_ClearTutorialHighlights Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.CloseTalkingHead
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::CloseTalkingHead(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "CloseTalkingHead");

	Params::FortKismetLibrary_CloseTalkingHead Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.ConvertToGameTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InRealTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortKismetLibrary::ConvertToGameTime(class UObject* WorldContextObject, float InRealTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "ConvertToGameTime");

	Params::FortKismetLibrary_ConvertToGameTime Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InRealTime = InRealTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.ConvertToRealTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InGameTime                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortKismetLibrary::ConvertToRealTime(class UObject* WorldContextObject, float InGameTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "ConvertToRealTime");

	Params::FortKismetLibrary_ConvertToRealTime Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InGameTime = InGameTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.CreateNewSplineObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Param_Outer                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortSpline*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortSpline* UFortKismetLibrary::CreateNewSplineObject(class UObject* Param_Outer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "CreateNewSplineObject");

	Params::FortKismetLibrary_CreateNewSplineObject Parms{};

	Parms.Param_Outer = Param_Outer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.DisableTutorialHighlight
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             WidgetName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::DisableTutorialHighlight(class UObject* WorldContextObject, class FName WidgetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "DisableTutorialHighlight");

	Params::FortKismetLibrary_DisableTutorialHighlight Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.WidgetName = WidgetName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.EffectContextAddSourceObject
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FGameplayEffectContextHandle     EffectContext                                          (Parm, NativeAccessSpecifierPublic)
// class UObject*                          Src                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::EffectContextAddSourceObject(const struct FGameplayEffectContextHandle& EffectContext, class UObject* Src)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "EffectContextAddSourceObject");

	Params::FortKismetLibrary_EffectContextAddSourceObject Parms{};

	Parms.EffectContext = std::move(EffectContext);
	Parms.Src = Src;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.EmptyQuickBarSlot
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortQuickBars                          QuickBarType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::EmptyQuickBarSlot(class UObject* WorldContextObject, EFortQuickBars QuickBarType, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "EmptyQuickBarSlot");

	Params::FortKismetLibrary_EmptyQuickBarSlot Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.QuickBarType = QuickBarType;
	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.EnableTutorialHighlight
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             WidgetName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::EnableTutorialHighlight(class UObject* WorldContextObject, class FName WidgetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "EnableTutorialHighlight");

	Params::FortKismetLibrary_EnableTutorialHighlight Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.WidgetName = WidgetName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.EndWaitForConfirmationDialog
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortDialogExternalLatentActionHandleHandle                                                 (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortKismetLibrary::EndWaitForConfirmationDialog(class UObject* WorldContextObject, struct FFortDialogExternalLatentActionHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "EndWaitForConfirmationDialog");

	Params::FortKismetLibrary_EndWaitForConfirmationDialog Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Handle = std::move(Parms.Handle);
}


// Function FortniteGame.FortKismetLibrary.EqualEqual_FFortDialogWaitingForLatentActionHandle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFortDialogExternalLatentActionHandleA                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FFortDialogExternalLatentActionHandleB                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::EqualEqual_FFortDialogWaitingForLatentActionHandle(const struct FFortDialogExternalLatentActionHandle& A, const struct FFortDialogExternalLatentActionHandle& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "EqualEqual_FFortDialogWaitingForLatentActionHandle");

	Params::FortKismetLibrary_EqualEqual_FFortDialogWaitingForLatentActionHandle Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.EqualEqual_UniqueNetIdReplUniqueNetIdRepl
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FUniqueNetIdRepl                 A                                                      (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 B                                                      (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::EqualEqual_UniqueNetIdReplUniqueNetIdRepl(const struct FUniqueNetIdRepl& A, const struct FUniqueNetIdRepl& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "EqualEqual_UniqueNetIdReplUniqueNetIdRepl");

	Params::FortKismetLibrary_EqualEqual_UniqueNetIdReplUniqueNetIdRepl Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.EquipFortAbilitySet
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IAbilitySystemInterface>AbilitySystemInterfaceActor                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
// class UFortAbilitySet*                  AbilitySet                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          OverrideSourceObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortAbilitySetHandle            ReturnValue                                            (Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

struct FFortAbilitySetHandle UFortKismetLibrary::EquipFortAbilitySet(TScriptInterface<class IAbilitySystemInterface> AbilitySystemInterfaceActor, class UFortAbilitySet* AbilitySet, class UObject* OverrideSourceObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "EquipFortAbilitySet");

	Params::FortKismetLibrary_EquipFortAbilitySet Parms{};

	Parms.AbilitySystemInterfaceActor = AbilitySystemInterfaceActor;
	Parms.AbilitySet = AbilitySet;
	Parms.OverrideSourceObject = OverrideSourceObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.EquipItemToQuickBarSlot
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItemDefinition*              ItemDefinition                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortQuickBars                          QuickBarType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::EquipItemToQuickBarSlot(class UObject* WorldContextObject, const class UFortItemDefinition* ItemDefinition, EFortQuickBars QuickBarType, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "EquipItemToQuickBarSlot");

	Params::FortKismetLibrary_EquipItemToQuickBarSlot Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ItemDefinition = ItemDefinition;
	Parms.QuickBarType = QuickBarType;
	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.EvaluateCurveTableRow
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FCurveTableRowHandle             CurveTableRowHandle                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   InXY                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutXY                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ContextString                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::EvaluateCurveTableRow(const struct FCurveTableRowHandle& CurveTableRowHandle, float InXY, float* OutXY, const class FString& ContextString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "EvaluateCurveTableRow");

	Params::FortKismetLibrary_EvaluateCurveTableRow Parms{};

	Parms.CurveTableRowHandle = std::move(CurveTableRowHandle);
	Parms.InXY = InXY;
	Parms.ContextString = std::move(ContextString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutXY != nullptr)
		*OutXY = Parms.OutXY;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.ExecuteClientEvent
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortClientEventName             EventType                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class UObject*                          EventSource                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          EventFocus                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::ExecuteClientEvent(class UObject* WorldContextObject, const struct FFortClientEventName& EventType, class UObject* EventSource, class UObject* EventFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "ExecuteClientEvent");

	Params::FortKismetLibrary_ExecuteClientEvent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EventType = std::move(EventType);
	Parms.EventSource = EventSource;
	Parms.EventFocus = EventFocus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.FilterSingleTargetActor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortTargetFilter                Filter                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                           RequestingActor                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::FilterSingleTargetActor(class UObject* WorldContextObject, const struct FFortTargetFilter& Filter, const class AActor* RequestingActor, class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "FilterSingleTargetActor");

	Params::FortKismetLibrary_FilterSingleTargetActor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Filter = std::move(Filter);
	Parms.RequestingActor = RequestingActor;
	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.FilterSingleTargetHitResult
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortTargetFilter                Filter                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                           RequestingActor                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       HitResult                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::FilterSingleTargetHitResult(class UObject* WorldContextObject, const struct FFortTargetFilter& Filter, const class AActor* RequestingActor, const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "FilterSingleTargetHitResult");

	Params::FortKismetLibrary_FilterSingleTargetHitResult Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Filter = std::move(Filter);
	Parms.RequestingActor = RequestingActor;
	Parms.HitResult = std::move(HitResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.FilterTargetActorList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortTargetFilter                Filter                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                           RequestingActor                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ActorsToFilter                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bAtLeastOneActorLeft                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UFortKismetLibrary::FilterTargetActorList(class UObject* WorldContextObject, const struct FFortTargetFilter& Filter, const class AActor* RequestingActor, const TArray<class AActor*>& ActorsToFilter, bool* bAtLeastOneActorLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "FilterTargetActorList");

	Params::FortKismetLibrary_FilterTargetActorList Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Filter = std::move(Filter);
	Parms.RequestingActor = RequestingActor;
	Parms.ActorsToFilter = std::move(ActorsToFilter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bAtLeastOneActorLeft != nullptr)
		*bAtLeastOneActorLeft = Parms.bAtLeastOneActorLeft;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.FilterTargetHitResultList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortTargetFilter                Filter                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                           RequestingActor                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>               HitResultsToFilter                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    bAtLeastOneActorLeft                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<struct FHitResult> UFortKismetLibrary::FilterTargetHitResultList(class UObject* WorldContextObject, const struct FFortTargetFilter& Filter, const class AActor* RequestingActor, const TArray<struct FHitResult>& HitResultsToFilter, bool* bAtLeastOneActorLeft)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "FilterTargetHitResultList");

	Params::FortKismetLibrary_FilterTargetHitResultList Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Filter = std::move(Filter);
	Parms.RequestingActor = RequestingActor;
	Parms.HitResultsToFilter = std::move(HitResultsToFilter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bAtLeastOneActorLeft != nullptr)
		*bAtLeastOneActorLeft = Parms.bAtLeastOneActorLeft;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetActorTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortTeam                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortTeam UFortKismetLibrary::GetActorTeam(const class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetActorTeam");

	Params::FortKismetLibrary_GetActorTeam Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetActorTeamInfo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortTeamInfo*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortTeamInfo* UFortKismetLibrary::GetActorTeamInfo(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetActorTeamInfo");

	Params::FortKismetLibrary_GetActorTeamInfo Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetAIDirector
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortAIDirector*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortAIDirector* UFortKismetLibrary::GetAIDirector(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetAIDirector");

	Params::FortKismetLibrary_GetAIDirector Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetAIGoalManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortAIGoalManager*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortAIGoalManager* UFortKismetLibrary::GetAIGoalManager(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetAIGoalManager");

	Params::FortKismetLibrary_GetAIGoalManager Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetAllFortPlayerControllers
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeNonSpectators                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeSpectators                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AFortPlayerController*>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AFortPlayerController*> UFortKismetLibrary::GetAllFortPlayerControllers(class UObject* WorldContextObject, bool bIncludeNonSpectators, bool bIncludeSpectators)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetAllFortPlayerControllers");

	Params::FortKismetLibrary_GetAllFortPlayerControllers Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bIncludeNonSpectators = bIncludeNonSpectators;
	Parms.bIncludeSpectators = bIncludeSpectators;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetAllFortPlayerPawns
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AFortPlayerPawn*>          OutFortPlayerPawns                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortKismetLibrary::GetAllFortPlayerPawns(class UObject* WorldContextObject, TArray<class AFortPlayerPawn*>* OutFortPlayerPawns)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetAllFortPlayerPawns");

	Params::FortKismetLibrary_GetAllFortPlayerPawns Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutFortPlayerPawns != nullptr)
		*OutFortPlayerPawns = std::move(Parms.OutFortPlayerPawns);
}


// Function FortniteGame.FortKismetLibrary.GetBroadcasterGrantWindowSecondsRemaining
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortKismetLibrary::GetBroadcasterGrantWindowSecondsRemaining(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetBroadcasterGrantWindowSecondsRemaining");

	Params::FortKismetLibrary_GetBroadcasterGrantWindowSecondsRemaining Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetBuildingHealthPercentage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ABuildingActor*                   BuildingActor                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortKismetLibrary::GetBuildingHealthPercentage(const class ABuildingActor* BuildingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetBuildingHealthPercentage");

	Params::FortKismetLibrary_GetBuildingHealthPercentage Parms{};

	Parms.BuildingActor = BuildingActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetBuildingStructuralSupportSystem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBuildingStructuralSupportSystem* BuildingStructuralSupportSystem                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::GetBuildingStructuralSupportSystem(class UObject* WorldContextObject, class UBuildingStructuralSupportSystem** BuildingStructuralSupportSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetBuildingStructuralSupportSystem");

	Params::FortKismetLibrary_GetBuildingStructuralSupportSystem Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BuildingStructuralSupportSystem != nullptr)
		*BuildingStructuralSupportSystem = Parms.BuildingStructuralSupportSystem;
}


// Function FortniteGame.FortKismetLibrary.GetCalculatedGameDifficulty
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortKismetLibrary::GetCalculatedGameDifficulty(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetCalculatedGameDifficulty");

	Params::FortKismetLibrary_GetCalculatedGameDifficulty Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetClosestActorFromArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ArrayOfActors                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UFortKismetLibrary::GetClosestActorFromArray(const class AActor* Actor, const TArray<class AActor*>& ArrayOfActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetClosestActorFromArray");

	Params::FortKismetLibrary_GetClosestActorFromArray Parms{};

	Parms.Actor = Actor;
	Parms.ArrayOfActors = std::move(ArrayOfActors);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetClosestBuildingActorFromArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ABuildingSMActor*>         ArrayOfBuildings                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class ABuildingSMActor*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABuildingSMActor* UFortKismetLibrary::GetClosestBuildingActorFromArray(const class AActor* Actor, const TArray<class ABuildingSMActor*>& ArrayOfBuildings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetClosestBuildingActorFromArray");

	Params::FortKismetLibrary_GetClosestBuildingActorFromArray Parms{};

	Parms.Actor = Actor;
	Parms.ArrayOfBuildings = std::move(ArrayOfBuildings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetClosestFortPlayerPawn
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Position                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerPawn*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerPawn* UFortKismetLibrary::GetClosestFortPlayerPawn(class UObject* WorldContextObject, const struct FVector& Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetClosestFortPlayerPawn");

	Params::FortKismetLibrary_GetClosestFortPlayerPawn Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Position = std::move(Position);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetCurrentDayPhase
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDayPhase                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortDayPhase UFortKismetLibrary::GetCurrentDayPhase(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetCurrentDayPhase");

	Params::FortKismetLibrary_GetCurrentDayPhase Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetDayNightDirectionalLightColor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UFortKismetLibrary::GetDayNightDirectionalLightColor(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetDayNightDirectionalLightColor");

	Params::FortKismetLibrary_GetDayNightDirectionalLightColor Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetDayNightDirectionalLightVector
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UFortKismetLibrary::GetDayNightDirectionalLightVector(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetDayNightDirectionalLightVector");

	Params::FortKismetLibrary_GetDayNightDirectionalLightVector Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetDebugStringForUniqueId
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 UniqueId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortKismetLibrary::GetDebugStringForUniqueId(const struct FUniqueNetIdRepl& UniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetDebugStringForUniqueId");

	Params::FortKismetLibrary_GetDebugStringForUniqueId Parms{};

	Parms.UniqueId = std::move(UniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetDefaultAbsoluteTimeOfDaySpeed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortKismetLibrary::GetDefaultAbsoluteTimeOfDaySpeed(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetDefaultAbsoluteTimeOfDaySpeed");

	Params::FortKismetLibrary_GetDefaultAbsoluteTimeOfDaySpeed Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetDirectionActorToActor
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           SourceActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator UFortKismetLibrary::GetDirectionActorToActor(class AActor* SourceActor, class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetDirectionActorToActor");

	Params::FortKismetLibrary_GetDirectionActorToActor Parms{};

	Parms.SourceActor = SourceActor;
	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetFloatHoursUntilDayPhase
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDayPhase                           DayPhase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortKismetLibrary::GetFloatHoursUntilDayPhase(class UObject* WorldContextObject, EFortDayPhase DayPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetFloatHoursUntilDayPhase");

	Params::FortKismetLibrary_GetFloatHoursUntilDayPhase Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.DayPhase = DayPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetFortPhysicalSurface
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// EPhysicalSurface                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPhysicalSurface UFortKismetLibrary::GetFortPhysicalSurface(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetFortPhysicalSurface");

	Params::FortKismetLibrary_GetFortPhysicalSurface Parms{};

	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetFortPlayerPawns
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AFortPlayerPawn*>          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AFortPlayerPawn*> UFortKismetLibrary::GetFortPlayerPawns(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetFortPlayerPawns");

	Params::FortKismetLibrary_GetFortPlayerPawns Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetGameDifficulty
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortKismetLibrary::GetGameDifficulty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetGameDifficulty");

	Params::FortKismetLibrary_GetGameDifficulty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetGrantedAbilityKit
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFortSpecializationSlot          Slot                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UFortAbilityKit*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAbilityKit* UFortKismetLibrary::GetGrantedAbilityKit(const struct FFortSpecializationSlot& Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetGrantedAbilityKit");

	Params::FortKismetLibrary_GetGrantedAbilityKit Parms{};

	Parms.Slot = std::move(Slot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetHostilityPercentage
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortKismetLibrary::GetHostilityPercentage(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetHostilityPercentage");

	Params::FortKismetLibrary_GetHostilityPercentage Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetHoursUntilDayPhase
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDayPhase                           DayPhase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortKismetLibrary::GetHoursUntilDayPhase(class UObject* WorldContextObject, EFortDayPhase DayPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetHoursUntilDayPhase");

	Params::FortKismetLibrary_GetHoursUntilDayPhase Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.DayPhase = DayPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetHumanReadableName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortKismetLibrary::GetHumanReadableName(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetHumanReadableName");

	Params::FortKismetLibrary_GetHumanReadableName Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetImpulseData
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayEffectContextHandle     EffectContext                                          (Parm, NativeAccessSpecifierPublic)
// struct FVector                          ImpulseDirection                                       (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   KnockbackMagnitude                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   KnockbackZAngle                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::GetImpulseData(const struct FGameplayEffectContextHandle& EffectContext, struct FVector* ImpulseDirection, float* KnockbackMagnitude, float* KnockbackZAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetImpulseData");

	Params::FortKismetLibrary_GetImpulseData Parms{};

	Parms.EffectContext = std::move(EffectContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ImpulseDirection != nullptr)
		*ImpulseDirection = std::move(Parms.ImpulseDirection);

	if (KnockbackMagnitude != nullptr)
		*KnockbackMagnitude = Parms.KnockbackMagnitude;

	if (KnockbackZAngle != nullptr)
		*KnockbackZAngle = Parms.KnockbackZAngle;
}


// Function FortniteGame.FortKismetLibrary.GetLocalFortPlayerControllers
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeNonSpectators                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncludeSpectators                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AFortPlayerController*>    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AFortPlayerController*> UFortKismetLibrary::GetLocalFortPlayerControllers(class UObject* WorldContextObject, bool bIncludeNonSpectators, bool bIncludeSpectators)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetLocalFortPlayerControllers");

	Params::FortKismetLibrary_GetLocalFortPlayerControllers Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bIncludeNonSpectators = bIncludeNonSpectators;
	Parms.bIncludeSpectators = bIncludeSpectators;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetLocalPlayerHasHeroBackpack
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::GetLocalPlayerHasHeroBackpack(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetLocalPlayerHasHeroBackpack");

	Params::FortKismetLibrary_GetLocalPlayerHasHeroBackpack Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetLocalPlayerHasHeroHeadAccessories
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::GetLocalPlayerHasHeroHeadAccessories(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetLocalPlayerHasHeroHeadAccessories");

	Params::FortKismetLibrary_GetLocalPlayerHasHeroHeadAccessories Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetLootLevel
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortKismetLibrary::GetLootLevel(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetLootLevel");

	Params::FortKismetLibrary_GetLootLevel Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetMatchmakingDifficultyRangeFromDifficultyInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameDifficultyInfo              DifficultyInfo                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   OutMinDifficulty                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutMaxDifficulty                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::GetMatchmakingDifficultyRangeFromDifficultyInfo(const struct FGameDifficultyInfo& DifficultyInfo, float* OutMinDifficulty, float* OutMaxDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetMatchmakingDifficultyRangeFromDifficultyInfo");

	Params::FortKismetLibrary_GetMatchmakingDifficultyRangeFromDifficultyInfo Parms{};

	Parms.DifficultyInfo = std::move(DifficultyInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMinDifficulty != nullptr)
		*OutMinDifficulty = Parms.OutMinDifficulty;

	if (OutMaxDifficulty != nullptr)
		*OutMaxDifficulty = Parms.OutMaxDifficulty;
}


// Function FortniteGame.FortKismetLibrary.GetMeleeWeaponStatsRow
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDataTableRowHandle              DataTableRowHandle                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FFortMeleeWeaponStats            OutRow                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::GetMeleeWeaponStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortMeleeWeaponStats* OutRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetMeleeWeaponStatsRow");

	Params::FortKismetLibrary_GetMeleeWeaponStatsRow Parms{};

	Parms.DataTableRowHandle = std::move(DataTableRowHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRow != nullptr)
		*OutRow = std::move(Parms.OutRow);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetMIDForSkeletalMeshComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ElementIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UFortKismetLibrary::GetMIDForSkeletalMeshComponent(class USkeletalMeshComponent* SkeletalMeshComponent, int32 ElementIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetMIDForSkeletalMeshComponent");

	Params::FortKismetLibrary_GetMIDForSkeletalMeshComponent Parms{};

	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.ElementIndex = ElementIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetMusicManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortMusicManager*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortMusicManager* UFortKismetLibrary::GetMusicManager(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetMusicManager");

	Params::FortKismetLibrary_GetMusicManager Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetNumericCVar
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           CVar                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutValue                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::GetNumericCVar(const class FString& CVar, float* OutValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetNumericCVar");

	Params::FortKismetLibrary_GetNumericCVar Parms{};

	Parms.CVar = std::move(CVar);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutValue != nullptr)
		*OutValue = Parms.OutValue;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetPawnStatsRow
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDataTableRowHandle              DataTableRowHandle                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FFortPawnStats                   OutRow                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::GetPawnStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortPawnStats* OutRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetPawnStatsRow");

	Params::FortKismetLibrary_GetPawnStatsRow Parms{};

	Parms.DataTableRowHandle = std::move(DataTableRowHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRow != nullptr)
		*OutRow = std::move(Parms.OutRow);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetPlayerInfoFromUniqueID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 UniqueId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortRegisteredPlayerInfo*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortRegisteredPlayerInfo* UFortKismetLibrary::GetPlayerInfoFromUniqueID(class UObject* WorldContextObject, const struct FUniqueNetIdRepl& UniqueId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetPlayerInfoFromUniqueID");

	Params::FortKismetLibrary_GetPlayerInfoFromUniqueID Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.UniqueId = std::move(UniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetPreviousDayPhase
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDayPhase                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortDayPhase UFortKismetLibrary::GetPreviousDayPhase(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetPreviousDayPhase");

	Params::FortKismetLibrary_GetPreviousDayPhase Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetPrimaryInstance
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayAbilitySpec             Spec                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UGameplayAbility*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGameplayAbility* UFortKismetLibrary::GetPrimaryInstance(const struct FGameplayAbilitySpec& Spec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetPrimaryInstance");

	Params::FortKismetLibrary_GetPrimaryInstance Parms{};

	Parms.Spec = std::move(Spec);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetRandomLiveStreamingViewerName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRemoveFromList                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortKismetLibrary::GetRandomLiveStreamingViewerName(class UObject* WorldContextObject, bool bRemoveFromList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetRandomLiveStreamingViewerName");

	Params::FortKismetLibrary_GetRandomLiveStreamingViewerName Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bRemoveFromList = bRemoveFromList;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetRandomSurvivorName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDisplayGender                      Gender                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRemoveFromList                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortKismetLibrary::GetRandomSurvivorName(class UObject* WorldContextObject, EFortDisplayGender Gender, bool bRemoveFromList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetRandomSurvivorName");

	Params::FortKismetLibrary_GetRandomSurvivorName Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Gender = Gender;
	Parms.bRemoveFromList = bRemoveFromList;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetRangedWeaponStatsRow
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDataTableRowHandle              DataTableRowHandle                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FFortRangedWeaponStats           OutRow                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::GetRangedWeaponStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortRangedWeaponStats* OutRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetRangedWeaponStatsRow");

	Params::FortKismetLibrary_GetRangedWeaponStatsRow Parms{};

	Parms.DataTableRowHandle = std::move(DataTableRowHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRow != nullptr)
		*OutRow = std::move(Parms.OutRow);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetRemovedAbilityKit
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFortSpecializationSlot          Slot                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UFortAbilityKit*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAbilityKit* UFortKismetLibrary::GetRemovedAbilityKit(const struct FFortSpecializationSlot& Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetRemovedAbilityKit");

	Params::FortKismetLibrary_GetRemovedAbilityKit Parms{};

	Parms.Slot = std::move(Slot);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetShowHeroBackpackForLocalPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::GetShowHeroBackpackForLocalPlayer(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetShowHeroBackpackForLocalPlayer");

	Params::FortKismetLibrary_GetShowHeroBackpackForLocalPlayer Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetShowHeroHeadAccessoriesForLocalPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::GetShowHeroHeadAccessoriesForLocalPlayer(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetShowHeroHeadAccessoriesForLocalPlayer");

	Params::FortKismetLibrary_GetShowHeroHeadAccessoriesForLocalPlayer Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetStunTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayEffectContextHandle     EffectContext                                          (Parm, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortKismetLibrary::GetStunTime(const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetStunTime");

	Params::FortKismetLibrary_GetStunTime Parms{};

	Parms.EffectContext = std::move(EffectContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetSubGame
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESubGame                                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ESubGame UFortKismetLibrary::GetSubGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetSubGame");

	Params::FortKismetLibrary_GetSubGame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetTeamAffiliation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           ActorA                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ActorB                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortTeamAffiliation                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortTeamAffiliation UFortKismetLibrary::GetTeamAffiliation(const class AActor* ActorA, const class AActor* ActorB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetTeamAffiliation");

	Params::FortKismetLibrary_GetTeamAffiliation Parms{};

	Parms.ActorA = ActorA;
	Parms.ActorB = ActorB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetTeamAffiliationBetweenTeams
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortTeam                               TeamA                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortTeam                               TeamB                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortTeamAffiliation                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortTeamAffiliation UFortKismetLibrary::GetTeamAffiliationBetweenTeams(EFortTeam TeamA, EFortTeam TeamB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetTeamAffiliationBetweenTeams");

	Params::FortKismetLibrary_GetTeamAffiliationBetweenTeams Parms{};

	Parms.TeamA = TeamA;
	Parms.TeamB = TeamB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetTeamInfo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortTeam                               Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortTeamInfo*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortTeamInfo* UFortKismetLibrary::GetTeamInfo(class UObject* WorldContextObject, EFortTeam Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetTeamInfo");

	Params::FortKismetLibrary_GetTeamInfo Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetThreatVisualsManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortThreatVisualsManager*        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortThreatVisualsManager* UFortKismetLibrary::GetThreatVisualsManager(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetThreatVisualsManager");

	Params::FortKismetLibrary_GetThreatVisualsManager Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetTimeDayPhaseBegins
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDayPhase                           DayPhase                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortKismetLibrary::GetTimeDayPhaseBegins(class UObject* WorldContextObject, EFortDayPhase DayPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetTimeDayPhaseBegins");

	Params::FortKismetLibrary_GetTimeDayPhaseBegins Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.DayPhase = DayPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetTimeOfDay
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortKismetLibrary::GetTimeOfDay(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetTimeOfDay");

	Params::FortKismetLibrary_GetTimeOfDay Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetTimeOfDayAccumulator
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortKismetLibrary::GetTimeOfDayAccumulator(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetTimeOfDayAccumulator");

	Params::FortKismetLibrary_GetTimeOfDayAccumulator Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetTimeOfDaySpeed
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortKismetLibrary::GetTimeOfDaySpeed(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetTimeOfDaySpeed");

	Params::FortKismetLibrary_GetTimeOfDaySpeed Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetTimeUntilInRealTimeSeconds
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   GameTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortKismetLibrary::GetTimeUntilInRealTimeSeconds(class UObject* WorldContextObject, float GameTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetTimeUntilInRealTimeSeconds");

	Params::FortKismetLibrary_GetTimeUntilInRealTimeSeconds Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.GameTime = GameTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetTooltipDescription
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     Description                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::GetTooltipDescription(class UObject* WorldContextObject, const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* Description)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetTooltipDescription");

	Params::FortKismetLibrary_GetTooltipDescription Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Description != nullptr)
		*Description = std::move(Parms.Description);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetTooltipDescriptionFromTooltipClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UFortTooltip>         TooltipClass                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     Description                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::GetTooltipDescriptionFromTooltipClass(class UObject* WorldContextObject, const class UObject* ObjectToDescribe, TSubclassOf<class UFortTooltip> TooltipClass, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* Description)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetTooltipDescriptionFromTooltipClass");

	Params::FortKismetLibrary_GetTooltipDescriptionFromTooltipClass Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.TooltipClass = TooltipClass;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Description != nullptr)
		*Description = std::move(Parms.Description);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetTooltipNumericValue
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::GetTooltipNumericValue(class UObject* WorldContextObject, const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetTooltipNumericValue");

	Params::FortKismetLibrary_GetTooltipNumericValue Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = Parms.Value;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetTooltipNumericValueFromTooltipClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UFortTooltip>         TooltipClass                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::GetTooltipNumericValueFromTooltipClass(class UObject* WorldContextObject, const class UObject* ObjectToDescribe, TSubclassOf<class UFortTooltip> TooltipClass, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetTooltipNumericValueFromTooltipClass");

	Params::FortKismetLibrary_GetTooltipNumericValueFromTooltipClass Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.TooltipClass = TooltipClass;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Value != nullptr)
		*Value = Parms.Value;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetTooltipTextFromToken
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::GetTooltipTextFromToken(class UObject* WorldContextObject, const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetTooltipTextFromToken");

	Params::FortKismetLibrary_GetTooltipTextFromToken Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetTooltipTextFromTokenFromTooltipClass
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UFortTooltip>         TooltipClass                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::GetTooltipTextFromTokenFromTooltipClass(class UObject* WorldContextObject, const class UObject* ObjectToDescribe, TSubclassOf<class UFortTooltip> TooltipClass, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetTooltipTextFromTokenFromTooltipClass");

	Params::FortKismetLibrary_GetTooltipTextFromTokenFromTooltipClass Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.TooltipClass = TooltipClass;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetTrapStatsRow
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDataTableRowHandle              DataTableRowHandle                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FFortTrapStats                   OutRow                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::GetTrapStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortTrapStats* OutRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetTrapStatsRow");

	Params::FortKismetLibrary_GetTrapStatsRow Parms{};

	Parms.DataTableRowHandle = std::move(DataTableRowHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRow != nullptr)
		*OutRow = std::move(Parms.OutRow);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetWeaponDurabilityByRarityStatsRow
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDataTableRowHandle              DataTableRowHandle                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FFortWeaponDurabilityByRarityStatsOutRow                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::GetWeaponDurabilityByRarityStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortWeaponDurabilityByRarityStats* OutRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetWeaponDurabilityByRarityStatsRow");

	Params::FortKismetLibrary_GetWeaponDurabilityByRarityStatsRow Parms{};

	Parms.DataTableRowHandle = std::move(DataTableRowHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRow != nullptr)
		*OutRow = std::move(Parms.OutRow);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GetWeaponStatsRow
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FDataTableRowHandle              DataTableRowHandle                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FFortBaseWeaponStats             OutRow                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::GetWeaponStatsRow(const struct FDataTableRowHandle& DataTableRowHandle, struct FFortBaseWeaponStats* OutRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GetWeaponStatsRow");

	Params::FortKismetLibrary_GetWeaponStatsRow Parms{};

	Parms.DataTableRowHandle = std::move(DataTableRowHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRow != nullptr)
		*OutRow = std::move(Parms.OutRow);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.GiveItemToInventoryOwner
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// TScriptInterface<class IFortInventoryOwnerInterface>InventoryOwner                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
// class UFortWorldItemDefinition*         ItemDefinition                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumberToGive                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNotifyPlayer                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::GiveItemToInventoryOwner(TScriptInterface<class IFortInventoryOwnerInterface> InventoryOwner, const class UFortWorldItemDefinition* ItemDefinition, int32 NumberToGive, bool bNotifyPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "GiveItemToInventoryOwner");

	Params::FortKismetLibrary_GiveItemToInventoryOwner Parms{};

	Parms.InventoryOwner = InventoryOwner;
	Parms.ItemDefinition = ItemDefinition;
	Parms.NumberToGive = NumberToGive;
	Parms.bNotifyPlayer = bNotifyPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.HasMultipleVisibleRewards
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortRewardInfo                  RewardInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::HasMultipleVisibleRewards(const struct FFortRewardInfo& RewardInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "HasMultipleVisibleRewards");

	Params::FortKismetLibrary_HasMultipleVisibleRewards Parms{};

	Parms.RewardInfo = std::move(RewardInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.HasOpenBroadcasterGrantWindow
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::HasOpenBroadcasterGrantWindow(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "HasOpenBroadcasterGrantWindow");

	Params::FortKismetLibrary_HasOpenBroadcasterGrantWindow Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.HasRewards
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortRewardInfo                  RewardInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::HasRewards(const struct FFortRewardInfo& RewardInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "HasRewards");

	Params::FortKismetLibrary_HasRewards Parms{};

	Parms.RewardInfo = std::move(RewardInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.HasSelectableRewards
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortRewardInfo                  RewardInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::HasSelectableRewards(const struct FFortRewardInfo& RewardInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "HasSelectableRewards");

	Params::FortKismetLibrary_HasSelectableRewards Parms{};

	Parms.RewardInfo = std::move(RewardInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.HideTutorialWidget
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             WidgetName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::HideTutorialWidget(class UObject* WorldContextObject, class FName WidgetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "HideTutorialWidget");

	Params::FortKismetLibrary_HideTutorialWidget Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.WidgetName = WidgetName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.InvalidateLatentActionHandle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortDialogExternalLatentActionHandleHandle                                                 (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortKismetLibrary::InvalidateLatentActionHandle(struct FFortDialogExternalLatentActionHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "InvalidateLatentActionHandle");

	Params::FortKismetLibrary_InvalidateLatentActionHandle Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Handle = std::move(Parms.Handle);
}


// Function FortniteGame.FortKismetLibrary.IsAssetNull
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TSoftObjectPtr<class UObject>           Asset                                                  (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::IsAssetNull(TSoftObjectPtr<class UObject> Asset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "IsAssetNull");

	Params::FortKismetLibrary_IsAssetNull Parms{};

	Parms.Asset = Asset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.IsConsolePlatform
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::IsConsolePlatform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "IsConsolePlatform");

	Params::FortKismetLibrary_IsConsolePlatform Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.IsCriticalHit
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayEffectContextHandle     EffectContext                                          (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::IsCriticalHit(const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "IsCriticalHit");

	Params::FortKismetLibrary_IsCriticalHit Parms{};

	Parms.EffectContext = std::move(EffectContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.IsDiceCritical
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayEffectContextHandle     EffectContext                                          (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::IsDiceCritical(const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "IsDiceCritical");

	Params::FortKismetLibrary_IsDiceCritical Parms{};

	Parms.EffectContext = std::move(EffectContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.IsFatalHit
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayEffectContextHandle     EffectContext                                          (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::IsFatalHit(const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "IsFatalHit");

	Params::FortKismetLibrary_IsFatalHit Parms{};

	Parms.EffectContext = std::move(EffectContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.IsFullBodyHit
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FGameplayEffectContextHandle     EffectContext                                          (Parm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::IsFullBodyHit(const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "IsFullBodyHit");

	Params::FortKismetLibrary_IsFullBodyHit Parms{};

	Parms.EffectContext = std::move(EffectContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.IsLatentActionHandleValid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFortDialogExternalLatentActionHandleHandle                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::IsLatentActionHandleValid(const struct FFortDialogExternalLatentActionHandle& Handle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "IsLatentActionHandleValid");

	Params::FortKismetLibrary_IsLatentActionHandleValid Parms{};

	Parms.Handle = std::move(Handle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.IsLinkingStreamedAccountsEnabled
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::IsLinkingStreamedAccountsEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "IsLinkingStreamedAccountsEnabled");

	Params::FortKismetLibrary_IsLinkingStreamedAccountsEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.IsUsingBattlEye
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::IsUsingBattlEye()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "IsUsingBattlEye");

	Params::FortKismetLibrary_IsUsingBattlEye Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.IsValid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FAttributeInfo                   AttributeInfo                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::IsValid(const struct FAttributeInfo& AttributeInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "IsValid");

	Params::FortKismetLibrary_IsValid Parms{};

	Parms.AttributeInfo = std::move(AttributeInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.IsValid_UniqueNetIdRepl
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FUniqueNetIdRepl                 InUniqueNetIdRepl                                      (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::IsValid_UniqueNetIdRepl(const struct FUniqueNetIdRepl& InUniqueNetIdRepl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "IsValid_UniqueNetIdRepl");

	Params::FortKismetLibrary_IsValid_UniqueNetIdRepl Parms{};

	Parms.InUniqueNetIdRepl = std::move(InUniqueNetIdRepl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.JonLHack_GetAllObjectsOfClassFromPath
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           Path                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           Param_Class                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UObject*>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UObject*> UFortKismetLibrary::JonLHack_GetAllObjectsOfClassFromPath(const class FString& Path, class UClass* Param_Class)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "JonLHack_GetAllObjectsOfClassFromPath");

	Params::FortKismetLibrary_JonLHack_GetAllObjectsOfClassFromPath Parms{};

	Parms.Path = std::move(Path);
	Parms.Param_Class = Param_Class;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.K2_GetClosestAxisXY
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          InVector                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UFortKismetLibrary::K2_GetClosestAxisXY(const struct FVector& InVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "K2_GetClosestAxisXY");

	Params::FortKismetLibrary_K2_GetClosestAxisXY Parms{};

	Parms.InVector = std::move(InVector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.K2_GetItemQuantityOnPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerController*            PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItemDefinition*              ItemDefinition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortKismetLibrary::K2_GetItemQuantityOnPlayer(class AFortPlayerController* PlayerController, class UFortItemDefinition* ItemDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "K2_GetItemQuantityOnPlayer");

	Params::FortKismetLibrary_K2_GetItemQuantityOnPlayer Parms{};

	Parms.PlayerController = PlayerController;
	Parms.ItemDefinition = ItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.K2_GiveItemToAllPlayers
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItemDefinition*         ItemDefinition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumberToGive                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNotifyPlayer                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::K2_GiveItemToAllPlayers(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinition, int32 NumberToGive, bool bNotifyPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "K2_GiveItemToAllPlayers");

	Params::FortKismetLibrary_K2_GiveItemToAllPlayers Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ItemDefinition = ItemDefinition;
	Parms.NumberToGive = NumberToGive;
	Parms.bNotifyPlayer = bNotifyPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.K2_GiveItemToPlayer
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItemDefinition*         ItemDefinition                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumberToGive                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNotifyPlayer                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::K2_GiveItemToPlayer(class AFortPlayerController* PlayerController, const class UFortWorldItemDefinition* ItemDefinition, int32 NumberToGive, bool bNotifyPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "K2_GiveItemToPlayer");

	Params::FortKismetLibrary_K2_GiveItemToPlayer Parms{};

	Parms.PlayerController = PlayerController;
	Parms.ItemDefinition = ItemDefinition;
	Parms.NumberToGive = NumberToGive;
	Parms.bNotifyPlayer = bNotifyPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.K2_RemoveItemFromAllPlayers
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItemDefinition*         ItemDefinition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AmountToRemove                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::K2_RemoveItemFromAllPlayers(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinition, int32 AmountToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "K2_RemoveItemFromAllPlayers");

	Params::FortKismetLibrary_K2_RemoveItemFromAllPlayers Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ItemDefinition = ItemDefinition;
	Parms.AmountToRemove = AmountToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.K2_RemoveItemFromPlayer
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItemDefinition*         ItemDefinition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AmountToRemove                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortKismetLibrary::K2_RemoveItemFromPlayer(class AFortPlayerController* PlayerController, class UFortWorldItemDefinition* ItemDefinition, int32 AmountToRemove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "K2_RemoveItemFromPlayer");

	Params::FortKismetLibrary_K2_RemoveItemFromPlayer Parms{};

	Parms.PlayerController = PlayerController;
	Parms.ItemDefinition = ItemDefinition;
	Parms.AmountToRemove = AmountToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.K2_SpawnPickupInWorld
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItemDefinition*         ItemDefinition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumberToSpawn                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Position                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Direction                                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OverrideMaxStackCount                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bToss                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPickup*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPickup* UFortKismetLibrary::K2_SpawnPickupInWorld(class UObject* WorldContextObject, class UFortWorldItemDefinition* ItemDefinition, int32 NumberToSpawn, const struct FVector& Position, const struct FVector& Direction, int32 OverrideMaxStackCount, bool bToss)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "K2_SpawnPickupInWorld");

	Params::FortKismetLibrary_K2_SpawnPickupInWorld Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ItemDefinition = ItemDefinition;
	Parms.NumberToSpawn = NumberToSpawn;
	Parms.Position = std::move(Position);
	Parms.Direction = std::move(Direction);
	Parms.OverrideMaxStackCount = OverrideMaxStackCount;
	Parms.bToss = bToss;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.MakeAllPlayersTalkToSelf
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLatentActionInfo                LatentInfo                                             (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class USoundBase*                       Audio                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Delay                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInterruptCurrentLine                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCanBeInterrupted                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCanCue                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortFeedbackBroadcastFilter            BroadcastFilter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLatent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::MakeAllPlayersTalkToSelf(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, class USoundBase* Audio, float Delay, bool bInterruptCurrentLine, bool bCanBeInterrupted, bool bCanCue, EFortFeedbackBroadcastFilter BroadcastFilter, bool bLatent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "MakeAllPlayersTalkToSelf");

	Params::FortKismetLibrary_MakeAllPlayersTalkToSelf Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LatentInfo = std::move(LatentInfo);
	Parms.Audio = Audio;
	Parms.Delay = Delay;
	Parms.bInterruptCurrentLine = bInterruptCurrentLine;
	Parms.bCanBeInterrupted = bCanBeInterrupted;
	Parms.bCanCue = bCanCue;
	Parms.BroadcastFilter = BroadcastFilter;
	Parms.bLatent = bLatent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.MakeBuildingState
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortBuildingState                      Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortBuildingState                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortBuildingState UFortKismetLibrary::MakeBuildingState(EFortBuildingState Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "MakeBuildingState");

	Params::FortKismetLibrary_MakeBuildingState Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.MakeDayNightPhase
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortDayPhase                           Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDayPhase                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortDayPhase UFortKismetLibrary::MakeDayNightPhase(EFortDayPhase Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "MakeDayNightPhase");

	Params::FortKismetLibrary_MakeDayNightPhase Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.MakeGameplayEffectContainerSpecFromAbility
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortGameplayEffectContainer     EffectContainer                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UGameplayAbility*                 Ability                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GameplayEffectLevel                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortGameplayEffectContainerSpec ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortGameplayEffectContainerSpec UFortKismetLibrary::MakeGameplayEffectContainerSpecFromAbility(const struct FFortGameplayEffectContainer& EffectContainer, class UGameplayAbility* Ability, int32 GameplayEffectLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "MakeGameplayEffectContainerSpecFromAbility");

	Params::FortKismetLibrary_MakeGameplayEffectContainerSpecFromAbility Parms{};

	Parms.EffectContainer = std::move(EffectContainer);
	Parms.Ability = Ability;
	Parms.GameplayEffectLevel = GameplayEffectLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.MakeGameplayEffectContainerSpecFromAbilityComponent
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortGameplayEffectContainer     EffectContainer                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UAbilitySystemComponent*          AbilityComp                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GameplayEffectLevel                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortGameplayEffectContainerSpec ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortGameplayEffectContainerSpec UFortKismetLibrary::MakeGameplayEffectContainerSpecFromAbilityComponent(const struct FFortGameplayEffectContainer& EffectContainer, class UAbilitySystemComponent* AbilityComp, int32 GameplayEffectLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "MakeGameplayEffectContainerSpecFromAbilityComponent");

	Params::FortKismetLibrary_MakeGameplayEffectContainerSpecFromAbilityComponent Parms{};

	Parms.EffectContainer = std::move(EffectContainer);
	Parms.AbilityComp = AbilityComp;
	Parms.GameplayEffectLevel = GameplayEffectLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.MakeMovementStyle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortMovementStyle                      Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortMovementStyle                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortMovementStyle UFortKismetLibrary::MakeMovementStyle(EFortMovementStyle Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "MakeMovementStyle");

	Params::FortKismetLibrary_MakeMovementStyle Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.MakeResourceType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortResourceType                       Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortResourceType                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortResourceType UFortKismetLibrary::MakeResourceType(EFortResourceType Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "MakeResourceType");

	Params::FortKismetLibrary_MakeResourceType Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.MakeWeaponCoreAnimation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortWeaponCoreAnimation                Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortWeaponCoreAnimation                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortWeaponCoreAnimation UFortKismetLibrary::MakeWeaponCoreAnimation(EFortWeaponCoreAnimation Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "MakeWeaponCoreAnimation");

	Params::FortKismetLibrary_MakeWeaponCoreAnimation Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.NormalizedAngleInDegreesToVector
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   A                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UFortKismetLibrary::NormalizedAngleInDegreesToVector(float A)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "NormalizedAngleInDegreesToVector");

	Params::FortKismetLibrary_NormalizedAngleInDegreesToVector Parms{};

	Parms.A = A;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.NotEqual_FFortDialogWaitingForLatentActionHandle
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFortDialogExternalLatentActionHandleA                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FFortDialogExternalLatentActionHandleB                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::NotEqual_FFortDialogWaitingForLatentActionHandle(const struct FFortDialogExternalLatentActionHandle& A, const struct FFortDialogExternalLatentActionHandle& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "NotEqual_FFortDialogWaitingForLatentActionHandle");

	Params::FortKismetLibrary_NotEqual_FFortDialogWaitingForLatentActionHandle Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.NotEqual_UniqueNetIdReplUniqueNetIdRepl
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FUniqueNetIdRepl                 A                                                      (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 B                                                      (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::NotEqual_UniqueNetIdReplUniqueNetIdRepl(const struct FUniqueNetIdRepl& A, const struct FUniqueNetIdRepl& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "NotEqual_UniqueNetIdReplUniqueNetIdRepl");

	Params::FortKismetLibrary_NotEqual_UniqueNetIdReplUniqueNetIdRepl Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.OnSameTeam
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           ActorA                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ActorB                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::OnSameTeam(const class AActor* ActorA, const class AActor* ActorB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "OnSameTeam");

	Params::FortKismetLibrary_OnSameTeam Parms{};

	Parms.ActorA = ActorA;
	Parms.ActorB = ActorB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.OpenTalkingHead
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                       Image                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             Title                                                  (Parm, NativeAccessSpecifierPublic)
// class FText                             SpeechText                                             (Parm, NativeAccessSpecifierPublic)
// EFortAnnouncementDisplayPreference      DisplayPreference                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::OpenTalkingHead(class UObject* WorldContextObject, class UTexture2D* Image, const class FText& Title, const class FText& SpeechText, EFortAnnouncementDisplayPreference DisplayPreference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "OpenTalkingHead");

	Params::FortKismetLibrary_OpenTalkingHead Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Image = Image;
	Parms.Title = std::move(Title);
	Parms.SpeechText = std::move(SpeechText);
	Parms.DisplayPreference = DisplayPreference;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.PickLootDrops
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FFortItemEntry>           OutLootToDrop                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FName                             TierGroupName                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   WorldLevel                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ForcedLootTier                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::PickLootDrops(TArray<struct FFortItemEntry>* OutLootToDrop, const class FName TierGroupName, const int32 WorldLevel, const int32 ForcedLootTier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "PickLootDrops");

	Params::FortKismetLibrary_PickLootDrops Parms{};

	Parms.TierGroupName = TierGroupName;
	Parms.WorldLevel = WorldLevel;
	Parms.ForcedLootTier = ForcedLootTier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutLootToDrop != nullptr)
		*OutLootToDrop = std::move(Parms.OutLootToDrop);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.PlayLocalForceFeedbackAtLocation
// (Final, BlueprintCosmetic, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UForceFeedbackEffect*             ForceFeedbackEffect                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::PlayLocalForceFeedbackAtLocation(class UObject* WorldContextObject, class UForceFeedbackEffect* ForceFeedbackEffect, const struct FVector& Location, float Radius, class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "PlayLocalForceFeedbackAtLocation");

	Params::FortKismetLibrary_PlayLocalForceFeedbackAtLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ForceFeedbackEffect = ForceFeedbackEffect;
	Parms.Location = std::move(Location);
	Parms.Radius = Radius;
	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.PlayLocalForceFeedbackAtLocationMulti
// (Final, BlueprintCosmetic, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UForceFeedbackEffect*             NearForceFeedbackEffect                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UForceFeedbackEffect*             FarForceFeedbackEffect                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Location                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InnerRadius                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OuterRadius                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             Tag                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::PlayLocalForceFeedbackAtLocationMulti(class UObject* WorldContextObject, class UForceFeedbackEffect* NearForceFeedbackEffect, class UForceFeedbackEffect* FarForceFeedbackEffect, const struct FVector& Location, float InnerRadius, float OuterRadius, class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "PlayLocalForceFeedbackAtLocationMulti");

	Params::FortKismetLibrary_PlayLocalForceFeedbackAtLocationMulti Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NearForceFeedbackEffect = NearForceFeedbackEffect;
	Parms.FarForceFeedbackEffect = FarForceFeedbackEffect;
	Parms.Location = std::move(Location);
	Parms.InnerRadius = InnerRadius;
	Parms.OuterRadius = OuterRadius;
	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.PushOffHitLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           RequestedBy                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UFortKismetLibrary::PushOffHitLocation(class AActor* RequestedBy, const struct FHitResult& Hit, float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "PushOffHitLocation");

	Params::FortKismetLibrary_PushOffHitLocation Parms{};

	Parms.RequestedBy = RequestedBy;
	Parms.Hit = std::move(Hit);
	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.PushOffTransformByHitLocation
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           RequestedBy                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       InTransform                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                                   Distance                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FTransform UFortKismetLibrary::PushOffTransformByHitLocation(class AActor* RequestedBy, const struct FTransform& InTransform, const struct FHitResult& Hit, float Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "PushOffTransformByHitLocation");

	Params::FortKismetLibrary_PushOffTransformByHitLocation Parms{};

	Parms.RequestedBy = RequestedBy;
	Parms.InTransform = std::move(InTransform);
	Parms.Hit = std::move(Hit);
	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.RegisterDayPhaseHitCallback
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDayPhase                           Phase                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRecurring                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBlockTriggeringThisCycle                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::RegisterDayPhaseHitCallback(class UObject* Object, const class FString& FunctionName, EFortDayPhase Phase, bool bRecurring, bool bBlockTriggeringThisCycle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "RegisterDayPhaseHitCallback");

	Params::FortKismetLibrary_RegisterDayPhaseHitCallback Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);
	Parms.Phase = Phase;
	Parms.bRecurring = bRecurring;
	Parms.bBlockTriggeringThisCycle = bBlockTriggeringThisCycle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.RegisterDayTimeHitCallback
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeInHours                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRecurring                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBlockTriggeringThisCycle                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::RegisterDayTimeHitCallback(class UObject* Object, const class FString& FunctionName, float TimeInHours, bool bRecurring, bool bBlockTriggeringThisCycle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "RegisterDayTimeHitCallback");

	Params::FortKismetLibrary_RegisterDayTimeHitCallback Parms{};

	Parms.Object = Object;
	Parms.FunctionName = std::move(FunctionName);
	Parms.TimeInHours = TimeInHours;
	Parms.bRecurring = bRecurring;
	Parms.bBlockTriggeringThisCycle = bBlockTriggeringThisCycle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.RemoveActorsOfClassFromBuildingSMActorArray
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class ABuildingSMActor*>         ArrayToRemoveClassFrom                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TSubclassOf<class ABuildingSMActor>     ClassToRemove                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class ABuildingSMActor*>         ArrayWithClassRemoved                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortKismetLibrary::RemoveActorsOfClassFromBuildingSMActorArray(const TArray<class ABuildingSMActor*>& ArrayToRemoveClassFrom, TSubclassOf<class ABuildingSMActor> ClassToRemove, TArray<class ABuildingSMActor*>* ArrayWithClassRemoved)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "RemoveActorsOfClassFromBuildingSMActorArray");

	Params::FortKismetLibrary_RemoveActorsOfClassFromBuildingSMActorArray Parms{};

	Parms.ArrayToRemoveClassFrom = std::move(ArrayToRemoveClassFrom);
	Parms.ClassToRemove = ClassToRemove;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ArrayWithClassRemoved != nullptr)
		*ArrayWithClassRemoved = std::move(Parms.ArrayWithClassRemoved);
}


// Function FortniteGame.FortKismetLibrary.SelectMaterialInstance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UMaterialInstance*                A                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstance*                B                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelectA                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstance*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstance* UFortKismetLibrary::SelectMaterialInstance(class UMaterialInstance* A, class UMaterialInstance* B, bool bSelectA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "SelectMaterialInstance");

	Params::FortKismetLibrary_SelectMaterialInstance Parms{};

	Parms.A = A;
	Parms.B = B;
	Parms.bSelectA = bSelectA;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.SetCanBeDamaged
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCanBeDamaged                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::SetCanBeDamaged(class AActor* Actor, bool bCanBeDamaged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "SetCanBeDamaged");

	Params::FortKismetLibrary_SetCanBeDamaged Parms{};

	Parms.Actor = Actor;
	Parms.bCanBeDamaged = bCanBeDamaged;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.SetTimeOfDay
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeOfDay                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::SetTimeOfDay(class UObject* WorldContextObject, float TimeOfDay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "SetTimeOfDay");

	Params::FortKismetLibrary_SetTimeOfDay Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TimeOfDay = TimeOfDay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.SetTimeOfDaySpeed
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeOfDaySpeedFactor                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::SetTimeOfDaySpeed(class UObject* WorldContextObject, float TimeOfDaySpeedFactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "SetTimeOfDaySpeed");

	Params::FortKismetLibrary_SetTimeOfDaySpeed Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TimeOfDaySpeedFactor = TimeOfDaySpeedFactor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.ShouldHideTutorialWidget
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FName                             WidgetName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::ShouldHideTutorialWidget(class FName WidgetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "ShouldHideTutorialWidget");

	Params::FortKismetLibrary_ShouldHideTutorialWidget Parms{};

	Parms.WidgetName = WidgetName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.SpawnAreaOfEffectCloud
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class AFortAreaOfEffectCloud>AreaOfEffectClass                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           RequestedBy                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          SpawnLocation                                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         SpawnRotation                                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FFortGameplayEffectContainerSpec EffectContainerSpecToApplyOnHit                        (Parm, NativeAccessSpecifierPublic)
// struct FFortGameplayEffectContainerSpec EffectContainerSpecToApplyOnExplode                    (Parm, NativeAccessSpecifierPublic)
// class AFortAreaOfEffectCloud*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortAreaOfEffectCloud* UFortKismetLibrary::SpawnAreaOfEffectCloud(TSubclassOf<class AFortAreaOfEffectCloud> AreaOfEffectClass, class AActor* RequestedBy, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnHit, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnExplode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "SpawnAreaOfEffectCloud");

	Params::FortKismetLibrary_SpawnAreaOfEffectCloud Parms{};

	Parms.AreaOfEffectClass = AreaOfEffectClass;
	Parms.RequestedBy = RequestedBy;
	Parms.SpawnLocation = std::move(SpawnLocation);
	Parms.SpawnRotation = std::move(SpawnRotation);
	Parms.EffectContainerSpecToApplyOnHit = std::move(EffectContainerSpecToApplyOnHit);
	Parms.EffectContainerSpecToApplyOnExplode = std::move(EffectContainerSpecToApplyOnExplode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.SpawnBuildingGameplayActor
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class ABuildingGameplayActor>BGAClass                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       Transform                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class AFortPawn*                        Instigator                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABuildingGameplayActor*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABuildingGameplayActor* UFortKismetLibrary::SpawnBuildingGameplayActor(TSubclassOf<class ABuildingGameplayActor> BGAClass, const struct FTransform& Transform, class AFortPawn* Instigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "SpawnBuildingGameplayActor");

	Params::FortKismetLibrary_SpawnBuildingGameplayActor Parms{};

	Parms.BGAClass = BGAClass;
	Parms.Transform = std::move(Transform);
	Parms.Instigator = Instigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.SpawnProjectile
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TSubclassOf<class AFortProjectileBase>  ProjectileClass                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           RequestedBy                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          SpawnLocation                                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         SpawnRotation                                          (ConstParm, Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                         SpawnDirection                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FFortGameplayEffectContainerSpec EffectContainerSpecToApplyOnHit                        (Parm, NativeAccessSpecifierPublic)
// struct FFortGameplayEffectContainerSpec EffectContainerSpecToApplyOnExplode                    (Parm, NativeAccessSpecifierPublic)
// bool                                    bUseDefaultPhysics                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           HomingTarget                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InitialSpeed                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   GravityScale                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ChargePercent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortProjectileBase*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortProjectileBase* UFortKismetLibrary::SpawnProjectile(TSubclassOf<class AFortProjectileBase> ProjectileClass, class AActor* RequestedBy, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, const struct FRotator& SpawnDirection, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnHit, const struct FFortGameplayEffectContainerSpec& EffectContainerSpecToApplyOnExplode, bool bUseDefaultPhysics, class AActor* HomingTarget, float InitialSpeed, float GravityScale, float ChargePercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "SpawnProjectile");

	Params::FortKismetLibrary_SpawnProjectile Parms{};

	Parms.ProjectileClass = ProjectileClass;
	Parms.RequestedBy = RequestedBy;
	Parms.SpawnLocation = std::move(SpawnLocation);
	Parms.SpawnRotation = std::move(SpawnRotation);
	Parms.SpawnDirection = std::move(SpawnDirection);
	Parms.EffectContainerSpecToApplyOnHit = std::move(EffectContainerSpecToApplyOnHit);
	Parms.EffectContainerSpecToApplyOnExplode = std::move(EffectContainerSpecToApplyOnExplode);
	Parms.bUseDefaultPhysics = bUseDefaultPhysics;
	Parms.HomingTarget = HomingTarget;
	Parms.InitialSpeed = InitialSpeed;
	Parms.GravityScale = GravityScale;
	Parms.ChargePercent = ChargePercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.SpawnTracerFromPool
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AFortTracerBase>      TracerClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Origin                                                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Destination                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        Instigator                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortTracerBase*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortTracerBase* UFortKismetLibrary::SpawnTracerFromPool(class UObject* WorldContextObject, TSubclassOf<class AFortTracerBase> TracerClass, const struct FVector& Origin, const struct FVector& Destination, class AFortPawn* Instigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "SpawnTracerFromPool");

	Params::FortKismetLibrary_SpawnTracerFromPool Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TracerClass = TracerClass;
	Parms.Origin = std::move(Origin);
	Parms.Destination = std::move(Destination);
	Parms.Instigator = Instigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.SwitchHeroType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           NewHeroName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortKismetLibrary::SwitchHeroType(class AFortPlayerController* FortPC, const class FString& NewHeroName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "SwitchHeroType");

	Params::FortKismetLibrary_SwitchHeroType Parms{};

	Parms.FortPC = FortPC;
	Parms.NewHeroName = std::move(NewHeroName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortKismetLibrary.TriggerFeedbackEvent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortFeedbackHandle              EventHandle                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class AFortPawn*                        InstigatorPawn                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        Recipient                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OverriddenDelay                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOverriddenQueuing                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAllowReplication                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::TriggerFeedbackEvent(class UObject* WorldContextObject, const struct FFortFeedbackHandle& EventHandle, class AFortPawn* InstigatorPawn, class AFortPawn* Recipient, float OverriddenDelay, bool bOverriddenQueuing, bool bAllowReplication)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "TriggerFeedbackEvent");

	Params::FortKismetLibrary_TriggerFeedbackEvent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EventHandle = std::move(EventHandle);
	Parms.InstigatorPawn = InstigatorPawn;
	Parms.Recipient = Recipient;
	Parms.OverriddenDelay = OverriddenDelay;
	Parms.bOverriddenQueuing = bOverriddenQueuing;
	Parms.bAllowReplication = bAllowReplication;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.UnequipFortAbilitySet
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortAbilitySetHandle            AbilitySetHandle                                       (Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UFortKismetLibrary::UnequipFortAbilitySet(struct FFortAbilitySetHandle& AbilitySetHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "UnequipFortAbilitySet");

	Params::FortKismetLibrary_UnequipFortAbilitySet Parms{};

	Parms.AbilitySetHandle = std::move(AbilitySetHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	AbilitySetHandle = std::move(Parms.AbilitySetHandle);
}


// Function FortniteGame.FortKismetLibrary.UnhideAllTutorialWidgets
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::UnhideAllTutorialWidgets(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "UnhideAllTutorialWidgets");

	Params::FortKismetLibrary_UnhideAllTutorialWidgets Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.UnhideTutorialWidget
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             WidgetName                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortKismetLibrary::UnhideTutorialWidget(class UObject* WorldContextObject, class FName WidgetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "UnhideTutorialWidget");

	Params::FortKismetLibrary_UnhideTutorialWidget Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.WidgetName = WidgetName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortKismetLibrary.VectorToNormalizedAngleInDegrees
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          V                                                      (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortKismetLibrary::VectorToNormalizedAngleInDegrees(const struct FVector& V)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortKismetLibrary", "VectorToNormalizedAngleInDegrees");

	Params::FortKismetLibrary_VectorToNormalizedAngleInDegrees Parms{};

	Parms.V = std::move(V);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortLevelScriptActor.OnMatchStarted
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)

void AFortLevelScriptActor::OnMatchStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLevelScriptActor", "OnMatchStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortLevelScriptActor.OnWorldReady
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)

void AFortLevelScriptActor::OnWorldReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLevelScriptActor", "OnWorldReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortLobbyBeaconClientPvP.ServerReadyUp
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFortLobbyBeaconClientPvP::ServerReadyUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconClientPvP", "ServerReadyUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconClientRM.ServerUpdateNewlyJoinedPlayerInternal
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFortLobbyBeaconClientRM::ServerUpdateNewlyJoinedPlayerInternal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconClientRM", "ServerUpdateNewlyJoinedPlayerInternal");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconClientRM.ServerUpdateReadyStatus
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                                    bIsReady                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortLobbyBeaconClientRM::ServerUpdateReadyStatus(bool bIsReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconClientRM", "ServerUpdateReadyStatus");

	Params::FortLobbyBeaconClientRM_ServerUpdateReadyStatus Parms{};

	Parms.bIsReady = bIsReady;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconClientRM.SetLocalReadyStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsReady                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortLobbyBeaconClientRM::SetLocalReadyStatus(bool bIsReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconClientRM", "SetLocalReadyStatus");

	Params::FortLobbyBeaconClientRM_SetLocalReadyStatus Parms{};

	Parms.bIsReady = bIsReady;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconClientRM.UpdateNewlyJoinedPlayer
// (Final, Native, Protected, BlueprintCallable)

void AFortLobbyBeaconClientRM::UpdateNewlyJoinedPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconClientRM", "UpdateNewlyJoinedPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconClientRM.ClientBroadcastLobbyPlayerPadTop
// (Net, NetReliable, Native, Event, Protected, NetClient, Const)
// Parameters:
// struct FUniqueNetIdRepl                 ReadiedPlayer                                          (ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsReadiedUp                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortLobbyBeaconClientRM::ClientBroadcastLobbyPlayerPadTop(const struct FUniqueNetIdRepl& ReadiedPlayer, bool bIsReadiedUp) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconClientRM", "ClientBroadcastLobbyPlayerPadTop");

	Params::FortLobbyBeaconClientRM_ClientBroadcastLobbyPlayerPadTop Parms{};

	Parms.ReadiedPlayer = std::move(ReadiedPlayer);
	Parms.bIsReadiedUp = bIsReadiedUp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconPlayerState.OnRep_CharacterGender
// (Final, Native, Protected)

void AFortLobbyBeaconPlayerState::OnRep_CharacterGender()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconPlayerState", "OnRep_CharacterGender");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconPlayerState.OnRep_CharXP
// (Final, Native, Protected)

void AFortLobbyBeaconPlayerState::OnRep_CharXP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconPlayerState", "OnRep_CharXP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconPlayerState.OnRep_ConsoleOSSName
// (Final, Native, Protected)

void AFortLobbyBeaconPlayerState::OnRep_ConsoleOSSName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconPlayerState", "OnRep_ConsoleOSSName");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconPlayerState.OnRep_ConsoleUniqueNetId
// (Final, Native, Protected)

void AFortLobbyBeaconPlayerState::OnRep_ConsoleUniqueNetId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconPlayerState", "OnRep_ConsoleUniqueNetId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconPlayerState.OnRep_Gadgets
// (Final, Native, Protected)

void AFortLobbyBeaconPlayerState::OnRep_Gadgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconPlayerState", "OnRep_Gadgets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconPlayerState.OnRep_HeroId
// (Final, Native, Protected)

void AFortLobbyBeaconPlayerState::OnRep_HeroId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconPlayerState", "OnRep_HeroId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconPlayerState.OnRep_HeroSquadId
// (Final, Native, Protected)

void AFortLobbyBeaconPlayerState::OnRep_HeroSquadId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconPlayerState", "OnRep_HeroSquadId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconPlayerState.OnRep_HeroType
// (Final, Native, Protected)

void AFortLobbyBeaconPlayerState::OnRep_HeroType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconPlayerState", "OnRep_HeroType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconPlayerState.OnRep_HomeBaseVersion
// (Final, Native, Protected)

void AFortLobbyBeaconPlayerState::OnRep_HomeBaseVersion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconPlayerState", "OnRep_HomeBaseVersion");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconPlayerState.OnRep_LobbyTimeRemaining
// (Native, Protected)

void AFortLobbyBeaconPlayerState::OnRep_LobbyTimeRemaining()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconPlayerState", "OnRep_LobbyTimeRemaining");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconPlayerStatePvP.OnRep_bReadiedUp
// (Final, Native, Protected)

void AFortLobbyBeaconPlayerStatePvP::OnRep_bReadiedUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconPlayerStatePvP", "OnRep_bReadiedUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeap_EditingTool.OnRep_EditActor
// (Final, Native, Private)

void AFortWeap_EditingTool::OnRep_EditActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeap_EditingTool", "OnRep_EditActor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconState.OnRep_MissionGeneratorClassPath
// (Final, Native, Protected)

void AFortLobbyBeaconState::OnRep_MissionGeneratorClassPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconState", "OnRep_MissionGeneratorClassPath");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconState.OnRep_MissionGeneratorDetailsRequirement
// (Final, Native, Protected)

void AFortLobbyBeaconState::OnRep_MissionGeneratorDetailsRequirement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconState", "OnRep_MissionGeneratorDetailsRequirement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconStatePvP.OnRep_PvPLobbyTimeRemaining
// (Native, Protected)

void AFortLobbyBeaconStatePvP::OnRep_PvPLobbyTimeRemaining()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconStatePvP", "OnRep_PvPLobbyTimeRemaining");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortLobbyBeaconStateRM.OnRep_LobbyTimeRemaining
// (Native, Protected)

void AFortLobbyBeaconStateRM::OnRep_LobbyTimeRemaining()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortLobbyBeaconStateRM", "OnRep_LobbyTimeRemaining");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeaponTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponTooltip", "GetNumericValue");

	Params::FortWeaponTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponTooltip", "GetTextForToken");

	Params::FortWeaponTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponTooltip", "GetTokenizedDescriptionText");

	Params::FortWeaponTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMarkActor.OnRep_AttachedToActor
// (Final, Native, Public)

void AFortMarkActor::OnRep_AttachedToActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMarkActor", "OnRep_AttachedToActor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMatchmakingContext.CancelMatchmaking
// (Final, Native, Public, BlueprintCallable)

void UFortMatchmakingContext::CancelMatchmaking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "CancelMatchmaking");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMatchmakingContext.CheckRejoinStatus
// (Final, Native, Public, BlueprintCallable)

void UFortMatchmakingContext::CheckRejoinStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "CheckRejoinStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMatchmakingContext.DisconnectFromLobby
// (Final, Native, Public, BlueprintCallable)

void UFortMatchmakingContext::DisconnectFromLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "DisconnectFromLobby");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMatchmakingContext.EnterOutpost
// (Final, Native, Public, BlueprintCallable)

void UFortMatchmakingContext::EnterOutpost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "EnterOutpost");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMatchmakingContext.EnterPvPFOB
// (Final, Native, Public, BlueprintCallable)

void UFortMatchmakingContext::EnterPvPFOB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "EnterPvPFOB");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMatchmakingContext.GetLobbyWaitForPlayersTimeRemaining
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortMatchmakingContext::GetLobbyWaitForPlayersTimeRemaining()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "GetLobbyWaitForPlayersTimeRemaining");

	Params::FortMatchmakingContext_GetLobbyWaitForPlayersTimeRemaining Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMatchmakingContext.IsJoinableGameAvailable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMatchmakingContext::IsJoinableGameAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "IsJoinableGameAvailable");

	Params::FortMatchmakingContext_IsJoinableGameAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMatchmakingContext.IsWorldRecordLoaded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMatchmakingContext::IsWorldRecordLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "IsWorldRecordLoaded");

	Params::FortMatchmakingContext_IsWorldRecordLoaded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMatchmakingContext.JoinFromLobby
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMatchmakingContext::JoinFromLobby()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "JoinFromLobby");

	Params::FortMatchmakingContext_JoinFromLobby Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMatchmakingContext.NeedToCheckRejoinStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMatchmakingContext::NeedToCheckRejoinStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "NeedToCheckRejoinStatus");

	Params::FortMatchmakingContext_NeedToCheckRejoinStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMatchmakingContext.ReadyUp
// (Final, Native, Public, BlueprintCallable)

void UFortMatchmakingContext::ReadyUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "ReadyUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMatchmakingContext.SetCustomMatchmakingKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Key                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMatchmakingContext::SetCustomMatchmakingKey(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "SetCustomMatchmakingKey");

	Params::FortMatchmakingContext_SetCustomMatchmakingKey Parms{};

	Parms.Key = std::move(Key);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMatchmakingContext.StartCriticalMission
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   MinMissionDifficulty                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxMissionDifficulty                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMatchmakingContext::StartCriticalMission(float MinMissionDifficulty, float MaxMissionDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "StartCriticalMission");

	Params::FortMatchmakingContext_StartCriticalMission Parms{};

	Parms.MinMissionDifficulty = MinMissionDifficulty;
	Parms.MaxMissionDifficulty = MaxMissionDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMatchmakingContext.StartMatchmaking
// (Final, Native, Public, BlueprintCallable)

void UFortMatchmakingContext::StartMatchmaking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "StartMatchmaking");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMatchmakingContext.StartOnboardingMission
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMatchmakingContext::StartOnboardingMission()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "StartOnboardingMission");

	Params::FortMatchmakingContext_StartOnboardingMission Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMatchmakingContext.StartQuickPlay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   MinMissionDifficulty                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxMissionDifficulty                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMatchmakingContext::StartQuickPlay(float MinMissionDifficulty, float MaxMissionDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "StartQuickPlay");

	Params::FortMatchmakingContext_StartQuickPlay Parms{};

	Parms.MinMissionDifficulty = MinMissionDifficulty;
	Parms.MaxMissionDifficulty = MaxMissionDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMatchmakingContext.GetCustomMatchmakingKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortMatchmakingContext::GetCustomMatchmakingKey() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "GetCustomMatchmakingKey");

	Params::FortMatchmakingContext_GetCustomMatchmakingKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMatchmakingContext.GetLobbyBeaconClient
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortLobbyBeaconClient*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortLobbyBeaconClient* UFortMatchmakingContext::GetLobbyBeaconClient() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "GetLobbyBeaconClient");

	Params::FortMatchmakingContext_GetLobbyBeaconClient Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMatchmakingContext.IsConnectedToGame
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMatchmakingContext::IsConnectedToGame() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "IsConnectedToGame");

	Params::FortMatchmakingContext_IsConnectedToGame Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMatchmakingContext.IsCustomMatchmakingKeyEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMatchmakingContext::IsCustomMatchmakingKeyEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "IsCustomMatchmakingKeyEnabled");

	Params::FortMatchmakingContext_IsCustomMatchmakingKeyEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMatchmakingContext.IsInLobby
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMatchmakingContext::IsInLobby() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "IsInLobby");

	Params::FortMatchmakingContext_IsInLobby Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMatchmakingContext.IsMatchmakingLocal
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMatchmakingContext::IsMatchmakingLocal() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "IsMatchmakingLocal");

	Params::FortMatchmakingContext_IsMatchmakingLocal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMatchmakingContext.IsOutpostPermitted
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMatchmakingContext::IsOutpostPermitted() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMatchmakingContext", "IsOutpostPermitted");

	Params::FortMatchmakingContext_IsOutpostPermitted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAsyncAction_MCPContextUpgradeItem.UpgradeItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UFortMcpContext*                  Param_MCPContext                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        Param_ItemToUpgrade                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_MCPContextUpgradeItem*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_MCPContextUpgradeItem* UFortAsyncAction_MCPContextUpgradeItem::UpgradeItem(const class UFortMcpContext* Param_MCPContext, const class UFortItem* Param_ItemToUpgrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_MCPContextUpgradeItem", "UpgradeItem");

	Params::FortAsyncAction_MCPContextUpgradeItem_UpgradeItem Parms{};

	Parms.Param_MCPContext = Param_MCPContext;
	Parms.Param_ItemToUpgrade = Param_ItemToUpgrade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction FortniteGame.FortAsyncAction_MCPContextUpgradeItem.OnMCPRequestComplete__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortAsyncAction_MCPContextUpgradeItem::OnMCPRequestComplete__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAsyncAction_MCPContextUpgradeItem", "OnMCPRequestComplete__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortAsyncAction_MCPContextRecycleItems.RecycleItems
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortMcpContext*                  Param_MCPContext                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                Param_ItemsToRecycle                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UFortAsyncAction_MCPContextRecycleItems*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_MCPContextRecycleItems* UFortAsyncAction_MCPContextRecycleItems::RecycleItems(const class UFortMcpContext* Param_MCPContext, const TArray<class UFortItem*>& Param_ItemsToRecycle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_MCPContextRecycleItems", "RecycleItems");

	Params::FortAsyncAction_MCPContextRecycleItems_RecycleItems Parms{};

	Parms.Param_MCPContext = Param_MCPContext;
	Parms.Param_ItemsToRecycle = std::move(Param_ItemsToRecycle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction FortniteGame.FortAsyncAction_MCPContextRecycleItems.OnMCPRequestComplete__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortAsyncAction_MCPContextRecycleItems::OnMCPRequestComplete__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAsyncAction_MCPContextRecycleItems", "OnMCPRequestComplete__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortAsyncAction_MCPContextConsumeItem.ConsumeItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortMcpContext*                  Param_MCPContext                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItem*                        Param_ItemToConsume                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 Param_TargetAccountId                                  (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_MCPContextConsumeItem*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_MCPContextConsumeItem* UFortAsyncAction_MCPContextConsumeItem::ConsumeItem(const class UFortMcpContext* Param_MCPContext, const class UFortItem* Param_ItemToConsume, const struct FUniqueNetIdRepl& Param_TargetAccountId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_MCPContextConsumeItem", "ConsumeItem");

	Params::FortAsyncAction_MCPContextConsumeItem_ConsumeItem Parms{};

	Parms.Param_MCPContext = Param_MCPContext;
	Parms.Param_ItemToConsume = Param_ItemToConsume;
	Parms.Param_TargetAccountId = std::move(Param_TargetAccountId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction FortniteGame.FortAsyncAction_MCPContextConsumeItem.OnMCPRequestComplete__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortAsyncAction_MCPContextConsumeItem::OnMCPRequestComplete__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortAsyncAction_MCPContextConsumeItem", "OnMCPRequestComplete__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortMcpContext.AbandonExpedition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMcpContext::AbandonExpedition(const class UFortExpeditionItem* Expedition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "AbandonExpedition");

	Params::FortMcpContext_AbandonExpedition Parms{};

	Parms.Expedition = Expedition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpContext.ApplyAlteration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAlterableItem*               Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAlterationItem*              AlterationToApply                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMcpContext::ApplyAlteration(class UFortAlterableItem* Item, class UFortAlterationItem* AlterationToApply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "ApplyAlteration");

	Params::FortMcpContext_ApplyAlteration Parms{};

	Parms.Item = Item;
	Parms.AlterationToApply = AlterationToApply;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpContext.AreMissionRewardsAvailable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMcpContext::AreMissionRewardsAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "AreMissionRewardsAvailable");

	Params::FortMcpContext_AreMissionRewardsAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.CancelEpicPurchasingDisplay
// (Final, Native, Public, BlueprintCallable)

void UFortMcpContext::CancelEpicPurchasingDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "CancelEpicPurchasingDisplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpContext.CanPurchaseOffer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           OfferId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PriceIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quantity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOfferPurchaseError                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOfferPurchaseError UFortMcpContext::CanPurchaseOffer(const class FString& OfferId, const int32 PriceIndex, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "CanPurchaseOffer");

	Params::FortMcpContext_CanPurchaseOffer Parms{};

	Parms.OfferId = std::move(OfferId);
	Parms.PriceIndex = PriceIndex;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.ClaimAllResourceCollectors
// (Final, Native, Public, BlueprintCallable)

void UFortMcpContext::ClaimAllResourceCollectors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "ClaimAllResourceCollectors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpContext.ClaimResourceCollectors
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortCollectedResourceItem*>CollectorTypes                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortMcpContext::ClaimResourceCollectors(const TArray<class UFortCollectedResourceItem*>& CollectorTypes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "ClaimResourceCollectors");

	Params::FortMcpContext_ClaimResourceCollectors Parms{};

	Parms.CollectorTypes = std::move(CollectorTypes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpContext.CollectExpedition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMcpContext::CollectExpedition(const class UFortExpeditionItem* Expedition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "CollectExpedition");

	Params::FortMcpContext_CollectExpedition Parms{};

	Parms.Expedition = Expedition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpContext.ConvertItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToConvert                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RecipeIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMcpContext::ConvertItem(const class UFortItem* ItemToConvert, int32 RecipeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "ConvertItem");

	Params::FortMcpContext_ConvertItem Parms{};

	Parms.ItemToConvert = ItemToConvert;
	Parms.RecipeIndex = RecipeIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpContext.DoesPlatformSupportFriendCodes
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMcpContext::DoesPlatformSupportFriendCodes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "DoesPlatformSupportFriendCodes");

	Params::FortMcpContext_DoesPlatformSupportFriendCodes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.GetAllResourceCollectors
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortCollectedResourceItem*>ResourceCollectorsOwned                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortMcpContext::GetAllResourceCollectors(TArray<class UFortCollectedResourceItem*>* ResourceCollectorsOwned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetAllResourceCollectors");

	Params::FortMcpContext_GetAllResourceCollectors Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResourceCollectorsOwned != nullptr)
		*ResourceCollectorsOwned = std::move(Parms.ResourceCollectorsOwned);
}


// Function FortniteGame.FortMcpContext.GetEULAText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortMcpContext::GetEULAText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetEULAText");

	Params::FortMcpContext_GetEULAText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.GetFriendCodeDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFriendCode                      FriendCode                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortMcpContext::GetFriendCodeDescription(const struct FFriendCode& FriendCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetFriendCodeDescription");

	Params::FortMcpContext_GetFriendCodeDescription Parms{};

	Parms.FriendCode = std::move(FriendCode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.GetFriendCodeDisplayName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFriendCode                      FriendCode                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortMcpContext::GetFriendCodeDisplayName(const struct FFriendCode& FriendCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetFriendCodeDisplayName");

	Params::FortMcpContext_GetFriendCodeDisplayName Parms{};

	Parms.FriendCode = std::move(FriendCode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.GrantPendingMissionAlertRewards
// (Final, Native, Public, BlueprintCallable)

void UFortMcpContext::GrantPendingMissionAlertRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GrantPendingMissionAlertRewards");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpContext.IsAllowedConversionIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToConvert                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   RecipeIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMcpContext::IsAllowedConversionIndex(const class UFortItem* ItemToConvert, int32 RecipeIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "IsAllowedConversionIndex");

	Params::FortMcpContext_IsAllowedConversionIndex Parms{};

	Parms.ItemToConvert = ItemToConvert;
	Parms.RecipeIndex = RecipeIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.IsOwned
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           OfferId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMcpContext::IsOwned(const class FString& OfferId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "IsOwned");

	Params::FortMcpContext_IsOwned Parms{};

	Parms.OfferId = std::move(OfferId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.IssueFriendCode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(bool bSuccess, struct FFriendCode& FriendCode)>OnCompleteDelegate                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortMcpContext::IssueFriendCode(const TDelegate<void(bool bSuccess, struct FFriendCode& FriendCode)>& OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "IssueFriendCode");

	Params::FortMcpContext_IssueFriendCode Parms{};

	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteGame.FortMcpContext.OnIssueFriendCodeComplete__DelegateSignature
// (Public, Delegate, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendCode                      FriendCode                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortMcpContext::OnIssueFriendCodeComplete__DelegateSignature(bool bSuccess, const struct FFriendCode& FriendCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "OnIssueFriendCodeComplete__DelegateSignature");

	Params::FortMcpContext_OnIssueFriendCodeComplete__DelegateSignature Parms{};

	Parms.bSuccess = bSuccess;
	Parms.FriendCode = std::move(FriendCode);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortMcpContext.ListMtxPackages
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(TArray<struct FMtxPackage>& Offers)>Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<class FString>                   StorefrontNames                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortMcpContext::ListMtxPackages(const TDelegate<void(TArray<struct FMtxPackage>& Offers)>& Callback, const TArray<class FString>& StorefrontNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "ListMtxPackages");

	Params::FortMcpContext_ListMtxPackages Parms{};

	Parms.Callback = Callback;
	Parms.StorefrontNames = std::move(StorefrontNames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpContext.MarkItemSeen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAccountItem*                 ItemToMarkSeen                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMcpContext::MarkItemSeen(class UFortAccountItem* ItemToMarkSeen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "MarkItemSeen");

	Params::FortMcpContext_MarkItemSeen Parms{};

	Parms.ItemToMarkSeen = ItemToMarkSeen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteGame.FortMcpContext.OnQueryUnredeemedFriendCodesComplete__DelegateSignature
// (Public, Delegate, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFriendCode>              FriendCodes                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortMcpContext::OnQueryUnredeemedFriendCodesComplete__DelegateSignature(bool bSuccess, const TArray<struct FFriendCode>& FriendCodes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "OnQueryUnredeemedFriendCodesComplete__DelegateSignature");

	Params::FortMcpContext_OnQueryUnredeemedFriendCodesComplete__DelegateSignature Parms{};

	Parms.bSuccess = bSuccess;
	Parms.FriendCodes = std::move(FriendCodes);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortMcpContext.OnSendFriendCodePlatformMessageComplete__DelegateSignature
// (Public, Delegate)
// Parameters:
// bool                                    bMessageSent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMcpContext::OnSendFriendCodePlatformMessageComplete__DelegateSignature(bool bMessageSent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "OnSendFriendCodePlatformMessageComplete__DelegateSignature");

	Params::FortMcpContext_OnSendFriendCodePlatformMessageComplete__DelegateSignature Parms{};

	Parms.bMessageSent = bMessageSent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortMcpContext.OpenMissionRewards
// (Final, Native, Public, BlueprintCallable)

void UFortMcpContext::OpenMissionRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "OpenMissionRewards");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpContext.PurchaseOffer
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           OfferId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PriceIndex                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccess)>          Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   Quantity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOfferPurchaseError                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOfferPurchaseError UFortMcpContext::PurchaseOffer(const class FString& OfferId, const int32 PriceIndex, const TDelegate<void(bool bSuccess)>& Callback, int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "PurchaseOffer");

	Params::FortMcpContext_PurchaseOffer Parms{};

	Parms.OfferId = std::move(OfferId);
	Parms.PriceIndex = PriceIndex;
	Parms.Callback = Callback;
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.PurchaseRealMoneyCatalogEntry
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           OfferId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccess)>          Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortMcpContext::PurchaseRealMoneyCatalogEntry(const class FString& OfferId, const TDelegate<void(bool bSuccess)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "PurchaseRealMoneyCatalogEntry");

	Params::FortMcpContext_PurchaseRealMoneyCatalogEntry Parms{};

	Parms.OfferId = std::move(OfferId);
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpContext.QueryUnredeemedFriendCodes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(bool bSuccess, TArray<struct FFriendCode>& FriendCodes)>OnCompleteDelegate                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortMcpContext::QueryUnredeemedFriendCodes(const TDelegate<void(bool bSuccess, TArray<struct FFriendCode>& FriendCodes)>& OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "QueryUnredeemedFriendCodes");

	Params::FortMcpContext_QueryUnredeemedFriendCodes Parms{};

	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpContext.RecycleItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToRecycle                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMcpContext::RecycleItem(const class UFortItem* ItemToRecycle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "RecycleItem");

	Params::FortMcpContext_RecycleItem Parms{};

	Parms.ItemToRecycle = ItemToRecycle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpContext.RecycleItemBatch
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortItem*>                ItemsToRecycle                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortMcpContext::RecycleItemBatch(const TArray<class UFortItem*>& ItemsToRecycle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "RecycleItemBatch");

	Params::FortMcpContext_RecycleItemBatch Parms{};

	Parms.ItemsToRecycle = std::move(ItemsToRecycle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpContext.RegisterForEpicPurchasingDisplay
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UWidget* WebWidget, const class FString& OfferId)>DisplayCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       DismissCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortMcpContext::RegisterForEpicPurchasingDisplay(const TDelegate<void(class UWidget* WebWidget, const class FString& OfferId)>& DisplayCallback, const TDelegate<void()>& DismissCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "RegisterForEpicPurchasingDisplay");

	Params::FortMcpContext_RegisterForEpicPurchasingDisplay Parms{};

	Parms.DisplayCallback = DisplayCallback;
	Parms.DismissCallback = DismissCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpContext.SendFriendCodePlatformMessage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFriendCode                      FriendCode                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(bool bMessageSent)>      OnCompleteDelegate                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortMcpContext::SendFriendCodePlatformMessage(const struct FFriendCode& FriendCode, const TDelegate<void(bool bMessageSent)>& OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "SendFriendCodePlatformMessage");

	Params::FortMcpContext_SendFriendCodePlatformMessage Parms{};

	Parms.FriendCode = std::move(FriendCode);
	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpContext.SetItemFavoriteStatus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAccountItem*                 Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFavorite                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMcpContext::SetItemFavoriteStatus(class UFortAccountItem* Item, bool bFavorite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "SetItemFavoriteStatus");

	Params::FortMcpContext_SetItemFavoriteStatus Parms{};

	Parms.Item = Item;
	Parms.bFavorite = bFavorite;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpContext.StartExpedition
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortExpeditionItem*              Expedition                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SuccessChance                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SquadId                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SquadRating                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                SlottedSquadItems                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           SlotIndices                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<float>                           ItemRatingMods                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   GlobalMod                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMcpContext::StartExpedition(const class UFortExpeditionItem* Expedition, const float SuccessChance, const class FName& SquadId, const float SquadRating, const TArray<class UFortItem*>& SlottedSquadItems, const TArray<int32>& SlotIndices, const TArray<float>& ItemRatingMods, float GlobalMod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "StartExpedition");

	Params::FortMcpContext_StartExpedition Parms{};

	Parms.Expedition = Expedition;
	Parms.SuccessChance = SuccessChance;
	Parms.SquadId = SquadId;
	Parms.SquadRating = SquadRating;
	Parms.SlottedSquadItems = std::move(SlottedSquadItems);
	Parms.SlotIndices = std::move(SlotIndices);
	Parms.ItemRatingMods = std::move(ItemRatingMods);
	Parms.GlobalMod = GlobalMod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.TransmogItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortConversionControlItemDefinition*ControlKeyItem                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                ItemsToSacrifice                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortMcpContext::TransmogItem(const class UFortConversionControlItemDefinition* ControlKeyItem, const TArray<class UFortItem*>& ItemsToSacrifice)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "TransmogItem");

	Params::FortMcpContext_TransmogItem Parms{};

	Parms.ControlKeyItem = ControlKeyItem;
	Parms.ItemsToSacrifice = std::move(ItemsToSacrifice);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpContext.UpgradeItemRarity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToUpgrade                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMcpContext::UpgradeItemRarity(const class UFortItem* ItemToUpgrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "UpgradeItemRarity");

	Params::FortMcpContext_UpgradeItemRarity Parms{};

	Parms.ItemToUpgrade = ItemToUpgrade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpContext.DisplayEmptyStoreDialog
// (Final, Native, Public, BlueprintCallable, Const)

void UFortMcpContext::DisplayEmptyStoreDialog() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "DisplayEmptyStoreDialog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMcpContext.GetAccountItemWithDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortAccountItemDefinition*       AccountItemDefinition                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAccountItem*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAccountItem* UFortMcpContext::GetAccountItemWithDefinition(const class UFortAccountItemDefinition* AccountItemDefinition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetAccountItemWithDefinition");

	Params::FortMcpContext_GetAccountItemWithDefinition Parms{};

	Parms.AccountItemDefinition = AccountItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.GetAllAlterations
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortAlterationItem*>      OutAlterations                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// EFortAlteration                         InAlterationType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMcpContext::GetAllAlterations(TArray<class UFortAlterationItem*>* OutAlterations, EFortAlteration InAlterationType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetAllAlterations");

	Params::FortMcpContext_GetAllAlterations Parms{};

	Parms.InAlterationType = InAlterationType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAlterations != nullptr)
		*OutAlterations = std::move(Parms.OutAlterations);
}


// Function FortniteGame.FortMcpContext.GetAllHeroes
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UFortHero*>                Result                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortMcpContext::GetAllHeroes(TArray<class UFortHero*>* Result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetAllHeroes");

	Params::FortMcpContext_GetAllHeroes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function FortniteGame.FortMcpContext.GetAthenaProfile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortMcpProfileAthena*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortMcpProfileAthena* UFortMcpContext::GetAthenaProfile() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetAthenaProfile");

	Params::FortMcpContext_GetAthenaProfile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.GetBattlePassInfoForPlayer
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortBattlePassInfo              Result                                                 (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 MemberUniqueId                                         (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMcpContext::GetBattlePassInfoForPlayer(struct FFortBattlePassInfo* Result, const struct FUniqueNetIdRepl& MemberUniqueId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetBattlePassInfoForPlayer");

	Params::FortMcpContext_GetBattlePassInfoForPlayer Parms{};

	Parms.MemberUniqueId = std::move(MemberUniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function FortniteGame.FortMcpContext.GetCurrentlyViewedAccountInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortPublicAccountInfo           Result                                                 (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortMcpContext::GetCurrentlyViewedAccountInfo(struct FFortPublicAccountInfo* Result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetCurrentlyViewedAccountInfo");

	Params::FortMcpContext_GetCurrentlyViewedAccountInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function FortniteGame.FortMcpContext.GetDefaultHero
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortHero*                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortHero* UFortMcpContext::GetDefaultHero() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetDefaultHero");

	Params::FortMcpContext_GetDefaultHero Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.GetGroupXpBonusPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMcpContext::GetGroupXpBonusPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetGroupXpBonusPercent");

	Params::FortMcpContext_GetGroupXpBonusPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.GetHeroXpBalance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMcpContext::GetHeroXpBalance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetHeroXpBalance");

	Params::FortMcpContext_GetHeroXpBalance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.GetHomeBaseInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortHomeBaseInfo                Result                                                 (Parm, OutParm, NativeAccessSpecifierPublic)

void UFortMcpContext::GetHomeBaseInfo(struct FFortHomeBaseInfo* Result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetHomeBaseInfo");

	Params::FortMcpContext_GetHomeBaseInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function FortniteGame.FortMcpContext.GetHomeBaseInfoForPlayer
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortHomeBaseInfo                Result                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 MemberUniqueId                                         (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMcpContext::GetHomeBaseInfoForPlayer(struct FFortHomeBaseInfo* Result, const struct FUniqueNetIdRepl& MemberUniqueId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetHomeBaseInfoForPlayer");

	Params::FortMcpContext_GetHomeBaseInfoForPlayer Parms{};

	Parms.MemberUniqueId = std::move(MemberUniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function FortniteGame.FortMcpContext.GetLoadoutForPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 MemberUniqueId                                         (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortAthenaLoadout               ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortAthenaLoadout UFortMcpContext::GetLoadoutForPlayer(const struct FUniqueNetIdRepl& MemberUniqueId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetLoadoutForPlayer");

	Params::FortMcpContext_GetLoadoutForPlayer Parms{};

	Parms.MemberUniqueId = std::move(MemberUniqueId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.GetLocalAccountInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortPrivateAccountInfo          Result                                                 (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortMcpContext::GetLocalAccountInfo(struct FFortPrivateAccountInfo* Result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetLocalAccountInfo");

	Params::FortMcpContext_GetLocalAccountInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function FortniteGame.FortMcpContext.GetLoginStatusText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortMcpContext::GetLoginStatusText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetLoginStatusText");

	Params::FortMcpContext_GetLoginStatusText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.GetMcpProfile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortMcpProfileAccount*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortMcpProfileAccount* UFortMcpContext::GetMcpProfile() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetMcpProfile");

	Params::FortMcpContext_GetMcpProfile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.GetNumFriendCodesToIssue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMcpContext::GetNumFriendCodesToIssue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetNumFriendCodesToIssue");

	Params::FortMcpContext_GetNumFriendCodesToIssue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.GetPersonalXpBonusPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMcpContext::GetPersonalXpBonusPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetPersonalXpBonusPercent");

	Params::FortMcpContext_GetPersonalXpBonusPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.GetPersonnelXpBalance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMcpContext::GetPersonnelXpBalance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetPersonnelXpBalance");

	Params::FortMcpContext_GetPersonnelXpBalance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.GetPlayersXPPercentContributionToLocalPlayer
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerID                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMcpContext::GetPlayersXPPercentContributionToLocalPlayer(const struct FUniqueNetIdRepl& PlayerID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetPlayersXPPercentContributionToLocalPlayer");

	Params::FortMcpContext_GetPlayersXPPercentContributionToLocalPlayer Parms{};

	Parms.PlayerID = std::move(PlayerID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.GetRestXpBalance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMcpContext::GetRestXpBalance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetRestXpBalance");

	Params::FortMcpContext_GetRestXpBalance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.GetRestXpBonusPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMcpContext::GetRestXpBonusPercent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetRestXpBonusPercent");

	Params::FortMcpContext_GetRestXpBonusPercent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.GetSchematicXpBalance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMcpContext::GetSchematicXpBalance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetSchematicXpBalance");

	Params::FortMcpContext_GetSchematicXpBalance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.GetUpgradeXPBalance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortItemType                           ItemTypeToBeUpgraded                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMcpContext::GetUpgradeXPBalance(const EFortItemType ItemTypeToBeUpgraded) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetUpgradeXPBalance");

	Params::FortMcpContext_GetUpgradeXPBalance Parms{};

	Parms.ItemTypeToBeUpgraded = ItemTypeToBeUpgraded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.GetXpBoostBalance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMcpContext::GetXpBoostBalance() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "GetXpBoostBalance");

	Params::FortMcpContext_GetXpBoostBalance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.HasPendingMissionAlertRewards
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMcpContext::HasPendingMissionAlertRewards() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "HasPendingMissionAlertRewards");

	Params::FortMcpContext_HasPendingMissionAlertRewards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.IsDailyRewardAvailable
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   OutMinutesUntilNextReward                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMcpContext::IsDailyRewardAvailable(int32* OutMinutesUntilNextReward) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "IsDailyRewardAvailable");

	Params::FortMcpContext_IsDailyRewardAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMinutesUntilNextReward != nullptr)
		*OutMinutesUntilNextReward = Parms.OutMinutesUntilNextReward;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpContext.IsLocalPlayersUniqueID
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerID                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMcpContext::IsLocalPlayersUniqueID(const struct FUniqueNetIdRepl& PlayerID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpContext", "IsLocalPlayersUniqueID");

	Params::FortMcpContext_IsLocalPlayersUniqueID Parms{};

	Parms.PlayerID = std::move(PlayerID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpProfileQuest.ClaimQuestReward
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           QuestId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SelectedRewardIndex                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileQuest::ClaimQuestReward(const class FString& QuestId, int32 SelectedRewardIndex, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileQuest", "ClaimQuestReward");

	Params::FortMcpProfileQuest_ClaimQuestReward Parms{};

	Parms.QuestId = std::move(QuestId);
	Parms.SelectedRewardIndex = SelectedRewardIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileQuest.ClientQuestLogin
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileQuest::ClientQuestLogin(struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileQuest", "ClientQuestLogin");

	Params::FortMcpProfileQuest_ClientQuestLogin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileQuest.FortRerollDailyQuest
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           QuestId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileQuest::FortRerollDailyQuest(const class FString& QuestId, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileQuest", "FortRerollDailyQuest");

	Params::FortMcpProfileQuest_FortRerollDailyQuest Parms{};

	Parms.QuestId = std::move(QuestId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileQuest.MarkItemSeen
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<class FString>                   ItemIds                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileQuest::MarkItemSeen(const TArray<class FString>& ItemIds, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileQuest", "MarkItemSeen");

	Params::FortMcpProfileQuest_MarkItemSeen Parms{};

	Parms.ItemIds = std::move(ItemIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileQuest.MarkNewQuestNotificationSent
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<class FString>                   ItemIds                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileQuest::MarkNewQuestNotificationSent(const TArray<class FString>& ItemIds, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileQuest", "MarkNewQuestNotificationSent");

	Params::FortMcpProfileQuest_MarkNewQuestNotificationSent Parms{};

	Parms.ItemIds = std::move(ItemIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileQuest.ServerQuestLogin
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           MatchmakingSessionId                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileQuest::ServerQuestLogin(const class FString& MatchmakingSessionId, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileQuest", "ServerQuestLogin");

	Params::FortMcpProfileQuest_ServerQuestLogin Parms{};

	Parms.MatchmakingSessionId = std::move(MatchmakingSessionId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileQuest.SetPinnedQuests
// (Net, NetReliable, NetRequest, Native, Event, Protected, HasOutParams)
// Parameters:
// TArray<class FString>                   PinnedQuestIds                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileQuest::SetPinnedQuests(const TArray<class FString>& PinnedQuestIds, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileQuest", "SetPinnedQuests");

	Params::FortMcpProfileQuest_SetPinnedQuests Parms{};

	Parms.PinnedQuestIds = std::move(PinnedQuestIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileQuest.UpdateQuestClientObjectives
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<struct FFortQuestObjectiveCompletion>Advance                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileQuest::UpdateQuestClientObjectives(const TArray<struct FFortQuestObjectiveCompletion>& Advance, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileQuest", "UpdateQuestClientObjectives");

	Params::FortMcpProfileQuest_UpdateQuestClientObjectives Parms{};

	Parms.Advance = std::move(Advance);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileQuest.UpdateQuests
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<struct FFortQuestObjectiveCompletion>Advance                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileQuest::UpdateQuests(const TArray<struct FFortQuestObjectiveCompletion>& Advance, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileQuest", "UpdateQuests");

	Params::FortMcpProfileQuest_UpdateQuests Parms{};

	Parms.Advance = std::move(Advance);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.AbandonExpedition
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           ExpeditionId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::AbandonExpedition(const class FString& ExpeditionId, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "AbandonExpedition");

	Params::FortMcpProfileAccount_AbandonExpedition Parms{};

	Parms.ExpeditionId = std::move(ExpeditionId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.ActivateConsumable
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           TargetItemId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           TargetAccountId                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::ActivateConsumable(const class FString& TargetItemId, const class FString& TargetAccountId, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "ActivateConsumable");

	Params::FortMcpProfileAccount_ActivateConsumable Parms{};

	Parms.TargetItemId = std::move(TargetItemId);
	Parms.TargetAccountId = std::move(TargetAccountId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.ApplyAlteration
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           TargetItemId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           AlterationItemId                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::ApplyAlteration(const class FString& TargetItemId, const class FString& AlterationItemId, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "ApplyAlteration");

	Params::FortMcpProfileAccount_ApplyAlteration Parms{};

	Parms.TargetItemId = std::move(TargetItemId);
	Parms.AlterationItemId = std::move(AlterationItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.AssignWorkerToSquad
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           CharacterId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SquadId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::AssignWorkerToSquad(const class FString& CharacterId, const class FString& SquadId, int32 SlotIndex, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "AssignWorkerToSquad");

	Params::FortMcpProfileAccount_AssignWorkerToSquad Parms{};

	Parms.CharacterId = std::move(CharacterId);
	Parms.SquadId = std::move(SquadId);
	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.AssignWorkerToSquadBatch
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<class FString>                   CharacterIds                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>                   SquadIds                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           SlotIndices                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::AssignWorkerToSquadBatch(const TArray<class FString>& CharacterIds, const TArray<class FString>& SquadIds, const TArray<int32>& SlotIndices, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "AssignWorkerToSquadBatch");

	Params::FortMcpProfileAccount_AssignWorkerToSquadBatch Parms{};

	Parms.CharacterIds = std::move(CharacterIds);
	Parms.SquadIds = std::move(SquadIds);
	Parms.SlotIndices = std::move(SlotIndices);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.ClaimCollectedResources
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<class FString>                   CollectorsToClaim                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::ClaimCollectedResources(const TArray<class FString>& CollectorsToClaim, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "ClaimCollectedResources");

	Params::FortMcpProfileAccount_ClaimCollectedResources Parms{};

	Parms.CollectorsToClaim = std::move(CollectorsToClaim);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.ClaimCollectionBookRewards
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// int32                                   RequiredXp                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SelectedRewardIndex                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::ClaimCollectionBookRewards(int32 RequiredXp, int32 SelectedRewardIndex, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "ClaimCollectionBookRewards");

	Params::FortMcpProfileAccount_ClaimCollectionBookRewards Parms{};

	Parms.RequiredXp = RequiredXp;
	Parms.SelectedRewardIndex = SelectedRewardIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.ClaimLoginReward
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::ClaimLoginReward(struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "ClaimLoginReward");

	Params::FortMcpProfileAccount_ClaimLoginReward Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.ClaimMissionAlertRewards
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::ClaimMissionAlertRewards(struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "ClaimMissionAlertRewards");

	Params::FortMcpProfileAccount_ClaimMissionAlertRewards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.CollectExpedition
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           ExpeditionTemplate                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ExpeditionId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::CollectExpedition(const class FString& ExpeditionTemplate, const class FString& ExpeditionId, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "CollectExpedition");

	Params::FortMcpProfileAccount_CollectExpedition Parms{};

	Parms.ExpeditionTemplate = std::move(ExpeditionTemplate);
	Parms.ExpeditionId = std::move(ExpeditionId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.ConsumeItems
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<class FString>                   ItemsToConsumeIds                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           ItemCountsToConsume                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ConsumeReason                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::ConsumeItems(const TArray<class FString>& ItemsToConsumeIds, const TArray<int32>& ItemCountsToConsume, const class FString& ConsumeReason, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "ConsumeItems");

	Params::FortMcpProfileAccount_ConsumeItems Parms{};

	Parms.ItemsToConsumeIds = std::move(ItemsToConsumeIds);
	Parms.ItemCountsToConsume = std::move(ItemCountsToConsume);
	Parms.ConsumeReason = std::move(ConsumeReason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.ConvertItem
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           TargetItemId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ConversionIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::ConvertItem(const class FString& TargetItemId, int32 ConversionIndex, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "ConvertItem");

	Params::FortMcpProfileAccount_ConvertItem Parms{};

	Parms.TargetItemId = std::move(TargetItemId);
	Parms.ConversionIndex = ConversionIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.EarnScore
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<struct FAccountIdAndScore>       PlayersAndScores                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           MatchmakingSessionId                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::EarnScore(const TArray<struct FAccountIdAndScore>& PlayersAndScores, const class FString& MatchmakingSessionId, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "EarnScore");

	Params::FortMcpProfileAccount_EarnScore Parms{};

	Parms.PlayersAndScores = std::move(PlayersAndScores);
	Parms.MatchmakingSessionId = std::move(MatchmakingSessionId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.EndPrimaryMission
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<struct FFortQuestObjectiveCompletion>Advance                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           MatchmakingSessionId                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           MissionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           MissionStatus                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortQuestEarnedBadgeData>EarnedBadgeData                                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   NumMissionPoints                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCriticalMatchBonus                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::EndPrimaryMission(const TArray<struct FFortQuestObjectiveCompletion>& Advance, const class FString& MatchmakingSessionId, const class FString& MissionName, const class FString& MissionStatus, const TArray<struct FFortQuestEarnedBadgeData>& EarnedBadgeData, int32 NumMissionPoints, bool bCriticalMatchBonus, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "EndPrimaryMission");

	Params::FortMcpProfileAccount_EndPrimaryMission Parms{};

	Parms.Advance = std::move(Advance);
	Parms.MatchmakingSessionId = std::move(MatchmakingSessionId);
	Parms.MissionName = std::move(MissionName);
	Parms.MissionStatus = std::move(MissionStatus);
	Parms.EarnedBadgeData = std::move(EarnedBadgeData);
	Parms.NumMissionPoints = NumMissionPoints;
	Parms.bCriticalMatchBonus = bCriticalMatchBonus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.EquipCharCosmetic
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           CharacterId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CosmeticId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TypeId                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::EquipCharCosmetic(const class FString& CharacterId, const class FString& CosmeticId, int32 TypeId, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "EquipCharCosmetic");

	Params::FortMcpProfileAccount_EquipCharCosmetic Parms{};

	Parms.CharacterId = std::move(CharacterId);
	Parms.CosmeticId = std::move(CosmeticId);
	Parms.TypeId = TypeId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.IncrementNamedCounterStat
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           CounterName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::IncrementNamedCounterStat(const class FString& CounterName, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "IncrementNamedCounterStat");

	Params::FortMcpProfileAccount_IncrementNamedCounterStat Parms{};

	Parms.CounterName = std::move(CounterName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.IssueFriendCode
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           CodeTokenType                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::IssueFriendCode(const class FString& CodeTokenType, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "IssueFriendCode");

	Params::FortMcpProfileAccount_IssueFriendCode Parms{};

	Parms.CodeTokenType = std::move(CodeTokenType);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.ModifyMission
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           MatchmakingSessionId                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Difficulty                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::ModifyMission(const class FString& MatchmakingSessionId, const class FString& Difficulty, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "ModifyMission");

	Params::FortMcpProfileAccount_ModifyMission Parms{};

	Parms.MatchmakingSessionId = std::move(MatchmakingSessionId);
	Parms.Difficulty = std::move(Difficulty);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.OpenCardPack
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           CardPackItemId                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SelectionIdx                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::OpenCardPack(const class FString& CardPackItemId, int32 SelectionIdx, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "OpenCardPack");

	Params::FortMcpProfileAccount_OpenCardPack Parms{};

	Parms.CardPackItemId = std::move(CardPackItemId);
	Parms.SelectionIdx = SelectionIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.OpenCardPackBatch
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<class FString>                   CardPackItemIds                                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::OpenCardPackBatch(const TArray<class FString>& CardPackItemIds, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "OpenCardPackBatch");

	Params::FortMcpProfileAccount_OpenCardPackBatch Parms{};

	Parms.CardPackItemIds = std::move(CardPackItemIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.PurchaseHomebaseNode
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           NodeID                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::PurchaseHomebaseNode(const class FString& NodeID, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "PurchaseHomebaseNode");

	Params::FortMcpProfileAccount_PurchaseHomebaseNode Parms{};

	Parms.NodeID = std::move(NodeID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.RecycleItem
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           TargetItemId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::RecycleItem(const class FString& TargetItemId, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "RecycleItem");

	Params::FortMcpProfileAccount_RecycleItem Parms{};

	Parms.TargetItemId = std::move(TargetItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.RecycleItemBatch
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<class FString>                   TargetItemIds                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::RecycleItemBatch(const TArray<class FString>& TargetItemIds, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "RecycleItemBatch");

	Params::FortMcpProfileAccount_RecycleItemBatch Parms{};

	Parms.TargetItemIds = std::move(TargetItemIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.RefreshExpeditions
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::RefreshExpeditions(struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "RefreshExpeditions");

	Params::FortMcpProfileAccount_RefreshExpeditions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.SetDefaultHeroSquad
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           DefaultHeroSquadId                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::SetDefaultHeroSquad(const class FString& DefaultHeroSquadId, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "SetDefaultHeroSquad");

	Params::FortMcpProfileAccount_SetDefaultHeroSquad Parms{};

	Parms.DefaultHeroSquadId = std::move(DefaultHeroSquadId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.SetGameplayStats
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<struct FFortPersistentGameplayStatValue>GameplayStats                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::SetGameplayStats(const TArray<struct FFortPersistentGameplayStatValue>& GameplayStats, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "SetGameplayStats");

	Params::FortMcpProfileAccount_SetGameplayStats Parms{};

	Parms.GameplayStats = std::move(GameplayStats);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.SetHeroModeLoadout
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           HeroId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortSavedModeLoadout            ModeLoadout                                            (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::SetHeroModeLoadout(const class FString& HeroId, const struct FFortSavedModeLoadout& ModeLoadout, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "SetHeroModeLoadout");

	Params::FortMcpProfileAccount_SetHeroModeLoadout Parms{};

	Parms.HeroId = std::move(HeroId);
	Parms.ModeLoadout = std::move(ModeLoadout);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.SetHomebaseBanner
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           HomebaseBannerIconId                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           HomebaseBannerColorId                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::SetHomebaseBanner(const class FString& HomebaseBannerIconId, const class FString& HomebaseBannerColorId, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "SetHomebaseBanner");

	Params::FortMcpProfileAccount_SetHomebaseBanner Parms{};

	Parms.HomebaseBannerIconId = std::move(HomebaseBannerIconId);
	Parms.HomebaseBannerColorId = std::move(HomebaseBannerColorId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.SetHomebaseMeta
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           TownName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FlagPattern                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FlagColor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::SetHomebaseMeta(const class FString& TownName, int32 FlagPattern, float FlagColor, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "SetHomebaseMeta");

	Params::FortMcpProfileAccount_SetHomebaseMeta Parms{};

	Parms.TownName = std::move(TownName);
	Parms.FlagPattern = FlagPattern;
	Parms.FlagColor = FlagColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.SetHomebaseName
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           HomebaseName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::SetHomebaseName(const class FString& HomebaseName, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "SetHomebaseName");

	Params::FortMcpProfileAccount_SetHomebaseName Parms{};

	Parms.HomebaseName = std::move(HomebaseName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.SetItemFavoriteStatus
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           TargetItemId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFavorite                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::SetItemFavoriteStatus(const class FString& TargetItemId, bool bFavorite, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "SetItemFavoriteStatus");

	Params::FortMcpProfileAccount_SetItemFavoriteStatus Parms{};

	Parms.TargetItemId = std::move(TargetItemId);
	Parms.bFavorite = bFavorite;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.SetModeLoadout
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// struct FFortSavedModeLoadout            ModeLoadout                                            (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           HeroId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortSavedModeLoadout            HeroModeLoadout                                        (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::SetModeLoadout(const struct FFortSavedModeLoadout& ModeLoadout, const class FString& HeroId, const struct FFortSavedModeLoadout& HeroModeLoadout, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "SetModeLoadout");

	Params::FortMcpProfileAccount_SetModeLoadout Parms{};

	Parms.ModeLoadout = std::move(ModeLoadout);
	Parms.HeroId = std::move(HeroId);
	Parms.HeroModeLoadout = std::move(HeroModeLoadout);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.SetMtxPlatform
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// EFortMtxPlatform                        NewPlatform                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::SetMtxPlatform(const EFortMtxPlatform NewPlatform, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "SetMtxPlatform");

	Params::FortMcpProfileAccount_SetMtxPlatform Parms{};

	Parms.NewPlatform = NewPlatform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.SkipTutorial
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::SkipTutorial(struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "SkipTutorial");

	Params::FortMcpProfileAccount_SkipTutorial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.SlotItemInCollectionBook
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           ItemId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::SlotItemInCollectionBook(const class FString& ItemId, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "SlotItemInCollectionBook");

	Params::FortMcpProfileAccount_SlotItemInCollectionBook Parms{};

	Parms.ItemId = std::move(ItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.StartExpedition
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           ExpeditionId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SquadId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ItemIds                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           SlotIndices                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::StartExpedition(const class FString& ExpeditionId, const class FString& SquadId, const TArray<class FString>& ItemIds, const TArray<int32>& SlotIndices, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "StartExpedition");

	Params::FortMcpProfileAccount_StartExpedition Parms{};

	Parms.ExpeditionId = std::move(ExpeditionId);
	Parms.SquadId = std::move(SquadId);
	Parms.ItemIds = std::move(ItemIds);
	Parms.SlotIndices = std::move(SlotIndices);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.StartPrimaryMission
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<struct FFortQuestObjectiveCompletion>Advance                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           MatchmakingSessionId                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           MissionName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::StartPrimaryMission(const TArray<struct FFortQuestObjectiveCompletion>& Advance, const class FString& MatchmakingSessionId, const class FString& MissionName, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "StartPrimaryMission");

	Params::FortMcpProfileAccount_StartPrimaryMission Parms{};

	Parms.Advance = std::move(Advance);
	Parms.MatchmakingSessionId = std::move(MatchmakingSessionId);
	Parms.MissionName = std::move(MissionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.TransmogItem
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           TransmogKeyTemplateId                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   SacrificeItemIds                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::TransmogItem(const class FString& TransmogKeyTemplateId, const TArray<class FString>& SacrificeItemIds, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "TransmogItem");

	Params::FortMcpProfileAccount_TransmogItem Parms{};

	Parms.TransmogKeyTemplateId = std::move(TransmogKeyTemplateId);
	Parms.SacrificeItemIds = std::move(SacrificeItemIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.TwitchUpdateBroadcasterRegistration
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           AccessToken                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ChannelId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::TwitchUpdateBroadcasterRegistration(const class FString& AccessToken, const class FString& ChannelId, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "TwitchUpdateBroadcasterRegistration");

	Params::FortMcpProfileAccount_TwitchUpdateBroadcasterRegistration Parms{};

	Parms.AccessToken = std::move(AccessToken);
	Parms.ChannelId = std::move(ChannelId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.UnassignAllSquads
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<class FString>                   SquadIds                                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::UnassignAllSquads(const TArray<class FString>& SquadIds, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "UnassignAllSquads");

	Params::FortMcpProfileAccount_UnassignAllSquads Parms{};

	Parms.SquadIds = std::move(SquadIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.UnloadWarehouse
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<class FString>                   ResourceTypes                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::UnloadWarehouse(const TArray<class FString>& ResourceTypes, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "UnloadWarehouse");

	Params::FortMcpProfileAccount_UnloadWarehouse Parms{};

	Parms.ResourceTypes = std::move(ResourceTypes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.UnslotAllWorkers
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<class FString>                   BuildingIds                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::UnslotAllWorkers(const TArray<class FString>& BuildingIds, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "UnslotAllWorkers");

	Params::FortMcpProfileAccount_UnslotAllWorkers Parms{};

	Parms.BuildingIds = std::move(BuildingIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.UpdateBuildingLevelAndRating
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           BuildingId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LastBuildingLevel                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LastBuildingRating                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::UpdateBuildingLevelAndRating(const class FString& BuildingId, int32 LastBuildingLevel, int32 LastBuildingRating, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "UpdateBuildingLevelAndRating");

	Params::FortMcpProfileAccount_UpdateBuildingLevelAndRating Parms{};

	Parms.BuildingId = std::move(BuildingId);
	Parms.LastBuildingLevel = LastBuildingLevel;
	Parms.LastBuildingRating = LastBuildingRating;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.UpgradeItem
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           TargetItemId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::UpgradeItem(const class FString& TargetItemId, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "UpgradeItem");

	Params::FortMcpProfileAccount_UpgradeItem Parms{};

	Parms.TargetItemId = std::move(TargetItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAccount.UpgradeItemRarity
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           TargetItemId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAccount::UpgradeItemRarity(const class FString& TargetItemId, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAccount", "UpgradeItemRarity");

	Params::FortMcpProfileAccount_UpgradeItemRarity Parms{};

	Parms.TargetItemId = std::move(TargetItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAthena.EndBattleRoyaleGame
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<struct FFortQuestObjectiveCompletion>Advance                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EFortAthenaPlaylist                     MatchType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MinutesAlive                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PersonalKills                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TeamKills                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Placement                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FriendshipXpBoost                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CosmeticXpBoost                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   Medals                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAthena::EndBattleRoyaleGame(const TArray<struct FFortQuestObjectiveCompletion>& Advance, EFortAthenaPlaylist MatchType, int32 MinutesAlive, int32 PersonalKills, int32 TeamKills, int32 Placement, int32 FriendshipXpBoost, int32 CosmeticXpBoost, const TArray<class FString>& Medals, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAthena", "EndBattleRoyaleGame");

	Params::FortMcpProfileAthena_EndBattleRoyaleGame Parms{};

	Parms.Advance = std::move(Advance);
	Parms.MatchType = MatchType;
	Parms.MinutesAlive = MinutesAlive;
	Parms.PersonalKills = PersonalKills;
	Parms.TeamKills = TeamKills;
	Parms.Placement = Placement;
	Parms.FriendshipXpBoost = FriendshipXpBoost;
	Parms.CosmeticXpBoost = CosmeticXpBoost;
	Parms.Medals = std::move(Medals);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAthena.EquipBattleRoyaleCustomization
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// EAthenaCustomizationCategory            SlotName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ItemToSlot                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IndexWithinSlot                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAthena::EquipBattleRoyaleCustomization(EAthenaCustomizationCategory SlotName, const class FString& ItemToSlot, int32 IndexWithinSlot, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAthena", "EquipBattleRoyaleCustomization");

	Params::FortMcpProfileAthena_EquipBattleRoyaleCustomization Parms{};

	Parms.SlotName = SlotName;
	Parms.ItemToSlot = std::move(ItemToSlot);
	Parms.IndexWithinSlot = IndexWithinSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAthena.GetSeasonLevelInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SeasonLevel                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAthenaSeasonRewardLevelInfo     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAthenaSeasonRewardLevelInfo UFortMcpProfileAthena::GetSeasonLevelInfo(int32 SeasonLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAthena", "GetSeasonLevelInfo");

	Params::FortMcpProfileAthena_GetSeasonLevelInfo Parms{};

	Parms.SeasonLevel = SeasonLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpProfileAthena.GetSeasonLevelUpReward
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   SeasonLevel                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortItemInstanceQuantityPair    Reward                                                 (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   RewardLevel                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMcpProfileAthena::GetSeasonLevelUpReward(int32 SeasonLevel, struct FFortItemInstanceQuantityPair* Reward, int32* RewardLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAthena", "GetSeasonLevelUpReward");

	Params::FortMcpProfileAthena_GetSeasonLevelUpReward Parms{};

	Parms.SeasonLevel = SeasonLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Reward != nullptr)
		*Reward = std::move(Parms.Reward);

	if (RewardLevel != nullptr)
		*RewardLevel = Parms.RewardLevel;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpProfileAthena.ReportConsumableUsed
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// int32                                   UsedQuantity                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ItemType                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAthena::ReportConsumableUsed(int32 UsedQuantity, const class FString& ItemType, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAthena", "ReportConsumableUsed");

	Params::FortMcpProfileAthena_ReportConsumableUsed Parms{};

	Parms.UsedQuantity = UsedQuantity;
	Parms.ItemType = std::move(ItemType);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAthena.SetBattleRoyaleBanner
// (Final, Net, NetReliable, NetRequest, Native, Event, Private, HasOutParams)
// Parameters:
// class FString                           HomebaseBannerIconId                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           HomebaseBannerColorId                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileAthena::SetBattleRoyaleBanner(const class FString& HomebaseBannerIconId, const class FString& HomebaseBannerColorId, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAthena", "SetBattleRoyaleBanner");

	Params::FortMcpProfileAthena_SetBattleRoyaleBanner Parms{};

	Parms.HomebaseBannerIconId = std::move(HomebaseBannerIconId);
	Parms.HomebaseBannerColorId = std::move(HomebaseBannerColorId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileAthena.CanPurchaseSeasonBook
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMcpProfileAthena::CanPurchaseSeasonBook() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAthena", "CanPurchaseSeasonBook");

	Params::FortMcpProfileAthena_CanPurchaseSeasonBook Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpProfileAthena.GetActiveSeasonDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAthenaSeasonItemDefinition*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAthenaSeasonItemDefinition* UFortMcpProfileAthena::GetActiveSeasonDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAthena", "GetActiveSeasonDefinition");

	Params::FortMcpProfileAthena_GetActiveSeasonDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpProfileAthena.GetSeasonFriendMatchXpBoost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMcpProfileAthena::GetSeasonFriendMatchXpBoost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAthena", "GetSeasonFriendMatchXpBoost");

	Params::FortMcpProfileAthena_GetSeasonFriendMatchXpBoost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpProfileAthena.GetSeasonMatchXpBoost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMcpProfileAthena::GetSeasonMatchXpBoost() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAthena", "GetSeasonMatchXpBoost");

	Params::FortMcpProfileAthena_GetSeasonMatchXpBoost Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpProfileAthena.HasPurchasedSeasonBook
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMcpProfileAthena::HasPurchasedSeasonBook() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileAthena", "HasPurchasedSeasonBook");

	Params::FortMcpProfileAthena_HasPurchasedSeasonBook Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMcpProfileMetadata.CreateDeployableBaseItem
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           TemplateId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileMetadata::CreateDeployableBaseItem(const class FString& TemplateId, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileMetadata", "CreateDeployableBaseItem");

	Params::FortMcpProfileMetadata_CreateDeployableBaseItem Parms{};

	Parms.TemplateId = std::move(TemplateId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileMetadata.CreateOrUpgradeOutpostItem
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           TemplateId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileMetadata::CreateOrUpgradeOutpostItem(const class FString& TemplateId, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileMetadata", "CreateOrUpgradeOutpostItem");

	Params::FortMcpProfileMetadata_CreateOrUpgradeOutpostItem Parms{};

	Parms.TemplateId = std::move(TemplateId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileMetadata.UpdateDeployableBaseTierProgression
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           DeployableBaseItemId                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ProgressionLayoutGuid                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TierDefeated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileMetadata::UpdateDeployableBaseTierProgression(const class FString& DeployableBaseItemId, const class FString& ProgressionLayoutGuid, int32 TierDefeated, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileMetadata", "UpdateDeployableBaseTierProgression");

	Params::FortMcpProfileMetadata_UpdateDeployableBaseTierProgression Parms{};

	Parms.DeployableBaseItemId = std::move(DeployableBaseItemId);
	Parms.ProgressionLayoutGuid = std::move(ProgressionLayoutGuid);
	Parms.TierDefeated = TierDefeated;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileMetadata.UpdateOutpostCore
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           CoreId                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortOutpostCoreInfo             CoreInfo                                               (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileMetadata::UpdateOutpostCore(const class FString& CoreId, const struct FFortOutpostCoreInfo& CoreInfo, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileMetadata", "UpdateOutpostCore");

	Params::FortMcpProfileMetadata_UpdateOutpostCore Parms{};

	Parms.CoreId = std::move(CoreId);
	Parms.CoreInfo = std::move(CoreInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileWorld.AbortDisintegration
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileWorld::AbortDisintegration(struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileWorld", "AbortDisintegration");

	Params::FortMcpProfileWorld_AbortDisintegration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileWorld.BatchUpdatePlayers
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<struct FFortBatchUpdatePlayer_Update>Updates                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileWorld::BatchUpdatePlayers(const TArray<struct FFortBatchUpdatePlayer_Update>& Updates, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileWorld", "BatchUpdatePlayers");

	Params::FortMcpProfileWorld_BatchUpdatePlayers Parms{};

	Parms.Updates = std::move(Updates);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileWorld.BatchUpdatePlayers_DeployableBase
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<struct FFortBatchUpdatePlayer_Update>Updates                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FFortBatchUpdatePlayer_DeployableBaseUpdate>DeployableBaseUpdates                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileWorld::BatchUpdatePlayers_DeployableBase(const TArray<struct FFortBatchUpdatePlayer_Update>& Updates, const TArray<struct FFortBatchUpdatePlayer_DeployableBaseUpdate>& DeployableBaseUpdates, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileWorld", "BatchUpdatePlayers_DeployableBase");

	Params::FortMcpProfileWorld_BatchUpdatePlayers_DeployableBase Parms{};

	Parms.Updates = std::move(Updates);
	Parms.DeployableBaseUpdates = std::move(DeployableBaseUpdates);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileWorld.BatchUpdatePlayers_Outpost
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<struct FFortBatchUpdatePlayer_Update>Updates                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           OutpostId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortOutpostCoreInfo             OutpostInfo                                            (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FFortCloudSaveInfo               CloudSaveInfo                                          (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileWorld::BatchUpdatePlayers_Outpost(const TArray<struct FFortBatchUpdatePlayer_Update>& Updates, const class FString& OutpostId, const struct FFortOutpostCoreInfo& OutpostInfo, const struct FFortCloudSaveInfo& CloudSaveInfo, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileWorld", "BatchUpdatePlayers_Outpost");

	Params::FortMcpProfileWorld_BatchUpdatePlayers_Outpost Parms{};

	Parms.Updates = std::move(Updates);
	Parms.OutpostId = std::move(OutpostId);
	Parms.OutpostInfo = std::move(OutpostInfo);
	Parms.CloudSaveInfo = std::move(CloudSaveInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileWorld.CraftWorldItem
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           TargetSchematicItemId                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumTimesToCraft                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileWorld::CraftWorldItem(const class FString& TargetSchematicItemId, int32 NumTimesToCraft, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileWorld", "CraftWorldItem");

	Params::FortMcpProfileWorld_CraftWorldItem Parms{};

	Parms.TargetSchematicItemId = std::move(TargetSchematicItemId);
	Parms.NumTimesToCraft = NumTimesToCraft;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileWorld.DepositPostResources
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<class FString>                   ItemsToDepositIds                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           ItemCountsToDeposit                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileWorld::DepositPostResources(const TArray<class FString>& ItemsToDepositIds, const TArray<int32>& ItemCountsToDeposit, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileWorld", "DepositPostResources");

	Params::FortMcpProfileWorld_DepositPostResources Parms{};

	Parms.ItemsToDepositIds = std::move(ItemsToDepositIds);
	Parms.ItemCountsToDeposit = std::move(ItemCountsToDeposit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileWorld.DestroyWorldItems
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<class FString>                   ItemIds                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileWorld::DestroyWorldItems(const TArray<class FString>& ItemIds, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileWorld", "DestroyWorldItems");

	Params::FortMcpProfileWorld_DestroyWorldItems Parms{};

	Parms.ItemIds = std::move(ItemIds);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileWorld.DisassembleWorldItems
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<struct FItemIdAndQuantityPair>   TargetItemIdAndQuantityPairs                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileWorld::DisassembleWorldItems(const TArray<struct FItemIdAndQuantityPair>& TargetItemIdAndQuantityPairs, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileWorld", "DisassembleWorldItems");

	Params::FortMcpProfileWorld_DisassembleWorldItems Parms{};

	Parms.TargetItemIdAndQuantityPairs = std::move(TargetItemIdAndQuantityPairs);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileWorld.DisintegrateItems
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<class FString>                   ItemsToDisintegrateIds                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           ItemCountsToDisintegrate                               (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileWorld::DisintegrateItems(const TArray<class FString>& ItemsToDisintegrateIds, const TArray<int32>& ItemCountsToDisintegrate, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileWorld", "DisintegrateItems");

	Params::FortMcpProfileWorld_DisintegrateItems Parms{};

	Parms.ItemsToDisintegrateIds = std::move(ItemsToDisintegrateIds);
	Parms.ItemCountsToDisintegrate = std::move(ItemCountsToDisintegrate);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileWorld.FabricateItem
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// class FString                           TemplateId                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileWorld::FabricateItem(const class FString& TemplateId, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileWorld", "FabricateItem");

	Params::FortMcpProfileWorld_FabricateItem Parms{};

	Parms.TemplateId = std::move(TemplateId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileWorld.InitializeTheater
// (Net, NetReliable, NetRequest, Native, Event, Protected, HasOutParams)
// Parameters:
// class FString                           TheaterGuid                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileWorld::InitializeTheater(const class FString& TheaterGuid, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileWorld", "InitializeTheater");

	Params::FortMcpProfileWorld_InitializeTheater Parms{};

	Parms.TheaterGuid = std::move(TheaterGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileWorld.LockProfiles
// (Final, Net, NetReliable, NetRequest, Native, Event, Private, HasOutParams)
// Parameters:
// class FString                           Code                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Timeout                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileWorld::LockProfiles(const class FString& Code, int32 Timeout, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileWorld", "LockProfiles");

	Params::FortMcpProfileWorld_LockProfiles Parms{};

	Parms.Code = std::move(Code);
	Parms.Timeout = Timeout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileWorld.ModifyQuickbar
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<class FString>                   PrimaryQuickbarChoices                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           SecondaryQuickbarChoice                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileWorld::ModifyQuickbar(const TArray<class FString>& PrimaryQuickbarChoices, const class FString& SecondaryQuickbarChoice, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileWorld", "ModifyQuickbar");

	Params::FortMcpProfileWorld_ModifyQuickbar Parms{};

	Parms.PrimaryQuickbarChoices = std::move(PrimaryQuickbarChoices);
	Parms.SecondaryQuickbarChoice = std::move(SecondaryQuickbarChoice);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileWorld.StorageTransfer
// (Net, NetReliable, NetRequest, Native, Event, Public, HasOutParams)
// Parameters:
// TArray<struct FItemIdAndQuantityPair>   TheaterToOutpostItems                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FItemIdAndQuantityPair>   OutpostToTheaterItems                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FClientUrlContext                Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileWorld::StorageTransfer(const TArray<struct FItemIdAndQuantityPair>& TheaterToOutpostItems, const TArray<struct FItemIdAndQuantityPair>& OutpostToTheaterItems, struct FClientUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileWorld", "StorageTransfer");

	Params::FortMcpProfileWorld_StorageTransfer Parms{};

	Parms.TheaterToOutpostItems = std::move(TheaterToOutpostItems);
	Parms.OutpostToTheaterItems = std::move(OutpostToTheaterItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortMcpProfileWorld.UnlockProfiles
// (Final, Net, NetReliable, NetRequest, Native, Event, Private, HasOutParams)
// Parameters:
// class FString                           Code                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDedicatedServerUrlContext       Context                                                (Parm, OutParm, RepSkip, NativeAccessSpecifierPublic)

void UFortMcpProfileWorld::UnlockProfiles(const class FString& Code, struct FDedicatedServerUrlContext* Context)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMcpProfileWorld", "UnlockProfiles");

	Params::FortMcpProfileWorld_UnlockProfiles Parms{};

	Parms.Code = std::move(Code);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Context != nullptr)
		*Context = std::move(Parms.Context);
}


// Function FortniteGame.FortSafeZoneIndicator.GetSafeZoneShrinkSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortSafeZoneIndicator::GetSafeZoneShrinkSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSafeZoneIndicator", "GetSafeZoneShrinkSpeed");

	Params::FortSafeZoneIndicator_GetSafeZoneShrinkSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSafeZoneIndicator.OnSafeZoneStateChange
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortSafeZoneState                      NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortSafeZoneIndicator::OnSafeZoneStateChange(EFortSafeZoneState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSafeZoneIndicator", "OnSafeZoneStateChange");

	Params::FortSafeZoneIndicator_OnSafeZoneStateChange Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortSafeZoneIndicator.SetSafeZoneRadiusAndCenter
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InLocation                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortSafeZoneIndicator::SetSafeZoneRadiusAndCenter(float InRadius, const struct FVector& InLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSafeZoneIndicator", "SetSafeZoneRadiusAndCenter");

	Params::FortSafeZoneIndicator_SetSafeZoneRadiusAndCenter Parms{};

	Parms.InRadius = InRadius;
	Parms.InLocation = std::move(InLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortSafeZoneIndicator.GetClockTickingAudioCurveValues
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   VolumeModValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PitchModValue                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortSafeZoneIndicator::GetClockTickingAudioCurveValues(float Time, float* VolumeModValue, float* PitchModValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSafeZoneIndicator", "GetClockTickingAudioCurveValues");

	Params::FortSafeZoneIndicator_GetClockTickingAudioCurveValues Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (VolumeModValue != nullptr)
		*VolumeModValue = Parms.VolumeModValue;

	if (PitchModValue != nullptr)
		*PitchModValue = Parms.PitchModValue;
}


// Function FortniteGame.FortSafeZoneIndicator.GetMovementAudioCurveValues
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   CrossfadeValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PitchModValue                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortSafeZoneIndicator::GetMovementAudioCurveValues(float Time, float* CrossfadeValue, float* PitchModValue) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSafeZoneIndicator", "GetMovementAudioCurveValues");

	Params::FortSafeZoneIndicator_GetMovementAudioCurveValues Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CrossfadeValue != nullptr)
		*CrossfadeValue = Parms.CrossfadeValue;

	if (PitchModValue != nullptr)
		*PitchModValue = Parms.PitchModValue;
}


// Function FortniteGame.FortSafeZoneIndicator.GetSafeZoneCenter
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AFortSafeZoneIndicator::GetSafeZoneCenter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSafeZoneIndicator", "GetSafeZoneCenter");

	Params::FortSafeZoneIndicator_GetSafeZoneCenter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSafeZoneIndicator.GetSafeZoneRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortSafeZoneIndicator::GetSafeZoneRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSafeZoneIndicator", "GetSafeZoneRadius");

	Params::FortSafeZoneIndicator_GetSafeZoneRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSeasonalEventManager.IsEventFlagActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           QueriedEventFlagName                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSeasonalEventManager::IsEventFlagActive(const class FString& QueriedEventFlagName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSeasonalEventManager", "IsEventFlagActive");

	Params::FortSeasonalEventManager_IsEventFlagActive Parms{};

	Parms.QueriedEventFlagName = std::move(QueriedEventFlagName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMiniMapComponent.OnRep_MiniMapData
// (Final, Native, Private)

void UFortMiniMapComponent::OnRep_MiniMapData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMiniMapComponent", "OnRep_MiniMapData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMiniMapComponent.OverrideLocalMiniMapIcon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       MiniMapIcon                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMiniMapComponent::OverrideLocalMiniMapIcon(class UTexture2D* MiniMapIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMiniMapComponent", "OverrideLocalMiniMapIcon");

	Params::FortMiniMapComponent_OverrideLocalMiniMapIcon Parms{};

	Parms.MiniMapIcon = MiniMapIcon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMiniMapComponent.OverrideLocalMiniMapIndicatorIsVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMiniMapComponent::OverrideLocalMiniMapIndicatorIsVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMiniMapComponent", "OverrideLocalMiniMapIndicatorIsVisible");

	Params::FortMiniMapComponent_OverrideLocalMiniMapIndicatorIsVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMiniMapComponent.SetMiniMapIcon
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       MiniMapIcon                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMiniMapComponent::SetMiniMapIcon(class UTexture2D* MiniMapIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMiniMapComponent", "SetMiniMapIcon");

	Params::FortMiniMapComponent_SetMiniMapIcon Parms{};

	Parms.MiniMapIcon = MiniMapIcon;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMiniMapComponent.SetMiniMapIconColor
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InColor                                                (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMiniMapComponent::SetMiniMapIconColor(const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMiniMapComponent", "SetMiniMapIconColor");

	Params::FortMiniMapComponent_SetMiniMapIconColor Parms{};

	Parms.InColor = std::move(InColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMiniMapComponent.SetMiniMapIconColorPulsesPerSecond
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ColorPulsesPerSecond                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMiniMapComponent::SetMiniMapIconColorPulsesPerSecond(float ColorPulsesPerSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMiniMapComponent", "SetMiniMapIconColorPulsesPerSecond");

	Params::FortMiniMapComponent_SetMiniMapIconColorPulsesPerSecond Parms{};

	Parms.ColorPulsesPerSecond = ColorPulsesPerSecond;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMiniMapComponent.SetMiniMapIconPulseColor
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     PulseColor                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMiniMapComponent::SetMiniMapIconPulseColor(const struct FLinearColor& PulseColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMiniMapComponent", "SetMiniMapIconPulseColor");

	Params::FortMiniMapComponent_SetMiniMapIconPulseColor Parms{};

	Parms.PulseColor = std::move(PulseColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMiniMapComponent.SetMiniMapIconScale
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        IconScale                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMiniMapComponent::SetMiniMapIconScale(const struct FVector2D& IconScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMiniMapComponent", "SetMiniMapIconScale");

	Params::FortMiniMapComponent_SetMiniMapIconScale Parms{};

	Parms.IconScale = std::move(IconScale);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMiniMapComponent.SetMiniMapIconSizePulsesPerSecond
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                                   SizePulsesPerSecond                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMiniMapComponent::SetMiniMapIconSizePulsesPerSecond(float SizePulsesPerSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMiniMapComponent", "SetMiniMapIconSizePulsesPerSecond");

	Params::FortMiniMapComponent_SetMiniMapIconSizePulsesPerSecond Parms{};

	Parms.SizePulsesPerSecond = SizePulsesPerSecond;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMiniMapComponent.SetMiniMapIndicatorIsVisible
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisible                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMiniMapComponent::SetMiniMapIndicatorIsVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMiniMapComponent", "SetMiniMapIndicatorIsVisible");

	Params::FortMiniMapComponent_SetMiniMapIndicatorIsVisible Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMiniMapComponent.SetMiniMapIndicatorIsVisibleOnMiniMap
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bVisibleOnMiniMap                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMiniMapComponent::SetMiniMapIndicatorIsVisibleOnMiniMap(bool bVisibleOnMiniMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMiniMapComponent", "SetMiniMapIndicatorIsVisibleOnMiniMap");

	Params::FortMiniMapComponent_SetMiniMapIndicatorIsVisibleOnMiniMap Parms{};

	Parms.bVisibleOnMiniMap = bVisibleOnMiniMap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMiniMapComponent.SetMiniMapLocationOffset
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          LocationOffset                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMiniMapComponent::SetMiniMapLocationOffset(const struct FVector& LocationOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMiniMapComponent", "SetMiniMapLocationOffset");

	Params::FortMiniMapComponent_SetMiniMapLocationOffset Parms{};

	Parms.LocationOffset = std::move(LocationOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMiniMapComponent.SetMinimapViewableDistance
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ViewDistance                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMiniMapComponent::SetMinimapViewableDistance(float ViewDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMiniMapComponent", "SetMinimapViewableDistance");

	Params::FortMiniMapComponent_SetMinimapViewableDistance Parms{};

	Parms.ViewDistance = ViewDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMiniMapComponent.SetupMiniMapComponent
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UTexture2D*                       MiniMapIcon                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     IconColor                                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     PulseColor                                             (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ColorPulsesPerSecond                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   SizePulsesPerSecond                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMiniMapComponent::SetupMiniMapComponent(class UTexture2D* MiniMapIcon, const struct FLinearColor& IconColor, const struct FLinearColor& PulseColor, float ColorPulsesPerSecond, float SizePulsesPerSecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMiniMapComponent", "SetupMiniMapComponent");

	Params::FortMiniMapComponent_SetupMiniMapComponent Parms{};

	Parms.MiniMapIcon = MiniMapIcon;
	Parms.IconColor = std::move(IconColor);
	Parms.PulseColor = std::move(PulseColor);
	Parms.ColorPulsesPerSecond = ColorPulsesPerSecond;
	Parms.SizePulsesPerSecond = SizePulsesPerSecond;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortThreatVisualsManager.BeginThreatVisualsPrecursor
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// class AActor*                           SourceActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ThreatLocation                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortThreatVisualsManager::BeginThreatVisualsPrecursor(class AActor* SourceActor, const struct FVector& ThreatLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortThreatVisualsManager", "BeginThreatVisualsPrecursor");

	Params::FortThreatVisualsManager_BeginThreatVisualsPrecursor Parms{};

	Parms.SourceActor = SourceActor;
	Parms.ThreatLocation = std::move(ThreatLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortThreatVisualsManager.OnBeginThreatVisualsPrecursor
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          EndLocation                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortThreatVisualsManager::OnBeginThreatVisualsPrecursor(class AActor* SourceActor, const struct FVector& EndLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortThreatVisualsManager", "OnBeginThreatVisualsPrecursor");

	Params::FortThreatVisualsManager_OnBeginThreatVisualsPrecursor Parms{};

	Parms.SourceActor = SourceActor;
	Parms.EndLocation = std::move(EndLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortThreatVisualsManager.OnRep_GoalActorLocations
// (Final, Native, Private)

void AFortThreatVisualsManager::OnRep_GoalActorLocations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortThreatVisualsManager", "OnRep_GoalActorLocations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortThreatVisualsManager.OnRep_HideClouds
// (Final, Native, Private)

void AFortThreatVisualsManager::OnRep_HideClouds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortThreatVisualsManager", "OnRep_HideClouds");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortThreatVisualsManager.OnRep_StormWinds
// (Final, Native, Private)

void AFortThreatVisualsManager::OnRep_StormWinds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortThreatVisualsManager", "OnRep_StormWinds");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortThreatVisualsManager.OnRep_ThreatLocations
// (Final, Native, Private)

void AFortThreatVisualsManager::OnRep_ThreatLocations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortThreatVisualsManager", "OnRep_ThreatLocations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortThreatVisualsManager.OnThreatCloudsChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<struct FThreatLocationInfo>      ThreatLocationInfo                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortThreatVisualsManager::OnThreatCloudsChanged(const TArray<struct FThreatLocationInfo>& ThreatLocationInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortThreatVisualsManager", "OnThreatCloudsChanged");

	Params::FortThreatVisualsManager_OnThreatCloudsChanged Parms{};

	Parms.ThreatLocationInfo = std::move(ThreatLocationInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortThreatVisualsManager.OnWorldReady
// (Event, Protected, BlueprintEvent)

void AFortThreatVisualsManager::OnWorldReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortThreatVisualsManager", "OnWorldReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortThreatVisualsManager.ResetMinimumCloudAltitude
// (Final, Native, Public, BlueprintCallable)

void AFortThreatVisualsManager::ResetMinimumCloudAltitude()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortThreatVisualsManager", "ResetMinimumCloudAltitude");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortThreatVisualsManager.SetCloudsAreHidden
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bHide                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortThreatVisualsManager::SetCloudsAreHidden(bool bHide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortThreatVisualsManager", "SetCloudsAreHidden");

	Params::FortThreatVisualsManager_SetCloudsAreHidden Parms{};

	Parms.bHide = bHide;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortThreatVisualsManager.SetMinimumCloudAltitude
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewMinimumAltitude                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortThreatVisualsManager::SetMinimumCloudAltitude(float NewMinimumAltitude)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortThreatVisualsManager", "SetMinimumCloudAltitude");

	Params::FortThreatVisualsManager_SetMinimumCloudAltitude Parms{};

	Parms.NewMinimumAltitude = NewMinimumAltitude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortThreatVisualsManager.GetCloudsAreHidden
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortThreatVisualsManager::GetCloudsAreHidden() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortThreatVisualsManager", "GetCloudsAreHidden");

	Params::FortThreatVisualsManager_GetCloudsAreHidden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortThreatVisualsManager.GetThreatCloud
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FThreatLocationInfo              ThreatLocInfo                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AThreatCloud*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AThreatCloud* AFortThreatVisualsManager::GetThreatCloud(const struct FThreatLocationInfo& ThreatLocInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortThreatVisualsManager", "GetThreatCloud");

	Params::FortThreatVisualsManager_GetThreatCloud Parms{};

	Parms.ThreatLocInfo = std::move(ThreatLocInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortThreatVisualsManager.GetThreatClouds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<struct FThreatLocationInfo>ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

const TArray<struct FThreatLocationInfo> AFortThreatVisualsManager::GetThreatClouds() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortThreatVisualsManager", "GetThreatClouds");

	Params::FortThreatVisualsManager_GetThreatClouds Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortThreatVisualsManager.StormsExist
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortThreatVisualsManager::StormsExist() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortThreatVisualsManager", "StormsExist");

	Params::FortThreatVisualsManager_StormsExist Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortUIManagerInterface.KillConfirmation
// (Event, Public, BlueprintEvent)

void IFortUIManagerInterface::KillConfirmation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortUIManagerInterface", "KillConfirmation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortTooltipLibrary.FormatAttributeBuffs
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortAttributeInfo               AttributeInfo                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   AdditiveBuff                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MultiplicativeBuff                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortTooltipLibrary::FormatAttributeBuffs(const struct FFortAttributeInfo& AttributeInfo, float AdditiveBuff, float MultiplicativeBuff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortTooltipLibrary", "FormatAttributeBuffs");

	Params::FortTooltipLibrary_FormatAttributeBuffs Parms{};

	Parms.AttributeInfo = std::move(AttributeInfo);
	Parms.AdditiveBuff = AdditiveBuff;
	Parms.MultiplicativeBuff = MultiplicativeBuff;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.AddCompletionTagsToMission
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            MissionGuid                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            NewCompletionTagContainer                              (Parm, NativeAccessSpecifierPublic)

void UFortMissionLibrary::AddCompletionTagsToMission(class UObject* WorldContextObject, const struct FGuid& MissionGuid, const struct FGameplayTagContainer& NewCompletionTagContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "AddCompletionTagsToMission");

	Params::FortMissionLibrary_AddCompletionTagsToMission Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MissionGuid = std::move(MissionGuid);
	Parms.NewCompletionTagContainer = std::move(NewCompletionTagContainer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionLibrary.AddCompletionTagToMission
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            MissionGuid                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     NewCompletionTag                                       (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionLibrary::AddCompletionTagToMission(class UObject* WorldContextObject, const struct FGuid& MissionGuid, const struct FGameplayTag& NewCompletionTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "AddCompletionTagToMission");

	Params::FortMissionLibrary_AddCompletionTagToMission Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MissionGuid = std::move(MissionGuid);
	Parms.NewCompletionTag = std::move(NewCompletionTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionLibrary.AdjustWaveBasedGameDifficulty
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FDifficultyAddMod                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionLibrary::AdjustWaveBasedGameDifficulty(class UObject* WorldContextObject, float FDifficultyAddMod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "AdjustWaveBasedGameDifficulty");

	Params::FortMissionLibrary_AdjustWaveBasedGameDifficulty Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.FDifficultyAddMod = FDifficultyAddMod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionLibrary.CreateDynamicBuildingDeconstructor
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Origin                                                 (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          BoxExtent                                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIgnoreMissionActors                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShrinkAndDestroy                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionLibrary::CreateDynamicBuildingDeconstructor(class UObject* WorldContextObject, const struct FVector& Origin, const struct FVector& BoxExtent, bool bIgnoreMissionActors, bool bShrinkAndDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "CreateDynamicBuildingDeconstructor");

	Params::FortMissionLibrary_CreateDynamicBuildingDeconstructor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Origin = std::move(Origin);
	Parms.BoxExtent = std::move(BoxExtent);
	Parms.bIgnoreMissionActors = bIgnoreMissionActors;
	Parms.bShrinkAndDestroy = bShrinkAndDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionLibrary.CreateMissionEvent
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            MissionGuid                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            ObjectiveHandle                                        (Parm, NativeAccessSpecifierPublic)
// class UFortMissionEventParams*          Params_0                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DO_NOT_USE_THIS_OR_VARIABLES_BELOW                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          EventFocus                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataAsset*                       EventContent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GenericInt                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   GenericFloat                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             GenericText                                            (Parm, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            GameplayTags                                           (ConstParm, Parm, NativeAccessSpecifierPublic)
// struct FFortMissionEvent                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortMissionEvent UFortMissionLibrary::CreateMissionEvent(class UObject* WorldContextObject, class FName EventType, const struct FGuid& MissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params_0, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, class UDataAsset* EventContent, class AActor* EventInstigator, int32 GenericInt, float GenericFloat, const class FText& GenericText, const struct FGameplayTagContainer& GameplayTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "CreateMissionEvent");

	Params::FortMissionLibrary_CreateMissionEvent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EventType = EventType;
	Parms.MissionGuid = std::move(MissionGuid);
	Parms.ObjectiveHandle = std::move(ObjectiveHandle);
	Parms.Params_0 = Params_0;
	Parms.DO_NOT_USE_THIS_OR_VARIABLES_BELOW = DO_NOT_USE_THIS_OR_VARIABLES_BELOW;
	Parms.EventFocus = EventFocus;
	Parms.EventContent = EventContent;
	Parms.EventInstigator = EventInstigator;
	Parms.GenericInt = GenericInt;
	Parms.GenericFloat = GenericFloat;
	Parms.GenericText = std::move(GenericText);
	Parms.GameplayTags = std::move(GameplayTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.ExecuteMissionEvent
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            MissionGuid                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            ObjectiveHandle                                        (Parm, NativeAccessSpecifierPublic)
// class UFortMissionEventParams*          Params_0                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DO_NOT_USE_THIS_OR_VARIABLES_BELOW                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          EventFocus                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataAsset*                       EventContent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GenericInt                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   GenericFloat                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             GenericText                                            (Parm, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            GameplayTags                                           (ConstParm, Parm, NativeAccessSpecifierPublic)

void UFortMissionLibrary::ExecuteMissionEvent(class UObject* WorldContextObject, class FName EventType, const struct FGuid& MissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params_0, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, class UDataAsset* EventContent, class AActor* EventInstigator, int32 GenericInt, float GenericFloat, const class FText& GenericText, const struct FGameplayTagContainer& GameplayTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "ExecuteMissionEvent");

	Params::FortMissionLibrary_ExecuteMissionEvent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EventType = EventType;
	Parms.MissionGuid = std::move(MissionGuid);
	Parms.ObjectiveHandle = std::move(ObjectiveHandle);
	Parms.Params_0 = Params_0;
	Parms.DO_NOT_USE_THIS_OR_VARIABLES_BELOW = DO_NOT_USE_THIS_OR_VARIABLES_BELOW;
	Parms.EventFocus = EventFocus;
	Parms.EventContent = EventContent;
	Parms.EventInstigator = EventInstigator;
	Parms.GenericInt = GenericInt;
	Parms.GenericFloat = GenericFloat;
	Parms.GenericText = std::move(GenericText);
	Parms.GameplayTags = std::move(GameplayTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionLibrary.ExecuteMissionEventEx
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortMissionEventName            EventType                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FGuid                            MissionGuid                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            ObjectiveHandle                                        (Parm, NativeAccessSpecifierPublic)
// class UFortMissionEventParams*          Params_0                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    DO_NOT_USE_THIS_OR_VARIABLES_BELOW                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          EventFocus                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDataAsset*                       EventContent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   GenericInt                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   GenericFloat                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             GenericText                                            (Parm, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            GameplayTags                                           (ConstParm, Parm, NativeAccessSpecifierPublic)

void UFortMissionLibrary::ExecuteMissionEventEx(class UObject* WorldContextObject, const struct FFortMissionEventName& EventType, const struct FGuid& MissionGuid, const struct FGameplayTagContainer& ObjectiveHandle, class UFortMissionEventParams* Params_0, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, class UDataAsset* EventContent, class AActor* EventInstigator, int32 GenericInt, float GenericFloat, const class FText& GenericText, const struct FGameplayTagContainer& GameplayTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "ExecuteMissionEventEx");

	Params::FortMissionLibrary_ExecuteMissionEventEx Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EventType = std::move(EventType);
	Parms.MissionGuid = std::move(MissionGuid);
	Parms.ObjectiveHandle = std::move(ObjectiveHandle);
	Parms.Params_0 = Params_0;
	Parms.DO_NOT_USE_THIS_OR_VARIABLES_BELOW = DO_NOT_USE_THIS_OR_VARIABLES_BELOW;
	Parms.EventFocus = EventFocus;
	Parms.EventContent = EventContent;
	Parms.EventInstigator = EventInstigator;
	Parms.GenericInt = GenericInt;
	Parms.GenericFloat = GenericFloat;
	Parms.GenericText = std::move(GenericText);
	Parms.GameplayTags = std::move(GameplayTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionLibrary.FindActorsWithTags
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            Tags                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class ABuildingActor*>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class ABuildingActor*> UFortMissionLibrary::FindActorsWithTags(class UObject* WorldContextObject, const struct FGameplayTagContainer& Tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "FindActorsWithTags");

	Params::FortMissionLibrary_FindActorsWithTags Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Tags = std::move(Tags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.FindOriginatingPlacementActor
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ABuildingActor*                   BuildingActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlacementActor*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlacementActor* UFortMissionLibrary::FindOriginatingPlacementActor(class ABuildingActor* BuildingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "FindOriginatingPlacementActor");

	Params::FortMissionLibrary_FindOriginatingPlacementActor Parms{};

	Parms.BuildingActor = BuildingActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.GetAllLoadedMissions
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AFortMission*>             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AFortMission*> UFortMissionLibrary::GetAllLoadedMissions(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "GetAllLoadedMissions");

	Params::FortMissionLibrary_GetAllLoadedMissions Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.GetBluGloManager
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortBluGloManager*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortBluGloManager* UFortMissionLibrary::GetBluGloManager(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "GetBluGloManager");

	Params::FortMissionLibrary_GetBluGloManager Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.GetMissionActorsInEncounterDirection
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>               ActorSubclass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          StartLocation                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortEncounterDirection                 DirectionToLookForActors                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxDistance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UFortMissionLibrary::GetMissionActorsInEncounterDirection(class UObject* WorldContextObject, TSubclassOf<class AActor> ActorSubclass, const struct FVector& StartLocation, EFortEncounterDirection DirectionToLookForActors, float Angle, float MaxDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "GetMissionActorsInEncounterDirection");

	Params::FortMissionLibrary_GetMissionActorsInEncounterDirection Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ActorSubclass = ActorSubclass;
	Parms.StartLocation = std::move(StartLocation);
	Parms.DirectionToLookForActors = DirectionToLookForActors;
	Parms.Angle = Angle;
	Parms.MaxDistance = MaxDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.GetMissionActorsInVectorDirection
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>               ActorSubclass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          StartLocation                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          DirectionToLookForActors                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Angle                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxDistance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UFortMissionLibrary::GetMissionActorsInVectorDirection(class UObject* WorldContextObject, TSubclassOf<class AActor> ActorSubclass, const struct FVector& StartLocation, const struct FVector& DirectionToLookForActors, float Angle, float MaxDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "GetMissionActorsInVectorDirection");

	Params::FortMissionLibrary_GetMissionActorsInVectorDirection Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ActorSubclass = ActorSubclass;
	Parms.StartLocation = std::move(StartLocation);
	Parms.DirectionToLookForActors = std::move(DirectionToLookForActors);
	Parms.Angle = Angle;
	Parms.MaxDistance = MaxDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.GetMissionFromGuid
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            MissionGuid                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortMission*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortMission* UFortMissionLibrary::GetMissionFromGuid(class UObject* WorldContextObject, const struct FGuid& MissionGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "GetMissionFromGuid");

	Params::FortMissionLibrary_GetMissionFromGuid Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MissionGuid = std::move(MissionGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.GetMissionHUDTextLineHeightEstimate
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FText                             Text                                                   (Parm, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortMissionLibrary::GetMissionHUDTextLineHeightEstimate(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "GetMissionHUDTextLineHeightEstimate");

	Params::FortMissionLibrary_GetMissionHUDTextLineHeightEstimate Parms{};

	Parms.Text = std::move(Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.GetTieredWaveBaseNumKillPoints
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BaseNumOfKillPointsRowName                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OverrideDifficulty                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutBaseNumKillPoints                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionLibrary::GetTieredWaveBaseNumKillPoints(class UObject* WorldContextObject, class FName BaseNumOfKillPointsRowName, float OverrideDifficulty, float* OutBaseNumKillPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "GetTieredWaveBaseNumKillPoints");

	Params::FortMissionLibrary_GetTieredWaveBaseNumKillPoints Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.BaseNumOfKillPointsRowName = BaseNumOfKillPointsRowName;
	Parms.OverrideDifficulty = OverrideDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBaseNumKillPoints != nullptr)
		*OutBaseNumKillPoints = Parms.OutBaseNumKillPoints;
}


// Function FortniteGame.FortMissionLibrary.GetTieredWaveBaseNumKills
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BaseNumOfKillsRowName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OverrideDifficulty                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutBaseNumKills                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionLibrary::GetTieredWaveBaseNumKills(class UObject* WorldContextObject, class FName BaseNumOfKillsRowName, float OverrideDifficulty, float* OutBaseNumKills)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "GetTieredWaveBaseNumKills");

	Params::FortMissionLibrary_GetTieredWaveBaseNumKills Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.BaseNumOfKillsRowName = BaseNumOfKillsRowName;
	Parms.OverrideDifficulty = OverrideDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBaseNumKills != nullptr)
		*OutBaseNumKills = Parms.OutBaseNumKills;
}


// Function FortniteGame.FortMissionLibrary.GetTieredWaveBaseWaveLength
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BaseWaveLengthRowName                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OverrideDifficulty                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutBaseWaveLength                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionLibrary::GetTieredWaveBaseWaveLength(class UObject* WorldContextObject, class FName BaseWaveLengthRowName, float OverrideDifficulty, float* OutBaseWaveLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "GetTieredWaveBaseWaveLength");

	Params::FortMissionLibrary_GetTieredWaveBaseWaveLength Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.BaseWaveLengthRowName = BaseWaveLengthRowName;
	Parms.OverrideDifficulty = OverrideDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutBaseWaveLength != nullptr)
		*OutBaseWaveLength = Parms.OutBaseWaveLength;
}


// Function FortniteGame.FortMissionLibrary.GetTieredWaveSet
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             TieredWaveCollectionName                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Tier                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTieredWaveSetCollectionData     WaveCollectionInfo                                     (Parm, OutParm, NativeAccessSpecifierPublic)
// TArray<struct FTieredWaveSetData>       OutWaveData                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortMissionLibrary::GetTieredWaveSet(class FName TieredWaveCollectionName, int32 Tier, struct FTieredWaveSetCollectionData* WaveCollectionInfo, TArray<struct FTieredWaveSetData>* OutWaveData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "GetTieredWaveSet");

	Params::FortMissionLibrary_GetTieredWaveSet Parms{};

	Parms.TieredWaveCollectionName = TieredWaveCollectionName;
	Parms.Tier = Tier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (WaveCollectionInfo != nullptr)
		*WaveCollectionInfo = std::move(Parms.WaveCollectionInfo);

	if (OutWaveData != nullptr)
		*OutWaveData = std::move(Parms.OutWaveData);
}


// Function FortniteGame.FortMissionLibrary.GiveMissionRewardsToPlayer
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            EventGuid                                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             TitleText                                              (Parm, NativeAccessSpecifierPublic)
// class FText                             DescriptionText                                        (Parm, NativeAccessSpecifierPublic)
// class FName                             LootTierGroup                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LootTier                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   RewardDisplayTime                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionLibrary::GiveMissionRewardsToPlayer(class UObject* WorldContextObject, const struct FGuid& EventGuid, class AFortPlayerController* PlayerController, const class FText& TitleText, const class FText& DescriptionText, class FName LootTierGroup, int32 LootTier, float RewardDisplayTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "GiveMissionRewardsToPlayer");

	Params::FortMissionLibrary_GiveMissionRewardsToPlayer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EventGuid = std::move(EventGuid);
	Parms.PlayerController = PlayerController;
	Parms.TitleText = std::move(TitleText);
	Parms.DescriptionText = std::move(DescriptionText);
	Parms.LootTierGroup = LootTierGroup;
	Parms.LootTier = LootTier;
	Parms.RewardDisplayTime = RewardDisplayTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionLibrary.GiveMissionRewardsToPlayerAsPickups
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            MissionGuid                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          StartPosition                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LootTierGroup                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LootTier                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionLibrary::GiveMissionRewardsToPlayerAsPickups(class UObject* WorldContextObject, const struct FGuid& MissionGuid, class AFortPlayerController* PlayerController, const struct FVector& StartPosition, float Radius, class FName LootTierGroup, int32 LootTier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "GiveMissionRewardsToPlayerAsPickups");

	Params::FortMissionLibrary_GiveMissionRewardsToPlayerAsPickups Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MissionGuid = std::move(MissionGuid);
	Parms.PlayerController = PlayerController;
	Parms.StartPosition = std::move(StartPosition);
	Parms.Radius = Radius;
	Parms.LootTierGroup = LootTierGroup;
	Parms.LootTier = LootTier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionLibrary.GiveMissionSchematicItemDirectlyToPlayer
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            TargetPlayer                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            MissionGuid                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortSchematicItemDefinition*     SchematicDefinition                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionLibrary::GiveMissionSchematicItemDirectlyToPlayer(class UObject* WorldContextObject, class AFortPlayerController* TargetPlayer, const struct FGuid& MissionGuid, class UFortSchematicItemDefinition* SchematicDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "GiveMissionSchematicItemDirectlyToPlayer");

	Params::FortMissionLibrary_GiveMissionSchematicItemDirectlyToPlayer Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TargetPlayer = TargetPlayer;
	Parms.MissionGuid = std::move(MissionGuid);
	Parms.SchematicDefinition = SchematicDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.HasTags
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGameplayTagContainer            ContainerToCheck                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            TagsToCheck                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bRequireAll                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCountEmptyAsMatch                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionLibrary::HasTags(const struct FGameplayTagContainer& ContainerToCheck, const struct FGameplayTagContainer& TagsToCheck, bool bRequireAll, bool bCountEmptyAsMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "HasTags");

	Params::FortMissionLibrary_HasTags Parms{};

	Parms.ContainerToCheck = std::move(ContainerToCheck);
	Parms.TagsToCheck = std::move(TagsToCheck);
	Parms.bRequireAll = bRequireAll;
	Parms.bCountEmptyAsMatch = bCountEmptyAsMatch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.IsUsingNewMissionGeneration
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionLibrary::IsUsingNewMissionGeneration(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "IsUsingNewMissionGeneration");

	Params::FortMissionLibrary_IsUsingNewMissionGeneration Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.LoadMission
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortMissionInfo*                 MissionInfo                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionLibrary::LoadMission(class UObject* WorldContextObject, class UFortMissionInfo* MissionInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "LoadMission");

	Params::FortMissionLibrary_LoadMission Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MissionInfo = MissionInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionLibrary.NumBluGloFromPlayerPawn
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMissionLibrary::NumBluGloFromPlayerPawn(class AFortPlayerPawn* PlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "NumBluGloFromPlayerPawn");

	Params::FortMissionLibrary_NumBluGloFromPlayerPawn Parms{};

	Parms.PlayerPawn = PlayerPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.NumBluGloFromPlayerState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerStateZone*             PlayerState                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMissionLibrary::NumBluGloFromPlayerState(class AFortPlayerStateZone* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "NumBluGloFromPlayerState");

	Params::FortMissionLibrary_NumBluGloFromPlayerState Parms{};

	Parms.PlayerState = PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.PingMinimap
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldLocation                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     PingColor                                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortTeam                               RequiredTeam                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionLibrary::PingMinimap(class UObject* WorldContextObject, const struct FVector& WorldLocation, const struct FLinearColor& PingColor, EFortTeam RequiredTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "PingMinimap");

	Params::FortMissionLibrary_PingMinimap Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.WorldLocation = std::move(WorldLocation);
	Parms.PingColor = std::move(PingColor);
	Parms.RequiredTeam = RequiredTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionLibrary.PollActorsInVolume
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBoxComponent*                    VolumeBoxComponent                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPollActorsInVolumeTypes                PollBuildingTypes                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>               ActorClassToPoll                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortMissionLibrary::PollActorsInVolume(class UObject* WorldContextObject, class UBoxComponent* VolumeBoxComponent, EPollActorsInVolumeTypes PollBuildingTypes, TSubclassOf<class AActor> ActorClassToPoll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "PollActorsInVolume");

	Params::FortMissionLibrary_PollActorsInVolume Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.VolumeBoxComponent = VolumeBoxComponent;
	Parms.PollBuildingTypes = PollBuildingTypes;
	Parms.ActorClassToPoll = ActorClassToPoll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.RegisterForMissionEvents
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           ActorToRegister                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            MissionGuid                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionLibrary::RegisterForMissionEvents(class AActor* ActorToRegister, const struct FGuid& MissionGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "RegisterForMissionEvents");

	Params::FortMissionLibrary_RegisterForMissionEvents Parms{};

	Parms.ActorToRegister = ActorToRegister;
	Parms.MissionGuid = std::move(MissionGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.RegisterMissionInfoUIActor
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           AttachmentActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            MissionGuid                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          AttachementOffset                                      (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxVisibleDistance                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionLibrary::RegisterMissionInfoUIActor(class AActor* AttachmentActor, const struct FGuid& MissionGuid, const struct FVector& AttachementOffset, float MaxVisibleDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "RegisterMissionInfoUIActor");

	Params::FortMissionLibrary_RegisterMissionInfoUIActor Parms{};

	Parms.AttachmentActor = AttachmentActor;
	Parms.MissionGuid = std::move(MissionGuid);
	Parms.AttachementOffset = std::move(AttachementOffset);
	Parms.MaxVisibleDistance = MaxVisibleDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.RespawnOutlanderFragments
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionLibrary::RespawnOutlanderFragments(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "RespawnOutlanderFragments");

	Params::FortMissionLibrary_RespawnOutlanderFragments Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionLibrary.SetOnlinePresenceDoNotDisturb
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bDoNotDisturb                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            SpecificPlayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionLibrary::SetOnlinePresenceDoNotDisturb(class UObject* WorldContextObject, bool bDoNotDisturb, class AFortPlayerController* SpecificPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "SetOnlinePresenceDoNotDisturb");

	Params::FortMissionLibrary_SetOnlinePresenceDoNotDisturb Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bDoNotDisturb = bDoNotDisturb;
	Parms.SpecificPlayer = SpecificPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionLibrary.SetWorldSavingEnabled
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionLibrary::SetWorldSavingEnabled(class UObject* WorldContextObject, bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "SetWorldSavingEnabled");

	Params::FortMissionLibrary_SetWorldSavingEnabled Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionLibrary.ShouldUseAlternateAIDirectorBalance
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionLibrary::ShouldUseAlternateAIDirectorBalance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "ShouldUseAlternateAIDirectorBalance");

	Params::FortMissionLibrary_ShouldUseAlternateAIDirectorBalance Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.SpawnAndCollectPlayerPickups
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          StartPosition                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             LootTierGroup                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LootTier                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionLibrary::SpawnAndCollectPlayerPickups(class UObject* WorldContextObject, class AFortPlayerController* PlayerController, const struct FVector& StartPosition, class FName LootTierGroup, int32 LootTier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "SpawnAndCollectPlayerPickups");

	Params::FortMissionLibrary_SpawnAndCollectPlayerPickups Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlayerController = PlayerController;
	Parms.StartPosition = std::move(StartPosition);
	Parms.LootTierGroup = LootTierGroup;
	Parms.LootTier = LootTier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionLibrary.SpawnAtPlacementActorsHelper
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           Entries                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSucceeded                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UFortMissionLibrary::SpawnAtPlacementActorsHelper(class UObject* WorldContextObject, class UClass* Entries, bool* bSucceeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "SpawnAtPlacementActorsHelper");

	Params::FortMissionLibrary_SpawnAtPlacementActorsHelper Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Entries = Entries;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bSucceeded != nullptr)
		*bSucceeded = Parms.bSucceeded;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.SpawnBuildingActorAtTransform
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            MissionGuid                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class ABuildingActor>       BuildingClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       Transform                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class ABuildingActor*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ABuildingActor* UFortMissionLibrary::SpawnBuildingActorAtTransform(class UObject* WorldContextObject, const struct FGuid& MissionGuid, TSubclassOf<class ABuildingActor> BuildingClass, const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "SpawnBuildingActorAtTransform");

	Params::FortMissionLibrary_SpawnBuildingActorAtTransform Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MissionGuid = std::move(MissionGuid);
	Parms.BuildingClass = BuildingClass;
	Parms.Transform = std::move(Transform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.SpawnMissionItemPickup
// (Final, Native, Static, Public, HasDefaults)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            MissionGuid                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortMissionItemDefinition*       MissionItemDefinition                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          StartPosition                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPawn*                        TargetPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPickup*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPickup* UFortMissionLibrary::SpawnMissionItemPickup(class UObject* WorldContextObject, const struct FGuid& MissionGuid, class UFortMissionItemDefinition* MissionItemDefinition, const struct FVector& StartPosition, class AFortPawn* TargetPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "SpawnMissionItemPickup");

	Params::FortMissionLibrary_SpawnMissionItemPickup Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MissionGuid = std::move(MissionGuid);
	Parms.MissionItemDefinition = MissionItemDefinition;
	Parms.StartPosition = std::move(StartPosition);
	Parms.TargetPawn = TargetPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.SpawnMissionItemPickupInWorld
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            MissionGuid                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItemDefinition*         ItemDefinition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumberToSpawn                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Position                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Direction                                              (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OverrideMaxStackCount                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPickup*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPickup* UFortMissionLibrary::SpawnMissionItemPickupInWorld(class UObject* WorldContextObject, const struct FGuid& MissionGuid, class UFortWorldItemDefinition* ItemDefinition, int32 NumberToSpawn, const struct FVector& Position, const struct FVector& Direction, int32 OverrideMaxStackCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "SpawnMissionItemPickupInWorld");

	Params::FortMissionLibrary_SpawnMissionItemPickupInWorld Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MissionGuid = std::move(MissionGuid);
	Parms.ItemDefinition = ItemDefinition;
	Parms.NumberToSpawn = NumberToSpawn;
	Parms.Position = std::move(Position);
	Parms.Direction = std::move(Direction);
	Parms.OverrideMaxStackCount = OverrideMaxStackCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.SpawnPlacementMissionActor
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>               ActorToSpawn                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          SpawnLocation                                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         SpawnRotation                                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                           PlacementLocationActor                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OutSpawnedActor                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionLibrary::SpawnPlacementMissionActor(class UObject* WorldContextObject, const TSubclassOf<class AActor>& ActorToSpawn, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, class AActor* PlacementLocationActor, class AActor** OutSpawnedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "SpawnPlacementMissionActor");

	Params::FortMissionLibrary_SpawnPlacementMissionActor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ActorToSpawn = ActorToSpawn;
	Parms.SpawnLocation = std::move(SpawnLocation);
	Parms.SpawnRotation = std::move(SpawnRotation);
	Parms.PlacementLocationActor = PlacementLocationActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSpawnedActor != nullptr)
		*OutSpawnedActor = Parms.OutSpawnedActor;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.StartAIEncounter
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           AssociatedMissionName                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UFortAIEncounterInfo> EncounterTemplate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            InjectedTags                                           (Parm, NativeAccessSpecifierPublic)
// struct FFortEncounterSettings           EncounterSettings                                      (Parm, NativeAccessSpecifierPublic)
// int32                                   ActivationDelay                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAIEncounterInfo*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAIEncounterInfo* UFortMissionLibrary::StartAIEncounter(class UObject* WorldContextObject, class FString* AssociatedMissionName, TSubclassOf<class UFortAIEncounterInfo> EncounterTemplate, class AActor* TargetActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int32 ActivationDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "StartAIEncounter");

	Params::FortMissionLibrary_StartAIEncounter Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EncounterTemplate = EncounterTemplate;
	Parms.TargetActor = TargetActor;
	Parms.InjectedTags = std::move(InjectedTags);
	Parms.EncounterSettings = std::move(EncounterSettings);
	Parms.ActivationDelay = ActivationDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AssociatedMissionName != nullptr)
		*AssociatedMissionName = std::move(Parms.AssociatedMissionName);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.StartAIEncounterWithEnvironmentQuery
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           AssociatedMissionName                                  (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UFortAIEncounterInfo> EncounterTemplate                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEncounterEnvironmentQueryInfo   EnvironmentQueryInfo                                   (Parm, NativeAccessSpecifierPublic)
// class AActor*                           QueryActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            InjectedTags                                           (Parm, NativeAccessSpecifierPublic)
// struct FFortEncounterSettings           EncounterSettings                                      (Parm, NativeAccessSpecifierPublic)
// int32                                   ActivationDelay                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAIEncounterInfo*             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAIEncounterInfo* UFortMissionLibrary::StartAIEncounterWithEnvironmentQuery(class UObject* WorldContextObject, class FString* AssociatedMissionName, TSubclassOf<class UFortAIEncounterInfo> EncounterTemplate, class AActor* TargetActor, const struct FEncounterEnvironmentQueryInfo& EnvironmentQueryInfo, class AActor* QueryActor, const struct FGameplayTagContainer& InjectedTags, const struct FFortEncounterSettings& EncounterSettings, int32 ActivationDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "StartAIEncounterWithEnvironmentQuery");

	Params::FortMissionLibrary_StartAIEncounterWithEnvironmentQuery Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.EncounterTemplate = EncounterTemplate;
	Parms.TargetActor = TargetActor;
	Parms.EnvironmentQueryInfo = std::move(EnvironmentQueryInfo);
	Parms.QueryActor = QueryActor;
	Parms.InjectedTags = std::move(InjectedTags);
	Parms.EncounterSettings = std::move(EncounterSettings);
	Parms.ActivationDelay = ActivationDelay;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AssociatedMissionName != nullptr)
		*AssociatedMissionName = std::move(Parms.AssociatedMissionName);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionLibrary.StartPlayingMission
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            MissionGuid                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionLibrary::StartPlayingMission(class UObject* WorldContextObject, const struct FGuid& MissionGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "StartPlayingMission");

	Params::FortMissionLibrary_StartPlayingMission Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MissionGuid = std::move(MissionGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionLibrary.StopAIEncounter
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAIEncounterInfo*             ActiveEncounter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortObjectiveStatus                    ObjectiveStatus                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionLibrary::StopAIEncounter(class UObject* WorldContextObject, class UFortAIEncounterInfo* ActiveEncounter, EFortObjectiveStatus ObjectiveStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "StopAIEncounter");

	Params::FortMissionLibrary_StopAIEncounter Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ActiveEncounter = ActiveEncounter;
	Parms.ObjectiveStatus = ObjectiveStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionLibrary.StopAIEncounterAgainstActor
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionLibrary::StopAIEncounterAgainstActor(class UObject* WorldContextObject, class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "StopAIEncounterAgainstActor");

	Params::FortMissionLibrary_StopAIEncounterAgainstActor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionLibrary.TeleportPawnNearLocation
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AFortPawn*                        Pawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          DestLocation                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionLibrary::TeleportPawnNearLocation(class AFortPawn* Pawn, const struct FVector& DestLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "TeleportPawnNearLocation");

	Params::FortMissionLibrary_TeleportPawnNearLocation Parms{};

	Parms.Pawn = Pawn;
	Parms.DestLocation = std::move(DestLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionLibrary.TeleportPlayerPawn
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AFortPlayerPawn*                  PlayerPawn                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          DestLocation                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         DestRotation                                           (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bIgnoreCollision                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionLibrary::TeleportPlayerPawn(class AFortPlayerPawn* PlayerPawn, const struct FVector& DestLocation, const struct FRotator& DestRotation, bool bIgnoreCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "TeleportPlayerPawn");

	Params::FortMissionLibrary_TeleportPlayerPawn Parms{};

	Parms.PlayerPawn = PlayerPawn;
	Parms.DestLocation = std::move(DestLocation);
	Parms.DestRotation = std::move(DestRotation);
	Parms.bIgnoreCollision = bIgnoreCollision;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionLibrary.UnregisterForMissionEvents
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                           ActorToUnregister                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGuid                            MissionGuid                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionLibrary::UnregisterForMissionEvents(class AActor* ActorToUnregister, const struct FGuid& MissionGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionLibrary", "UnregisterForMissionEvents");

	Params::FortMissionLibrary_UnregisterForMissionEvents Parms{};

	Parms.ActorToUnregister = ActorToUnregister;
	Parms.MissionGuid = std::move(MissionGuid);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionManager.GetSpawnLocationActorsMatchingEntryItemQuery
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagQuery                TagQuery                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   SpawnLocationActors                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortMissionManager::GetSpawnLocationActorsMatchingEntryItemQuery(class UObject* WorldContextObject, const struct FGameplayTagQuery& TagQuery, TArray<class AActor*>* SpawnLocationActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionManager", "GetSpawnLocationActorsMatchingEntryItemQuery");

	Params::FortMissionManager_GetSpawnLocationActorsMatchingEntryItemQuery Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TagQuery = std::move(TagQuery);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SpawnLocationActors != nullptr)
		*SpawnLocationActors = std::move(Parms.SpawnLocationActors);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionManager.GetSpawnLocationActorsThatHaveAddedTagsMatchingQuery
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagQuery                TagQuery                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   SpawnLocationActors                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortMissionManager::GetSpawnLocationActorsThatHaveAddedTagsMatchingQuery(class UObject* WorldContextObject, const struct FGameplayTagQuery& TagQuery, TArray<class AActor*>* SpawnLocationActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortMissionManager", "GetSpawnLocationActorsThatHaveAddedTagsMatchingQuery");

	Params::FortMissionManager_GetSpawnLocationActorsThatHaveAddedTagsMatchingQuery Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.TagQuery = std::move(TagQuery);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SpawnLocationActors != nullptr)
		*SpawnLocationActors = std::move(Parms.SpawnLocationActors);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionManager.OnRep_CurrentUIFocusedMission
// (Native, Public)

void AFortMissionManager::OnRep_CurrentUIFocusedMission()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionManager", "OnRep_CurrentUIFocusedMission");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionManager.OnRep_EarnedBadgesArray
// (Final, Native, Protected)

void AFortMissionManager::OnRep_EarnedBadgesArray()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionManager", "OnRep_EarnedBadgesArray");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionManager.OnRep_Missions
// (Native, Protected)

void AFortMissionManager::OnRep_Missions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionManager", "OnRep_Missions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionManager.OnRep_MissionUIActors
// (Native, Protected)

void AFortMissionManager::OnRep_MissionUIActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionManager", "OnRep_MissionUIActors");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionManager.ShouldShowSecondaryMissionHeaders
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortMissionManager::ShouldShowSecondaryMissionHeaders() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionManager", "ShouldShowSecondaryMissionHeaders");

	Params::FortMissionManager_ShouldShowSecondaryMissionHeaders Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortAsyncAction_CheckForUpdate.CheckForUpdate
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InShowDialogOnFailure                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortAsyncAction_CheckForUpdate*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortAsyncAction_CheckForUpdate* UFortAsyncAction_CheckForUpdate::CheckForUpdate(class UObject* InWorldContextObject, bool InShowDialogOnFailure)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortAsyncAction_CheckForUpdate", "CheckForUpdate");

	Params::FortAsyncAction_CheckForUpdate_CheckForUpdate Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.InShowDialogOnFailure = InShowDialogOnFailure;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionTimerComponent.ClearMissionTimer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UFortMissionTimerComponent::ClearMissionTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTimerComponent", "ClearMissionTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionTimerComponent.DummyTimer
// (Final, Native, Protected)

void UFortMissionTimerComponent::DummyTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTimerComponent", "DummyTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionTimerComponent.OnRep_TimerData
// (Final, Native, Protected)

void UFortMissionTimerComponent::OnRep_TimerData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTimerComponent", "OnRep_TimerData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionTimerComponent.OnRep_TimerVisibilityOverride
// (Final, Native, Protected)

void UFortMissionTimerComponent::OnRep_TimerVisibilityOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTimerComponent", "OnRep_TimerVisibilityOverride");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionTimerComponent.PauseMissionTimer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UFortMissionTimerComponent::PauseMissionTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTimerComponent", "PauseMissionTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionTimerComponent.ResetMissionTimer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UFortMissionTimerComponent::ResetMissionTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTimerComponent", "ResetMissionTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionTimerComponent.SetMissionTimer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimerLength                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           CallbackActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionTimerComponent::SetMissionTimer(const class FString& FunctionName, float TimerLength, class AActor* CallbackActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTimerComponent", "SetMissionTimer");

	Params::FortMissionTimerComponent_SetMissionTimer Parms{};

	Parms.FunctionName = std::move(FunctionName);
	Parms.TimerLength = TimerLength;
	Parms.CallbackActor = CallbackActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionTimerComponent.SetTimerDisplayFormat
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewDisplayInTimeFormat                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionTimerComponent::SetTimerDisplayFormat(bool bNewDisplayInTimeFormat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTimerComponent", "SetTimerDisplayFormat");

	Params::FortMissionTimerComponent_SetTimerDisplayFormat Parms{};

	Parms.bNewDisplayInTimeFormat = bNewDisplayInTimeFormat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionTimerComponent.SetTimerLabelText
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             NewLabelText                                           (Parm, NativeAccessSpecifierPublic)

void UFortMissionTimerComponent::SetTimerLabelText(const class FText& NewLabelText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTimerComponent", "SetTimerLabelText");

	Params::FortMissionTimerComponent_SetTimerLabelText Parms{};

	Parms.NewLabelText = std::move(NewLabelText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionTimerComponent.SetTimerVisibilityOverrideSetting
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// ETimerOverrideSetting                   NewVisibilitySetting                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionTimerComponent::SetTimerVisibilityOverrideSetting(ETimerOverrideSetting NewVisibilitySetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTimerComponent", "SetTimerVisibilityOverrideSetting");

	Params::FortMissionTimerComponent_SetTimerVisibilityOverrideSetting Parms{};

	Parms.NewVisibilitySetting = NewVisibilitySetting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionTimerComponent.UnpauseMissionTimer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void UFortMissionTimerComponent::UnpauseMissionTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTimerComponent", "UnpauseMissionTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMissionTimerComponent.GetCorrectTimeDisplayData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FMissionTimeDisplayData          ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FMissionTimeDisplayData UFortMissionTimerComponent::GetCorrectTimeDisplayData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTimerComponent", "GetCorrectTimeDisplayData");

	Params::FortMissionTimerComponent_GetCorrectTimeDisplayData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionTimerComponent.GetMissionTimerTimeRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortMissionTimerComponent::GetMissionTimerTimeRemaining() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTimerComponent", "GetMissionTimerTimeRemaining");

	Params::FortMissionTimerComponent_GetMissionTimerTimeRemaining Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionTimerComponent.GetNormalizedTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortMissionTimerComponent::GetNormalizedTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTimerComponent", "GetNormalizedTime");

	Params::FortMissionTimerComponent_GetNormalizedTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionTimerComponent.GetTimeText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortMissionTimerComponent::GetTimeText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTimerComponent", "GetTimeText");

	Params::FortMissionTimerComponent_GetTimeText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionTimerComponent.IsMissionTimerPaused
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionTimerComponent::IsMissionTimerPaused() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTimerComponent", "IsMissionTimerPaused");

	Params::FortMissionTimerComponent_IsMissionTimerPaused Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionTimerComponent.IsMissionTimerSet
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionTimerComponent::IsMissionTimerSet() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTimerComponent", "IsMissionTimerSet");

	Params::FortMissionTimerComponent_IsMissionTimerSet Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionTimerComponent.IsTimerVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMissionTimerComponent::IsTimerVisible() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionTimerComponent", "IsTimerVisible");

	Params::FortMissionTimerComponent_IsTimerVisible Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMissionFailedParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortMission*                     _FailedMission                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionFailedParams::BreakParams(class AFortMission** _FailedMission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionFailedParams", "BreakParams");

	Params::FortMissionFailedParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_FailedMission != nullptr)
		*_FailedMission = Parms._FailedMission;
}


// Function FortniteGame.FortMissionFailedParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortMission*                     _FailedMission                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortMissionFailedParams*         ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionFailedParams::SetParams(class AFortMission* _FailedMission, class UFortMissionFailedParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionFailedParams", "SetParams");

	Params::FortMissionFailedParams_SetParams Parms{};

	Parms._FailedMission = _FailedMission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortMovementComp_CharacterAthena.IsActivelySkydiving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMovementComp_CharacterAthena::IsActivelySkydiving() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementComp_CharacterAthena", "IsActivelySkydiving");

	Params::FortMovementComp_CharacterAthena_IsActivelySkydiving Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMovementComp_CharacterAthena.IsActivelyStrafingInAir
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMovementComp_CharacterAthena::IsActivelyStrafingInAir() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementComp_CharacterAthena", "IsActivelyStrafingInAir");

	Params::FortMovementComp_CharacterAthena_IsActivelyStrafingInAir Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMovementComp_CharacterAthena.IsPassivelySkydiving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortMovementComp_CharacterAthena::IsPassivelySkydiving() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMovementComp_CharacterAthena", "IsPassivelySkydiving");

	Params::FortMovementComp_CharacterAthena_IsPassivelySkydiving Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMusicManager.ChangeMusic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USoundBase*                       NewMusic                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EMusicFadeStyles                        FadeStyle                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FadeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundBase*                       Stinger                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortMusicManager::ChangeMusic(class USoundBase* NewMusic, EMusicFadeStyles FadeStyle, float FadeTime, class USoundBase* Stinger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMusicManager", "ChangeMusic");

	Params::FortMusicManager_ChangeMusic Parms{};

	Parms.NewMusic = NewMusic;
	Parms.FadeStyle = FadeStyle;
	Parms.FadeTime = FadeTime;
	Parms.Stinger = Stinger;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortMusicManager.GetEventHeatPercent
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortCombatEvents                       CombatEvent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortMusicManager::GetEventHeatPercent(EFortCombatEvents CombatEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMusicManager", "GetEventHeatPercent");

	Params::FortMusicManager_GetEventHeatPercent Parms{};

	Parms.CombatEvent = CombatEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMusicManager.GetEventHeatPercentTotal
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortCombatEvents                       CombatEvent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortMusicManager::GetEventHeatPercentTotal(EFortCombatEvents CombatEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMusicManager", "GetEventHeatPercentTotal");

	Params::FortMusicManager_GetEventHeatPercentTotal Parms{};

	Parms.CombatEvent = CombatEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortMusicManager.OnDayPhaseChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortDayPhase                           CurrentDayPhase                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDayPhase                           PreviousDayPhase                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAtCreation                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortMusicManager::OnDayPhaseChanged(EFortDayPhase CurrentDayPhase, EFortDayPhase PreviousDayPhase, bool bAtCreation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMusicManager", "OnDayPhaseChanged");

	Params::FortMusicManager_OnDayPhaseChanged Parms{};

	Parms.CurrentDayPhase = CurrentDayPhase;
	Parms.PreviousDayPhase = PreviousDayPhase;
	Parms.bAtCreation = bAtCreation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortMusicManager.OnThresholdChange
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortCombatThresholds                   OldThreshold                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortCombatThresholds                   NewThreshold                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortMusicManager::OnThresholdChange(EFortCombatThresholds OldThreshold, EFortCombatThresholds NewThreshold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMusicManager", "OnThresholdChange");

	Params::FortMusicManager_OnThresholdChange Parms{};

	Parms.OldThreshold = OldThreshold;
	Parms.NewThreshold = NewThreshold;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortToggledEditModeParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerController*            _PlayerThatToggledEditMode                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABuildingSMActor*                 Param_EditableActor                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InEditMode                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortToggledEditModeParams::BreakParams(class AFortPlayerController** _PlayerThatToggledEditMode, class ABuildingSMActor** Param_EditableActor, bool* InEditMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortToggledEditModeParams", "BreakParams");

	Params::FortToggledEditModeParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_PlayerThatToggledEditMode != nullptr)
		*_PlayerThatToggledEditMode = Parms._PlayerThatToggledEditMode;

	if (Param_EditableActor != nullptr)
		*Param_EditableActor = Parms.Param_EditableActor;

	if (InEditMode != nullptr)
		*InEditMode = Parms.InEditMode;
}


// Function FortniteGame.FortToggledEditModeParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            _PlayerThatToggledEditMode                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ABuildingSMActor*                 InEditableActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InEditMode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortToggledEditModeParams*       ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortToggledEditModeParams::SetParams(class AFortPlayerController* _PlayerThatToggledEditMode, class ABuildingSMActor* InEditableActor, bool InEditMode, class UFortToggledEditModeParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortToggledEditModeParams", "SetParams");

	Params::FortToggledEditModeParams_SetParams Parms{};

	Parms._PlayerThatToggledEditMode = _PlayerThatToggledEditMode;
	Parms.InEditableActor = InEditableActor;
	Parms.InEditMode = InEditMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortNavSystem.IsNavmeshInRadiusInitialized
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContext                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          TestLocation                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TestRadius                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortNavSystem::IsNavmeshInRadiusInitialized(class UObject* WorldContext, const struct FVector& TestLocation, float TestRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortNavSystem", "IsNavmeshInRadiusInitialized");

	Params::FortNavSystem_IsNavmeshInRadiusInitialized Parms{};

	Parms.WorldContext = WorldContext;
	Parms.TestLocation = std::move(TestLocation);
	Parms.TestRadius = TestRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortNavSystem.OnNavDataRegistered
// (Final, Native, Protected)
// Parameters:
// class ANavigationData*                  NavData                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortNavSystem::OnNavDataRegistered(class ANavigationData* NavData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNavSystem", "OnNavDataRegistered");

	Params::FortNavSystem_OnNavDataRegistered Parms{};

	Parms.NavData = NavData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortItemCraftedParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFortSchematicItemDefinition*     _SchematicDefinition                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            _CraftedBy                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _AmountCrafted                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bItemWasQuickCrafted                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCraftedParams::BreakParams(class UFortSchematicItemDefinition** _SchematicDefinition, class AFortPlayerController** _CraftedBy, int32* _AmountCrafted, bool* _bItemWasQuickCrafted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCraftedParams", "BreakParams");

	Params::FortItemCraftedParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_SchematicDefinition != nullptr)
		*_SchematicDefinition = Parms._SchematicDefinition;

	if (_CraftedBy != nullptr)
		*_CraftedBy = Parms._CraftedBy;

	if (_AmountCrafted != nullptr)
		*_AmountCrafted = Parms._AmountCrafted;

	if (_bItemWasQuickCrafted != nullptr)
		*_bItemWasQuickCrafted = Parms._bItemWasQuickCrafted;
}


// Function FortniteGame.FortItemCraftedParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortSchematicItemDefinition*     _SchematicDefinition                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            _CraftedBy                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _AmountCrafted                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    _bItemWasQuickCrafted                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItemCraftedParams*           ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCraftedParams::SetParams(const class UFortSchematicItemDefinition* _SchematicDefinition, class AFortPlayerController* _CraftedBy, int32 _AmountCrafted, bool _bItemWasQuickCrafted, class UFortItemCraftedParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCraftedParams", "SetParams");

	Params::FortItemCraftedParams_SetParams Parms{};

	Parms._SchematicDefinition = _SchematicDefinition;
	Parms._CraftedBy = _CraftedBy;
	Parms._AmountCrafted = _AmountCrafted;
	Parms._bItemWasQuickCrafted = _bItemWasQuickCrafted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortPlayerDBNOEnterParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerPawn*                  _KilledPlayer                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _KilledBy                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerDBNOEnterParams::BreakParams(class AFortPlayerPawn** _KilledPlayer, class AController** _KilledBy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerDBNOEnterParams", "BreakParams");

	Params::FortPlayerDBNOEnterParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_KilledPlayer != nullptr)
		*_KilledPlayer = Parms._KilledPlayer;

	if (_KilledBy != nullptr)
		*_KilledBy = Parms._KilledBy;
}


// Function FortniteGame.FortPlayerDBNOEnterParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerPawn*                  _KilledPlayer                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _KilledBy                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortPlayerDBNOEnterParams*       ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerDBNOEnterParams::SetParams(class AFortPlayerPawn* _KilledPlayer, class AController* _KilledBy, class UFortPlayerDBNOEnterParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerDBNOEnterParams", "SetParams");

	Params::FortPlayerDBNOEnterParams_SetParams Parms{};

	Parms._KilledPlayer = _KilledPlayer;
	Parms._KilledBy = _KilledBy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortOutpostFunctionLibrary.ActivateCraftingTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostFunctionLibrary::ActivateCraftingTable(class AFortPlayerControllerOutpost* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "ActivateCraftingTable");

	Params::FortOutpostFunctionLibrary_ActivateCraftingTable Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostFunctionLibrary.CanActivateCraftingTable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortOutpostFunctionLibrary::CanActivateCraftingTable(class AFortPlayerControllerOutpost* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "CanActivateCraftingTable");

	Params::FortOutpostFunctionLibrary_CanActivateCraftingTable Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.DeactivateCraftingTable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostFunctionLibrary::DeactivateCraftingTable(class AFortPlayerControllerOutpost* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "DeactivateCraftingTable");

	Params::FortOutpostFunctionLibrary_DeactivateCraftingTable Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostFunctionLibrary.DeployOutpostBuildingTagOnPlacementTag
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     BuildingTag                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     PlacementTag                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortOutpostFunctionLibrary::DeployOutpostBuildingTagOnPlacementTag(class UObject* WorldContextObject, const struct FGameplayTag& BuildingTag, const struct FGameplayTag& PlacementTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "DeployOutpostBuildingTagOnPlacementTag");

	Params::FortOutpostFunctionLibrary_DeployOutpostBuildingTagOnPlacementTag Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.BuildingTag = std::move(BuildingTag);
	Parms.PlacementTag = std::move(PlacementTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.FabricateItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItemDefinition*         ItemDef                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostFunctionLibrary::FabricateItem(class AFortPlayerControllerOutpost* FortPC, class UFortWorldItemDefinition* ItemDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "FabricateItem");

	Params::FortOutpostFunctionLibrary_FabricateItem Parms{};

	Parms.FortPC = FortPC;
	Parms.ItemDef = ItemDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostFunctionLibrary.FabricatorAbortDisintegration
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostFunctionLibrary::FabricatorAbortDisintegration(class AFortPlayerControllerOutpost* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "FabricatorAbortDisintegration");

	Params::FortOutpostFunctionLibrary_FabricatorAbortDisintegration Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostFunctionLibrary.FabricatorCanDisintegrateItem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItem*                   Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortOutpostFunctionLibrary::FabricatorCanDisintegrateItem(class AFortPlayerControllerOutpost* FortPC, class UFortWorldItem* Item, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "FabricatorCanDisintegrateItem");

	Params::FortOutpostFunctionLibrary_FabricatorCanDisintegrateItem Parms{};

	Parms.FortPC = FortPC;
	Parms.Item = Item;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.FabricatorDisintegrateItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItem*                   Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostFunctionLibrary::FabricatorDisintegrateItem(class AFortPlayerControllerOutpost* FortPC, class UFortWorldItem* Item, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "FabricatorDisintegrateItem");

	Params::FortOutpostFunctionLibrary_FabricatorDisintegrateItem Parms{};

	Parms.FortPC = FortPC;
	Parms.Item = Item;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostFunctionLibrary.FabricatorIsDisintegrating
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortOutpostFunctionLibrary::FabricatorIsDisintegrating(class AFortPlayerControllerOutpost* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "FabricatorIsDisintegrating");

	Params::FortOutpostFunctionLibrary_FabricatorIsDisintegrating Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetCraftingTableActivationCost
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortItemQuantityPair>    OutWorldItems                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortOutpostFunctionLibrary::GetCraftingTableActivationCost(class AFortPlayerControllerOutpost* FortPC, TArray<struct FFortItemQuantityPair>* OutWorldItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetCraftingTableActivationCost");

	Params::FortOutpostFunctionLibrary_GetCraftingTableActivationCost Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWorldItems != nullptr)
		*OutWorldItems = std::move(Parms.OutWorldItems);
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetCraftingTableActivationItemCount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortOutpostFunctionLibrary::GetCraftingTableActivationItemCount(class AFortPlayerControllerOutpost* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetCraftingTableActivationItemCount");

	Params::FortOutpostFunctionLibrary_GetCraftingTableActivationItemCount Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetFabricatorDisintegrationDurationInSeconds
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortOutpostFunctionLibrary::GetFabricatorDisintegrationDurationInSeconds(class AFortPlayerControllerOutpost* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetFabricatorDisintegrationDurationInSeconds");

	Params::FortOutpostFunctionLibrary_GetFabricatorDisintegrationDurationInSeconds Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetFabricatorDisintegrationMinutesRemaining
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortOutpostFunctionLibrary::GetFabricatorDisintegrationMinutesRemaining(class AFortPlayerControllerOutpost* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetFabricatorDisintegrationMinutesRemaining");

	Params::FortOutpostFunctionLibrary_GetFabricatorDisintegrationMinutesRemaining Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetFabricatorDisintegrationSecondsRemaining
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortOutpostFunctionLibrary::GetFabricatorDisintegrationSecondsRemaining(class AFortPlayerControllerOutpost* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetFabricatorDisintegrationSecondsRemaining");

	Params::FortOutpostFunctionLibrary_GetFabricatorDisintegrationSecondsRemaining Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetFabricatorDisintegrationStartTime
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UFortOutpostFunctionLibrary::GetFabricatorDisintegrationStartTime(class AFortPlayerControllerOutpost* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetFabricatorDisintegrationStartTime");

	Params::FortOutpostFunctionLibrary_GetFabricatorDisintegrationStartTime Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetFabricatorIncomingGooAmount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortOutpostFunctionLibrary::GetFabricatorIncomingGooAmount(class AFortPlayerControllerOutpost* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetFabricatorIncomingGooAmount");

	Params::FortOutpostFunctionLibrary_GetFabricatorIncomingGooAmount Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetFabricatorIncomingGooAmountProgress
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortOutpostFunctionLibrary::GetFabricatorIncomingGooAmountProgress(class AFortPlayerControllerOutpost* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetFabricatorIncomingGooAmountProgress");

	Params::FortOutpostFunctionLibrary_GetFabricatorIncomingGooAmountProgress Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetFabricatorItemDisintegrationDurationInSeconds
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFortWorldItem*                   Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortOutpostFunctionLibrary::GetFabricatorItemDisintegrationDurationInSeconds(class UFortWorldItem* Item, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetFabricatorItemDisintegrationDurationInSeconds");

	Params::FortOutpostFunctionLibrary_GetFabricatorItemDisintegrationDurationInSeconds Parms{};

	Parms.Item = Item;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetFabricatorMaxGooCapacity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortOutpostFunctionLibrary::GetFabricatorMaxGooCapacity(class AFortPlayerControllerOutpost* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetFabricatorMaxGooCapacity");

	Params::FortOutpostFunctionLibrary_GetFabricatorMaxGooCapacity Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetFabricatorPlayerItems
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortInventoryFilter                    InventoryFilter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SearchFilter                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortItem*> UFortOutpostFunctionLibrary::GetFabricatorPlayerItems(class AFortPlayerControllerOutpost* FortPC, EFortInventoryFilter InventoryFilter, const class FString& SearchFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetFabricatorPlayerItems");

	Params::FortOutpostFunctionLibrary_GetFabricatorPlayerItems Parms{};

	Parms.FortPC = FortPC;
	Parms.InventoryFilter = InventoryFilter;
	Parms.SearchFilter = std::move(SearchFilter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetFabricatorRecipes
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortInventoryFilter                    InventoryFilter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SearchFilter                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortItem*> UFortOutpostFunctionLibrary::GetFabricatorRecipes(class AFortPlayerControllerOutpost* FortPC, EFortInventoryFilter InventoryFilter, const class FString& SearchFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetFabricatorRecipes");

	Params::FortOutpostFunctionLibrary_GetFabricatorRecipes Parms{};

	Parms.FortPC = FortPC;
	Parms.InventoryFilter = InventoryFilter;
	Parms.SearchFilter = std::move(SearchFilter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetFabricatorStoredGooAmount
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortOutpostFunctionLibrary::GetFabricatorStoredGooAmount(class AFortPlayerControllerOutpost* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetFabricatorStoredGooAmount");

	Params::FortOutpostFunctionLibrary_GetFabricatorStoredGooAmount Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetGooFromDisintegrationOfItem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFortWorldItem*                   Item                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortOutpostFunctionLibrary::GetGooFromDisintegrationOfItem(const class UFortWorldItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetGooFromDisintegrationOfItem");

	Params::FortOutpostFunctionLibrary_GetGooFromDisintegrationOfItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetGooRequiredToFabricateItem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFortWorldItem*                   Item                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortOutpostFunctionLibrary::GetGooRequiredToFabricateItem(const class UFortWorldItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetGooRequiredToFabricateItem");

	Params::FortOutpostFunctionLibrary_GetGooRequiredToFabricateItem Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetNumberOfCraftingTableItemsRemaining
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortOutpostFunctionLibrary::GetNumberOfCraftingTableItemsRemaining(class AFortPlayerControllerOutpost* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetNumberOfCraftingTableItemsRemaining");

	Params::FortOutpostFunctionLibrary_GetNumberOfCraftingTableItemsRemaining Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetOutpostBuildingItemDefinition
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOutpostBuildings                       Building                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortOutpostItemDefinition*       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortOutpostItemDefinition* UFortOutpostFunctionLibrary::GetOutpostBuildingItemDefinition(class UObject* WorldContextObject, EOutpostBuildings Building)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetOutpostBuildingItemDefinition");

	Params::FortOutpostFunctionLibrary_GetOutpostBuildingItemDefinition Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Building = Building;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetOutpostBuildingTagFromPlacementTag
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     PlacementTag                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UFortOutpostFunctionLibrary::GetOutpostBuildingTagFromPlacementTag(class UObject* WorldContextObject, const struct FGameplayTag& PlacementTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetOutpostBuildingTagFromPlacementTag");

	Params::FortOutpostFunctionLibrary_GetOutpostBuildingTagFromPlacementTag Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.PlacementTag = std::move(PlacementTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetOutpostOwner
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerControllerOutpost*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerControllerOutpost* UFortOutpostFunctionLibrary::GetOutpostOwner(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetOutpostOwner");

	Params::FortOutpostFunctionLibrary_GetOutpostOwner Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetOutpostQuestMissionConfigData
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ConfigTag                                              (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortMissionConfigData*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortMissionConfigData* UFortOutpostFunctionLibrary::GetOutpostQuestMissionConfigData(class UObject* WorldContextObject, const struct FGameplayTag& ConfigTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetOutpostQuestMissionConfigData");

	Params::FortOutpostFunctionLibrary_GetOutpostQuestMissionConfigData Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ConfigTag = std::move(ConfigTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetPlacementTagFromOutpostBuildingTag
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     BuildingTag                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGameplayTag UFortOutpostFunctionLibrary::GetPlacementTagFromOutpostBuildingTag(class UObject* WorldContextObject, const struct FGameplayTag& BuildingTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetPlacementTagFromOutpostBuildingTag");

	Params::FortOutpostFunctionLibrary_GetPlacementTagFromOutpostBuildingTag Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.BuildingTag = std::move(BuildingTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetStorageVaultCapacity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortOutpostFunctionLibrary::GetStorageVaultCapacity(class AFortPlayerControllerOutpost* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetStorageVaultCapacity");

	Params::FortOutpostFunctionLibrary_GetStorageVaultCapacity Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetStorageVaultNumItems
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortOutpostFunctionLibrary::GetStorageVaultNumItems(class AFortPlayerControllerOutpost* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetStorageVaultNumItems");

	Params::FortOutpostFunctionLibrary_GetStorageVaultNumItems Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetStorageVaultPlayerItems
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortInventoryFilter                    InventoryFilter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SearchFilter                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortItem*> UFortOutpostFunctionLibrary::GetStorageVaultPlayerItems(class AFortPlayerControllerOutpost* Player, EFortInventoryFilter InventoryFilter, const class FString& SearchFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetStorageVaultPlayerItems");

	Params::FortOutpostFunctionLibrary_GetStorageVaultPlayerItems Parms{};

	Parms.Player = Player;
	Parms.InventoryFilter = InventoryFilter;
	Parms.SearchFilter = std::move(SearchFilter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.GetStorageVaultStoredItems
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortInventoryFilter                    InventoryFilter                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SearchFilter                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UFortItem*>                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UFortItem*> UFortOutpostFunctionLibrary::GetStorageVaultStoredItems(class AFortPlayerControllerOutpost* Player, EFortInventoryFilter InventoryFilter, const class FString& SearchFilter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "GetStorageVaultStoredItems");

	Params::FortOutpostFunctionLibrary_GetStorageVaultStoredItems Parms{};

	Parms.Player = Player;
	Parms.InventoryFilter = InventoryFilter;
	Parms.SearchFilter = std::move(SearchFilter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.IsCraftingTableActive
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerControllerOutpost*     FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortOutpostFunctionLibrary::IsCraftingTableActive(class AFortPlayerControllerOutpost* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "IsCraftingTableActive");

	Params::FortOutpostFunctionLibrary_IsCraftingTableActive Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortOutpostFunctionLibrary.SetCriticalMissionJoinability
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bJoinable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostFunctionLibrary::SetCriticalMissionJoinability(class UObject* WorldContextObject, bool bJoinable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "SetCriticalMissionJoinability");

	Params::FortOutpostFunctionLibrary_SetCriticalMissionJoinability Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bJoinable = bJoinable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostFunctionLibrary.SetOutpostDefenseActive
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostFunctionLibrary::SetOutpostDefenseActive(class UObject* WorldContextObject, bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "SetOutpostDefenseActive");

	Params::FortOutpostFunctionLibrary_SetOutpostDefenseActive Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.bActive = bActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostFunctionLibrary.SetOutpostGameDifficultyRow
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDataTableRowHandle              GameDifficultyInfo                                     (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UFortOutpostFunctionLibrary::SetOutpostGameDifficultyRow(class UObject* WorldContextObject, const struct FDataTableRowHandle& GameDifficultyInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "SetOutpostGameDifficultyRow");

	Params::FortOutpostFunctionLibrary_SetOutpostGameDifficultyRow Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.GameDifficultyInfo = std::move(GameDifficultyInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostFunctionLibrary.TransferItemFromStorage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItem*                   Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostFunctionLibrary::TransferItemFromStorage(class AFortPlayerController* Player, class UFortWorldItem* Item, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "TransferItemFromStorage");

	Params::FortOutpostFunctionLibrary_TransferItemFromStorage Parms{};

	Parms.Player = Player;
	Parms.Item = Item;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostFunctionLibrary.TransferItemToStorage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItem*                   Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortOutpostFunctionLibrary::TransferItemToStorage(class AFortPlayerController* Player, class UFortWorldItem* Item, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortOutpostFunctionLibrary", "TransferItemToStorage");

	Params::FortOutpostFunctionLibrary_TransferItemToStorage Parms{};

	Parms.Player = Player;
	Parms.Item = Item;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortOutpostItemDefinition.GetLongDescription
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortOutpostItemDefinition::GetLongDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortOutpostItemDefinition", "GetLongDescription");

	Params::FortOutpostItemDefinition_GetLongDescription Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyBeaconClient.ClientAbandonResponse
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// EPartyReservationResult                 ReservationResponse                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPartyBeaconClient::ClientAbandonResponse(EPartyReservationResult ReservationResponse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyBeaconClient", "ClientAbandonResponse");

	Params::FortPartyBeaconClient_ClientAbandonResponse Parms{};

	Parms.ReservationResponse = ReservationResponse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyBeaconClient.ClientAllowedToProceedFromReservation
// (Net, NetReliable, Native, Event, Public, NetClient)

void AFortPartyBeaconClient::ClientAllowedToProceedFromReservation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyBeaconClient", "ClientAllowedToProceedFromReservation");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyBeaconClient.ClientAllowedToProceedFromReservationTimeout
// (Net, NetReliable, Native, Event, Public, NetClient)

void AFortPartyBeaconClient::ClientAllowedToProceedFromReservationTimeout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyBeaconClient", "ClientAllowedToProceedFromReservationTimeout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyBeaconClient.ClientReconnectResponse
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// EPartyReservationResult                 ReservationResponse                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPartyBeaconClient::ClientReconnectResponse(EPartyReservationResult ReservationResponse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyBeaconClient", "ClientReconnectResponse");

	Params::FortPartyBeaconClient_ClientReconnectResponse Parms{};

	Parms.ReservationResponse = ReservationResponse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyBeaconClient.ServerAbandonExistingReservation
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FString                           InSessionId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 RequestingPlayer                                       (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPartyBeaconClient::ServerAbandonExistingReservation(const class FString& InSessionId, const struct FUniqueNetIdRepl& RequestingPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyBeaconClient", "ServerAbandonExistingReservation");

	Params::FortPartyBeaconClient_ServerAbandonExistingReservation Parms{};

	Parms.InSessionId = std::move(InSessionId);
	Parms.RequestingPlayer = std::move(RequestingPlayer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyBeaconClient.ServerEmptyServerReservationRequest
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FString                           InSessionId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEmptyServerReservation          ReservationData                                        (ConstParm, Parm, NativeAccessSpecifierPublic)
// struct FPartyReservation                Reservation                                            (Parm, NativeAccessSpecifierPublic)

void AFortPartyBeaconClient::ServerEmptyServerReservationRequest(const class FString& InSessionId, const struct FEmptyServerReservation& ReservationData, const struct FPartyReservation& Reservation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyBeaconClient", "ServerEmptyServerReservationRequest");

	Params::FortPartyBeaconClient_ServerEmptyServerReservationRequest Parms{};

	Parms.InSessionId = std::move(InSessionId);
	Parms.ReservationData = std::move(ReservationData);
	Parms.Reservation = std::move(Reservation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyBeaconClient.ServerReconnectExistingReservation
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class FString                           InSessionId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 RequestingPlayer                                       (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPartyBeaconClient::ServerReconnectExistingReservation(const class FString& InSessionId, const struct FUniqueNetIdRepl& RequestingPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyBeaconClient", "ServerReconnectExistingReservation");

	Params::FortPartyBeaconClient_ServerReconnectExistingReservation Parms{};

	Parms.InSessionId = std::move(InSessionId);
	Parms.RequestingPlayer = std::move(RequestingPlayer);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.IsValidNetID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 UniqueNetID                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::IsValidNetID(const struct FUniqueNetIdRepl& UniqueNetID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortPartyContext", "IsValidNetID");

	Params::FortPartyContext_IsValidNetID Parms{};

	Parms.UniqueNetID = std::move(UniqueNetID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.AcceptFriendRequest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerID                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::AcceptFriendRequest(const struct FUniqueNetIdRepl& PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "AcceptFriendRequest");

	Params::FortPartyContext_AcceptFriendRequest Parms{};

	Parms.PlayerID = std::move(PlayerID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.AttemptRefreshFriendsList
// (Final, Native, Public, BlueprintCallable)

void UFortPartyContext::AttemptRefreshFriendsList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "AttemptRefreshFriendsList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.CanBeInvitedNetID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerID                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortPartyRestriction                   FailReason                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::CanBeInvitedNetID(const struct FUniqueNetIdRepl& PlayerID, EFortPartyRestriction* FailReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "CanBeInvitedNetID");

	Params::FortPartyContext_CanBeInvitedNetID Parms{};

	Parms.PlayerID = std::move(PlayerID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FailReason != nullptr)
		*FailReason = Parms.FailReason;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.CancelFriendRequest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerID                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::CancelFriendRequest(const struct FUniqueNetIdRepl& PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "CancelFriendRequest");

	Params::FortPartyContext_CancelFriendRequest Parms{};

	Parms.PlayerID = std::move(PlayerID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.ClearPendingInvites
// (Final, Native, Public, BlueprintCallable)

void UFortPartyContext::ClearPendingInvites()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "ClearPendingInvites");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.GetActiveFriendsList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortSocialItem*>          OutActiveFriends                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortPartyContext::GetActiveFriendsList(TArray<class UFortSocialItem*>* OutActiveFriends)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "GetActiveFriendsList");

	Params::FortPartyContext_GetActiveFriendsList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActiveFriends != nullptr)
		*OutActiveFriends = std::move(Parms.OutActiveFriends);
}


// Function FortniteGame.FortPartyContext.GetLocalTeamTeamMemberInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerState*                 TeamMemberState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortTeamMemberInfo              TeamMemberInfo                                         (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::GetLocalTeamTeamMemberInfo(class AFortPlayerState* TeamMemberState, struct FFortTeamMemberInfo* TeamMemberInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "GetLocalTeamTeamMemberInfo");

	Params::FortPartyContext_GetLocalTeamTeamMemberInfo Parms{};

	Parms.TeamMemberState = TeamMemberState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TeamMemberInfo != nullptr)
		*TeamMemberInfo = std::move(Parms.TeamMemberInfo);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.GetPartyInvites
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortSocialItem*>          OutPartyInvites                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortPartyContext::GetPartyInvites(TArray<class UFortSocialItem*>* OutPartyInvites)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "GetPartyInvites");

	Params::FortPartyContext_GetPartyInvites Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPartyInvites != nullptr)
		*OutPartyInvites = std::move(Parms.OutPartyInvites);
}


// Function FortniteGame.FortPartyContext.GetPartyPrivacySetting
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EPartyType                              OutPartyType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OutLeaderFriendsOnly                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OutLeaderInvitesOnly                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::GetPartyPrivacySetting(EPartyType* OutPartyType, bool* OutLeaderFriendsOnly, bool* OutLeaderInvitesOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "GetPartyPrivacySetting");

	Params::FortPartyContext_GetPartyPrivacySetting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPartyType != nullptr)
		*OutPartyType = Parms.OutPartyType;

	if (OutLeaderFriendsOnly != nullptr)
		*OutLeaderFriendsOnly = Parms.OutLeaderFriendsOnly;

	if (OutLeaderInvitesOnly != nullptr)
		*OutLeaderInvitesOnly = Parms.OutLeaderInvitesOnly;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.GetSocialItemCategories
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortSocialItem*>          OutSocialCategoryItems                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortPartyContext::GetSocialItemCategories(TArray<class UFortSocialItem*>* OutSocialCategoryItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "GetSocialItemCategories");

	Params::FortPartyContext_GetSocialItemCategories Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSocialCategoryItems != nullptr)
		*OutSocialCategoryItems = std::move(Parms.OutSocialCategoryItems);
}


// Function FortniteGame.FortPartyContext.GetSocialItemList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UFortSocialItem*>          OutSocialItems                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFortPartyContext::GetSocialItemList(TArray<class UFortSocialItem*>* OutSocialItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "GetSocialItemList");

	Params::FortPartyContext_GetSocialItemList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutSocialItems != nullptr)
		*OutSocialItems = std::move(Parms.OutSocialItems);
}


// Function FortniteGame.FortPartyContext.GetTeamInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortTeam                               Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortUITeamInfo*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortUITeamInfo* UFortPartyContext::GetTeamInfo(EFortTeam Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "GetTeamInfo");

	Params::FortPartyContext_GetTeamInfo Parms{};

	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.HandlePendingInvites
// (Final, Native, Public, BlueprintCallable)

void UFortPartyContext::HandlePendingInvites()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "HandlePendingInvites");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.JoinParty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortSocialItem*                  PartyItem                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsRetrying                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::JoinParty(class UFortSocialItem* PartyItem, bool bIsRetrying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "JoinParty");

	Params::FortPartyContext_JoinParty Parms{};

	Parms.PartyItem = PartyItem;
	Parms.bIsRetrying = bIsRetrying;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.KickPartyMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 PartyMemberId                                          (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::KickPartyMember(const struct FUniqueNetIdRepl& PartyMemberId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "KickPartyMember");

	Params::FortPartyContext_KickPartyMember Parms{};

	Parms.PartyMemberId = std::move(PartyMemberId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.LeaveParty
// (Final, Native, Public, BlueprintCallable)

void UFortPartyContext::LeaveParty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "LeaveParty");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.MutePartyMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 PartyMemberId                                          (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::MutePartyMember(const struct FUniqueNetIdRepl& PartyMemberId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "MutePartyMember");

	Params::FortPartyContext_MutePartyMember Parms{};

	Parms.PartyMemberId = std::move(PartyMemberId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteGame.FortPartyContext.OnAthenaReadyStateChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// struct FUniqueNetIdRepl                 UniqueId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bReady                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::OnAthenaReadyStateChanged__DelegateSignature(const struct FUniqueNetIdRepl& UniqueId, bool bReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnAthenaReadyStateChanged__DelegateSignature");

	Params::FortPartyContext_OnAthenaReadyStateChanged__DelegateSignature Parms{};

	Parms.UniqueId = std::move(UniqueId);
	Parms.bReady = bReady;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortPartyContext.OnClientPartyStateChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EFortPartyState                         PartyState                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::OnClientPartyStateChanged__DelegateSignature(EFortPartyState PartyState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnClientPartyStateChanged__DelegateSignature");

	Params::FortPartyContext_OnClientPartyStateChanged__DelegateSignature Parms{};

	Parms.PartyState = PartyState;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortPartyContext.OnClientPlaylistChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EFortAthenaPlaylist                     PlaylistChanged                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::OnClientPlaylistChanged__DelegateSignature(EFortAthenaPlaylist PlaylistChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnClientPlaylistChanged__DelegateSignature");

	Params::FortPartyContext_OnClientPlaylistChanged__DelegateSignature Parms{};

	Parms.PlaylistChanged = PlaylistChanged;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortPartyContext.OnClientSquadFillChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    bSquadFill                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::OnClientSquadFillChanged__DelegateSignature(bool bSquadFill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnClientSquadFillChanged__DelegateSignature");

	Params::FortPartyContext_OnClientSquadFillChanged__DelegateSignature Parms{};

	Parms.bSquadFill = bSquadFill;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortPartyContext.OnFriendPresenceUpdated__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// struct FUniqueNetIdRepl                 FriendId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::OnFriendPresenceUpdated__DelegateSignature(const struct FUniqueNetIdRepl& FriendId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnFriendPresenceUpdated__DelegateSignature");

	Params::FortPartyContext_OnFriendPresenceUpdated__DelegateSignature Parms{};

	Parms.FriendId = std::move(FriendId);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortPartyContext.OnFriendsChangedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// TArray<class UFortSocialItem*>          ActiveFriends                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortPartyContext::OnFriendsChangedDelegate__DelegateSignature(const TArray<class UFortSocialItem*>& ActiveFriends)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnFriendsChangedDelegate__DelegateSignature");

	Params::FortPartyContext_OnFriendsChangedDelegate__DelegateSignature Parms{};

	Parms.ActiveFriends = std::move(ActiveFriends);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortPartyContext.OnFriendsCountChangedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   ActiveFriendsCount                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::OnFriendsCountChangedDelegate__DelegateSignature(int32 ActiveFriendsCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnFriendsCountChangedDelegate__DelegateSignature");

	Params::FortPartyContext_OnFriendsCountChangedDelegate__DelegateSignature Parms{};

	Parms.ActiveFriendsCount = ActiveFriendsCount;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortPartyContext.OnLeaderFriendsOnlyChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    bLeaderFriendsOnly                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::OnLeaderFriendsOnlyChanged__DelegateSignature(bool bLeaderFriendsOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnLeaderFriendsOnlyChanged__DelegateSignature");

	Params::FortPartyContext_OnLeaderFriendsOnlyChanged__DelegateSignature Parms{};

	Parms.bLeaderFriendsOnly = bLeaderFriendsOnly;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortPartyContext.OnLeaderInvitesOnlyChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    bLeaderInviteOnly                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::OnLeaderInvitesOnlyChanged__DelegateSignature(bool bLeaderInviteOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnLeaderInvitesOnlyChanged__DelegateSignature");

	Params::FortPartyContext_OnLeaderInvitesOnlyChanged__DelegateSignature Parms{};

	Parms.bLeaderInviteOnly = bLeaderInviteOnly;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortPartyContext.OnPartyDataChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// struct FPartyState                      PartyData                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortPartyContext::OnPartyDataChanged__DelegateSignature(const struct FPartyState& PartyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnPartyDataChanged__DelegateSignature");

	Params::FortPartyContext_OnPartyDataChanged__DelegateSignature Parms{};

	Parms.PartyData = std::move(PartyData);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortPartyContext.OnPartyInvitesCountUpdatedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   PartyInvitesCount                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::OnPartyInvitesCountUpdatedDelegate__DelegateSignature(int32 PartyInvitesCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnPartyInvitesCountUpdatedDelegate__DelegateSignature");

	Params::FortPartyContext_OnPartyInvitesCountUpdatedDelegate__DelegateSignature Parms{};

	Parms.PartyInvitesCount = PartyInvitesCount;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortPartyContext.OnPartyInvitesUpdatedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// TArray<class UFortSocialItem*>          ActiveFriends                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortPartyContext::OnPartyInvitesUpdatedDelegate__DelegateSignature(const TArray<class UFortSocialItem*>& ActiveFriends)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnPartyInvitesUpdatedDelegate__DelegateSignature");

	Params::FortPartyContext_OnPartyInvitesUpdatedDelegate__DelegateSignature Parms{};

	Parms.ActiveFriends = std::move(ActiveFriends);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortPartyContext.OnPartyJoinedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortPartyContext::OnPartyJoinedDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnPartyJoinedDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteGame.FortPartyContext.OnPartyLeftDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortPartyContext::OnPartyLeftDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnPartyLeftDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteGame.FortPartyContext.OnPartyTransitionCompleteDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EFortPartyTransition                    PartyTransition                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::OnPartyTransitionCompleteDelegate__DelegateSignature(EFortPartyTransition PartyTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnPartyTransitionCompleteDelegate__DelegateSignature");

	Params::FortPartyContext_OnPartyTransitionCompleteDelegate__DelegateSignature Parms{};

	Parms.PartyTransition = PartyTransition;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortPartyContext.OnPartyTransitionStartedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EFortPartyTransition                    PartyTransition                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::OnPartyTransitionStartedDelegate__DelegateSignature(EFortPartyTransition PartyTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnPartyTransitionStartedDelegate__DelegateSignature");

	Params::FortPartyContext_OnPartyTransitionStartedDelegate__DelegateSignature Parms{};

	Parms.PartyTransition = PartyTransition;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortPartyContext.OnPartyTypeChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EPartyType                              PartyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::OnPartyTypeChanged__DelegateSignature(EPartyType PartyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnPartyTypeChanged__DelegateSignature");

	Params::FortPartyContext_OnPartyTypeChanged__DelegateSignature Parms{};

	Parms.PartyType = PartyType;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortPartyContext.OnPlayerStateChangedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// struct FFortTeamMemberInfo              PlayerInfo                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UFortPartyContext::OnPlayerStateChangedDelegate__DelegateSignature(const struct FFortTeamMemberInfo& PlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnPlayerStateChangedDelegate__DelegateSignature");

	Params::FortPartyContext_OnPlayerStateChangedDelegate__DelegateSignature Parms{};

	Parms.PlayerInfo = std::move(PlayerInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction FortniteGame.FortPartyContext.OnRejectInviteComplete__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortPartyContext::OnRejectInviteComplete__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnRejectInviteComplete__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteGame.FortPartyContext.OnSendInviteCompleteDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortPartyContext::OnSendInviteCompleteDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnSendInviteCompleteDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction FortniteGame.FortPartyContext.OnSocialListChangedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// TArray<class UFortSocialItem*>          SocialItems                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFortPartyContext::OnSocialListChangedDelegate__DelegateSignature(const TArray<class UFortSocialItem*>& SocialItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "OnSocialListChangedDelegate__DelegateSignature");

	Params::FortPartyContext_OnSocialListChangedDelegate__DelegateSignature Parms{};

	Parms.SocialItems = std::move(SocialItems);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortPartyContext.PromotePartyMemberToLeader
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 PartyMemberId                                          (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::PromotePartyMemberToLeader(const struct FUniqueNetIdRepl& PartyMemberId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "PromotePartyMemberToLeader");

	Params::FortPartyContext_PromotePartyMemberToLeader Parms{};

	Parms.PartyMemberId = std::move(PartyMemberId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.RejectFriendRequest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerID                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::RejectFriendRequest(const struct FUniqueNetIdRepl& PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "RejectFriendRequest");

	Params::FortPartyContext_RejectFriendRequest Parms{};

	Parms.PlayerID = std::move(PlayerID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.RejectPartyInvite
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortSocialItem*                  PartyInvite                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::RejectPartyInvite(class UFortSocialItem* PartyInvite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "RejectPartyInvite");

	Params::FortPartyContext_RejectPartyInvite Parms{};

	Parms.PartyInvite = PartyInvite;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.SendFriendRequest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerID                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::SendFriendRequest(const struct FUniqueNetIdRepl& PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "SendFriendRequest");

	Params::FortPartyContext_SendFriendRequest Parms{};

	Parms.PlayerID = std::move(PlayerID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.SendPartyInvite
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortSocialItem*                  SocialItem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::SendPartyInvite(class UFortSocialItem* SocialItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "SendPartyInvite");

	Params::FortPartyContext_SendPartyInvite Parms{};

	Parms.SocialItem = SocialItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.SendPartyInviteNetID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerID                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::SendPartyInviteNetID(const struct FUniqueNetIdRepl& PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "SendPartyInviteNetID");

	Params::FortPartyContext_SendPartyInviteNetID Parms{};

	Parms.PlayerID = std::move(PlayerID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.SetChatWhisperTarget
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 FriendId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::SetChatWhisperTarget(const struct FUniqueNetIdRepl& FriendId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "SetChatWhisperTarget");

	Params::FortPartyContext_SetChatWhisperTarget Parms{};

	Parms.FriendId = std::move(FriendId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.SetFriendInvitesEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::SetFriendInvitesEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "SetFriendInvitesEnabled");

	Params::FortPartyContext_SetFriendInvitesEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.SetLocalPartyMemberLocation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortPartyMemberLocation                Location                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::SetLocalPartyMemberLocation(EFortPartyMemberLocation Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "SetLocalPartyMemberLocation");

	Params::FortPartyContext_SetLocalPartyMemberLocation Parms{};

	Parms.Location = Location;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.SetPartyInvitesEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnabled                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::SetPartyInvitesEnabled(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "SetPartyInvitesEnabled");

	Params::FortPartyContext_SetPartyInvitesEnabled Parms{};

	Parms.bEnabled = bEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.SetPartyPrivacySetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPartyType                              PartyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLeaderFriendsOnly                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLeaderInvitesOnly                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::SetPartyPrivacySetting(EPartyType PartyType, bool bLeaderFriendsOnly, bool bLeaderInvitesOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "SetPartyPrivacySetting");

	Params::FortPartyContext_SetPartyPrivacySetting Parms{};

	Parms.PartyType = PartyType;
	Parms.bLeaderFriendsOnly = bLeaderFriendsOnly;
	Parms.bLeaderInvitesOnly = bLeaderInvitesOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.SetPartyProgression
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortPartyState                         NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::SetPartyProgression(EFortPartyState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "SetPartyProgression");

	Params::FortPartyContext_SetPartyProgression Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.ShowExternalFriendsUI
// (Final, Native, Public, BlueprintCallable)

void UFortPartyContext::ShowExternalFriendsUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "ShowExternalFriendsUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.ShowExternalProfile
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 ProfileToShow                                          (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::ShowExternalProfile(const struct FUniqueNetIdRepl& ProfileToShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "ShowExternalProfile");

	Params::FortPartyContext_ShowExternalProfile Parms{};

	Parms.ProfileToShow = std::move(ProfileToShow);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.ShowLocalPlayerExternalProfile
// (Final, Native, Public, BlueprintCallable)

void UFortPartyContext::ShowLocalPlayerExternalProfile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "ShowLocalPlayerExternalProfile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.UnmutePartyMember
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 PartyMemberId                                          (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPartyContext::UnmutePartyMember(const struct FUniqueNetIdRepl& PartyMemberId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "UnmutePartyMember");

	Params::FortPartyContext_UnmutePartyMember Parms{};

	Parms.PartyMemberId = std::move(PartyMemberId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPartyContext.CanBeInvited
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortSocialItem*                  SocialItem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortPartyRestriction                   FailReason                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::CanBeInvited(class UFortSocialItem* SocialItem, EFortPartyRestriction* FailReason) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "CanBeInvited");

	Params::FortPartyContext_CanBeInvited Parms{};

	Parms.SocialItem = SocialItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FailReason != nullptr)
		*FailReason = Parms.FailReason;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.CanBeJoined
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortSocialItem*                  SocialItem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortPartyRestriction                   FailReason                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::CanBeJoined(class UFortSocialItem* SocialItem, EFortPartyRestriction* FailReason) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "CanBeJoined");

	Params::FortPartyContext_CanBeJoined Parms{};

	Parms.SocialItem = SocialItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FailReason != nullptr)
		*FailReason = Parms.FailReason;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.CanShowExternalProfile
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::CanShowExternalProfile() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "CanShowExternalProfile");

	Params::FortPartyContext_CanShowExternalProfile Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.GetConsoleFriendRichPresenceText
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 FriendId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             RichPresenceText                                       (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::GetConsoleFriendRichPresenceText(const struct FUniqueNetIdRepl& FriendId, class FText* RichPresenceText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "GetConsoleFriendRichPresenceText");

	Params::FortPartyContext_GetConsoleFriendRichPresenceText Parms{};

	Parms.FriendId = std::move(FriendId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RichPresenceText != nullptr)
		*RichPresenceText = std::move(Parms.RichPresenceText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.GetCurrentPartyMaxSize
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPartyContext::GetCurrentPartyMaxSize() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "GetCurrentPartyMaxSize");

	Params::FortPartyContext_GetCurrentPartyMaxSize Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.GetFriendRequestStatusForPlayer
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerID                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortFriendRequestStatus                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortFriendRequestStatus UFortPartyContext::GetFriendRequestStatusForPlayer(const struct FUniqueNetIdRepl& PlayerID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "GetFriendRequestStatusForPlayer");

	Params::FortPartyContext_GetFriendRequestStatusForPlayer Parms{};

	Parms.PlayerID = std::move(PlayerID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.GetLocalPartyMemberLocation
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortPartyMemberLocation                Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::GetLocalPartyMemberLocation(EFortPartyMemberLocation* Location) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "GetLocalPartyMemberLocation");

	Params::FortPartyContext_GetLocalPartyMemberLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Location != nullptr)
		*Location = Parms.Location;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.GetLocalPartyPlaylist
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortAthenaPlaylist                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortAthenaPlaylist UFortPartyContext::GetLocalPartyPlaylist() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "GetLocalPartyPlaylist");

	Params::FortPartyContext_GetLocalPartyPlaylist Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.GetLocalPartyProgression
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortPartyState                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortPartyState UFortPartyContext::GetLocalPartyProgression() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "GetLocalPartyProgression");

	Params::FortPartyContext_GetLocalPartyProgression Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.GetLocalPartyTeamFill
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::GetLocalPartyTeamFill() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "GetLocalPartyTeamFill");

	Params::FortPartyContext_GetLocalPartyTeamFill Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.GetLocalPlayerDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortPartyContext::GetLocalPlayerDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "GetLocalPlayerDisplayName");

	Params::FortPartyContext_GetLocalPlayerDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.GetLocalPlayerTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortUITeamInfo*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortUITeamInfo* UFortPartyContext::GetLocalPlayerTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "GetLocalPlayerTeam");

	Params::FortPartyContext_GetLocalPlayerTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.GetLocalPlayerTeamMemberInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortTeamMemberInfo              LocalPlayerInfo                                        (Parm, OutParm, NativeAccessSpecifierPublic)

void UFortPartyContext::GetLocalPlayerTeamMemberInfo(struct FFortTeamMemberInfo* LocalPlayerInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "GetLocalPlayerTeamMemberInfo");

	Params::FortPartyContext_GetLocalPlayerTeamMemberInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (LocalPlayerInfo != nullptr)
		*LocalPlayerInfo = std::move(Parms.LocalPlayerInfo);
}


// Function FortniteGame.FortPartyContext.GetMaxTeamSizeForSelectedTheater
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPartyContext::GetMaxTeamSizeForSelectedTheater() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "GetMaxTeamSizeForSelectedTheater");

	Params::FortPartyContext_GetMaxTeamSizeForSelectedTheater Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.GetNumPlayersInLocalParty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPartyContext::GetNumPlayersInLocalParty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "GetNumPlayersInLocalParty");

	Params::FortPartyContext_GetNumPlayersInLocalParty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.GetPartyMemberDisplayState
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortTeamMemberInfo              PartyMemberInfo                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EFortPartyMemberDisplayState            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortPartyMemberDisplayState UFortPartyContext::GetPartyMemberDisplayState(const struct FFortTeamMemberInfo& PartyMemberInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "GetPartyMemberDisplayState");

	Params::FortPartyContext_GetPartyMemberDisplayState Parms{};

	Parms.PartyMemberInfo = std::move(PartyMemberInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.HasPendingFriendRequest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::HasPendingFriendRequest() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "HasPendingFriendRequest");

	Params::FortPartyContext_HasPendingFriendRequest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.HasPendingPartyInvitation
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerID                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::HasPendingPartyInvitation(const struct FUniqueNetIdRepl& PlayerID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "HasPendingPartyInvitation");

	Params::FortPartyContext_HasPendingPartyInvitation Parms{};

	Parms.PlayerID = std::move(PlayerID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.IsAthenaPartyMemberReady
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 MemberId                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::IsAthenaPartyMemberReady(const struct FUniqueNetIdRepl& MemberId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "IsAthenaPartyMemberReady");

	Params::FortPartyContext_IsAthenaPartyMemberReady Parms{};

	Parms.MemberId = std::move(MemberId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.IsEntirePartyInFrontEnd
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::IsEntirePartyInFrontEnd() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "IsEntirePartyInFrontEnd");

	Params::FortPartyContext_IsEntirePartyInFrontEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.IsInLocalPlayersParty
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerID                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::IsInLocalPlayersParty(const struct FUniqueNetIdRepl& PlayerID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "IsInLocalPlayersParty");

	Params::FortPartyContext_IsInLocalPlayersParty Parms{};

	Parms.PlayerID = std::move(PlayerID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.IsLocalPlayerInParty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortSocialItem*                  SocialItem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::IsLocalPlayerInParty(class UFortSocialItem* SocialItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "IsLocalPlayerInParty");

	Params::FortPartyContext_IsLocalPlayerInParty Parms{};

	Parms.SocialItem = SocialItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.IsLocalPlayerInPersistentParty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::IsLocalPlayerInPersistentParty() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "IsLocalPlayerInPersistentParty");

	Params::FortPartyContext_IsLocalPlayerInPersistentParty Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.IsLocalPlayerPartyLeader
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::IsLocalPlayerPartyLeader() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "IsLocalPlayerPartyLeader");

	Params::FortPartyContext_IsLocalPlayerPartyLeader Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.IsPartyMemberMuted
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 PartyMemberId                                          (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::IsPartyMemberMuted(const struct FUniqueNetIdRepl& PartyMemberId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "IsPartyMemberMuted");

	Params::FortPartyContext_IsPartyMemberMuted Parms{};

	Parms.PartyMemberId = std::move(PartyMemberId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.IsPlayerBlocked
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerID                                               (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::IsPlayerBlocked(const struct FUniqueNetIdRepl& PlayerID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "IsPlayerBlocked");

	Params::FortPartyContext_IsPlayerBlocked Parms{};

	Parms.PlayerID = std::move(PlayerID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.IsPlayerInOurParty
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerIdToCheck                                        (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::IsPlayerInOurParty(const struct FUniqueNetIdRepl& PlayerIdToCheck) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "IsPlayerInOurParty");

	Params::FortPartyContext_IsPlayerInOurParty Parms{};

	Parms.PlayerIdToCheck = std::move(PlayerIdToCheck);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.IsTeamMemberFriend
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortTeamMemberInfo              TeamMemberInfo                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::IsTeamMemberFriend(const struct FFortTeamMemberInfo& TeamMemberInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "IsTeamMemberFriend");

	Params::FortPartyContext_IsTeamMemberFriend Parms{};

	Parms.TeamMemberInfo = std::move(TeamMemberInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.ShouldPartyInvitesBeEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::ShouldPartyInvitesBeEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "ShouldPartyInvitesBeEnabled");

	Params::FortPartyContext_ShouldPartyInvitesBeEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPartyContext.ShouldShowHeroPortraits
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPartyContext::ShouldShowHeroPortraits() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPartyContext", "ShouldShowHeroPortraits");

	Params::FortPartyContext_ShouldShowHeroPortraits Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn_InteractablePawn.BlueprintOnBeginInteract
// (BlueprintCosmetic, Native, Event, Public, BlueprintEvent)

void AFortPawn_InteractablePawn::BlueprintOnBeginInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn_InteractablePawn", "BlueprintOnBeginInteract");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn_InteractablePawn.BlueprintOnInteract
// (BlueprintAuthorityOnly, Native, Event, Public, BlueprintEvent)
// Parameters:
// class AFortPawn*                        InteractingPawn                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPawn_InteractablePawn::BlueprintOnInteract(const class AFortPawn* InteractingPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn_InteractablePawn", "BlueprintOnInteract");

	Params::FortPawn_InteractablePawn_BlueprintOnInteract Parms{};

	Parms.InteractingPawn = InteractingPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPawn_InteractablePawn.BlueprintCanInteract
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AFortPawn*                        InteractingPawn                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPawn_InteractablePawn::BlueprintCanInteract(const class AFortPawn* InteractingPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn_InteractablePawn", "BlueprintCanInteract");

	Params::FortPawn_InteractablePawn_BlueprintCanInteract Parms{};

	Parms.InteractingPawn = InteractingPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPawn_InteractablePawn.BlueprintGetInteractionString
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AFortPawn*                        InteractingPawn                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AFortPawn_InteractablePawn::BlueprintGetInteractionString(const class AFortPawn* InteractingPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPawn_InteractablePawn", "BlueprintGetInteractionString");

	Params::FortPawn_InteractablePawn_BlueprintGetInteractionString Parms{};

	Parms.InteractingPawn = InteractingPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPermaniteStructureInterface.OnBoundariesChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   MinLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   CurrentLevel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IFortPermaniteStructureInterface::OnBoundariesChanged(int32 MinLevel, int32 MaxLevel, int32 CurrentLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPermaniteStructureInterface", "OnBoundariesChanged");

	Params::FortPermaniteStructureInterface_OnBoundariesChanged Parms{};

	Parms.MinLevel = MinLevel;
	Parms.MaxLevel = MaxLevel;
	Parms.CurrentLevel = CurrentLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortPersistentResourceItemDefinition.IsEventItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPersistentResourceItemDefinition::IsEventItem() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPersistentResourceItemDefinition", "IsEventItem");

	Params::FortPersistentResourceItemDefinition_IsEventItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortItemTypeFunctionLibrary.ToText
// (Final, RequiredAPI, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortItemType                           ItemType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UsePlural                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortItemTypeFunctionLibrary::ToText(EFortItemType ItemType, bool UsePlural)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortItemTypeFunctionLibrary", "ToText");

	Params::FortItemTypeFunctionLibrary_ToText Parms{};

	Parms.ItemType = ItemType;
	Parms.UsePlural = UsePlural;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPickupEffect.ApplyCosmeticOverridesToMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMeshComponent*                   MeshComponent                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MatIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* AFortPickupEffect::ApplyCosmeticOverridesToMaterial(class UMeshComponent* MeshComponent, int32 MatIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickupEffect", "ApplyCosmeticOverridesToMaterial");

	Params::FortPickupEffect_ApplyCosmeticOverridesToMaterial Parms{};

	Parms.MeshComponent = MeshComponent;
	Parms.MatIndex = MatIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPickupEffect.OnAboutToEnterBackpack
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortPawn*                        PickupTarget                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPickupEffect::OnAboutToEnterBackpack(class AFortPawn* PickupTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickupEffect", "OnAboutToEnterBackpack");

	Params::FortPickupEffect_OnAboutToEnterBackpack Parms{};

	Parms.PickupTarget = PickupTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortPickupEffect.OnAttached
// (Event, Public, BlueprintEvent)

void AFortPickupEffect::OnAttached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickupEffect", "OnAttached");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortPickupEffect.OnPickedUp
// (Event, Public, BlueprintEvent)

void AFortPickupEffect::OnPickedUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickupEffect", "OnPickedUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortPickupEffect.OnTossed
// (Event, Public, BlueprintEvent)

void AFortPickupEffect::OnTossed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPickupEffect", "OnTossed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortPlacementActorTagTest.LineTraceByChannel
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortPlacementActor*              PlacementActor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Start                                                  (ConstParm, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          End                                                    (ConstParm, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETraceTypeQuery                         TraceChannel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bTraceComplex                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ActorsToIgnore                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FHitResult                       OutHit                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                                    bIgnoreSelf                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPlacementActorTagTest::LineTraceByChannel(class AFortPlacementActor* PlacementActor, const struct FVector& Start, const struct FVector& End, ETraceTypeQuery TraceChannel, bool bTraceComplex, const TArray<class AActor*>& ActorsToIgnore, struct FHitResult* OutHit, bool bIgnoreSelf) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlacementActorTagTest", "LineTraceByChannel");

	Params::FortPlacementActorTagTest_LineTraceByChannel Parms{};

	Parms.PlacementActor = PlacementActor;
	Parms.Start = std::move(Start);
	Parms.End = std::move(End);
	Parms.TraceChannel = TraceChannel;
	Parms.bTraceComplex = bTraceComplex;
	Parms.ActorsToIgnore = std::move(ActorsToIgnore);
	Parms.bIgnoreSelf = bIgnoreSelf;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHit != nullptr)
		*OutHit = std::move(Parms.OutHit);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlacementActorTagTest.ShouldApplyTagsToPlacementActor
// (Native, Event, Public, HasOutParams, HasDefaults, BlueprintEvent, Const)
// Parameters:
// class AFortPlacementActor*              FocusPlacementActor                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          AveragePlacementActorLocation                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortPlacementActorTagTest::ShouldApplyTagsToPlacementActor(class AFortPlacementActor* FocusPlacementActor, const struct FVector& AveragePlacementActorLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlacementActorTagTest", "ShouldApplyTagsToPlacementActor");

	Params::FortPlacementActorTagTest_ShouldApplyTagsToPlacementActor Parms{};

	Parms.FocusPlacementActor = FocusPlacementActor;
	Parms.AveragePlacementActorLocation = std::move(AveragePlacementActorLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_CraftingTimeMultiplier
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_CraftingTimeMultiplier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_CraftingTimeMultiplier");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_CraftItemLevelBonusMax
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_CraftItemLevelBonusMax()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_CraftItemLevelBonusMax");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_CraftItemLevelBonusMin
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_CraftItemLevelBonusMin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_CraftItemLevelBonusMin");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_DoubleCraftChance
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_DoubleCraftChance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_DoubleCraftChance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_DoubleItemLootChance
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_DoubleItemLootChance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_DoubleItemLootChance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_DoubleLootRollChance
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_DoubleLootRollChance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_DoubleLootRollChance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_ExtraLives
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_ExtraLives()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_ExtraLives");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_Fortitude_Team
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_Fortitude_Team()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_Fortitude_Team");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_HarvestingTool
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_HarvestingTool()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_HarvestingTool");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_ItemMaxStack
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_ItemMaxStack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_ItemMaxStack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_ItemRegenCooldown
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_ItemRegenCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_ItemRegenCooldown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_ItemRegenMaxStack
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_ItemRegenMaxStack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_ItemRegenMaxStack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_MaxStamina
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_MaxStamina()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_MaxStamina");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_Offense_Team
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_Offense_Team()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_Offense_Team");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_Resistance_Team
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_Resistance_Team()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_Resistance_Team");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_ResourceHarvesting
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_ResourceHarvesting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_ResourceHarvesting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_ResurrectTeammateDuration
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_ResurrectTeammateDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_ResurrectTeammateDuration");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_SprintCost
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_SprintCost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_SprintCost");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_Stamina
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_Stamina()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_Stamina");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_StaminaCost
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_StaminaCost()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_StaminaCost");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_StaminaRegenDelay
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_StaminaRegenDelay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_StaminaRegenDelay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_StaminaRegenRate
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_StaminaRegenRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_StaminaRegenRate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerAttrSet.OnRep_Tech_Team
// (Final, Native, Public)

void UFortPlayerAttrSet::OnRep_Tech_Team()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerAttrSet", "OnRep_Tech_Team");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuestItemDefinitionTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestItemDefinitionTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinitionTooltip", "GetTextForToken");

	Params::FortQuestItemDefinitionTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItemDefinitionTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestItemDefinitionTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItemDefinitionTooltip", "GetTokenizedDescriptionText");

	Params::FortQuestItemDefinitionTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerControllerPvP.ClientReceiveKillNotification
// (Net, Native, Event, Public, NetClient)
// Parameters:
// class AFortPlayerStateZone*             Killer                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerStateZone*             Killed                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerPvP::ClientReceiveKillNotification(class AFortPlayerStateZone* Killer, class AFortPlayerStateZone* Killed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerPvP", "ClientReceiveKillNotification");

	Params::FortPlayerControllerPvP_ClientReceiveKillNotification Parms{};

	Parms.Killer = Killer;
	Parms.Killed = Killed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerPvP.ClientShowGameOverWidget
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// EFortPvPGameResult                      GameResult                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerPvP::ClientShowGameOverWidget(EFortPvPGameResult GameResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerPvP", "ClientShowGameOverWidget");

	Params::FortPlayerControllerPvP_ClientShowGameOverWidget Parms{};

	Parms.GameResult = GameResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerPvP.ServerAttemptSelectFOBCore
// (BlueprintAuthorityOnly, Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class ABuildingFOBConfigActor*          FOBToSelectOn                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortFOBCoreDecoItemDefinition*   DefToSelect                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerPvP::ServerAttemptSelectFOBCore(class ABuildingFOBConfigActor* FOBToSelectOn, class UFortFOBCoreDecoItemDefinition* DefToSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerPvP", "ServerAttemptSelectFOBCore");

	Params::FortPlayerControllerPvP_ServerAttemptSelectFOBCore Parms{};

	Parms.FOBToSelectOn = FOBToSelectOn;
	Parms.DefToSelect = DefToSelect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ClientBotStartDogpile
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// struct FVector                          DogpilePosition                                        (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::ClientBotStartDogpile(const struct FVector& DogpilePosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ClientBotStartDogpile");

	Params::FortPlayerControllerAthena_ClientBotStartDogpile Parms{};

	Parms.DogpilePosition = std::move(DogpilePosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ClientBotStopDogpile
// (Net, NetReliable, Native, Event, Public, NetClient)

void AFortPlayerControllerAthena::ClientBotStopDogpile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ClientBotStopDogpile");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ClientNotifyTeamWon
// (Net, NetReliable, Native, Event, Public, NetClient)

void AFortPlayerControllerAthena::ClientNotifyTeamWon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ClientNotifyTeamWon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ClientNotifyWon
// (Net, NetReliable, Native, Event, Public, NetClient)

void AFortPlayerControllerAthena::ClientNotifyWon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ClientNotifyWon");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ClientSendEndBattleRoyaleMatchForPlayer
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAthenaRewardResult              Result                                                 (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::ClientSendEndBattleRoyaleMatchForPlayer(bool bSuccess, const struct FAthenaRewardResult& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ClientSendEndBattleRoyaleMatchForPlayer");

	Params::FortPlayerControllerAthena_ClientSendEndBattleRoyaleMatchForPlayer Parms{};

	Parms.bSuccess = bSuccess;
	Parms.Result = std::move(Result);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ClientSendMatchStatsForPlayer
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// struct FAthenaMatchStats                Stats                                                  (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::ClientSendMatchStatsForPlayer(const struct FAthenaMatchStats& Stats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ClientSendMatchStatsForPlayer");

	Params::FortPlayerControllerAthena_ClientSendMatchStatsForPlayer Parms{};

	Parms.Stats = std::move(Stats);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ClientSendTeamStatsForPlayer
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// struct FAthenaMatchTeamStats            TeamStats                                              (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::ClientSendTeamStatsForPlayer(const struct FAthenaMatchTeamStats& TeamStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ClientSendTeamStatsForPlayer");

	Params::FortPlayerControllerAthena_ClientSendTeamStatsForPlayer Parms{};

	Parms.TeamStats = std::move(TeamStats);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ClientStreamOutBuildingFoundation
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class ABuildingFoundation*              FoundationActor                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::ClientStreamOutBuildingFoundation(class ABuildingFoundation* FoundationActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ClientStreamOutBuildingFoundation");

	Params::FortPlayerControllerAthena_ClientStreamOutBuildingFoundation Parms{};

	Parms.FoundationActor = FoundationActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ClientUnreliableSendMessage
// (Net, Native, Event, Public, NetClient)
// Parameters:
// class FText                             MESSAGE                                                (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::ClientUnreliableSendMessage(const class FText& MESSAGE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ClientUnreliableSendMessage");

	Params::FortPlayerControllerAthena_ClientUnreliableSendMessage Parms{};

	Parms.MESSAGE = std::move(MESSAGE);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ClientVoiceChat3DChannelJoin
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FString                           InVoiceChatPlayerName                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InVoiceChatChannel                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           JoinToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::ClientVoiceChat3DChannelJoin(const class FString& InVoiceChatPlayerName, const class FString& InVoiceChatChannel, const class FString& JoinToken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ClientVoiceChat3DChannelJoin");

	Params::FortPlayerControllerAthena_ClientVoiceChat3DChannelJoin Parms{};

	Parms.InVoiceChatPlayerName = std::move(InVoiceChatPlayerName);
	Parms.InVoiceChatChannel = std::move(InVoiceChatChannel);
	Parms.JoinToken = std::move(JoinToken);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ClientVoiceChatChannelJoin
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FString                           InVoiceChatPlayerName                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InVoiceChatChannel                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           JoinToken                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::ClientVoiceChatChannelJoin(const class FString& InVoiceChatPlayerName, const class FString& InVoiceChatChannel, const class FString& JoinToken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ClientVoiceChatChannelJoin");

	Params::FortPlayerControllerAthena_ClientVoiceChatChannelJoin Parms{};

	Parms.InVoiceChatPlayerName = std::move(InVoiceChatPlayerName);
	Parms.InVoiceChatChannel = std::move(InVoiceChatChannel);
	Parms.JoinToken = std::move(JoinToken);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ClientVoiceChatLogin
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FString                           InVoiceChatPlayerName                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           LoginToken                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::ClientVoiceChatLogin(const class FString& InVoiceChatPlayerName, const class FString& LoginToken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ClientVoiceChatLogin");

	Params::FortPlayerControllerAthena_ClientVoiceChatLogin Parms{};

	Parms.InVoiceChatPlayerName = std::move(InVoiceChatPlayerName);
	Parms.LoginToken = std::move(LoginToken);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.DumpSquadMemberState
// (Final, Exec, Native, Public)

void AFortPlayerControllerAthena::DumpSquadMemberState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "DumpSquadMemberState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.FollowNextTeammate
// (Final, Native, Protected, BlueprintCallable)

void AFortPlayerControllerAthena::FollowNextTeammate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "FollowNextTeammate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.FollowPreviousTeammate
// (Final, Native, Protected, BlueprintCallable)

void AFortPlayerControllerAthena::FollowPreviousTeammate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "FollowPreviousTeammate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.FullscreenMapCursorHorizontal
// (Final, Native, Protected)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::FullscreenMapCursorHorizontal(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "FullscreenMapCursorHorizontal");

	Params::FortPlayerControllerAthena_FullscreenMapCursorHorizontal Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.FullscreenMapCursorHorizontal_Gamepad
// (Final, Native, Protected)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::FullscreenMapCursorHorizontal_Gamepad(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "FullscreenMapCursorHorizontal_Gamepad");

	Params::FortPlayerControllerAthena_FullscreenMapCursorHorizontal_Gamepad Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.FullscreenMapCursorPlace
// (Final, Native, Protected)

void AFortPlayerControllerAthena::FullscreenMapCursorPlace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "FullscreenMapCursorPlace");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.FullscreenMapCursorRemove
// (Final, Native, Protected)

void AFortPlayerControllerAthena::FullscreenMapCursorRemove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "FullscreenMapCursorRemove");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.FullscreenMapCursorVertical
// (Final, Native, Protected)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::FullscreenMapCursorVertical(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "FullscreenMapCursorVertical");

	Params::FortPlayerControllerAthena_FullscreenMapCursorVertical Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.FullscreenMapCursorVertical_Gamepad
// (Final, Native, Protected)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::FullscreenMapCursorVertical_Gamepad(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "FullscreenMapCursorVertical_Gamepad");

	Params::FortPlayerControllerAthena_FullscreenMapCursorVertical_Gamepad Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.GetFPSForHUD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortPlayerControllerAthena::GetFPSForHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "GetFPSForHUD");

	Params::FortPlayerControllerAthena_GetFPSForHUD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerControllerAthena.GetMatchReport
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAthenaPlayerMatchReport*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAthenaPlayerMatchReport* AFortPlayerControllerAthena::GetMatchReport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "GetMatchReport");

	Params::FortPlayerControllerAthena_GetMatchReport Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerControllerAthena.GetSpectatingPlayerName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AFortPlayerControllerAthena::GetSpectatingPlayerName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "GetSpectatingPlayerName");

	Params::FortPlayerControllerAthena_GetSpectatingPlayerName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerControllerAthena.GetSquadDBNO
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<bool>                            DBNOStates                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::GetSquadDBNO(TArray<bool>* DBNOStates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "GetSquadDBNO");

	Params::FortPlayerControllerAthena_GetSquadDBNO Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (DBNOStates != nullptr)
		*DBNOStates = std::move(Parms.DBNOStates);
}


// Function FortniteGame.FortPlayerControllerAthena.GetSquadDead
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<bool>                            DeadStates                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::GetSquadDead(TArray<bool>* DeadStates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "GetSquadDead");

	Params::FortPlayerControllerAthena_GetSquadDead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (DeadStates != nullptr)
		*DeadStates = std::move(Parms.DeadStates);
}


// Function FortniteGame.FortPlayerControllerAthena.GetSquadHitPointFractions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<float>                           HealthFractions                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<float>                           ShieldFractions                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::GetSquadHitPointFractions(TArray<float>* HealthFractions, TArray<float>* ShieldFractions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "GetSquadHitPointFractions");

	Params::FortPlayerControllerAthena_GetSquadHitPointFractions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (HealthFractions != nullptr)
		*HealthFractions = std::move(Parms.HealthFractions);

	if (ShieldFractions != nullptr)
		*ShieldFractions = std::move(Parms.ShieldFractions);
}


// Function FortniteGame.FortPlayerControllerAthena.GetSquadKills
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<int32>                           Kills                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::GetSquadKills(TArray<int32>* Kills)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "GetSquadKills");

	Params::FortPlayerControllerAthena_GetSquadKills Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Kills != nullptr)
		*Kills = std::move(Parms.Kills);
}


// Function FortniteGame.FortPlayerControllerAthena.GetSquadMuted
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<bool>                            MutedStates                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::GetSquadMuted(TArray<bool>* MutedStates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "GetSquadMuted");

	Params::FortPlayerControllerAthena_GetSquadMuted Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MutedStates != nullptr)
		*MutedStates = std::move(Parms.MutedStates);
}


// Function FortniteGame.FortPlayerControllerAthena.GetSquadReviving
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<bool>                            RevivingStates                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::GetSquadReviving(TArray<bool>* RevivingStates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "GetSquadReviving");

	Params::FortPlayerControllerAthena_GetSquadReviving Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RevivingStates != nullptr)
		*RevivingStates = std::move(Parms.RevivingStates);
}


// Function FortniteGame.FortPlayerControllerAthena.GetSquadTalking
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<bool>                            TalkingStates                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::GetSquadTalking(TArray<bool>* TalkingStates)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "GetSquadTalking");

	Params::FortPlayerControllerAthena_GetSquadTalking Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TalkingStates != nullptr)
		*TalkingStates = std::move(Parms.TalkingStates);
}


// Function FortniteGame.FortPlayerControllerAthena.HighlightNumberReturned
// (Final, Native, Public)
// Parameters:
// int32                                   NumHighlights                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::HighlightNumberReturned(int32 NumHighlights)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "HighlightNumberReturned");

	Params::FortPlayerControllerAthena_HighlightNumberReturned Parms{};

	Parms.NumHighlights = NumHighlights;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.IsLocalPlayerFriendsWithSquadMember
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AFortPlayerState*                 SquadMember                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerControllerAthena::IsLocalPlayerFriendsWithSquadMember(class AFortPlayerState* SquadMember)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "IsLocalPlayerFriendsWithSquadMember");

	Params::FortPlayerControllerAthena_IsLocalPlayerFriendsWithSquadMember Parms{};

	Parms.SquadMember = SquadMember;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerControllerAthena.MultiKillExpired
// (Final, Native, Public)

void AFortPlayerControllerAthena::MultiKillExpired()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "MultiKillExpired");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.MutePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerState*                 PS                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::MutePlayer(class AFortPlayerState* PS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "MutePlayer");

	Params::FortPlayerControllerAthena_MutePlayer Parms{};

	Parms.PS = PS;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.OnRep_ViewTargetDBNO
// (Final, Native, Protected)

void AFortPlayerControllerAthena::OnRep_ViewTargetDBNO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "OnRep_ViewTargetDBNO");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.OnRep_ViewTargetHealth
// (Final, Native, Protected)

void AFortPlayerControllerAthena::OnRep_ViewTargetHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "OnRep_ViewTargetHealth");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.OnRep_ViewTargetShield
// (Final, Native, Protected)

void AFortPlayerControllerAthena::OnRep_ViewTargetShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "OnRep_ViewTargetShield");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.PlayWinEffects
// (Event, Public, BlueprintEvent)

void AFortPlayerControllerAthena::PlayWinEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "PlayWinEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortPlayerControllerAthena.ServerAttemptAircraftJump
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FRotator                         ClientRotation                                         (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::ServerAttemptAircraftJump(const struct FRotator& ClientRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ServerAttemptAircraftJump");

	Params::FortPlayerControllerAthena_ServerAttemptAircraftJump Parms{};

	Parms.ClientRotation = std::move(ClientRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ServerAttemptEnterExitCar
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFortPlayerControllerAthena::ServerAttemptEnterExitCar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ServerAttemptEnterExitCar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ServerDBNOReviveInterrupted
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AFortPlayerPawnAthena*            DBNOPawn                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::ServerDBNOReviveInterrupted(class AFortPlayerPawnAthena* DBNOPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ServerDBNOReviveInterrupted");

	Params::FortPlayerControllerAthena_ServerDBNOReviveInterrupted Parms{};

	Parms.DBNOPawn = DBNOPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ServerDBNOReviveStarted
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AFortPlayerPawnAthena*            DBNOPawn                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::ServerDBNOReviveStarted(class AFortPlayerPawnAthena* DBNOPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ServerDBNOReviveStarted");

	Params::FortPlayerControllerAthena_ServerDBNOReviveStarted Parms{};

	Parms.DBNOPawn = DBNOPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ServerFollowTeammate
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                                    bNext                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::ServerFollowTeammate(bool bNext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ServerFollowTeammate");

	Params::FortPlayerControllerAthena_ServerFollowTeammate Parms{};

	Parms.bNext = bNext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ServerGenerateMockMatchReport
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortPlayerControllerAthena::ServerGenerateMockMatchReport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ServerGenerateMockMatchReport");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ServerPlaceMapCursor
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantize              CursorPos                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::ServerPlaceMapCursor(const struct FVector_NetQuantize& CursorPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ServerPlaceMapCursor");

	Params::FortPlayerControllerAthena_ServerPlaceMapCursor Parms{};

	Parms.CursorPos = std::move(CursorPos);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ServerRemoveMapCursor
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFortPlayerControllerAthena::ServerRemoveMapCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ServerRemoveMapCursor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ServerSendSquadFriend
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class AFortPlayerStateAthena*           FriendInSquad                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::ServerSendSquadFriend(class AFortPlayerStateAthena* FriendInSquad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ServerSendSquadFriend");

	Params::FortPlayerControllerAthena_ServerSendSquadFriend Parms{};

	Parms.FriendInSquad = FriendInSquad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ServerVoiceChatReconnected
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortPlayerControllerAthena::ServerVoiceChatReconnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ServerVoiceChatReconnected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ServerVoiceChatRejoinChannel
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortPlayerControllerAthena::ServerVoiceChatRejoinChannel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ServerVoiceChatRejoinChannel");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.ShowHighlightSummary
// (Final, Native, Public, BlueprintCallable)

void AFortPlayerControllerAthena::ShowHighlightSummary()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "ShowHighlightSummary");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.SpawnCar
// (Final, Exec, Native, Public)
// Parameters:
// class FString                           Command                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::SpawnCar(const class FString& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "SpawnCar");

	Params::FortPlayerControllerAthena_SpawnCar Parms{};

	Parms.Command = std::move(Command);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.SpectateOnDeath
// (Final, Native, Protected)

void AFortPlayerControllerAthena::SpectateOnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "SpectateOnDeath");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.StopRecordingHighlights
// (Final, Native, Public)

void AFortPlayerControllerAthena::StopRecordingHighlights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "StopRecordingHighlights");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.UnMutePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerState*                 PS                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::UnMutePlayer(class AFortPlayerState* PS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "UnMutePlayer");

	Params::FortPlayerControllerAthena_UnMutePlayer Parms{};

	Parms.PS = PS;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.UpdateRichPresenceTimer
// (Final, Native, Protected)

void AFortPlayerControllerAthena::UpdateRichPresenceTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "UpdateRichPresenceTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.VoiceChatAllTalkingStopped
// (Final, Native, Public)

void AFortPlayerControllerAthena::VoiceChatAllTalkingStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "VoiceChatAllTalkingStopped");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.VoiceChatChannelJoinFailed
// (Final, Native, Public)

void AFortPlayerControllerAthena::VoiceChatChannelJoinFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "VoiceChatChannelJoinFailed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.VoiceChatReconnected
// (Final, Native, Public)

void AFortPlayerControllerAthena::VoiceChatReconnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "VoiceChatReconnected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.VoiceChatTalkingStateChanged
// (Final, Native, Public)
// Parameters:
// class FString                           PlayerName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsTalking                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerAthena::VoiceChatTalkingStateChanged(const class FString& PlayerName, bool bIsTalking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "VoiceChatTalkingStateChanged");

	Params::FortPlayerControllerAthena_VoiceChatTalkingStateChanged Parms{};

	Parms.PlayerName = std::move(PlayerName);
	Parms.bIsTalking = bIsTalking;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerAthena.CanFollowTeammate
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerControllerAthena::CanFollowTeammate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "CanFollowTeammate");

	Params::FortPlayerControllerAthena_CanFollowTeammate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerControllerAthena.GetRevertPlayerListenerChangeFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerControllerAthena::GetRevertPlayerListenerChangeFlag() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "GetRevertPlayerListenerChangeFlag");

	Params::FortPlayerControllerAthena_GetRevertPlayerListenerChangeFlag Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerControllerAthena.IsInAircraft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerControllerAthena::IsInAircraft() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerAthena", "IsInAircraft");

	Params::FortPlayerControllerAthena_IsInAircraft Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerControllerDeployableBase.ClientOnHordeTierComplete
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// EFortCompletionResult                   Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerDeployableBase::ClientOnHordeTierComplete(EFortCompletionResult Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerDeployableBase", "ClientOnHordeTierComplete");

	Params::FortPlayerControllerDeployableBase_ClientOnHordeTierComplete Parms{};

	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerDeployableBase.ClientOnHordeTierInitialized
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<struct FItemAndCount>            Items                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerControllerDeployableBase::ClientOnHordeTierInitialized(const TArray<struct FItemAndCount>& Items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerDeployableBase", "ClientOnHordeTierInitialized");

	Params::FortPlayerControllerDeployableBase_ClientOnHordeTierInitialized Parms{};

	Parms.Items = std::move(Items);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerDeployableBase.ClientOnHordeWaveComplete
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int32                                   Wave                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FItemAndCount>            Rewards                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerControllerDeployableBase::ClientOnHordeWaveComplete(const int32 Wave, const TArray<struct FItemAndCount>& Rewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerDeployableBase", "ClientOnHordeWaveComplete");

	Params::FortPlayerControllerDeployableBase_ClientOnHordeWaveComplete Parms{};

	Parms.Wave = Wave;
	Parms.Rewards = std::move(Rewards);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerDeployableBase.MoveAllItemsFromDeployableBase
// (Final, Native, Public, BlueprintCallable)

void AFortPlayerControllerDeployableBase::MoveAllItemsFromDeployableBase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerDeployableBase", "MoveAllItemsFromDeployableBase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerDeployableBase.MoveAllItemsToDeployableBase
// (Final, Native, Public, BlueprintCallable)

void AFortPlayerControllerDeployableBase::MoveAllItemsToDeployableBase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerDeployableBase", "MoveAllItemsToDeployableBase");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerDeployableBase.MoveItemFromDeployableBase
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                            ItemOnPlot                                             (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerDeployableBase::MoveItemFromDeployableBase(const struct FGuid& ItemOnPlot, const int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerDeployableBase", "MoveItemFromDeployableBase");

	Params::FortPlayerControllerDeployableBase_MoveItemFromDeployableBase Parms{};

	Parms.ItemOnPlot = std::move(ItemOnPlot);
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerDeployableBase.MoveItemToDeployableBase
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FGuid                            ItemOnPlayer                                           (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerDeployableBase::MoveItemToDeployableBase(const struct FGuid& ItemOnPlayer, const int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerDeployableBase", "MoveItemToDeployableBase");

	Params::FortPlayerControllerDeployableBase_MoveItemToDeployableBase Parms{};

	Parms.ItemOnPlayer = std::move(ItemOnPlayer);
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerDeployableBase.ServerMoveAllItemsFromDeployableBase
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class ADeployableBasePlot*              ExpectedPlot                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerDeployableBase::ServerMoveAllItemsFromDeployableBase(const class ADeployableBasePlot* ExpectedPlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerDeployableBase", "ServerMoveAllItemsFromDeployableBase");

	Params::FortPlayerControllerDeployableBase_ServerMoveAllItemsFromDeployableBase Parms{};

	Parms.ExpectedPlot = ExpectedPlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerDeployableBase.ServerMoveAllItemsToDeployableBase
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class ADeployableBasePlot*              ExpectedPlot                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerDeployableBase::ServerMoveAllItemsToDeployableBase(const class ADeployableBasePlot* ExpectedPlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerDeployableBase", "ServerMoveAllItemsToDeployableBase");

	Params::FortPlayerControllerDeployableBase_ServerMoveAllItemsToDeployableBase Parms{};

	Parms.ExpectedPlot = ExpectedPlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerDeployableBase.ServerMoveItemFromDeployableBase
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FGuid                            ItemOnPlot                                             (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADeployableBasePlot*              ExpectedPlot                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerDeployableBase::ServerMoveItemFromDeployableBase(const struct FGuid& ItemOnPlot, const int32 Count, const class ADeployableBasePlot* ExpectedPlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerDeployableBase", "ServerMoveItemFromDeployableBase");

	Params::FortPlayerControllerDeployableBase_ServerMoveItemFromDeployableBase Parms{};

	Parms.ItemOnPlot = std::move(ItemOnPlot);
	Parms.Count = Count;
	Parms.ExpectedPlot = ExpectedPlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerDeployableBase.ServerMoveItemToDeployableBase
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FGuid                            ItemOnPlayer                                           (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADeployableBasePlot*              ExpectedPlot                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerDeployableBase::ServerMoveItemToDeployableBase(const struct FGuid& ItemOnPlayer, const int32 Count, const class ADeployableBasePlot* ExpectedPlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerDeployableBase", "ServerMoveItemToDeployableBase");

	Params::FortPlayerControllerDeployableBase_ServerMoveItemToDeployableBase Parms{};

	Parms.ItemOnPlayer = std::move(ItemOnPlayer);
	Parms.Count = Count;
	Parms.ExpectedPlot = ExpectedPlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerFOB.ServerAttemptSelectFOBCore
// (BlueprintAuthorityOnly, Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class ABuildingFOBConfigActor*          FOBToSelectOn                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortFOBCoreDecoItemDefinition*   DefToSelect                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerFOB::ServerAttemptSelectFOBCore(class ABuildingFOBConfigActor* FOBToSelectOn, class UFortFOBCoreDecoItemDefinition* DefToSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerFOB", "ServerAttemptSelectFOBCore");

	Params::FortPlayerControllerFOB_ServerAttemptSelectFOBCore Parms{};

	Parms.FOBToSelectOn = FOBToSelectOn;
	Parms.DefToSelect = DefToSelect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerFOB.ServerReloadFOB
// (BlueprintAuthorityOnly, Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class ABuildingFOBConfigActor*          FOBToReload                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerFOB::ServerReloadFOB(class ABuildingFOBConfigActor* FOBToReload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerFOB", "ServerReloadFOB");

	Params::FortPlayerControllerFOB_ServerReloadFOB Parms{};

	Parms.FOBToReload = FOBToReload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerFOB.ServerResetFOB
// (BlueprintAuthorityOnly, Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class ABuildingFOBConfigActor*          FOBToReset                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerFOB::ServerResetFOB(class ABuildingFOBConfigActor* FOBToReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerFOB", "ServerResetFOB");

	Params::FortPlayerControllerFOB_ServerResetFOB Parms{};

	Parms.FOBToReset = FOBToReset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerFOB.ServerSaveFOB
// (BlueprintAuthorityOnly, Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class ABuildingFOBConfigActor*          FOBToSave                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerFOB::ServerSaveFOB(class ABuildingFOBConfigActor* FOBToSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerFOB", "ServerSaveFOB");

	Params::FortPlayerControllerFOB_ServerSaveFOB Parms{};

	Parms.FOBToSave = FOBToSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerKeep.ClientSetPermaniteAvailability
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// bool                                    bAvailable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerKeep::ClientSetPermaniteAvailability(bool bAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerKeep", "ClientSetPermaniteAvailability");

	Params::FortPlayerControllerKeep_ClientSetPermaniteAvailability Parms{};

	Parms.bAvailable = bAvailable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerKeep.ClientUnloadFoundations
// (Net, NetReliable, Native, Event, Public, NetClient)

void AFortPlayerControllerKeep::ClientUnloadFoundations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerKeep", "ClientUnloadFoundations");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerKeep.DumpItemData
// (Final, Exec, Native, Public)

void AFortPlayerControllerKeep::DumpItemData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerKeep", "DumpItemData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerKeep.ResetContainers
// (Final, Exec, Native, Public)

void AFortPlayerControllerKeep::ResetContainers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerKeep", "ResetContainers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerKeep.RestoreContainers
// (Final, Exec, Native, Public)

void AFortPlayerControllerKeep::RestoreContainers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerKeep", "RestoreContainers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerKeep.SetPermaniteAvailability
// (Final, Exec, Native, Public)
// Parameters:
// bool                                    bAvailable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerKeep::SetPermaniteAvailability(bool bAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerKeep", "SetPermaniteAvailability");

	Params::FortPlayerControllerKeep_SetPermaniteAvailability Parms{};

	Parms.bAvailable = bAvailable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerKeep.StreamInStuff
// (Final, Exec, Native, Public)

void AFortPlayerControllerKeep::StreamInStuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerKeep", "StreamInStuff");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerKeep.StreamOutStuff
// (Final, Exec, Native, Public)

void AFortPlayerControllerKeep::StreamOutStuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerKeep", "StreamOutStuff");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.ClientOnBuildingLevelChanged
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// class UFortOutpostItemDefinition*       UpgradedBuilding                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InLevelBeforeUpgrade                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerOutpost::ClientOnBuildingLevelChanged(class UFortOutpostItemDefinition* UpgradedBuilding, int32 InLevelBeforeUpgrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "ClientOnBuildingLevelChanged");

	Params::FortPlayerControllerOutpost_ClientOnBuildingLevelChanged Parms{};

	Parms.UpgradedBuilding = UpgradedBuilding;
	Parms.InLevelBeforeUpgrade = InLevelBeforeUpgrade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.ClientOnOutpostRefundOccurred
// (Net, NetReliable, Native, Event, Public, NetClient)

void AFortPlayerControllerOutpost::ClientOnOutpostRefundOccurred()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "ClientOnOutpostRefundOccurred");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.DumpInventory
// (Final, Exec, Native, Public)

void AFortPlayerControllerOutpost::DumpInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "DumpInventory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.OnRep_DisintegrationStartTime
// (Final, Native, Protected)

void AFortPlayerControllerOutpost::OnRep_DisintegrationStartTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "OnRep_DisintegrationStartTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.OnRep_PostDepositedResources
// (Final, Native, Protected)

void AFortPlayerControllerOutpost::OnRep_PostDepositedResources()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "OnRep_PostDepositedResources");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.OnRep_QuantumGooCompleted
// (Final, Native, Protected)

void AFortPlayerControllerOutpost::OnRep_QuantumGooCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "OnRep_QuantumGooCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.OnRep_QuantumGooIncoming
// (Final, Native, Protected)

void AFortPlayerControllerOutpost::OnRep_QuantumGooIncoming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "OnRep_QuantumGooIncoming");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.ServerAbortDisintegration
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortPlayerControllerOutpost::ServerAbortDisintegration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "ServerAbortDisintegration");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.ServerActivateCraftingTable
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void AFortPlayerControllerOutpost::ServerActivateCraftingTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "ServerActivateCraftingTable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.ServerDeactivateCraftingTable
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)

void AFortPlayerControllerOutpost::ServerDeactivateCraftingTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "ServerDeactivateCraftingTable");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.ServerDepositPOSTResource
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FGuid                            ItemGuid                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerOutpost::ServerDepositPOSTResource(const struct FGuid& ItemGuid, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "ServerDepositPOSTResource");

	Params::FortPlayerControllerOutpost_ServerDepositPOSTResource Parms{};

	Parms.ItemGuid = std::move(ItemGuid);
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.ServerDisintegrateItem
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FGuid                            ItemGuid                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerOutpost::ServerDisintegrateItem(const struct FGuid& ItemGuid, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "ServerDisintegrateItem");

	Params::FortPlayerControllerOutpost_ServerDisintegrateItem Parms{};

	Parms.ItemGuid = std::move(ItemGuid);
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.ServerFabricateItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class UFortWorldItemDefinition*         ItemDef                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerOutpost::ServerFabricateItem(const class UFortWorldItemDefinition* ItemDef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "ServerFabricateItem");

	Params::FortPlayerControllerOutpost_ServerFabricateItem Parms{};

	Parms.ItemDef = ItemDef;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.ServerLeaveOutpostAsParty
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortPlayerControllerOutpost::ServerLeaveOutpostAsParty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "ServerLeaveOutpostAsParty");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.ServerMoveItemFromStorageVault
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FFortItemEntry                   NewlyCollectedItem                                     (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerControllerOutpost::ServerMoveItemFromStorageVault(const struct FFortItemEntry& NewlyCollectedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "ServerMoveItemFromStorageVault");

	Params::FortPlayerControllerOutpost_ServerMoveItemFromStorageVault Parms{};

	Parms.NewlyCollectedItem = std::move(NewlyCollectedItem);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.ServerMoveItemToStorageVault
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FFortItemEntry                   NewlyStoredItem                                        (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerControllerOutpost::ServerMoveItemToStorageVault(const struct FFortItemEntry& NewlyStoredItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "ServerMoveItemToStorageVault");

	Params::FortPlayerControllerOutpost_ServerMoveItemToStorageVault Parms{};

	Parms.NewlyStoredItem = std::move(NewlyStoredItem);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.ServerNotifyPendingFabricationCompleted
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)

void AFortPlayerControllerOutpost::ServerNotifyPendingFabricationCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "ServerNotifyPendingFabricationCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.ServerUpgradeBuilding
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UFortOutpostItemDefinition*       BuildingToUpgrade                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerOutpost::ServerUpgradeBuilding(class UFortOutpostItemDefinition* BuildingToUpgrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "ServerUpgradeBuilding");

	Params::FortPlayerControllerOutpost_ServerUpgradeBuilding Parms{};

	Parms.BuildingToUpgrade = BuildingToUpgrade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.ServerUpgradePOST
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortPlayerControllerOutpost::ServerUpgradePOST()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "ServerUpgradePOST");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.ToggleOwnerInPIE
// (Final, Exec, Native, Private)

void AFortPlayerControllerOutpost::ToggleOwnerInPIE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "ToggleOwnerInPIE");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.UpgradeBuilding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOutpostBuildings                       OutpostBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerOutpost::UpgradeBuilding(EOutpostBuildings OutpostBuilding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "UpgradeBuilding");

	Params::FortPlayerControllerOutpost_UpgradeBuilding Parms{};

	Parms.OutpostBuilding = OutpostBuilding;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.UpgradeBuildingByDefinition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortOutpostItemDefinition*       OutpostBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerControllerOutpost::UpgradeBuildingByDefinition(class UFortOutpostItemDefinition* OutpostBuilding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "UpgradeBuildingByDefinition");

	Params::FortPlayerControllerOutpost_UpgradeBuildingByDefinition Parms{};

	Parms.OutpostBuilding = OutpostBuilding;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerControllerOutpost.CanUpgradeBuilding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOutpostBuildings                       OutpostBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLog                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerControllerOutpost::CanUpgradeBuilding(EOutpostBuildings OutpostBuilding, bool bLog) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "CanUpgradeBuilding");

	Params::FortPlayerControllerOutpost_CanUpgradeBuilding Parms{};

	Parms.OutpostBuilding = OutpostBuilding;
	Parms.bLog = bLog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerControllerOutpost.CanUpgradeBuildingFromDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortOutpostItemDefinition*       OutpostBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLog                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerControllerOutpost::CanUpgradeBuildingFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding, bool bLog) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "CanUpgradeBuildingFromDefinition");

	Params::FortPlayerControllerOutpost_CanUpgradeBuildingFromDefinition Parms{};

	Parms.OutpostBuilding = OutpostBuilding;
	Parms.bLog = bLog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerControllerOutpost.GetBuildingLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOutpostBuildings                       OutpostBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortPlayerControllerOutpost::GetBuildingLevel(EOutpostBuildings OutpostBuilding) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "GetBuildingLevel");

	Params::FortPlayerControllerOutpost_GetBuildingLevel Parms{};

	Parms.OutpostBuilding = OutpostBuilding;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerControllerOutpost.GetBuildingLevelFromDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortOutpostItemDefinition*       OutpostBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortPlayerControllerOutpost::GetBuildingLevelFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "GetBuildingLevelFromDefinition");

	Params::FortPlayerControllerOutpost_GetBuildingLevelFromDefinition Parms{};

	Parms.OutpostBuilding = OutpostBuilding;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerControllerOutpost.GetBuildingMaxLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOutpostBuildings                       OutpostBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortPlayerControllerOutpost::GetBuildingMaxLevel(EOutpostBuildings OutpostBuilding) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "GetBuildingMaxLevel");

	Params::FortPlayerControllerOutpost_GetBuildingMaxLevel Parms{};

	Parms.OutpostBuilding = OutpostBuilding;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerControllerOutpost.GetBuildingMaxLevelFromDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortOutpostItemDefinition*       OutpostBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortPlayerControllerOutpost::GetBuildingMaxLevelFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "GetBuildingMaxLevelFromDefinition");

	Params::FortPlayerControllerOutpost_GetBuildingMaxLevelFromDefinition Parms{};

	Parms.OutpostBuilding = OutpostBuilding;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerControllerOutpost.GetBuildingUpgradeCost
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOutpostBuildings                       OutpostBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortItemQuantityPair>    OutWorldItems                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FFortItemQuantityPair>    OutAccountItems                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortPlayerControllerOutpost::GetBuildingUpgradeCost(EOutpostBuildings OutpostBuilding, TArray<struct FFortItemQuantityPair>* OutWorldItems, TArray<struct FFortItemQuantityPair>* OutAccountItems) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "GetBuildingUpgradeCost");

	Params::FortPlayerControllerOutpost_GetBuildingUpgradeCost Parms{};

	Parms.OutpostBuilding = OutpostBuilding;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWorldItems != nullptr)
		*OutWorldItems = std::move(Parms.OutWorldItems);

	if (OutAccountItems != nullptr)
		*OutAccountItems = std::move(Parms.OutAccountItems);
}


// Function FortniteGame.FortPlayerControllerOutpost.GetBuildingUpgradeCostFromDefinition
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortOutpostItemDefinition*       OutpostBuilding                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortItemQuantityPair>    OutWorldItems                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FFortItemQuantityPair>    OutAccountItems                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortPlayerControllerOutpost::GetBuildingUpgradeCostFromDefinition(class UFortOutpostItemDefinition* OutpostBuilding, TArray<struct FFortItemQuantityPair>* OutWorldItems, TArray<struct FFortItemQuantityPair>* OutAccountItems) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "GetBuildingUpgradeCostFromDefinition");

	Params::FortPlayerControllerOutpost_GetBuildingUpgradeCostFromDefinition Parms{};

	Parms.OutpostBuilding = OutpostBuilding;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutWorldItems != nullptr)
		*OutWorldItems = std::move(Parms.OutWorldItems);

	if (OutAccountItems != nullptr)
		*OutAccountItems = std::move(Parms.OutAccountItems);
}


// Function FortniteGame.FortPlayerControllerOutpost.GetOutpostCoreLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortPlayerControllerOutpost::GetOutpostCoreLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "GetOutpostCoreLevel");

	Params::FortPlayerControllerOutpost_GetOutpostCoreLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerControllerOutpost.GetPendingFabricationProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortPlayerControllerOutpost::GetPendingFabricationProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "GetPendingFabricationProgress");

	Params::FortPlayerControllerOutpost_GetPendingFabricationProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerControllerOutpost.GetPendingItemToFabricate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortWorldItemDefinition*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortWorldItemDefinition* AFortPlayerControllerOutpost::GetPendingItemToFabricate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "GetPendingItemToFabricate");

	Params::FortPlayerControllerOutpost_GetPendingItemToFabricate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerControllerOutpost.IsFabricationPending
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerControllerOutpost::IsFabricationPending() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "IsFabricationPending");

	Params::FortPlayerControllerOutpost_IsFabricationPending Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerControllerOutpost.IsOutpostOwner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerControllerOutpost::IsOutpostOwner() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerControllerOutpost", "IsOutpostOwner");

	Params::FortPlayerControllerOutpost_IsOutpostOwner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerMannequin.CyclePartBP
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortCustomPartType                     Part                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNextPart                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerMannequin::CyclePartBP(EFortCustomPartType Part, bool bNextPart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerMannequin", "CyclePartBP");

	Params::FortPlayerMannequin_CyclePartBP Parms{};

	Parms.Part = Part;
	Parms.bNextPart = bNextPart;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerMannequin.GetAllPartSkeletalMeshComponents
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class USkeletalMeshComponent*>   SkeletalMeshComponents                                 (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortPlayerMannequin::GetAllPartSkeletalMeshComponents(TArray<class USkeletalMeshComponent*>* SkeletalMeshComponents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerMannequin", "GetAllPartSkeletalMeshComponents");

	Params::FortPlayerMannequin_GetAllPartSkeletalMeshComponents Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SkeletalMeshComponents != nullptr)
		*SkeletalMeshComponents = std::move(Parms.SkeletalMeshComponents);
}


// Function FortniteGame.FortPlayerMannequin.RemovePart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortCustomPartType                     Part                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerMannequin::RemovePart(EFortCustomPartType Part)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerMannequin", "RemovePart");

	Params::FortPlayerMannequin_RemovePart Parms{};

	Parms.Part = Part;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerMannequin.SetHeroType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFortHeroType*                    NewHeroType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerMannequin::SetHeroType(class UFortHeroType* NewHeroType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerMannequin", "SetHeroType");

	Params::FortPlayerMannequin_SetHeroType Parms{};

	Parms.NewHeroType = NewHeroType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerMannequin.SetPart
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFortCustomPartType                     Part                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCustomCharacterPart*             PartAsset                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerMannequin::SetPart(EFortCustomPartType Part, class UCustomCharacterPart* PartAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerMannequin", "SetPart");

	Params::FortPlayerMannequin_SetPart Parms{};

	Parms.Part = Part;
	Parms.PartAsset = PartAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerMannequin.SetSkeletalMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMesh*                    SkeletalMesh                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerMannequin::SetSkeletalMesh(class USkeletalMesh* SkeletalMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerMannequin", "SetSkeletalMesh");

	Params::FortPlayerMannequin_SetSkeletalMesh Parms{};

	Parms.SkeletalMesh = SkeletalMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerMannequin.SetWeaponSkeletalMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMesh*                    SkeletalMesh                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerMannequin::SetWeaponSkeletalMesh(class USkeletalMesh* SkeletalMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerMannequin", "SetWeaponSkeletalMesh");

	Params::FortPlayerMannequin_SetWeaponSkeletalMesh Parms{};

	Parms.SkeletalMesh = SkeletalMesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerMannequin.ToggleGenderBP
// (Final, Native, Public, BlueprintCallable)

void AFortPlayerMannequin::ToggleGenderBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerMannequin", "ToggleGenderBP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerMannequin.UpdateMorphTargets
// (Native, Protected)

void AFortPlayerMannequin::UpdateMorphTargets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerMannequin", "UpdateMorphTargets");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerMannequin.GetGender
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortCustomGender                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortCustomGender AFortPlayerMannequin::GetGender() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerMannequin", "GetGender");

	Params::FortPlayerMannequin_GetGender Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerMannequin.GetPartSkeletalMeshComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortCustomPartType                     Part                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AFortPlayerMannequin::GetPartSkeletalMeshComponent(EFortCustomPartType Part) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerMannequin", "GetPartSkeletalMeshComponent");

	Params::FortPlayerMannequin_GetPartSkeletalMeshComponent Parms{};

	Parms.Part = Part;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawn.AddAttachment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USkeletalMesh*                    Attachment                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::AddAttachment(class USkeletalMesh* Attachment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "AddAttachment");

	Params::FortPlayerPawn_AddAttachment Parms{};

	Parms.Attachment = Attachment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.AnimTrailsDisable
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AFortPlayerPawn::AnimTrailsDisable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "AnimTrailsDisable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortPlayerPawn.AnimTrailsNotify
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::AnimTrailsNotify(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "AnimTrailsNotify");

	Params::FortPlayerPawn_AnimTrailsNotify Parms{};

	Parms.bActive = bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortPlayerPawn.AnimTrailsSetup
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UParticleSystem*                  ParticleSystemReference                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             FirstSocketName                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SecondSocketName                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Width                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::AnimTrailsSetup(class UParticleSystem* ParticleSystemReference, class FName FirstSocketName, class FName SecondSocketName, float Width)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "AnimTrailsSetup");

	Params::FortPlayerPawn_AnimTrailsSetup Parms{};

	Parms.ParticleSystemReference = ParticleSystemReference;
	Parms.FirstSocketName = FirstSocketName;
	Parms.SecondSocketName = SecondSocketName;
	Parms.Width = Width;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortPlayerPawn.CanPredictJumpApex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerPawn::CanPredictJumpApex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "CanPredictJumpApex");

	Params::FortPlayerPawn_CanPredictJumpApex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawn.ClientNotifyAbilityFailed
// (Net, Native, Event, Public, NetClient)
// Parameters:
// class UGameplayAbility*                 FailedAbility                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            FailedReason                                           (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerPawn::ClientNotifyAbilityFailed(const class UGameplayAbility* FailedAbility, const struct FGameplayTagContainer& FailedReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "ClientNotifyAbilityFailed");

	Params::FortPlayerPawn_ClientNotifyAbilityFailed Parms{};

	Parms.FailedAbility = FailedAbility;
	Parms.FailedReason = std::move(FailedReason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.HandleInStasis
// (Final, Native, Public)

void AFortPlayerPawn::HandleInStasis()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "HandleInStasis");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.InternalServerSetTargeting
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                                    bNewTargeting                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::InternalServerSetTargeting(bool bNewTargeting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "InternalServerSetTargeting");

	Params::FortPlayerPawn_InternalServerSetTargeting Parms{};

	Parms.bNewTargeting = bNewTargeting;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.OnCharacterPartsReinitialized
// (Event, Protected, BlueprintEvent)

void AFortPlayerPawn::OnCharacterPartsReinitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "OnCharacterPartsReinitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortPlayerPawn.OnRep_AccelerationPack
// (Final, Native, Public)

void AFortPlayerPawn::OnRep_AccelerationPack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "OnRep_AccelerationPack");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.OnRep_AnimTrailDisableFlashCount
// (Final, Native, Public)

void AFortPlayerPawn::OnRep_AnimTrailDisableFlashCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "OnRep_AnimTrailDisableFlashCount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.OnRep_AttachmentMesh
// (Final, Native, Private)

void AFortPlayerPawn::OnRep_AttachmentMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "OnRep_AttachmentMesh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.OnRep_CharPartAnimMontageInfo
// (Final, Native, Private)

void AFortPlayerPawn::OnRep_CharPartAnimMontageInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "OnRep_CharPartAnimMontageInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.OnRep_IsDBNO
// (Native, Protected)

void AFortPlayerPawn::OnRep_IsDBNO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "OnRep_IsDBNO");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.OnRep_IsTargeting
// (Final, Native, Private)

void AFortPlayerPawn::OnRep_IsTargeting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "OnRep_IsTargeting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.RandomizeCharacter
// (Final, Exec, Native, Private)
// Parameters:
// class FString                           GenderString                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::RandomizeCharacter(const class FString& GenderString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "RandomizeCharacter");

	Params::FortPlayerPawn_RandomizeCharacter Parms{};

	Parms.GenderString = std::move(GenderString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.RemoveAttachment
// (Final, Native, Public, BlueprintCallable)

void AFortPlayerPawn::RemoveAttachment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "RemoveAttachment");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.ReviveFromDBNO
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AController*                      EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::ReviveFromDBNO(class AController* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "ReviveFromDBNO");

	Params::FortPlayerPawn_ReviveFromDBNO Parms{};

	Parms.EventInstigator = EventInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.ServerChooseGender
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EFortCustomGender                       Gender                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::ServerChooseGender(EFortCustomGender Gender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "ServerChooseGender");

	Params::FortPlayerPawn_ServerChooseGender Parms{};

	Parms.Gender = Gender;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.ServerChoosePart
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EFortCustomPartType                     Part                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCustomCharacterPart*             ChosenCharacterPart                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::ServerChoosePart(EFortCustomPartType Part, class UCustomCharacterPart* ChosenCharacterPart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "ServerChoosePart");

	Params::FortPlayerPawn_ServerChoosePart Parms{};

	Parms.Part = Part;
	Parms.ChosenCharacterPart = ChosenCharacterPart;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.ServerCycleAccessoryColorSwatch
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EFortCustomPartType                     Part                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNext                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::ServerCycleAccessoryColorSwatch(EFortCustomPartType Part, bool bNext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "ServerCycleAccessoryColorSwatch");

	Params::FortPlayerPawn_ServerCycleAccessoryColorSwatch Parms{};

	Parms.Part = Part;
	Parms.bNext = bNext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.ServerCycleColorSwatch
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EColorSwatchType                        SwatchType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNext                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::ServerCycleColorSwatch(EColorSwatchType SwatchType, bool bNext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "ServerCycleColorSwatch");

	Params::FortPlayerPawn_ServerCycleColorSwatch Parms{};

	Parms.SwatchType = SwatchType;
	Parms.bNext = bNext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.ServerCyclePart
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EFortCustomPartType                     Part                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNextPart                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::ServerCyclePart(EFortCustomPartType Part, bool bNextPart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "ServerCyclePart");

	Params::FortPlayerPawn_ServerCyclePart Parms{};

	Parms.Part = Part;
	Parms.bNextPart = bNextPart;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.ServerHandlePickup
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// class AFortPickup*                      Pickup                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InFlyTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InStartDirection                                       (ConstParm, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPlayPickupSound                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::ServerHandlePickup(class AFortPickup* Pickup, float InFlyTime, const struct FVector& InStartDirection, bool bPlayPickupSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "ServerHandlePickup");

	Params::FortPlayerPawn_ServerHandlePickup Parms{};

	Parms.Pickup = Pickup;
	Parms.InFlyTime = InFlyTime;
	Parms.InStartDirection = std::move(InStartDirection);
	Parms.bPlayPickupSound = bPlayPickupSound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.ServerPlayUnableToPerformActionMontage
// (Net, Native, Event, Public, NetServer, NetValidate)

void AFortPlayerPawn::ServerPlayUnableToPerformActionMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "ServerPlayUnableToPerformActionMontage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.ServerRespawnFromDBNO
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortPlayerPawn::ServerRespawnFromDBNO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "ServerRespawnFromDBNO");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.ServerReviveFromDBNO
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AController*                      EventInstigator                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::ServerReviveFromDBNO(class AController* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "ServerReviveFromDBNO");

	Params::FortPlayerPawn_ServerReviveFromDBNO Parms{};

	Parms.EventInstigator = EventInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.ServerRootMotionInterruptNotifyStopMontage
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class UAnimMontage*                     MontageToStop                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::ServerRootMotionInterruptNotifyStopMontage(class UAnimMontage* MontageToStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "ServerRootMotionInterruptNotifyStopMontage");

	Params::FortPlayerPawn_ServerRootMotionInterruptNotifyStopMontage Parms{};

	Parms.MontageToStop = MontageToStop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.ServerSendAimbotDetectionStatus
// (Final, Net, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// TArray<uint8>                           Payload                                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AFortPlayerPawn::ServerSendAimbotDetectionStatus(const TArray<uint8>& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "ServerSendAimbotDetectionStatus");

	Params::FortPlayerPawn_ServerSendAimbotDetectionStatus Parms{};

	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.ServerSetAimbotDetection
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                                    bEnableDetection                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::ServerSetAimbotDetection(bool bEnableDetection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "ServerSetAimbotDetection");

	Params::FortPlayerPawn_ServerSetAimbotDetection Parms{};

	Parms.bEnableDetection = bEnableDetection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.ServerSetAttachment
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class USkeletalMesh*                    Attachment                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::ServerSetAttachment(class USkeletalMesh* Attachment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "ServerSetAttachment");

	Params::FortPlayerPawn_ServerSetAttachment Parms{};

	Parms.Attachment = Attachment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.ServerToggleBodyType
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortPlayerPawn::ServerToggleBodyType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "ServerToggleBodyType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.ServerToggleGender
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)

void AFortPlayerPawn::ServerToggleGender()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "ServerToggleGender");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.SetFirstPersonCamera
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bNewUseFirstPersonCamera                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::SetFirstPersonCamera(bool bNewUseFirstPersonCamera)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "SetFirstPersonCamera");

	Params::FortPlayerPawn_SetFirstPersonCamera Parms{};

	Parms.bNewUseFirstPersonCamera = bNewUseFirstPersonCamera;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortPlayerPawn.SetHomeActor
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           NewActor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::SetHomeActor(class AActor* NewActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "SetHomeActor");

	Params::FortPlayerPawn_SetHomeActor Parms{};

	Parms.NewActor = NewActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.SetStasisMode
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// EFortPawnStasisMode                     InStasisMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::SetStasisMode(EFortPawnStasisMode InStasisMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "SetStasisMode");

	Params::FortPlayerPawn_SetStasisMode Parms{};

	Parms.InStasisMode = InStasisMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.SwitchToNextPart
// (Final, Exec, Native, Private)
// Parameters:
// class FString                           PartName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::SwitchToNextPart(const class FString& PartName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "SwitchToNextPart");

	Params::FortPlayerPawn_SwitchToNextPart Parms{};

	Parms.PartName = std::move(PartName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.SwitchToPreviousPart
// (Final, Exec, Native, Private)
// Parameters:
// class FString                           PartName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::SwitchToPreviousPart(const class FString& PartName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "SwitchToPreviousPart");

	Params::FortPlayerPawn_SwitchToPreviousPart Parms{};

	Parms.PartName = std::move(PartName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.ToggleBodyType
// (Final, Exec, Native, Public)

void AFortPlayerPawn::ToggleBodyType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "ToggleBodyType");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.ToggleGender
// (Final, Exec, Native, Public)

void AFortPlayerPawn::ToggleGender()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "ToggleGender");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.UpdateAimbotDetectionStatus
// (Final, Native, Private)

void AFortPlayerPawn::UpdateAimbotDetectionStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "UpdateAimbotDetectionStatus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.GetCharacterBodyType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortCustomBodyType                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortCustomBodyType AFortPlayerPawn::GetCharacterBodyType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "GetCharacterBodyType");

	Params::FortPlayerPawn_GetCharacterBodyType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawn.GetCharacterGender
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortCustomGender                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortCustomGender AFortPlayerPawn::GetCharacterGender() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "GetCharacterGender");

	Params::FortPlayerPawn_GetCharacterGender Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawn.GetExtraLives
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortPlayerPawn::GetExtraLives() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "GetExtraLives");

	Params::FortPlayerPawn_GetExtraLives Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawn.GetGender
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    IsMale                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IsFemale                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::GetGender(bool* IsMale, bool* IsFemale) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "GetGender");

	Params::FortPlayerPawn_GetGender Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (IsMale != nullptr)
		*IsMale = Parms.IsMale;

	if (IsFemale != nullptr)
		*IsFemale = Parms.IsFemale;
}


// Function FortniteGame.FortPlayerPawn.GetHomeActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AFortPlayerPawn::GetHomeActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "GetHomeActor");

	Params::FortPlayerPawn_GetHomeActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawn.GetMaxStamina
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortPlayerPawn::GetMaxStamina() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "GetMaxStamina");

	Params::FortPlayerPawn_GetMaxStamina Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawn.GetSkeletalMeshForPartType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortCustomPartType                     PartType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*           ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AFortPlayerPawn::GetSkeletalMeshForPartType(EFortCustomPartType PartType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "GetSkeletalMeshForPartType");

	Params::FortPlayerPawn_GetSkeletalMeshForPartType Parms{};

	Parms.PartType = PartType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawn.GetStamina
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortPlayerPawn::GetStamina() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "GetStamina");

	Params::FortPlayerPawn_GetStamina Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawn.GetStasisMode
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortPawnStasisMode                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortPawnStasisMode AFortPlayerPawn::GetStasisMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "GetStasisMode");

	Params::FortPlayerPawn_GetStasisMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawn.IsSprinting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerPawn::IsSprinting() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "IsSprinting");

	Params::FortPlayerPawn_IsSprinting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawn.IsUsingHoverboard
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerPawn::IsUsingHoverboard() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "IsUsingHoverboard");

	Params::FortPlayerPawn_IsUsingHoverboard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawn.ListCharacterParts
// (Final, Exec, Native, Private, Const)
// Parameters:
// class FString                           GenderAndOrPartString                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawn::ListCharacterParts(const class FString& GenderAndOrPartString) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "ListCharacterParts");

	Params::FortPlayerPawn_ListCharacterParts Parms{};

	Parms.GenderAndOrPartString = std::move(GenderAndOrPartString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawn.TimeFromJumpApex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortPlayerPawn::TimeFromJumpApex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawn", "TimeFromJumpApex");

	Params::FortPlayerPawn_TimeFromJumpApex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawnAthena.BushStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bNewBushState                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::BushStateChanged(bool bNewBushState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "BushStateChanged");

	Params::FortPlayerPawnAthena_BushStateChanged Parms{};

	Parms.bNewBushState = bNewBushState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortPlayerPawnAthena.GameplayCue_Damage
// (Native, Protected, BlueprintCallable)
// Parameters:
// EGameplayCueEvent                       EventType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           Parameters                                             (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::GameplayCue_Damage(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "GameplayCue_Damage");

	Params::FortPlayerPawnAthena_GameplayCue_Damage Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.MarkSafe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UGameplayEffect>      GEtoApply                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::MarkSafe(TSubclassOf<class UGameplayEffect> GEtoApply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "MarkSafe");

	Params::FortPlayerPawnAthena_MarkSafe Parms{};

	Parms.GEtoApply = GEtoApply;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.NetMulticast_Athena_BatchedDamageCues
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// struct FAthenaBatchedDamageGameplayCues BatchData                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::NetMulticast_Athena_BatchedDamageCues(const struct FAthenaBatchedDamageGameplayCues& BatchData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "NetMulticast_Athena_BatchedDamageCues");

	Params::FortPlayerPawnAthena_NetMulticast_Athena_BatchedDamageCues Parms{};

	Parms.BatchData = std::move(BatchData);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.NetMulticast_InvokeGameplayCueAdded
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// struct FGameplayTag                     GameplayCueTag                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPredictionKey                   PredictionKey                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     EffectContext                                          (Parm, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::NetMulticast_InvokeGameplayCueAdded(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "NetMulticast_InvokeGameplayCueAdded");

	Params::FortPlayerPawnAthena_NetMulticast_InvokeGameplayCueAdded Parms{};

	Parms.GameplayCueTag = std::move(GameplayCueTag);
	Parms.PredictionKey = std::move(PredictionKey);
	Parms.EffectContext = std::move(EffectContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.NetMulticast_InvokeGameplayCueAdded_WithParams
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// struct FGameplayTag                     GameplayCueTag                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPredictionKey                   PredictionKey                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           Parameters                                             (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::NetMulticast_InvokeGameplayCueAdded_WithParams(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "NetMulticast_InvokeGameplayCueAdded_WithParams");

	Params::FortPlayerPawnAthena_NetMulticast_InvokeGameplayCueAdded_WithParams Parms{};

	Parms.GameplayCueTag = std::move(GameplayCueTag);
	Parms.PredictionKey = std::move(PredictionKey);
	Parms.Parameters = std::move(Parameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.NetMulticast_InvokeGameplayCueAddedAndWhileActive_FromSpec
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// struct FGameplayEffectSpecForRPC        Spec                                                   (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FPredictionKey                   PredictionKey                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::NetMulticast_InvokeGameplayCueAddedAndWhileActive_FromSpec(const struct FGameplayEffectSpecForRPC& Spec, const struct FPredictionKey& PredictionKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "NetMulticast_InvokeGameplayCueAddedAndWhileActive_FromSpec");

	Params::FortPlayerPawnAthena_NetMulticast_InvokeGameplayCueAddedAndWhileActive_FromSpec Parms{};

	Parms.Spec = std::move(Spec);
	Parms.PredictionKey = std::move(PredictionKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.NetMulticast_InvokeGameplayCueAddedAndWhileActive_WithParams
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// struct FGameplayTag                     GameplayCueTag                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPredictionKey                   PredictionKey                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           GameplayCueParameters                                  (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::NetMulticast_InvokeGameplayCueAddedAndWhileActive_WithParams(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "NetMulticast_InvokeGameplayCueAddedAndWhileActive_WithParams");

	Params::FortPlayerPawnAthena_NetMulticast_InvokeGameplayCueAddedAndWhileActive_WithParams Parms{};

	Parms.GameplayCueTag = std::move(GameplayCueTag);
	Parms.PredictionKey = std::move(PredictionKey);
	Parms.GameplayCueParameters = std::move(GameplayCueParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.NetMulticast_InvokeGameplayCueExecuted
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// struct FGameplayTag                     GameplayCueTag                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPredictionKey                   PredictionKey                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     EffectContext                                          (Parm, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::NetMulticast_InvokeGameplayCueExecuted(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "NetMulticast_InvokeGameplayCueExecuted");

	Params::FortPlayerPawnAthena_NetMulticast_InvokeGameplayCueExecuted Parms{};

	Parms.GameplayCueTag = std::move(GameplayCueTag);
	Parms.PredictionKey = std::move(PredictionKey);
	Parms.EffectContext = std::move(EffectContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.NetMulticast_InvokeGameplayCueExecuted_FromSpec
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// struct FGameplayEffectSpecForRPC        Spec                                                   (ConstParm, Parm, NativeAccessSpecifierPublic)
// struct FPredictionKey                   PredictionKey                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::NetMulticast_InvokeGameplayCueExecuted_FromSpec(const struct FGameplayEffectSpecForRPC& Spec, const struct FPredictionKey& PredictionKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "NetMulticast_InvokeGameplayCueExecuted_FromSpec");

	Params::FortPlayerPawnAthena_NetMulticast_InvokeGameplayCueExecuted_FromSpec Parms{};

	Parms.Spec = std::move(Spec);
	Parms.PredictionKey = std::move(PredictionKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.NetMulticast_InvokeGameplayCueExecuted_WithParams
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// struct FGameplayTag                     GameplayCueTag                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPredictionKey                   PredictionKey                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           GameplayCueParameters                                  (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::NetMulticast_InvokeGameplayCueExecuted_WithParams(const struct FGameplayTag& GameplayCueTag, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "NetMulticast_InvokeGameplayCueExecuted_WithParams");

	Params::FortPlayerPawnAthena_NetMulticast_InvokeGameplayCueExecuted_WithParams Parms{};

	Parms.GameplayCueTag = std::move(GameplayCueTag);
	Parms.PredictionKey = std::move(PredictionKey);
	Parms.GameplayCueParameters = std::move(GameplayCueParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.NetMulticast_InvokeGameplayCuesAddedAndWhileActive_WithParams
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// struct FGameplayTagContainer            GameplayCueTags                                        (ConstParm, Parm, NativeAccessSpecifierPublic)
// struct FPredictionKey                   PredictionKey                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           GameplayCueParameters                                  (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::NetMulticast_InvokeGameplayCuesAddedAndWhileActive_WithParams(const struct FGameplayTagContainer& GameplayCueTags, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "NetMulticast_InvokeGameplayCuesAddedAndWhileActive_WithParams");

	Params::FortPlayerPawnAthena_NetMulticast_InvokeGameplayCuesAddedAndWhileActive_WithParams Parms{};

	Parms.GameplayCueTags = std::move(GameplayCueTags);
	Parms.PredictionKey = std::move(PredictionKey);
	Parms.GameplayCueParameters = std::move(GameplayCueParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.NetMulticast_InvokeGameplayCuesExecuted
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// struct FGameplayTagContainer            GameplayCueTags                                        (ConstParm, Parm, NativeAccessSpecifierPublic)
// struct FPredictionKey                   PredictionKey                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayEffectContextHandle     EffectContext                                          (Parm, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::NetMulticast_InvokeGameplayCuesExecuted(const struct FGameplayTagContainer& GameplayCueTags, const struct FPredictionKey& PredictionKey, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "NetMulticast_InvokeGameplayCuesExecuted");

	Params::FortPlayerPawnAthena_NetMulticast_InvokeGameplayCuesExecuted Parms{};

	Parms.GameplayCueTags = std::move(GameplayCueTags);
	Parms.PredictionKey = std::move(PredictionKey);
	Parms.EffectContext = std::move(EffectContext);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.NetMulticast_InvokeGameplayCuesExecuted_WithParams
// (Net, Native, Event, NetMulticast, Public)
// Parameters:
// struct FGameplayTagContainer            GameplayCueTags                                        (ConstParm, Parm, NativeAccessSpecifierPublic)
// struct FPredictionKey                   PredictionKey                                          (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayCueParameters           GameplayCueParameters                                  (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::NetMulticast_InvokeGameplayCuesExecuted_WithParams(const struct FGameplayTagContainer& GameplayCueTags, const struct FPredictionKey& PredictionKey, const struct FGameplayCueParameters& GameplayCueParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "NetMulticast_InvokeGameplayCuesExecuted_WithParams");

	Params::FortPlayerPawnAthena_NetMulticast_InvokeGameplayCuesExecuted_WithParams Parms{};

	Parms.GameplayCueTags = std::move(GameplayCueTags);
	Parms.PredictionKey = std::move(PredictionKey);
	Parms.GameplayCueParameters = std::move(GameplayCueParameters);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.OnCapsuleBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                       SweepResult                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::OnCapsuleBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "OnCapsuleBeginOverlap");

	Params::FortPlayerPawnAthena_OnCapsuleBeginOverlap Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.OnEnteredWaterVolume
// (Event, Public, BlueprintEvent)

void AFortPlayerPawnAthena::OnEnteredWaterVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "OnEnteredWaterVolume");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortPlayerPawnAthena.OnExitedWaterVolume
// (Event, Public, BlueprintEvent)

void AFortPlayerPawnAthena::OnExitedWaterVolume()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "OnExitedWaterVolume");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortPlayerPawnAthena.OnRep_CustomizationLoadout
// (Final, Native, Protected)

void AFortPlayerPawnAthena::OnRep_CustomizationLoadout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "OnRep_CustomizationLoadout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.OnRep_DrivingCar
// (Final, Native, Protected)

void AFortPlayerPawnAthena::OnRep_DrivingCar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "OnRep_DrivingCar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.OnRep_IsOutsideSafeZone
// (Final, Native, Protected)

void AFortPlayerPawnAthena::OnRep_IsOutsideSafeZone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "OnRep_IsOutsideSafeZone");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.OnRep_IsParachuteOpen
// (Final, Native, Protected)
// Parameters:
// bool                                    bPreviousState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::OnRep_IsParachuteOpen(bool bPreviousState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "OnRep_IsParachuteOpen");

	Params::FortPlayerPawnAthena_OnRep_IsParachuteOpen Parms{};

	Parms.bPreviousState = bPreviousState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.OnRep_IsSkydiving
// (Final, Native, Protected)
// Parameters:
// bool                                    bPreviousState                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::OnRep_IsSkydiving(bool bPreviousState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "OnRep_IsSkydiving");

	Params::FortPlayerPawnAthena_OnRep_IsSkydiving Parms{};

	Parms.bPreviousState = bPreviousState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.OnRep_ReplicatedAnimMontage
// (Final, Native, Public)

void AFortPlayerPawnAthena::OnRep_ReplicatedAnimMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "OnRep_ReplicatedAnimMontage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.OnRep_WeaponActivated
// (Final, Native, Public)

void AFortPlayerPawnAthena::OnRep_WeaponActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "OnRep_WeaponActivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.OnSlidingStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bNewSlidingState                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::OnSlidingStateChanged(bool bNewSlidingState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "OnSlidingStateChanged");

	Params::FortPlayerPawnAthena_OnSlidingStateChanged Parms{};

	Parms.bNewSlidingState = bNewSlidingState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortPlayerPawnAthena.SafeZoneStatusChanged
// (Event, Protected, BlueprintEvent)

void AFortPlayerPawnAthena::SafeZoneStatusChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "SafeZoneStatusChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortPlayerPawnAthena.SetBushEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnableBush                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::SetBushEnabled(bool bEnableBush)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "SetBushEnabled");

	Params::FortPlayerPawnAthena_SetBushEnabled Parms{};

	Parms.bEnableBush = bEnableBush;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.StartConsumableUseAudio
// (Final, Native, Public)
// Parameters:
// class USoundBase*                       Sound                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::StartConsumableUseAudio(class USoundBase* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "StartConsumableUseAudio");

	Params::FortPlayerPawnAthena_StartConsumableUseAudio Parms{};

	Parms.Sound = Sound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.StopConsumableUseAudio
// (Final, Native, Public)

void AFortPlayerPawnAthena::StopConsumableUseAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "StopConsumableUseAudio");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerPawnAthena.GetIsSlopeSliding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerPawnAthena::GetIsSlopeSliding() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "GetIsSlopeSliding");

	Params::FortPlayerPawnAthena_GetIsSlopeSliding Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawnAthena.GetPawnLOD
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortPlayerPawnAthena::GetPawnLOD() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "GetPawnLOD");

	Params::FortPlayerPawnAthena_GetPawnLOD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawnAthena.GetSlopeSlidingAngles
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   LocalPitch                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LocalRoll                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerPawnAthena::GetSlopeSlidingAngles(float* LocalPitch, float* LocalRoll) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "GetSlopeSlidingAngles");

	Params::FortPlayerPawnAthena_GetSlopeSlidingAngles Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (LocalPitch != nullptr)
		*LocalPitch = Parms.LocalPitch;

	if (LocalRoll != nullptr)
		*LocalRoll = Parms.LocalRoll;
}


// Function FortniteGame.FortPlayerPawnAthena.GetSlopeSlidingNormal
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AFortPlayerPawnAthena::GetSlopeSlidingNormal() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "GetSlopeSlidingNormal");

	Params::FortPlayerPawnAthena_GetSlopeSlidingNormal Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawnAthena.IsActivelySkydiving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerPawnAthena::IsActivelySkydiving() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "IsActivelySkydiving");

	Params::FortPlayerPawnAthena_IsActivelySkydiving Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawnAthena.IsActivelyStrafingInAir
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerPawnAthena::IsActivelyStrafingInAir() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "IsActivelyStrafingInAir");

	Params::FortPlayerPawnAthena_IsActivelyStrafingInAir Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawnAthena.IsDrivingCar
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerPawnAthena::IsDrivingCar() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "IsDrivingCar");

	Params::FortPlayerPawnAthena_IsDrivingCar Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawnAthena.IsParachuteForcedOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerPawnAthena::IsParachuteForcedOpen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "IsParachuteForcedOpen");

	Params::FortPlayerPawnAthena_IsParachuteForcedOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawnAthena.IsParachuteOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerPawnAthena::IsParachuteOpen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "IsParachuteOpen");

	Params::FortPlayerPawnAthena_IsParachuteOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawnAthena.IsPassivelySkydiving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerPawnAthena::IsPassivelySkydiving() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "IsPassivelySkydiving");

	Params::FortPlayerPawnAthena_IsPassivelySkydiving Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawnAthena.IsSkydiving
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerPawnAthena::IsSkydiving() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "IsSkydiving");

	Params::FortPlayerPawnAthena_IsSkydiving Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawnAthena.IsSkydivingFromBus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerPawnAthena::IsSkydivingFromBus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "IsSkydivingFromBus");

	Params::FortPlayerPawnAthena_IsSkydivingFromBus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawnAthena.IsSkydivingFromLaunchPad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerPawnAthena::IsSkydivingFromLaunchPad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "IsSkydivingFromLaunchPad");

	Params::FortPlayerPawnAthena_IsSkydivingFromLaunchPad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerPawnAthena.IsUsingUmbrella
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortPlayerPawnAthena::IsUsingUmbrella() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerPawnAthena", "IsUsingUmbrella");

	Params::FortPlayerPawnAthena_IsUsingUmbrella Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerSpawnPad.ChestProgressionUpdate
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          PrimaryChestOffset                                     (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ChestOffset                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerSpawnPad::ChestProgressionUpdate(const struct FVector& PrimaryChestOffset, const struct FVector& ChestOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerSpawnPad", "ChestProgressionUpdate");

	Params::FortPlayerSpawnPad_ChestProgressionUpdate Parms{};

	Parms.PrimaryChestOffset = std::move(PrimaryChestOffset);
	Parms.ChestOffset = std::move(ChestOffset);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerSpawnPad.InitializeChestProgression
// (Final, Native, Public, BlueprintCallable)

void AFortPlayerSpawnPad::InitializeChestProgression()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerSpawnPad", "InitializeChestProgression");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerSpawnPad.PrestreamChestTextures
// (Final, Native, Public, BlueprintCallable)

void AFortPlayerSpawnPad::PrestreamChestTextures()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerSpawnPad", "PrestreamChestTextures");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerSpawnPad.GetPossessedPlayerPawnsByID
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AFortPlayerPawn*>          SortedPlayerPawns                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AFortPlayerSpawnPad::GetPossessedPlayerPawnsByID(TArray<class AFortPlayerPawn*>* SortedPlayerPawns) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerSpawnPad", "GetPossessedPlayerPawnsByID");

	Params::FortPlayerSpawnPad_GetPossessedPlayerPawnsByID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SortedPlayerPawns != nullptr)
		*SortedPlayerPawns = std::move(Parms.SortedPlayerPawns);
}


// Function FortniteGame.FortPlayerSpawnPad.GetRewardedChestIndex
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AFortPlayerSpawnPad::GetRewardedChestIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerSpawnPad", "GetRewardedChestIndex");

	Params::FortPlayerSpawnPad_GetRewardedChestIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSchematicItem.GetRequiredTeamLevelToCraft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSchematicItem::GetRequiredTeamLevelToCraft() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSchematicItem", "GetRequiredTeamLevelToCraft");

	Params::FortSchematicItem_GetRequiredTeamLevelToCraft Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSchematicItem.GetSchematicQuantityProduced
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSchematicItem::GetSchematicQuantityProduced() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSchematicItem", "GetSchematicQuantityProduced");

	Params::FortSchematicItem_GetSchematicQuantityProduced Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSchematicItem.GetSchematicRecipe
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRecipe                          ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FRecipe UFortSchematicItem::GetSchematicRecipe() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSchematicItem", "GetSchematicRecipe");

	Params::FortSchematicItem_GetSchematicRecipe Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPlayerStatePvP.OnRep_TotalQuantum
// (Final, Native, Protected)
// Parameters:
// int32                                   PrevTotalQuantum                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerStatePvP::OnRep_TotalQuantum(const int32 PrevTotalQuantum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerStatePvP", "OnRep_TotalQuantum");

	Params::FortPlayerStatePvP_OnRep_TotalQuantum Parms{};

	Parms.PrevTotalQuantum = PrevTotalQuantum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerStateAthena.ClientReportDBNO
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AFortPlayerStateAthena*           Player                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerStateAthena::ClientReportDBNO(const class AFortPlayerStateAthena* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerStateAthena", "ClientReportDBNO");

	Params::FortPlayerStateAthena_ClientReportDBNO Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerStateAthena.ClientReportKill
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AFortPlayerStateAthena*           Player                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPlayerStateAthena::ClientReportKill(const class AFortPlayerStateAthena* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerStateAthena", "ClientReportKill");

	Params::FortPlayerStateAthena_ClientReportKill Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerStateAthena.OnRep_DeathInfo
// (Final, Native, Public)

void AFortPlayerStateAthena::OnRep_DeathInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerStateAthena", "OnRep_DeathInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerStateAthena.OnRep_Downs
// (Final, Native, Public)

void AFortPlayerStateAthena::OnRep_Downs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerStateAthena", "OnRep_Downs");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerStateAthena.OnRep_Kills
// (Final, Native, Public)

void AFortPlayerStateAthena::OnRep_Kills()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerStateAthena", "OnRep_Kills");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerStateAthena.OnRep_Place
// (Final, Native, Public)

void AFortPlayerStateAthena::OnRep_Place()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerStateAthena", "OnRep_Place");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPlayerStateAthena.OnRep_SquadId
// (Final, Native, Public)

void AFortPlayerStateAthena::OnRep_SquadId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerStateAthena", "OnRep_SquadId");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortProjectileBase.GetOwnerPlayerController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerController* AFortProjectileBase::GetOwnerPlayerController()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProjectileBase", "GetOwnerPlayerController");

	Params::FortProjectileBase_GetOwnerPlayerController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortProjectileBase.OnBounce
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortProjectileBase::OnBounce(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProjectileBase", "OnBounce");

	Params::FortProjectileBase_OnBounce Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortProjectileBase.OnBounceCallback
// (Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                          ImpactVelocity                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortProjectileBase::OnBounceCallback(const struct FHitResult& Hit, const struct FVector& ImpactVelocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProjectileBase", "OnBounceCallback");

	Params::FortProjectileBase_OnBounceCallback Parms{};

	Parms.Hit = std::move(Hit);
	Parms.ImpactVelocity = std::move(ImpactVelocity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortProjectileBase.OnRep_GravityScale
// (Final, Native, Public)

void AFortProjectileBase::OnRep_GravityScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProjectileBase", "OnRep_GravityScale");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortProjectileBase.OnRep_ReplicatedMaxSpeed
// (Final, Native, Public)

void AFortProjectileBase::OnRep_ReplicatedMaxSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProjectileBase", "OnRep_ReplicatedMaxSpeed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortProjectileBase.OnShot
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortProjectileBase::OnShot(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProjectileBase", "OnShot");

	Params::FortProjectileBase_OnShot Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortProjectileBase.OnStop
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortProjectileBase::OnStop(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProjectileBase", "OnStop");

	Params::FortProjectileBase_OnStop Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortProjectileBase.OnStopCallback
// (Native, Protected, HasOutParams)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortProjectileBase::OnStopCallback(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProjectileBase", "OnStopCallback");

	Params::FortProjectileBase_OnStopCallback Parms{};

	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortProjectileBase.OnStoppedOnServer
// (Event, Public, BlueprintEvent)

void AFortProjectileBase::OnStoppedOnServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProjectileBase", "OnStoppedOnServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortProjectileBase.SetGravityScale
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InitialGravityScale                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortProjectileBase::SetGravityScale(float InitialGravityScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProjectileBase", "SetGravityScale");

	Params::FortProjectileBase_SetGravityScale Parms{};

	Parms.InitialGravityScale = InitialGravityScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortProjectileBase.GetGravityScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortProjectileBase::GetGravityScale() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProjectileBase", "GetGravityScale");

	Params::FortProjectileBase_GetGravityScale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortProjectile_MOBATurret.OnHomingTargetDied
// (Native, Protected, HasDefaults)
// Parameters:
// class AActor*                           DamagedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Damage                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InstigatedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          HitLocation                                            (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              FHitComponent                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             BoneName                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          Momentum                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortProjectile_MOBATurret::OnHomingTargetDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProjectile_MOBATurret", "OnHomingTargetDied");

	Params::FortProjectile_MOBATurret_OnHomingTargetDied Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.HitLocation = std::move(HitLocation);
	Parms.FHitComponent = FHitComponent;
	Parms.BoneName = BoneName;
	Parms.Momentum = std::move(Momentum);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortProjectileAthena.KillAfterNoPawnHit
// (Native, Protected)

void AFortProjectileAthena::KillAfterNoPawnHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProjectileAthena", "KillAfterNoPawnHit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortProjectileAthena.OnRep_FireStart
// (Native, Public)

void AFortProjectileAthena::OnRep_FireStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProjectileAthena", "OnRep_FireStart");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortProjectileAthena.OnRep_PawnHitResult
// (Native, Protected)

void AFortProjectileAthena::OnRep_PawnHitResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProjectileAthena", "OnRep_PawnHitResult");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortProjectileAthena.ServerNotifyPawnHit
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FHitResult                       Hit                                                    (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AFortProjectileAthena::ServerNotifyPawnHit(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortProjectileAthena", "ServerNotifyPawnHit");

	Params::FortProjectileAthena_ServerNotifyPawnHit Parms{};

	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction FortniteGame.FortPrototypingContext.OnPrototypingStatusChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UFortPrototypingContext::OnPrototypingStatusChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPrototypingContext", "OnPrototypingStatusChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortPrototypingContext.GetPrototypingStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortPrototypingStatus                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortPrototypingStatus UFortPrototypingContext::GetPrototypingStatus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPrototypingContext", "GetPrototypingStatus");

	Params::FortPrototypingContext_GetPrototypingStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPvPBaseCornerstone.OnInvincibilityChanged
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsInvincible                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPvPBaseCornerstone::OnInvincibilityChanged(bool bIsInvincible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPvPBaseCornerstone", "OnInvincibilityChanged");

	Params::FortPvPBaseCornerstone_OnInvincibilityChanged Parms{};

	Parms.bIsInvincible = bIsInvincible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPvPBaseCornerstone.OnRep_bInvincible
// (Final, Native, Protected)

void AFortPvPBaseCornerstone::OnRep_bInvincible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPvPBaseCornerstone", "OnRep_bInvincible");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPvPBaseCornerstone.SetInvincibility
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInInvincible                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortPvPBaseCornerstone::SetInvincibility(bool bInInvincible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPvPBaseCornerstone", "SetInvincibility");

	Params::FortPvPBaseCornerstone_SetInvincibility Parms{};

	Parms.bInInvincible = bInInvincible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPvPFunctionLibrary.DestroyAllFortPickupsWithItem
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortWorldItemDefinition*         ItemDefinitionToCheck                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPvPFunctionLibrary::DestroyAllFortPickupsWithItem(class UObject* WorldContextObject, const class UFortWorldItemDefinition* ItemDefinitionToCheck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortPvPFunctionLibrary", "DestroyAllFortPickupsWithItem");

	Params::FortPvPFunctionLibrary_DestroyAllFortPickupsWithItem Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ItemDefinitionToCheck = ItemDefinitionToCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPvPFunctionLibrary.FirePvPVictoryMissionEvent
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortTeam                               InWinningTeam                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPvPFunctionLibrary::FirePvPVictoryMissionEvent(class UObject* WorldContextObject, EFortTeam InWinningTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortPvPFunctionLibrary", "FirePvPVictoryMissionEvent");

	Params::FortPvPFunctionLibrary_FirePvPVictoryMissionEvent Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InWinningTeam = InWinningTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortPvPFunctionLibrary.GetBaseBuildingCost
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ABuildingActor*                   BuildingActor                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPvPFunctionLibrary::GetBaseBuildingCost(class ABuildingActor* BuildingActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortPvPFunctionLibrary", "GetBaseBuildingCost");

	Params::FortPvPFunctionLibrary_GetBaseBuildingCost Parms{};

	Parms.BuildingActor = BuildingActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPvPFunctionLibrary.GetBaseDestructionTeamInfo
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortTeam                               Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortTeamInfoPvPBaseDestruction*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortTeamInfoPvPBaseDestruction* UFortPvPFunctionLibrary::GetBaseDestructionTeamInfo(class UObject* WorldContextObject, EFortTeam Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortPvPFunctionLibrary", "GetBaseDestructionTeamInfo");

	Params::FortPvPFunctionLibrary_GetBaseDestructionTeamInfo Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPvPFunctionLibrary.GetDifficultyRowNamesFromPvPRating
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FName>                     OutDifficultyRows                                      (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// float                                   InPvPRating                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPvPFunctionLibrary::GetDifficultyRowNamesFromPvPRating(TArray<class FName>* OutDifficultyRows, const float InPvPRating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortPvPFunctionLibrary", "GetDifficultyRowNamesFromPvPRating");

	Params::FortPvPFunctionLibrary_GetDifficultyRowNamesFromPvPRating Parms{};

	Parms.InPvPRating = InPvPRating;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDifficultyRows != nullptr)
		*OutDifficultyRows = std::move(Parms.OutDifficultyRows);
}


// Function FortniteGame.FortPvPFunctionLibrary.GetMatchLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPvPFunctionLibrary::GetMatchLevel(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortPvPFunctionLibrary", "GetMatchLevel");

	Params::FortPvPFunctionLibrary_GetMatchLevel Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPvPFunctionLibrary.GetRoundTimeAccumulated
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortPvPFunctionLibrary::GetRoundTimeAccumulated(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortPvPFunctionLibrary", "GetRoundTimeAccumulated");

	Params::FortPvPFunctionLibrary_GetRoundTimeAccumulated Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPvPFunctionLibrary.GetTeamCornerstone
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortTeam                               Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPvPBaseCornerstone*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPvPBaseCornerstone* UFortPvPFunctionLibrary::GetTeamCornerstone(class UObject* WorldContextObject, EFortTeam Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortPvPFunctionLibrary", "GetTeamCornerstone");

	Params::FortPvPFunctionLibrary_GetTeamCornerstone Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Team = Team;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPvPFunctionLibrary.GetTeamStrategicBuildingActor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortTeam                               Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTeamStrategicBuildingHandle     SBAHandle                                              (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class AStrategicBuildingActor*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AStrategicBuildingActor* UFortPvPFunctionLibrary::GetTeamStrategicBuildingActor(class UObject* WorldContextObject, EFortTeam Team, const struct FTeamStrategicBuildingHandle& SBAHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortPvPFunctionLibrary", "GetTeamStrategicBuildingActor");

	Params::FortPvPFunctionLibrary_GetTeamStrategicBuildingActor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Team = Team;
	Parms.SBAHandle = std::move(SBAHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPvPFunctionLibrary.SetMatchLevel
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MatchLevel                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPvPFunctionLibrary::SetMatchLevel(class UObject* WorldContextObject, int32 MatchLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortPvPFunctionLibrary", "SetMatchLevel");

	Params::FortPvPFunctionLibrary_SetMatchLevel Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MatchLevel = MatchLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWorldManager.OnRep_InitialGlobalWind
// (Final, Native, Public)

void AFortWorldManager::OnRep_InitialGlobalWind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorldManager", "OnRep_InitialGlobalWind");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortRegisteredPlayerInfo.GetAbilitySystemComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UAbilitySystemComponent*          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAbilitySystemComponent* UFortRegisteredPlayerInfo::GetAbilitySystemComponent() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRegisteredPlayerInfo", "GetAbilitySystemComponent");

	Params::FortRegisteredPlayerInfo_GetAbilitySystemComponent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortRegisteredPlayerInfo.GetPlayerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortRegisteredPlayerInfo::GetPlayerName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRegisteredPlayerInfo", "GetPlayerName");

	Params::FortRegisteredPlayerInfo_GetPlayerName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortPvPMission_EnemyBaseDestruction.GetCornerstoneForTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EFortTeam                               InTeam                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPvPBaseCornerstone*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPvPBaseCornerstone* AFortPvPMission_EnemyBaseDestruction::GetCornerstoneForTeam(EFortTeam InTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPvPMission_EnemyBaseDestruction", "GetCornerstoneForTeam");

	Params::FortPvPMission_EnemyBaseDestruction_GetCornerstoneForTeam Parms{};

	Parms.InTeam = InTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortRarityData.BPGetRarityData
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// EFortRarity                             Rarity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortRarityItemData              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FFortRarityItemData UFortRarityData::BPGetRarityData(EFortRarity Rarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortRarityData", "BPGetRarityData");

	Params::FortRarityData_BPGetRarityData Parms{};

	Parms.Rarity = Rarity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.GetMissionConfigData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameplayTag                     InBucketTag                                            (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortMissionConfigData*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortMissionConfigData* UFortQuestItem::GetMissionConfigData(const struct FGameplayTag& InBucketTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "GetMissionConfigData");

	Params::FortQuestItem_GetMissionConfigData Parms{};

	Parms.InBucketTag = std::move(InBucketTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.CanPinQuest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestItem::CanPinQuest() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "CanPinQuest");

	Params::FortQuestItem_CanPinQuest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.DoesQuestExpire
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestItem::DoesQuestExpire() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "DoesQuestExpire");

	Params::FortQuestItem_DoesQuestExpire Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.GetAchievedCount
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   OutTotalAchievedCount                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutTotalRequiredCount                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortQuestItem::GetAchievedCount(int32* OutTotalAchievedCount, int32* OutTotalRequiredCount) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "GetAchievedCount");

	Params::FortQuestItem_GetAchievedCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTotalAchievedCount != nullptr)
		*OutTotalAchievedCount = Parms.OutTotalAchievedCount;

	if (OutTotalRequiredCount != nullptr)
		*OutTotalRequiredCount = Parms.OutTotalRequiredCount;
}


// Function FortniteGame.FortQuestItem.GetBroadcasterGrantWindowEnd
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UFortQuestItem::GetBroadcasterGrantWindowEnd() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "GetBroadcasterGrantWindowEnd");

	Params::FortQuestItem_GetBroadcasterGrantWindowEnd Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.GetObjectiveInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDataTableRowHandle              ObjectiveStatHandle                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
// class UFortQuestObjectiveInfo*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortQuestObjectiveInfo* UFortQuestItem::GetObjectiveInfo(const struct FDataTableRowHandle& ObjectiveStatHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "GetObjectiveInfo");

	Params::FortQuestItem_GetObjectiveInfo Parms{};

	Parms.ObjectiveStatHandle = std::move(ObjectiveStatHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.GetPercentageComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortQuestItem::GetPercentageComplete() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "GetPercentageComplete");

	Params::FortQuestItem_GetPercentageComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.GetPreviewAllSelectableRewards
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFortItemInstanceQuantityPair>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FFortItemInstanceQuantityPair> UFortQuestItem::GetPreviewAllSelectableRewards() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "GetPreviewAllSelectableRewards");

	Params::FortQuestItem_GetPreviewAllSelectableRewards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.GetPreviewRewards
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FFortItemInstanceQuantityPair>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FFortItemInstanceQuantityPair> UFortQuestItem::GetPreviewRewards() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "GetPreviewRewards");

	Params::FortQuestItem_GetPreviewRewards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.GetPreviewSelectableRewards
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   RewardIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFortItemInstanceQuantityPair>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FFortItemInstanceQuantityPair> UFortQuestItem::GetPreviewSelectableRewards(int32 RewardIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "GetPreviewSelectableRewards");

	Params::FortQuestItem_GetPreviewSelectableRewards Parms{};

	Parms.RewardIndex = RewardIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.GetQuestDefinitionBP
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortQuestItemDefinition*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortQuestItemDefinition* UFortQuestItem::GetQuestDefinitionBP() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "GetQuestDefinitionBP");

	Params::FortQuestItem_GetQuestDefinitionBP Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.GetQuestState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortQuestState                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortQuestState UFortQuestItem::GetQuestState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "GetQuestState");

	Params::FortQuestItem_GetQuestState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.GetRemainingExpirationDuration
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        UtcNow                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UFortQuestItem::GetRemainingExpirationDuration(const struct FDateTime& UtcNow) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "GetRemainingExpirationDuration");

	Params::FortQuestItem_GetRemainingExpirationDuration Parms{};

	Parms.UtcNow = std::move(UtcNow);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.GetTwitchBroadcasterChannelId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UFortQuestItem::GetTwitchBroadcasterChannelId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "GetTwitchBroadcasterChannelId");

	Params::FortQuestItem_GetTwitchBroadcasterChannelId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.HasCompletedObjective
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDataTableRowHandle              ObjectiveStatHandle                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestItem::HasCompletedObjective(const struct FDataTableRowHandle& ObjectiveStatHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "HasCompletedObjective");

	Params::FortQuestItem_HasCompletedObjective Parms{};

	Parms.ObjectiveStatHandle = std::move(ObjectiveStatHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.HasCompletedObjectiveWithName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             BackendName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestItem::HasCompletedObjectiveWithName(class FName BackendName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "HasCompletedObjectiveWithName");

	Params::FortQuestItem_HasCompletedObjectiveWithName Parms{};

	Parms.BackendName = BackendName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.HasCompletedQuest
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestItem::HasCompletedQuest() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "HasCompletedQuest");

	Params::FortQuestItem_HasCompletedQuest Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.HasQuestExpired
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        UtcNow                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestItem::HasQuestExpired(const struct FDateTime& UtcNow) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "HasQuestExpired");

	Params::FortQuestItem_HasQuestExpired Parms{};

	Parms.UtcNow = std::move(UtcNow);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.HasVisibleRewards
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestItem::HasVisibleRewards() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "HasVisibleRewards");

	Params::FortQuestItem_HasVisibleRewards Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.IsObjectiveInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDataTableRowHandle              ObjectiveStatHandle                                    (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestItem::IsObjectiveInProgress(const struct FDataTableRowHandle& ObjectiveStatHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "IsObjectiveInProgress");

	Params::FortQuestItem_IsObjectiveInProgress Parms{};

	Parms.ObjectiveStatHandle = std::move(ObjectiveStatHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.IsObjectiveWithNameInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             BackendName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestItem::IsObjectiveWithNameInProgress(class FName BackendName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "IsObjectiveWithNameInProgress");

	Params::FortQuestItem_IsObjectiveWithNameInProgress Parms{};

	Parms.BackendName = BackendName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.IsQuestInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestItem::IsQuestInProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "IsQuestInProgress");

	Params::FortQuestItem_IsQuestInProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.IsQuestPinned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestItem::IsQuestPinned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "IsQuestPinned");

	Params::FortQuestItem_IsQuestPinned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestItem.IsVisibleToUser
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    bAllowClaimedQuestsToBeVisible                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestItem::IsVisibleToUser(bool bAllowClaimedQuestsToBeVisible) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestItem", "IsVisibleToUser");

	Params::FortQuestItem_IsVisibleToUser Parms{};

	Parms.bAllowClaimedQuestsToBeVisible = bAllowClaimedQuestsToBeVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestObjectiveTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestObjectiveTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestObjectiveTooltip", "GetNumericValue");

	Params::FortQuestObjectiveTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestObjectiveTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestObjectiveTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestObjectiveTooltip", "GetTextForToken");

	Params::FortQuestObjectiveTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuestObjectiveTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortQuestObjectiveTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuestObjectiveTooltip", "GetTokenizedDescriptionText");

	Params::FortQuestObjectiveTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortQuickBars.DisableSlot
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EFortQuickBars                          InQuickBar                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortQuickBars::DisableSlot(EFortQuickBars InQuickBar, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBars", "DisableSlot");

	Params::FortQuickBars_DisableSlot Parms{};

	Parms.InQuickBar = InQuickBar;
	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuickBars.Empty
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EFortQuickBars                          InQuickBar                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortQuickBars::Empty(EFortQuickBars InQuickBar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBars", "Empty");

	Params::FortQuickBars_Empty Parms{};

	Parms.InQuickBar = InQuickBar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuickBars.EmptySlot
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EFortQuickBars                          InQuickBar                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortQuickBars::EmptySlot(EFortQuickBars InQuickBar, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBars", "EmptySlot");

	Params::FortQuickBars_EmptySlot Parms{};

	Parms.InQuickBar = InQuickBar;
	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuickBars.EnableSlot
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// EFortQuickBars                          InQuickBar                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortQuickBars::EnableSlot(EFortQuickBars InQuickBar, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBars", "EnableSlot");

	Params::FortQuickBars_EnableSlot Parms{};

	Parms.InQuickBar = InQuickBar;
	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuickBars.OnRep_PrimaryQuickBar
// (Final, Native, Private)

void AFortQuickBars::OnRep_PrimaryQuickBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBars", "OnRep_PrimaryQuickBar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuickBars.OnRep_SecondaryQuickBar
// (Final, Native, Private)

void AFortQuickBars::OnRep_SecondaryQuickBar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBars", "OnRep_SecondaryQuickBar");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuickBars.ServerActivateSlotInternal
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// EFortQuickBars                          InQuickBar                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ActivateDelay                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUpdatePreviousFocusedSlot                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortQuickBars::ServerActivateSlotInternal(EFortQuickBars InQuickBar, int32 Slot, float ActivateDelay, bool bUpdatePreviousFocusedSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBars", "ServerActivateSlotInternal");

	Params::FortQuickBars_ServerActivateSlotInternal Parms{};

	Parms.InQuickBar = InQuickBar;
	Parms.Slot = Slot;
	Parms.ActivateDelay = ActivateDelay;
	Parms.bUpdatePreviousFocusedSlot = bUpdatePreviousFocusedSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuickBars.ServerAddItemInternal
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FGuid                            Item                                                   (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortQuickBars                          InQuickBar                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortQuickBars::ServerAddItemInternal(const struct FGuid& Item, EFortQuickBars InQuickBar, int32 Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBars", "ServerAddItemInternal");

	Params::FortQuickBars_ServerAddItemInternal Parms{};

	Parms.Item = std::move(Item);
	Parms.InQuickBar = InQuickBar;
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuickBars.ServerRemoveItemInternal
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FGuid                            Item                                                   (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFindReplacement                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortQuickBars::ServerRemoveItemInternal(const struct FGuid& Item, bool bFindReplacement, bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBars", "ServerRemoveItemInternal");

	Params::FortQuickBars_ServerRemoveItemInternal Parms{};

	Parms.Item = std::move(Item);
	Parms.bFindReplacement = bFindReplacement;
	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuickBars.ServerSwapItemsInternal
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// EFortQuickBars                          QuickBarA                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndexA                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortQuickBars                          QuickBarB                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndexB                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortQuickBars::ServerSwapItemsInternal(EFortQuickBars QuickBarA, int32 SlotIndexA, EFortQuickBars QuickBarB, int32 SlotIndexB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuickBars", "ServerSwapItemsInternal");

	Params::FortQuickBars_ServerSwapItemsInternal Parms{};

	Parms.QuickBarA = QuickBarA;
	Parms.SlotIndexA = SlotIndexA;
	Parms.QuickBarB = QuickBarB;
	Parms.SlotIndexB = SlotIndexB;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortQuotaItem.GetCurrentQuotaAmount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortQuotaItem::GetCurrentQuotaAmount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortQuotaItem", "GetCurrentQuotaAmount");

	Params::FortQuotaItem_GetCurrentQuotaAmount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortRegisteredPlayerInfoTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortRegisteredPlayerInfoTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRegisteredPlayerInfoTooltip", "GetNumericValue");

	Params::FortRegisteredPlayerInfoTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortRegisteredPlayerInfoTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortRegisteredPlayerInfoTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRegisteredPlayerInfoTooltip", "GetTextForToken");

	Params::FortRegisteredPlayerInfoTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortRegisteredPlayerInfoTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortRegisteredPlayerInfoTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRegisteredPlayerInfoTooltip", "GetTokenizedDescriptionText");

	Params::FortRegisteredPlayerInfoTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortRegisteredPlayerInfoTooltip.GetValueData
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortTooltipValueData            OutData                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortRegisteredPlayerInfoTooltip::GetValueData(const class UObject* ObjectToDescribe, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, struct FFortTooltipValueData* OutData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortRegisteredPlayerInfoTooltip", "GetValueData");

	Params::FortRegisteredPlayerInfoTooltip_GetValueData Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSchematicItemDefinition.GetCraftingSuccessSound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USoundBase*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USoundBase* UFortSchematicItemDefinition::GetCraftingSuccessSound() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSchematicItemDefinition", "GetCraftingSuccessSound");

	Params::FortSchematicItemDefinition_GetCraftingSuccessSound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSchematicItemDefinition.GetCraftingTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSchematicItemDefinition::GetCraftingTime(int32 Level) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSchematicItemDefinition", "GetCraftingTime");

	Params::FortSchematicItemDefinition_GetCraftingTime Parms{};

	Parms.Level = Level;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSchematicItemDefinition.GetCraftingTimeForCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Level                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerPawn*                  FortPawn                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSchematicItemDefinition::GetCraftingTimeForCharacter(int32 Level, const class AFortPlayerPawn* FortPawn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSchematicItemDefinition", "GetCraftingTimeForCharacter");

	Params::FortSchematicItemDefinition_GetCraftingTimeForCharacter Parms{};

	Parms.Level = Level;
	Parms.FortPawn = FortPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSchematicItemDefinition.GetQuantityProduced
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFortSchematicItemDefinition::GetQuantityProduced() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSchematicItemDefinition", "GetQuantityProduced");

	Params::FortSchematicItemDefinition_GetQuantityProduced Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSchematicItemDefinition.GetRecipe
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRecipe                          ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FRecipe UFortSchematicItemDefinition::GetRecipe() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSchematicItemDefinition", "GetRecipe");

	Params::FortSchematicItemDefinition_GetRecipe Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSchematicItemDefinition.GetResultWorldItemDefinition
// (Final, RequiredAPI, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UFortWorldItemDefinition*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UFortWorldItemDefinition* UFortSchematicItemDefinition::GetResultWorldItemDefinition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSchematicItemDefinition", "GetResultWorldItemDefinition");

	Params::FortSchematicItemDefinition_GetResultWorldItemDefinition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSchematicTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSchematicTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSchematicTooltip", "GetNumericValue");

	Params::FortSchematicTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSchematicTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSchematicTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSchematicTooltip", "GetTextForToken");

	Params::FortSchematicTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSchematicTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSchematicTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSchematicTooltip", "GetTokenizedDescriptionText");

	Params::FortSchematicTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortScriptedActionManager.HandleClientEvent_Undefined
// (Final, BlueprintCosmetic, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                          EventSource                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          EventFocus                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortClientEvent                 ClientEvent                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortScriptedActionManager::HandleClientEvent_Undefined(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortScriptedActionManager", "HandleClientEvent_Undefined");

	Params::FortScriptedActionManager_HandleClientEvent_Undefined Parms{};

	Parms.EventSource = EventSource;
	Parms.EventFocus = EventFocus;
	Parms.ClientEvent = std::move(ClientEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortSocialItem.GetDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortSocialItem::GetDisplayName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialItem", "GetDisplayName");

	Params::FortSocialItem_GetDisplayName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSocialItem.GetLocation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortSocialItem::GetLocation() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialItem", "GetLocation");

	Params::FortSocialItem_GetLocation Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSocialItem.GetPresenceStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EFortSocialItemPresenceStatus           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EFortSocialItemPresenceStatus UFortSocialItem::GetPresenceStatus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialItem", "GetPresenceStatus");

	Params::FortSocialItem_GetPresenceStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSocialItem.GetUniquePlayerId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FUniqueNetIdRepl UFortSocialItem::GetUniquePlayerId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSocialItem", "GetUniquePlayerId");

	Params::FortSocialItem_GetUniquePlayerId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSpline.AddControlPoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                          Point                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSpline::AddControlPoint(const struct FVector& Point, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpline", "AddControlPoint");

	Params::FortSpline_AddControlPoint Parms{};

	Parms.Point = std::move(Point);
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortSpline.ClearSpline
// (Final, Native, Public, BlueprintCallable)

void UFortSpline::ClearSpline()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpline", "ClearSpline");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortSpline.DrawDebugSpline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Steps                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LifeTime                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Thickness                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPersistent                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bJustDrawSpline                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BasisLength                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSpline::DrawDebugSpline(class UObject* WorldContextObject, int32 Steps, float LifeTime, float Thickness, bool bPersistent, bool bJustDrawSpline, float BasisLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpline", "DrawDebugSpline");

	Params::FortSpline_DrawDebugSpline Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Steps = Steps;
	Parms.LifeTime = LifeTime;
	Parms.Thickness = Thickness;
	Parms.bPersistent = bPersistent;
	Parms.bJustDrawSpline = bJustDrawSpline;
	Parms.BasisLength = BasisLength;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortSpline.EnableConstantVelocity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ConstVelEnabled                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSpline::EnableConstantVelocity(bool ConstVelEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpline", "EnableConstantVelocity");

	Params::FortSpline_EnableConstantVelocity Parms{};

	Parms.ConstVelEnabled = ConstVelEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortSpline.SetDuration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InDuration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSpline::SetDuration(float InDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpline", "SetDuration");

	Params::FortSpline_SetDuration Parms{};

	Parms.InDuration = InDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortSpline.SetupSpline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FVector>                  ControlPoints                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// float                                   InDuration                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortSpline::SetupSpline(const TArray<struct FVector>& ControlPoints, float InDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpline", "SetupSpline");

	Params::FortSpline_SetupSpline Parms{};

	Parms.ControlPoints = std::move(ControlPoints);
	Parms.InDuration = InDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortSpline.GetBinormalFromTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UFortSpline::GetBinormalFromTime(float Time) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpline", "GetBinormalFromTime");

	Params::FortSpline_GetBinormalFromTime Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSpline.GetDuration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSpline::GetDuration() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpline", "GetDuration");

	Params::FortSpline_GetDuration Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSpline.GetEndPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UFortSpline::GetEndPoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpline", "GetEndPoint");

	Params::FortSpline_GetEndPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSpline.GetNormalFromTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UFortSpline::GetNormalFromTime(float Time) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpline", "GetNormalFromTime");

	Params::FortSpline_GetNormalFromTime Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSpline.GetPositionFromTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UFortSpline::GetPositionFromTime(float Time) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpline", "GetPositionFromTime");

	Params::FortSpline_GetPositionFromTime Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSpline.GetSplineLength
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   StepSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSpline::GetSplineLength(float StepSize) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpline", "GetSplineLength");

	Params::FortSpline_GetSplineLength Parms{};

	Parms.StepSize = StepSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSpline.GetSplineLengthAtTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StepSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSpline::GetSplineLengthAtTime(float Time, float StepSize) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpline", "GetSplineLengthAtTime");

	Params::FortSpline_GetSplineLengthAtTime Parms{};

	Parms.Time = Time;
	Parms.StepSize = StepSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSpline.GetStartPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UFortSpline::GetStartPoint() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpline", "GetStartPoint");

	Params::FortSpline_GetStartPoint Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSpline.GetTangentFromTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UFortSpline::GetTangentFromTime(float Time) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpline", "GetTangentFromTime");

	Params::FortSpline_GetTangentFromTime Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSpline.GetVelocityCorrectedTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Time                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortSpline::GetVelocityCorrectedTime(float Time) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpline", "GetVelocityCorrectedTime");

	Params::FortSpline_GetVelocityCorrectedTime Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortSpline.IsValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortSpline::IsValid() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortSpline", "IsValid");

	Params::FortSpline_IsValid Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTheaterCamera.SetTileFocus
// (Event, Public, BlueprintEvent)
// Parameters:
// class AFortTheaterMapTile*              TargetTile                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortTheaterCamera::SetTileFocus(class AFortTheaterMapTile* TargetTile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterCamera", "SetTileFocus");

	Params::FortTheaterCamera_SetTileFocus Parms{};

	Parms.TargetTile = TargetTile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortTheaterCamera.LimitToTheater
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          DesiredPosition                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AFortTheaterCamera::LimitToTheater(const struct FVector& DesiredPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterCamera", "LimitToTheater");

	Params::FortTheaterCamera_LimitToTheater Parms{};

	Parms.DesiredPosition = std::move(DesiredPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTheaterMapViewer.HandleMarkedQuestsChanged
// (Final, Native, Public)

void AFortTheaterMapViewer::HandleMarkedQuestsChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTheaterMapViewer", "HandleMarkedQuestsChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTrackMovementComponent.FlipDirection
// (Final, Native, Public, BlueprintCallable)

void UFortTrackMovementComponent::FlipDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrackMovementComponent", "FlipDirection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTrackMovementComponent.OnRep_ReplicatedTrackMovement
// (Final, Native, Private)

void UFortTrackMovementComponent::OnRep_ReplicatedTrackMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrackMovementComponent", "OnRep_ReplicatedTrackMovement");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortTrackMovementComponent.GetDistanceAlongSpline
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UFortTrackMovementComponent::GetDistanceAlongSpline() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrackMovementComponent", "GetDistanceAlongSpline");

	Params::FortTrackMovementComponent_GetDistanceAlongSpline Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTrackMovementComponent.GetSpline
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USplineComponent*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USplineComponent* UFortTrackMovementComponent::GetSpline() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrackMovementComponent", "GetSpline");

	Params::FortTrackMovementComponent_GetSpline Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTrackMovementComponent.GetTrack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AFortTrack*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortTrack* UFortTrackMovementComponent::GetTrack() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrackMovementComponent", "GetTrack");

	Params::FortTrackMovementComponent_GetTrack Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTrackMovementComponent.IsReverseDirection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTrackMovementComponent::IsReverseDirection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrackMovementComponent", "IsReverseDirection");

	Params::FortTrackMovementComponent_IsReverseDirection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTrapTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTrapTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrapTooltip", "GetNumericValue");

	Params::FortTrapTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTrapTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTrapTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrapTooltip", "GetTextForToken");

	Params::FortTrapTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortTrapTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortTrapTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortTrapTooltip", "GetTokenizedDescriptionText");

	Params::FortTrapTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortInventorySortFunctionLibrary.GetCriterionDisplayNameOfSortType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// EInventoryContentSortType               SortType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UFortInventorySortFunctionLibrary::GetCriterionDisplayNameOfSortType(EInventoryContentSortType SortType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortInventorySortFunctionLibrary", "GetCriterionDisplayNameOfSortType");

	Params::FortInventorySortFunctionLibrary_GetCriterionDisplayNameOfSortType Parms{};

	Parms.SortType = SortType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponRanged.DeactivateBeamFX
// (Final, Native, Protected, BlueprintCallable)

void AFortWeaponRanged::DeactivateBeamFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRanged", "DeactivateBeamFX");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeaponRanged.InitializeBeamFX
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UParticleSystemComponent*         InBeamPSC                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWeaponRanged::InitializeBeamFX(class UParticleSystemComponent* InBeamPSC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRanged", "InitializeBeamFX");

	Params::FortWeaponRanged_InitializeBeamFX Parms{};

	Parms.InBeamPSC = InBeamPSC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeaponRanged.ShouldSpawnBulletShellFX
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortWeaponRanged::ShouldSpawnBulletShellFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRanged", "ShouldSpawnBulletShellFX");

	Params::FortWeaponRanged_ShouldSpawnBulletShellFX Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponRanged.GetTimeToNextFire
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AFortWeaponRanged::GetTimeToNextFire() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRanged", "GetTimeToNextFire");

	Params::FortWeaponRanged_GetTimeToNextFire Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponRanged.IsUsingFirstPersonCamera
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortWeaponRanged::IsUsingFirstPersonCamera() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRanged", "IsUsingFirstPersonCamera");

	Params::FortWeaponRanged_IsUsingFirstPersonCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponRanged.IsUsingScope
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortWeaponRanged::IsUsingScope() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRanged", "IsUsingScope");

	Params::FortWeaponRanged_IsUsingScope Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponRanged.IsUsingScopeOrFirstPersonCamera
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortWeaponRanged::IsUsingScopeOrFirstPersonCamera() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRanged", "IsUsingScopeOrFirstPersonCamera");

	Params::FortWeaponRanged_IsUsingScopeOrFirstPersonCamera Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponRanged.ShouldDisplayAmmoCounter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortWeaponRanged::ShouldDisplayAmmoCounter() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRanged", "ShouldDisplayAmmoCounter");

	Params::FortWeaponRanged_ShouldDisplayAmmoCounter Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponRanged.UseScopeTargeting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortWeaponRanged::UseScopeTargeting() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRanged", "UseScopeTargeting");

	Params::FortWeaponRanged_UseScopeTargeting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeap_WannaGun.OnRep_LastHitActorClass
// (Final, Native, Private)

void AFortWeap_WannaGun::OnRep_LastHitActorClass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeap_WannaGun", "OnRep_LastHitActorClass");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeaponAttrSet.OnRep_AccumulatedWeaponChanceToNotConsumeAmmo
// (Final, Native, Public)

void UFortWeaponAttrSet::OnRep_AccumulatedWeaponChanceToNotConsumeAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponAttrSet", "OnRep_AccumulatedWeaponChanceToNotConsumeAmmo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeaponAttrSet.OnRep_CharacterItemDurabilityDecayModifier
// (Final, Native, Public)

void UFortWeaponAttrSet::OnRep_CharacterItemDurabilityDecayModifier()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponAttrSet", "OnRep_CharacterItemDurabilityDecayModifier");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeaponAttrSet.OnRep_WeaponAmmoClipSize
// (Final, Native, Public)

void UFortWeaponAttrSet::OnRep_WeaponAmmoClipSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponAttrSet", "OnRep_WeaponAmmoClipSize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeaponAttrSet.OnRep_WeaponChanceToNotConsumeAmmo
// (Final, Native, Public)

void UFortWeaponAttrSet::OnRep_WeaponChanceToNotConsumeAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponAttrSet", "OnRep_WeaponChanceToNotConsumeAmmo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeaponAttrSet.OnRep_WeaponHorizontalRecoil
// (Final, Native, Public)

void UFortWeaponAttrSet::OnRep_WeaponHorizontalRecoil()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponAttrSet", "OnRep_WeaponHorizontalRecoil");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeaponAttrSet.OnRep_WeaponRateOfFire
// (Final, Native, Public)

void UFortWeaponAttrSet::OnRep_WeaponRateOfFire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponAttrSet", "OnRep_WeaponRateOfFire");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeaponAttrSet.OnRep_WeaponReloadSpeed
// (Final, Native, Public)

void UFortWeaponAttrSet::OnRep_WeaponReloadSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponAttrSet", "OnRep_WeaponReloadSpeed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeaponAttrSet.OnRep_WeaponVerticalRecoil
// (Final, Native, Public)

void UFortWeaponAttrSet::OnRep_WeaponVerticalRecoil()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponAttrSet", "OnRep_WeaponVerticalRecoil");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWeaponRangedItemDefinition.GetBulletShellFXTemplate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UParticleSystem*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UParticleSystem* UFortWeaponRangedItemDefinition::GetBulletShellFXTemplate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRangedItemDefinition", "GetBulletShellFXTemplate");

	Params::FortWeaponRangedItemDefinition_GetBulletShellFXTemplate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponRangedItemDefinition.GetProjectileTemplate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class AFortProjectileBase>  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class AFortProjectileBase> UFortWeaponRangedItemDefinition::GetProjectileTemplate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRangedItemDefinition", "GetProjectileTemplate");

	Params::FortWeaponRangedItemDefinition_GetProjectileTemplate Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponRangedItemDefinition.ShouldSpawnBulletShellFX
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponRangedItemDefinition::ShouldSpawnBulletShellFX() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRangedItemDefinition", "ShouldSpawnBulletShellFX");

	Params::FortWeaponRangedItemDefinition_ShouldSpawnBulletShellFX Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponRangedItemDefinition.ShouldTraceThroughPawns
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponRangedItemDefinition::ShouldTraceThroughPawns() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRangedItemDefinition", "ShouldTraceThroughPawns");

	Params::FortWeaponRangedItemDefinition_ShouldTraceThroughPawns Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponRangedItemDefinition.ShouldUseNativeWeaponTrace
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponRangedItemDefinition::ShouldUseNativeWeaponTrace() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRangedItemDefinition", "ShouldUseNativeWeaponTrace");

	Params::FortWeaponRangedItemDefinition_ShouldUseNativeWeaponTrace Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponRangedItemDefinition.ShouldUsePerfectAimWhenTargetingMinSpread
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponRangedItemDefinition::ShouldUsePerfectAimWhenTargetingMinSpread() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRangedItemDefinition", "ShouldUsePerfectAimWhenTargetingMinSpread");

	Params::FortWeaponRangedItemDefinition_ShouldUsePerfectAimWhenTargetingMinSpread Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponRangedTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponRangedTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRangedTooltip", "GetNumericValue");

	Params::FortWeaponRangedTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponRangedTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponRangedTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRangedTooltip", "GetTextForToken");

	Params::FortWeaponRangedTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeaponRangedTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWeaponRangedTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeaponRangedTooltip", "GetTokenizedDescriptionText");

	Params::FortWeaponRangedTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWeatherAugment.GetWeatherTags
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FGameplayTagContainer      ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FGameplayTagContainer AFortWeatherAugment::GetWeatherTags() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWeatherAugment", "GetWeatherTags");

	Params::FortWeatherAugment_GetWeatherTags Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWindManager.BreakWindImpulseCylinder
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFortWindImpulseCylinder         InWindImpulseCylinder                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          ImpulseLocation                                        (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ImpulseInnerRadius                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ImpulseOuterRadius                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ImpulseMagnitude                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ImpulseDirection                                       (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWindManager::BreakWindImpulseCylinder(const struct FFortWindImpulseCylinder& InWindImpulseCylinder, struct FVector* ImpulseLocation, float* ImpulseInnerRadius, float* ImpulseOuterRadius, float* ImpulseMagnitude, struct FVector* ImpulseDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortWindManager", "BreakWindImpulseCylinder");

	Params::FortWindManager_BreakWindImpulseCylinder Parms{};

	Parms.InWindImpulseCylinder = std::move(InWindImpulseCylinder);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ImpulseLocation != nullptr)
		*ImpulseLocation = std::move(Parms.ImpulseLocation);

	if (ImpulseInnerRadius != nullptr)
		*ImpulseInnerRadius = Parms.ImpulseInnerRadius;

	if (ImpulseOuterRadius != nullptr)
		*ImpulseOuterRadius = Parms.ImpulseOuterRadius;

	if (ImpulseMagnitude != nullptr)
		*ImpulseMagnitude = Parms.ImpulseMagnitude;

	if (ImpulseDirection != nullptr)
		*ImpulseDirection = std::move(Parms.ImpulseDirection);
}


// Function FortniteGame.FortWindManager.BreakWindImpulseCylinderAdvanced
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FFortWindImpulseCylinder         WindImpulseCylinder                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          WindLocation                                           (Parm, OutParm, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WindInnerRadius                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WindOuterRadius                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WindWorldDirection                                     (Parm, OutParm, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WindMagnitude                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBox                             WindWorldBounds                                        (Parm, OutParm, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// bool                                    bIsWindChanging                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsWindChangePending                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWindManager::BreakWindImpulseCylinderAdvanced(const struct FFortWindImpulseCylinder& WindImpulseCylinder, struct FVector* WindLocation, float* WindInnerRadius, float* WindOuterRadius, struct FVector* WindWorldDirection, float* WindMagnitude, struct FBox* WindWorldBounds, bool* bIsWindChanging, bool* bIsWindChangePending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortWindManager", "BreakWindImpulseCylinderAdvanced");

	Params::FortWindManager_BreakWindImpulseCylinderAdvanced Parms{};

	Parms.WindImpulseCylinder = std::move(WindImpulseCylinder);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (WindLocation != nullptr)
		*WindLocation = std::move(Parms.WindLocation);

	if (WindInnerRadius != nullptr)
		*WindInnerRadius = Parms.WindInnerRadius;

	if (WindOuterRadius != nullptr)
		*WindOuterRadius = Parms.WindOuterRadius;

	if (WindWorldDirection != nullptr)
		*WindWorldDirection = std::move(Parms.WindWorldDirection);

	if (WindMagnitude != nullptr)
		*WindMagnitude = Parms.WindMagnitude;

	if (WindWorldBounds != nullptr)
		*WindWorldBounds = std::move(Parms.WindWorldBounds);

	if (bIsWindChanging != nullptr)
		*bIsWindChanging = Parms.bIsWindChanging;

	if (bIsWindChangePending != nullptr)
		*bIsWindChangePending = Parms.bIsWindChangePending;
}


// Function FortniteGame.FortWindManager.BreakWindImpulseCylinderDelta
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FFortWindImpulseCylinderDelta    WindImpulseCylinderDelta                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          WindDeltaCenter                                        (Parm, OutParm, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWindImpulseInitialized                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWindRipplesOutward                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WindDeltaSectionWidth                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WindDeltaInnerSectionRadius                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WindDeltaOuterSectionRadius                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WindDeltaMaximumRadius                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WindDeltaDesiredOverallBlendTime                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WindDeltaSectionBlendTime                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WindDeltaSectionCurrentBlendTime                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WindDeltaPreviousMagnitude                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WindDeltaSectionCurrentMagnitude                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   WindDeltaDesiredMagnitude                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBox                             WindDeltaOuterWorldBounds                              (Parm, OutParm, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// struct FBox                             WindDeltaInnerWorldBounds                              (Parm, OutParm, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// struct FBox                             WindImpulseBounds                                      (Parm, OutParm, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// struct FFortWindImpulseHandle           WindImpulseHandleToModify                              (Parm, OutParm, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)

void AFortWindManager::BreakWindImpulseCylinderDelta(const struct FFortWindImpulseCylinderDelta& WindImpulseCylinderDelta, struct FVector* WindDeltaCenter, bool* bWindImpulseInitialized, bool* bWindRipplesOutward, float* WindDeltaSectionWidth, float* WindDeltaInnerSectionRadius, float* WindDeltaOuterSectionRadius, float* WindDeltaMaximumRadius, float* WindDeltaDesiredOverallBlendTime, float* WindDeltaSectionBlendTime, float* WindDeltaSectionCurrentBlendTime, float* WindDeltaPreviousMagnitude, float* WindDeltaSectionCurrentMagnitude, float* WindDeltaDesiredMagnitude, struct FBox* WindDeltaOuterWorldBounds, struct FBox* WindDeltaInnerWorldBounds, struct FBox* WindImpulseBounds, struct FFortWindImpulseHandle* WindImpulseHandleToModify)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortWindManager", "BreakWindImpulseCylinderDelta");

	Params::FortWindManager_BreakWindImpulseCylinderDelta Parms{};

	Parms.WindImpulseCylinderDelta = std::move(WindImpulseCylinderDelta);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (WindDeltaCenter != nullptr)
		*WindDeltaCenter = std::move(Parms.WindDeltaCenter);

	if (bWindImpulseInitialized != nullptr)
		*bWindImpulseInitialized = Parms.bWindImpulseInitialized;

	if (bWindRipplesOutward != nullptr)
		*bWindRipplesOutward = Parms.bWindRipplesOutward;

	if (WindDeltaSectionWidth != nullptr)
		*WindDeltaSectionWidth = Parms.WindDeltaSectionWidth;

	if (WindDeltaInnerSectionRadius != nullptr)
		*WindDeltaInnerSectionRadius = Parms.WindDeltaInnerSectionRadius;

	if (WindDeltaOuterSectionRadius != nullptr)
		*WindDeltaOuterSectionRadius = Parms.WindDeltaOuterSectionRadius;

	if (WindDeltaMaximumRadius != nullptr)
		*WindDeltaMaximumRadius = Parms.WindDeltaMaximumRadius;

	if (WindDeltaDesiredOverallBlendTime != nullptr)
		*WindDeltaDesiredOverallBlendTime = Parms.WindDeltaDesiredOverallBlendTime;

	if (WindDeltaSectionBlendTime != nullptr)
		*WindDeltaSectionBlendTime = Parms.WindDeltaSectionBlendTime;

	if (WindDeltaSectionCurrentBlendTime != nullptr)
		*WindDeltaSectionCurrentBlendTime = Parms.WindDeltaSectionCurrentBlendTime;

	if (WindDeltaPreviousMagnitude != nullptr)
		*WindDeltaPreviousMagnitude = Parms.WindDeltaPreviousMagnitude;

	if (WindDeltaSectionCurrentMagnitude != nullptr)
		*WindDeltaSectionCurrentMagnitude = Parms.WindDeltaSectionCurrentMagnitude;

	if (WindDeltaDesiredMagnitude != nullptr)
		*WindDeltaDesiredMagnitude = Parms.WindDeltaDesiredMagnitude;

	if (WindDeltaOuterWorldBounds != nullptr)
		*WindDeltaOuterWorldBounds = std::move(Parms.WindDeltaOuterWorldBounds);

	if (WindDeltaInnerWorldBounds != nullptr)
		*WindDeltaInnerWorldBounds = std::move(Parms.WindDeltaInnerWorldBounds);

	if (WindImpulseBounds != nullptr)
		*WindImpulseBounds = std::move(Parms.WindImpulseBounds);

	if (WindImpulseHandleToModify != nullptr)
		*WindImpulseHandleToModify = std::move(Parms.WindImpulseHandleToModify);
}


// Function FortniteGame.FortWindManager.BreakWindImpulseRadius
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFortWindImpulseRadius           InWindImpulseRadius                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                          ImpulseLocation                                        (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ImpulseRadius                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ImpulseMagnitude                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ImpulseBlendTime                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWindManager::BreakWindImpulseRadius(const struct FFortWindImpulseRadius& InWindImpulseRadius, struct FVector* ImpulseLocation, float* ImpulseRadius, float* ImpulseMagnitude, float* ImpulseBlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortWindManager", "BreakWindImpulseRadius");

	Params::FortWindManager_BreakWindImpulseRadius Parms{};

	Parms.InWindImpulseRadius = std::move(InWindImpulseRadius);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ImpulseLocation != nullptr)
		*ImpulseLocation = std::move(Parms.ImpulseLocation);

	if (ImpulseRadius != nullptr)
		*ImpulseRadius = Parms.ImpulseRadius;

	if (ImpulseMagnitude != nullptr)
		*ImpulseMagnitude = Parms.ImpulseMagnitude;

	if (ImpulseBlendTime != nullptr)
		*ImpulseBlendTime = Parms.ImpulseBlendTime;
}


// Function FortniteGame.FortWindManager.GetWindManager
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortWindManager*                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortWindManager* AFortWindManager::GetWindManager(const class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortWindManager", "GetWindManager");

	Params::FortWindManager_GetWindManager Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWindManager.MakeWindImpulseCylinder
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          ImpulseLocation                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ImpulseInnerRadius                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ImpulseOuterRadius                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ImpulseMagnitude                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ImpulseDirection                                       (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortWindImpulseCylinder         ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FFortWindImpulseCylinder AFortWindManager::MakeWindImpulseCylinder(const struct FVector& ImpulseLocation, float ImpulseInnerRadius, float ImpulseOuterRadius, float ImpulseMagnitude, const struct FVector& ImpulseDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortWindManager", "MakeWindImpulseCylinder");

	Params::FortWindManager_MakeWindImpulseCylinder Parms{};

	Parms.ImpulseLocation = std::move(ImpulseLocation);
	Parms.ImpulseInnerRadius = ImpulseInnerRadius;
	Parms.ImpulseOuterRadius = ImpulseOuterRadius;
	Parms.ImpulseMagnitude = ImpulseMagnitude;
	Parms.ImpulseDirection = std::move(ImpulseDirection);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWindManager.MakeWindImpulseRadius
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          ImpulseLocation                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ImpulseRadius                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ImpulseMagnitude                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ImpulseBlendTime                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortWindImpulseRadius           ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FFortWindImpulseRadius AFortWindManager::MakeWindImpulseRadius(const struct FVector& ImpulseLocation, float ImpulseRadius, float ImpulseMagnitude, float ImpulseBlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FortWindManager", "MakeWindImpulseRadius");

	Params::FortWindManager_MakeWindImpulseRadius Parms{};

	Parms.ImpulseLocation = std::move(ImpulseLocation);
	Parms.ImpulseRadius = ImpulseRadius;
	Parms.ImpulseMagnitude = ImpulseMagnitude;
	Parms.ImpulseBlendTime = ImpulseBlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWindManager.AddWindImpulse
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortWindImpulseRadius           WindImpulse                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FFortWindImpulseHandle           ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FFortWindImpulseHandle AFortWindManager::AddWindImpulse(const struct FFortWindImpulseRadius& WindImpulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWindManager", "AddWindImpulse");

	Params::FortWindManager_AddWindImpulse Parms{};

	Parms.WindImpulse = std::move(WindImpulse);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWindManager.AddWindImpulseCylinder
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortWindImpulseCylinder         WindImpulseCylinder                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFortWindImpulseHandle           ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FFortWindImpulseHandle AFortWindManager::AddWindImpulseCylinder(const struct FFortWindImpulseCylinder& WindImpulseCylinder, float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWindManager", "AddWindImpulseCylinder");

	Params::FortWindManager_AddWindImpulseCylinder Parms{};

	Parms.WindImpulseCylinder = std::move(WindImpulseCylinder);
	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWindManager.AddWindParticleSystemComponent
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UParticleSystemComponent*         ParticleSystemComponent                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWindManager::AddWindParticleSystemComponent(class UParticleSystemComponent* ParticleSystemComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWindManager", "AddWindParticleSystemComponent");

	Params::FortWindManager_AddWindParticleSystemComponent Parms{};

	Parms.ParticleSystemComponent = ParticleSystemComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortWindManager.OnWindAudioBecameActive
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAudioComponent*                  WindAudioComp                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWindManager::OnWindAudioBecameActive(class UAudioComponent* WindAudioComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWindManager", "OnWindAudioBecameActive");

	Params::FortWindManager_OnWindAudioBecameActive Parms{};

	Parms.WindAudioComp = WindAudioComp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortWindManager.OnWindAudioBecameInactive
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UAudioComponent*                  WindAudioComp                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWindManager::OnWindAudioBecameInactive(class UAudioComponent* WindAudioComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWindManager", "OnWindAudioBecameInactive");

	Params::FortWindManager_OnWindAudioBecameInactive Parms{};

	Parms.WindAudioComp = WindAudioComp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortWindManager.OnWindImpulseCylinderCreation
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortWindImpulseCylinder         WindImpulseCylinder                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FFortWindImpulseCylinderDelta    WindImpulseCylinderDelta                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortWindManager::OnWindImpulseCylinderCreation(const struct FFortWindImpulseCylinder& WindImpulseCylinder, const struct FFortWindImpulseCylinderDelta& WindImpulseCylinderDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWindManager", "OnWindImpulseCylinderCreation");

	Params::FortWindManager_OnWindImpulseCylinderCreation Parms{};

	Parms.WindImpulseCylinder = std::move(WindImpulseCylinder);
	Parms.WindImpulseCylinderDelta = std::move(WindImpulseCylinderDelta);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortWindManager.OnWindImpulseCylinderDeath
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortWindImpulseCylinder         WindImpulseCylinder                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortWindManager::OnWindImpulseCylinderDeath(const struct FFortWindImpulseCylinder& WindImpulseCylinder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWindManager", "OnWindImpulseCylinderDeath");

	Params::FortWindManager_OnWindImpulseCylinderDeath Parms{};

	Parms.WindImpulseCylinder = std::move(WindImpulseCylinder);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortWindManager.OnWindImpulseCylinderDeltaComplete
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FFortWindImpulseCylinder         WindImpulseCylinder                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void AFortWindManager::OnWindImpulseCylinderDeltaComplete(const struct FFortWindImpulseCylinder& WindImpulseCylinder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWindManager", "OnWindImpulseCylinderDeltaComplete");

	Params::FortWindManager_OnWindImpulseCylinderDeltaComplete Parms{};

	Parms.WindImpulseCylinder = std::move(WindImpulseCylinder);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortWindManager.OnWorldReady
// (Event, Public, BlueprintEvent)

void AFortWindManager::OnWorldReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWindManager", "OnWorldReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.FortWindManager.RemoveWindImpulse
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortWindImpulseHandle           ImpulseHandle                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWindManager::RemoveWindImpulse(const struct FFortWindImpulseHandle& ImpulseHandle, float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWindManager", "RemoveWindImpulse");

	Params::FortWindManager_RemoveWindImpulse Parms{};

	Parms.ImpulseHandle = std::move(ImpulseHandle);
	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortWindManager.RemoveWindParticleSystemComponent
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UParticleSystemComponent*         ParticleSystemComponent                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWindManager::RemoveWindParticleSystemComponent(class UParticleSystemComponent* ParticleSystemComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWindManager", "RemoveWindParticleSystemComponent");

	Params::FortWindManager_RemoveWindParticleSystemComponent Parms{};

	Parms.ParticleSystemComponent = ParticleSystemComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FortWindManager.SetWindImpulse
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortWindImpulseHandle           ImpulseHandle                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FFortWindImpulseRadius           WindImpulse                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortWindManager::SetWindImpulse(const struct FFortWindImpulseHandle& ImpulseHandle, const struct FFortWindImpulseRadius& WindImpulse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWindManager", "SetWindImpulse");

	Params::FortWindManager_SetWindImpulse Parms{};

	Parms.ImpulseHandle = std::move(ImpulseHandle);
	Parms.WindImpulse = std::move(WindImpulse);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWindManager.SetWindImpulseCylinderMagnitude
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFortWindImpulseHandle           ImpulseHandle                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                                   NewMagnitude                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   BlendTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortWindManager::SetWindImpulseCylinderMagnitude(const struct FFortWindImpulseHandle& ImpulseHandle, float NewMagnitude, float BlendTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWindManager", "SetWindImpulseCylinderMagnitude");

	Params::FortWindManager_SetWindImpulseCylinderMagnitude Parms{};

	Parms.ImpulseHandle = std::move(ImpulseHandle);
	Parms.NewMagnitude = NewMagnitude;
	Parms.BlendTime = BlendTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWindManager.GetCurrentWindImpulseCylinderDelta
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortWindImpulseCylinder         WindImpulseCylinder                                    (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FFortWindImpulseCylinderDelta    WindImpulseCylinderDelta                               (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortWindManager::GetCurrentWindImpulseCylinderDelta(struct FFortWindImpulseCylinder* WindImpulseCylinder, struct FFortWindImpulseCylinderDelta* WindImpulseCylinderDelta) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWindManager", "GetCurrentWindImpulseCylinderDelta");

	Params::FortWindManager_GetCurrentWindImpulseCylinderDelta Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (WindImpulseCylinder != nullptr)
		*WindImpulseCylinder = std::move(Parms.WindImpulseCylinder);

	if (WindImpulseCylinderDelta != nullptr)
		*WindImpulseCylinderDelta = std::move(Parms.WindImpulseCylinderDelta);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWindManager.GetGlobalWindIntensityAndDirection
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, Const)
// Parameters:
// float                                   WindIntensity                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WindDirection                                          (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AFortWindManager::GetGlobalWindIntensityAndDirection(float* WindIntensity, struct FVector* WindDirection) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWindManager", "GetGlobalWindIntensityAndDirection");

	Params::FortWindManager_GetGlobalWindIntensityAndDirection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (WindIntensity != nullptr)
		*WindIntensity = Parms.WindIntensity;

	if (WindDirection != nullptr)
		*WindDirection = std::move(Parms.WindDirection);
}


// Function FortniteGame.FortWindManager.GetWindLocationFromWorldLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          WorldLocation                                          (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WindWorldLocation                                      (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortWindManager::GetWindLocationFromWorldLocation(const struct FVector& WorldLocation, struct FVector* WindWorldLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWindManager", "GetWindLocationFromWorldLocation");

	Params::FortWindManager_GetWindLocationFromWorldLocation Parms{};

	Parms.WorldLocation = std::move(WorldLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (WindWorldLocation != nullptr)
		*WindWorldLocation = std::move(Parms.WindWorldLocation);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWindManager.HasWindImpulse
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FFortWindImpulseHandle           WindImpulseHandle                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AFortWindManager::HasWindImpulse(const struct FFortWindImpulseHandle& WindImpulseHandle) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWindManager", "HasWindImpulse");

	Params::FortWindManager_HasWindImpulse Parms{};

	Parms.WindImpulseHandle = std::move(WindImpulseHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWorkerTooltip.GetNumericValue
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   OutVal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWorkerTooltip::GetNumericValue(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, float* OutVal) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorkerTooltip", "GetNumericValue");

	Params::FortWorkerTooltip_GetNumericValue Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutVal != nullptr)
		*OutVal = Parms.OutVal;

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWorkerTooltip.GetTextForToken
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Token                                                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             OutText                                                (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWorkerTooltip::GetTextForToken(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, const struct FGameplayTag& Token, class FText* OutText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorkerTooltip", "GetTextForToken");

	Params::FortWorkerTooltip_GetTextForToken Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;
	Parms.Token = std::move(Token);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutText != nullptr)
		*OutText = std::move(Parms.OutText);

	return Parms.ReturnValue;
}


// Function FortniteGame.FortWorkerTooltip.GetTokenizedDescriptionText
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ObjectToDescribe                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTag                     Tag                                                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortTooltipContext*              Context                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     OutDescription                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UFortWorkerTooltip::GetTokenizedDescriptionText(const class UObject* ObjectToDescribe, const struct FGameplayTag& Tag, const class UFortTooltipContext* Context, TArray<class FText>* OutDescription) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortWorkerTooltip", "GetTokenizedDescriptionText");

	Params::FortWorkerTooltip_GetTokenizedDescriptionText Parms{};

	Parms.ObjectToDescribe = ObjectToDescribe;
	Parms.Tag = std::move(Tag);
	Parms.Context = Context;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutDescription != nullptr)
		*OutDescription = std::move(Parms.OutDescription);

	return Parms.ReturnValue;
}


// Function FortniteGame.FrontendAnimInstance.OnPlayMontageFromGameplayTagQuery
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGameplayTagQuery                MatchingQuery                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UAnimMontage*                     MontagePlaying                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFrontendAnimInstance::OnPlayMontageFromGameplayTagQuery(const struct FGameplayTagQuery& MatchingQuery, class UAnimMontage* MontagePlaying)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontendAnimInstance", "OnPlayMontageFromGameplayTagQuery");

	Params::FrontendAnimInstance_OnPlayMontageFromGameplayTagQuery Parms{};

	Parms.MatchingQuery = std::move(MatchingQuery);
	Parms.MontagePlaying = MontagePlaying;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.FrontendAnimInstance.PlayIntro
// (Final, Native, Public, BlueprintCallable)

void UFrontendAnimInstance::PlayIntro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontendAnimInstance", "PlayIntro");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FrontendAnimInstance.PlayOutro
// (Final, Native, Public, BlueprintCallable)

void UFrontendAnimInstance::PlayOutro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontendAnimInstance", "PlayOutro");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FrontendAnimInstance.PlaySelected
// (Final, Native, Public, BlueprintCallable)

void UFrontendAnimInstance::PlaySelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FrontendAnimInstance", "PlaySelected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.HoverDronePawn.GetAltitude
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AHoverDronePawn::GetAltitude() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HoverDronePawn", "GetAltitude");

	Params::HoverDronePawn_GetAltitude Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.HoverDronePawn.IsMaintainingConstantAltitude
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AHoverDronePawn::IsMaintainingConstantAltitude() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HoverDronePawn", "IsMaintainingConstantAltitude");

	Params::HoverDronePawn_IsMaintainingConstantAltitude Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.KeepHeartBase.IsKeepLoaded
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AKeepHeartBase::IsKeepLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeartBase", "IsKeepLoaded");

	Params::KeepHeartBase_IsKeepLoaded Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.KeepHeartBase.IsKeepOwner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AKeepHeartBase::IsKeepOwner(const class AFortPlayerController* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeartBase", "IsKeepOwner");

	Params::KeepHeartBase_IsKeepOwner Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.KeepHeartBase.LoadUserKeep
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKeepHeartBase::LoadUserKeep(class AFortPlayerController* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeartBase", "LoadUserKeep");

	Params::KeepHeartBase_LoadUserKeep Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.KeepHeartBase.ResetUserKeep
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AKeepHeartBase::ResetUserKeep(class AFortPlayerController* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeartBase", "ResetUserKeep");

	Params::KeepHeartBase_ResetUserKeep Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.KeepHeartBase.SaveUserKeep
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AKeepHeartBase::SaveUserKeep(class AFortPlayerController* FortPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeartBase", "SaveUserKeep");

	Params::KeepHeartBase_SaveUserKeep Parms{};

	Parms.FortPC = FortPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.KeepHeartBase.SetAllowLooting
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAllowed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKeepHeartBase::SetAllowLooting(bool bAllowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeartBase", "SetAllowLooting");

	Params::KeepHeartBase_SetAllowLooting Parms{};

	Parms.bAllowed = bAllowed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.KeepHeart.DelayedVoteSuccess
// (Final, Native, Public)

void AKeepHeart::DelayedVoteSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "DelayedVoteSuccess");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.KeepHeart.DestroyNonPermaniteStructures
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AKeepHeart::DestroyNonPermaniteStructures()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "DestroyNonPermaniteStructures");

	Params::KeepHeart_DestroyNonPermaniteStructures Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.KeepHeart.GetAveragePermaniteLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AKeepHeart::GetAveragePermaniteLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "GetAveragePermaniteLevel");

	Params::KeepHeart_GetAveragePermaniteLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.KeepHeart.GetUpgradeAllPermaniteCost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bQuickUpgrade                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AKeepHeart::GetUpgradeAllPermaniteCost(class AFortPlayerController* FortPC, bool bQuickUpgrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "GetUpgradeAllPermaniteCost");

	Params::KeepHeart_GetUpgradeAllPermaniteCost Parms{};

	Parms.FortPC = FortPC;
	Parms.bQuickUpgrade = bQuickUpgrade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.KeepHeart.GetWorldStreamingInProgress
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AKeepHeart::GetWorldStreamingInProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "GetWorldStreamingInProgress");

	Params::KeepHeart_GetWorldStreamingInProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.KeepHeart.HandleVoteComplete
// (Final, Native, Public)
// Parameters:
// bool                                    bResult                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKeepHeart::HandleVoteComplete(bool bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "HandleVoteComplete");

	Params::KeepHeart_HandleVoteComplete Parms{};

	Parms.bResult = bResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.KeepHeart.IsWorldStreamedIn
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AKeepHeart::IsWorldStreamedIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "IsWorldStreamedIn");

	Params::KeepHeart_IsWorldStreamedIn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.KeepHeart.IsWorldStreamingIn
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AKeepHeart::IsWorldStreamingIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "IsWorldStreamingIn");

	Params::KeepHeart_IsWorldStreamingIn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.KeepHeart.NotifyEncounterEnded
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAIEncounterInfo*             EndedEncounter                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKeepHeart::NotifyEncounterEnded(class UFortAIEncounterInfo* EndedEncounter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "NotifyEncounterEnded");

	Params::KeepHeart_NotifyEncounterEnded Parms{};

	Parms.EndedEncounter = EndedEncounter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.KeepHeart.NotifyEncounterStarted
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class UFortAIEncounterInfo*             StartedEncounter                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKeepHeart::NotifyEncounterStarted(class UFortAIEncounterInfo* StartedEncounter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "NotifyEncounterStarted");

	Params::KeepHeart_NotifyEncounterStarted Parms{};

	Parms.StartedEncounter = StartedEncounter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.KeepHeart.OnDefenseLevelChanged
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AKeepHeart::OnDefenseLevelChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "OnDefenseLevelChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.KeepHeart.OnVoteComplete
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bResult                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKeepHeart::OnVoteComplete(bool bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "OnVoteComplete");

	Params::KeepHeart_OnVoteComplete Parms{};

	Parms.bResult = bResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.KeepHeart.OnWorldStreamedIn
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)

void AKeepHeart::OnWorldStreamedIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "OnWorldStreamedIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.KeepHeart.ResetContainers
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AKeepHeart::ResetContainers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "ResetContainers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.KeepHeart.RestoreContainers
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AKeepHeart::RestoreContainers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "RestoreContainers");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.KeepHeart.RestoreKeepHealth
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AKeepHeart::RestoreKeepHealth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "RestoreKeepHealth");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.KeepHeart.SetPermaniteAvailability
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAvailable                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKeepHeart::SetPermaniteAvailability(bool bAvailable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "SetPermaniteAvailability");

	Params::KeepHeart_SetPermaniteAvailability Parms{};

	Parms.bAvailable = bAvailable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.KeepHeart.StartVote
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             VoteText                                               (Parm, NativeAccessSpecifierPublic)
// class FText                             YesText                                                (Parm, NativeAccessSpecifierPublic)
// class FText                             NoText                                                 (Parm, NativeAccessSpecifierPublic)
// float                                   PercentageToPass                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSkipIfOnePlayerOnly                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AKeepHeart::StartVote(const class FText& VoteText, const class FText& YesText, const class FText& NoText, float PercentageToPass, bool bSkipIfOnePlayerOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "StartVote");

	Params::KeepHeart_StartVote Parms{};

	Parms.VoteText = std::move(VoteText);
	Parms.YesText = std::move(YesText);
	Parms.NoText = std::move(NoText);
	Parms.PercentageToPass = PercentageToPass;
	Parms.bSkipIfOnePlayerOnly = bSkipIfOnePlayerOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.KeepHeart.StreamInWorld
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AKeepHeart::StreamInWorld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "StreamInWorld");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.KeepHeart.StreamOutWorld
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)

void AKeepHeart::StreamOutWorld()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "StreamOutWorld");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.KeepHeart.UpgradeAllPermaniteStructures
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            FortPC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bQuickUpgrade                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AKeepHeart::UpgradeAllPermaniteStructures(class AFortPlayerController* FortPC, bool bQuickUpgrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "UpgradeAllPermaniteStructures");

	Params::KeepHeart_UpgradeAllPermaniteStructures Parms{};

	Parms.FortPC = FortPC;
	Parms.bQuickUpgrade = bQuickUpgrade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.KeepHeart.GetDefenseLevel
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AKeepHeart::GetDefenseLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "GetDefenseLevel");

	Params::KeepHeart_GetDefenseLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.KeepHeart.IsDefenseActive
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AKeepHeart::IsDefenseActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("KeepHeart", "IsDefenseActive");

	Params::KeepHeart_IsDefenseActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FortniteGame.ManorHeart.TravelToNewWorld
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           NewTheaterId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AManorHeart::TravelToNewWorld(const class FString& NewTheaterId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ManorHeart", "TravelToNewWorld");

	Params::ManorHeart_TravelToNewWorld Parms{};

	Parms.NewTheaterId = std::move(NewTheaterId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.ManorPortal.BlueprintOnUnlockPortalComplete
// (Event, Public, BlueprintEvent)

void AManorPortal::BlueprintOnUnlockPortalComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ManorPortal", "BlueprintOnUnlockPortalComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.ManorPortal.GetCurrencyCost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AManorPortal::GetCurrencyCost(class AFortPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ManorPortal", "GetCurrencyCost");

	Params::ManorPortal_GetCurrencyCost Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.ManorPortal.GetPlayerCurrencyAmount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AManorPortal::GetPlayerCurrencyAmount(class AFortPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ManorPortal", "GetPlayerCurrencyAmount");

	Params::ManorPortal_GetPlayerCurrencyAmount Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.ManorPortal.IsPortalUnlocked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AManorPortal::IsPortalUnlocked(class AFortPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ManorPortal", "IsPortalUnlocked");

	Params::ManorPortal_IsPortalUnlocked Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.ManorPortal.IsProfileValidToReadPortalAvailability
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AManorPortal::IsProfileValidToReadPortalAvailability(class AFortPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ManorPortal", "IsProfileValidToReadPortalAvailability");

	Params::ManorPortal_IsProfileValidToReadPortalAvailability Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.ManorPortal.OpenUnlockMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AManorPortal::OpenUnlockMenu(class AFortPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ManorPortal", "OpenUnlockMenu");

	Params::ManorPortal_OpenUnlockMenu Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.ManorPortal.UnlockPortal
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            Player                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AManorPortal::UnlockPortal(class AFortPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ManorPortal", "UnlockPortal");

	Params::ManorPortal_UnlockPortal Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.FortItemCollectedParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UFortWorldItemDefinition*         _CollectedItemDefinition                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            _CollectedBy                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _AmountCollected                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCollectedParams::BreakParams(class UFortWorldItemDefinition** _CollectedItemDefinition, class AFortPlayerController** _CollectedBy, int32* _AmountCollected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCollectedParams", "BreakParams");

	Params::FortItemCollectedParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_CollectedItemDefinition != nullptr)
		*_CollectedItemDefinition = Parms._CollectedItemDefinition;

	if (_CollectedBy != nullptr)
		*_CollectedBy = Parms._CollectedBy;

	if (_AmountCollected != nullptr)
		*_AmountCollected = Parms._AmountCollected;
}


// Function FortniteGame.FortItemCollectedParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortWorldItemDefinition*         _CollectedItemDefinition                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            _CollectedBy                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   _AmountCollected                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortItemCollectedParams*         ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortItemCollectedParams::SetParams(const class UFortWorldItemDefinition* _CollectedItemDefinition, class AFortPlayerController* _CollectedBy, int32 _AmountCollected, class UFortItemCollectedParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortItemCollectedParams", "SetParams");

	Params::FortItemCollectedParams_SetParams Parms{};

	Parms._CollectedItemDefinition = _CollectedItemDefinition;
	Parms._CollectedBy = _CollectedBy;
	Parms._AmountCollected = _AmountCollected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortEnemyKilledParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPawn*                        _KilledPawn                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            _KilledBy                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortEnemyKilledParams::BreakParams(class AFortPawn** _KilledPawn, class AFortPlayerController** _KilledBy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortEnemyKilledParams", "BreakParams");

	Params::FortEnemyKilledParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_KilledPawn != nullptr)
		*_KilledPawn = Parms._KilledPawn;

	if (_KilledBy != nullptr)
		*_KilledBy = Parms._KilledBy;
}


// Function FortniteGame.FortEnemyKilledParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPawn*                        _KilledPawn                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            _KilledBy                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortEnemyKilledParams*           ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortEnemyKilledParams::SetParams(class AFortPawn* _KilledPawn, class AFortPlayerController* _KilledBy, class UFortEnemyKilledParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortEnemyKilledParams", "SetParams");

	Params::FortEnemyKilledParams_SetParams Parms{};

	Parms._KilledPawn = _KilledPawn;
	Parms._KilledBy = _KilledBy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortEnemyDamagedParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPawn*                        _DamagedPawn                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            _DamagedBy                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _DamageAmount                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortEnemyDamagedParams::BreakParams(class AFortPawn** _DamagedPawn, class AFortPlayerController** _DamagedBy, float* _DamageAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortEnemyDamagedParams", "BreakParams");

	Params::FortEnemyDamagedParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_DamagedPawn != nullptr)
		*_DamagedPawn = Parms._DamagedPawn;

	if (_DamagedBy != nullptr)
		*_DamagedBy = Parms._DamagedBy;

	if (_DamageAmount != nullptr)
		*_DamageAmount = Parms._DamageAmount;
}


// Function FortniteGame.FortEnemyDamagedParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPawn*                        _DamagedPawn                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            _DamagedBy                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _DamageAmount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortEnemyDamagedParams*          ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortEnemyDamagedParams::SetParams(class AFortPawn* _DamagedPawn, class AFortPlayerController* _DamagedBy, float _DamageAmount, class UFortEnemyDamagedParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortEnemyDamagedParams", "SetParams");

	Params::FortEnemyDamagedParams_SetParams Parms{};

	Parms._DamagedPawn = _DamagedPawn;
	Parms._DamagedBy = _DamagedBy;
	Parms._DamageAmount = _DamageAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortNewPlayerParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerController*            _NewPlayerController                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortNewPlayerParams::BreakParams(class AFortPlayerController** _NewPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNewPlayerParams", "BreakParams");

	Params::FortNewPlayerParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_NewPlayerController != nullptr)
		*_NewPlayerController = Parms._NewPlayerController;
}


// Function FortniteGame.FortNewPlayerParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            _NewPlayerController                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortNewPlayerParams*             ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortNewPlayerParams::SetParams(class AFortPlayerController* _NewPlayerController, class UFortNewPlayerParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortNewPlayerParams", "SetParams");

	Params::FortNewPlayerParams_SetParams Parms{};

	Parms._NewPlayerController = _NewPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortPlayerExitParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerController*            _ExitingPlayerController                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerExitParams::BreakParams(class AFortPlayerController** _ExitingPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerExitParams", "BreakParams");

	Params::FortPlayerExitParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_ExitingPlayerController != nullptr)
		*_ExitingPlayerController = Parms._ExitingPlayerController;
}


// Function FortniteGame.FortPlayerExitParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            _ExitingPlayerController                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortPlayerExitParams*            ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerExitParams::SetParams(class AFortPlayerController* _ExitingPlayerController, class UFortPlayerExitParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerExitParams", "SetParams");

	Params::FortPlayerExitParams_SetParams Parms{};

	Parms._ExitingPlayerController = _ExitingPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortPlayerSpawnedParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerController*            _SpawnedPlayerController                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerSpawnedParams::BreakParams(class AFortPlayerController** _SpawnedPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerSpawnedParams", "BreakParams");

	Params::FortPlayerSpawnedParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_SpawnedPlayerController != nullptr)
		*_SpawnedPlayerController = Parms._SpawnedPlayerController;
}


// Function FortniteGame.FortPlayerSpawnedParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            _SpawnedPlayerController                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortPlayerSpawnedParams*         ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerSpawnedParams::SetParams(class AFortPlayerController* _SpawnedPlayerController, class UFortPlayerSpawnedParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerSpawnedParams", "SetParams");

	Params::FortPlayerSpawnedParams_SetParams Parms{};

	Parms._SpawnedPlayerController = _SpawnedPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortPlayerDBNORevivedParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerPawn*                  _RevivedPlayer                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _RevivedBy                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerDBNORevivedParams::BreakParams(class AFortPlayerPawn** _RevivedPlayer, class AController** _RevivedBy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerDBNORevivedParams", "BreakParams");

	Params::FortPlayerDBNORevivedParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_RevivedPlayer != nullptr)
		*_RevivedPlayer = Parms._RevivedPlayer;

	if (_RevivedBy != nullptr)
		*_RevivedBy = Parms._RevivedBy;
}


// Function FortniteGame.FortPlayerDBNORevivedParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerPawn*                  _RevivedPlayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _RevivedBy                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortPlayerDBNORevivedParams*     ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerDBNORevivedParams::SetParams(class AFortPlayerPawn* _RevivedPlayer, class AController* _RevivedBy, class UFortPlayerDBNORevivedParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerDBNORevivedParams", "SetParams");

	Params::FortPlayerDBNORevivedParams_SetParams Parms{};

	Parms._RevivedPlayer = _RevivedPlayer;
	Parms._RevivedBy = _RevivedBy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortDayPhaseChangeParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortTimeOfDayManager*            _LightingAndFogManager                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDayPhase                           _NewDayPhase                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDayPhaseChangeParams::BreakParams(class AFortTimeOfDayManager** _LightingAndFogManager, EFortDayPhase* _NewDayPhase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDayPhaseChangeParams", "BreakParams");

	Params::FortDayPhaseChangeParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_LightingAndFogManager != nullptr)
		*_LightingAndFogManager = Parms._LightingAndFogManager;

	if (_NewDayPhase != nullptr)
		*_NewDayPhase = Parms._NewDayPhase;
}


// Function FortniteGame.FortDayPhaseChangeParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortTimeOfDayManager*            _LightingAndFogManager                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortDayPhase                           _NewDayPhase                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortDayPhaseChangeParams*        ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortDayPhaseChangeParams::SetParams(class AFortTimeOfDayManager* _LightingAndFogManager, EFortDayPhase _NewDayPhase, class UFortDayPhaseChangeParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortDayPhaseChangeParams", "SetParams");

	Params::FortDayPhaseChangeParams_SetParams Parms{};

	Parms._LightingAndFogManager = _LightingAndFogManager;
	Parms._NewDayPhase = _NewDayPhase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortPlayerBuiltParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class ABuildingActor*                   _Building                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortBuildingType                       _BuildingType                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            _Builder                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerBuiltParams::BreakParams(class ABuildingActor** _Building, EFortBuildingType* _BuildingType, class AFortPlayerController** _Builder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerBuiltParams", "BreakParams");

	Params::FortPlayerBuiltParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_Building != nullptr)
		*_Building = Parms._Building;

	if (_BuildingType != nullptr)
		*_BuildingType = Parms._BuildingType;

	if (_Builder != nullptr)
		*_Builder = Parms._Builder;
}


// Function FortniteGame.FortPlayerBuiltParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ABuildingActor*                   _Building                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortBuildingType                       _BuildingType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AFortPlayerController*            _Builder                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortPlayerBuiltParams*           ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortPlayerBuiltParams::SetParams(class ABuildingActor* _Building, EFortBuildingType _BuildingType, class AFortPlayerController* _Builder, class UFortPlayerBuiltParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortPlayerBuiltParams", "SetParams");

	Params::FortPlayerBuiltParams_SetParams Parms{};

	Parms._Building = _Building;
	Parms._BuildingType = _BuildingType;
	Parms._Builder = _Builder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortBuildingDestroyedParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class ABuildingActor*                   _Building                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortBuildingType                       _BuildingType                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _Destroyer                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBuildingDestroyedParams::BreakParams(class ABuildingActor** _Building, EFortBuildingType* _BuildingType, class AController** _Destroyer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBuildingDestroyedParams", "BreakParams");

	Params::FortBuildingDestroyedParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_Building != nullptr)
		*_Building = Parms._Building;

	if (_BuildingType != nullptr)
		*_BuildingType = Parms._BuildingType;

	if (_Destroyer != nullptr)
		*_Destroyer = Parms._Destroyer;
}


// Function FortniteGame.FortBuildingDestroyedParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ABuildingActor*                   _Building                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortBuildingType                       _BuildingType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _Destroyer                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortBuildingDestroyedParams*     ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBuildingDestroyedParams::SetParams(class ABuildingActor* _Building, EFortBuildingType _BuildingType, class AController* _Destroyer, class UFortBuildingDestroyedParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBuildingDestroyedParams", "SetParams");

	Params::FortBuildingDestroyedParams_SetParams Parms{};

	Parms._Building = _Building;
	Parms._BuildingType = _BuildingType;
	Parms._Destroyer = _Destroyer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortBuildingDamagedParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class ABuildingActor*                   _Building                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortBuildingType                       _BuildingType                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _DamagedBy                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _DamageAmount                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBuildingDamagedParams::BreakParams(class ABuildingActor** _Building, EFortBuildingType* _BuildingType, class AController** _DamagedBy, float* _DamageAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBuildingDamagedParams", "BreakParams");

	Params::FortBuildingDamagedParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_Building != nullptr)
		*_Building = Parms._Building;

	if (_BuildingType != nullptr)
		*_BuildingType = Parms._BuildingType;

	if (_DamagedBy != nullptr)
		*_DamagedBy = Parms._DamagedBy;

	if (_DamageAmount != nullptr)
		*_DamageAmount = Parms._DamageAmount;
}


// Function FortniteGame.FortBuildingDamagedParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class ABuildingActor*                   _Building                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFortBuildingType                       _BuildingType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      _DamagedBy                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   _DamageAmount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortBuildingDamagedParams*       ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortBuildingDamagedParams::SetParams(class ABuildingActor* _Building, EFortBuildingType _BuildingType, class AController* _DamagedBy, float _DamageAmount, class UFortBuildingDamagedParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortBuildingDamagedParams", "SetParams");

	Params::FortBuildingDamagedParams_SetParams Parms{};

	Parms._Building = _Building;
	Parms._BuildingType = _BuildingType;
	Parms._DamagedBy = _DamagedBy;
	Parms._DamageAmount = _DamageAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortMissionForceSuccessParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// float                                   _FractionCompleted                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionForceSuccessParams::BreakParams(float* _FractionCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionForceSuccessParams", "BreakParams");

	Params::FortMissionForceSuccessParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_FractionCompleted != nullptr)
		*_FractionCompleted = Parms._FractionCompleted;
}


// Function FortniteGame.FortMissionForceSuccessParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                                   _FractionCompleted                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortMissionForceSuccessParams*   ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionForceSuccessParams::SetParams(float _FractionCompleted, class UFortMissionForceSuccessParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionForceSuccessParams", "SetParams");

	Params::FortMissionForceSuccessParams_SetParams Parms{};

	Parms._FractionCompleted = _FractionCompleted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortMissionNeutralCompleteParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortMission*                     _NeutrallyCompletedMission                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionNeutralCompleteParams::BreakParams(class AFortMission** _NeutrallyCompletedMission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionNeutralCompleteParams", "BreakParams");

	Params::FortMissionNeutralCompleteParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_NeutrallyCompletedMission != nullptr)
		*_NeutrallyCompletedMission = Parms._NeutrallyCompletedMission;
}


// Function FortniteGame.FortMissionNeutralCompleteParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortMission*                     _NeutrallyCompletedMission                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortMissionNeutralCompleteParams*ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortMissionNeutralCompleteParams::SetParams(class AFortMission* _NeutrallyCompletedMission, class UFortMissionNeutralCompleteParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortMissionNeutralCompleteParams", "SetParams");

	Params::FortMissionNeutralCompleteParams_SetParams Parms{};

	Parms._NeutrallyCompletedMission = _NeutrallyCompletedMission;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortObjectiveSucceededParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortObjectiveBase*               _SucceededObjective                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortObjectiveSucceededParams::BreakParams(class AFortObjectiveBase** _SucceededObjective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveSucceededParams", "BreakParams");

	Params::FortObjectiveSucceededParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_SucceededObjective != nullptr)
		*_SucceededObjective = Parms._SucceededObjective;
}


// Function FortniteGame.FortObjectiveSucceededParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortObjectiveBase*               _SucceededObjective                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortObjectiveSucceededParams*    ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortObjectiveSucceededParams::SetParams(class AFortObjectiveBase* _SucceededObjective, class UFortObjectiveSucceededParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveSucceededParams", "SetParams");

	Params::FortObjectiveSucceededParams_SetParams Parms{};

	Parms._SucceededObjective = _SucceededObjective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortObjectiveFailedParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortObjectiveBase*               _FailedObjective                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortObjectiveFailedParams::BreakParams(class AFortObjectiveBase** _FailedObjective)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveFailedParams", "BreakParams");

	Params::FortObjectiveFailedParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_FailedObjective != nullptr)
		*_FailedObjective = Parms._FailedObjective;
}


// Function FortniteGame.FortObjectiveFailedParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortObjectiveBase*               _FailedObjective                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortObjectiveFailedParams*       ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortObjectiveFailedParams::SetParams(class AFortObjectiveBase* _FailedObjective, class UFortObjectiveFailedParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortObjectiveFailedParams", "SetParams");

	Params::FortObjectiveFailedParams_SetParams Parms{};

	Parms._FailedObjective = _FailedObjective;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortToggledCursorModeParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerController*            _PlayerThatToggledCursorMode                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InCursorMode                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortToggledCursorModeParams::BreakParams(class AFortPlayerController** _PlayerThatToggledCursorMode, bool* InCursorMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortToggledCursorModeParams", "BreakParams");

	Params::FortToggledCursorModeParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_PlayerThatToggledCursorMode != nullptr)
		*_PlayerThatToggledCursorMode = Parms._PlayerThatToggledCursorMode;

	if (InCursorMode != nullptr)
		*InCursorMode = Parms.InCursorMode;
}


// Function FortniteGame.FortToggledCursorModeParams.SetParams
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AFortPlayerController*            _PlayerThatToggledCursorMode                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InCursorMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFortToggledCursorModeParams*     ThisParam                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortToggledCursorModeParams::SetParams(class AFortPlayerController* _PlayerThatToggledCursorMode, bool InCursorMode, class UFortToggledCursorModeParams** ThisParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortToggledCursorModeParams", "SetParams");

	Params::FortToggledCursorModeParams_SetParams Parms{};

	Parms._PlayerThatToggledCursorMode = _PlayerThatToggledCursorMode;
	Parms.InCursorMode = InCursorMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ThisParam != nullptr)
		*ThisParam = Parms.ThisParam;
}


// Function FortniteGame.FortStartLeavingZoneParams.BreakParams
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class AFortPlayerPawn*                  _PlayerRequestingLeaving                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFortStartLeavingZoneParams::BreakParams(class AFortPlayerPawn** _PlayerRequestingLeaving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FortStartLeavingZoneParams", "BreakParams");

	Params::FortStartLeavingZoneParams_BreakParams Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (_PlayerRequestingLeaving != nullptr)
		*_PlayerRequestingLeaving = Parms._PlayerRequestingLeaving;
}


// Function FortniteGame.PartyDisplayManager.BeginLoadingAssetsForItem
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UFortItem*                        ItemToView                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<TSoftObjectPtr<class UObject>>   AssetsToLoad                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, UObjectWrapper, NativeAccessSpecifierPublic)

void APartyDisplayManager::BeginLoadingAssetsForItem(class UFortItem* ItemToView, const TArray<TSoftObjectPtr<class UObject>>& AssetsToLoad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyDisplayManager", "BeginLoadingAssetsForItem");

	Params::PartyDisplayManager_BeginLoadingAssetsForItem Parms{};

	Parms.ItemToView = ItemToView;
	Parms.AssetsToLoad = std::move(AssetsToLoad);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.PartyDisplayManager.GetHeroPlayerPawnForCurrentDisplayedItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AFortPlayerPawn*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AFortPlayerPawn* APartyDisplayManager::GetHeroPlayerPawnForCurrentDisplayedItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyDisplayManager", "GetHeroPlayerPawnForCurrentDisplayedItem");

	Params::PartyDisplayManager_GetHeroPlayerPawnForCurrentDisplayedItem Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function FortniteGame.PartyDisplayManager.GetMeshForCurrentDisplayedItem
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UMeshComponent*                   OutDisplayedMesh                                       (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APartyDisplayManager::GetMeshForCurrentDisplayedItem(class UMeshComponent** OutDisplayedMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyDisplayManager", "GetMeshForCurrentDisplayedItem");

	Params::PartyDisplayManager_GetMeshForCurrentDisplayedItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutDisplayedMesh != nullptr)
		*OutDisplayedMesh = Parms.OutDisplayedMesh;
}


// Function FortniteGame.PartyDisplayManager.HandleLoadingAssetsForItemCompleted
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UFortItem*                        ItemWhoseAssetsWereLoaded                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UObject*>                  LoadedAssets                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void APartyDisplayManager::HandleLoadingAssetsForItemCompleted(class UFortItem* ItemWhoseAssetsWereLoaded, const TArray<class UObject*>& LoadedAssets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyDisplayManager", "HandleLoadingAssetsForItemCompleted");

	Params::PartyDisplayManager_HandleLoadingAssetsForItemCompleted Parms{};

	Parms.ItemWhoseAssetsWereLoaded = ItemWhoseAssetsWereLoaded;
	Parms.LoadedAssets = std::move(LoadedAssets);

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.PartyDisplayManager.HideLoading
// (Event, Public, BlueprintEvent)

void APartyDisplayManager::HideLoading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyDisplayManager", "HideLoading");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.PartyDisplayManager.OnPawnBeginCursorOver
// (Final, Native, Protected)
// Parameters:
// class AActor*                           TouchedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APartyDisplayManager::OnPawnBeginCursorOver(class AActor* TouchedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyDisplayManager", "OnPawnBeginCursorOver");

	Params::PartyDisplayManager_OnPawnBeginCursorOver Parms{};

	Parms.TouchedActor = TouchedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.PartyDisplayManager.OnPawnClicked
// (Final, Native, Protected)
// Parameters:
// class AActor*                           TouchedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                             ButtonPressed                                          (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APartyDisplayManager::OnPawnClicked(class AActor* TouchedActor, const struct FKey& ButtonPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyDisplayManager", "OnPawnClicked");

	Params::PartyDisplayManager_OnPawnClicked Parms{};

	Parms.TouchedActor = TouchedActor;
	Parms.ButtonPressed = std::move(ButtonPressed);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.PartyDisplayManager.OnPawnEndCursorOver
// (Final, Native, Protected)
// Parameters:
// class AActor*                           TouchedActor                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APartyDisplayManager::OnPawnEndCursorOver(class AActor* TouchedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyDisplayManager", "OnPawnEndCursorOver");

	Params::PartyDisplayManager_OnPawnEndCursorOver Parms{};

	Parms.TouchedActor = TouchedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function FortniteGame.PartyDisplayManager.PlayEvolutionEffect
// (Event, Public, BlueprintEvent)

void APartyDisplayManager::PlayEvolutionEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyDisplayManager", "PlayEvolutionEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.PartyDisplayManager.PlayLevelUpEffect
// (Event, Public, BlueprintEvent)

void APartyDisplayManager::PlayLevelUpEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyDisplayManager", "PlayLevelUpEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.PartyDisplayManager.ShowItem
// (Event, Public, BlueprintEvent)
// Parameters:
// class UFortItem*                        ItemToView                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void APartyDisplayManager::ShowItem(class UFortItem* ItemToView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyDisplayManager", "ShowItem");

	Params::PartyDisplayManager_ShowItem Parms{};

	Parms.ItemToView = ItemToView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FortniteGame.PartyDisplayManager.ShowLoading
// (Event, Public, BlueprintEvent)

void APartyDisplayManager::ShowLoading()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyDisplayManager", "ShowLoading");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.WorldMapPin.OnTheaterIdSet
// (Event, Public, BlueprintEvent)

void AWorldMapPin::OnTheaterIdSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldMapPin", "OnTheaterIdSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FortniteGame.WorldMapPin.SetTheaterId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           NewId                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWorldMapPin::SetTheaterId(const class FString& NewId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WorldMapPin", "SetTheaterId");

	Params::WorldMapPin_SetTheaterId Parms{};

	Parms.NewId = std::move(NewId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

