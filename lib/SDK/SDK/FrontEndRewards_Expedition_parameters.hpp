#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FrontEndRewards_Expedition

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.OnExpeditionCompleted__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct FrontEndRewards_Expedition_C_OnExpeditionCompleted__DelegateSignature final
{
public:
	bool                                          Succeeded;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortItemInstanceQuantityPair>  Rewards;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(FrontEndRewards_Expedition_C_OnExpeditionCompleted__DelegateSignature) == 0x000008, "Wrong alignment on FrontEndRewards_Expedition_C_OnExpeditionCompleted__DelegateSignature");
static_assert(sizeof(FrontEndRewards_Expedition_C_OnExpeditionCompleted__DelegateSignature) == 0x000018, "Wrong size on FrontEndRewards_Expedition_C_OnExpeditionCompleted__DelegateSignature");
static_assert(offsetof(FrontEndRewards_Expedition_C_OnExpeditionCompleted__DelegateSignature, Succeeded) == 0x000000, "Member 'FrontEndRewards_Expedition_C_OnExpeditionCompleted__DelegateSignature::Succeeded' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Expedition_C_OnExpeditionCompleted__DelegateSignature, Rewards) == 0x000008, "Member 'FrontEndRewards_Expedition_C_OnExpeditionCompleted__DelegateSignature::Rewards' has a wrong offset!");

// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.ExecuteUbergraph_FrontEndRewards_Expedition
// 0x0040 (0x0040 - 0x0000)
struct FrontEndRewards_Expedition_C_ExecuteUbergraph_FrontEndRewards_Expedition final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortExpeditionItem*                    K2Node_Event_Expedition;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSucceeded;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortItemInstanceQuantityPair>  K2Node_Event_Rewards;                              // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Expedition_C_ExecuteUbergraph_FrontEndRewards_Expedition) == 0x000008, "Wrong alignment on FrontEndRewards_Expedition_C_ExecuteUbergraph_FrontEndRewards_Expedition");
static_assert(sizeof(FrontEndRewards_Expedition_C_ExecuteUbergraph_FrontEndRewards_Expedition) == 0x000040, "Wrong size on FrontEndRewards_Expedition_C_ExecuteUbergraph_FrontEndRewards_Expedition");
static_assert(offsetof(FrontEndRewards_Expedition_C_ExecuteUbergraph_FrontEndRewards_Expedition, EntryPoint) == 0x000000, "Member 'FrontEndRewards_Expedition_C_ExecuteUbergraph_FrontEndRewards_Expedition::EntryPoint' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Expedition_C_ExecuteUbergraph_FrontEndRewards_Expedition, K2Node_Event_Expedition) == 0x000008, "Member 'FrontEndRewards_Expedition_C_ExecuteUbergraph_FrontEndRewards_Expedition::K2Node_Event_Expedition' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Expedition_C_ExecuteUbergraph_FrontEndRewards_Expedition, K2Node_Event_bSucceeded) == 0x000010, "Member 'FrontEndRewards_Expedition_C_ExecuteUbergraph_FrontEndRewards_Expedition::K2Node_Event_bSucceeded' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Expedition_C_ExecuteUbergraph_FrontEndRewards_Expedition, K2Node_Event_Rewards) == 0x000018, "Member 'FrontEndRewards_Expedition_C_ExecuteUbergraph_FrontEndRewards_Expedition::K2Node_Event_Rewards' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Expedition_C_ExecuteUbergraph_FrontEndRewards_Expedition, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000028, "Member 'FrontEndRewards_Expedition_C_ExecuteUbergraph_FrontEndRewards_Expedition::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Expedition_C_ExecuteUbergraph_FrontEndRewards_Expedition, K2Node_SwitchInteger_CmpSuccess) == 0x00002C, "Member 'FrontEndRewards_Expedition_C_ExecuteUbergraph_FrontEndRewards_Expedition::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Expedition_C_ExecuteUbergraph_FrontEndRewards_Expedition, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'FrontEndRewards_Expedition_C_ExecuteUbergraph_FrontEndRewards_Expedition::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.OnCollectExpeditionCompleted
// 0x0020 (0x0020 - 0x0000)
struct FrontEndRewards_Expedition_C_OnCollectExpeditionCompleted final
{
public:
	const class UFortExpeditionItem*              Expedition;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSucceeded;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortItemInstanceQuantityPair>  Rewards;                                           // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(FrontEndRewards_Expedition_C_OnCollectExpeditionCompleted) == 0x000008, "Wrong alignment on FrontEndRewards_Expedition_C_OnCollectExpeditionCompleted");
static_assert(sizeof(FrontEndRewards_Expedition_C_OnCollectExpeditionCompleted) == 0x000020, "Wrong size on FrontEndRewards_Expedition_C_OnCollectExpeditionCompleted");
static_assert(offsetof(FrontEndRewards_Expedition_C_OnCollectExpeditionCompleted, Expedition) == 0x000000, "Member 'FrontEndRewards_Expedition_C_OnCollectExpeditionCompleted::Expedition' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Expedition_C_OnCollectExpeditionCompleted, bSucceeded) == 0x000008, "Member 'FrontEndRewards_Expedition_C_OnCollectExpeditionCompleted::bSucceeded' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Expedition_C_OnCollectExpeditionCompleted, Rewards) == 0x000010, "Member 'FrontEndRewards_Expedition_C_OnCollectExpeditionCompleted::Rewards' has a wrong offset!");

// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.PopulateFromExpedition
// 0x0008 (0x0008 - 0x0000)
struct FrontEndRewards_Expedition_C_PopulateFromExpedition final
{
public:
	class UFortExpeditionItem*                    Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Expedition_C_PopulateFromExpedition) == 0x000008, "Wrong alignment on FrontEndRewards_Expedition_C_PopulateFromExpedition");
static_assert(sizeof(FrontEndRewards_Expedition_C_PopulateFromExpedition) == 0x000008, "Wrong size on FrontEndRewards_Expedition_C_PopulateFromExpedition");
static_assert(offsetof(FrontEndRewards_Expedition_C_PopulateFromExpedition, Item) == 0x000000, "Member 'FrontEndRewards_Expedition_C_PopulateFromExpedition::Item' has a wrong offset!");

// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.SetBrushFromExpedition
// 0x0320 (0x0320 - 0x0000)
struct FrontEndRewards_Expedition_C_SetBrushFromExpedition final
{
public:
	class UFortTooltipUIContext*                  CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetVehicleTagRequiredForExpedition_ReturnValue; // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FFortTagUIData                         CallFunc_GetUIDataForTag_OutData;                  // 0x0010(0x0308)()
	bool                                          CallFunc_GetUIDataForTag_ReturnValue;              // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Expedition_C_SetBrushFromExpedition) == 0x000008, "Wrong alignment on FrontEndRewards_Expedition_C_SetBrushFromExpedition");
static_assert(sizeof(FrontEndRewards_Expedition_C_SetBrushFromExpedition) == 0x000320, "Wrong size on FrontEndRewards_Expedition_C_SetBrushFromExpedition");
static_assert(offsetof(FrontEndRewards_Expedition_C_SetBrushFromExpedition, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'FrontEndRewards_Expedition_C_SetBrushFromExpedition::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Expedition_C_SetBrushFromExpedition, CallFunc_GetVehicleTagRequiredForExpedition_ReturnValue) == 0x000008, "Member 'FrontEndRewards_Expedition_C_SetBrushFromExpedition::CallFunc_GetVehicleTagRequiredForExpedition_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Expedition_C_SetBrushFromExpedition, CallFunc_GetUIDataForTag_OutData) == 0x000010, "Member 'FrontEndRewards_Expedition_C_SetBrushFromExpedition::CallFunc_GetUIDataForTag_OutData' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Expedition_C_SetBrushFromExpedition, CallFunc_GetUIDataForTag_ReturnValue) == 0x000318, "Member 'FrontEndRewards_Expedition_C_SetBrushFromExpedition::CallFunc_GetUIDataForTag_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.SetTitleFromExpedition
// 0x0018 (0x0018 - 0x0000)
struct FrontEndRewards_Expedition_C_SetTitleFromExpedition final
{
public:
	class FText                                   CallFunc_GetDisplayName_ReturnValue;               // 0x0000(0x0018)()
};
static_assert(alignof(FrontEndRewards_Expedition_C_SetTitleFromExpedition) == 0x000008, "Wrong alignment on FrontEndRewards_Expedition_C_SetTitleFromExpedition");
static_assert(sizeof(FrontEndRewards_Expedition_C_SetTitleFromExpedition) == 0x000018, "Wrong size on FrontEndRewards_Expedition_C_SetTitleFromExpedition");
static_assert(offsetof(FrontEndRewards_Expedition_C_SetTitleFromExpedition, CallFunc_GetDisplayName_ReturnValue) == 0x000000, "Member 'FrontEndRewards_Expedition_C_SetTitleFromExpedition::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.SetSuccessChanceFromExpedition
// 0x0028 (0x0028 - 0x0000)
struct FrontEndRewards_Expedition_C_SetSuccessChanceFromExpedition final
{
public:
	float                                         CallFunc_GetExpeditionSuccessChance_ReturnValue;   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
};
static_assert(alignof(FrontEndRewards_Expedition_C_SetSuccessChanceFromExpedition) == 0x000008, "Wrong alignment on FrontEndRewards_Expedition_C_SetSuccessChanceFromExpedition");
static_assert(sizeof(FrontEndRewards_Expedition_C_SetSuccessChanceFromExpedition) == 0x000028, "Wrong size on FrontEndRewards_Expedition_C_SetSuccessChanceFromExpedition");
static_assert(offsetof(FrontEndRewards_Expedition_C_SetSuccessChanceFromExpedition, CallFunc_GetExpeditionSuccessChance_ReturnValue) == 0x000000, "Member 'FrontEndRewards_Expedition_C_SetSuccessChanceFromExpedition::CallFunc_GetExpeditionSuccessChance_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Expedition_C_SetSuccessChanceFromExpedition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'FrontEndRewards_Expedition_C_SetSuccessChanceFromExpedition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Expedition_C_SetSuccessChanceFromExpedition, CallFunc_FTrunc_ReturnValue) == 0x000008, "Member 'FrontEndRewards_Expedition_C_SetSuccessChanceFromExpedition::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Expedition_C_SetSuccessChanceFromExpedition, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'FrontEndRewards_Expedition_C_SetSuccessChanceFromExpedition::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Expedition.FrontEndRewards_Expedition_C.ContinueFail
// 0x0010 (0x0010 - 0x0000)
struct FrontEndRewards_Expedition_C_ContinueFail final
{
public:
	TArray<struct FFortItemInstanceQuantityPair>  K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(FrontEndRewards_Expedition_C_ContinueFail) == 0x000008, "Wrong alignment on FrontEndRewards_Expedition_C_ContinueFail");
static_assert(sizeof(FrontEndRewards_Expedition_C_ContinueFail) == 0x000010, "Wrong size on FrontEndRewards_Expedition_C_ContinueFail");
static_assert(offsetof(FrontEndRewards_Expedition_C_ContinueFail, K2Node_MakeArray_Array) == 0x000000, "Member 'FrontEndRewards_Expedition_C_ContinueFail::K2Node_MakeArray_Array' has a wrong offset!");

}

