#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FrontEndRewards_Queue

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function FrontEndRewards_Queue.FrontEndRewards_Queue_C.ExecuteUbergraph_FrontEndRewards_Queue
// 0x0008 (0x0008 - 0x0000)
struct FrontEndRewards_Queue_C_ExecuteUbergraph_FrontEndRewards_Queue final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Queue_C_ExecuteUbergraph_FrontEndRewards_Queue) == 0x000004, "Wrong alignment on FrontEndRewards_Queue_C_ExecuteUbergraph_FrontEndRewards_Queue");
static_assert(sizeof(FrontEndRewards_Queue_C_ExecuteUbergraph_FrontEndRewards_Queue) == 0x000008, "Wrong size on FrontEndRewards_Queue_C_ExecuteUbergraph_FrontEndRewards_Queue");
static_assert(offsetof(FrontEndRewards_Queue_C_ExecuteUbergraph_FrontEndRewards_Queue, EntryPoint) == 0x000000, "Member 'FrontEndRewards_Queue_C_ExecuteUbergraph_FrontEndRewards_Queue::EntryPoint' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_ExecuteUbergraph_FrontEndRewards_Queue, K2Node_Event_IsDesignTime) == 0x000004, "Member 'FrontEndRewards_Queue_C_ExecuteUbergraph_FrontEndRewards_Queue::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function FrontEndRewards_Queue.FrontEndRewards_Queue_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct FrontEndRewards_Queue_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Queue_C_PreConstruct) == 0x000001, "Wrong alignment on FrontEndRewards_Queue_C_PreConstruct");
static_assert(sizeof(FrontEndRewards_Queue_C_PreConstruct) == 0x000001, "Wrong size on FrontEndRewards_Queue_C_PreConstruct");
static_assert(offsetof(FrontEndRewards_Queue_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'FrontEndRewards_Queue_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function FrontEndRewards_Queue.FrontEndRewards_Queue_C.QueueReward
// 0x0070 (0x0070 - 0x0000)
struct FrontEndRewards_Queue_C_QueueReward final
{
public:
	class UFortRewardNotificationData*            RewardItem;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDesignTime;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URewardsIcon_C*                         OutIcon;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URewardsIcon_C*                         NewIconWidget;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URewardsIcon_C*                         CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class URewardsIcon_C* Icon)>   K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0064(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Queue_C_QueueReward) == 0x000008, "Wrong alignment on FrontEndRewards_Queue_C_QueueReward");
static_assert(sizeof(FrontEndRewards_Queue_C_QueueReward) == 0x000070, "Wrong size on FrontEndRewards_Queue_C_QueueReward");
static_assert(offsetof(FrontEndRewards_Queue_C_QueueReward, RewardItem) == 0x000000, "Member 'FrontEndRewards_Queue_C_QueueReward::RewardItem' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_QueueReward, IsDesignTime) == 0x000008, "Member 'FrontEndRewards_Queue_C_QueueReward::IsDesignTime' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_QueueReward, OutIcon) == 0x000010, "Member 'FrontEndRewards_Queue_C_QueueReward::OutIcon' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_QueueReward, NewIconWidget) == 0x000018, "Member 'FrontEndRewards_Queue_C_QueueReward::NewIconWidget' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_QueueReward, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'FrontEndRewards_Queue_C_QueueReward::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_QueueReward, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'FrontEndRewards_Queue_C_QueueReward::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_QueueReward, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000028, "Member 'FrontEndRewards_Queue_C_QueueReward::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_QueueReward, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'FrontEndRewards_Queue_C_QueueReward::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_QueueReward, CallFunc_Create_ReturnValue) == 0x000030, "Member 'FrontEndRewards_Queue_C_QueueReward::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_QueueReward, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'FrontEndRewards_Queue_C_QueueReward::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_QueueReward, CallFunc_AddChildToOverlay_ReturnValue) == 0x000040, "Member 'FrontEndRewards_Queue_C_QueueReward::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_QueueReward, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'FrontEndRewards_Queue_C_QueueReward::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_QueueReward, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x00004C, "Member 'FrontEndRewards_Queue_C_QueueReward::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_QueueReward, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'FrontEndRewards_Queue_C_QueueReward::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_QueueReward, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x000060, "Member 'FrontEndRewards_Queue_C_QueueReward::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_QueueReward, CallFunc_MakeVector2D_ReturnValue) == 0x000064, "Member 'FrontEndRewards_Queue_C_QueueReward::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Queue.FrontEndRewards_Queue_C.DequeueReward
// 0x0020 (0x0020 - 0x0000)
struct FrontEndRewards_Queue_C_DequeueReward final
{
public:
	class UFortRewardNotificationData*            OutReward;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortRewardNotificationData*            RetVal;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URewardsIcon_C*                         CallFunc_PopIcon_OutIcon;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Queue_C_DequeueReward) == 0x000008, "Wrong alignment on FrontEndRewards_Queue_C_DequeueReward");
static_assert(sizeof(FrontEndRewards_Queue_C_DequeueReward) == 0x000020, "Wrong size on FrontEndRewards_Queue_C_DequeueReward");
static_assert(offsetof(FrontEndRewards_Queue_C_DequeueReward, OutReward) == 0x000000, "Member 'FrontEndRewards_Queue_C_DequeueReward::OutReward' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_DequeueReward, RetVal) == 0x000008, "Member 'FrontEndRewards_Queue_C_DequeueReward::RetVal' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_DequeueReward, CallFunc_PopIcon_OutIcon) == 0x000010, "Member 'FrontEndRewards_Queue_C_DequeueReward::CallFunc_PopIcon_OutIcon' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_DequeueReward, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'FrontEndRewards_Queue_C_DequeueReward::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Queue.FrontEndRewards_Queue_C.ClearQueue
// 0x0020 (0x0020 - 0x0000)
struct FrontEndRewards_Queue_C_ClearQueue final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URewardsIcon_C*                         CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Queue_C_ClearQueue) == 0x000008, "Wrong alignment on FrontEndRewards_Queue_C_ClearQueue");
static_assert(sizeof(FrontEndRewards_Queue_C_ClearQueue) == 0x000020, "Wrong size on FrontEndRewards_Queue_C_ClearQueue");
static_assert(offsetof(FrontEndRewards_Queue_C_ClearQueue, Temp_int_Array_Index_Variable) == 0x000000, "Member 'FrontEndRewards_Queue_C_ClearQueue::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_ClearQueue, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'FrontEndRewards_Queue_C_ClearQueue::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_ClearQueue, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'FrontEndRewards_Queue_C_ClearQueue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_ClearQueue, CallFunc_Array_Get_Item) == 0x000010, "Member 'FrontEndRewards_Queue_C_ClearQueue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_ClearQueue, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'FrontEndRewards_Queue_C_ClearQueue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_ClearQueue, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'FrontEndRewards_Queue_C_ClearQueue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Queue.FrontEndRewards_Queue_C.CloneIconList
// 0x0040 (0x0040 - 0x0000)
struct FrontEndRewards_Queue_C_CloneIconList final
{
public:
	TArray<class URewardsIcon_C*>                 IconListClone;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class URewardsIcon_C*>                 OutIconListClone;                                  // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URewardsIcon_C*                         CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Queue_C_CloneIconList) == 0x000008, "Wrong alignment on FrontEndRewards_Queue_C_CloneIconList");
static_assert(sizeof(FrontEndRewards_Queue_C_CloneIconList) == 0x000040, "Wrong size on FrontEndRewards_Queue_C_CloneIconList");
static_assert(offsetof(FrontEndRewards_Queue_C_CloneIconList, IconListClone) == 0x000000, "Member 'FrontEndRewards_Queue_C_CloneIconList::IconListClone' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_CloneIconList, OutIconListClone) == 0x000010, "Member 'FrontEndRewards_Queue_C_CloneIconList::OutIconListClone' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_CloneIconList, Temp_int_Variable) == 0x000020, "Member 'FrontEndRewards_Queue_C_CloneIconList::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_CloneIconList, CallFunc_Array_Get_Item) == 0x000028, "Member 'FrontEndRewards_Queue_C_CloneIconList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_CloneIconList, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'FrontEndRewards_Queue_C_CloneIconList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_CloneIconList, CallFunc_Array_LastIndex_ReturnValue) == 0x000034, "Member 'FrontEndRewards_Queue_C_CloneIconList::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_CloneIconList, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'FrontEndRewards_Queue_C_CloneIconList::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_CloneIconList, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'FrontEndRewards_Queue_C_CloneIconList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Queue.FrontEndRewards_Queue_C.RandomizeDesignView
// 0x0020 (0x0020 - 0x0000)
struct FrontEndRewards_Queue_C_RandomizeDesignView final
{
public:
	class URewardsIcon_C*                         CallFunc_QueueReward_OutIcon;                      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Queue_C_RandomizeDesignView) == 0x000008, "Wrong alignment on FrontEndRewards_Queue_C_RandomizeDesignView");
static_assert(sizeof(FrontEndRewards_Queue_C_RandomizeDesignView) == 0x000020, "Wrong size on FrontEndRewards_Queue_C_RandomizeDesignView");
static_assert(offsetof(FrontEndRewards_Queue_C_RandomizeDesignView, CallFunc_QueueReward_OutIcon) == 0x000000, "Member 'FrontEndRewards_Queue_C_RandomizeDesignView::CallFunc_QueueReward_OutIcon' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_RandomizeDesignView, Temp_int_Variable) == 0x000008, "Member 'FrontEndRewards_Queue_C_RandomizeDesignView::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_RandomizeDesignView, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'FrontEndRewards_Queue_C_RandomizeDesignView::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_RandomizeDesignView, CallFunc_RandomInteger_ReturnValue) == 0x000010, "Member 'FrontEndRewards_Queue_C_RandomizeDesignView::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_RandomizeDesignView, CallFunc_Add_IntInt_ReturnValue2) == 0x000014, "Member 'FrontEndRewards_Queue_C_RandomizeDesignView::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_RandomizeDesignView, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'FrontEndRewards_Queue_C_RandomizeDesignView::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Queue.FrontEndRewards_Queue_C.PopIcon
// 0x0048 (0x0048 - 0x0000)
struct FrontEndRewards_Queue_C_PopIcon final
{
public:
	class URewardsIcon_C*                         OutIcon;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URewardsIcon_C*                         RetVal;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue2;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URewardsIcon_C*                         CallFunc_Array_Get_Item2;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Queue_C_PopIcon) == 0x000008, "Wrong alignment on FrontEndRewards_Queue_C_PopIcon");
static_assert(sizeof(FrontEndRewards_Queue_C_PopIcon) == 0x000048, "Wrong size on FrontEndRewards_Queue_C_PopIcon");
static_assert(offsetof(FrontEndRewards_Queue_C_PopIcon, OutIcon) == 0x000000, "Member 'FrontEndRewards_Queue_C_PopIcon::OutIcon' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_PopIcon, RetVal) == 0x000008, "Member 'FrontEndRewards_Queue_C_PopIcon::RetVal' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_PopIcon, Temp_int_Array_Index_Variable) == 0x000010, "Member 'FrontEndRewards_Queue_C_PopIcon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_PopIcon, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'FrontEndRewards_Queue_C_PopIcon::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_PopIcon, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'FrontEndRewards_Queue_C_PopIcon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_PopIcon, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'FrontEndRewards_Queue_C_PopIcon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_PopIcon, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'FrontEndRewards_Queue_C_PopIcon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_PopIcon, CallFunc_Array_Length_ReturnValue2) == 0x000024, "Member 'FrontEndRewards_Queue_C_PopIcon::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_PopIcon, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'FrontEndRewards_Queue_C_PopIcon::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_PopIcon, CallFunc_Greater_IntInt_ReturnValue2) == 0x000029, "Member 'FrontEndRewards_Queue_C_PopIcon::CallFunc_Greater_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_PopIcon, CallFunc_Array_Get_Item) == 0x00002C, "Member 'FrontEndRewards_Queue_C_PopIcon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_PopIcon, CallFunc_Subtract_IntInt_ReturnValue2) == 0x000030, "Member 'FrontEndRewards_Queue_C_PopIcon::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_PopIcon, CallFunc_Array_Length_ReturnValue3) == 0x000034, "Member 'FrontEndRewards_Queue_C_PopIcon::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_PopIcon, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'FrontEndRewards_Queue_C_PopIcon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_PopIcon, CallFunc_Array_Get_Item2) == 0x000040, "Member 'FrontEndRewards_Queue_C_PopIcon::CallFunc_Array_Get_Item2' has a wrong offset!");

// Function FrontEndRewards_Queue.FrontEndRewards_Queue_C.HandleIconHideAnimationFinished
// 0x0008 (0x0008 - 0x0000)
struct FrontEndRewards_Queue_C_HandleIconHideAnimationFinished final
{
public:
	class URewardsIcon_C*                         Icon;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Queue_C_HandleIconHideAnimationFinished) == 0x000008, "Wrong alignment on FrontEndRewards_Queue_C_HandleIconHideAnimationFinished");
static_assert(sizeof(FrontEndRewards_Queue_C_HandleIconHideAnimationFinished) == 0x000008, "Wrong size on FrontEndRewards_Queue_C_HandleIconHideAnimationFinished");
static_assert(offsetof(FrontEndRewards_Queue_C_HandleIconHideAnimationFinished, Icon) == 0x000000, "Member 'FrontEndRewards_Queue_C_HandleIconHideAnimationFinished::Icon' has a wrong offset!");

// Function FrontEndRewards_Queue.FrontEndRewards_Queue_C.TickIconSlide
// 0x00B0 (0x00B0 - 0x0000)
struct FrontEndRewards_Queue_C_TickIconSlide final
{
public:
	class URewardsIcon_C*                         CurrentIcon;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArrayElement;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArrayIndex;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 TempIndexListCopy;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class URewardsIcon_C*                         CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item2;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item3;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Queue_C_TickIconSlide) == 0x000008, "Wrong alignment on FrontEndRewards_Queue_C_TickIconSlide");
static_assert(sizeof(FrontEndRewards_Queue_C_TickIconSlide) == 0x0000B0, "Wrong size on FrontEndRewards_Queue_C_TickIconSlide");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CurrentIcon) == 0x000000, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CurrentIcon' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, ArrayElement) == 0x000008, "Member 'FrontEndRewards_Queue_C_TickIconSlide::ArrayElement' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, ArrayIndex) == 0x00000C, "Member 'FrontEndRewards_Queue_C_TickIconSlide::ArrayIndex' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, TempIndexListCopy) == 0x000010, "Member 'FrontEndRewards_Queue_C_TickIconSlide::TempIndexListCopy' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'FrontEndRewards_Queue_C_TickIconSlide::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000028, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'FrontEndRewards_Queue_C_TickIconSlide::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_Conv_IntToString_ReturnValue) == 0x000038, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_MakeLiteralString_ReturnValue) == 0x000048, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_Array_Get_Item) == 0x000068, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, Temp_int_Array_Index_Variable2) == 0x000070, "Member 'FrontEndRewards_Queue_C_TickIconSlide::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, Temp_int_Loop_Counter_Variable2) == 0x000074, "Member 'FrontEndRewards_Queue_C_TickIconSlide::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_Add_IntInt_ReturnValue2) == 0x00007C, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_Add_IntInt_ReturnValue3) == 0x000080, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_Array_Length_ReturnValue2) == 0x000088, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_Greater_IntInt_ReturnValue) == 0x00008C, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_Less_IntInt_ReturnValue) == 0x00008D, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_Array_Get_Item2) == 0x000090, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_Array_Length_ReturnValue3) == 0x000094, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_Subtract_IntInt_ReturnValue2) == 0x000098, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_Max_ReturnValue) == 0x00009C, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_Array_Get_Item3) == 0x0000A0, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_Array_Add_ReturnValue) == 0x0000A4, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_Array_Length_ReturnValue4) == 0x0000A8, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconSlide, CallFunc_Less_IntInt_ReturnValue2) == 0x0000AC, "Member 'FrontEndRewards_Queue_C_TickIconSlide::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");

// Function FrontEndRewards_Queue.FrontEndRewards_Queue_C.StartDequeueAnimation
// 0x0030 (0x0030 - 0x0000)
struct FrontEndRewards_Queue_C_StartDequeueAnimation final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Queue_C_StartDequeueAnimation) == 0x000008, "Wrong alignment on FrontEndRewards_Queue_C_StartDequeueAnimation");
static_assert(sizeof(FrontEndRewards_Queue_C_StartDequeueAnimation) == 0x000030, "Wrong size on FrontEndRewards_Queue_C_StartDequeueAnimation");
static_assert(offsetof(FrontEndRewards_Queue_C_StartDequeueAnimation, Temp_int_Variable) == 0x000000, "Member 'FrontEndRewards_Queue_C_StartDequeueAnimation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_StartDequeueAnimation, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'FrontEndRewards_Queue_C_StartDequeueAnimation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_StartDequeueAnimation, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'FrontEndRewards_Queue_C_StartDequeueAnimation::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_StartDequeueAnimation, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'FrontEndRewards_Queue_C_StartDequeueAnimation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_StartDequeueAnimation, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'FrontEndRewards_Queue_C_StartDequeueAnimation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_StartDequeueAnimation, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'FrontEndRewards_Queue_C_StartDequeueAnimation::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_StartDequeueAnimation, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000028, "Member 'FrontEndRewards_Queue_C_StartDequeueAnimation::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Queue.FrontEndRewards_Queue_C.SlideIcon
// 0x0028 (0x0028 - 0x0000)
struct FrontEndRewards_Queue_C_SlideIcon final
{
public:
	class URewardsIcon_C*                         Icon;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X2;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y2;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Queue_C_SlideIcon) == 0x000008, "Wrong alignment on FrontEndRewards_Queue_C_SlideIcon");
static_assert(sizeof(FrontEndRewards_Queue_C_SlideIcon) == 0x000028, "Wrong size on FrontEndRewards_Queue_C_SlideIcon");
static_assert(offsetof(FrontEndRewards_Queue_C_SlideIcon, Icon) == 0x000000, "Member 'FrontEndRewards_Queue_C_SlideIcon::Icon' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_SlideIcon, CallFunc_BreakVector2D_X) == 0x000008, "Member 'FrontEndRewards_Queue_C_SlideIcon::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_SlideIcon, CallFunc_BreakVector2D_Y) == 0x00000C, "Member 'FrontEndRewards_Queue_C_SlideIcon::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_SlideIcon, CallFunc_BreakVector2D_X2) == 0x000010, "Member 'FrontEndRewards_Queue_C_SlideIcon::CallFunc_BreakVector2D_X2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_SlideIcon, CallFunc_BreakVector2D_Y2) == 0x000014, "Member 'FrontEndRewards_Queue_C_SlideIcon::CallFunc_BreakVector2D_Y2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_SlideIcon, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'FrontEndRewards_Queue_C_SlideIcon::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_SlideIcon, CallFunc_Add_FloatFloat_ReturnValue) == 0x00001C, "Member 'FrontEndRewards_Queue_C_SlideIcon::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_SlideIcon, CallFunc_Add_FloatFloat_ReturnValue2) == 0x000020, "Member 'FrontEndRewards_Queue_C_SlideIcon::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");

// Function FrontEndRewards_Queue.FrontEndRewards_Queue_C.StartInitAnimation
// 0x0030 (0x0030 - 0x0000)
struct FrontEndRewards_Queue_C_StartInitAnimation final
{
public:
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Queue_C_StartInitAnimation) == 0x000008, "Wrong alignment on FrontEndRewards_Queue_C_StartInitAnimation");
static_assert(sizeof(FrontEndRewards_Queue_C_StartInitAnimation) == 0x000030, "Wrong size on FrontEndRewards_Queue_C_StartInitAnimation");
static_assert(offsetof(FrontEndRewards_Queue_C_StartInitAnimation, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000000, "Member 'FrontEndRewards_Queue_C_StartInitAnimation::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_StartInitAnimation, CallFunc_Array_LastIndex_ReturnValue) == 0x000004, "Member 'FrontEndRewards_Queue_C_StartInitAnimation::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_StartInitAnimation, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'FrontEndRewards_Queue_C_StartInitAnimation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_StartInitAnimation, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'FrontEndRewards_Queue_C_StartInitAnimation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_StartInitAnimation, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'FrontEndRewards_Queue_C_StartInitAnimation::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_StartInitAnimation, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'FrontEndRewards_Queue_C_StartInitAnimation::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Queue.FrontEndRewards_Queue_C.TickIconInit
// 0x0040 (0x0040 - 0x0000)
struct FrontEndRewards_Queue_C_TickIconInit final
{
public:
	class URewardsIcon_C*                         CurrentIcon;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArrayElement;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArrayIndex;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 TempIndexListCopy;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URewardsIcon_C*                         CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Queue_C_TickIconInit) == 0x000008, "Wrong alignment on FrontEndRewards_Queue_C_TickIconInit");
static_assert(sizeof(FrontEndRewards_Queue_C_TickIconInit) == 0x000040, "Wrong size on FrontEndRewards_Queue_C_TickIconInit");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconInit, CurrentIcon) == 0x000000, "Member 'FrontEndRewards_Queue_C_TickIconInit::CurrentIcon' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconInit, ArrayElement) == 0x000008, "Member 'FrontEndRewards_Queue_C_TickIconInit::ArrayElement' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconInit, ArrayIndex) == 0x00000C, "Member 'FrontEndRewards_Queue_C_TickIconInit::ArrayIndex' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconInit, TempIndexListCopy) == 0x000010, "Member 'FrontEndRewards_Queue_C_TickIconInit::TempIndexListCopy' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconInit, CallFunc_Array_LastIndex_ReturnValue) == 0x000020, "Member 'FrontEndRewards_Queue_C_TickIconInit::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconInit, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'FrontEndRewards_Queue_C_TickIconInit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconInit, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'FrontEndRewards_Queue_C_TickIconInit::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconInit, CallFunc_Array_Get_Item) == 0x000030, "Member 'FrontEndRewards_Queue_C_TickIconInit::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconInit, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'FrontEndRewards_Queue_C_TickIconInit::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Queue_C_TickIconInit, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00003C, "Member 'FrontEndRewards_Queue_C_TickIconInit::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

}

