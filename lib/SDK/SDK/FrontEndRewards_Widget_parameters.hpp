#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FrontEndRewards_Widget

#include "Basic.hpp"

#include "FrontEndRewards_Definition_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.OnRewardsClaimed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FrontEndRewards_Widget_C_OnRewardsClaimed__DelegateSignature final
{
public:
	class UFrontEndRewards_Widget_C*              RewardsWidget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_OnRewardsClaimed__DelegateSignature) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_OnRewardsClaimed__DelegateSignature");
static_assert(sizeof(FrontEndRewards_Widget_C_OnRewardsClaimed__DelegateSignature) == 0x000008, "Wrong size on FrontEndRewards_Widget_C_OnRewardsClaimed__DelegateSignature");
static_assert(offsetof(FrontEndRewards_Widget_C_OnRewardsClaimed__DelegateSignature, RewardsWidget) == 0x000000, "Member 'FrontEndRewards_Widget_C_OnRewardsClaimed__DelegateSignature::RewardsWidget' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.OnRewardsClaimError__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FrontEndRewards_Widget_C_OnRewardsClaimError__DelegateSignature final
{
public:
	class UFrontEndRewards_Widget_C*              RewardsWidget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_OnRewardsClaimError__DelegateSignature) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_OnRewardsClaimError__DelegateSignature");
static_assert(sizeof(FrontEndRewards_Widget_C_OnRewardsClaimError__DelegateSignature) == 0x000008, "Wrong size on FrontEndRewards_Widget_C_OnRewardsClaimError__DelegateSignature");
static_assert(offsetof(FrontEndRewards_Widget_C_OnRewardsClaimError__DelegateSignature, RewardsWidget) == 0x000000, "Member 'FrontEndRewards_Widget_C_OnRewardsClaimError__DelegateSignature::RewardsWidget' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.OnRewardsIgnored__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FrontEndRewards_Widget_C_OnRewardsIgnored__DelegateSignature final
{
public:
	class UFrontEndRewards_Widget_C*              RewardsWidget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_OnRewardsIgnored__DelegateSignature) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_OnRewardsIgnored__DelegateSignature");
static_assert(sizeof(FrontEndRewards_Widget_C_OnRewardsIgnored__DelegateSignature) == 0x000008, "Wrong size on FrontEndRewards_Widget_C_OnRewardsIgnored__DelegateSignature");
static_assert(offsetof(FrontEndRewards_Widget_C_OnRewardsIgnored__DelegateSignature, RewardsWidget) == 0x000000, "Member 'FrontEndRewards_Widget_C_OnRewardsIgnored__DelegateSignature::RewardsWidget' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.ExecuteUbergraph_FrontEndRewards_Widget
// 0x00A0 (0x00A0 - 0x0000)
struct FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   K2Node_Event_Text;                                 // 0x0008(0x0018)()
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Delay;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              K2Node_Event_ItemToInspect;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	class UFortMatchmakingContext*                CallFunc_GetContext_ReturnValue2;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemInspectScreen_C*                   CallFunc_Create_ReturnValue;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue2;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue3;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget");
static_assert(sizeof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget) == 0x0000A0, "Wrong size on FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, EntryPoint) == 0x000000, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::EntryPoint' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, CallFunc_IsValid_ReturnValue2) == 0x000005, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, CallFunc_IsValid_ReturnValue3) == 0x000006, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, CallFunc_IsValid_ReturnValue4) == 0x000007, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, K2Node_Event_Text) == 0x000008, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::K2Node_Event_Text' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, CallFunc_GetUINavigationManager_ReturnValue) == 0x000020, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, K2Node_ComponentBoundEvent_Button) == 0x000028, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, CallFunc_GetContext_ReturnValue) == 0x000030, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, CallFunc_IsValid_ReturnValue5) == 0x000038, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, K2Node_CustomEvent_Delay) == 0x00003C, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, CallFunc_IsValid_ReturnValue6) == 0x000040, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, K2Node_Event_ItemToInspect) == 0x000048, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::K2Node_Event_ItemToInspect' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, CallFunc_GetContext_ReturnValue2) == 0x000060, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, CallFunc_IsValid_ReturnValue7) == 0x000068, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000070, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, CallFunc_Create_ReturnValue) == 0x000078, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000080, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, CallFunc_GetUIManagerWidget_ReturnValue2) == 0x000088, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::CallFunc_GetUIManagerWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, CallFunc_GetContext_ReturnValue3) == 0x000090, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::CallFunc_GetContext_ReturnValue3' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget, CallFunc_IsValid_ReturnValue8) == 0x000098, "Member 'FrontEndRewards_Widget_C_ExecuteUbergraph_FrontEndRewards_Widget::CallFunc_IsValid_ReturnValue8' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.InspectItem
// 0x0008 (0x0008 - 0x0000)
struct FrontEndRewards_Widget_C_InspectItem final
{
public:
	class UFortItem*                              ItemToInspect;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_InspectItem) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_InspectItem");
static_assert(sizeof(FrontEndRewards_Widget_C_InspectItem) == 0x000008, "Wrong size on FrontEndRewards_Widget_C_InspectItem");
static_assert(offsetof(FrontEndRewards_Widget_C_InspectItem, ItemToInspect) == 0x000000, "Member 'FrontEndRewards_Widget_C_InspectItem::ItemToInspect' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.HideStarburst
// 0x0004 (0x0004 - 0x0000)
struct FrontEndRewards_Widget_C_HideStarburst final
{
public:
	float                                         Delay;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_HideStarburst) == 0x000004, "Wrong alignment on FrontEndRewards_Widget_C_HideStarburst");
static_assert(sizeof(FrontEndRewards_Widget_C_HideStarburst) == 0x000004, "Wrong size on FrontEndRewards_Widget_C_HideStarburst");
static_assert(offsetof(FrontEndRewards_Widget_C_HideStarburst, Delay) == 0x000000, "Member 'FrontEndRewards_Widget_C_HideStarburst::Delay' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.BndEvt__ButtonOpen_K2Node_ComponentBoundEvent_26_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct FrontEndRewards_Widget_C_BndEvt__ButtonOpen_K2Node_ComponentBoundEvent_26_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_BndEvt__ButtonOpen_K2Node_ComponentBoundEvent_26_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_BndEvt__ButtonOpen_K2Node_ComponentBoundEvent_26_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(FrontEndRewards_Widget_C_BndEvt__ButtonOpen_K2Node_ComponentBoundEvent_26_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on FrontEndRewards_Widget_C_BndEvt__ButtonOpen_K2Node_ComponentBoundEvent_26_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(FrontEndRewards_Widget_C_BndEvt__ButtonOpen_K2Node_ComponentBoundEvent_26_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'FrontEndRewards_Widget_C_BndEvt__ButtonOpen_K2Node_ComponentBoundEvent_26_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.OnPrimaryActionTextChanged
// 0x0018 (0x0018 - 0x0000)
struct FrontEndRewards_Widget_C_OnPrimaryActionTextChanged final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(FrontEndRewards_Widget_C_OnPrimaryActionTextChanged) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_OnPrimaryActionTextChanged");
static_assert(sizeof(FrontEndRewards_Widget_C_OnPrimaryActionTextChanged) == 0x000018, "Wrong size on FrontEndRewards_Widget_C_OnPrimaryActionTextChanged");
static_assert(offsetof(FrontEndRewards_Widget_C_OnPrimaryActionTextChanged, Text) == 0x000000, "Member 'FrontEndRewards_Widget_C_OnPrimaryActionTextChanged::Text' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.DropReward
// 0x0008 (0x0008 - 0x0000)
struct FrontEndRewards_Widget_C_DropReward final
{
public:
	class UFortRewardNotificationData*            InReward;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_DropReward) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_DropReward");
static_assert(sizeof(FrontEndRewards_Widget_C_DropReward) == 0x000008, "Wrong size on FrontEndRewards_Widget_C_DropReward");
static_assert(offsetof(FrontEndRewards_Widget_C_DropReward, InReward) == 0x000000, "Member 'FrontEndRewards_Widget_C_DropReward::InReward' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.PopNextReward
// 0x0018 (0x0018 - 0x0000)
struct FrontEndRewards_Widget_C_PopNextReward final
{
public:
	class UFortRewardNotificationData*            NextReward;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortRewardNotificationData*            CallFunc_DequeueReward_OutReward;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_PopNextReward) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_PopNextReward");
static_assert(sizeof(FrontEndRewards_Widget_C_PopNextReward) == 0x000018, "Wrong size on FrontEndRewards_Widget_C_PopNextReward");
static_assert(offsetof(FrontEndRewards_Widget_C_PopNextReward, NextReward) == 0x000000, "Member 'FrontEndRewards_Widget_C_PopNextReward::NextReward' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopNextReward, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'FrontEndRewards_Widget_C_PopNextReward::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopNextReward, CallFunc_DequeueReward_OutReward) == 0x000010, "Member 'FrontEndRewards_Widget_C_PopNextReward::CallFunc_DequeueReward_OutReward' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.HandleShowHeaderFinished
// 0x0010 (0x0010 - 0x0000)
struct FrontEndRewards_Widget_C_HandleShowHeaderFinished final
{
public:
	class UFortRewardQuestData*                   K2Node_DynamicCast_AsFort_Reward_Quest_Data;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Widget_C_HandleShowHeaderFinished) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_HandleShowHeaderFinished");
static_assert(sizeof(FrontEndRewards_Widget_C_HandleShowHeaderFinished) == 0x000010, "Wrong size on FrontEndRewards_Widget_C_HandleShowHeaderFinished");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleShowHeaderFinished, K2Node_DynamicCast_AsFort_Reward_Quest_Data) == 0x000000, "Member 'FrontEndRewards_Widget_C_HandleShowHeaderFinished::K2Node_DynamicCast_AsFort_Reward_Quest_Data' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleShowHeaderFinished, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'FrontEndRewards_Widget_C_HandleShowHeaderFinished::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.BindEvents
// 0x0140 (0x0140 - 0x0000)
struct FrontEndRewards_Widget_C_BindEvents final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TArray<struct FFortItemInstanceQuantityPair>& MissionRewards)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate5;             // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TArray<struct FFortItemInstanceQuantityPair>& MissionRewards)> K2Node_CreateDelegate_OutputDelegate6;             // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate7;             // 0x0080(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FFortCollectionBookRewards& RewardClaimed, bool bSuccess, TArray<struct FFortItemInstanceQuantityPair>& ActualRewards)> K2Node_CreateDelegate_OutputDelegate8;             // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue2;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UFortQuestItem* Quest, TArray<struct FFortItemInstanceQuantityPair>& Rewards)> K2Node_CreateDelegate_OutputDelegate9;             // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	class UFortCollectionBookManager*             CallFunc_GetCollectionBookManager_ReturnValue;     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue3;                  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate10;            // 0x00C8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool Succeeded, TArray<struct FFortItemInstanceQuantityPair>& Rewards)> K2Node_CreateDelegate_OutputDelegate11;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
	class UFortRewardNotificationSubWidget*       CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Index, class UFortItem* Item)> K2Node_CreateDelegate_OutputDelegate12;            // 0x00F8(0x0010)(ZeroConstructor, NoDestructor)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue4;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate13;            // 0x0110(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate14;            // 0x0120(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate15;            // 0x0130(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Widget_C_BindEvents) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_BindEvents");
static_assert(sizeof(FrontEndRewards_Widget_C_BindEvents) == 0x000140, "Wrong size on FrontEndRewards_Widget_C_BindEvents");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, Temp_int_Array_Index_Variable) == 0x000000, "Member 'FrontEndRewards_Widget_C_BindEvents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'FrontEndRewards_Widget_C_BindEvents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'FrontEndRewards_Widget_C_BindEvents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'FrontEndRewards_Widget_C_BindEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, K2Node_CreateDelegate_OutputDelegate2) == 0x000020, "Member 'FrontEndRewards_Widget_C_BindEvents::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, K2Node_CreateDelegate_OutputDelegate3) == 0x000030, "Member 'FrontEndRewards_Widget_C_BindEvents::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, K2Node_CreateDelegate_OutputDelegate4) == 0x000040, "Member 'FrontEndRewards_Widget_C_BindEvents::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, K2Node_CreateDelegate_OutputDelegate5) == 0x000050, "Member 'FrontEndRewards_Widget_C_BindEvents::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, CallFunc_GetContext_ReturnValue) == 0x000060, "Member 'FrontEndRewards_Widget_C_BindEvents::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, K2Node_CreateDelegate_OutputDelegate6) == 0x000068, "Member 'FrontEndRewards_Widget_C_BindEvents::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, CallFunc_GetQuestManager_ReturnValue) == 0x000078, "Member 'FrontEndRewards_Widget_C_BindEvents::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, K2Node_CreateDelegate_OutputDelegate7) == 0x000080, "Member 'FrontEndRewards_Widget_C_BindEvents::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, K2Node_CreateDelegate_OutputDelegate8) == 0x000090, "Member 'FrontEndRewards_Widget_C_BindEvents::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, CallFunc_GetContext_ReturnValue2) == 0x0000A0, "Member 'FrontEndRewards_Widget_C_BindEvents::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, K2Node_CreateDelegate_OutputDelegate9) == 0x0000A8, "Member 'FrontEndRewards_Widget_C_BindEvents::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, CallFunc_GetCollectionBookManager_ReturnValue) == 0x0000B8, "Member 'FrontEndRewards_Widget_C_BindEvents::CallFunc_GetCollectionBookManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, CallFunc_GetContext_ReturnValue3) == 0x0000C0, "Member 'FrontEndRewards_Widget_C_BindEvents::CallFunc_GetContext_ReturnValue3' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, K2Node_CreateDelegate_OutputDelegate10) == 0x0000C8, "Member 'FrontEndRewards_Widget_C_BindEvents::K2Node_CreateDelegate_OutputDelegate10' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, K2Node_CreateDelegate_OutputDelegate11) == 0x0000D8, "Member 'FrontEndRewards_Widget_C_BindEvents::K2Node_CreateDelegate_OutputDelegate11' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'FrontEndRewards_Widget_C_BindEvents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'FrontEndRewards_Widget_C_BindEvents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, CallFunc_Less_IntInt_ReturnValue) == 0x0000F4, "Member 'FrontEndRewards_Widget_C_BindEvents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, K2Node_CreateDelegate_OutputDelegate12) == 0x0000F8, "Member 'FrontEndRewards_Widget_C_BindEvents::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, CallFunc_GetContext_ReturnValue4) == 0x000108, "Member 'FrontEndRewards_Widget_C_BindEvents::CallFunc_GetContext_ReturnValue4' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, K2Node_CreateDelegate_OutputDelegate13) == 0x000110, "Member 'FrontEndRewards_Widget_C_BindEvents::K2Node_CreateDelegate_OutputDelegate13' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, K2Node_CreateDelegate_OutputDelegate14) == 0x000120, "Member 'FrontEndRewards_Widget_C_BindEvents::K2Node_CreateDelegate_OutputDelegate14' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_BindEvents, K2Node_CreateDelegate_OutputDelegate15) == 0x000130, "Member 'FrontEndRewards_Widget_C_BindEvents::K2Node_CreateDelegate_OutputDelegate15' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.AdjustCurrentRewardPadding
// 0x0030 (0x0030 - 0x0000)
struct FrontEndRewards_Widget_C_AdjustCurrentRewardPadding final
{
public:
	class UOverlaySlot*                           K2Node_DynamicCast_AsOverlay_Slot;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           K2Node_DynamicCast_AsOverlay_Slot2;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x001C(0x0010)(NoDestructor)
};
static_assert(alignof(FrontEndRewards_Widget_C_AdjustCurrentRewardPadding) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_AdjustCurrentRewardPadding");
static_assert(sizeof(FrontEndRewards_Widget_C_AdjustCurrentRewardPadding) == 0x000030, "Wrong size on FrontEndRewards_Widget_C_AdjustCurrentRewardPadding");
static_assert(offsetof(FrontEndRewards_Widget_C_AdjustCurrentRewardPadding, K2Node_DynamicCast_AsOverlay_Slot) == 0x000000, "Member 'FrontEndRewards_Widget_C_AdjustCurrentRewardPadding::K2Node_DynamicCast_AsOverlay_Slot' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_AdjustCurrentRewardPadding, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'FrontEndRewards_Widget_C_AdjustCurrentRewardPadding::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_AdjustCurrentRewardPadding, K2Node_DynamicCast_AsOverlay_Slot2) == 0x000010, "Member 'FrontEndRewards_Widget_C_AdjustCurrentRewardPadding::K2Node_DynamicCast_AsOverlay_Slot2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_AdjustCurrentRewardPadding, K2Node_DynamicCast_bSuccess2) == 0x000018, "Member 'FrontEndRewards_Widget_C_AdjustCurrentRewardPadding::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_AdjustCurrentRewardPadding, K2Node_MakeStruct_Margin) == 0x00001C, "Member 'FrontEndRewards_Widget_C_AdjustCurrentRewardPadding::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.PopulateCurrentRewardWidget
// 0x0028 (0x0028 - 0x0000)
struct FrontEndRewards_Widget_C_PopulateCurrentRewardWidget final
{
public:
	TArray<struct FFortItemQuantityPair>          TempCollectionBookRewards;                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class UFortQuestItem*                         Quest;                                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortRewardNotificationData*            RewardData;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Widget_C_PopulateCurrentRewardWidget) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_PopulateCurrentRewardWidget");
static_assert(sizeof(FrontEndRewards_Widget_C_PopulateCurrentRewardWidget) == 0x000028, "Wrong size on FrontEndRewards_Widget_C_PopulateCurrentRewardWidget");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateCurrentRewardWidget, TempCollectionBookRewards) == 0x000000, "Member 'FrontEndRewards_Widget_C_PopulateCurrentRewardWidget::TempCollectionBookRewards' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateCurrentRewardWidget, Quest) == 0x000010, "Member 'FrontEndRewards_Widget_C_PopulateCurrentRewardWidget::Quest' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateCurrentRewardWidget, RewardData) == 0x000018, "Member 'FrontEndRewards_Widget_C_PopulateCurrentRewardWidget::RewardData' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateCurrentRewardWidget, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'FrontEndRewards_Widget_C_PopulateCurrentRewardWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateCurrentRewardWidget, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'FrontEndRewards_Widget_C_PopulateCurrentRewardWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateCurrentRewardWidget, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000022, "Member 'FrontEndRewards_Widget_C_PopulateCurrentRewardWidget::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.ShowCurrentReward
// 0x0020 (0x0020 - 0x0000)
struct FrontEndRewards_Widget_C_ShowCurrentReward final
{
public:
	class UFortRewardEpicQuestData*               K2Node_DynamicCast_AsFort_Reward_Epic_Quest_Data;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFrontEndRewards_ChoiceRewards_C*       K2Node_DynamicCast_AsFront_End_Rewards_Choice_Rewards; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Widget_C_ShowCurrentReward) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_ShowCurrentReward");
static_assert(sizeof(FrontEndRewards_Widget_C_ShowCurrentReward) == 0x000020, "Wrong size on FrontEndRewards_Widget_C_ShowCurrentReward");
static_assert(offsetof(FrontEndRewards_Widget_C_ShowCurrentReward, K2Node_DynamicCast_AsFort_Reward_Epic_Quest_Data) == 0x000000, "Member 'FrontEndRewards_Widget_C_ShowCurrentReward::K2Node_DynamicCast_AsFort_Reward_Epic_Quest_Data' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ShowCurrentReward, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'FrontEndRewards_Widget_C_ShowCurrentReward::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ShowCurrentReward, K2Node_DynamicCast_AsFront_End_Rewards_Choice_Rewards) == 0x000010, "Member 'FrontEndRewards_Widget_C_ShowCurrentReward::K2Node_DynamicCast_AsFront_End_Rewards_Choice_Rewards' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ShowCurrentReward, K2Node_DynamicCast_bSuccess2) == 0x000018, "Member 'FrontEndRewards_Widget_C_ShowCurrentReward::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ShowCurrentReward, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'FrontEndRewards_Widget_C_ShowCurrentReward::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.HandleExpeditionCompleted
// 0x0028 (0x0028 - 0x0000)
struct FrontEndRewards_Widget_C_HandleExpeditionCompleted final
{
public:
	bool                                          Succeeded;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortItemInstanceQuantityPair>  Rewards;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class URewards_ItemCard_C*>            CallFunc_CreateCardsFromItemInstanceQuantityList_Cards; // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(FrontEndRewards_Widget_C_HandleExpeditionCompleted) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_HandleExpeditionCompleted");
static_assert(sizeof(FrontEndRewards_Widget_C_HandleExpeditionCompleted) == 0x000028, "Wrong size on FrontEndRewards_Widget_C_HandleExpeditionCompleted");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleExpeditionCompleted, Succeeded) == 0x000000, "Member 'FrontEndRewards_Widget_C_HandleExpeditionCompleted::Succeeded' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleExpeditionCompleted, Rewards) == 0x000008, "Member 'FrontEndRewards_Widget_C_HandleExpeditionCompleted::Rewards' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleExpeditionCompleted, CallFunc_CreateCardsFromItemInstanceQuantityList_Cards) == 0x000018, "Member 'FrontEndRewards_Widget_C_HandleExpeditionCompleted::CallFunc_CreateCardsFromItemInstanceQuantityList_Cards' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.InitInitialRewards
// 0x0048 (0x0048 - 0x0000)
struct FrontEndRewards_Widget_C_InitInitialRewards final
{
public:
	struct FFrontEndRewards_Definition            Definition;                                        // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_InitInitialRewards) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_InitInitialRewards");
static_assert(sizeof(FrontEndRewards_Widget_C_InitInitialRewards) == 0x000048, "Wrong size on FrontEndRewards_Widget_C_InitInitialRewards");
static_assert(offsetof(FrontEndRewards_Widget_C_InitInitialRewards, Definition) == 0x000000, "Member 'FrontEndRewards_Widget_C_InitInitialRewards::Definition' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.HandleChoiceRewardSelected
// 0x0038 (0x0038 - 0x0000)
struct FrontEndRewards_Widget_C_HandleChoiceRewardSelected final
{
public:
	int32                                         RewardIndex;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              Item;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortRewardNotificationData*            NotificationData;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemDefinition*                    CallFunc_GetItemDefinitionBP_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPersistentName_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Widget_C_HandleChoiceRewardSelected) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_HandleChoiceRewardSelected");
static_assert(sizeof(FrontEndRewards_Widget_C_HandleChoiceRewardSelected) == 0x000038, "Wrong size on FrontEndRewards_Widget_C_HandleChoiceRewardSelected");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleChoiceRewardSelected, RewardIndex) == 0x000000, "Member 'FrontEndRewards_Widget_C_HandleChoiceRewardSelected::RewardIndex' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleChoiceRewardSelected, Item) == 0x000008, "Member 'FrontEndRewards_Widget_C_HandleChoiceRewardSelected::Item' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleChoiceRewardSelected, NotificationData) == 0x000010, "Member 'FrontEndRewards_Widget_C_HandleChoiceRewardSelected::NotificationData' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleChoiceRewardSelected, CallFunc_GetItemDefinitionBP_ReturnValue) == 0x000018, "Member 'FrontEndRewards_Widget_C_HandleChoiceRewardSelected::CallFunc_GetItemDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleChoiceRewardSelected, CallFunc_GetPersistentName_ReturnValue) == 0x000020, "Member 'FrontEndRewards_Widget_C_HandleChoiceRewardSelected::CallFunc_GetPersistentName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleChoiceRewardSelected, CallFunc_Contains_ReturnValue) == 0x000030, "Member 'FrontEndRewards_Widget_C_HandleChoiceRewardSelected::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleChoiceRewardSelected, K2Node_SwitchEnum_CmpSuccess) == 0x000031, "Member 'FrontEndRewards_Widget_C_HandleChoiceRewardSelected::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleChoiceRewardSelected, CallFunc_IsValid_ReturnValue) == 0x000032, "Member 'FrontEndRewards_Widget_C_HandleChoiceRewardSelected::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.ClaimQuestChoiceReward
// 0x0038 (0x0038 - 0x0000)
struct FrontEndRewards_Widget_C_ClaimQuestChoiceReward final
{
public:
	class UFortRewardNotificationData*            NotificationData;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectionIndex;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              Item;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortRewardQuestData*                   K2Node_DynamicCast_AsFort_Reward_Quest_Data;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_ClaimQuestChoiceReward) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_ClaimQuestChoiceReward");
static_assert(sizeof(FrontEndRewards_Widget_C_ClaimQuestChoiceReward) == 0x000038, "Wrong size on FrontEndRewards_Widget_C_ClaimQuestChoiceReward");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimQuestChoiceReward, NotificationData) == 0x000000, "Member 'FrontEndRewards_Widget_C_ClaimQuestChoiceReward::NotificationData' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimQuestChoiceReward, SelectionIndex) == 0x000008, "Member 'FrontEndRewards_Widget_C_ClaimQuestChoiceReward::SelectionIndex' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimQuestChoiceReward, Item) == 0x000010, "Member 'FrontEndRewards_Widget_C_ClaimQuestChoiceReward::Item' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimQuestChoiceReward, K2Node_DynamicCast_AsFort_Reward_Quest_Data) == 0x000018, "Member 'FrontEndRewards_Widget_C_ClaimQuestChoiceReward::K2Node_DynamicCast_AsFort_Reward_Quest_Data' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimQuestChoiceReward, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'FrontEndRewards_Widget_C_ClaimQuestChoiceReward::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimQuestChoiceReward, CallFunc_GetContext_ReturnValue) == 0x000028, "Member 'FrontEndRewards_Widget_C_ClaimQuestChoiceReward::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimQuestChoiceReward, CallFunc_GetQuestManager_ReturnValue) == 0x000030, "Member 'FrontEndRewards_Widget_C_ClaimQuestChoiceReward::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.CreateCardsFromItemList
// 0x0080 (0x0080 - 0x0000)
struct FrontEndRewards_Widget_C_CreateCardsFromItemList final
{
public:
	TArray<class UFortItem*>                      Items;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<EFortInventoryType>                    ItemInventoryTypeList;                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class URewards_ItemCard_C*>            Cards;                                             // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class URewards_ItemCard_C*>            CardList;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URewards_ItemCard_C*                    CallFunc_Create_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortInventoryType                            CallFunc_Array_Get_Item2;                          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_CreateCardsFromItemList) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_CreateCardsFromItemList");
static_assert(sizeof(FrontEndRewards_Widget_C_CreateCardsFromItemList) == 0x000080, "Wrong size on FrontEndRewards_Widget_C_CreateCardsFromItemList");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemList, Items) == 0x000000, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemList::Items' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemList, ItemInventoryTypeList) == 0x000010, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemList::ItemInventoryTypeList' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemList, Cards) == 0x000020, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemList::Cards' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemList, CardList) == 0x000030, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemList::CardList' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemList, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemList, CallFunc_GetOwningPlayer_ReturnValue) == 0x000048, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemList::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemList, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemList, CallFunc_Create_ReturnValue) == 0x000058, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemList::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemList, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemList, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemList, Temp_int_Array_Index_Variable) == 0x000068, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemList, CallFunc_Array_Get_Item) == 0x000070, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemList, CallFunc_Array_Get_Item2) == 0x000078, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemList::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemList, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000079, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemList::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemList, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00007A, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemList::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemList, CallFunc_Array_Add_ReturnValue) == 0x00007C, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.CreateCardsFromItemQuantityList
// 0x00B8 (0x00B8 - 0x0000)
struct FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList final
{
public:
	TArray<struct FFortItemQuantityPair>          Items;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class URewards_ItemCard_C*>            Cards;                                             // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<EFortInventoryType>                    ItemInventoryTypeList;                             // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UFortItem*>                      FortItemList;                                      // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortItemQuantityPair                  CallFunc_Array_Get_Item;                           // 0x0050(0x0030)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemDefinition*                    CallFunc_GetItemFromItemQuantityPair_ReturnValue;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              CallFunc_CreateTemporaryItemInstanceBP_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class URewards_ItemCard_C*>            CallFunc_CreateCardsFromItemList_Cards;            // 0x00A0(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList");
static_assert(sizeof(FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList) == 0x0000B8, "Wrong size on FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList, Items) == 0x000000, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList::Items' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList, Cards) == 0x000010, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList::Cards' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList, ItemInventoryTypeList) == 0x000020, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList::ItemInventoryTypeList' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList, FortItemList) == 0x000030, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList::FortItemList' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList, Temp_int_Array_Index_Variable) == 0x000044, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList, CallFunc_Array_Get_Item) == 0x000050, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList, CallFunc_GetContext_ReturnValue) == 0x000088, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList, CallFunc_GetItemFromItemQuantityPair_ReturnValue) == 0x000090, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList::CallFunc_GetItemFromItemQuantityPair_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList, CallFunc_CreateTemporaryItemInstanceBP_ReturnValue) == 0x000098, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList::CallFunc_CreateTemporaryItemInstanceBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList, CallFunc_CreateCardsFromItemList_Cards) == 0x0000A0, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList::CallFunc_CreateCardsFromItemList_Cards' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemQuantityList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.CreateCardsFromItemInstanceQuantityList
// 0x00B0 (0x00B0 - 0x0000)
struct FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList final
{
public:
	TArray<struct FFortItemInstanceQuantityPair>  Items;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class URewards_ItemCard_C*>            Cards;                                             // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class URewards_ItemCard_C*>            NewCards;                                          // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<EFortInventoryType>                    ItemInventoryTypeList;                             // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UFortItem*>                      FortItemList;                                      // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortItemInstanceQuantityPair          CallFunc_Array_Get_Item;                           // 0x0060(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URewards_ItemCard_C*                    CallFunc_Array_Get_Item2;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class URewards_ItemCard_C*>            CallFunc_CreateCardsFromItemList_Cards;            // 0x00A0(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList");
static_assert(sizeof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList) == 0x0000B0, "Wrong size on FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList, Items) == 0x000000, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList::Items' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList, Cards) == 0x000010, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList::Cards' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList, NewCards) == 0x000020, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList::NewCards' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList, ItemInventoryTypeList) == 0x000030, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList::ItemInventoryTypeList' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList, FortItemList) == 0x000040, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList::FortItemList' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList, Temp_int_Array_Index_Variable) == 0x000054, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList, CallFunc_Array_Get_Item) == 0x000060, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList, Temp_int_Loop_Counter_Variable2) == 0x000078, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList, CallFunc_Add_IntInt_ReturnValue2) == 0x00007C, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList, CallFunc_Array_Length_ReturnValue2) == 0x000080, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList, Temp_int_Array_Index_Variable2) == 0x000084, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList, CallFunc_Less_IntInt_ReturnValue2) == 0x000088, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList, CallFunc_Array_Get_Item2) == 0x000090, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList, CallFunc_Array_Add_ReturnValue) == 0x000098, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList, CallFunc_Array_Add_ReturnValue2) == 0x00009C, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList, CallFunc_CreateCardsFromItemList_Cards) == 0x0000A0, "Member 'FrontEndRewards_Widget_C_CreateCardsFromItemInstanceQuantityList::CallFunc_CreateCardsFromItemList_Cards' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.ClaimMissionRewards
// 0x0008 (0x0008 - 0x0000)
struct FrontEndRewards_Widget_C_ClaimMissionRewards final
{
public:
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_ClaimMissionRewards) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_ClaimMissionRewards");
static_assert(sizeof(FrontEndRewards_Widget_C_ClaimMissionRewards) == 0x000008, "Wrong size on FrontEndRewards_Widget_C_ClaimMissionRewards");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimMissionRewards, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'FrontEndRewards_Widget_C_ClaimMissionRewards::CallFunc_GetContext_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.SetHeaderVisibility
// 0x0001 (0x0001 - 0x0000)
struct FrontEndRewards_Widget_C_SetHeaderVisibility final
{
public:
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Widget_C_SetHeaderVisibility) == 0x000001, "Wrong alignment on FrontEndRewards_Widget_C_SetHeaderVisibility");
static_assert(sizeof(FrontEndRewards_Widget_C_SetHeaderVisibility) == 0x000001, "Wrong size on FrontEndRewards_Widget_C_SetHeaderVisibility");
static_assert(offsetof(FrontEndRewards_Widget_C_SetHeaderVisibility, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000000, "Member 'FrontEndRewards_Widget_C_SetHeaderVisibility::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.PopulateQuestRewards
// 0x0048 (0x0048 - 0x0000)
struct FrontEndRewards_Widget_C_PopulateQuestRewards final
{
public:
	class UFortQuestItem*                         Quest;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFortItemInstanceQuantityPair>  CallFunc_GetPreviewAllSelectableRewards_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class URewards_ItemCard_C*>            CallFunc_CreateCardsFromItemInstanceQuantityList_Cards; // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	class UFortRewardQuestData*                   K2Node_DynamicCast_AsFort_Reward_Quest_Data;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItemDefinition*               CallFunc_GetQuestDefinitionBP_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuestRewardType                          CallFunc_GetRewardType_ReturnValue;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Widget_C_PopulateQuestRewards) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_PopulateQuestRewards");
static_assert(sizeof(FrontEndRewards_Widget_C_PopulateQuestRewards) == 0x000048, "Wrong size on FrontEndRewards_Widget_C_PopulateQuestRewards");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateQuestRewards, Quest) == 0x000000, "Member 'FrontEndRewards_Widget_C_PopulateQuestRewards::Quest' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateQuestRewards, CallFunc_GetPreviewAllSelectableRewards_ReturnValue) == 0x000008, "Member 'FrontEndRewards_Widget_C_PopulateQuestRewards::CallFunc_GetPreviewAllSelectableRewards_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateQuestRewards, CallFunc_CreateCardsFromItemInstanceQuantityList_Cards) == 0x000018, "Member 'FrontEndRewards_Widget_C_PopulateQuestRewards::CallFunc_CreateCardsFromItemInstanceQuantityList_Cards' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateQuestRewards, K2Node_DynamicCast_AsFort_Reward_Quest_Data) == 0x000028, "Member 'FrontEndRewards_Widget_C_PopulateQuestRewards::K2Node_DynamicCast_AsFort_Reward_Quest_Data' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateQuestRewards, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'FrontEndRewards_Widget_C_PopulateQuestRewards::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateQuestRewards, CallFunc_GetQuestDefinitionBP_ReturnValue) == 0x000038, "Member 'FrontEndRewards_Widget_C_PopulateQuestRewards::CallFunc_GetQuestDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateQuestRewards, CallFunc_GetRewardType_ReturnValue) == 0x000040, "Member 'FrontEndRewards_Widget_C_PopulateQuestRewards::CallFunc_GetRewardType_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateQuestRewards, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'FrontEndRewards_Widget_C_PopulateQuestRewards::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.PopulateNewQuest
// 0x00A0 (0x00A0 - 0x0000)
struct FrontEndRewards_Widget_C_PopulateNewQuest final
{
public:
	class UFortRewardEpicQuestData*               K2Node_DynamicCast_AsFort_Reward_Epic_Quest_Data;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
};
static_assert(alignof(FrontEndRewards_Widget_C_PopulateNewQuest) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_PopulateNewQuest");
static_assert(sizeof(FrontEndRewards_Widget_C_PopulateNewQuest) == 0x0000A0, "Wrong size on FrontEndRewards_Widget_C_PopulateNewQuest");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateNewQuest, K2Node_DynamicCast_AsFort_Reward_Epic_Quest_Data) == 0x000000, "Member 'FrontEndRewards_Widget_C_PopulateNewQuest::K2Node_DynamicCast_AsFort_Reward_Epic_Quest_Data' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateNewQuest, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'FrontEndRewards_Widget_C_PopulateNewQuest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateNewQuest, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'FrontEndRewards_Widget_C_PopulateNewQuest::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateNewQuest, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'FrontEndRewards_Widget_C_PopulateNewQuest::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateNewQuest, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'FrontEndRewards_Widget_C_PopulateNewQuest::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateNewQuest, K2Node_MakeArray_Array) == 0x000078, "Member 'FrontEndRewards_Widget_C_PopulateNewQuest::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateNewQuest, CallFunc_Format_ReturnValue) == 0x000088, "Member 'FrontEndRewards_Widget_C_PopulateNewQuest::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.PopulateExpedition
// 0x00A0 (0x00A0 - 0x0000)
struct FrontEndRewards_Widget_C_PopulateExpedition final
{
public:
	class UFortRewardExpeditionData*              K2Node_DynamicCast_AsFort_Reward_Expedition_Data;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
};
static_assert(alignof(FrontEndRewards_Widget_C_PopulateExpedition) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_PopulateExpedition");
static_assert(sizeof(FrontEndRewards_Widget_C_PopulateExpedition) == 0x0000A0, "Wrong size on FrontEndRewards_Widget_C_PopulateExpedition");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateExpedition, K2Node_DynamicCast_AsFort_Reward_Expedition_Data) == 0x000000, "Member 'FrontEndRewards_Widget_C_PopulateExpedition::K2Node_DynamicCast_AsFort_Reward_Expedition_Data' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateExpedition, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'FrontEndRewards_Widget_C_PopulateExpedition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateExpedition, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'FrontEndRewards_Widget_C_PopulateExpedition::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateExpedition, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'FrontEndRewards_Widget_C_PopulateExpedition::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateExpedition, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'FrontEndRewards_Widget_C_PopulateExpedition::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateExpedition, K2Node_MakeArray_Array) == 0x000078, "Member 'FrontEndRewards_Widget_C_PopulateExpedition::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateExpedition, CallFunc_Format_ReturnValue) == 0x000088, "Member 'FrontEndRewards_Widget_C_PopulateExpedition::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.PopulateCollectionBookRewards
// 0x0098 (0x0098 - 0x0000)
struct FrontEndRewards_Widget_C_PopulateCollectionBookRewards final
{
public:
	TArray<struct FFortItemQuantityPair>          TempCollectionBookRewards;                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortRewardCollectionBookData*          K2Node_DynamicCast_AsFort_Reward_Collection_Book_Data; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasSelectableRewards_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortSelectableRewardOption            CallFunc_Array_Get_Item;                           // 0x0030(0x0010)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortItemQuantityPair                  CallFunc_Array_Get_Item2;                          // 0x0048(0x0030)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class URewards_ItemCard_C*>            CallFunc_CreateCardsFromItemQuantityList_Cards;    // 0x0080(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_PopulateCollectionBookRewards) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_PopulateCollectionBookRewards");
static_assert(sizeof(FrontEndRewards_Widget_C_PopulateCollectionBookRewards) == 0x000098, "Wrong size on FrontEndRewards_Widget_C_PopulateCollectionBookRewards");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateCollectionBookRewards, TempCollectionBookRewards) == 0x000000, "Member 'FrontEndRewards_Widget_C_PopulateCollectionBookRewards::TempCollectionBookRewards' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateCollectionBookRewards, Temp_int_Array_Index_Variable) == 0x000010, "Member 'FrontEndRewards_Widget_C_PopulateCollectionBookRewards::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateCollectionBookRewards, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'FrontEndRewards_Widget_C_PopulateCollectionBookRewards::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateCollectionBookRewards, K2Node_DynamicCast_AsFort_Reward_Collection_Book_Data) == 0x000018, "Member 'FrontEndRewards_Widget_C_PopulateCollectionBookRewards::K2Node_DynamicCast_AsFort_Reward_Collection_Book_Data' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateCollectionBookRewards, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'FrontEndRewards_Widget_C_PopulateCollectionBookRewards::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateCollectionBookRewards, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'FrontEndRewards_Widget_C_PopulateCollectionBookRewards::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateCollectionBookRewards, CallFunc_HasSelectableRewards_ReturnValue) == 0x000028, "Member 'FrontEndRewards_Widget_C_PopulateCollectionBookRewards::CallFunc_HasSelectableRewards_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateCollectionBookRewards, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'FrontEndRewards_Widget_C_PopulateCollectionBookRewards::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateCollectionBookRewards, CallFunc_Array_Get_Item) == 0x000030, "Member 'FrontEndRewards_Widget_C_PopulateCollectionBookRewards::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateCollectionBookRewards, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'FrontEndRewards_Widget_C_PopulateCollectionBookRewards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateCollectionBookRewards, CallFunc_Array_Get_Item2) == 0x000048, "Member 'FrontEndRewards_Widget_C_PopulateCollectionBookRewards::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateCollectionBookRewards, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'FrontEndRewards_Widget_C_PopulateCollectionBookRewards::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateCollectionBookRewards, CallFunc_CreateCardsFromItemQuantityList_Cards) == 0x000080, "Member 'FrontEndRewards_Widget_C_PopulateCollectionBookRewards::CallFunc_CreateCardsFromItemQuantityList_Cards' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateCollectionBookRewards, CallFunc_Array_Add_ReturnValue) == 0x000090, "Member 'FrontEndRewards_Widget_C_PopulateCollectionBookRewards::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.ClaimQuestListReward
// 0x0020 (0x0020 - 0x0000)
struct FrontEndRewards_Widget_C_ClaimQuestListReward final
{
public:
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortRewardQuestData*                   K2Node_DynamicCast_AsFort_Reward_Quest_Data;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Widget_C_ClaimQuestListReward) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_ClaimQuestListReward");
static_assert(sizeof(FrontEndRewards_Widget_C_ClaimQuestListReward) == 0x000020, "Wrong size on FrontEndRewards_Widget_C_ClaimQuestListReward");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimQuestListReward, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'FrontEndRewards_Widget_C_ClaimQuestListReward::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimQuestListReward, CallFunc_GetQuestManager_ReturnValue) == 0x000008, "Member 'FrontEndRewards_Widget_C_ClaimQuestListReward::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimQuestListReward, K2Node_DynamicCast_AsFort_Reward_Quest_Data) == 0x000010, "Member 'FrontEndRewards_Widget_C_ClaimQuestListReward::K2Node_DynamicCast_AsFort_Reward_Quest_Data' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimQuestListReward, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'FrontEndRewards_Widget_C_ClaimQuestListReward::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.ClaimCollectionBookRewards
// 0x0020 (0x0020 - 0x0000)
struct FrontEndRewards_Widget_C_ClaimCollectionBookRewards final
{
public:
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortCollectionBookManager*             CallFunc_GetCollectionBookManager_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortRewardCollectionBookData*          K2Node_DynamicCast_AsFort_Reward_Collection_Book_Data; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Widget_C_ClaimCollectionBookRewards) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_ClaimCollectionBookRewards");
static_assert(sizeof(FrontEndRewards_Widget_C_ClaimCollectionBookRewards) == 0x000020, "Wrong size on FrontEndRewards_Widget_C_ClaimCollectionBookRewards");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimCollectionBookRewards, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'FrontEndRewards_Widget_C_ClaimCollectionBookRewards::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimCollectionBookRewards, CallFunc_GetCollectionBookManager_ReturnValue) == 0x000008, "Member 'FrontEndRewards_Widget_C_ClaimCollectionBookRewards::CallFunc_GetCollectionBookManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimCollectionBookRewards, K2Node_DynamicCast_AsFort_Reward_Collection_Book_Data) == 0x000010, "Member 'FrontEndRewards_Widget_C_ClaimCollectionBookRewards::K2Node_DynamicCast_AsFort_Reward_Collection_Book_Data' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimCollectionBookRewards, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'FrontEndRewards_Widget_C_ClaimCollectionBookRewards::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.ClaimCollectionBookChoiceReward
// 0x0038 (0x0038 - 0x0000)
struct FrontEndRewards_Widget_C_ClaimCollectionBookChoiceReward final
{
public:
	class UFortRewardNotificationData*            NotificationData;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectionIndex;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortItem*                              Item;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortRewardCollectionBookData*          K2Node_DynamicCast_AsFort_Reward_Collection_Book_Data; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortCollectionBookManager*             CallFunc_GetCollectionBookManager_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_ClaimCollectionBookChoiceReward) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_ClaimCollectionBookChoiceReward");
static_assert(sizeof(FrontEndRewards_Widget_C_ClaimCollectionBookChoiceReward) == 0x000038, "Wrong size on FrontEndRewards_Widget_C_ClaimCollectionBookChoiceReward");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimCollectionBookChoiceReward, NotificationData) == 0x000000, "Member 'FrontEndRewards_Widget_C_ClaimCollectionBookChoiceReward::NotificationData' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimCollectionBookChoiceReward, SelectionIndex) == 0x000008, "Member 'FrontEndRewards_Widget_C_ClaimCollectionBookChoiceReward::SelectionIndex' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimCollectionBookChoiceReward, Item) == 0x000010, "Member 'FrontEndRewards_Widget_C_ClaimCollectionBookChoiceReward::Item' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimCollectionBookChoiceReward, K2Node_DynamicCast_AsFort_Reward_Collection_Book_Data) == 0x000018, "Member 'FrontEndRewards_Widget_C_ClaimCollectionBookChoiceReward::K2Node_DynamicCast_AsFort_Reward_Collection_Book_Data' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimCollectionBookChoiceReward, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'FrontEndRewards_Widget_C_ClaimCollectionBookChoiceReward::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimCollectionBookChoiceReward, CallFunc_GetContext_ReturnValue) == 0x000028, "Member 'FrontEndRewards_Widget_C_ClaimCollectionBookChoiceReward::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimCollectionBookChoiceReward, CallFunc_GetCollectionBookManager_ReturnValue) == 0x000030, "Member 'FrontEndRewards_Widget_C_ClaimCollectionBookChoiceReward::CallFunc_GetCollectionBookManager_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.HandleOnQuestRewardsClaimed
// 0x0028 (0x0028 - 0x0000)
struct FrontEndRewards_Widget_C_HandleOnQuestRewardsClaimed final
{
public:
	class UFortQuestItem*                         Quest;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFortItemInstanceQuantityPair>  Rewards;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class URewards_ItemCard_C*>            CallFunc_CreateCardsFromItemInstanceQuantityList_Cards; // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(FrontEndRewards_Widget_C_HandleOnQuestRewardsClaimed) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_HandleOnQuestRewardsClaimed");
static_assert(sizeof(FrontEndRewards_Widget_C_HandleOnQuestRewardsClaimed) == 0x000028, "Wrong size on FrontEndRewards_Widget_C_HandleOnQuestRewardsClaimed");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleOnQuestRewardsClaimed, Quest) == 0x000000, "Member 'FrontEndRewards_Widget_C_HandleOnQuestRewardsClaimed::Quest' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleOnQuestRewardsClaimed, Rewards) == 0x000008, "Member 'FrontEndRewards_Widget_C_HandleOnQuestRewardsClaimed::Rewards' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleOnQuestRewardsClaimed, CallFunc_CreateCardsFromItemInstanceQuantityList_Cards) == 0x000018, "Member 'FrontEndRewards_Widget_C_HandleOnQuestRewardsClaimed::CallFunc_CreateCardsFromItemInstanceQuantityList_Cards' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.HandleOnCollectionBookRewardsClaimed
// 0x0098 (0x0098 - 0x0000)
struct FrontEndRewards_Widget_C_HandleOnCollectionBookRewardsClaimed final
{
public:
	struct FFortCollectionBookRewards             RewardRequested;                                   // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Success;                                           // 0x0070(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortItemInstanceQuantityPair>  ActualRewards;                                     // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class URewards_ItemCard_C*>            CallFunc_CreateCardsFromItemInstanceQuantityList_Cards; // 0x0088(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(FrontEndRewards_Widget_C_HandleOnCollectionBookRewardsClaimed) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_HandleOnCollectionBookRewardsClaimed");
static_assert(sizeof(FrontEndRewards_Widget_C_HandleOnCollectionBookRewardsClaimed) == 0x000098, "Wrong size on FrontEndRewards_Widget_C_HandleOnCollectionBookRewardsClaimed");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleOnCollectionBookRewardsClaimed, RewardRequested) == 0x000000, "Member 'FrontEndRewards_Widget_C_HandleOnCollectionBookRewardsClaimed::RewardRequested' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleOnCollectionBookRewardsClaimed, Success) == 0x000070, "Member 'FrontEndRewards_Widget_C_HandleOnCollectionBookRewardsClaimed::Success' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleOnCollectionBookRewardsClaimed, ActualRewards) == 0x000078, "Member 'FrontEndRewards_Widget_C_HandleOnCollectionBookRewardsClaimed::ActualRewards' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleOnCollectionBookRewardsClaimed, CallFunc_CreateCardsFromItemInstanceQuantityList_Cards) == 0x000088, "Member 'FrontEndRewards_Widget_C_HandleOnCollectionBookRewardsClaimed::CallFunc_CreateCardsFromItemInstanceQuantityList_Cards' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.PopulateListRewardsWidgetFromCardList
// 0x00A8 (0x00A8 - 0x0000)
struct FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList final
{
public:
	TArray<class URewards_ItemCard_C*>            Cards;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0018)()
};
static_assert(alignof(FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList");
static_assert(sizeof(FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList) == 0x0000A8, "Wrong size on FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList, Cards) == 0x000000, "Member 'FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList::Cards' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList, K2Node_MakeArray_Array) == 0x000080, "Member 'FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList, CallFunc_Format_ReturnValue) == 0x000090, "Member 'FrontEndRewards_Widget_C_PopulateListRewardsWidgetFromCardList::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.HandleOnMissionRewardsClaimed
// 0x0020 (0x0020 - 0x0000)
struct FrontEndRewards_Widget_C_HandleOnMissionRewardsClaimed final
{
public:
	TArray<struct FFortItemInstanceQuantityPair>  Rewards;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class URewards_ItemCard_C*>            CallFunc_CreateCardsFromItemInstanceQuantityList_Cards; // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(FrontEndRewards_Widget_C_HandleOnMissionRewardsClaimed) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_HandleOnMissionRewardsClaimed");
static_assert(sizeof(FrontEndRewards_Widget_C_HandleOnMissionRewardsClaimed) == 0x000020, "Wrong size on FrontEndRewards_Widget_C_HandleOnMissionRewardsClaimed");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleOnMissionRewardsClaimed, Rewards) == 0x000000, "Member 'FrontEndRewards_Widget_C_HandleOnMissionRewardsClaimed::Rewards' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleOnMissionRewardsClaimed, CallFunc_CreateCardsFromItemInstanceQuantityList_Cards) == 0x000010, "Member 'FrontEndRewards_Widget_C_HandleOnMissionRewardsClaimed::CallFunc_CreateCardsFromItemInstanceQuantityList_Cards' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.InitSubWidgets
// 0x0038 (0x0038 - 0x0000)
struct FrontEndRewards_Widget_C_InitSubWidgets final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortRewardNotificationSubWidget*       K2Node_DynamicCast_AsFort_Reward_Notification_Sub_Widget; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_InitSubWidgets) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_InitSubWidgets");
static_assert(sizeof(FrontEndRewards_Widget_C_InitSubWidgets) == 0x000038, "Wrong size on FrontEndRewards_Widget_C_InitSubWidgets");
static_assert(offsetof(FrontEndRewards_Widget_C_InitSubWidgets, Temp_int_Variable) == 0x000000, "Member 'FrontEndRewards_Widget_C_InitSubWidgets::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitSubWidgets, CallFunc_GetChildAt_ReturnValue) == 0x000008, "Member 'FrontEndRewards_Widget_C_InitSubWidgets::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitSubWidgets, CallFunc_GetChildrenCount_ReturnValue) == 0x000010, "Member 'FrontEndRewards_Widget_C_InitSubWidgets::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitSubWidgets, K2Node_DynamicCast_AsFort_Reward_Notification_Sub_Widget) == 0x000018, "Member 'FrontEndRewards_Widget_C_InitSubWidgets::K2Node_DynamicCast_AsFort_Reward_Notification_Sub_Widget' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitSubWidgets, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'FrontEndRewards_Widget_C_InitSubWidgets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitSubWidgets, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'FrontEndRewards_Widget_C_InitSubWidgets::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitSubWidgets, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'FrontEndRewards_Widget_C_InitSubWidgets::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitSubWidgets, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'FrontEndRewards_Widget_C_InitSubWidgets::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitSubWidgets, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'FrontEndRewards_Widget_C_InitSubWidgets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.PopulateChoiceRewardsWidgetFromCardList
// 0x0018 (0x0018 - 0x0000)
struct FrontEndRewards_Widget_C_PopulateChoiceRewardsWidgetFromCardList final
{
public:
	TArray<class URewards_ItemCard_C*>            Cards;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Widget_C_PopulateChoiceRewardsWidgetFromCardList) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_PopulateChoiceRewardsWidgetFromCardList");
static_assert(sizeof(FrontEndRewards_Widget_C_PopulateChoiceRewardsWidgetFromCardList) == 0x000018, "Wrong size on FrontEndRewards_Widget_C_PopulateChoiceRewardsWidgetFromCardList");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateChoiceRewardsWidgetFromCardList, Cards) == 0x000000, "Member 'FrontEndRewards_Widget_C_PopulateChoiceRewardsWidgetFromCardList::Cards' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateChoiceRewardsWidgetFromCardList, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'FrontEndRewards_Widget_C_PopulateChoiceRewardsWidgetFromCardList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateChoiceRewardsWidgetFromCardList, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'FrontEndRewards_Widget_C_PopulateChoiceRewardsWidgetFromCardList::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.UnbindEvents
// 0x0070 (0x0070 - 0x0000)
struct FrontEndRewards_Widget_C_UnbindEvents final
{
public:
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TArray<struct FFortItemInstanceQuantityPair>& MissionRewards)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortGlobalUIContext*                   CallFunc_GetContext_ReturnValue2;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TArray<struct FFortItemInstanceQuantityPair>& MissionRewards)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class UFortCollectionBookManager*             CallFunc_GetCollectionBookManager_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FFortCollectionBookRewards& RewardClaimed, bool bSuccess, TArray<struct FFortItemInstanceQuantityPair>& ActualRewards)> K2Node_CreateDelegate_OutputDelegate3;             // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue3;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UFortQuestItem* Quest, TArray<struct FFortItemInstanceQuantityPair>& Rewards)> K2Node_CreateDelegate_OutputDelegate4;             // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue4;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_UnbindEvents) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_UnbindEvents");
static_assert(sizeof(FrontEndRewards_Widget_C_UnbindEvents) == 0x000070, "Wrong size on FrontEndRewards_Widget_C_UnbindEvents");
static_assert(offsetof(FrontEndRewards_Widget_C_UnbindEvents, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'FrontEndRewards_Widget_C_UnbindEvents::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_UnbindEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'FrontEndRewards_Widget_C_UnbindEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_UnbindEvents, CallFunc_GetQuestManager_ReturnValue) == 0x000018, "Member 'FrontEndRewards_Widget_C_UnbindEvents::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_UnbindEvents, CallFunc_GetContext_ReturnValue2) == 0x000020, "Member 'FrontEndRewards_Widget_C_UnbindEvents::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_UnbindEvents, K2Node_CreateDelegate_OutputDelegate2) == 0x000028, "Member 'FrontEndRewards_Widget_C_UnbindEvents::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_UnbindEvents, CallFunc_GetCollectionBookManager_ReturnValue) == 0x000038, "Member 'FrontEndRewards_Widget_C_UnbindEvents::CallFunc_GetCollectionBookManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_UnbindEvents, K2Node_CreateDelegate_OutputDelegate3) == 0x000040, "Member 'FrontEndRewards_Widget_C_UnbindEvents::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_UnbindEvents, CallFunc_GetContext_ReturnValue3) == 0x000050, "Member 'FrontEndRewards_Widget_C_UnbindEvents::CallFunc_GetContext_ReturnValue3' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_UnbindEvents, K2Node_CreateDelegate_OutputDelegate4) == 0x000058, "Member 'FrontEndRewards_Widget_C_UnbindEvents::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_UnbindEvents, CallFunc_GetContext_ReturnValue4) == 0x000068, "Member 'FrontEndRewards_Widget_C_UnbindEvents::CallFunc_GetContext_ReturnValue4' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.PopulateVO
// 0x0040 (0x0040 - 0x0000)
struct FrontEndRewards_Widget_C_PopulateVO final
{
public:
	class UFortRewardQuestData*                   K2Node_DynamicCast_AsFort_Reward_Quest_Data;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortRewardEpicQuestData*               K2Node_DynamicCast_AsFort_Reward_Epic_Quest_Data;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortQuestItemDefinition*               CallFunc_GetQuestDefinitionBP_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItemDefinition*               CallFunc_GetQuestDefinitionBP_ReturnValue2;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortConversation*                      CallFunc_GetClaimConversation_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortConversation*                      CallFunc_GetIntroConversation_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_PopulateVO) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_PopulateVO");
static_assert(sizeof(FrontEndRewards_Widget_C_PopulateVO) == 0x000040, "Wrong size on FrontEndRewards_Widget_C_PopulateVO");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateVO, K2Node_DynamicCast_AsFort_Reward_Quest_Data) == 0x000000, "Member 'FrontEndRewards_Widget_C_PopulateVO::K2Node_DynamicCast_AsFort_Reward_Quest_Data' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateVO, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'FrontEndRewards_Widget_C_PopulateVO::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateVO, K2Node_DynamicCast_AsFort_Reward_Epic_Quest_Data) == 0x000010, "Member 'FrontEndRewards_Widget_C_PopulateVO::K2Node_DynamicCast_AsFort_Reward_Epic_Quest_Data' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateVO, K2Node_DynamicCast_bSuccess2) == 0x000018, "Member 'FrontEndRewards_Widget_C_PopulateVO::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateVO, CallFunc_GetQuestDefinitionBP_ReturnValue) == 0x000020, "Member 'FrontEndRewards_Widget_C_PopulateVO::CallFunc_GetQuestDefinitionBP_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateVO, CallFunc_GetQuestDefinitionBP_ReturnValue2) == 0x000028, "Member 'FrontEndRewards_Widget_C_PopulateVO::CallFunc_GetQuestDefinitionBP_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateVO, CallFunc_GetClaimConversation_ReturnValue) == 0x000030, "Member 'FrontEndRewards_Widget_C_PopulateVO::CallFunc_GetClaimConversation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_PopulateVO, CallFunc_GetIntroConversation_ReturnValue) == 0x000038, "Member 'FrontEndRewards_Widget_C_PopulateVO::CallFunc_GetIntroConversation_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.SkipPopAnimation
// 0x001C (0x001C - 0x0000)
struct FrontEndRewards_Widget_C_SkipPopAnimation final
{
public:
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0000(0x001C)(NoDestructor)
};
static_assert(alignof(FrontEndRewards_Widget_C_SkipPopAnimation) == 0x000004, "Wrong alignment on FrontEndRewards_Widget_C_SkipPopAnimation");
static_assert(sizeof(FrontEndRewards_Widget_C_SkipPopAnimation) == 0x00001C, "Wrong size on FrontEndRewards_Widget_C_SkipPopAnimation");
static_assert(offsetof(FrontEndRewards_Widget_C_SkipPopAnimation, K2Node_MakeStruct_WidgetTransform) == 0x000000, "Member 'FrontEndRewards_Widget_C_SkipPopAnimation::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.InitAdditionalRewards
// 0x0048 (0x0048 - 0x0000)
struct FrontEndRewards_Widget_C_InitAdditionalRewards final
{
public:
	struct FFrontEndRewards_Definition            Definition;                                        // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_InitAdditionalRewards) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_InitAdditionalRewards");
static_assert(sizeof(FrontEndRewards_Widget_C_InitAdditionalRewards) == 0x000048, "Wrong size on FrontEndRewards_Widget_C_InitAdditionalRewards");
static_assert(offsetof(FrontEndRewards_Widget_C_InitAdditionalRewards, Definition) == 0x000000, "Member 'FrontEndRewards_Widget_C_InitAdditionalRewards::Definition' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.InitializeRewardsData
// 0x0108 (0x0108 - 0x0000)
struct FrontEndRewards_Widget_C_InitializeRewardsData final
{
public:
	struct FFrontEndRewards_Definition            FrontEndRewards_Definition;                        // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable3;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortExpeditionItem*                    CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItem*                         CallFunc_Array_Get_Item2;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable3;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortCollectionBookRewards             CallFunc_Array_Get_Item3;                          // 0x0098(0x0070)()
};
static_assert(alignof(FrontEndRewards_Widget_C_InitializeRewardsData) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_InitializeRewardsData");
static_assert(sizeof(FrontEndRewards_Widget_C_InitializeRewardsData) == 0x000108, "Wrong size on FrontEndRewards_Widget_C_InitializeRewardsData");
static_assert(offsetof(FrontEndRewards_Widget_C_InitializeRewardsData, FrontEndRewards_Definition) == 0x000000, "Member 'FrontEndRewards_Widget_C_InitializeRewardsData::FrontEndRewards_Definition' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitializeRewardsData, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'FrontEndRewards_Widget_C_InitializeRewardsData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitializeRewardsData, Temp_int_Loop_Counter_Variable2) == 0x00004C, "Member 'FrontEndRewards_Widget_C_InitializeRewardsData::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitializeRewardsData, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'FrontEndRewards_Widget_C_InitializeRewardsData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitializeRewardsData, CallFunc_Add_IntInt_ReturnValue2) == 0x000054, "Member 'FrontEndRewards_Widget_C_InitializeRewardsData::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitializeRewardsData, Temp_int_Array_Index_Variable) == 0x000058, "Member 'FrontEndRewards_Widget_C_InitializeRewardsData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitializeRewardsData, Temp_int_Loop_Counter_Variable3) == 0x00005C, "Member 'FrontEndRewards_Widget_C_InitializeRewardsData::Temp_int_Loop_Counter_Variable3' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitializeRewardsData, CallFunc_Add_IntInt_ReturnValue3) == 0x000060, "Member 'FrontEndRewards_Widget_C_InitializeRewardsData::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitializeRewardsData, Temp_int_Array_Index_Variable2) == 0x000064, "Member 'FrontEndRewards_Widget_C_InitializeRewardsData::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitializeRewardsData, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'FrontEndRewards_Widget_C_InitializeRewardsData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitializeRewardsData, CallFunc_Array_Get_Item) == 0x000070, "Member 'FrontEndRewards_Widget_C_InitializeRewardsData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitializeRewardsData, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'FrontEndRewards_Widget_C_InitializeRewardsData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitializeRewardsData, CallFunc_Array_Length_ReturnValue2) == 0x00007C, "Member 'FrontEndRewards_Widget_C_InitializeRewardsData::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitializeRewardsData, CallFunc_Array_Get_Item2) == 0x000080, "Member 'FrontEndRewards_Widget_C_InitializeRewardsData::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitializeRewardsData, CallFunc_Less_IntInt_ReturnValue2) == 0x000088, "Member 'FrontEndRewards_Widget_C_InitializeRewardsData::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitializeRewardsData, CallFunc_Array_Length_ReturnValue3) == 0x00008C, "Member 'FrontEndRewards_Widget_C_InitializeRewardsData::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitializeRewardsData, CallFunc_Less_IntInt_ReturnValue3) == 0x000090, "Member 'FrontEndRewards_Widget_C_InitializeRewardsData::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitializeRewardsData, Temp_int_Array_Index_Variable3) == 0x000094, "Member 'FrontEndRewards_Widget_C_InitializeRewardsData::Temp_int_Array_Index_Variable3' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitializeRewardsData, CallFunc_Array_Get_Item3) == 0x000098, "Member 'FrontEndRewards_Widget_C_InitializeRewardsData::CallFunc_Array_Get_Item3' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.InitRewardsQueue
// 0x0030 (0x0030 - 0x0000)
struct FrontEndRewards_Widget_C_InitRewardsQueue final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortRewardNotificationData*            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URewardsIcon_C*                         CallFunc_QueueReward_OutIcon;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_InitRewardsQueue) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_InitRewardsQueue");
static_assert(sizeof(FrontEndRewards_Widget_C_InitRewardsQueue) == 0x000030, "Wrong size on FrontEndRewards_Widget_C_InitRewardsQueue");
static_assert(offsetof(FrontEndRewards_Widget_C_InitRewardsQueue, Temp_int_Array_Index_Variable) == 0x000000, "Member 'FrontEndRewards_Widget_C_InitRewardsQueue::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitRewardsQueue, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'FrontEndRewards_Widget_C_InitRewardsQueue::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitRewardsQueue, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'FrontEndRewards_Widget_C_InitRewardsQueue::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitRewardsQueue, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'FrontEndRewards_Widget_C_InitRewardsQueue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitRewardsQueue, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'FrontEndRewards_Widget_C_InitRewardsQueue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitRewardsQueue, CallFunc_Array_Get_Item) == 0x000018, "Member 'FrontEndRewards_Widget_C_InitRewardsQueue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitRewardsQueue, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'FrontEndRewards_Widget_C_InitRewardsQueue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_InitRewardsQueue, CallFunc_QueueReward_OutIcon) == 0x000028, "Member 'FrontEndRewards_Widget_C_InitRewardsQueue::CallFunc_QueueReward_OutIcon' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.ClaimMissionAlertRewards
// 0x0008 (0x0008 - 0x0000)
struct FrontEndRewards_Widget_C_ClaimMissionAlertRewards final
{
public:
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndRewards_Widget_C_ClaimMissionAlertRewards) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_ClaimMissionAlertRewards");
static_assert(sizeof(FrontEndRewards_Widget_C_ClaimMissionAlertRewards) == 0x000008, "Wrong size on FrontEndRewards_Widget_C_ClaimMissionAlertRewards");
static_assert(offsetof(FrontEndRewards_Widget_C_ClaimMissionAlertRewards, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'FrontEndRewards_Widget_C_ClaimMissionAlertRewards::CallFunc_GetContext_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.HandleOnMissionAlertRewardsClaimed
// 0x0020 (0x0020 - 0x0000)
struct FrontEndRewards_Widget_C_HandleOnMissionAlertRewardsClaimed final
{
public:
	TArray<struct FFortItemInstanceQuantityPair>  Rewards;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<class URewards_ItemCard_C*>            CallFunc_CreateCardsFromItemInstanceQuantityList_Cards; // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(FrontEndRewards_Widget_C_HandleOnMissionAlertRewardsClaimed) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_HandleOnMissionAlertRewardsClaimed");
static_assert(sizeof(FrontEndRewards_Widget_C_HandleOnMissionAlertRewardsClaimed) == 0x000020, "Wrong size on FrontEndRewards_Widget_C_HandleOnMissionAlertRewardsClaimed");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleOnMissionAlertRewardsClaimed, Rewards) == 0x000000, "Member 'FrontEndRewards_Widget_C_HandleOnMissionAlertRewardsClaimed::Rewards' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_HandleOnMissionAlertRewardsClaimed, CallFunc_CreateCardsFromItemInstanceQuantityList_Cards) == 0x000010, "Member 'FrontEndRewards_Widget_C_HandleOnMissionAlertRewardsClaimed::CallFunc_CreateCardsFromItemInstanceQuantityList_Cards' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.SafePop
// 0x0010 (0x0010 - 0x0000)
struct FrontEndRewards_Widget_C_SafePop final
{
public:
	class UFortUIManagerWidget_NUI*               CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivated_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndRewards_Widget_C_SafePop) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_SafePop");
static_assert(sizeof(FrontEndRewards_Widget_C_SafePop) == 0x000010, "Wrong size on FrontEndRewards_Widget_C_SafePop");
static_assert(offsetof(FrontEndRewards_Widget_C_SafePop, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000000, "Member 'FrontEndRewards_Widget_C_SafePop::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_SafePop, CallFunc_IsActivated_ReturnValue) == 0x000008, "Member 'FrontEndRewards_Widget_C_SafePop::CallFunc_IsActivated_ReturnValue' has a wrong offset!");

// Function FrontEndRewards_Widget.FrontEndRewards_Widget_C.DebugPrintChoiceReward
// 0x0098 (0x0098 - 0x0000)
struct FrontEndRewards_Widget_C_DebugPrintChoiceReward final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0018)()
};
static_assert(alignof(FrontEndRewards_Widget_C_DebugPrintChoiceReward) == 0x000008, "Wrong alignment on FrontEndRewards_Widget_C_DebugPrintChoiceReward");
static_assert(sizeof(FrontEndRewards_Widget_C_DebugPrintChoiceReward) == 0x000098, "Wrong size on FrontEndRewards_Widget_C_DebugPrintChoiceReward");
static_assert(offsetof(FrontEndRewards_Widget_C_DebugPrintChoiceReward, Object) == 0x000000, "Member 'FrontEndRewards_Widget_C_DebugPrintChoiceReward::Object' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_DebugPrintChoiceReward, CallFunc_GetDisplayName_ReturnValue) == 0x000008, "Member 'FrontEndRewards_Widget_C_DebugPrintChoiceReward::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_DebugPrintChoiceReward, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'FrontEndRewards_Widget_C_DebugPrintChoiceReward::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_DebugPrintChoiceReward, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'FrontEndRewards_Widget_C_DebugPrintChoiceReward::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_DebugPrintChoiceReward, K2Node_MakeArray_Array) == 0x000070, "Member 'FrontEndRewards_Widget_C_DebugPrintChoiceReward::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(FrontEndRewards_Widget_C_DebugPrintChoiceReward, CallFunc_Format_ReturnValue) == 0x000080, "Member 'FrontEndRewards_Widget_C_DebugPrintChoiceReward::CallFunc_Format_ReturnValue' has a wrong offset!");

}

