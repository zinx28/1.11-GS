#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Trap_WallElectric

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_Trap_WallElectric.GA_Trap_WallElectric_C.ExecuteUbergraph_GA_Trap_WallElectric
// 0x0138 (0x0138 - 0x0000)
struct GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable2;                             // 0x0020(0x0020)()
	class UFortAbilityTask_WaitTargetSelection*   CallFunc_WaitTargetSelection_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABuildingTrap*                          K2Node_DynamicCast_AsBuilding_Trap;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTrapLevel_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDamageDelay_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_ApplyGameplayEffectContainer_ReturnValue; // 0x0070(0x0010)(ZeroConstructor, ReferenceParm)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFireDelay_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x0090(0x0020)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag;                 // 0x00B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAbilityLevel_ReturnValue;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate2;             // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue; // 0x00D0(0x0018)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue; // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue2; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABuildingTrap*                          K2Node_DynamicCast_AsBuilding_Trap2;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData2;                    // 0x0108(0x0020)(ConstParm)
	struct FGameplayTag                           K2Node_CustomEvent_ApplicationTag2;                // 0x0128(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric) == 0x000008, "Wrong alignment on GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric");
static_assert(sizeof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric) == 0x000138, "Wrong size on GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, EntryPoint) == 0x000000, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, Temp_struct_Variable) == 0x000018, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, Temp_struct_Variable2) == 0x000020, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, CallFunc_WaitTargetSelection_ReturnValue) == 0x000040, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::CallFunc_WaitTargetSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000050, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, K2Node_DynamicCast_AsBuilding_Trap) == 0x000058, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::K2Node_DynamicCast_AsBuilding_Trap' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, CallFunc_GetTrapLevel_ReturnValue) == 0x000064, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::CallFunc_GetTrapLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, CallFunc_GetDamageDelay_ReturnValue) == 0x000068, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::CallFunc_GetDamageDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, CallFunc_ApplyGameplayEffectContainer_ReturnValue) == 0x000070, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::CallFunc_ApplyGameplayEffectContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000080, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, CallFunc_GetFireDelay_ReturnValue) == 0x000088, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::CallFunc_GetFireDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, K2Node_CustomEvent_TargetData) == 0x000090, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, K2Node_CustomEvent_ApplicationTag) == 0x0000B0, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::K2Node_CustomEvent_ApplicationTag' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, CallFunc_GetAbilityLevel_ReturnValue) == 0x0000B8, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::CallFunc_GetAbilityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000BC, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, K2Node_CreateDelegate_OutputDelegate2) == 0x0000C0, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue) == 0x0000D0, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue) == 0x0000E8, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, CallFunc_GetOwningActorFromActorInfo_ReturnValue2) == 0x0000F0, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::CallFunc_GetOwningActorFromActorInfo_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, K2Node_DynamicCast_AsBuilding_Trap2) == 0x0000F8, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::K2Node_DynamicCast_AsBuilding_Trap2' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, K2Node_DynamicCast_bSuccess2) == 0x000100, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, K2Node_CustomEvent_TargetData2) == 0x000108, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::K2Node_CustomEvent_TargetData2' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, K2Node_CustomEvent_ApplicationTag2) == 0x000128, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::K2Node_CustomEvent_ApplicationTag2' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric, CallFunc_K2_CommitAbility_ReturnValue) == 0x000130, "Member 'GA_Trap_WallElectric_C_ExecuteUbergraph_GA_Trap_WallElectric::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");

// Function GA_Trap_WallElectric.GA_Trap_WallElectric_C.Cancelled_CEF58A2B40484B3CF27922840D6C4E82
// 0x0028 (0x0028 - 0x0000)
struct GA_Trap_WallElectric_C_Cancelled_CEF58A2B40484B3CF27922840D6C4E82 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Trap_WallElectric_C_Cancelled_CEF58A2B40484B3CF27922840D6C4E82) == 0x000008, "Wrong alignment on GA_Trap_WallElectric_C_Cancelled_CEF58A2B40484B3CF27922840D6C4E82");
static_assert(sizeof(GA_Trap_WallElectric_C_Cancelled_CEF58A2B40484B3CF27922840D6C4E82) == 0x000028, "Wrong size on GA_Trap_WallElectric_C_Cancelled_CEF58A2B40484B3CF27922840D6C4E82");
static_assert(offsetof(GA_Trap_WallElectric_C_Cancelled_CEF58A2B40484B3CF27922840D6C4E82, TargetData) == 0x000000, "Member 'GA_Trap_WallElectric_C_Cancelled_CEF58A2B40484B3CF27922840D6C4E82::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_Cancelled_CEF58A2B40484B3CF27922840D6C4E82, ApplicationTag) == 0x000020, "Member 'GA_Trap_WallElectric_C_Cancelled_CEF58A2B40484B3CF27922840D6C4E82::ApplicationTag' has a wrong offset!");

// Function GA_Trap_WallElectric.GA_Trap_WallElectric_C.Targeted_CEF58A2B40484B3CF27922840D6C4E82
// 0x0028 (0x0028 - 0x0000)
struct GA_Trap_WallElectric_C_Targeted_CEF58A2B40484B3CF27922840D6C4E82 final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayTag                           ApplicationTag;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Trap_WallElectric_C_Targeted_CEF58A2B40484B3CF27922840D6C4E82) == 0x000008, "Wrong alignment on GA_Trap_WallElectric_C_Targeted_CEF58A2B40484B3CF27922840D6C4E82");
static_assert(sizeof(GA_Trap_WallElectric_C_Targeted_CEF58A2B40484B3CF27922840D6C4E82) == 0x000028, "Wrong size on GA_Trap_WallElectric_C_Targeted_CEF58A2B40484B3CF27922840D6C4E82");
static_assert(offsetof(GA_Trap_WallElectric_C_Targeted_CEF58A2B40484B3CF27922840D6C4E82, TargetData) == 0x000000, "Member 'GA_Trap_WallElectric_C_Targeted_CEF58A2B40484B3CF27922840D6C4E82::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Trap_WallElectric_C_Targeted_CEF58A2B40484B3CF27922840D6C4E82, ApplicationTag) == 0x000020, "Member 'GA_Trap_WallElectric_C_Targeted_CEF58A2B40484B3CF27922840D6C4E82::ApplicationTag' has a wrong offset!");

}

