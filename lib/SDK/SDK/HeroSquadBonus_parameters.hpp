#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HeroSquadBonus

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function HeroSquadBonus.HeroSquadBonus_C.ExecuteUbergraph_HeroSquadBonus
// 0x0020 (0x0020 - 0x0000)
struct HeroSquadBonus_C_ExecuteUbergraph_HeroSquadBonus final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortTooltipContext*                    CallFunc_SpawnTooltipContextWithSource_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HeroSquadBonus_C_ExecuteUbergraph_HeroSquadBonus) == 0x000008, "Wrong alignment on HeroSquadBonus_C_ExecuteUbergraph_HeroSquadBonus");
static_assert(sizeof(HeroSquadBonus_C_ExecuteUbergraph_HeroSquadBonus) == 0x000020, "Wrong size on HeroSquadBonus_C_ExecuteUbergraph_HeroSquadBonus");
static_assert(offsetof(HeroSquadBonus_C_ExecuteUbergraph_HeroSquadBonus, EntryPoint) == 0x000000, "Member 'HeroSquadBonus_C_ExecuteUbergraph_HeroSquadBonus::EntryPoint' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_ExecuteUbergraph_HeroSquadBonus, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'HeroSquadBonus_C_ExecuteUbergraph_HeroSquadBonus::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_ExecuteUbergraph_HeroSquadBonus, CallFunc_SpawnTooltipContextWithSource_ReturnValue) == 0x000010, "Member 'HeroSquadBonus_C_ExecuteUbergraph_HeroSquadBonus::CallFunc_SpawnTooltipContextWithSource_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_ExecuteUbergraph_HeroSquadBonus, K2Node_Event_IsDesignTime) == 0x000018, "Member 'HeroSquadBonus_C_ExecuteUbergraph_HeroSquadBonus::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function HeroSquadBonus.HeroSquadBonus_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HeroSquadBonus_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HeroSquadBonus_C_PreConstruct) == 0x000001, "Wrong alignment on HeroSquadBonus_C_PreConstruct");
static_assert(sizeof(HeroSquadBonus_C_PreConstruct) == 0x000001, "Wrong size on HeroSquadBonus_C_PreConstruct");
static_assert(offsetof(HeroSquadBonus_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HeroSquadBonus_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function HeroSquadBonus.HeroSquadBonus_C.UpdateBonusPerk
// 0x0228 (0x0228 - 0x0000)
struct HeroSquadBonus_C_UpdateBonusPerk final
{
public:
	class FText                                   CallFunc_GetTooltipTitle_ReturnValue;              // 0x0000(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0068(0x0018)()
	bool                                          CallFunc_IsPerkUnlocked_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0084(0x0010)(NoDestructor)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0098(0x0078)()
	bool                                          CallFunc_IsPerkEmpty_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_GetIcon_Brush;                            // 0x0118(0x0078)()
	bool                                          CallFunc_GetIcon_ReturnValue;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_SetFieldsInStruct_StructOut;                // 0x0198(0x0078)()
	class FText                                   CallFunc_GetTooltipTitle_ReturnValue2;             // 0x0210(0x0018)()
};
static_assert(alignof(HeroSquadBonus_C_UpdateBonusPerk) == 0x000008, "Wrong alignment on HeroSquadBonus_C_UpdateBonusPerk");
static_assert(sizeof(HeroSquadBonus_C_UpdateBonusPerk) == 0x000228, "Wrong size on HeroSquadBonus_C_UpdateBonusPerk");
static_assert(offsetof(HeroSquadBonus_C_UpdateBonusPerk, CallFunc_GetTooltipTitle_ReturnValue) == 0x000000, "Member 'HeroSquadBonus_C_UpdateBonusPerk::CallFunc_GetTooltipTitle_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateBonusPerk, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'HeroSquadBonus_C_UpdateBonusPerk::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateBonusPerk, K2Node_MakeArray_Array) == 0x000058, "Member 'HeroSquadBonus_C_UpdateBonusPerk::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateBonusPerk, CallFunc_Format_ReturnValue) == 0x000068, "Member 'HeroSquadBonus_C_UpdateBonusPerk::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateBonusPerk, CallFunc_IsPerkUnlocked_ReturnValue) == 0x000080, "Member 'HeroSquadBonus_C_UpdateBonusPerk::CallFunc_IsPerkUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateBonusPerk, K2Node_MakeStruct_Margin) == 0x000084, "Member 'HeroSquadBonus_C_UpdateBonusPerk::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateBonusPerk, K2Node_MakeStruct_SlateBrush) == 0x000098, "Member 'HeroSquadBonus_C_UpdateBonusPerk::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateBonusPerk, CallFunc_IsPerkEmpty_ReturnValue) == 0x000110, "Member 'HeroSquadBonus_C_UpdateBonusPerk::CallFunc_IsPerkEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateBonusPerk, CallFunc_GetIcon_Brush) == 0x000118, "Member 'HeroSquadBonus_C_UpdateBonusPerk::CallFunc_GetIcon_Brush' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateBonusPerk, CallFunc_GetIcon_ReturnValue) == 0x000190, "Member 'HeroSquadBonus_C_UpdateBonusPerk::CallFunc_GetIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateBonusPerk, K2Node_SetFieldsInStruct_StructOut) == 0x000198, "Member 'HeroSquadBonus_C_UpdateBonusPerk::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateBonusPerk, CallFunc_GetTooltipTitle_ReturnValue2) == 0x000210, "Member 'HeroSquadBonus_C_UpdateBonusPerk::CallFunc_GetTooltipTitle_ReturnValue2' has a wrong offset!");

// Function HeroSquadBonus.HeroSquadBonus_C.UpdateSquadBonusIconState
// 0x0150 (0x0150 - 0x0000)
struct HeroSquadBonus_C_UpdateSquadBonusIconState final
{
public:
	struct FSlateColor                            Tint;                                              // 0x0000(0x0028)(Edit, BlueprintVisible)
	EFortSupportBonusType                         Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable4;                               // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortSupportBonusType                         Temp_byte_Variable5;                               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable2;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable3;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0050(0x0028)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPerkEmpty_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPerkUnlocked_ReturnValue;               // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select2_Default;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor2;                     // 0x0088(0x0028)()
	struct FSlateColor                            K2Node_Select3_Default;                            // 0x00B0(0x0028)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00D8(0x0078)()
};
static_assert(alignof(HeroSquadBonus_C_UpdateSquadBonusIconState) == 0x000008, "Wrong alignment on HeroSquadBonus_C_UpdateSquadBonusIconState");
static_assert(sizeof(HeroSquadBonus_C_UpdateSquadBonusIconState) == 0x000150, "Wrong size on HeroSquadBonus_C_UpdateSquadBonusIconState");
static_assert(offsetof(HeroSquadBonus_C_UpdateSquadBonusIconState, Tint) == 0x000000, "Member 'HeroSquadBonus_C_UpdateSquadBonusIconState::Tint' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateSquadBonusIconState, Temp_byte_Variable) == 0x000028, "Member 'HeroSquadBonus_C_UpdateSquadBonusIconState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateSquadBonusIconState, Temp_byte_Variable2) == 0x000029, "Member 'HeroSquadBonus_C_UpdateSquadBonusIconState::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateSquadBonusIconState, Temp_byte_Variable3) == 0x00002A, "Member 'HeroSquadBonus_C_UpdateSquadBonusIconState::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateSquadBonusIconState, Temp_byte_Variable4) == 0x00002B, "Member 'HeroSquadBonus_C_UpdateSquadBonusIconState::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateSquadBonusIconState, Temp_byte_Variable5) == 0x00002C, "Member 'HeroSquadBonus_C_UpdateSquadBonusIconState::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateSquadBonusIconState, Temp_object_Variable) == 0x000030, "Member 'HeroSquadBonus_C_UpdateSquadBonusIconState::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateSquadBonusIconState, Temp_object_Variable2) == 0x000038, "Member 'HeroSquadBonus_C_UpdateSquadBonusIconState::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateSquadBonusIconState, Temp_object_Variable3) == 0x000040, "Member 'HeroSquadBonus_C_UpdateSquadBonusIconState::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateSquadBonusIconState, Temp_bool_Variable) == 0x000048, "Member 'HeroSquadBonus_C_UpdateSquadBonusIconState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateSquadBonusIconState, K2Node_MakeStruct_SlateColor) == 0x000050, "Member 'HeroSquadBonus_C_UpdateSquadBonusIconState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateSquadBonusIconState, K2Node_Select_Default) == 0x000078, "Member 'HeroSquadBonus_C_UpdateSquadBonusIconState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateSquadBonusIconState, CallFunc_IsPerkEmpty_ReturnValue) == 0x000079, "Member 'HeroSquadBonus_C_UpdateSquadBonusIconState::CallFunc_IsPerkEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateSquadBonusIconState, CallFunc_IsPerkUnlocked_ReturnValue) == 0x00007A, "Member 'HeroSquadBonus_C_UpdateSquadBonusIconState::CallFunc_IsPerkUnlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateSquadBonusIconState, CallFunc_BooleanAND_ReturnValue) == 0x00007B, "Member 'HeroSquadBonus_C_UpdateSquadBonusIconState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateSquadBonusIconState, K2Node_Select2_Default) == 0x000080, "Member 'HeroSquadBonus_C_UpdateSquadBonusIconState::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateSquadBonusIconState, K2Node_MakeStruct_SlateColor2) == 0x000088, "Member 'HeroSquadBonus_C_UpdateSquadBonusIconState::K2Node_MakeStruct_SlateColor2' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateSquadBonusIconState, K2Node_Select3_Default) == 0x0000B0, "Member 'HeroSquadBonus_C_UpdateSquadBonusIconState::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_UpdateSquadBonusIconState, K2Node_MakeStruct_SlateBrush) == 0x0000D8, "Member 'HeroSquadBonus_C_UpdateSquadBonusIconState::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function HeroSquadBonus.HeroSquadBonus_C.SetBackgroundGlow
// 0x0005 (0x0005 - 0x0000)
struct HeroSquadBonus_C_SetBackgroundGlow final
{
public:
	bool                                          GlowBackground;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HeroSquadBonus_C_SetBackgroundGlow) == 0x000001, "Wrong alignment on HeroSquadBonus_C_SetBackgroundGlow");
static_assert(sizeof(HeroSquadBonus_C_SetBackgroundGlow) == 0x000005, "Wrong size on HeroSquadBonus_C_SetBackgroundGlow");
static_assert(offsetof(HeroSquadBonus_C_SetBackgroundGlow, GlowBackground) == 0x000000, "Member 'HeroSquadBonus_C_SetBackgroundGlow::GlowBackground' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_SetBackgroundGlow, Temp_bool_Variable) == 0x000001, "Member 'HeroSquadBonus_C_SetBackgroundGlow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_SetBackgroundGlow, Temp_byte_Variable) == 0x000002, "Member 'HeroSquadBonus_C_SetBackgroundGlow::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_SetBackgroundGlow, Temp_byte_Variable2) == 0x000003, "Member 'HeroSquadBonus_C_SetBackgroundGlow::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_SetBackgroundGlow, K2Node_Select_Default) == 0x000004, "Member 'HeroSquadBonus_C_SetBackgroundGlow::K2Node_Select_Default' has a wrong offset!");

// Function HeroSquadBonus.HeroSquadBonus_C.Get_ToolTipWidget
// 0x0048 (0x0048 - 0x0000)
struct HeroSquadBonus_C_Get_ToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTooltipTitle_ReturnValue;              // 0x0010(0x0018)()
	class FText                                   CallFunc_GetCombinedTooltipDescription_ReturnValue; // 0x0028(0x0018)()
	class UUserWidget*                            CallFunc_Create_Basic_Tooltip_Output;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HeroSquadBonus_C_Get_ToolTipWidget) == 0x000008, "Wrong alignment on HeroSquadBonus_C_Get_ToolTipWidget");
static_assert(sizeof(HeroSquadBonus_C_Get_ToolTipWidget) == 0x000048, "Wrong size on HeroSquadBonus_C_Get_ToolTipWidget");
static_assert(offsetof(HeroSquadBonus_C_Get_ToolTipWidget, ReturnValue) == 0x000000, "Member 'HeroSquadBonus_C_Get_ToolTipWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_Get_ToolTipWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'HeroSquadBonus_C_Get_ToolTipWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_Get_ToolTipWidget, CallFunc_GetTooltipTitle_ReturnValue) == 0x000010, "Member 'HeroSquadBonus_C_Get_ToolTipWidget::CallFunc_GetTooltipTitle_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_Get_ToolTipWidget, CallFunc_GetCombinedTooltipDescription_ReturnValue) == 0x000028, "Member 'HeroSquadBonus_C_Get_ToolTipWidget::CallFunc_GetCombinedTooltipDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(HeroSquadBonus_C_Get_ToolTipWidget, CallFunc_Create_Basic_Tooltip_Output) == 0x000040, "Member 'HeroSquadBonus_C_Get_ToolTipWidget::CallFunc_Create_Basic_Tooltip_Output' has a wrong offset!");

}

