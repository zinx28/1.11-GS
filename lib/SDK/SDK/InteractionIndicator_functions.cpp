#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InteractionIndicator

#include "Basic.hpp"

#include "InteractionIndicator_classes.hpp"
#include "InteractionIndicator_parameters.hpp"


namespace SDK
{

// Function InteractionIndicator.InteractionIndicator_C.ExecuteUbergraph_InteractionIndicator
// ()
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInteractionIndicator_C::ExecuteUbergraph_InteractionIndicator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionIndicator_C", "ExecuteUbergraph_InteractionIndicator");

	Params::InteractionIndicator_C_ExecuteUbergraph_InteractionIndicator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InteractionIndicator.InteractionIndicator_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UInteractionIndicator_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionIndicator_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InteractionIndicator.InteractionIndicator_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UInteractionIndicator_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionIndicator_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InteractionIndicator.InteractionIndicator_C.HandleInteractionChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortInteractContextInfo*         Interaction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInteractionIndicator_C::HandleInteractionChanged(class UFortInteractContextInfo* Interaction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionIndicator_C", "HandleInteractionChanged");

	Params::InteractionIndicator_C_HandleInteractionChanged Parms{};

	Parms.Interaction = Interaction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InteractionIndicator.InteractionIndicator_C.ShowPickupWidget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPickup*                      Pickup                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInteractionIndicator_C::ShowPickupWidget(class AFortPickup* Pickup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionIndicator_C", "ShowPickupWidget");

	Params::InteractionIndicator_C_ShowPickupWidget Parms{};

	Parms.Pickup = Pickup;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InteractionIndicator.InteractionIndicator_C.ShowBasicInteractionWidget
// (Public, BlueprintCallable, BlueprintEvent)

void UInteractionIndicator_C::ShowBasicInteractionWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionIndicator_C", "ShowBasicInteractionWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InteractionIndicator.InteractionIndicator_C.HandleInteractionUpdated
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UFortInteractContextInfo*         Interaction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInteractionIndicator_C::HandleInteractionUpdated(class UFortInteractContextInfo* Interaction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionIndicator_C", "HandleInteractionUpdated");

	Params::InteractionIndicator_C_HandleInteractionUpdated Parms{};

	Parms.Interaction = Interaction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InteractionIndicator.InteractionIndicator_C.ShowDefenderBeaconWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABuildingTrapDefender*            BuildingTrap                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInteractionIndicator_C::ShowDefenderBeaconWidget(class ABuildingTrapDefender* BuildingTrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionIndicator_C", "ShowDefenderBeaconWidget");

	Params::InteractionIndicator_C_ShowDefenderBeaconWidget Parms{};

	Parms.BuildingTrap = BuildingTrap;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InteractionIndicator.InteractionIndicator_C.UpdateKeybinds
// (Public, BlueprintCallable, BlueprintEvent)

void UInteractionIndicator_C::UpdateKeybinds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractionIndicator_C", "UpdateKeybinds");

	UObject::ProcessEvent(Func, nullptr);
}

}

