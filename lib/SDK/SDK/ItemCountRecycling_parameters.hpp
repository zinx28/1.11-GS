#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemCountRecycling

#include "Basic.hpp"


namespace SDK::Params
{

// Function ItemCountRecycling.ItemCountRecycling_C.ExecuteUbergraph_ItemCountRecycling
// 0x0048 (0x0048 - 0x0000)
struct ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0030(0x0018)()
};
static_assert(alignof(ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling) == 0x000008, "Wrong alignment on ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling");
static_assert(sizeof(ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling) == 0x000048, "Wrong size on ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling");
static_assert(offsetof(ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling, EntryPoint) == 0x000000, "Member 'ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling::EntryPoint' has a wrong offset!");
static_assert(offsetof(ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling, K2Node_Event_IsDesignTime) == 0x000004, "Member 'ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000005, "Member 'ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x000006, "Member 'ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling, CallFunc_BooleanOR_ReturnValue) == 0x000007, "Member 'ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling, Temp_text_Variable) == 0x000010, "Member 'ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling, Temp_bool_Variable) == 0x000028, "Member 'ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling, K2Node_Select_Default) == 0x000030, "Member 'ItemCountRecycling_C_ExecuteUbergraph_ItemCountRecycling::K2Node_Select_Default' has a wrong offset!");

// Function ItemCountRecycling.ItemCountRecycling_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct ItemCountRecycling_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemCountRecycling_C_PreConstruct) == 0x000001, "Wrong alignment on ItemCountRecycling_C_PreConstruct");
static_assert(sizeof(ItemCountRecycling_C_PreConstruct) == 0x000001, "Wrong size on ItemCountRecycling_C_PreConstruct");
static_assert(offsetof(ItemCountRecycling_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'ItemCountRecycling_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function ItemCountRecycling.ItemCountRecycling_C.SetItemDefinition
// 0x0040 (0x0040 - 0x0000)
struct ItemCountRecycling_C_SetItemDefinition final
{
public:
	class UFortItemDefinition*                    Param_ItemDefinition;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0028(0x0018)()
};
static_assert(alignof(ItemCountRecycling_C_SetItemDefinition) == 0x000008, "Wrong alignment on ItemCountRecycling_C_SetItemDefinition");
static_assert(sizeof(ItemCountRecycling_C_SetItemDefinition) == 0x000040, "Wrong size on ItemCountRecycling_C_SetItemDefinition");
static_assert(offsetof(ItemCountRecycling_C_SetItemDefinition, Param_ItemDefinition) == 0x000000, "Member 'ItemCountRecycling_C_SetItemDefinition::Param_ItemDefinition' has a wrong offset!");
static_assert(offsetof(ItemCountRecycling_C_SetItemDefinition, Temp_text_Variable) == 0x000008, "Member 'ItemCountRecycling_C_SetItemDefinition::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(ItemCountRecycling_C_SetItemDefinition, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'ItemCountRecycling_C_SetItemDefinition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemCountRecycling_C_SetItemDefinition, Temp_bool_Variable) == 0x000021, "Member 'ItemCountRecycling_C_SetItemDefinition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemCountRecycling_C_SetItemDefinition, K2Node_Select_Default) == 0x000028, "Member 'ItemCountRecycling_C_SetItemDefinition::K2Node_Select_Default' has a wrong offset!");

}

