#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LegacyButtonIconText

#include "Basic.hpp"

#include "LegacyButtonIconText_classes.hpp"
#include "LegacyButtonIconText_parameters.hpp"


namespace SDK
{

// Function LegacyButtonIconText.LegacyButtonIconText_C.On Mouse Hovered Changed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Hovered                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ULegacyButtonIconText_C::On_Mouse_Hovered_Changed__DelegateSignature(bool Is_Hovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegacyButtonIconText_C", "On Mouse Hovered Changed__DelegateSignature");

	Params::LegacyButtonIconText_C_On_Mouse_Hovered_Changed__DelegateSignature Parms{};

	Parms.Is_Hovered = Is_Hovered;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LegacyButtonIconText.LegacyButtonIconText_C.ExecuteUbergraph_LegacyButtonIconText
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULegacyButtonIconText_C::ExecuteUbergraph_LegacyButtonIconText(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegacyButtonIconText_C", "ExecuteUbergraph_LegacyButtonIconText");

	Params::LegacyButtonIconText_C_ExecuteUbergraph_LegacyButtonIconText Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LegacyButtonIconText.LegacyButtonIconText_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ULegacyButtonIconText_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegacyButtonIconText_C", "OnMouseLeave");

	Params::LegacyButtonIconText_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LegacyButtonIconText.LegacyButtonIconText_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ULegacyButtonIconText_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegacyButtonIconText_C", "OnMouseEnter");

	Params::LegacyButtonIconText_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LegacyButtonIconText.LegacyButtonIconText_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ULegacyButtonIconText_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegacyButtonIconText_C", "PreConstruct");

	Params::LegacyButtonIconText_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LegacyButtonIconText.LegacyButtonIconText_C.Set Text
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    RefreshPadding                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ULegacyButtonIconText_C::Set_Text(const class FText& InText, bool RefreshPadding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegacyButtonIconText_C", "Set Text");

	Params::LegacyButtonIconText_C_Set_Text Parms{};

	Parms.InText = std::move(InText);
	Parms.RefreshPadding = RefreshPadding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LegacyButtonIconText.LegacyButtonIconText_C.Set Icon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSlateBrush                      InBrush                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    RefreshPadding                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ULegacyButtonIconText_C::Set_Icon(const struct FSlateBrush& InBrush, bool RefreshPadding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegacyButtonIconText_C", "Set Icon");

	Params::LegacyButtonIconText_C_Set_Icon Parms{};

	Parms.InBrush = std::move(InBrush);
	Parms.RefreshPadding = RefreshPadding;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LegacyButtonIconText.LegacyButtonIconText_C.Update Padding
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ULegacyButtonIconText_C::Update_Padding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegacyButtonIconText_C", "Update Padding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LegacyButtonIconText.LegacyButtonIconText_C.Get Secondary Color
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FLinearColor ULegacyButtonIconText_C::Get_Secondary_Color()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegacyButtonIconText_C", "Get Secondary Color");

	Params::LegacyButtonIconText_C_Get_Secondary_Color Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function LegacyButtonIconText.LegacyButtonIconText_C.Get Primary Color
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSlateColor                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FSlateColor ULegacyButtonIconText_C::Get_Primary_Color()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegacyButtonIconText_C", "Get Primary Color");

	Params::LegacyButtonIconText_C_Get_Primary_Color Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function LegacyButtonIconText.LegacyButtonIconText_C.Update Size Box
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ULegacyButtonIconText_C::Update_Size_Box()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegacyButtonIconText_C", "Update Size Box");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LegacyButtonIconText.LegacyButtonIconText_C.Set Alignment
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETextJustify                            Align                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULegacyButtonIconText_C::Set_Alignment(ETextJustify Align)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegacyButtonIconText_C", "Set Alignment");

	Params::LegacyButtonIconText_C_Set_Alignment Parms{};

	Parms.Align = Align;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LegacyButtonIconText.LegacyButtonIconText_C.Toggle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show_Button                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ULegacyButtonIconText_C::Toggle(bool Show_Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegacyButtonIconText_C", "Toggle");

	Params::LegacyButtonIconText_C_Toggle Parms{};

	Parms.Show_Button = Show_Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LegacyButtonIconText.LegacyButtonIconText_C.Intro
// (Public, BlueprintCallable, BlueprintEvent)

void ULegacyButtonIconText_C::Intro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegacyButtonIconText_C", "Intro");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LegacyButtonIconText.LegacyButtonIconText_C.Outro
// (Public, BlueprintCallable, BlueprintEvent)

void ULegacyButtonIconText_C::Outro()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LegacyButtonIconText_C", "Outro");

	UObject::ProcessEvent(Func, nullptr);
}

}

