#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LoginScreen

#include "Basic.hpp"

#include "LoginScreen_classes.hpp"
#include "LoginScreen_parameters.hpp"


namespace SDK
{

// Function LoginScreen.LoginScreen_C.ExecuteUbergraph_LoginScreen
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULoginScreen_C::ExecuteUbergraph_LoginScreen(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "ExecuteUbergraph_LoginScreen");

	Params::LoginScreen_C_ExecuteUbergraph_LoginScreen Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.Event Closed MOTD
// (BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::Event_Closed_MOTD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "Event Closed MOTD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.CustomEvent
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ErrorText                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ULoginScreen_C::CustomEvent(const class FText& ErrorText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "CustomEvent");

	Params::LoginScreen_C_CustomEvent Parms{};

	Parms.ErrorText = std::move(ErrorText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.OnLoggedOutWithError
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             ErrorText                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ULoginScreen_C::OnLoggedOutWithError(const class FText& ErrorText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "OnLoggedOutWithError");

	Params::LoginScreen_C_OnLoggedOutWithError Parms{};

	Parms.ErrorText = std::move(ErrorText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.HandleLoggedOutErrorDismissed
// (BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::HandleLoggedOutErrorDismissed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "HandleLoggedOutErrorDismissed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.OnShowHealthWarning
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                           Country                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ULoginScreen_C::OnShowHealthWarning(const class FString& Country)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "OnShowHealthWarning");

	Params::LoginScreen_C_OnShowHealthWarning Parms{};

	Parms.Country = std::move(Country);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.OnShowLoginMessage
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             Tile                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             Body                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ULoginScreen_C::OnShowLoginMessage(bool bShow, const class FText& Tile, const class FText& Body)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "OnShowLoginMessage");

	Params::LoginScreen_C_OnShowLoginMessage Parms{};

	Parms.bShow = bShow;
	Parms.Tile = std::move(Tile);
	Parms.Body = std::move(Body);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.OnPostLoginLogoutComplete
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Reason                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ULoginScreen_C::OnPostLoginLogoutComplete(const class FText& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "OnPostLoginLogoutComplete");

	Params::LoginScreen_C_OnPostLoginLogoutComplete Parms{};

	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.HandleOnLoginAccountTypeSelected
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortLoginAccountType                   LoginAccountType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULoginScreen_C::HandleOnLoginAccountTypeSelected(EFortLoginAccountType LoginAccountType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "HandleOnLoginAccountTypeSelected");

	Params::LoginScreen_C_HandleOnLoginAccountTypeSelected Parms{};

	Parms.LoginAccountType = LoginAccountType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.OnNeedsPurchaseOrAccountLinking
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bLinkedAccountNeedsPurchase                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ULoginScreen_C::OnNeedsPurchaseOrAccountLinking(bool bLinkedAccountNeedsPurchase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "OnNeedsPurchaseOrAccountLinking");

	Params::LoginScreen_C_OnNeedsPurchaseOrAccountLinking Parms{};

	Parms.bLinkedAccountNeedsPurchase = bLinkedAccountNeedsPurchase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.HandleViewOnlyClose
// (BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::HandleViewOnlyClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "HandleViewOnlyClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.AccountLinking_ViewEula
// (BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::AccountLinking_ViewEula()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "AccountLinking_ViewEula");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.BndEvt__IconTextButton_K2Node_ComponentBoundEvent_20_CommonButtonClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButton*                    Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULoginScreen_C::BndEvt__IconTextButton_K2Node_ComponentBoundEvent_20_CommonButtonClicked__DelegateSignature(class UCommonButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "BndEvt__IconTextButton_K2Node_ComponentBoundEvent_20_CommonButtonClicked__DelegateSignature");

	Params::LoginScreen_C_BndEvt__IconTextButton_K2Node_ComponentBoundEvent_20_CommonButtonClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.OnLogoutComplete
// (Event, Public, BlueprintEvent)

void ULoginScreen_C::OnLogoutComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "OnLogoutComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.PushContentWidgetInternal
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UWidget*                          Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FContentPushState                State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void ULoginScreen_C::PushContentWidgetInternal(class UWidget* Widget, const struct FContentPushState& State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "PushContentWidgetInternal");

	Params::LoginScreen_C_PushContentWidgetInternal Parms{};

	Parms.Widget = Widget;
	Parms.State = std::move(State);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void ULoginScreen_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.OnSplashScreenClosed
// (BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::OnSplashScreenClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "OnSplashScreenClosed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.AccountLinking_RequestAutoLogin
// (BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::AccountLinking_RequestAutoLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "AccountLinking_RequestAutoLogin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.AccountLinking_RequestSignIn
// (BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::AccountLinking_RequestSignIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "AccountLinking_RequestSignIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.AccountLinking_LinkingFailed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             FailReason                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void ULoginScreen_C::AccountLinking_LinkingFailed(const class FText& FailReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "AccountLinking_LinkingFailed");

	Params::LoginScreen_C_AccountLinking_LinkingFailed Parms{};

	Parms.FailReason = std::move(FailReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.AccountLinking_PopStatus
// (BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::AccountLinking_PopStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "AccountLinking_PopStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.AccountLinking_PushStatus
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             StatusText                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void ULoginScreen_C::AccountLinking_PushStatus(const class FText& StatusText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "AccountLinking_PushStatus");

	Params::LoginScreen_C_AccountLinking_PushStatus Parms{};

	Parms.StatusText = std::move(StatusText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.HandlerBenchmarkFlow
// (BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::HandlerBenchmarkFlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "HandlerBenchmarkFlow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.HandleResultConfirmed
// (BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::HandleResultConfirmed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "HandleResultConfirmed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.HandleEulaResponse
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Accepted                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ULoginScreen_C::HandleEulaResponse(bool Accepted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "HandleEulaResponse");

	Params::LoginScreen_C_HandleEulaResponse Parms{};

	Parms.Accepted = Accepted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.OnEulaAvailable
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             EulaText                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ULoginScreen_C::OnEulaAvailable(const class FText& EulaText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "OnEulaAvailable");

	Params::LoginScreen_C_OnEulaAvailable Parms{};

	Parms.EulaText = std::move(EulaText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.OnLoginSuceeded
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::OnLoginSuceeded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "OnLoginSuceeded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.OnLoginFailed
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Reason                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ULoginScreen_C::OnLoginFailed(const class FText& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "OnLoginFailed");

	Params::LoginScreen_C_OnLoginFailed Parms{};

	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.OnPatchingComplete
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bProceed                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ULoginScreen_C::OnPatchingComplete(bool bProceed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "OnPatchingComplete");

	Params::LoginScreen_C_OnPatchingComplete Parms{};

	Parms.bProceed = bProceed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.HandleOnStartLogin
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           LoginEmail                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           LoginPassword                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ULoginScreen_C::HandleOnStartLogin(const class FString& LoginEmail, const class FString& LoginPassword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "HandleOnStartLogin");

	Params::LoginScreen_C_HandleOnStartLogin Parms{};

	Parms.LoginEmail = std::move(LoginEmail);
	Parms.LoginPassword = std::move(LoginPassword);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.OnExitState
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortUIState                            NextUIState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULoginScreen_C::OnExitState(EFortUIState NextUIState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "OnExitState");

	Params::LoginScreen_C_OnExitState Parms{};

	Parms.NextUIState = NextUIState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.OnEnterState
// (Event, Public, BlueprintEvent)
// Parameters:
// EFortUIState                            PreviousUIState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULoginScreen_C::OnEnterState(EFortUIState PreviousUIState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "OnEnterState");

	Params::LoginScreen_C_OnEnterState Parms{};

	Parms.PreviousUIState = PreviousUIState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.DialogResult_B952A8754B3836D2151B4981F531542E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortDialogResult                       Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             ResultName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ULoginScreen_C::DialogResult_B952A8754B3836D2151B4981F531542E(EFortDialogResult Result, class FName ResultName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "DialogResult_B952A8754B3836D2151B4981F531542E");

	Params::LoginScreen_C_DialogResult_B952A8754B3836D2151B4981F531542E Parms{};

	Parms.Result = Result;
	Parms.ResultName = ResultName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.ShowSignInWindow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DirectSignIn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ULoginScreen_C::ShowSignInWindow(bool DirectSignIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "ShowSignInWindow");

	Params::LoginScreen_C_ShowSignInWindow Parms{};

	Parms.DirectSignIn = DirectSignIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.ShowStatusWindow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             StatusText                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void ULoginScreen_C::ShowStatusWindow(const class FText& StatusText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "ShowStatusWindow");

	Params::LoginScreen_C_ShowStatusWindow Parms{};

	Parms.StatusText = std::move(StatusText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.ShowAccountLinkingWindow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InLinkedAccountNeedsPurchase                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ULoginScreen_C::ShowAccountLinkingWindow(bool InLinkedAccountNeedsPurchase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "ShowAccountLinkingWindow");

	Params::LoginScreen_C_ShowAccountLinkingWindow Parms{};

	Parms.InLinkedAccountNeedsPurchase = InLinkedAccountNeedsPurchase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.UpdateStatusTitle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Title                                                  (BlueprintVisible, BlueprintReadOnly, Parm)

void ULoginScreen_C::UpdateStatusTitle(const class FText& Title)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "UpdateStatusTitle");

	Params::LoginScreen_C_UpdateStatusTitle Parms{};

	Parms.Title = std::move(Title);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.ToggleLoginMenu
// (Public, BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::ToggleLoginMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "ToggleLoginMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.ShowResultWindow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Title                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Description                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    bShowError                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bLoggedOut                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ULoginScreen_C::ShowResultWindow(const class FText& Title, const class FText& Description, bool bShowError, bool bLoggedOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "ShowResultWindow");

	Params::LoginScreen_C_ShowResultWindow Parms{};

	Parms.Title = std::move(Title);
	Parms.Description = std::move(Description);
	Parms.bShowError = bShowError;
	Parms.bLoggedOut = bLoggedOut;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.SetResultTitle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Title                                                  (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    bShowError                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ULoginScreen_C::SetResultTitle(const class FText& Title, bool bShowError)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "SetResultTitle");

	Params::LoginScreen_C_SetResultTitle Parms{};

	Parms.Title = std::move(Title);
	Parms.bShowError = bShowError;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.SetResultsDescription
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Description                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void ULoginScreen_C::SetResultsDescription(const class FText& Description)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "SetResultsDescription");

	Params::LoginScreen_C_SetResultsDescription Parms{};

	Parms.Description = std::move(Description);

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.ShowEulaWindow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    ViewOnly                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ULoginScreen_C::ShowEulaWindow(const class FText& Text, bool ViewOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "ShowEulaWindow");

	Params::LoginScreen_C_ShowEulaWindow Parms{};

	Parms.Text = std::move(Text);
	Parms.ViewOnly = ViewOnly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LoginScreen.LoginScreen_C.ShouldShowBenchmark
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Return_Value                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ULoginScreen_C::ShouldShowBenchmark(bool* Return_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "ShouldShowBenchmark");

	Params::LoginScreen_C_ShouldShowBenchmark Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return_Value != nullptr)
		*Return_Value = Parms.Return_Value;
}


// Function LoginScreen.LoginScreen_C.RunBenchmark
// (Public, BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::RunBenchmark()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "RunBenchmark");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.SkipBenchmark
// (Public, BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::SkipBenchmark()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "SkipBenchmark");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.OnMouseButtonUp_MenuBorder
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply ULoginScreen_C::OnMouseButtonUp_MenuBorder(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "OnMouseButtonUp_MenuBorder");

	Params::LoginScreen_C_OnMouseButtonUp_MenuBorder Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	MouseEvent = std::move(Parms.MouseEvent);

	return Parms.ReturnValue;
}


// Function LoginScreen.LoginScreen_C.GetLoginMenu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidget* ULoginScreen_C::GetLoginMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "GetLoginMenu");

	Params::LoginScreen_C_GetLoginMenu Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function LoginScreen.LoginScreen_C.ShowSplashScreen
// (Public, BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::ShowSplashScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "ShowSplashScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.PopContentWidgetInternal
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FContentPushState                State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UWidget* ULoginScreen_C::PopContentWidgetInternal(const struct FContentPushState& State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "PopContentWidgetInternal");

	Params::LoginScreen_C_PopContentWidgetInternal Parms{};

	Parms.State = std::move(State);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function LoginScreen.LoginScreen_C.RollbackToSplashScreen
// (Public, BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::RollbackToSplashScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "RollbackToSplashScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.HideNonSplashScreenContent
// (Public, BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::HideNonSplashScreenContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "HideNonSplashScreenContent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.EmptyLoginStack
// (Public, BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::EmptyLoginStack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "EmptyLoginStack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.CheckSkipSplashScreen
// (Public, BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::CheckSkipSplashScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "CheckSkipSplashScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.ShowAccountSelectWindow
// (Public, BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::ShowAccountSelectWindow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "ShowAccountSelectWindow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.SafePopContent
// (Public, BlueprintCallable, BlueprintEvent)

void ULoginScreen_C::SafePopContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "SafePopContent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LoginScreen.LoginScreen_C.ShowHealthWarning
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Country                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ULoginScreen_C::ShowHealthWarning(const class FString& Country)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoginScreen_C", "ShowHealthWarning");

	Params::LoginScreen_C_ShowHealthWarning Parms{};

	Parms.Country = std::move(Country);

	UObject::ProcessEvent(Func, &Parms);
}

}

