#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: M_MED_Commando_Head_HW01_Skeleton_AnimBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass M_MED_Commando_Head_HW01_Skeleton_AnimBP.M_MED_Commando_Head_HW01_Skeleton_AnimBP_C
// 0x00F8 (0x04B0 - 0x03B8)
class UM_MED_Commando_Head_HW01_Skeleton_AnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_3B8[0x8];                                      // 0x03B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C0(0x0008)(Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_D438209241CBEA7C1261418DAF6624DF; // 0x03C8(0x0048)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh_776F9A9C4585632E302BAC964523BC4C; // 0x0410(0x0098)(ContainsInstancedReference)
	class USkeletalMeshComponent*                 MeshToCopy;                                        // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_M_MED_Commando_Head_HW01_Skeleton_AnimBP(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_M_MED_Commando_Head_HW01_Skeleton_AnimBP_AnimGraphNode_CopyPoseFromMesh_776F9A9C4585632E302BAC964523BC4C();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"M_MED_Commando_Head_HW01_Skeleton_AnimBP_C">();
	}
	static class UM_MED_Commando_Head_HW01_Skeleton_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UM_MED_Commando_Head_HW01_Skeleton_AnimBP_C>();
	}
};
static_assert(alignof(UM_MED_Commando_Head_HW01_Skeleton_AnimBP_C) == 0x000008, "Wrong alignment on UM_MED_Commando_Head_HW01_Skeleton_AnimBP_C");
static_assert(sizeof(UM_MED_Commando_Head_HW01_Skeleton_AnimBP_C) == 0x0004B0, "Wrong size on UM_MED_Commando_Head_HW01_Skeleton_AnimBP_C");
static_assert(offsetof(UM_MED_Commando_Head_HW01_Skeleton_AnimBP_C, UberGraphFrame) == 0x0003C0, "Member 'UM_MED_Commando_Head_HW01_Skeleton_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UM_MED_Commando_Head_HW01_Skeleton_AnimBP_C, AnimGraphNode_Root_D438209241CBEA7C1261418DAF6624DF) == 0x0003C8, "Member 'UM_MED_Commando_Head_HW01_Skeleton_AnimBP_C::AnimGraphNode_Root_D438209241CBEA7C1261418DAF6624DF' has a wrong offset!");
static_assert(offsetof(UM_MED_Commando_Head_HW01_Skeleton_AnimBP_C, AnimGraphNode_CopyPoseFromMesh_776F9A9C4585632E302BAC964523BC4C) == 0x000410, "Member 'UM_MED_Commando_Head_HW01_Skeleton_AnimBP_C::AnimGraphNode_CopyPoseFromMesh_776F9A9C4585632E302BAC964523BC4C' has a wrong offset!");
static_assert(offsetof(UM_MED_Commando_Head_HW01_Skeleton_AnimBP_C, MeshToCopy) == 0x0004A8, "Member 'UM_MED_Commando_Head_HW01_Skeleton_AnimBP_C::MeshToCopy' has a wrong offset!");

}

