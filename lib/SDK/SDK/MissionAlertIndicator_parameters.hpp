#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionAlertIndicator

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function MissionAlertIndicator.MissionAlertIndicator_C.ToggleTimer
// 0x0020 (0x0020 - 0x0000)
struct MissionAlertIndicator_C_ToggleTimer final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor)
};
static_assert(alignof(MissionAlertIndicator_C_ToggleTimer) == 0x000008, "Wrong alignment on MissionAlertIndicator_C_ToggleTimer");
static_assert(sizeof(MissionAlertIndicator_C_ToggleTimer) == 0x000020, "Wrong size on MissionAlertIndicator_C_ToggleTimer");
static_assert(offsetof(MissionAlertIndicator_C_ToggleTimer, IsEnabled) == 0x000000, "Member 'MissionAlertIndicator_C_ToggleTimer::IsEnabled' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_ToggleTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'MissionAlertIndicator_C_ToggleTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_ToggleTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'MissionAlertIndicator_C_ToggleTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function MissionAlertIndicator.MissionAlertIndicator_C.Config
// 0x00F8 (0x00F8 - 0x0000)
struct MissionAlertIndicator_C_Config final
{
public:
	EFortMissionAlertCategory                     InCategory;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable2;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable3;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable4;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable5;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable6;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable7;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable8;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0048(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable9;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortMissionAlertCategory                     Temp_byte_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0078(0x0078)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue3;         // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionAlertIndicator_C_Config) == 0x000008, "Wrong alignment on MissionAlertIndicator_C_Config");
static_assert(sizeof(MissionAlertIndicator_C_Config) == 0x0000F8, "Wrong size on MissionAlertIndicator_C_Config");
static_assert(offsetof(MissionAlertIndicator_C_Config, InCategory) == 0x000000, "Member 'MissionAlertIndicator_C_Config::InCategory' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_Config, Temp_object_Variable) == 0x000008, "Member 'MissionAlertIndicator_C_Config::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_Config, Temp_object_Variable2) == 0x000010, "Member 'MissionAlertIndicator_C_Config::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_Config, Temp_object_Variable3) == 0x000018, "Member 'MissionAlertIndicator_C_Config::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_Config, Temp_object_Variable4) == 0x000020, "Member 'MissionAlertIndicator_C_Config::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_Config, Temp_object_Variable5) == 0x000028, "Member 'MissionAlertIndicator_C_Config::Temp_object_Variable5' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_Config, Temp_object_Variable6) == 0x000030, "Member 'MissionAlertIndicator_C_Config::Temp_object_Variable6' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_Config, Temp_object_Variable7) == 0x000038, "Member 'MissionAlertIndicator_C_Config::Temp_object_Variable7' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_Config, Temp_object_Variable8) == 0x000040, "Member 'MissionAlertIndicator_C_Config::Temp_object_Variable8' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_Config, K2Node_MakeStruct_LinearColor) == 0x000048, "Member 'MissionAlertIndicator_C_Config::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_Config, Temp_object_Variable9) == 0x000058, "Member 'MissionAlertIndicator_C_Config::Temp_object_Variable9' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_Config, Temp_byte_Variable) == 0x000060, "Member 'MissionAlertIndicator_C_Config::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_Config, K2Node_Select_Default) == 0x000068, "Member 'MissionAlertIndicator_C_Config::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_Config, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'MissionAlertIndicator_C_Config::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_Config, K2Node_MakeStruct_SlateBrush) == 0x000078, "Member 'MissionAlertIndicator_C_Config::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_Config, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x0000F0, "Member 'MissionAlertIndicator_C_Config::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_Config, CallFunc_EqualEqual_ByteByte_ReturnValue3) == 0x0000F1, "Member 'MissionAlertIndicator_C_Config::CallFunc_EqualEqual_ByteByte_ReturnValue3' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_Config, CallFunc_BooleanOR_ReturnValue) == 0x0000F2, "Member 'MissionAlertIndicator_C_Config::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionAlertIndicator_C_Config, CallFunc_BooleanOR_ReturnValue2) == 0x0000F3, "Member 'MissionAlertIndicator_C_Config::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");

}

