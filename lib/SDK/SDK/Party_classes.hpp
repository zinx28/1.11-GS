#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Party

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// Class Party.PartyMemberState
// 0x0060 (0x0088 - 0x0028)
class UPartyMemberState : public UObject
{
public:
	struct FUniqueNetIdRepl                       UniqueId;                                          // 0x0028(0x0028)(Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   DisplayName;                                       // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	class UScriptStruct*                          MemberStateRefDef;                                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_70[0x10];                                      // 0x0070(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bHasAnnouncedJoin;                                 // 0x0080(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool IsLocalPlayer() const;
	bool IsPartyLeader() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PartyMemberState">();
	}
	static class UPartyMemberState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPartyMemberState>();
	}
};
static_assert(alignof(UPartyMemberState) == 0x000008, "Wrong alignment on UPartyMemberState");
static_assert(sizeof(UPartyMemberState) == 0x000088, "Wrong size on UPartyMemberState");
static_assert(offsetof(UPartyMemberState, UniqueId) == 0x000028, "Member 'UPartyMemberState::UniqueId' has a wrong offset!");
static_assert(offsetof(UPartyMemberState, DisplayName) == 0x000050, "Member 'UPartyMemberState::DisplayName' has a wrong offset!");
static_assert(offsetof(UPartyMemberState, MemberStateRefDef) == 0x000068, "Member 'UPartyMemberState::MemberStateRefDef' has a wrong offset!");
static_assert(offsetof(UPartyMemberState, bHasAnnouncedJoin) == 0x000080, "Member 'UPartyMemberState::bHasAnnouncedJoin' has a wrong offset!");

// Class Party.Chatroom
// 0x0030 (0x0058 - 0x0028)
class UChatroom : public UObject
{
public:
	class FString                                 CurrentChatRoomId;                                 // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         MaxChatRoomRetries;                                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         NumChatRoomRetries;                                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_40[0x18];                                      // 0x0040(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Chatroom">();
	}
	static class UChatroom* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChatroom>();
	}
};
static_assert(alignof(UChatroom) == 0x000008, "Wrong alignment on UChatroom");
static_assert(sizeof(UChatroom) == 0x000058, "Wrong size on UChatroom");
static_assert(offsetof(UChatroom, CurrentChatRoomId) == 0x000028, "Member 'UChatroom::CurrentChatRoomId' has a wrong offset!");
static_assert(offsetof(UChatroom, MaxChatRoomRetries) == 0x000038, "Member 'UChatroom::MaxChatRoomRetries' has a wrong offset!");
static_assert(offsetof(UChatroom, NumChatRoomRetries) == 0x00003C, "Member 'UChatroom::NumChatRoomRetries' has a wrong offset!");

// Class Party.Party
// 0x0470 (0x0498 - 0x0028)
#pragma pack(push, 0x1)
class alignas(0x08) UParty : public UObject
{
public:
	uint8                                         Pad_28[0x70];                                      // 0x0028(0x0070)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DefaultMaxPartySize;                               // 0x0098(0x0004)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9C[0x14];                                      // 0x009C(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bLeavingPersistentParty;                           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B1[0x3E7];                                     // 0x00B1(0x03E7)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Party">();
	}
	static class UParty* GetDefaultObj()
	{
		return GetDefaultObjImpl<UParty>();
	}
};
#pragma pack(pop)
static_assert(alignof(UParty) == 0x000008, "Wrong alignment on UParty");
static_assert(sizeof(UParty) == 0x000498, "Wrong size on UParty");
static_assert(offsetof(UParty, DefaultMaxPartySize) == 0x000098, "Member 'UParty::DefaultMaxPartySize' has a wrong offset!");
static_assert(offsetof(UParty, bLeavingPersistentParty) == 0x0000B0, "Member 'UParty::bLeavingPersistentParty' has a wrong offset!");

// Class Party.PartyGameState
// 0x05C0 (0x05E8 - 0x0028)
#pragma pack(push, 0x1)
class alignas(0x08) UPartyGameState : public UObject
{
public:
	class UScriptStruct*                          PartyStateRefDef;                                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       OwningUserId;                                      // 0x0038(0x0028)(Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_60[0x118];                                     // 0x0060(0x0118)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bDebugAcceptingMembers;                            // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_179[0x18];                                     // 0x0179(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bStayWithPartyOnDisconnect;                        // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UPartyMemberState>          PartyMemberStateClass;                             // 0x0198(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1A0[0x108];                                    // 0x01A0(0x0108)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class APartyBeaconClient>         ReservationBeaconClientClass;                      // 0x02A8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APartyBeaconClient*                     ReservationBeaconClient;                           // 0x02B0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B8[0x330];                                    // 0x02B8(0x0330)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PartyGameState">();
	}
	static class UPartyGameState* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPartyGameState>();
	}
};
#pragma pack(pop)
static_assert(alignof(UPartyGameState) == 0x000008, "Wrong alignment on UPartyGameState");
static_assert(sizeof(UPartyGameState) == 0x0005E8, "Wrong size on UPartyGameState");
static_assert(offsetof(UPartyGameState, PartyStateRefDef) == 0x000028, "Member 'UPartyGameState::PartyStateRefDef' has a wrong offset!");
static_assert(offsetof(UPartyGameState, OwningUserId) == 0x000038, "Member 'UPartyGameState::OwningUserId' has a wrong offset!");
static_assert(offsetof(UPartyGameState, bDebugAcceptingMembers) == 0x000178, "Member 'UPartyGameState::bDebugAcceptingMembers' has a wrong offset!");
static_assert(offsetof(UPartyGameState, bStayWithPartyOnDisconnect) == 0x000191, "Member 'UPartyGameState::bStayWithPartyOnDisconnect' has a wrong offset!");
static_assert(offsetof(UPartyGameState, PartyMemberStateClass) == 0x000198, "Member 'UPartyGameState::PartyMemberStateClass' has a wrong offset!");
static_assert(offsetof(UPartyGameState, ReservationBeaconClientClass) == 0x0002A8, "Member 'UPartyGameState::ReservationBeaconClientClass' has a wrong offset!");
static_assert(offsetof(UPartyGameState, ReservationBeaconClient) == 0x0002B0, "Member 'UPartyGameState::ReservationBeaconClient' has a wrong offset!");

}

