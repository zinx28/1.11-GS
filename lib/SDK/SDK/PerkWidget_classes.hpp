#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PerkWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PerkWidget.PerkWidget_C
// 0x0138 (0x03F0 - 0x02B8)
class UPerkWidget_C final : public UFortPerkWidget_NUI
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B8(0x0008)(Transient, DuplicateTransient)
	class UBorder*                                BorderAbility;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BorderFrame;                                       // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BorderHighlightBorder;                             // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                BorderHightlightBackground;                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageAbilityIcon;                                  // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageHeroBonusIcon;                                // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImagePerkIcon;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageTier;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LevelText;                                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             NamedSlotTextOnlyContent;                          // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayAbilityPerk;                                // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayBadge;                                      // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayBasicPerk;                                  // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayImagePerk;                                  // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayLevel;                                      // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBoxHoldingBox;                                // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Perkname;                                // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_SquadBonusType;                          // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VBox_TextInfo;                                     // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcherBasicPerkOrAbilityPerk;              // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcherTextOrImage;                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcherTierOrLevel;                         // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateBrush                            DemoImage;                                         // 0x0370(0x0078)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bTextOnly;                                         // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          ShowTextWithIcon;                                  // 0x03E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_PerkWidget(int32 EntryPoint);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void InitializeBasicPerk();
	void InitializeAbilityPerk();
	void GetTierAbilityBrush(struct FSlateBrush* SlateBrush);
	void GetHighlightColor(struct FLinearColor* Color);
	void ShouldFadePerk(bool* Result);
	void InitializeTextOnlyPerk();
	void InitializeHeroBonusIcon();
	void SetupBadge();
	void ShowTierImage();
	void GetPerkStat(struct FTooltipStat* TooltipStat);
	void HighlightBadge();
	void InitializeTextInfo();
	class UWidget* CreateToolTipWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PerkWidget_C">();
	}
	static class UPerkWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPerkWidget_C>();
	}
};
static_assert(alignof(UPerkWidget_C) == 0x000008, "Wrong alignment on UPerkWidget_C");
static_assert(sizeof(UPerkWidget_C) == 0x0003F0, "Wrong size on UPerkWidget_C");
static_assert(offsetof(UPerkWidget_C, UberGraphFrame) == 0x0002B8, "Member 'UPerkWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, BorderAbility) == 0x0002C0, "Member 'UPerkWidget_C::BorderAbility' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, BorderFrame) == 0x0002C8, "Member 'UPerkWidget_C::BorderFrame' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, BorderHighlightBorder) == 0x0002D0, "Member 'UPerkWidget_C::BorderHighlightBorder' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, BorderHightlightBackground) == 0x0002D8, "Member 'UPerkWidget_C::BorderHightlightBackground' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, ImageAbilityIcon) == 0x0002E0, "Member 'UPerkWidget_C::ImageAbilityIcon' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, ImageHeroBonusIcon) == 0x0002E8, "Member 'UPerkWidget_C::ImageHeroBonusIcon' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, ImagePerkIcon) == 0x0002F0, "Member 'UPerkWidget_C::ImagePerkIcon' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, ImageTier) == 0x0002F8, "Member 'UPerkWidget_C::ImageTier' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, LevelText) == 0x000300, "Member 'UPerkWidget_C::LevelText' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, NamedSlotTextOnlyContent) == 0x000308, "Member 'UPerkWidget_C::NamedSlotTextOnlyContent' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, OverlayAbilityPerk) == 0x000310, "Member 'UPerkWidget_C::OverlayAbilityPerk' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, OverlayBadge) == 0x000318, "Member 'UPerkWidget_C::OverlayBadge' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, OverlayBasicPerk) == 0x000320, "Member 'UPerkWidget_C::OverlayBasicPerk' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, OverlayImagePerk) == 0x000328, "Member 'UPerkWidget_C::OverlayImagePerk' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, OverlayLevel) == 0x000330, "Member 'UPerkWidget_C::OverlayLevel' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, ScaleBoxHoldingBox) == 0x000338, "Member 'UPerkWidget_C::ScaleBoxHoldingBox' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, TextBlock_Perkname) == 0x000340, "Member 'UPerkWidget_C::TextBlock_Perkname' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, TextBlock_SquadBonusType) == 0x000348, "Member 'UPerkWidget_C::TextBlock_SquadBonusType' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, VBox_TextInfo) == 0x000350, "Member 'UPerkWidget_C::VBox_TextInfo' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, WidgetSwitcherBasicPerkOrAbilityPerk) == 0x000358, "Member 'UPerkWidget_C::WidgetSwitcherBasicPerkOrAbilityPerk' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, WidgetSwitcherTextOrImage) == 0x000360, "Member 'UPerkWidget_C::WidgetSwitcherTextOrImage' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, WidgetSwitcherTierOrLevel) == 0x000368, "Member 'UPerkWidget_C::WidgetSwitcherTierOrLevel' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, DemoImage) == 0x000370, "Member 'UPerkWidget_C::DemoImage' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, bTextOnly) == 0x0003E8, "Member 'UPerkWidget_C::bTextOnly' has a wrong offset!");
static_assert(offsetof(UPerkWidget_C, ShowTextWithIcon) == 0x0003E9, "Member 'UPerkWidget_C::ShowTextWithIcon' has a wrong offset!");

}

