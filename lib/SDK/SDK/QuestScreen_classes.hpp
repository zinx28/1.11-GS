#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "CommonUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass QuestScreen.QuestScreen_C
// 0x00E0 (0x04D0 - 0x03F0)
class UQuestScreen_C final : public UFortQuestScreen
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03F0(0x0008)(Transient, DuplicateTransient)
	class UJournalQuestDetails_C*                 JournalQuestDetails;                               // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJournalQuestRewardDetails_C*           JournalQuestRewardDetails;                         // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             QuestDetailsScrollbox;                             // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTreeView*                        QuestsTreeView;                                    // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_2;                                        // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortQuestItem*                         ActiveQuestItem;                                   // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowNamePlay;                                       // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowNameAbandon;                                    // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowNameCollect;                                    // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowNameReplayIntro;                                // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowNameReplayOutro;                                // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowNamePinQuest;                                   // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RowNameStopConversation;                           // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          PreviousEntry;                                     // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFrontEnd_;                                       // 0x0468(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   CloseJournal;                                      // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FName                                   RowNameUnpinQuest;                                 // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJournalQuestDetails_C*                 QuestDetailsWidgetReference;                       // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UJournalQuestRewardDetails_C*           RewardDetailsWidgetReference;                      // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItem*                         InitialQuestToSelect;                              // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           UpdatePendingSeenItemTimerHandle;                  // 0x04A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	TArray<class UQuestTreeEntry_C*>              QuestButtons;                                      // 0x04A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          bDisableClaimRewardButton;                         // 0x04B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   AbandonQuest;                                      // 0x04C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void CloseJournal__DelegateSignature();
	void AbandonQuest__DelegateSignature(class UFortQuestItem* QuestToAbandon);
	void ExecuteUbergraph_QuestScreen(int32 EntryPoint);
	void ShowAbandonQuestDialog(class UFortQuestItem* QuestToAbandon);
	void OnItemSelected(class UObject* Item, bool bIsSelected);
	void Construct();
	void OnPartyLeft();
	void OnMatchmakingStarted();
	void OnMatchamkingComplete(EMatchmakingCompleteResult Result);
	void OnClientPartyStateChanged(EFortPartyState PartyState);
	void PlayerPartyStateChanged(const struct FFortTeamMemberInfo& PlayerInfo);
	void BndEvt__QuestsTreeView_K2Node_ComponentBoundEvent_200_OnListViewItemWidgetDestroyed__DelegateSignature(class UUserWidget* Widget);
	void OnDeactivated();
	void OnActivated();
	void Refresh_Tree_View();
	void BndEvt__HorizontalTabList_K2Node_ComponentBoundEvent_252_OnTabSelected__DelegateSignature(class FName TabId);
	void BndEvt__HorizontalTabList_K2Node_ComponentBoundEvent_150_OnTabButtonCreated__DelegateSignature(class FName TabId, class UCommonButton* TabButton);
	void BndEvt__QuestsTreeView_K2Node_ComponentBoundEvent_23_OnListViewItemWidgetCreated__DelegateSignature(class UUserWidget* Widget);
	void DialogResult_CE39442C4BCACCFD8414B495A3B27A21(EFortDialogResult Result, class FName ResultName);
	TArray<class UObject*> OnGetChildrenForCategory(class UObject* Item);
	void HandleBack(bool* Passthrough);
	void PlayQuest(bool* Passthrough);
	void PopulateDetailWidgets();
	void SetupInputHandlers();
	void ReplayIntroAudio(bool* Passthrough);
	void OnAbandonQuestConfirmed(class UFortQuestItem* QuestToAbandon);
	void SelectInitialQuest();
	void ClaimReward(bool* Passthrough);
	void UpdateInputHandlers(class UFortQuestItem* Active_Quest);
	void PinQuest(bool* Passthrough);
	void HandleQuestOp(class UFortQuestItem* Quest);
	void SelectQuest(class UFortQuestItem* Quest);
	void HandlePendingNavigationOp();
	void ReplayOutroAudio(bool* Passthrough);
	void StopConversation(bool* Passthrough);
	void HandleOnEndSpokenDialog();
	void RefreshQuestCategories();
	void Update_Pending_Seen_Quest_Items();
	void Update_Category_Buttons_Bang_State();
	void HandleInventory(bool* Passthrough);
	void Toggle_Disable_Claim_Reward_Button(bool ToDisable);
	void ShouldShowPlayQuest(class UFortQuestItem* Quest, bool* ShouldShowPlay);
	void HandleAbandonQuest(bool* Passthrough);
	void CalculateInitialQuestToSelect();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QuestScreen_C">();
	}
	static class UQuestScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuestScreen_C>();
	}
};
static_assert(alignof(UQuestScreen_C) == 0x000008, "Wrong alignment on UQuestScreen_C");
static_assert(sizeof(UQuestScreen_C) == 0x0004D0, "Wrong size on UQuestScreen_C");
static_assert(offsetof(UQuestScreen_C, UberGraphFrame) == 0x0003F0, "Member 'UQuestScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, JournalQuestDetails) == 0x0003F8, "Member 'UQuestScreen_C::JournalQuestDetails' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, JournalQuestRewardDetails) == 0x000400, "Member 'UQuestScreen_C::JournalQuestRewardDetails' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, QuestDetailsScrollbox) == 0x000408, "Member 'UQuestScreen_C::QuestDetailsScrollbox' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, QuestsTreeView) == 0x000410, "Member 'UQuestScreen_C::QuestsTreeView' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, SafeZone_2) == 0x000418, "Member 'UQuestScreen_C::SafeZone_2' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, ActiveQuestItem) == 0x000420, "Member 'UQuestScreen_C::ActiveQuestItem' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, RowNamePlay) == 0x000428, "Member 'UQuestScreen_C::RowNamePlay' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, RowNameAbandon) == 0x000430, "Member 'UQuestScreen_C::RowNameAbandon' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, RowNameCollect) == 0x000438, "Member 'UQuestScreen_C::RowNameCollect' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, RowNameReplayIntro) == 0x000440, "Member 'UQuestScreen_C::RowNameReplayIntro' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, RowNameReplayOutro) == 0x000448, "Member 'UQuestScreen_C::RowNameReplayOutro' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, RowNamePinQuest) == 0x000450, "Member 'UQuestScreen_C::RowNamePinQuest' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, RowNameStopConversation) == 0x000458, "Member 'UQuestScreen_C::RowNameStopConversation' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, PreviousEntry) == 0x000460, "Member 'UQuestScreen_C::PreviousEntry' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, IsFrontEnd_) == 0x000468, "Member 'UQuestScreen_C::IsFrontEnd_' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, CloseJournal) == 0x000470, "Member 'UQuestScreen_C::CloseJournal' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, RowNameUnpinQuest) == 0x000480, "Member 'UQuestScreen_C::RowNameUnpinQuest' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, QuestDetailsWidgetReference) == 0x000488, "Member 'UQuestScreen_C::QuestDetailsWidgetReference' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, RewardDetailsWidgetReference) == 0x000490, "Member 'UQuestScreen_C::RewardDetailsWidgetReference' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, InitialQuestToSelect) == 0x000498, "Member 'UQuestScreen_C::InitialQuestToSelect' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, UpdatePendingSeenItemTimerHandle) == 0x0004A0, "Member 'UQuestScreen_C::UpdatePendingSeenItemTimerHandle' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, QuestButtons) == 0x0004A8, "Member 'UQuestScreen_C::QuestButtons' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, bDisableClaimRewardButton) == 0x0004B8, "Member 'UQuestScreen_C::bDisableClaimRewardButton' has a wrong offset!");
static_assert(offsetof(UQuestScreen_C, AbandonQuest) == 0x0004C0, "Member 'UQuestScreen_C::AbandonQuest' has a wrong offset!");

}

