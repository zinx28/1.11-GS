#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuickbarBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass QuickbarBase.QuickbarBase_C
// 0x0028 (0x0260 - 0x0238)
class UQuickbarBase_C : public UFortHUDElementWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(Transient, DuplicateTransient)
	EFortQuickBars                                MyQuickbarIndex;                                   // 0x0240(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FocusedSlot;                                       // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UQuickbarSlot_C*>                QuickbarSlots;                                     // 0x0248(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          IsMaximized;                                       // 0x0258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EFortQuickBars                                FocusedQuickbarIndex;                              // 0x0259(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_QuickbarBase(int32 EntryPoint);
	void Destruct();
	void OnLocalPlayerSpawned();
	void OnLocalPlayerRevived();
	void OnLocalPlayerDied(const struct FFortPlayerDeathReport& DeathReport);
	void OnQuickbarSecondarySlotFocusChanged_Event_0(EFortQuickBars QuickbarIndex, int32 Param_Slot);
	void OnQuickbarForceFullUpdate(EFortQuickBars QuickbarIndex);
	void OnQuickbarContentsChanged(EFortQuickBars QuickbarIndex);
	void OnQuickbarSlotFocusChanged(EFortQuickBars QuickbarIndex, int32 Param_Slot);
	void OnWorldItemListChanged(const TArray<class UFortWorldItem*>& ItemsAdded, const TArray<class UFortWorldItem*>& ItemsRemoved);
	void Construct();
	void Is_Valid_Slot(int32 Param_Slot, bool* Is_Valid, int32* Array_Index);
	void Maximize();
	void Minimize();
	void HandleKeybindsChanged();
	void RefreshQuickbar();
	void ShouldRefreshQuickbarItem(int32 RequestedSlot, int32 CurrentSlot, bool* Result);
	void UpdateCurrentFocusedQuickbar(EFortQuickBars* PreviousFocusedQuickbar, EFortQuickBars* CurrentFocusedQuickbar);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QuickbarBase_C">();
	}
	static class UQuickbarBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuickbarBase_C>();
	}
};
static_assert(alignof(UQuickbarBase_C) == 0x000008, "Wrong alignment on UQuickbarBase_C");
static_assert(sizeof(UQuickbarBase_C) == 0x000260, "Wrong size on UQuickbarBase_C");
static_assert(offsetof(UQuickbarBase_C, UberGraphFrame) == 0x000238, "Member 'UQuickbarBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UQuickbarBase_C, MyQuickbarIndex) == 0x000240, "Member 'UQuickbarBase_C::MyQuickbarIndex' has a wrong offset!");
static_assert(offsetof(UQuickbarBase_C, FocusedSlot) == 0x000244, "Member 'UQuickbarBase_C::FocusedSlot' has a wrong offset!");
static_assert(offsetof(UQuickbarBase_C, QuickbarSlots) == 0x000248, "Member 'UQuickbarBase_C::QuickbarSlots' has a wrong offset!");
static_assert(offsetof(UQuickbarBase_C, IsMaximized) == 0x000258, "Member 'UQuickbarBase_C::IsMaximized' has a wrong offset!");
static_assert(offsetof(UQuickbarBase_C, FocusedQuickbarIndex) == 0x000259, "Member 'UQuickbarBase_C::FocusedQuickbarIndex' has a wrong offset!");

}

