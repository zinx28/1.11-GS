#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuickbarSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "ItemDisplayStyle_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass QuickbarSlot.QuickbarSlot_C
// 0x0148 (0x0358 - 0x0210)
class UQuickbarSlot_C : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0210(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Selected;                                          // 0x0218(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimMaximize;                                      // 0x0220(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimMinimize;                                      // 0x0228(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               _SizeBox__Item;                                    // 0x0230(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       BottomHoldText;                                    // 0x0238(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BottomLeftArrowImage;                              // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BottomLeftArrowImage2;                             // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BottomRightArrowImage;                             // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BottomRightArrowImage2;                            // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Empty;                                             // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_0;                                 // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortMultiSizeItemCard*                 ItemCardMaximized;                                 // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UFortMultiSizeItemCard*                 ItemCardMinimized;                                 // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       KeybindBottom;                                     // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       KeybindBottomCombo1;                               // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       KeybindBottomCombo2;                               // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       KeybindBottomComboArrow1;                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       KeybindBottomComboArrow2;                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       KeybindTop;                                        // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       KeybindTopCombo1;                                  // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       KeybindTopCombo2;                                  // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       KeybindTopComboArrow1;                             // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       KeybindTopComboArrow2;                             // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UQuickbarSlotCooldown_C*                QuickbarSlotCooldown;                              // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Selection;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxBottomKeybind;                              // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxTopKeybind;                                 // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SlotInteraction;                                   // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  SwitcherBottomComboSwitcher;                       // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  SwitcherTopComboSwitcher;                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopLeftArrowImage;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopLeftArrowImage2;                                // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopRightArrowImage;                                // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TopRightArrowImage2;                               // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortQuickBars                                QuickBarType;                                      // 0x032C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EItemDisplayStyle                             ItemDisplayStyle;                                  // 0x032D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemCardSize                             ItemCardSize;                                      // 0x032E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowBottomArrows;                                 // 0x032F(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          bShowTopArrows;                                    // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          DoNotPlaySelectionAnimation;                       // 0x0331(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          bHideKeybindsWhenAbilityUnavailable;               // 0x0332(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bKeybindsHidden;                                   // 0x0333(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EFortItemCooldownType>                 CooldownTypesSupported;                            // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	class UFortItem*                              Item;                                              // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimatedBoxScaleFactor;                            // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	EFortItemCardSize                             MinimumCardSize;                                   // 0x0354(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortItemCardSize                             MaximumCardSize;                                   // 0x0355(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldCollapseItemWidgetBorder;                    // 0x0356(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_QuickbarSlot(int32 EntryPoint);
	void SetAnimatedBoxScaleFactor(float Param_AnimatedBoxScaleFactor);
	void Construct();
	void RefreshItem();
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void HandleMinimizeStarted();
	void HandleMaximizeFinished();
	void HandleMinimizeFinished();
	void HandleMaximizeStarted();
	void SetSelected(bool Param_Selected);
	void Minimize(bool ShouldSkipAnimation);
	void Maximize(bool ShouldSkipAnimation);
	void Resize(EFortItemCardSize Card_Size);
	void UpdateKeyBindingText();
	void UpdateKeyBindingVisibility();
	void InitializeCooldowns();
	void OnCooldownStarted(EFortItemCooldownType CooldownType);
	void OnCooldownStopped(EFortItemCooldownType CooldownType);
	void UpdateItemCardsVisibility();
	void UpdateItemBoxSize();

	void GetKeyBindingAction(class FName* KeyBindingAction) const;
	void GetKeyBindingAction_Keyboard(class FName* Key_Binding_Action) const;
	void GetKeyBindingAction_Gamepad(class FName* KeyBindingAction) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QuickbarSlot_C">();
	}
	static class UQuickbarSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQuickbarSlot_C>();
	}
};
static_assert(alignof(UQuickbarSlot_C) == 0x000008, "Wrong alignment on UQuickbarSlot_C");
static_assert(sizeof(UQuickbarSlot_C) == 0x000358, "Wrong size on UQuickbarSlot_C");
static_assert(offsetof(UQuickbarSlot_C, UberGraphFrame) == 0x000210, "Member 'UQuickbarSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, Selected) == 0x000218, "Member 'UQuickbarSlot_C::Selected' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, AnimMaximize) == 0x000220, "Member 'UQuickbarSlot_C::AnimMaximize' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, AnimMinimize) == 0x000228, "Member 'UQuickbarSlot_C::AnimMinimize' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, _SizeBox__Item) == 0x000230, "Member 'UQuickbarSlot_C::_SizeBox__Item' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, BottomHoldText) == 0x000238, "Member 'UQuickbarSlot_C::BottomHoldText' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, BottomLeftArrowImage) == 0x000240, "Member 'UQuickbarSlot_C::BottomLeftArrowImage' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, BottomLeftArrowImage2) == 0x000248, "Member 'UQuickbarSlot_C::BottomLeftArrowImage2' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, BottomRightArrowImage) == 0x000250, "Member 'UQuickbarSlot_C::BottomRightArrowImage' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, BottomRightArrowImage2) == 0x000258, "Member 'UQuickbarSlot_C::BottomRightArrowImage2' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, Empty) == 0x000260, "Member 'UQuickbarSlot_C::Empty' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, InvalidationBox_0) == 0x000268, "Member 'UQuickbarSlot_C::InvalidationBox_0' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, ItemCardMaximized) == 0x000270, "Member 'UQuickbarSlot_C::ItemCardMaximized' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, ItemCardMinimized) == 0x000278, "Member 'UQuickbarSlot_C::ItemCardMinimized' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, KeybindBottom) == 0x000280, "Member 'UQuickbarSlot_C::KeybindBottom' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, KeybindBottomCombo1) == 0x000288, "Member 'UQuickbarSlot_C::KeybindBottomCombo1' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, KeybindBottomCombo2) == 0x000290, "Member 'UQuickbarSlot_C::KeybindBottomCombo2' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, KeybindBottomComboArrow1) == 0x000298, "Member 'UQuickbarSlot_C::KeybindBottomComboArrow1' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, KeybindBottomComboArrow2) == 0x0002A0, "Member 'UQuickbarSlot_C::KeybindBottomComboArrow2' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, KeybindTop) == 0x0002A8, "Member 'UQuickbarSlot_C::KeybindTop' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, KeybindTopCombo1) == 0x0002B0, "Member 'UQuickbarSlot_C::KeybindTopCombo1' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, KeybindTopCombo2) == 0x0002B8, "Member 'UQuickbarSlot_C::KeybindTopCombo2' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, KeybindTopComboArrow1) == 0x0002C0, "Member 'UQuickbarSlot_C::KeybindTopComboArrow1' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, KeybindTopComboArrow2) == 0x0002C8, "Member 'UQuickbarSlot_C::KeybindTopComboArrow2' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, QuickbarSlotCooldown) == 0x0002D0, "Member 'UQuickbarSlot_C::QuickbarSlotCooldown' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, Selection) == 0x0002D8, "Member 'UQuickbarSlot_C::Selection' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, SizeBoxBottomKeybind) == 0x0002E0, "Member 'UQuickbarSlot_C::SizeBoxBottomKeybind' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, SizeBoxTopKeybind) == 0x0002E8, "Member 'UQuickbarSlot_C::SizeBoxTopKeybind' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, SlotInteraction) == 0x0002F0, "Member 'UQuickbarSlot_C::SlotInteraction' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, SwitcherBottomComboSwitcher) == 0x0002F8, "Member 'UQuickbarSlot_C::SwitcherBottomComboSwitcher' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, SwitcherTopComboSwitcher) == 0x000300, "Member 'UQuickbarSlot_C::SwitcherTopComboSwitcher' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, TopLeftArrowImage) == 0x000308, "Member 'UQuickbarSlot_C::TopLeftArrowImage' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, TopLeftArrowImage2) == 0x000310, "Member 'UQuickbarSlot_C::TopLeftArrowImage2' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, TopRightArrowImage) == 0x000318, "Member 'UQuickbarSlot_C::TopRightArrowImage' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, TopRightArrowImage2) == 0x000320, "Member 'UQuickbarSlot_C::TopRightArrowImage2' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, SlotIndex) == 0x000328, "Member 'UQuickbarSlot_C::SlotIndex' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, QuickBarType) == 0x00032C, "Member 'UQuickbarSlot_C::QuickBarType' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, ItemDisplayStyle) == 0x00032D, "Member 'UQuickbarSlot_C::ItemDisplayStyle' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, ItemCardSize) == 0x00032E, "Member 'UQuickbarSlot_C::ItemCardSize' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, bShowBottomArrows) == 0x00032F, "Member 'UQuickbarSlot_C::bShowBottomArrows' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, bShowTopArrows) == 0x000330, "Member 'UQuickbarSlot_C::bShowTopArrows' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, DoNotPlaySelectionAnimation) == 0x000331, "Member 'UQuickbarSlot_C::DoNotPlaySelectionAnimation' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, bHideKeybindsWhenAbilityUnavailable) == 0x000332, "Member 'UQuickbarSlot_C::bHideKeybindsWhenAbilityUnavailable' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, bKeybindsHidden) == 0x000333, "Member 'UQuickbarSlot_C::bKeybindsHidden' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, CooldownTypesSupported) == 0x000338, "Member 'UQuickbarSlot_C::CooldownTypesSupported' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, Item) == 0x000348, "Member 'UQuickbarSlot_C::Item' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, AnimatedBoxScaleFactor) == 0x000350, "Member 'UQuickbarSlot_C::AnimatedBoxScaleFactor' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, MinimumCardSize) == 0x000354, "Member 'UQuickbarSlot_C::MinimumCardSize' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, MaximumCardSize) == 0x000355, "Member 'UQuickbarSlot_C::MaximumCardSize' has a wrong offset!");
static_assert(offsetof(UQuickbarSlot_C, ShouldCollapseItemWidgetBorder) == 0x000356, "Member 'UQuickbarSlot_C::ShouldCollapseItemWidgetBorder' has a wrong offset!");

}

