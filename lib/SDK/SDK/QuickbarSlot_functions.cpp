#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuickbarSlot

#include "Basic.hpp"

#include "QuickbarSlot_classes.hpp"
#include "QuickbarSlot_parameters.hpp"


namespace SDK
{

// Function QuickbarSlot.QuickbarSlot_C.ExecuteUbergraph_QuickbarSlot
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickbarSlot_C::ExecuteUbergraph_QuickbarSlot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "ExecuteUbergraph_QuickbarSlot");

	Params::QuickbarSlot_C_ExecuteUbergraph_QuickbarSlot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickbarSlot.QuickbarSlot_C.SetAnimatedBoxScaleFactor
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param_AnimatedBoxScaleFactor                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickbarSlot_C::SetAnimatedBoxScaleFactor(float Param_AnimatedBoxScaleFactor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "SetAnimatedBoxScaleFactor");

	Params::QuickbarSlot_C_SetAnimatedBoxScaleFactor Parms{};

	Parms.Param_AnimatedBoxScaleFactor = Param_AnimatedBoxScaleFactor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickbarSlot.QuickbarSlot_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UQuickbarSlot_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickbarSlot.QuickbarSlot_C.RefreshItem
// (BlueprintCallable, BlueprintEvent)

void UQuickbarSlot_C::RefreshItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "RefreshItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickbarSlot.QuickbarSlot_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UQuickbarSlot_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "PreConstruct");

	Params::QuickbarSlot_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickbarSlot.QuickbarSlot_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickbarSlot_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "Tick");

	Params::QuickbarSlot_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickbarSlot.QuickbarSlot_C.HandleMinimizeStarted
// (BlueprintCallable, BlueprintEvent)

void UQuickbarSlot_C::HandleMinimizeStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "HandleMinimizeStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickbarSlot.QuickbarSlot_C.HandleMaximizeFinished
// (BlueprintCallable, BlueprintEvent)

void UQuickbarSlot_C::HandleMaximizeFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "HandleMaximizeFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickbarSlot.QuickbarSlot_C.HandleMinimizeFinished
// (BlueprintCallable, BlueprintEvent)

void UQuickbarSlot_C::HandleMinimizeFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "HandleMinimizeFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickbarSlot.QuickbarSlot_C.HandleMaximizeStarted
// (BlueprintCallable, BlueprintEvent)

void UQuickbarSlot_C::HandleMaximizeStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "HandleMaximizeStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickbarSlot.QuickbarSlot_C.SetSelected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Selected                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UQuickbarSlot_C::SetSelected(bool Param_Selected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "SetSelected");

	Params::QuickbarSlot_C_SetSelected Parms{};

	Parms.Param_Selected = Param_Selected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickbarSlot.QuickbarSlot_C.Minimize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldSkipAnimation                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UQuickbarSlot_C::Minimize(bool ShouldSkipAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "Minimize");

	Params::QuickbarSlot_C_Minimize Parms{};

	Parms.ShouldSkipAnimation = ShouldSkipAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickbarSlot.QuickbarSlot_C.Maximize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldSkipAnimation                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UQuickbarSlot_C::Maximize(bool ShouldSkipAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "Maximize");

	Params::QuickbarSlot_C_Maximize Parms{};

	Parms.ShouldSkipAnimation = ShouldSkipAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickbarSlot.QuickbarSlot_C.Resize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortItemCardSize                       Card_Size                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickbarSlot_C::Resize(EFortItemCardSize Card_Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "Resize");

	Params::QuickbarSlot_C_Resize Parms{};

	Parms.Card_Size = Card_Size;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickbarSlot.QuickbarSlot_C.UpdateKeyBindingText
// (Public, BlueprintCallable, BlueprintEvent)

void UQuickbarSlot_C::UpdateKeyBindingText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "UpdateKeyBindingText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickbarSlot.QuickbarSlot_C.UpdateKeyBindingVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UQuickbarSlot_C::UpdateKeyBindingVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "UpdateKeyBindingVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickbarSlot.QuickbarSlot_C.InitializeCooldowns
// (Public, BlueprintCallable, BlueprintEvent)

void UQuickbarSlot_C::InitializeCooldowns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "InitializeCooldowns");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickbarSlot.QuickbarSlot_C.OnCooldownStarted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortItemCooldownType                   CooldownType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickbarSlot_C::OnCooldownStarted(EFortItemCooldownType CooldownType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "OnCooldownStarted");

	Params::QuickbarSlot_C_OnCooldownStarted Parms{};

	Parms.CooldownType = CooldownType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickbarSlot.QuickbarSlot_C.OnCooldownStopped
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortItemCooldownType                   CooldownType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickbarSlot_C::OnCooldownStopped(EFortItemCooldownType CooldownType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "OnCooldownStopped");

	Params::QuickbarSlot_C_OnCooldownStopped Parms{};

	Parms.CooldownType = CooldownType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QuickbarSlot.QuickbarSlot_C.UpdateItemCardsVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UQuickbarSlot_C::UpdateItemCardsVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "UpdateItemCardsVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickbarSlot.QuickbarSlot_C.UpdateItemBoxSize
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UQuickbarSlot_C::UpdateItemBoxSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "UpdateItemBoxSize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QuickbarSlot.QuickbarSlot_C.GetKeyBindingAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                             KeyBindingAction                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickbarSlot_C::GetKeyBindingAction(class FName* KeyBindingAction) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "GetKeyBindingAction");

	Params::QuickbarSlot_C_GetKeyBindingAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (KeyBindingAction != nullptr)
		*KeyBindingAction = Parms.KeyBindingAction;
}


// Function QuickbarSlot.QuickbarSlot_C.GetKeyBindingAction_Keyboard
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                             Key_Binding_Action                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickbarSlot_C::GetKeyBindingAction_Keyboard(class FName* Key_Binding_Action) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "GetKeyBindingAction_Keyboard");

	Params::QuickbarSlot_C_GetKeyBindingAction_Keyboard Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Key_Binding_Action != nullptr)
		*Key_Binding_Action = Parms.Key_Binding_Action;
}


// Function QuickbarSlot.QuickbarSlot_C.GetKeyBindingAction_Gamepad
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                             KeyBindingAction                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UQuickbarSlot_C::GetKeyBindingAction_Gamepad(class FName* KeyBindingAction) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QuickbarSlot_C", "GetKeyBindingAction_Gamepad");

	Params::QuickbarSlot_C_GetKeyBindingAction_Gamepad Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (KeyBindingAction != nullptr)
		*KeyBindingAction = Parms.KeyBindingAction;
}

}

