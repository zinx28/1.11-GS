#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Results_BadgeLoot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Results_BadgeLoot.Results_BadgeLoot_C
// 0x0130 (0x0348 - 0x0218)
class UResults_BadgeLoot_C final : public UFortUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0218(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_SkipToFinalState;                             // 0x0220(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Outro;                                        // 0x0228(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_LeveledUp;                                    // 0x0230(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_ShiftBadges4;                                 // 0x0238(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_ShiftBadges3;                                 // 0x0240(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_ShiftBadges2;                                 // 0x0248(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_ShiftBadges1;                                 // 0x0250(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_ZoomIntro;                                    // 0x0258(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_ContinueButtonOutro;                          // 0x0260(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_ContinueButtonIntro;                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UResults_Badge_C*                       Badge1;                                            // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UResults_Badge_C*                       Badge2;                                            // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UResults_Badge_C*                       Badge3;                                            // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UResults_Badge_C*                       Badge4;                                            // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      ButtonContinue;                                    // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UResults_BadgeLootBar_C*                LootBar;                                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USafeZone*                              SafeZone_0;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UFortItem*>                      BadgeItems;                                        // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	UMulticastDelegateProperty_                   Finished;                                          // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         RewardBadgeItemsIndex;                             // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UResults_Badge_C*                       CurrentBadgeAdding;                                // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UResults_Badge_C*>               BadgeQueue;                                        // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         DelayBetweenBadgeIntros;                           // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBetweenIntroAndAddBadges;                     // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidgetAnimation*>               BadgeAnimationQueue;                               // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	float                                         DelayBetweenAddingBadges;                          // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBetweenAddingBadgesAndZoomIn;                 // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBetween3DChestIntroAndBadgesIntro;            // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBetweenOutroAndFinish;                        // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSkippedToEnd;                                     // 0x0314(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSkippingToEnd;                                    // 0x0315(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bWaitingFor3DChestProgression;                     // 0x0316(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bCanSkipToEnd;                                     // 0x0317(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USoundBase*                             ChestLootUpgrade;                                  // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ChestSlide;                                        // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ChestReward;                                       // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             FinalChestReward;                                  // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ChestDisappear;                                    // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             OpenChestLoot;                                     // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Finished__DelegateSignature();
	void ExecuteUbergraph_Results_BadgeLoot(int32 EntryPoint);
	void BndEvt__Anim_ContinueButtonIntro_K2Node_ComponentBoundEvent_2_OnWidgetAnimationPlaybackStatusChanged__DelegateSignature();
	void BndEvt__ButtonContinue_K2Node_ComponentBoundEvent_279_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void Skip();
	void HandleClientEvent_ChestOutroDone(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent);
	void HandleClientEvent_ChestResultFocusDone(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent);
	void HandleClientEvent_ChestProgressionDone(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent);
	void HandleClientEvent_ChestIntroDone(class UObject* EventSource, class UObject* EventFocus, const struct FFortClientEvent& ClientEvent);
	void Skip_To_End_Sequence();
	void Zoom_In_Sequence();
	void BndEvt__Anim_Outro_K2Node_ComponentBoundEvent_2_OnWidgetAnimationPlaybackStatusChanged__DelegateSignature();
	void BndEvt__ResultsBadgeLootBar_K2Node_ComponentBoundEvent_5_LeveledUp__DelegateSignature();
	void BndEvt__ResultsBar_K2Node_ComponentBoundEvent_3_FinishedAddingBadgePoints__DelegateSignature();
	void BndEvt__Anim_Outro_K2Node_ComponentBoundEvent_0_OnWidgetAnimationPlaybackStatusChanged__DelegateSignature();
	void FinishedAddingBadges();
	void OnConvertFinished();
	void Add_Next_Badge();
	void Add_Badges_Sequence();
	void BndEvt__Results_RewardPackage_K2Node_ComponentBoundEvent_9_IntroComplete__DelegateSignature();
	void Intro_Sequence();
	void Initialize(TArray<class UFortItem*>& RewardItems);
	void PopulateNextBadge(class UResults_Badge_C* Badge);
	void HasMoreBadgesToShow(bool* bMoreBadgesToShow);
	void StepBadgeQueues();
	void PlayAnimationCommon(class UWidgetAnimation* Animation);
	void InitializeDelays();
	void SetSkippingToEnd();
	void SkipToFinalState();
	void ShouldBadgeBeShown(class UFortItem* Badge, bool* ShownBadgeBeShown);
	void Focus();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Results_BadgeLoot_C">();
	}
	static class UResults_BadgeLoot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UResults_BadgeLoot_C>();
	}
};
static_assert(alignof(UResults_BadgeLoot_C) == 0x000008, "Wrong alignment on UResults_BadgeLoot_C");
static_assert(sizeof(UResults_BadgeLoot_C) == 0x000348, "Wrong size on UResults_BadgeLoot_C");
static_assert(offsetof(UResults_BadgeLoot_C, UberGraphFrame) == 0x000218, "Member 'UResults_BadgeLoot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, Anim_SkipToFinalState) == 0x000220, "Member 'UResults_BadgeLoot_C::Anim_SkipToFinalState' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, Anim_Outro) == 0x000228, "Member 'UResults_BadgeLoot_C::Anim_Outro' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, Anim_LeveledUp) == 0x000230, "Member 'UResults_BadgeLoot_C::Anim_LeveledUp' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, Anim_ShiftBadges4) == 0x000238, "Member 'UResults_BadgeLoot_C::Anim_ShiftBadges4' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, Anim_ShiftBadges3) == 0x000240, "Member 'UResults_BadgeLoot_C::Anim_ShiftBadges3' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, Anim_ShiftBadges2) == 0x000248, "Member 'UResults_BadgeLoot_C::Anim_ShiftBadges2' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, Anim_ShiftBadges1) == 0x000250, "Member 'UResults_BadgeLoot_C::Anim_ShiftBadges1' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, Anim_ZoomIntro) == 0x000258, "Member 'UResults_BadgeLoot_C::Anim_ZoomIntro' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, Anim_ContinueButtonOutro) == 0x000260, "Member 'UResults_BadgeLoot_C::Anim_ContinueButtonOutro' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, Anim_ContinueButtonIntro) == 0x000268, "Member 'UResults_BadgeLoot_C::Anim_ContinueButtonIntro' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, Badge1) == 0x000270, "Member 'UResults_BadgeLoot_C::Badge1' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, Badge2) == 0x000278, "Member 'UResults_BadgeLoot_C::Badge2' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, Badge3) == 0x000280, "Member 'UResults_BadgeLoot_C::Badge3' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, Badge4) == 0x000288, "Member 'UResults_BadgeLoot_C::Badge4' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, ButtonContinue) == 0x000290, "Member 'UResults_BadgeLoot_C::ButtonContinue' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, LootBar) == 0x000298, "Member 'UResults_BadgeLoot_C::LootBar' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, SafeZone_0) == 0x0002A0, "Member 'UResults_BadgeLoot_C::SafeZone_0' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, BadgeItems) == 0x0002A8, "Member 'UResults_BadgeLoot_C::BadgeItems' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, Finished) == 0x0002B8, "Member 'UResults_BadgeLoot_C::Finished' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, RewardBadgeItemsIndex) == 0x0002C8, "Member 'UResults_BadgeLoot_C::RewardBadgeItemsIndex' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, CurrentBadgeAdding) == 0x0002D0, "Member 'UResults_BadgeLoot_C::CurrentBadgeAdding' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, BadgeQueue) == 0x0002D8, "Member 'UResults_BadgeLoot_C::BadgeQueue' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, DelayBetweenBadgeIntros) == 0x0002E8, "Member 'UResults_BadgeLoot_C::DelayBetweenBadgeIntros' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, DelayBetweenIntroAndAddBadges) == 0x0002EC, "Member 'UResults_BadgeLoot_C::DelayBetweenIntroAndAddBadges' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, BadgeAnimationQueue) == 0x0002F0, "Member 'UResults_BadgeLoot_C::BadgeAnimationQueue' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, DelayBetweenAddingBadges) == 0x000300, "Member 'UResults_BadgeLoot_C::DelayBetweenAddingBadges' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, DelayBetweenAddingBadgesAndZoomIn) == 0x000304, "Member 'UResults_BadgeLoot_C::DelayBetweenAddingBadgesAndZoomIn' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, DelayBetween3DChestIntroAndBadgesIntro) == 0x000308, "Member 'UResults_BadgeLoot_C::DelayBetween3DChestIntroAndBadgesIntro' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, DelayBetweenOutroAndFinish) == 0x00030C, "Member 'UResults_BadgeLoot_C::DelayBetweenOutroAndFinish' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, PlayRate) == 0x000310, "Member 'UResults_BadgeLoot_C::PlayRate' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, bSkippedToEnd) == 0x000314, "Member 'UResults_BadgeLoot_C::bSkippedToEnd' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, bSkippingToEnd) == 0x000315, "Member 'UResults_BadgeLoot_C::bSkippingToEnd' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, bWaitingFor3DChestProgression) == 0x000316, "Member 'UResults_BadgeLoot_C::bWaitingFor3DChestProgression' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, bCanSkipToEnd) == 0x000317, "Member 'UResults_BadgeLoot_C::bCanSkipToEnd' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, ChestLootUpgrade) == 0x000318, "Member 'UResults_BadgeLoot_C::ChestLootUpgrade' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, ChestSlide) == 0x000320, "Member 'UResults_BadgeLoot_C::ChestSlide' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, ChestReward) == 0x000328, "Member 'UResults_BadgeLoot_C::ChestReward' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, FinalChestReward) == 0x000330, "Member 'UResults_BadgeLoot_C::FinalChestReward' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, ChestDisappear) == 0x000338, "Member 'UResults_BadgeLoot_C::ChestDisappear' has a wrong offset!");
static_assert(offsetof(UResults_BadgeLoot_C, OpenChestLoot) == 0x000340, "Member 'UResults_BadgeLoot_C::OpenChestLoot' has a wrong offset!");

}

