#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Results_BonusXpType

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Results_BonusXpType.Results_BonusXpType_C.ExecuteUbergraph_Results_BonusXpType
// 0x0018 (0x0018 - 0x0000)
struct Results_BonusXpType_C_ExecuteUbergraph_Results_BonusXpType final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue2;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Results_BonusXpType_C_ExecuteUbergraph_Results_BonusXpType) == 0x000008, "Wrong alignment on Results_BonusXpType_C_ExecuteUbergraph_Results_BonusXpType");
static_assert(sizeof(Results_BonusXpType_C_ExecuteUbergraph_Results_BonusXpType) == 0x000018, "Wrong size on Results_BonusXpType_C_ExecuteUbergraph_Results_BonusXpType");
static_assert(offsetof(Results_BonusXpType_C_ExecuteUbergraph_Results_BonusXpType, EntryPoint) == 0x000000, "Member 'Results_BonusXpType_C_ExecuteUbergraph_Results_BonusXpType::EntryPoint' has a wrong offset!");
static_assert(offsetof(Results_BonusXpType_C_ExecuteUbergraph_Results_BonusXpType, K2Node_Event_IsDesignTime) == 0x000004, "Member 'Results_BonusXpType_C_ExecuteUbergraph_Results_BonusXpType::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Results_BonusXpType_C_ExecuteUbergraph_Results_BonusXpType, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'Results_BonusXpType_C_ExecuteUbergraph_Results_BonusXpType::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(Results_BonusXpType_C_ExecuteUbergraph_Results_BonusXpType, CallFunc_GetDynamicMaterial_ReturnValue2) == 0x000010, "Member 'Results_BonusXpType_C_ExecuteUbergraph_Results_BonusXpType::CallFunc_GetDynamicMaterial_ReturnValue2' has a wrong offset!");

// Function Results_BonusXpType.Results_BonusXpType_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Results_BonusXpType_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Results_BonusXpType_C_PreConstruct) == 0x000001, "Wrong alignment on Results_BonusXpType_C_PreConstruct");
static_assert(sizeof(Results_BonusXpType_C_PreConstruct) == 0x000001, "Wrong size on Results_BonusXpType_C_PreConstruct");
static_assert(offsetof(Results_BonusXpType_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Results_BonusXpType_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Results_BonusXpType.Results_BonusXpType_C.setInformation
// 0x00A0 (0x00A0 - 0x0000)
struct Results_BonusXpType_C_SetInformation final
{
public:
	int32                                         InXPAmount;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   PlayerName;                                        // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FName                                   InType;                                            // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Type;                                              // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Source_Player_Name;                                // 0x0030(0x0018)(Edit, BlueprintVisible)
	int32                                         XPAmount;                                          // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Bonus_Type;                                        // 0x004C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TypeBackground;                                    // 0x0050(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   TypeText;                                          // 0x0060(0x0018)(Edit, BlueprintVisible)
	struct FVector2D                              TypeScale;                                         // 0x0078(0x0008)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0088(0x0018)()
};
static_assert(alignof(Results_BonusXpType_C_SetInformation) == 0x000008, "Wrong alignment on Results_BonusXpType_C_SetInformation");
static_assert(sizeof(Results_BonusXpType_C_SetInformation) == 0x0000A0, "Wrong size on Results_BonusXpType_C_SetInformation");
static_assert(offsetof(Results_BonusXpType_C_SetInformation, InXPAmount) == 0x000000, "Member 'Results_BonusXpType_C_SetInformation::InXPAmount' has a wrong offset!");
static_assert(offsetof(Results_BonusXpType_C_SetInformation, PlayerName) == 0x000008, "Member 'Results_BonusXpType_C_SetInformation::PlayerName' has a wrong offset!");
static_assert(offsetof(Results_BonusXpType_C_SetInformation, InType) == 0x000020, "Member 'Results_BonusXpType_C_SetInformation::InType' has a wrong offset!");
static_assert(offsetof(Results_BonusXpType_C_SetInformation, Type) == 0x000028, "Member 'Results_BonusXpType_C_SetInformation::Type' has a wrong offset!");
static_assert(offsetof(Results_BonusXpType_C_SetInformation, Source_Player_Name) == 0x000030, "Member 'Results_BonusXpType_C_SetInformation::Source_Player_Name' has a wrong offset!");
static_assert(offsetof(Results_BonusXpType_C_SetInformation, XPAmount) == 0x000048, "Member 'Results_BonusXpType_C_SetInformation::XPAmount' has a wrong offset!");
static_assert(offsetof(Results_BonusXpType_C_SetInformation, Bonus_Type) == 0x00004C, "Member 'Results_BonusXpType_C_SetInformation::Bonus_Type' has a wrong offset!");
static_assert(offsetof(Results_BonusXpType_C_SetInformation, TypeBackground) == 0x000050, "Member 'Results_BonusXpType_C_SetInformation::TypeBackground' has a wrong offset!");
static_assert(offsetof(Results_BonusXpType_C_SetInformation, TypeText) == 0x000060, "Member 'Results_BonusXpType_C_SetInformation::TypeText' has a wrong offset!");
static_assert(offsetof(Results_BonusXpType_C_SetInformation, TypeScale) == 0x000078, "Member 'Results_BonusXpType_C_SetInformation::TypeScale' has a wrong offset!");
static_assert(offsetof(Results_BonusXpType_C_SetInformation, K2Node_SwitchName_CmpSuccess) == 0x000080, "Member 'Results_BonusXpType_C_SetInformation::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Results_BonusXpType_C_SetInformation, CallFunc_Conv_IntToText_ReturnValue) == 0x000088, "Member 'Results_BonusXpType_C_SetInformation::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

}

