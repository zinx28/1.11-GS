#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RewardsListWidget

#include "Basic.hpp"

#include "RewardsListWidget_classes.hpp"
#include "RewardsListWidget_parameters.hpp"


namespace SDK
{

// Function RewardsListWidget.RewardsListWidget_C.PopulateRewards
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FFortItemInstanceQuantityPair>Rewards                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
// TArray<struct FFortItemInstanceQuantityPair>SelectableRewards                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)

void URewardsListWidget_C::PopulateRewards(TArray<struct FFortItemInstanceQuantityPair>& Rewards, TArray<struct FFortItemInstanceQuantityPair>& SelectableRewards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsListWidget_C", "PopulateRewards");

	Params::RewardsListWidget_C_PopulateRewards Parms{};

	Parms.Rewards = std::move(Rewards);
	Parms.SelectableRewards = std::move(SelectableRewards);

	UObject::ProcessEvent(Func, &Parms);

	Rewards = std::move(Parms.Rewards);
	SelectableRewards = std::move(Parms.SelectableRewards);
}


// Function RewardsListWidget.RewardsListWidget_C.PresentNextReward
// (Public, BlueprintCallable, BlueprintEvent)

void URewardsListWidget_C::PresentNextReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsListWidget_C", "PresentNextReward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardsListWidget.RewardsListWidget_C.CreateReward
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFortItemInstanceQuantityPair    FortItemInstanceQuantityPair                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// bool                                    Selectable                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URewardsListWidget_C::CreateReward(struct FFortItemInstanceQuantityPair& FortItemInstanceQuantityPair, bool Selectable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsListWidget_C", "CreateReward");

	Params::RewardsListWidget_C_CreateReward Parms{};

	Parms.FortItemInstanceQuantityPair = std::move(FortItemInstanceQuantityPair);
	Parms.Selectable = Selectable;

	UObject::ProcessEvent(Func, &Parms);

	FortItemInstanceQuantityPair = std::move(Parms.FortItemInstanceQuantityPair);
}


// Function RewardsListWidget.RewardsListWidget_C.CreateRewardWrapper
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UHomeScreenQuestRewardItem_C*     Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             DisplayName                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// class UFrontEndRewardWrapperWidget_C*   OutputPin                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URewardsListWidget_C::CreateRewardWrapper(class UHomeScreenQuestRewardItem_C* Item, const class FText& DisplayName, class UFrontEndRewardWrapperWidget_C** OutputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsListWidget_C", "CreateRewardWrapper");

	Params::RewardsListWidget_C_CreateRewardWrapper Parms{};

	Parms.Item = Item;
	Parms.DisplayName = std::move(DisplayName);

	UObject::ProcessEvent(Func, &Parms);

	if (OutputPin != nullptr)
		*OutputPin = Parms.OutputPin;
}


// Function RewardsListWidget.RewardsListWidget_C.PresentAllRewards
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void URewardsListWidget_C::PresentAllRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardsListWidget_C", "PresentAllRewards");

	UObject::ProcessEvent(Func, nullptr);
}

}

