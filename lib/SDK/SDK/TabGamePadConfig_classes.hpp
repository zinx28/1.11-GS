#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TabGamePadConfig

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "CommonUI_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass TabGamePadConfig.TabGamePadConfig_C
// 0x0048 (0x02A8 - 0x0260)
class UTabGamePadConfig_C final : public UFortGameOptions
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(Transient, DuplicateTransient)
	class URotatorSelector_C*                     ControllerPlatformConfig;                          // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URotatorSelector_C*                     GamepadConfig;                                     // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGamepadMappingInfo_C*                  GamepadMappingInfo;                                // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxControllerPlatform;                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsCombatMode;                                      // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         InputPresets;                                      // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         ControllerPlatformMappingIndex;                    // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ControllerConfiguration;                           // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TabGamePadConfig(int32 EntryPoint);
	void ControllerPlatformConfigChanged(int32 Selected_Index);
	void UpdateOptionsTab();
	void Gamepad_Config_Changed(int32 Selected_Index);
	void CenterOnTab();
	void Configuration_Changed(int32 Selected_Index);
	void Construct();
	void Initialize_Data();
	void Update_Data();
	void Handle_Mode_Toggled();
	void HandleGamepadMappingInfoChange();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TabGamePadConfig_C">();
	}
	static class UTabGamePadConfig_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTabGamePadConfig_C>();
	}
};
static_assert(alignof(UTabGamePadConfig_C) == 0x000008, "Wrong alignment on UTabGamePadConfig_C");
static_assert(sizeof(UTabGamePadConfig_C) == 0x0002A8, "Wrong size on UTabGamePadConfig_C");
static_assert(offsetof(UTabGamePadConfig_C, UberGraphFrame) == 0x000260, "Member 'UTabGamePadConfig_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_C, ControllerPlatformConfig) == 0x000268, "Member 'UTabGamePadConfig_C::ControllerPlatformConfig' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_C, GamepadConfig) == 0x000270, "Member 'UTabGamePadConfig_C::GamepadConfig' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_C, GamepadMappingInfo) == 0x000278, "Member 'UTabGamePadConfig_C::GamepadMappingInfo' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_C, SizeBoxControllerPlatform) == 0x000280, "Member 'UTabGamePadConfig_C::SizeBoxControllerPlatform' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_C, IsCombatMode) == 0x000288, "Member 'UTabGamePadConfig_C::IsCombatMode' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_C, InputPresets) == 0x000290, "Member 'UTabGamePadConfig_C::InputPresets' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_C, ControllerPlatformMappingIndex) == 0x0002A0, "Member 'UTabGamePadConfig_C::ControllerPlatformMappingIndex' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_C, ControllerConfiguration) == 0x0002A4, "Member 'UTabGamePadConfig_C::ControllerConfiguration' has a wrong offset!");

}

