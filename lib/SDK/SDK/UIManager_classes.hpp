#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UIManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UIManager.UIManager_C
// 0x00B8 (0x0488 - 0x03D0)
class UUIManager_C final : public UFortUIManagerWidget_NUI
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03D0(0x0008)(Transient, DuplicateTransient)
	class UNamedSlot*                             Confirmation_Layer;                                // 0x03D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             ControllerDisconnectedLayer;                       // 0x03E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Error_Layer;                                       // 0x03E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       GlobalInvalidationBox;                             // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Modal_Layer;                                       // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UQuestTalkingHeadWidget_C*              QuestTalkingHeadWidget;                            // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             State_Content_Layer;                               // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             TalkingHeadLayer;                                  // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UToastDisplayArea_C*                    ToastDisplayArea;                                  // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             ToastDisplayLayer;                                 // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Tutorial_Layer;                                    // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTutorialOverlay_C*                     TutorialOverlay;                                   // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActivatablePanel*                CurrentModalWidget;                                // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UCommonActivatablePanel*>        ModalQueue;                                        // 0x0440(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FFortDialogDescription_NUI>     ConfirmationQueue;                                 // 0x0450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference)
	class UConfirmationWindow_C*                  ConfirmationWindow;                                // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UErrorWindow_C*                         ErrorWindow;                                       // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWebPurchase_C*                         WebPurchaseWindow;                                 // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UProgressModalWidget_C*                 ControllerDisconnectedModal;                       // 0x0478(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bClosingConfirmation;                              // 0x0480(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bClosingErrorDialog;                               // 0x0481(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bShouldTriggerCameraModeOnClose;                   // 0x0482(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_UIManager(int32 EntryPoint);
	void CloseErrorWindow();
	void CloseConfirmationWindow();
	void PopActivatablePanelInModalLayer(const class UCommonActivatablePanel* Panel);
	void OnStateEnded();
	void QueueActivatablePanelIntoModalLayer(const class UCommonActivatablePanel* Panel);
	void UpdateStateWidgetContent(class UFortUIStateWidget_NUI* StateWidget);
	void OnShowConfirmation_NUI(const struct FFortDialogDescription_NUI& Description);
	void Construct();
	void DebugToggleInvalidationPanel();
	void DisplayErrorDialog(const struct FFortErrorInfo& Info);
	void KillConfirmation();
	void Destruct();
	void OnStateStarted();
	void DisplayStateContent(bool bDisplay);
	void ClearLayers();
	void PopCurrentModal();
	void QueueModalPanel(class UCommonActivatablePanel* ActivatablePanel);
	void ShowNextModalWidget();
	void BindDelegates();
	bool IsStateContentChildShowing();
	void HandleModalContentCleared();
	void HandleDeactivatedPanelConfirmationLayer(class UCommonActivatablePanel* DeactivatedPanel);
	void ShowNextConfirmation();
	void QueueConfirmation(const struct FFortDialogDescription_NUI& ConfirmationDescription);
	void Initialize();
	void AddActivatablePanelToModalLayer(class UCommonActivatablePanel* ActivatablePanel);
	void HandleDeactivatedPanelModalLayer(class UCommonActivatablePanel* DeactivatedPanel);
	void ShowErrorInErrorWindow(const struct FFortErrorInfo& ErrorInfo);
	void HandleDeactivatedErrorWindow(class UCommonActivatablePanel* DeactivatedPanel);
	void DisplayWebPurchase(class UWidget* WebWidget, const class FString& OfferId);
	void DismissWebPurchase();
	bool IsConsole();
	void OnEndLatentWaitForConfirmationDialog(struct FFortDialogExternalLatentActionHandle& WaitingDialogHandle);
	void HandleControllerConnectionChanged(bool bConnected);
	void HandleStateContentUpdated(class UFortUIStateWidget_NUI* NewStateWidget);
	void PopModalPanel(class UCommonActivatablePanel* ActivatablePanel);
	void RemoveModalPanel(class UCommonActivatablePanel* Panel);
	void ClearConfirmationLayer();
	void SafeTriggerCameraMode();
	void SafeTriggerCursorMode();
	bool IsShowingModalsConfirmationsErrors();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UIManager_C">();
	}
	static class UUIManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUIManager_C>();
	}
};
static_assert(alignof(UUIManager_C) == 0x000008, "Wrong alignment on UUIManager_C");
static_assert(sizeof(UUIManager_C) == 0x000488, "Wrong size on UUIManager_C");
static_assert(offsetof(UUIManager_C, UberGraphFrame) == 0x0003D0, "Member 'UUIManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUIManager_C, Confirmation_Layer) == 0x0003D8, "Member 'UUIManager_C::Confirmation_Layer' has a wrong offset!");
static_assert(offsetof(UUIManager_C, ControllerDisconnectedLayer) == 0x0003E0, "Member 'UUIManager_C::ControllerDisconnectedLayer' has a wrong offset!");
static_assert(offsetof(UUIManager_C, Error_Layer) == 0x0003E8, "Member 'UUIManager_C::Error_Layer' has a wrong offset!");
static_assert(offsetof(UUIManager_C, GlobalInvalidationBox) == 0x0003F0, "Member 'UUIManager_C::GlobalInvalidationBox' has a wrong offset!");
static_assert(offsetof(UUIManager_C, Modal_Layer) == 0x0003F8, "Member 'UUIManager_C::Modal_Layer' has a wrong offset!");
static_assert(offsetof(UUIManager_C, QuestTalkingHeadWidget) == 0x000400, "Member 'UUIManager_C::QuestTalkingHeadWidget' has a wrong offset!");
static_assert(offsetof(UUIManager_C, State_Content_Layer) == 0x000408, "Member 'UUIManager_C::State_Content_Layer' has a wrong offset!");
static_assert(offsetof(UUIManager_C, TalkingHeadLayer) == 0x000410, "Member 'UUIManager_C::TalkingHeadLayer' has a wrong offset!");
static_assert(offsetof(UUIManager_C, ToastDisplayArea) == 0x000418, "Member 'UUIManager_C::ToastDisplayArea' has a wrong offset!");
static_assert(offsetof(UUIManager_C, ToastDisplayLayer) == 0x000420, "Member 'UUIManager_C::ToastDisplayLayer' has a wrong offset!");
static_assert(offsetof(UUIManager_C, Tutorial_Layer) == 0x000428, "Member 'UUIManager_C::Tutorial_Layer' has a wrong offset!");
static_assert(offsetof(UUIManager_C, TutorialOverlay) == 0x000430, "Member 'UUIManager_C::TutorialOverlay' has a wrong offset!");
static_assert(offsetof(UUIManager_C, CurrentModalWidget) == 0x000438, "Member 'UUIManager_C::CurrentModalWidget' has a wrong offset!");
static_assert(offsetof(UUIManager_C, ModalQueue) == 0x000440, "Member 'UUIManager_C::ModalQueue' has a wrong offset!");
static_assert(offsetof(UUIManager_C, ConfirmationQueue) == 0x000450, "Member 'UUIManager_C::ConfirmationQueue' has a wrong offset!");
static_assert(offsetof(UUIManager_C, ConfirmationWindow) == 0x000460, "Member 'UUIManager_C::ConfirmationWindow' has a wrong offset!");
static_assert(offsetof(UUIManager_C, ErrorWindow) == 0x000468, "Member 'UUIManager_C::ErrorWindow' has a wrong offset!");
static_assert(offsetof(UUIManager_C, WebPurchaseWindow) == 0x000470, "Member 'UUIManager_C::WebPurchaseWindow' has a wrong offset!");
static_assert(offsetof(UUIManager_C, ControllerDisconnectedModal) == 0x000478, "Member 'UUIManager_C::ControllerDisconnectedModal' has a wrong offset!");
static_assert(offsetof(UUIManager_C, bClosingConfirmation) == 0x000480, "Member 'UUIManager_C::bClosingConfirmation' has a wrong offset!");
static_assert(offsetof(UUIManager_C, bClosingErrorDialog) == 0x000481, "Member 'UUIManager_C::bClosingErrorDialog' has a wrong offset!");
static_assert(offsetof(UUIManager_C, bShouldTriggerCameraModeOnClose) == 0x000482, "Member 'UUIManager_C::bShouldTriggerCameraModeOnClose' has a wrong offset!");

}

