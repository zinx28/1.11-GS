#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: XpBar

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function XpBar.XpBar_C.ExecuteUbergraph_XpBar
// 0x00B8 (0x00B8 - 0x0000)
struct XpBar_C_ExecuteUbergraph_XpBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortPublicAccountInfo                 CallFunc_GetCurrentlyViewedAccountInfo_Result;     // 0x0010(0x0034)(NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 BoostAmount)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue2;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortPublicAccountInfo                 K2Node_CustomEvent_NewInfo;                        // 0x0060(0x0034)(NoDestructor)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FFortPublicAccountInfo& NewInfo)> K2Node_CreateDelegate_OutputDelegate2;             // 0x00A0(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         K2Node_CustomEvent_BoostAmount;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(XpBar_C_ExecuteUbergraph_XpBar) == 0x000008, "Wrong alignment on XpBar_C_ExecuteUbergraph_XpBar");
static_assert(sizeof(XpBar_C_ExecuteUbergraph_XpBar) == 0x0000B8, "Wrong size on XpBar_C_ExecuteUbergraph_XpBar");
static_assert(offsetof(XpBar_C_ExecuteUbergraph_XpBar, EntryPoint) == 0x000000, "Member 'XpBar_C_ExecuteUbergraph_XpBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(XpBar_C_ExecuteUbergraph_XpBar, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'XpBar_C_ExecuteUbergraph_XpBar::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_ExecuteUbergraph_XpBar, CallFunc_GetCurrentlyViewedAccountInfo_Result) == 0x000010, "Member 'XpBar_C_ExecuteUbergraph_XpBar::CallFunc_GetCurrentlyViewedAccountInfo_Result' has a wrong offset!");
static_assert(offsetof(XpBar_C_ExecuteUbergraph_XpBar, K2Node_CreateDelegate_OutputDelegate) == 0x000048, "Member 'XpBar_C_ExecuteUbergraph_XpBar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(XpBar_C_ExecuteUbergraph_XpBar, CallFunc_GetContext_ReturnValue2) == 0x000058, "Member 'XpBar_C_ExecuteUbergraph_XpBar::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(XpBar_C_ExecuteUbergraph_XpBar, K2Node_CustomEvent_NewInfo) == 0x000060, "Member 'XpBar_C_ExecuteUbergraph_XpBar::K2Node_CustomEvent_NewInfo' has a wrong offset!");
static_assert(offsetof(XpBar_C_ExecuteUbergraph_XpBar, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000098, "Member 'XpBar_C_ExecuteUbergraph_XpBar::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_ExecuteUbergraph_XpBar, K2Node_CreateDelegate_OutputDelegate2) == 0x0000A0, "Member 'XpBar_C_ExecuteUbergraph_XpBar::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(XpBar_C_ExecuteUbergraph_XpBar, K2Node_CustomEvent_BoostAmount) == 0x0000B0, "Member 'XpBar_C_ExecuteUbergraph_XpBar::K2Node_CustomEvent_BoostAmount' has a wrong offset!");

// Function XpBar.XpBar_C.Xp Boost Changed
// 0x0004 (0x0004 - 0x0000)
struct XpBar_C_Xp_Boost_Changed final
{
public:
	int32                                         BoostAmount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(XpBar_C_Xp_Boost_Changed) == 0x000004, "Wrong alignment on XpBar_C_Xp_Boost_Changed");
static_assert(sizeof(XpBar_C_Xp_Boost_Changed) == 0x000004, "Wrong size on XpBar_C_Xp_Boost_Changed");
static_assert(offsetof(XpBar_C_Xp_Boost_Changed, BoostAmount) == 0x000000, "Member 'XpBar_C_Xp_Boost_Changed::BoostAmount' has a wrong offset!");

// Function XpBar.XpBar_C.Account Info Changed
// 0x0034 (0x0034 - 0x0000)
struct XpBar_C_Account_Info_Changed final
{
public:
	struct FFortPublicAccountInfo                 NewInfo;                                           // 0x0000(0x0034)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(XpBar_C_Account_Info_Changed) == 0x000004, "Wrong alignment on XpBar_C_Account_Info_Changed");
static_assert(sizeof(XpBar_C_Account_Info_Changed) == 0x000034, "Wrong size on XpBar_C_Account_Info_Changed");
static_assert(offsetof(XpBar_C_Account_Info_Changed, NewInfo) == 0x000000, "Member 'XpBar_C_Account_Info_Changed::NewInfo' has a wrong offset!");

// Function XpBar.XpBar_C.Update Xp Bar
// 0x0090 (0x0090 - 0x0000)
struct XpBar_C_Update_Xp_Bar final
{
public:
	struct FFortPublicAccountInfo                 Account_Info;                                      // 0x0000(0x0034)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ScaledCommanderBalance_ReturnValue;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetXpBoostBalance_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue2;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRestXpBalance_ReturnValue;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue2;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue3;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue4;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(XpBar_C_Update_Xp_Bar) == 0x000008, "Wrong alignment on XpBar_C_Update_Xp_Bar");
static_assert(sizeof(XpBar_C_Update_Xp_Bar) == 0x000090, "Wrong size on XpBar_C_Update_Xp_Bar");
static_assert(offsetof(XpBar_C_Update_Xp_Bar, Account_Info) == 0x000000, "Member 'XpBar_C_Update_Xp_Bar::Account_Info' has a wrong offset!");
static_assert(offsetof(XpBar_C_Update_Xp_Bar, CallFunc_MakeLiteralName_ReturnValue) == 0x000038, "Member 'XpBar_C_Update_Xp_Bar::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_Update_Xp_Bar, CallFunc_ScaledCommanderBalance_ReturnValue) == 0x000040, "Member 'XpBar_C_Update_Xp_Bar::CallFunc_ScaledCommanderBalance_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_Update_Xp_Bar, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'XpBar_C_Update_Xp_Bar::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_Update_Xp_Bar, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000045, "Member 'XpBar_C_Update_Xp_Bar::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_Update_Xp_Bar, CallFunc_GetContext_ReturnValue) == 0x000048, "Member 'XpBar_C_Update_Xp_Bar::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_Update_Xp_Bar, CallFunc_GetXpBoostBalance_ReturnValue) == 0x000050, "Member 'XpBar_C_Update_Xp_Bar::CallFunc_GetXpBoostBalance_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_Update_Xp_Bar, CallFunc_GetContext_ReturnValue2) == 0x000058, "Member 'XpBar_C_Update_Xp_Bar::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(XpBar_C_Update_Xp_Bar, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000060, "Member 'XpBar_C_Update_Xp_Bar::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_Update_Xp_Bar, CallFunc_GetRestXpBalance_ReturnValue) == 0x000064, "Member 'XpBar_C_Update_Xp_Bar::CallFunc_GetRestXpBalance_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_Update_Xp_Bar, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000068, "Member 'XpBar_C_Update_Xp_Bar::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_Update_Xp_Bar, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x00006C, "Member 'XpBar_C_Update_Xp_Bar::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(XpBar_C_Update_Xp_Bar, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x000070, "Member 'XpBar_C_Update_Xp_Bar::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(XpBar_C_Update_Xp_Bar, CallFunc_MakeLiteralName_ReturnValue2) == 0x000078, "Member 'XpBar_C_Update_Xp_Bar::CallFunc_MakeLiteralName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(XpBar_C_Update_Xp_Bar, CallFunc_MakeLiteralName_ReturnValue3) == 0x000080, "Member 'XpBar_C_Update_Xp_Bar::CallFunc_MakeLiteralName_ReturnValue3' has a wrong offset!");
static_assert(offsetof(XpBar_C_Update_Xp_Bar, CallFunc_MakeLiteralName_ReturnValue4) == 0x000088, "Member 'XpBar_C_Update_Xp_Bar::CallFunc_MakeLiteralName_ReturnValue4' has a wrong offset!");

// Function XpBar.XpBar_C.GetExperienceToolTipWidget
// 0x02E8 (0x02E8 - 0x0000)
struct XpBar_C_GetExperienceToolTipWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         XPToLevel;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentXP;                                         // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonUIContext*                       CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortFrontEndContext*                   CallFunc_GetContext_ReturnValue2;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingGamepad_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue3;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortPublicAccountInfo                 CallFunc_GetCurrentlyViewedAccountInfo_Result;     // 0x0030(0x0034)(NoDestructor)
	int32                                         CallFunc_ScaledRestBalance_ReturnValue;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0018)()
	TArray<struct FFortItemQuantityPair>          CallFunc_GetAccountLevelUpRewards_Rewards;         // 0x00D8(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_ScaledBoostBalance_ReturnValue;           // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortItemQuantityPair                  CallFunc_Array_Get_Item;                           // 0x00F0(0x0030)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x0120(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array2;                           // 0x0160(0x0010)(ZeroConstructor, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData3;             // 0x0170(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue2;                      // 0x01B0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array3;                           // 0x01C8(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue3;                      // 0x01E0(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0200(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData4;             // 0x0218(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData5;             // 0x0258(0x0040)(HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array4;                           // 0x02A0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x02B0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue4;                      // 0x02C8(0x0018)()
	class UCommonUserWidget*                      CallFunc_CreateXPTooltip_Out;                      // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(XpBar_C_GetExperienceToolTipWidget) == 0x000008, "Wrong alignment on XpBar_C_GetExperienceToolTipWidget");
static_assert(sizeof(XpBar_C_GetExperienceToolTipWidget) == 0x0002E8, "Wrong size on XpBar_C_GetExperienceToolTipWidget");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, ReturnValue) == 0x000000, "Member 'XpBar_C_GetExperienceToolTipWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, XPToLevel) == 0x000008, "Member 'XpBar_C_GetExperienceToolTipWidget::XPToLevel' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CurrentXP) == 0x00000C, "Member 'XpBar_C_GetExperienceToolTipWidget::CurrentXP' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'XpBar_C_GetExperienceToolTipWidget::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CallFunc_GetContext_ReturnValue2) == 0x000018, "Member 'XpBar_C_GetExperienceToolTipWidget::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CallFunc_IsUsingGamepad_ReturnValue) == 0x000020, "Member 'XpBar_C_GetExperienceToolTipWidget::CallFunc_IsUsingGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CallFunc_GetContext_ReturnValue3) == 0x000028, "Member 'XpBar_C_GetExperienceToolTipWidget::CallFunc_GetContext_ReturnValue3' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CallFunc_GetCurrentlyViewedAccountInfo_Result) == 0x000030, "Member 'XpBar_C_GetExperienceToolTipWidget::CallFunc_GetCurrentlyViewedAccountInfo_Result' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CallFunc_ScaledRestBalance_ReturnValue) == 0x000064, "Member 'XpBar_C_GetExperienceToolTipWidget::CallFunc_ScaledRestBalance_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'XpBar_C_GetExperienceToolTipWidget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, K2Node_MakeArray_Array) == 0x0000A8, "Member 'XpBar_C_GetExperienceToolTipWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'XpBar_C_GetExperienceToolTipWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'XpBar_C_GetExperienceToolTipWidget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CallFunc_GetAccountLevelUpRewards_Rewards) == 0x0000D8, "Member 'XpBar_C_GetExperienceToolTipWidget::CallFunc_GetAccountLevelUpRewards_Rewards' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CallFunc_ScaledBoostBalance_ReturnValue) == 0x0000E8, "Member 'XpBar_C_GetExperienceToolTipWidget::CallFunc_ScaledBoostBalance_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'XpBar_C_GetExperienceToolTipWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, K2Node_MakeStruct_FormatArgumentData2) == 0x000120, "Member 'XpBar_C_GetExperienceToolTipWidget::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, K2Node_MakeArray_Array2) == 0x000160, "Member 'XpBar_C_GetExperienceToolTipWidget::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, K2Node_MakeStruct_FormatArgumentData3) == 0x000170, "Member 'XpBar_C_GetExperienceToolTipWidget::K2Node_MakeStruct_FormatArgumentData3' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CallFunc_Format_ReturnValue2) == 0x0001B0, "Member 'XpBar_C_GetExperienceToolTipWidget::CallFunc_Format_ReturnValue2' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, K2Node_MakeArray_Array3) == 0x0001C8, "Member 'XpBar_C_GetExperienceToolTipWidget::K2Node_MakeArray_Array3' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CallFunc_Array_Length_ReturnValue) == 0x0001D8, "Member 'XpBar_C_GetExperienceToolTipWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CallFunc_Format_ReturnValue3) == 0x0001E0, "Member 'XpBar_C_GetExperienceToolTipWidget::CallFunc_Format_ReturnValue3' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CallFunc_Greater_IntInt_ReturnValue) == 0x0001F8, "Member 'XpBar_C_GetExperienceToolTipWidget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CallFunc_Conv_IntToText_ReturnValue) == 0x000200, "Member 'XpBar_C_GetExperienceToolTipWidget::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, K2Node_MakeStruct_FormatArgumentData4) == 0x000218, "Member 'XpBar_C_GetExperienceToolTipWidget::K2Node_MakeStruct_FormatArgumentData4' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, K2Node_MakeStruct_FormatArgumentData5) == 0x000258, "Member 'XpBar_C_GetExperienceToolTipWidget::K2Node_MakeStruct_FormatArgumentData5' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000298, "Member 'XpBar_C_GetExperienceToolTipWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, K2Node_MakeArray_Array4) == 0x0002A0, "Member 'XpBar_C_GetExperienceToolTipWidget::K2Node_MakeArray_Array4' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CallFunc_MakeLiteralText_ReturnValue) == 0x0002B0, "Member 'XpBar_C_GetExperienceToolTipWidget::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CallFunc_Format_ReturnValue4) == 0x0002C8, "Member 'XpBar_C_GetExperienceToolTipWidget::CallFunc_Format_ReturnValue4' has a wrong offset!");
static_assert(offsetof(XpBar_C_GetExperienceToolTipWidget, CallFunc_CreateXPTooltip_Out) == 0x0002E0, "Member 'XpBar_C_GetExperienceToolTipWidget::CallFunc_CreateXPTooltip_Out' has a wrong offset!");

// Function XpBar.XpBar_C.ScaledBoostBalance
// 0x0030 (0x0030 - 0x0000)
struct XpBar_C_ScaledBoostBalance final
{
public:
	int32                                         AmountToLevel;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetXpBoostBalance_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(XpBar_C_ScaledBoostBalance) == 0x000008, "Wrong alignment on XpBar_C_ScaledBoostBalance");
static_assert(sizeof(XpBar_C_ScaledBoostBalance) == 0x000030, "Wrong size on XpBar_C_ScaledBoostBalance");
static_assert(offsetof(XpBar_C_ScaledBoostBalance, AmountToLevel) == 0x000000, "Member 'XpBar_C_ScaledBoostBalance::AmountToLevel' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledBoostBalance, ReturnValue) == 0x000004, "Member 'XpBar_C_ScaledBoostBalance::ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledBoostBalance, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'XpBar_C_ScaledBoostBalance::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledBoostBalance, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'XpBar_C_ScaledBoostBalance::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledBoostBalance, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000018, "Member 'XpBar_C_ScaledBoostBalance::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledBoostBalance, CallFunc_GetXpBoostBalance_ReturnValue) == 0x00001C, "Member 'XpBar_C_ScaledBoostBalance::CallFunc_GetXpBoostBalance_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledBoostBalance, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000020, "Member 'XpBar_C_ScaledBoostBalance::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledBoostBalance, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'XpBar_C_ScaledBoostBalance::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledBoostBalance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'XpBar_C_ScaledBoostBalance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledBoostBalance, CallFunc_FTrunc_ReturnValue) == 0x00002C, "Member 'XpBar_C_ScaledBoostBalance::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function XpBar.XpBar_C.ScaledRestBalance
// 0x0030 (0x0030 - 0x0000)
struct XpBar_C_ScaledRestBalance final
{
public:
	int32                                         AmountToLevel;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMcpContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRestXpBalance_ReturnValue;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(XpBar_C_ScaledRestBalance) == 0x000008, "Wrong alignment on XpBar_C_ScaledRestBalance");
static_assert(sizeof(XpBar_C_ScaledRestBalance) == 0x000030, "Wrong size on XpBar_C_ScaledRestBalance");
static_assert(offsetof(XpBar_C_ScaledRestBalance, AmountToLevel) == 0x000000, "Member 'XpBar_C_ScaledRestBalance::AmountToLevel' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledRestBalance, ReturnValue) == 0x000004, "Member 'XpBar_C_ScaledRestBalance::ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledRestBalance, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'XpBar_C_ScaledRestBalance::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledRestBalance, CallFunc_GetContext_ReturnValue) == 0x000010, "Member 'XpBar_C_ScaledRestBalance::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledRestBalance, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000018, "Member 'XpBar_C_ScaledRestBalance::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledRestBalance, CallFunc_GetRestXpBalance_ReturnValue) == 0x00001C, "Member 'XpBar_C_ScaledRestBalance::CallFunc_GetRestXpBalance_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledRestBalance, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000020, "Member 'XpBar_C_ScaledRestBalance::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledRestBalance, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'XpBar_C_ScaledRestBalance::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledRestBalance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'XpBar_C_ScaledRestBalance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledRestBalance, CallFunc_FTrunc_ReturnValue) == 0x00002C, "Member 'XpBar_C_ScaledRestBalance::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function XpBar.XpBar_C.ScaledCommanderBalance
// 0x0018 (0x0018 - 0x0000)
struct XpBar_C_ScaledCommanderBalance final
{
public:
	int32                                         LeveXP;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InInt2;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(XpBar_C_ScaledCommanderBalance) == 0x000004, "Wrong alignment on XpBar_C_ScaledCommanderBalance");
static_assert(sizeof(XpBar_C_ScaledCommanderBalance) == 0x000018, "Wrong size on XpBar_C_ScaledCommanderBalance");
static_assert(offsetof(XpBar_C_ScaledCommanderBalance, LeveXP) == 0x000000, "Member 'XpBar_C_ScaledCommanderBalance::LeveXP' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledCommanderBalance, InInt2) == 0x000004, "Member 'XpBar_C_ScaledCommanderBalance::InInt2' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledCommanderBalance, ReturnValue) == 0x000008, "Member 'XpBar_C_ScaledCommanderBalance::ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledCommanderBalance, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'XpBar_C_ScaledCommanderBalance::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledCommanderBalance, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000010, "Member 'XpBar_C_ScaledCommanderBalance::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(XpBar_C_ScaledCommanderBalance, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000014, "Member 'XpBar_C_ScaledCommanderBalance::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

}

